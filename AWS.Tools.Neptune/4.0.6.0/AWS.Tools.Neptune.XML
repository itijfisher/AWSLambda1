<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.Neptune</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.AddNPTResourceTagCmdlet">
            <summary>
            Adds metadata tags to an Amazon Neptune resource. These tags can also be used with
            cost allocation reporting to track cost associated with Amazon Neptune resources,
            or used in a Condition statement in an IAM policy for Amazon Neptune.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.AddNPTResourceTagCmdlet.ResourceName">
            <summary>
            <para>
            <para>The Amazon Neptune resource that the tags are added to. This value is an Amazon Resource
            Name (ARN). For information about creating an ARN, see <a href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
            Constructing an Amazon Resource Name (ARN)</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.AddNPTResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the Amazon Neptune resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.AddNPTResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.AddTagsToResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.AddNPTResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceName parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.AddNPTResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.AddNPTRoleToDBClusterCmdlet">
            <summary>
            Associates an Identity and Access Management (IAM) role from an Neptune DB cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.AddNPTRoleToDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The name of the DB cluster to associate the IAM role with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.AddNPTRoleToDBClusterCmdlet.RoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the IAM role to associate with the Neptune DB cluster,
            for example <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.AddNPTRoleToDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.AddRoleToDBClusterResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.AddNPTRoleToDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RoleArn parameter.
            The -PassThru parameter is deprecated, use -Select '^RoleArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.AddNPTRoleToDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.AddNPTSourceIdentifierToSubscriptionCmdlet">
            <summary>
            Adds a source identifier to an existing event notification subscription.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.AddNPTSourceIdentifierToSubscriptionCmdlet.SourceIdentifier">
            <summary>
            <para>
            <para>The identifier of the event source to be added.</para><para>Constraints:</para><ul><li><para>If the source type is a DB instance, then a <code>DBInstanceIdentifier</code> must
            be supplied.</para></li><li><para>If the source type is a DB security group, a <code>DBSecurityGroupName</code> must
            be supplied.</para></li><li><para>If the source type is a DB parameter group, a <code>DBParameterGroupName</code> must
            be supplied.</para></li><li><para>If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code> must be supplied.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.AddNPTSourceIdentifierToSubscriptionCmdlet.SubscriptionName">
            <summary>
            <para>
            <para>The name of the event notification subscription you want to add a source identifier
            to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.AddNPTSourceIdentifierToSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventSubscription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.AddSourceIdentifierToSubscriptionResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.AddSourceIdentifierToSubscriptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.AddNPTSourceIdentifierToSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.AddNPTSourceIdentifierToSubscriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.ConvertNPTReadReplicaDBClusterCmdlet">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.ConvertNPTReadReplicaDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>Not supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.ConvertNPTReadReplicaDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.PromoteReadReplicaDBClusterResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.PromoteReadReplicaDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.ConvertNPTReadReplicaDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.ConvertNPTReadReplicaDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBClusterParameterGroupCmdlet">
            <summary>
            Copies the specified DB cluster parameter group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBClusterParameterGroupCmdlet.SourceDBClusterParameterGroupIdentifier">
            <summary>
            <para>
            <para>The identifier or Amazon Resource Name (ARN) for the source DB cluster parameter group.
            For information about creating an ARN, see <a href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
            Constructing an Amazon Resource Name (ARN)</a>.</para><para>Constraints:</para><ul><li><para>Must specify a valid DB cluster parameter group.</para></li><li><para>If the source DB cluster parameter group is in the same AWS Region as the copy, specify
            a valid DB parameter group identifier, for example <code>my-db-cluster-param-group</code>,
            or a valid ARN.</para></li><li><para>If the source DB parameter group is in a different AWS Region than the copy, specify
            a valid DB cluster parameter group ARN, for example <code>arn:aws:rds:us-east-1:123456789012:cluster-pg:custom-cluster-group1</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBClusterParameterGroupCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the copied DB cluster parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBClusterParameterGroupCmdlet.TargetDBClusterParameterGroupDescription">
            <summary>
            <para>
            <para>A description for the copied DB cluster parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBClusterParameterGroupCmdlet.TargetDBClusterParameterGroupIdentifier">
            <summary>
            <para>
            <para>The identifier for the copied DB cluster parameter group.</para><para>Constraints:</para><ul><li><para>Cannot be null, empty, or blank</para></li><li><para>Must contain from 1 to 255 letters, numbers, or hyphens</para></li><li><para>First character must be a letter</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens</para></li></ul><para>Example: <code>my-cluster-param-group1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterParameterGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.CopyDBClusterParameterGroupResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.CopyDBClusterParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceDBClusterParameterGroupIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceDBClusterParameterGroupIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBClusterParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBClusterSnapshotCmdlet">
            <summary>
            Copies a snapshot of a DB cluster.
            
             
            <para>
            To copy a DB cluster snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code>
            must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBClusterSnapshotCmdlet.CopyTag">
            <summary>
            <para>
            <para>True to copy all tags from the source DB cluster snapshot to the target DB cluster
            snapshot, and otherwise false. The default is false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBClusterSnapshotCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS AWS KMS key ID for an encrypted DB cluster snapshot. The KMS key ID is the
            Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption
            key.</para><para>If you copy an encrypted DB cluster snapshot from your AWS account, you can specify
            a value for <code>KmsKeyId</code> to encrypt the copy with a new KMS encryption key.
            If you don't specify a value for <code>KmsKeyId</code>, then the copy of the DB cluster
            snapshot is encrypted with the same KMS key as the source DB cluster snapshot.</para><para>If you copy an encrypted DB cluster snapshot that is shared from another AWS account,
            then you must specify a value for <code>KmsKeyId</code>.</para><para> KMS encryption keys are specific to the AWS Region that they are created in, and
            you can't use encryption keys from one AWS Region in another AWS Region.</para><para>You cannot encrypt an unencrypted DB cluster snapshot when you copy it. If you try
            to copy an unencrypted DB cluster snapshot and specify a value for the KmsKeyId parameter,
            an error is returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBClusterSnapshotCmdlet.PreSignedUrl">
            <summary>
            <para>
            <para>Not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBClusterSnapshotCmdlet.SourceDBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier of the DB cluster snapshot to copy. This parameter is not case-sensitive.</para><para>You can't copy from one AWS Region to another.</para><para>Constraints:</para><ul><li><para>Must specify a valid system snapshot in the "available" state.</para></li><li><para>Specify a valid DB snapshot identifier.</para></li></ul><para>Example: <code>my-cluster-snapshot1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBClusterSnapshotCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to assign to the new DB cluster snapshot copy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBClusterSnapshotCmdlet.TargetDBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier of the new DB cluster snapshot to create from the source DB cluster
            snapshot. This parameter is not case-sensitive.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>my-cluster-snapshot2</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBClusterSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterSnapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.CopyDBClusterSnapshotResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.CopyDBClusterSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBClusterSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceDBClusterSnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceDBClusterSnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBClusterSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBParameterGroupCmdlet">
            <summary>
            Copies the specified DB parameter group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBParameterGroupCmdlet.SourceDBParameterGroupIdentifier">
            <summary>
            <para>
            <para>The identifier or ARN for the source DB parameter group. For information about creating
            an ARN, see <a href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
            Constructing an Amazon Resource Name (ARN)</a>.</para><para>Constraints:</para><ul><li><para>Must specify a valid DB parameter group.</para></li><li><para>Must specify a valid DB parameter group identifier, for example <code>my-db-param-group</code>,
            or a valid ARN.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBParameterGroupCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the copied DB parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBParameterGroupCmdlet.TargetDBParameterGroupDescription">
            <summary>
            <para>
            <para>A description for the copied DB parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBParameterGroupCmdlet.TargetDBParameterGroupIdentifier">
            <summary>
            <para>
            <para>The identifier for the copied DB parameter group.</para><para>Constraints:</para><ul><li><para>Cannot be null, empty, or blank.</para></li><li><para>Must contain from 1 to 255 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>my-db-parameter-group</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBParameterGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.CopyDBParameterGroupResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.CopyDBParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceDBParameterGroupIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceDBParameterGroupIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.CopyNPTDBParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterCmdlet">
            <summary>
            Modify a setting for a DB cluster. You can change one or more database configuration
            parameters by specifying these parameters and the new values in the request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterCmdlet.ApplyImmediately">
            <summary>
            <para>
            <para>A value that specifies whether the modifications in this request and any pending modifications
            are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code>
            setting for the DB cluster. If this parameter is set to <code>false</code>, changes
            to the DB cluster are applied during the next maintenance window.</para><para>The <code>ApplyImmediately</code> parameter only affects the <code>NewDBClusterIdentifier</code>
            and <code>MasterUserPassword</code> values. If you set the <code>ApplyImmediately</code>
            parameter value to false, then changes to the <code>NewDBClusterIdentifier</code>
            and <code>MasterUserPassword</code> values are applied during the next maintenance
            window. All other changes are applied immediately, regardless of the value of the
            <code>ApplyImmediately</code> parameter.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterCmdlet.BackupRetentionPeriod">
            <summary>
            <para>
            <para>The number of days for which automated backups are retained. You must specify a minimum
            value of 1.</para><para>Default: 1</para><para>Constraints:</para><ul><li><para>Must be a value from 1 to 35</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The DB cluster identifier for the cluster being modified. This parameter is not case-sensitive.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing DBCluster.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB cluster parameter group to use for the DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterCmdlet.DeletionProtection">
            <summary>
            <para>
            <para>A value that indicates whether the DB cluster has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterCmdlet.CloudwatchLogsExportConfiguration_DisableLogType">
            <summary>
            <para>
            <para>The list of log types to disable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterCmdlet.EnableIAMDatabaseAuthentication">
            <summary>
            <para>
            <para>True to enable mapping of AWS Identity and Access Management (IAM) accounts to database
            accounts, and otherwise false.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterCmdlet.CloudwatchLogsExportConfiguration_EnableLogType">
            <summary>
            <para>
            <para>The list of log types to enable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The version number of the database engine. Currently, setting this parameter has no
            effect. To upgrade your database engine to the most recent release, use the <a>ApplyPendingMaintenanceAction</a>
            API.</para><para>For a list of valid engine versions, see <a>CreateDBInstance</a>, or call <a>DescribeDBEngineVersions</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterCmdlet.MasterUserPassword">
            <summary>
            <para>
            <para>The new password for the master database user. This password can contain any printable
            ASCII character except "/", """, or "@".</para><para>Constraints: Must contain from 8 to 41 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterCmdlet.NewDBClusterIdentifier">
            <summary>
            <para>
            <para>The new DB cluster identifier for the DB cluster when renaming a DB cluster. This
            value is stored as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens</para></li><li><para>The first character must be a letter</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens</para></li></ul><para>Example: <code>my-cluster2</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterCmdlet.OptionGroupName">
            <summary>
            <para>
            <para><i>(Not supported by Neptune)</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterCmdlet.Port">
            <summary>
            <para>
            <para>The port number on which the DB cluster accepts connections.</para><para>Constraints: Value must be <code>1150-65535</code></para><para>Default: The same port as the original DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterCmdlet.PreferredBackupWindow">
            <summary>
            <para>
            <para>The daily time range during which automated backups are created if automated backups
            are enabled, using the <code>BackupRetentionPeriod</code> parameter.</para><para>The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region.</para><para>Constraints:</para><ul><li><para>Must be in the format <code>hh24:mi-hh24:mi</code>.</para></li><li><para>Must be in Universal Coordinated Time (UTC).</para></li><li><para>Must not conflict with the preferred maintenance window.</para></li><li><para>Must be at least 30 minutes.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>The weekly time range during which system maintenance can occur, in Universal Coordinated
            Time (UTC).</para><para>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code></para><para>The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region, occurring on a random day of the week.</para><para>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</para><para>Constraints: Minimum 30-minute window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of VPC security groups that the DB cluster will belong to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.ModifyDBClusterResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.ModifyDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterParameterGroupCmdlet">
            <summary>
            Modifies the parameters of a DB cluster parameter group. To modify more than one
            parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>,
            and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
            request.
            
             <note><para>
            Changes to dynamic parameters are applied immediately. Changes to static parameters
            require a reboot without failover to the DB cluster associated with the parameter
            group before the change can take effect.
            </para></note><important><para>
            After you create a DB cluster parameter group, you should wait at least 5 minutes
            before creating your first DB cluster that uses that DB cluster parameter group as
            the default parameter group. This allows Amazon Neptune to fully complete the create
            action before the parameter group is used as the default for a new DB cluster. This
            is especially important for parameters that are critical when creating the default
            database for a DB cluster, such as the character set for the default database defined
            by the <code>character_set_database</code> parameter. You can use the <i>Parameter
            Groups</i> option of the Amazon Neptune console or the <a>DescribeDBClusterParameters</a>
            command to verify that your DB cluster parameter group has been created or modified.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterParameterGroupCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB cluster parameter group to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterParameterGroupCmdlet.Parameter">
            <summary>
            <para>
            <para>A list of parameters in the DB cluster parameter group to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterParameterGroupName'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.ModifyDBClusterParameterGroupResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.ModifyDBClusterParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterSnapshotAttributeCmdlet">
            <summary>
            Adds an attribute and values to, or removes an attribute and values from, a manual
            DB cluster snapshot.
            
             
            <para>
            To share a manual DB cluster snapshot with other AWS accounts, specify <code>restore</code>
            as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to
            add a list of IDs of the AWS accounts that are authorized to restore the manual DB
            cluster snapshot. Use the value <code>all</code> to make the manual DB cluster snapshot
            public, which means that it can be copied or restored by all AWS accounts. Do not
            add the <code>all</code> value for any manual DB cluster snapshots that contain private
            information that you don't want available to all AWS accounts. If a manual DB cluster
            snapshot is encrypted, it can be shared, but only by specifying a list of authorized
            AWS account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code>
            as a value for that parameter in this case.
            </para><para>
            To view which AWS accounts have access to copy or restore a manual DB cluster snapshot,
            or whether a manual DB cluster snapshot public or private, use the <a>DescribeDBClusterSnapshotAttributes</a>
            API action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterSnapshotAttributeCmdlet.AttributeName">
            <summary>
            <para>
            <para>The name of the DB cluster snapshot attribute to modify.</para><para>To manage authorization for other AWS accounts to copy or restore a manual DB cluster
            snapshot, set this value to <code>restore</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterSnapshotAttributeCmdlet.DBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier for the DB cluster snapshot to modify the attributes for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterSnapshotAttributeCmdlet.ValuesToAdd">
            <summary>
            <para>
            <para>A list of DB cluster snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</para><para>To authorize other AWS accounts to copy or restore a manual DB cluster snapshot, set
            this list to include one or more AWS account IDs, or <code>all</code> to make the
            manual DB cluster snapshot restorable by any AWS account. Do not add the <code>all</code>
            value for any manual DB cluster snapshots that contain private information that you
            don't want available to all AWS accounts.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterSnapshotAttributeCmdlet.ValuesToRemove">
            <summary>
            <para>
            <para>A list of DB cluster snapshot attributes to remove from the attribute specified by
            <code>AttributeName</code>.</para><para>To remove authorization for other AWS accounts to copy or restore a manual DB cluster
            snapshot, set this list to include one or more AWS account identifiers, or <code>all</code>
            to remove authorization for any AWS account to copy or restore the DB cluster snapshot.
            If you specify <code>all</code>, an AWS account whose account ID is explicitly added
            to the <code>restore</code> attribute can still copy or restore a manual DB cluster
            snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterSnapshotAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterSnapshotAttributesResult'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.ModifyDBClusterSnapshotAttributeResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.ModifyDBClusterSnapshotAttributeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterSnapshotAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterSnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterSnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBClusterSnapshotAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet">
            <summary>
            Modifies settings for a DB instance. You can change one or more database configuration
            parameters by specifying these parameters and the new values in the request. To learn
            what modifications you can make to your DB instance, call <a>DescribeValidDBInstanceModifications</a>
            before you call <a>ModifyDBInstance</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.AllocatedStorage">
            <summary>
            <para>
            <para>The new amount of storage (in gibibytes) to allocate for the DB instance.</para><para>Not applicable. Storage is managed by the DB Cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.AllowMajorVersionUpgrade">
            <summary>
            <para>
            <para>Indicates that major version upgrades are allowed. Changing this parameter doesn't
            result in an outage and the change is asynchronously applied as soon as possible.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.ApplyImmediately">
            <summary>
            <para>
            <para>Specifies whether the modifications in this request and any pending modifications
            are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code>
            setting for the DB instance.</para><para> If this parameter is set to <code>false</code>, changes to the DB instance are applied
            during the next maintenance window. Some parameter changes can cause an outage and
            are applied on the next call to <a>RebootDBInstance</a>, or the next failure reboot.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.AutoMinorVersionUpgrade">
            <summary>
            <para>
            <para> Indicates that minor version upgrades are applied automatically to the DB instance
            during the maintenance window. Changing this parameter doesn't result in an outage
            except in the following case and the change is asynchronously applied as soon as possible.
            An outage will result if this parameter is set to <code>true</code> during the maintenance
            window, and a newer minor version is available, and Neptune has enabled auto patching
            for that engine version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.BackupRetentionPeriod">
            <summary>
            <para>
            <para>Not applicable. The retention period for automated backups is managed by the DB cluster.
            For more information, see <a>ModifyDBCluster</a>.</para><para>Default: Uses existing setting</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.CACertificateIdentifier">
            <summary>
            <para>
            <para>Indicates the certificate that needs to be associated with the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.CopyTagsToSnapshot">
            <summary>
            <para>
            <para>True to copy all tags from the DB instance to snapshots of the DB instance, and otherwise
            false. The default is false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.DBInstanceClass">
            <summary>
            <para>
            <para>The new compute and memory capacity of the DB instance, for example, <code>db.m4.large</code>.
            Not all DB instance classes are available in all AWS Regions.</para><para>If you modify the DB instance class, an outage occurs during the change. The change
            is applied during the next maintenance window, unless <code>ApplyImmediately</code>
            is specified as <code>true</code> for this request.</para><para>Default: Uses existing setting</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The DB instance identifier. This value is stored as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing DBInstance.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.DBParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB parameter group to apply to the DB instance. Changing this setting
            doesn't result in an outage. The parameter group name itself is changed immediately,
            but the actual parameter changes are not applied until you reboot the instance without
            failover. The db instance will NOT be rebooted automatically and the parameter changes
            will NOT be applied during the next maintenance window.</para><para>Default: Uses existing setting</para><para>Constraints: The DB parameter group must be in the same DB parameter group family
            as this DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.DBPortNumber">
            <summary>
            <para>
            <para>The port number on which the database accepts connections.</para><para>The value of the <code>DBPortNumber</code> parameter must not match any of the port
            values specified for options in the option group for the DB instance.</para><para>Your database will restart when you change the <code>DBPortNumber</code> value regardless
            of the value of the <code>ApplyImmediately</code> parameter.</para><para> Default: <code>8182</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.DBSecurityGroup">
            <summary>
            <para>
            <para>A list of DB security groups to authorize on this DB instance. Changing this setting
            doesn't result in an outage and the change is asynchronously applied as soon as possible.</para><para>Constraints:</para><ul><li><para>If supplied, must match existing DBSecurityGroups.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The new DB subnet group for the DB instance. You can use this parameter to move your
            DB instance to a different VPC.</para><para>Changing the subnet group causes an outage during the change. The change is applied
            during the next maintenance window, unless you specify <code>true</code> for the <code>ApplyImmediately</code>
            parameter.</para><para>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</para><para>Example: <code>mySubnetGroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.DeletionProtection">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled. See <a href="https://docs.aws.amazon.com/neptune/latest/userguide/manage-console-instances-delete.html">Deleting
            a DB Instance</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.CloudwatchLogsExportConfiguration_DisableLogType">
            <summary>
            <para>
            <para>The list of log types to disable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.Domain">
            <summary>
            <para>
            <para>Not supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.DomainIAMRoleName">
            <summary>
            <para>
            <para>Not supported</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.EnableIAMDatabaseAuthentication">
            <summary>
            <para>
            <para>True to enable mapping of AWS Identity and Access Management (IAM) accounts to database
            accounts, and otherwise false.</para><para>You can enable IAM database authentication for the following database engines</para><para>Not applicable. Mapping AWS IAM accounts to database accounts is managed by the DB
            cluster. For more information, see <a>ModifyDBCluster</a>.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.CloudwatchLogsExportConfiguration_EnableLogType">
            <summary>
            <para>
            <para>The list of log types to enable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.EnablePerformanceInsight">
            <summary>
            <para>
            <para><i>(Not supported by Neptune)</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The version number of the database engine to upgrade to. Currently, setting this parameter
            has no effect. To upgrade your database engine to the most recent release, use the
            <a>ApplyPendingMaintenanceAction</a> API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.Iops">
            <summary>
            <para>
            <para>The new Provisioned IOPS (I/O operations per second) value for the instance.</para><para>Changing this setting doesn't result in an outage and the change is applied during
            the next maintenance window unless the <code>ApplyImmediately</code> parameter is
            set to <code>true</code> for this request.</para><para>Default: Uses existing setting</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.LicenseModel">
            <summary>
            <para>
            <para>Not supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.MasterUserPassword">
            <summary>
            <para>
            <para>Not applicable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.MonitoringInterval">
            <summary>
            <para>
            <para>The interval, in seconds, between points when Enhanced Monitoring metrics are collected
            for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0.
            The default is 0.</para><para>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code>
            to a value other than 0.</para><para>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.MonitoringRoleArn">
            <summary>
            <para>
            <para>The ARN for the IAM role that permits Neptune to send enhanced monitoring metrics
            to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>.</para><para>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply
            a <code>MonitoringRoleArn</code> value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.MultiAZ">
            <summary>
            <para>
            <para>Specifies if the DB instance is a Multi-AZ deployment. Changing this parameter doesn't
            result in an outage and the change is applied during the next maintenance window unless
            the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.NewDBInstanceIdentifier">
            <summary>
            <para>
            <para> The new DB instance identifier for the DB instance when renaming a DB instance. When
            you change the DB instance identifier, an instance reboot will occur immediately if
            you set <code>Apply Immediately</code> to true, or will occur during the next maintenance
            window if <code>Apply Immediately</code> to false. This value is stored as a lowercase
            string.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens.</para></li><li><para>The first character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>mydbinstance</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.OptionGroupName">
            <summary>
            <para>
            <para><i>(Not supported by Neptune)</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.PerformanceInsightsKMSKeyId">
            <summary>
            <para>
            <para><i>(Not supported by Neptune)</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.PreferredBackupWindow">
            <summary>
            <para>
            <para> The daily time range during which automated backups are created if automated backups
            are enabled.</para><para>Not applicable. The daily time range for creating automated backups is managed by
            the DB cluster. For more information, see <a>ModifyDBCluster</a>.</para><para>Constraints:</para><ul><li><para>Must be in the format hh24:mi-hh24:mi</para></li><li><para>Must be in Universal Time Coordinated (UTC)</para></li><li><para>Must not conflict with the preferred maintenance window</para></li><li><para>Must be at least 30 minutes</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>The weekly time range (in UTC) during which system maintenance can occur, which might
            result in an outage. Changing this parameter doesn't result in an outage, except in
            the following situation, and the change is asynchronously applied as soon as possible.
            If there are pending actions that cause a reboot, and the maintenance window is changed
            to include the current time, then changing this parameter will cause a reboot of the
            DB instance. If moving this window to the current time, there must be at least 30
            minutes between the current time and end of the window to ensure pending changes are
            applied.</para><para>Default: Uses existing setting</para><para>Format: ddd:hh24:mi-ddd:hh24:mi</para><para>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</para><para>Constraints: Must be at least 30 minutes</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.PromotionTier">
            <summary>
            <para>
            <para>A value that specifies the order in which a Read Replica is promoted to the primary
            instance after a failure of the existing primary instance.</para><para>Default: 1</para><para>Valid Values: 0 - 15</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.StorageType">
            <summary>
            <para>
            <para>Not supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.TdeCredentialArn">
            <summary>
            <para>
            <para>The ARN from the key store with which to associate the instance for TDE encryption.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.TdeCredentialPassword">
            <summary>
            <para>
            <para>The password for the given ARN from the key store in order to access the device.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of EC2 VPC security groups to authorize on this DB instance. This change is
            asynchronously applied as soon as possible.</para><para>Not applicable. The associated list of EC2 VPC security groups is managed by the DB
            cluster. For more information, see <a>ModifyDBCluster</a>.</para><para>Constraints:</para><ul><li><para>If supplied, must match existing VpcSecurityGroupIds.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.PubliclyAccessible">
            <summary>
            <para>
            <para>This flag should no longer be used.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.ModifyDBInstanceResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.ModifyDBInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBParameterGroupCmdlet">
            <summary>
            Modifies the parameters of a DB parameter group. To modify more than one parameter,
            submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>,
            and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
            request.
            
             <note><para>
            Changes to dynamic parameters are applied immediately. Changes to static parameters
            require a reboot without failover to the DB instance associated with the parameter
            group before the change can take effect.
            </para></note><important><para>
            After you modify a DB parameter group, you should wait at least 5 minutes before creating
            your first DB instance that uses that DB parameter group as the default parameter
            group. This allows Amazon Neptune to fully complete the modify action before the parameter
            group is used as the default for a new DB instance. This is especially important for
            parameters that are critical when creating the default database for a DB instance,
            such as the character set for the default database defined by the <code>character_set_database</code>
            parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console
            or the <i>DescribeDBParameters</i> command to verify that your DB parameter group
            has been created or modified.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBParameterGroupCmdlet.DBParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB parameter group.</para><para>Constraints:</para><ul><li><para>If supplied, must match the name of an existing DBParameterGroup.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBParameterGroupCmdlet.Parameter">
            <summary>
            <para>
            <para>An array of parameter names, values, and the apply method for the parameter update.
            At least one parameter name, value, and apply method must be supplied; subsequent
            arguments are optional. A maximum of 20 parameters can be modified in a single request.</para><para>Valid Values (for the application method): <code>immediate | pending-reboot</code></para><note><para>You can use the immediate value with dynamic parameters only. You can use the pending-reboot
            value for both dynamic and static parameters, and changes are applied when you reboot
            the DB instance without failover.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBParameterGroupName'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.ModifyDBParameterGroupResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.ModifyDBParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBSubnetGroupCmdlet">
            <summary>
            Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet
            in at least two AZs in the AWS Region.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBSubnetGroupCmdlet.DBSubnetGroupDescription">
            <summary>
            <para>
            <para>The description for the DB subnet group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBSubnetGroupCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The name for the DB subnet group. This value is stored as a lowercase string. You
            can't modify the default subnet group.</para><para>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBSubnetGroupCmdlet.SubnetId">
            <summary>
            <para>
            <para>The EC2 subnet IDs for the DB subnet group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBSubnetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBSubnetGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.ModifyDBSubnetGroupResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.ModifyDBSubnetGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBSubnetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSubnetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSubnetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTDBSubnetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.EditNPTEventSubscriptionCmdlet">
            <summary>
            Modifies an existing event notification subscription. Note that you can't modify the
            source identifiers using this call; to change source identifiers for a subscription,
            use the <a>AddSourceIdentifierToSubscription</a> and <a>RemoveSourceIdentifierFromSubscription</a>
            calls.
            
             
            <para>
            You can see a list of the event categories for a given SourceType by using the <b>DescribeEventCategories</b>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTEventSubscriptionCmdlet.Enabled">
            <summary>
            <para>
            <para> A Boolean value; set to <b>true</b> to activate the subscription.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTEventSubscriptionCmdlet.EventCategory">
            <summary>
            <para>
            <para> A list of event categories for a SourceType that you want to subscribe to. You can
            see a list of the categories for a given SourceType by using the <b>DescribeEventCategories</b>
            action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTEventSubscriptionCmdlet.SnsTopicArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the SNS topic created for event notification. The
            ARN is created by Amazon SNS when you create a topic and subscribe to it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTEventSubscriptionCmdlet.SourceType">
            <summary>
            <para>
            <para>The type of source that is generating the events. For example, if you want to be notified
            of events generated by a DB instance, you would set this parameter to db-instance.
            if this value is not specified, all events are returned.</para><para>Valid values: db-instance | db-parameter-group | db-security-group | db-snapshot</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTEventSubscriptionCmdlet.SubscriptionName">
            <summary>
            <para>
            <para>The name of the event notification subscription.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTEventSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventSubscription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.ModifyEventSubscriptionResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.ModifyEventSubscriptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTEventSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubscriptionName parameter.
            The -PassThru parameter is deprecated, use -Select '^SubscriptionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.EditNPTEventSubscriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterCmdlet">
            <summary>
            Returns information about provisioned DB clusters, and supports pagination.
            
             <note><para>
            This operation can also return information for Amazon RDS clusters and Amazon DocDB
            clusters.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The user-supplied DB cluster identifier. If this parameter is specified, information
            from only the specific DB cluster is returned. This parameter isn't case-sensitive.</para><para>Constraints:</para><ul><li><para>If supplied, must match an existing DBClusterIdentifier.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterCmdlet.Filter">
            <summary>
            <para>
            <para>A filter that specifies one or more DB clusters to describe.</para><para>Supported filters:</para><ul><li><para><code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon
            Resource Names (ARNs). The results list will only include information about the DB
            clusters identified by these ARNs.</para></li><li><para><code>engine</code> - Accepts an engine name (such as <code>neptune</code>), and
            restricts the results list to DB clusters created by that engine.</para></li></ul><para>For example, to invoke this API from the AWS CLI and filter so that only Neptune DB
            clusters are returned, you could use the following command:</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous <a>DescribeDBClusters</a> request.
            If this parameter is specified, the response includes only records beyond the marker,
            up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DescribeDBClustersResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DescribeDBClustersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterParameterCmdlet">
            <summary>
            Returns the detailed parameter list for a particular DB cluster parameter group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterParameterCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of a specific DB cluster parameter group to return parameter details for.</para><para>Constraints:</para><ul><li><para>If supplied, must match the name of an existing DBClusterParameterGroup.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterParameterCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterParameterCmdlet.Source">
            <summary>
            <para>
            <para> A value that indicates to return only parameters for a specific source. Parameter
            sources can be <code>engine</code>, <code>service</code>, or <code>customer</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterParameterCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribeDBClusterParameters</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterParameterCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Parameters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DescribeDBClusterParametersResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DescribeDBClusterParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterParameterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterParameterCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterParameterGroupCmdlet">
            <summary>
            Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code>
            parameter is specified, the list will contain only the description of the specified
            DB cluster parameter group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterParameterGroupCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of a specific DB cluster parameter group to return details for.</para><para>Constraints:</para><ul><li><para>If supplied, must match the name of an existing DBClusterParameterGroup.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterParameterGroupCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterParameterGroupCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribeDBClusterParameterGroups</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterParameterGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterParameterGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DescribeDBClusterParameterGroupsResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DescribeDBClusterParameterGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterParameterGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterSnapshotCmdlet">
            <summary>
            Returns information about DB cluster snapshots. This API action supports pagination.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterSnapshotCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The ID of the DB cluster to retrieve the list of DB cluster snapshots for. This parameter
            can't be used in conjunction with the <code>DBClusterSnapshotIdentifier</code> parameter.
            This parameter is not case-sensitive.</para><para>Constraints:</para><ul><li><para>If supplied, must match the identifier of an existing DBCluster.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterSnapshotCmdlet.DBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>A specific DB cluster snapshot identifier to describe. This parameter can't be used
            in conjunction with the <code>DBClusterIdentifier</code> parameter. This value is
            stored as a lowercase string.</para><para>Constraints:</para><ul><li><para>If supplied, must match the identifier of an existing DBClusterSnapshot.</para></li><li><para>If this identifier is for an automated snapshot, the <code>SnapshotType</code> parameter
            must also be specified.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterSnapshotCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterSnapshotCmdlet.IncludePublic">
            <summary>
            <para>
            <para>True to include manual DB cluster snapshots that are public and can be copied or restored
            by any AWS account, and otherwise false. The default is <code>false</code>. The default
            is false.</para><para>You can share a manual DB cluster snapshot as public by using the <a>ModifyDBClusterSnapshotAttribute</a>
            API action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterSnapshotCmdlet.IncludeShared">
            <summary>
            <para>
            <para>True to include shared manual DB cluster snapshots from other AWS accounts that this
            AWS account has been given permission to copy or restore, and otherwise false. The
            default is <code>false</code>.</para><para>You can give an AWS account permission to restore a manual DB cluster snapshot from
            another AWS account by the <a>ModifyDBClusterSnapshotAttribute</a> API action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterSnapshotCmdlet.SnapshotType">
            <summary>
            <para>
            <para>The type of DB cluster snapshots to be returned. You can specify one of the following
            values:</para><ul><li><para><code>automated</code> - Return all DB cluster snapshots that have been automatically
            taken by Amazon Neptune for my AWS account.</para></li><li><para><code>manual</code> - Return all DB cluster snapshots that have been taken by my
            AWS account.</para></li><li><para><code>shared</code> - Return all manual DB cluster snapshots that have been shared
            to my AWS account.</para></li><li><para><code>public</code> - Return all DB cluster snapshots that have been marked as public.</para></li></ul><para>If you don't specify a <code>SnapshotType</code> value, then both automated and manual
            DB cluster snapshots are returned. You can include shared DB cluster snapshots with
            these results by setting the <code>IncludeShared</code> parameter to <code>true</code>.
            You can include public DB cluster snapshots with these results by setting the <code>IncludePublic</code>
            parameter to <code>true</code>.</para><para>The <code>IncludeShared</code> and <code>IncludePublic</code> parameters don't apply
            for <code>SnapshotType</code> values of <code>manual</code> or <code>automated</code>.
            The <code>IncludePublic</code> parameter doesn't apply when <code>SnapshotType</code>
            is set to <code>shared</code>. The <code>IncludeShared</code> parameter doesn't apply
            when <code>SnapshotType</code> is set to <code>public</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterSnapshotCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous <code>DescribeDBClusterSnapshots</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterSnapshotCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterSnapshots'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DescribeDBClusterSnapshotsResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DescribeDBClusterSnapshotsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterSnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterSnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterSnapshotCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterSnapshotAttributeCmdlet">
            <summary>
            Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster
            snapshot.
            
             
            <para>
            When sharing snapshots with other AWS accounts, <code>DescribeDBClusterSnapshotAttributes</code>
            returns the <code>restore</code> attribute and a list of IDs for the AWS accounts
            that are authorized to copy or restore the manual DB cluster snapshot. If <code>all</code>
            is included in the list of values for the <code>restore</code> attribute, then the
            manual DB cluster snapshot is public and can be copied or restored by all AWS accounts.
            </para><para>
            To add or remove access for an AWS account to copy or restore a manual DB cluster
            snapshot, or to make the manual DB cluster snapshot public or private, use the <a>ModifyDBClusterSnapshotAttribute</a>
            API action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterSnapshotAttributeCmdlet.DBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier for the DB cluster snapshot to describe the attributes for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterSnapshotAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterSnapshotAttributesResult'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DescribeDBClusterSnapshotAttributesResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DescribeDBClusterSnapshotAttributesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBClusterSnapshotAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterSnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterSnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBEngineVersionCmdlet">
            <summary>
            Returns a list of the available DB engines.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBEngineVersionCmdlet.DBParameterGroupFamily">
            <summary>
            <para>
            <para>The name of a specific DB parameter group family to return details for.</para><para>Constraints:</para><ul><li><para>If supplied, must match an existing DBParameterGroupFamily.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBEngineVersionCmdlet.DefaultOnly">
            <summary>
            <para>
            <para>Indicates that only the default version of the specified engine or engine and major
            version combination is returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBEngineVersionCmdlet.Engine">
            <summary>
            <para>
            <para>The database engine to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBEngineVersionCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The database engine version to return.</para><para>Example: <code>5.1.49</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBEngineVersionCmdlet.Filter">
            <summary>
            <para>
            <para>Not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBEngineVersionCmdlet.ListSupportedCharacterSet">
            <summary>
            <para>
            <para>If this parameter is specified and the requested engine supports the <code>CharacterSetName</code>
            parameter for <code>CreateDBInstance</code>, the response includes a list of supported
            character sets for each engine version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBEngineVersionCmdlet.ListSupportedTimezone">
            <summary>
            <para>
            <para>If this parameter is specified and the requested engine supports the <code>TimeZone</code>
            parameter for <code>CreateDBInstance</code>, the response includes a list of supported
            time zones for each engine version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBEngineVersionCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBEngineVersionCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more than the <code>MaxRecords</code>
            value is available, a pagination token called a marker is included in the response
            so that the following results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBEngineVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBEngineVersions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DescribeDBEngineVersionsResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DescribeDBEngineVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBEngineVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Engine parameter.
            The -PassThru parameter is deprecated, use -Select '^Engine' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBEngineVersionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBInstanceCmdlet">
            <summary>
            Returns information about provisioned instances, and supports pagination.
            
             <note><para>
            This operation can also return information for Amazon RDS instances and Amazon DocDB
            instances.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBInstanceCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The user-supplied instance identifier. If this parameter is specified, information
            from only the specific DB instance is returned. This parameter isn't case-sensitive.</para><para>Constraints:</para><ul><li><para>If supplied, must match the identifier of an existing DBInstance.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBInstanceCmdlet.Filter">
            <summary>
            <para>
            <para>A filter that specifies one or more DB instances to describe.</para><para>Supported filters:</para><ul><li><para><code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon
            Resource Names (ARNs). The results list will only include information about the DB
            instances associated with the DB clusters identified by these ARNs.</para></li><li><para><code>engine</code> - Accepts an engine name (such as <code>neptune</code>), and
            restricts the results list to DB instances created by that engine.</para></li></ul><para>For example, to invoke this API from the AWS CLI and filter so that only Neptune DB
            instances are returned, you could use the following command:</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBInstanceCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribeDBInstances</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBInstanceCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstances'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DescribeDBInstancesResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DescribeDBInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBInstanceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBParameterCmdlet">
            <summary>
            Returns the detailed parameter list for a particular DB parameter group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBParameterCmdlet.DBParameterGroupName">
            <summary>
            <para>
            <para>The name of a specific DB parameter group to return details for.</para><para>Constraints:</para><ul><li><para>If supplied, must match the name of an existing DBParameterGroup.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBParameterCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBParameterCmdlet.Source">
            <summary>
            <para>
            <para>The parameter types to return.</para><para>Default: All parameter types returned</para><para>Valid Values: <code>user | system | engine-default</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBParameterCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous <code>DescribeDBParameters</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBParameterCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Parameters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DescribeDBParametersResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DescribeDBParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBParameterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBParameterCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBParameterGroupCmdlet">
            <summary>
            Returns a list of <code>DBParameterGroup</code> descriptions. If a <code>DBParameterGroupName</code>
            is specified, the list will contain only the description of the specified DB parameter
            group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBParameterGroupCmdlet.DBParameterGroupName">
            <summary>
            <para>
            <para>The name of a specific DB parameter group to return details for.</para><para>Constraints:</para><ul><li><para>If supplied, must match the name of an existing DBClusterParameterGroup.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBParameterGroupCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBParameterGroupCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous <code>DescribeDBParameterGroups</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBParameterGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBParameterGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DescribeDBParameterGroupsResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DescribeDBParameterGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBParameterGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBSubnetGroupCmdlet">
            <summary>
            Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified,
            the list will contain only the descriptions of the specified DBSubnetGroup.
            
             
            <para>
            For an overview of CIDR ranges, go to the <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Wikipedia
            Tutorial</a>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBSubnetGroupCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The name of the DB subnet group to return details for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBSubnetGroupCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBSubnetGroupCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous DescribeDBSubnetGroups request.
            If this parameter is specified, the response includes only records beyond the marker,
            up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBSubnetGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBSubnetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBSubnetGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DescribeDBSubnetGroupsResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DescribeDBSubnetGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBSubnetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSubnetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSubnetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTDBSubnetGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.GetNPTEngineDefaultClusterParameterCmdlet">
            <summary>
            Returns the default engine and system parameter information for the cluster database
            engine.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEngineDefaultClusterParameterCmdlet.DBParameterGroupFamily">
            <summary>
            <para>
            <para>The name of the DB cluster parameter group family to return engine parameter information
            for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEngineDefaultClusterParameterCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEngineDefaultClusterParameterCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribeEngineDefaultClusterParameters</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEngineDefaultClusterParameterCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEngineDefaultClusterParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EngineDefaults'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DescribeEngineDefaultClusterParametersResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DescribeEngineDefaultClusterParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEngineDefaultClusterParameterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBParameterGroupFamily parameter.
            The -PassThru parameter is deprecated, use -Select '^DBParameterGroupFamily' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.GetNPTEngineDefaultParameterCmdlet">
            <summary>
            Returns the default engine and system parameter information for the specified database
            engine.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEngineDefaultParameterCmdlet.DBParameterGroupFamily">
            <summary>
            <para>
            <para>The name of the DB parameter group family.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEngineDefaultParameterCmdlet.Filter">
            <summary>
            <para>
            <para>Not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEngineDefaultParameterCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribeEngineDefaultParameters</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEngineDefaultParameterCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEngineDefaultParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EngineDefaults'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DescribeEngineDefaultParametersResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DescribeEngineDefaultParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEngineDefaultParameterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBParameterGroupFamily parameter.
            The -PassThru parameter is deprecated, use -Select '^DBParameterGroupFamily' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventCmdlet">
            <summary>
            Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter
            groups for the past 14 days. Events specific to a particular DB instance, DB security
            group, database snapshot, or DB parameter group can be obtained by providing the name
            as a parameter. By default, the past hour of events are returned.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventCmdlet.Duration">
            <summary>
            <para>
            <para>The number of minutes to retrieve events for.</para><para>Default: 60</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventCmdlet.EndTimeUtc">
            <summary>
            <para>
            <para> The end of the time interval for which to retrieve events, specified in ISO 8601
            format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a></para><para>Example: 2009-07-08T18:00Z</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventCmdlet.EventCategory">
            <summary>
            <para>
            <para>A list of event categories that trigger notifications for a event notification subscription.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventCmdlet.SourceIdentifier">
            <summary>
            <para>
            <para>The identifier of the event source for which events are returned. If not specified,
            then all sources are included in the response.</para><para>Constraints:</para><ul><li><para>If SourceIdentifier is supplied, SourceType must also be provided.</para></li><li><para>If the source type is <code>DBInstance</code>, then a <code>DBInstanceIdentifier</code>
            must be supplied.</para></li><li><para>If the source type is <code>DBSecurityGroup</code>, a <code>DBSecurityGroupName</code>
            must be supplied.</para></li><li><para>If the source type is <code>DBParameterGroup</code>, a <code>DBParameterGroupName</code>
            must be supplied.</para></li><li><para>If the source type is <code>DBSnapshot</code>, a <code>DBSnapshotIdentifier</code>
            must be supplied.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventCmdlet.SourceType">
            <summary>
            <para>
            <para>The event source to retrieve events for. If no value is specified, all events are
            returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventCmdlet.StartTimeUtc">
            <summary>
            <para>
            <para> The beginning of the time interval to retrieve events for, specified in ISO 8601
            format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a></para><para>Example: 2009-07-08T18:00Z</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventCmdlet.EndTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc
            results in both EndTime and EndTimeUtc being assigned, the latest assignment to either
            one of the two property is reflected in the value of both. EndTime is provided for
            backwards compatibility only and assigning a non-Utc DateTime to it results in the
            wrong timestamp being passed to the service.</para><para> The end of the time interval for which to retrieve events, specified in ISO 8601
            format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a></para><para>Example: 2009-07-08T18:00Z</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous DescribeEvents request. If this
            parameter is specified, the response includes only records beyond the marker, up to
            the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventCmdlet.StartTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or
            StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. StartTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para> The beginning of the time interval to retrieve events for, specified in ISO 8601
            format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a></para><para>Example: 2009-07-08T18:00Z</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Events'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DescribeEventsResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DescribeEventsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventCategoryCmdlet">
            <summary>
            Displays a list of categories for all event source types, or, if specified, for a
            specified source type.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventCategoryCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventCategoryCmdlet.SourceType">
            <summary>
            <para>
            <para>The type of source that is generating the events.</para><para>Valid values: db-instance | db-parameter-group | db-security-group | db-snapshot</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventCategoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventCategoriesMapList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DescribeEventCategoriesResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DescribeEventCategoriesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventCategoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceType parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventSubscriptionCmdlet">
            <summary>
            Lists all the subscription descriptions for a customer account. The description for
            a subscription includes SubscriptionName, SNSTopicARN, CustomerID, SourceType, SourceID,
            CreationTime, and Status.
            
             
            <para>
            If you specify a SubscriptionName, lists the description for that subscription.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventSubscriptionCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventSubscriptionCmdlet.SubscriptionName">
            <summary>
            <para>
            <para>The name of the event notification subscription you want to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventSubscriptionCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code> .</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventSubscriptionCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventSubscriptionsList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DescribeEventSubscriptionsResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DescribeEventSubscriptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubscriptionName parameter.
            The -PassThru parameter is deprecated, use -Select '^SubscriptionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTEventSubscriptionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.GetNPTOrderableDBInstanceOptionCmdlet">
            <summary>
            Returns a list of orderable DB instance options for the specified engine.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTOrderableDBInstanceOptionCmdlet.DBInstanceClass">
            <summary>
            <para>
            <para>The DB instance class filter value. Specify this parameter to show only the available
            offerings matching the specified DB instance class.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTOrderableDBInstanceOptionCmdlet.Engine">
            <summary>
            <para>
            <para>The name of the engine to retrieve DB instance options for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTOrderableDBInstanceOptionCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The engine version filter value. Specify this parameter to show only the available
            offerings matching the specified engine version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTOrderableDBInstanceOptionCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTOrderableDBInstanceOptionCmdlet.LicenseModel">
            <summary>
            <para>
            <para>The license model filter value. Specify this parameter to show only the available
            offerings matching the specified license model.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTOrderableDBInstanceOptionCmdlet.Vpc">
            <summary>
            <para>
            <para>The VPC filter value. Specify this parameter to show only the available VPC or non-VPC
            offerings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTOrderableDBInstanceOptionCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code> .</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTOrderableDBInstanceOptionCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTOrderableDBInstanceOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OrderableDBInstanceOptions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTOrderableDBInstanceOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Engine parameter.
            The -PassThru parameter is deprecated, use -Select '^Engine' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTOrderableDBInstanceOptionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.GetNPTPendingMaintenanceActionCmdlet">
            <summary>
            Returns a list of resources (for example, DB instances) that have at least one pending
            maintenance action.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTPendingMaintenanceActionCmdlet.Filter">
            <summary>
            <para>
            <para>A filter that specifies one or more resources to return pending maintenance actions
            for.</para><para>Supported filters:</para><ul><li><para><code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon
            Resource Names (ARNs). The results list will only include pending maintenance actions
            for the DB clusters identified by these ARNs.</para></li><li><para><code>db-instance-id</code> - Accepts DB instance identifiers and DB instance ARNs.
            The results list will only include pending maintenance actions for the DB instances
            identified by these ARNs.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTPendingMaintenanceActionCmdlet.ResourceIdentifier">
            <summary>
            <para>
            <para>The ARN of a resource to return pending maintenance actions for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTPendingMaintenanceActionCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribePendingMaintenanceActions</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to a number of records specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTPendingMaintenanceActionCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTPendingMaintenanceActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PendingMaintenanceActions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DescribePendingMaintenanceActionsResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DescribePendingMaintenanceActionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTPendingMaintenanceActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTPendingMaintenanceActionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.GetNPTResourceTagListCmdlet">
            <summary>
            Lists all tags on an Amazon Neptune resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTResourceTagListCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTResourceTagListCmdlet.ResourceName">
            <summary>
            <para>
            <para>The Amazon Neptune resource with tags to be listed. This value is an Amazon Resource
            Name (ARN). For information about creating an ARN, see <a href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
            Constructing an Amazon Resource Name (ARN)</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTResourceTagListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TagList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTResourceTagListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceName parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.GetNPTValidDBInstanceModificationCmdlet">
            <summary>
            You can call <a>DescribeValidDBInstanceModifications</a> to learn what modifications
            you can make to your DB instance. You can use this information when you call <a>ModifyDBInstance</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTValidDBInstanceModificationCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The customer identifier or the ARN of your DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTValidDBInstanceModificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ValidDBInstanceModificationsMessage'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DescribeValidDBInstanceModificationsResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DescribeValidDBInstanceModificationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.GetNPTValidDBInstanceModificationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet">
            <summary>
            Creates a new Amazon Neptune DB cluster.
            
             
            <para>
            You can use the <code>ReplicationSourceIdentifier</code> parameter to create the DB
            cluster as a Read Replica of another DB cluster or Amazon Neptune DB instance.
            </para><para>
            Note that when you create a new cluster using <code>CreateDBCluster</code> directly,
            deletion protection is disabled by default (when you create a new production cluster
            in the console, deletion protection is enabled by default). You can only delete a
            DB cluster if its <code>DeletionProtection</code> field is set to <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>A list of EC2 Availability Zones that instances in the DB cluster can be created in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.BackupRetentionPeriod">
            <summary>
            <para>
            <para>The number of days for which automated backups are retained. You must specify a minimum
            value of 1.</para><para>Default: 1</para><para>Constraints:</para><ul><li><para>Must be a value from 1 to 35</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.CharacterSetName">
            <summary>
            <para>
            <para><i>(Not supported by Neptune)</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name for your database of up to 64 alpha-numeric characters. If you do not provide
            a name, Amazon Neptune will not create a database in the DB cluster you are creating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The DB cluster identifier. This parameter is stored as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>my-cluster1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para> The name of the DB cluster parameter group to associate with this DB cluster. If
            this argument is omitted, the default is used.</para><para>Constraints:</para><ul><li><para>If supplied, must match the name of an existing DBClusterParameterGroup.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>A DB subnet group to associate with this DB cluster.</para><para>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.DeletionProtection">
            <summary>
            <para>
            <para>A value that indicates whether the DB cluster has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.EnableCloudwatchLogsExport">
            <summary>
            <para>
            <para>The list of log types that need to be enabled for exporting to CloudWatch Logs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.EnableIAMDatabaseAuthentication">
            <summary>
            <para>
            <para>True to enable mapping of AWS Identity and Access Management (IAM) accounts to database
            accounts, and otherwise false.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.Engine">
            <summary>
            <para>
            <para>The name of the database engine to be used for this DB cluster.</para><para>Valid Values: <code>neptune</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The version number of the database engine to use. Currently, setting this parameter
            has no effect.</para><para>Example: <code>1.0.1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS KMS key identifier for an encrypted DB cluster.</para><para>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key.
            If you are creating a DB cluster with the same AWS account that owns the KMS encryption
            key used to encrypt the new DB cluster, then you can use the KMS key alias instead
            of the ARN for the KMS encryption key.</para><para>If an encryption key is not specified in <code>KmsKeyId</code>:</para><ul><li><para>If <code>ReplicationSourceIdentifier</code> identifies an encrypted source, then Amazon
            Neptune will use the encryption key used to encrypt the source. Otherwise, Amazon
            Neptune will use your default encryption key.</para></li><li><para>If the <code>StorageEncrypted</code> parameter is true and <code>ReplicationSourceIdentifier</code>
            is not specified, then Amazon Neptune will use your default encryption key.</para></li></ul><para>AWS KMS creates the default encryption key for your AWS account. Your AWS account
            has a different default encryption key for each AWS Region.</para><para>If you create a Read Replica of an encrypted DB cluster in another AWS Region, you
            must set <code>KmsKeyId</code> to a KMS key ID that is valid in the destination AWS
            Region. This key is used to encrypt the Read Replica in that AWS Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.MasterUsername">
            <summary>
            <para>
            <para>The name of the master user for the DB cluster.</para><para>Constraints:</para><ul><li><para>Must be 1 to 16 letters or numbers.</para></li><li><para>First character must be a letter.</para></li><li><para>Cannot be a reserved word for the chosen database engine.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.MasterUserPassword">
            <summary>
            <para>
            <para>The password for the master database user. This password can contain any printable
            ASCII character except "/", """, or "@".</para><para>Constraints: Must contain from 8 to 41 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.OptionGroupName">
            <summary>
            <para>
            <para><i>(Not supported by Neptune)</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.Port">
            <summary>
            <para>
            <para>The port number on which the instances in the DB cluster accept connections.</para><para> Default: <code>8182</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.PreferredBackupWindow">
            <summary>
            <para>
            <para>The daily time range during which automated backups are created if automated backups
            are enabled using the <code>BackupRetentionPeriod</code> parameter.</para><para>The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html">
            Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Neptune User Guide.</i></para><para>Constraints:</para><ul><li><para>Must be in the format <code>hh24:mi-hh24:mi</code>.</para></li><li><para>Must be in Universal Coordinated Time (UTC).</para></li><li><para>Must not conflict with the preferred maintenance window.</para></li><li><para>Must be at least 30 minutes.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>The weekly time range during which system maintenance can occur, in Universal Coordinated
            Time (UTC).</para><para>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code></para><para>The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region, occurring on a random day of the week. To see the time blocks
            available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html">
            Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Neptune User Guide.</i></para><para>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</para><para>Constraints: Minimum 30-minute window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.PreSignedUrl">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.ReplicationSourceIdentifier">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB
            cluster is created as a Read Replica.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.StorageEncrypted">
            <summary>
            <para>
            <para>Specifies whether the DB cluster is encrypted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to assign to the new DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of EC2 VPC security groups to associate with this DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.CreateDBClusterResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.CreateDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterParameterGroupCmdlet">
            <summary>
            Creates a new DB cluster parameter group.
            
             
            <para>
            Parameters in a DB cluster parameter group apply to all of the instances in a DB cluster.
            </para><para>
             A DB cluster parameter group is initially created with the default parameters for
            the database engine used by instances in the DB cluster. To provide custom values
            for any of the parameters, you must modify the group after creating it using <a>ModifyDBClusterParameterGroup</a>.
            Once you've created a DB cluster parameter group, you need to associate it with your
            DB cluster using <a>ModifyDBCluster</a>. When you associate a new DB cluster parameter
            group with a running DB cluster, you need to reboot the DB instances in the DB cluster
            without failover for the new DB cluster parameter group and associated settings to
            take effect.
            </para><important><para>
            After you create a DB cluster parameter group, you should wait at least 5 minutes
            before creating your first DB cluster that uses that DB cluster parameter group as
            the default parameter group. This allows Amazon Neptune to fully complete the create
            action before the DB cluster parameter group is used as the default for a new DB cluster.
            This is especially important for parameters that are critical when creating the default
            database for a DB cluster, such as the character set for the default database defined
            by the <code>character_set_database</code> parameter. You can use the <i>Parameter
            Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon Neptune
            console</a> or the <a>DescribeDBClusterParameters</a> command to verify that your
            DB cluster parameter group has been created or modified.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterParameterGroupCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB cluster parameter group.</para><para>Constraints:</para><ul><li><para>Must match the name of an existing DBClusterParameterGroup.</para></li></ul><note><para>This value is stored as a lowercase string.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterParameterGroupCmdlet.DBParameterGroupFamily">
            <summary>
            <para>
            <para>The DB cluster parameter group family name. A DB cluster parameter group can be associated
            with one and only one DB cluster parameter group family, and can be applied only to
            a DB cluster running a database engine and engine version compatible with that DB
            cluster parameter group family.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterParameterGroupCmdlet.Description">
            <summary>
            <para>
            <para>The description for the DB cluster parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterParameterGroupCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the new DB cluster parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterParameterGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.CreateDBClusterParameterGroupResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.CreateDBClusterParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterSnapshotCmdlet">
            <summary>
            Creates a snapshot of a DB cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterSnapshotCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the DB cluster to create a snapshot for. This parameter is not case-sensitive.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing DBCluster.</para></li></ul><para>Example: <code>my-cluster1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterSnapshotCmdlet.DBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier of the DB cluster snapshot. This parameter is stored as a lowercase
            string.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>my-cluster1-snapshot1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterSnapshotCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the DB cluster snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterSnapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.CreateDBClusterSnapshotResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.CreateDBClusterSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBClusterSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet">
            <summary>
            Creates a new DB instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.AllocatedStorage">
            <summary>
            <para>
            <para>The amount of storage (in gibibytes) to allocate for the DB instance.</para><para>Type: Integer</para><para>Not applicable. Neptune cluster volumes automatically grow as the amount of data in
            your database increases, though you are only charged for the space that you use in
            a Neptune cluster volume.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.AutoMinorVersionUpgrade">
            <summary>
            <para>
            <para>Indicates that minor engine upgrades are applied automatically to the DB instance
            during the maintenance window.</para><para>Default: <code>true</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para> The EC2 Availability Zone that the DB instance is created in</para><para>Default: A random, system-chosen Availability Zone in the endpoint's AWS Region.</para><para> Example: <code>us-east-1d</code></para><para> Constraint: The AvailabilityZone parameter can't be specified if the MultiAZ parameter
            is set to <code>true</code>. The specified Availability Zone must be in the same AWS
            Region as the current endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.BackupRetentionPeriod">
            <summary>
            <para>
            <para>The number of days for which automated backups are retained.</para><para>Not applicable. The retention period for automated backups is managed by the DB cluster.
            For more information, see <a>CreateDBCluster</a>.</para><para>Default: 1</para><para>Constraints:</para><ul><li><para>Must be a value from 0 to 35</para></li><li><para>Cannot be set to 0 if the DB instance is a source to Read Replicas</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.CharacterSetName">
            <summary>
            <para>
            <para><i>(Not supported by Neptune)</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.CopyTagsToSnapshot">
            <summary>
            <para>
            <para>True to copy all tags from the DB instance to snapshots of the DB instance, and otherwise
            false. The default is false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the DB cluster that the instance will belong to.</para><para>For information on creating a DB cluster, see <a>CreateDBCluster</a>.</para><para>Type: String</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.DBInstanceClass">
            <summary>
            <para>
            <para>The compute and memory capacity of the DB instance, for example, <code>db.m4.large</code>.
            Not all DB instance classes are available in all AWS Regions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The DB instance identifier. This parameter is stored as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>mydbinstance</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.DBName">
            <summary>
            <para>
            <para>Not supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.DBParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB parameter group to associate with this DB instance. If this argument
            is omitted, the default DBParameterGroup for the specified engine is used.</para><para>Constraints:</para><ul><li><para>Must be 1 to 255 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.DBSecurityGroup">
            <summary>
            <para>
            <para>A list of DB security groups to associate with this DB instance.</para><para>Default: The default DB security group for the database engine.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>A DB subnet group to associate with this DB instance.</para><para>If there is no DB subnet group, then it is a non-VPC DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.DeletionProtection">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled. See <a href="https://docs.aws.amazon.com/neptune/latest/userguide/manage-console-instances-delete.html">Deleting
            a DB Instance</a>.</para><para>DB instances in a DB cluster can be deleted even when deletion protection is enabled
            in their parent DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.Domain">
            <summary>
            <para>
            <para>Specify the Active Directory Domain to create the instance in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.DomainIAMRoleName">
            <summary>
            <para>
            <para>Specify the name of the IAM role to be used when making API calls to the Directory
            Service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.EnableCloudwatchLogsExport">
            <summary>
            <para>
            <para>The list of log types that need to be enabled for exporting to CloudWatch Logs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.EnableIAMDatabaseAuthentication">
            <summary>
            <para>
            <para>True to enable AWS Identity and Access Management (IAM) authentication for Neptune.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.EnablePerformanceInsight">
            <summary>
            <para>
            <para><i>(Not supported by Neptune)</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.Engine">
            <summary>
            <para>
            <para>The name of the database engine to be used for this instance.</para><para>Valid Values: <code>neptune</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The version number of the database engine to use. Currently, setting this parameter
            has no effect.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.Iops">
            <summary>
            <para>
            <para>The amount of Provisioned IOPS (input/output operations per second) to be initially
            allocated for the DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS KMS key identifier for an encrypted DB instance.</para><para>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key.
            If you are creating a DB instance with the same AWS account that owns the KMS encryption
            key used to encrypt the new DB instance, then you can use the KMS key alias instead
            of the ARN for the KM encryption key.</para><para>Not applicable. The KMS key identifier is managed by the DB cluster. For more information,
            see <a>CreateDBCluster</a>.</para><para>If the <code>StorageEncrypted</code> parameter is true, and you do not specify a value
            for the <code>KmsKeyId</code> parameter, then Amazon Neptune will use your default
            encryption key. AWS KMS creates the default encryption key for your AWS account. Your
            AWS account has a different default encryption key for each AWS Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.LicenseModel">
            <summary>
            <para>
            <para>License model information for this DB instance.</para><para> Valid values: <code>license-included</code> | <code>bring-your-own-license</code>
            | <code>general-public-license</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.MasterUsername">
            <summary>
            <para>
            <para>The name for the master user. Not used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.MasterUserPassword">
            <summary>
            <para>
            <para>The password for the master user. The password can include any printable ASCII character
            except "/", """, or "@".</para><para> Not used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.MonitoringInterval">
            <summary>
            <para>
            <para>The interval, in seconds, between points when Enhanced Monitoring metrics are collected
            for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0.
            The default is 0.</para><para>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code>
            to a value other than 0.</para><para>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.MonitoringRoleArn">
            <summary>
            <para>
            <para>The ARN for the IAM role that permits Neptune to send enhanced monitoring metrics
            to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>.</para><para>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply
            a <code>MonitoringRoleArn</code> value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.MultiAZ">
            <summary>
            <para>
            <para>Specifies if the DB instance is a Multi-AZ deployment. You can't set the AvailabilityZone
            parameter if the MultiAZ parameter is set to true.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.OptionGroupName">
            <summary>
            <para>
            <para><i>(Not supported by Neptune)</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.PerformanceInsightsKMSKeyId">
            <summary>
            <para>
            <para><i>(Not supported by Neptune)</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.Port">
            <summary>
            <para>
            <para>The port number on which the database accepts connections.</para><para>Not applicable. The port is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</para><para> Default: <code>8182</code></para><para>Type: Integer</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.PreferredBackupWindow">
            <summary>
            <para>
            <para> The daily time range during which automated backups are created.</para><para>Not applicable. The daily time range for creating automated backups is managed by
            the DB cluster. For more information, see <a>CreateDBCluster</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>The time range each week during which system maintenance can occur, in Universal Coordinated
            Time (UTC).</para><para> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code></para><para>The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region, occurring on a random day of the week.</para><para>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</para><para>Constraints: Minimum 30-minute window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.PromotionTier">
            <summary>
            <para>
            <para>A value that specifies the order in which an Read Replica is promoted to the primary
            instance after a failure of the existing primary instance. </para><para>Default: 1</para><para>Valid Values: 0 - 15</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.StorageEncrypted">
            <summary>
            <para>
            <para>Specifies whether the DB instance is encrypted.</para><para>Not applicable. The encryption for DB instances is managed by the DB cluster. For
            more information, see <a>CreateDBCluster</a>.</para><para>Default: false</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.StorageType">
            <summary>
            <para>
            <para>Specifies the storage type to be associated with the DB instance.</para><para>Not applicable. Storage is managed by the DB Cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to assign to the new instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.TdeCredentialArn">
            <summary>
            <para>
            <para>The ARN from the key store with which to associate the instance for TDE encryption.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.TdeCredentialPassword">
            <summary>
            <para>
            <para>The password for the given ARN from the key store in order to access the device.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.Timezone">
            <summary>
            <para>
            <para>The time zone of the DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of EC2 VPC security groups to associate with this DB instance.</para><para>Not applicable. The associated list of EC2 VPC security groups is managed by the DB
            cluster. For more information, see <a>CreateDBCluster</a>.</para><para>Default: The default EC2 VPC security group for the DB subnet group's VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.PubliclyAccessible">
            <summary>
            <para>
            <para>This flag should no longer be used.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.CreateDBInstanceResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.CreateDBInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBParameterGroupCmdlet">
            <summary>
            Creates a new DB parameter group.
            
             
            <para>
            A DB parameter group is initially created with the default parameters for the database
            engine used by the DB instance. To provide custom values for any of the parameters,
            you must modify the group after creating it using <i>ModifyDBParameterGroup</i>. Once
            you've created a DB parameter group, you need to associate it with your DB instance
            using <i>ModifyDBInstance</i>. When you associate a new DB parameter group with a
            running DB instance, you need to reboot the DB instance without failover for the new
            DB parameter group and associated settings to take effect.
            </para><important><para>
            After you create a DB parameter group, you should wait at least 5 minutes before creating
            your first DB instance that uses that DB parameter group as the default parameter
            group. This allows Amazon Neptune to fully complete the create action before the parameter
            group is used as the default for a new DB instance. This is especially important for
            parameters that are critical when creating the default database for a DB instance,
            such as the character set for the default database defined by the <code>character_set_database</code>
            parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console
            or the <i>DescribeDBParameters</i> command to verify that your DB parameter group
            has been created or modified.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBParameterGroupCmdlet.DBParameterGroupFamily">
            <summary>
            <para>
            <para>The DB parameter group family name. A DB parameter group can be associated with one
            and only one DB parameter group family, and can be applied only to a DB instance running
            a database engine and engine version compatible with that DB parameter group family.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBParameterGroupCmdlet.DBParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB parameter group.</para><para>Constraints:</para><ul><li><para>Must be 1 to 255 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens</para></li></ul><note><para>This value is stored as a lowercase string.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBParameterGroupCmdlet.Description">
            <summary>
            <para>
            <para>The description for the DB parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBParameterGroupCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the new DB parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBParameterGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.CreateDBParameterGroupResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.CreateDBParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBSubnetGroupCmdlet">
            <summary>
            Creates a new DB subnet group. DB subnet groups must contain at least one subnet in
            at least two AZs in the AWS Region.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBSubnetGroupCmdlet.DBSubnetGroupDescription">
            <summary>
            <para>
            <para>The description for the DB subnet group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBSubnetGroupCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The name for the DB subnet group. This value is stored as a lowercase string.</para><para>Constraints: Must contain no more than 255 letters, numbers, periods, underscores,
            spaces, or hyphens. Must not be default.</para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBSubnetGroupCmdlet.SubnetId">
            <summary>
            <para>
            <para>The EC2 Subnet IDs for the DB subnet group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBSubnetGroupCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the new DB subnet group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBSubnetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBSubnetGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.CreateDBSubnetGroupResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.CreateDBSubnetGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBSubnetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSubnetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSubnetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTDBSubnetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.NewNPTEventSubscriptionCmdlet">
            <summary>
            Creates an event notification subscription. This action requires a topic ARN (Amazon
            Resource Name) created by either the Neptune console, the SNS console, or the SNS
            API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe
            to the topic. The ARN is displayed in the SNS console.
            
             
            <para>
            You can specify the type of source (SourceType) you want to be notified of, provide
            a list of Neptune sources (SourceIds) that triggers the events, and provide a list
            of event categories (EventCategories) for events you want to be notified of. For example,
            you can specify SourceType = db-instance, SourceIds = mydbinstance1, mydbinstance2
            and EventCategories = Availability, Backup.
            </para><para>
            If you specify both the SourceType and SourceIds, such as SourceType = db-instance
            and SourceIdentifier = myDBInstance1, you are notified of all the db-instance events
            for the specified source. If you specify a SourceType but do not specify a SourceIdentifier,
            you receive notice of the events for that source type for all your Neptune sources.
            If you do not specify either the SourceType nor the SourceIdentifier, you are notified
            of events generated from all Neptune sources belonging to your customer account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTEventSubscriptionCmdlet.Enabled">
            <summary>
            <para>
            <para> A Boolean value; set to <b>true</b> to activate the subscription, set to <b>false</b>
            to create the subscription but not active it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTEventSubscriptionCmdlet.EventCategory">
            <summary>
            <para>
            <para> A list of event categories for a SourceType that you want to subscribe to. You can
            see a list of the categories for a given SourceType by using the <b>DescribeEventCategories</b>
            action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTEventSubscriptionCmdlet.SnsTopicArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the SNS topic created for event notification. The
            ARN is created by Amazon SNS when you create a topic and subscribe to it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTEventSubscriptionCmdlet.SourceId">
            <summary>
            <para>
            <para>The list of identifiers of the event sources for which events are returned. If not
            specified, then all sources are included in the response. An identifier must begin
            with a letter and must contain only ASCII letters, digits, and hyphens; it can't end
            with a hyphen or contain two consecutive hyphens.</para><para>Constraints:</para><ul><li><para>If SourceIds are supplied, SourceType must also be provided.</para></li><li><para>If the source type is a DB instance, then a <code>DBInstanceIdentifier</code> must
            be supplied.</para></li><li><para>If the source type is a DB security group, a <code>DBSecurityGroupName</code> must
            be supplied.</para></li><li><para>If the source type is a DB parameter group, a <code>DBParameterGroupName</code> must
            be supplied.</para></li><li><para>If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code> must be supplied.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTEventSubscriptionCmdlet.SourceType">
            <summary>
            <para>
            <para>The type of source that is generating the events. For example, if you want to be notified
            of events generated by a DB instance, you would set this parameter to db-instance.
            if this value is not specified, all events are returned.</para><para>Valid values: <code>db-instance</code> | <code>db-cluster</code> | <code>db-parameter-group</code>
            | <code>db-security-group</code> | <code>db-snapshot</code> | <code>db-cluster-snapshot</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTEventSubscriptionCmdlet.SubscriptionName">
            <summary>
            <para>
            <para>The name of the subscription.</para><para>Constraints: The name must be less than 255 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTEventSubscriptionCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be applied to the new event subscription.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTEventSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventSubscription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.CreateEventSubscriptionResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.CreateEventSubscriptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTEventSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubscriptionName parameter.
            The -PassThru parameter is deprecated, use -Select '^SubscriptionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.NewNPTEventSubscriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBClusterCmdlet">
            <summary>
            The DeleteDBCluster action deletes a previously provisioned DB cluster. When you delete
            a DB cluster, all automated backups for that DB cluster are deleted and can't be recovered.
            Manual DB cluster snapshots of the specified DB cluster are not deleted.
            
             
            <para>
            Note that the DB Cluster cannot be deleted if deletion protection is enabled. To delete
            it, you must first set its <code>DeletionProtection</code> field to <code>False</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The DB cluster identifier for the DB cluster to be deleted. This parameter isn't case-sensitive.</para><para>Constraints:</para><ul><li><para>Must match an existing DBClusterIdentifier.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBClusterCmdlet.FinalDBSnapshotIdentifier">
            <summary>
            <para>
            <para> The DB cluster snapshot identifier of the new DB cluster snapshot created when <code>SkipFinalSnapshot</code>
            is set to <code>false</code>.</para><note><para> Specifying this parameter and also setting the <code>SkipFinalShapshot</code> parameter
            to true results in an error.</para></note><para>Constraints:</para><ul><li><para>Must be 1 to 255 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBClusterCmdlet.SkipFinalSnapshot">
            <summary>
            <para>
            <para> Determines whether a final DB cluster snapshot is created before the DB cluster is
            deleted. If <code>true</code> is specified, no DB cluster snapshot is created. If
            <code>false</code> is specified, a DB cluster snapshot is created before the DB cluster
            is deleted.</para><note><para>You must specify a <code>FinalDBSnapshotIdentifier</code> parameter if <code>SkipFinalSnapshot</code>
            is <code>false</code>.</para></note><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DeleteDBClusterResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DeleteDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBClusterParameterGroupCmdlet">
            <summary>
            Deletes a specified DB cluster parameter group. The DB cluster parameter group to
            be deleted can't be associated with any DB clusters.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBClusterParameterGroupCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB cluster parameter group.</para><para>Constraints:</para><ul><li><para>Must be the name of an existing DB cluster parameter group.</para></li><li><para>You can't delete a default DB cluster parameter group.</para></li><li><para>Cannot be associated with any DB clusters.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DeleteDBClusterParameterGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBClusterParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBClusterSnapshotCmdlet">
            <summary>
            Deletes a DB cluster snapshot. If the snapshot is being copied, the copy operation
            is terminated.
            
             <note><para>
            The DB cluster snapshot must be in the <code>available</code> state to be deleted.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBClusterSnapshotCmdlet.DBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier of the DB cluster snapshot to delete.</para><para>Constraints: Must be the name of an existing DB cluster snapshot in the <code>available</code>
            state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBClusterSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterSnapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DeleteDBClusterSnapshotResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DeleteDBClusterSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBClusterSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterSnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterSnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBClusterSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBInstanceCmdlet">
            <summary>
            The DeleteDBInstance action deletes a previously provisioned DB instance. When you
            delete a DB instance, all automated backups for that instance are deleted and can't
            be recovered. Manual DB snapshots of the DB instance to be deleted by <code>DeleteDBInstance</code>
            are not deleted.
            
             
            <para>
             If you request a final DB snapshot the status of the Amazon Neptune DB instance is
            <code>deleting</code> until the DB snapshot is created. The API action <code>DescribeDBInstance</code>
            is used to monitor the status of this operation. The action can't be canceled or reverted
            once submitted.
            </para><para>
            Note that when a DB instance is in a failure state and has a status of <code>failed</code>,
            <code>incompatible-restore</code>, or <code>incompatible-network</code>, you can only
            delete it when the <code>SkipFinalSnapshot</code> parameter is set to <code>true</code>.
            </para><para>
            You can't delete a DB instance if it is the only instance in the DB cluster, or if
            it has deletion protection enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBInstanceCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The DB instance identifier for the DB instance to be deleted. This parameter isn't
            case-sensitive.</para><para>Constraints:</para><ul><li><para>Must match the name of an existing DB instance.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBInstanceCmdlet.FinalDBSnapshotIdentifier">
            <summary>
            <para>
            <para> The DBSnapshotIdentifier of the new DBSnapshot created when SkipFinalSnapshot is
            set to <code>false</code>.</para><note><para>Specifying this parameter and also setting the SkipFinalShapshot parameter to true
            results in an error.</para></note><para>Constraints:</para><ul><li><para>Must be 1 to 255 letters or numbers.</para></li><li><para>First character must be a letter</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens</para></li><li><para>Cannot be specified when deleting a Read Replica.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBInstanceCmdlet.SkipFinalSnapshot">
            <summary>
            <para>
            <para> Determines whether a final DB snapshot is created before the DB instance is deleted.
            If <code>true</code> is specified, no DBSnapshot is created. If <code>false</code>
            is specified, a DB snapshot is created before the DB instance is deleted.</para><para>Note that when a DB instance is in a failure state and has a status of 'failed', 'incompatible-restore',
            or 'incompatible-network', it can only be deleted when the SkipFinalSnapshot parameter
            is set to "true".</para><para>Specify <code>true</code> when deleting a Read Replica.</para><note><para>The FinalDBSnapshotIdentifier parameter must be specified if SkipFinalSnapshot is
            <code>false</code>.</para></note><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DeleteDBInstanceResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DeleteDBInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBParameterGroupCmdlet">
            <summary>
            Deletes a specified DBParameterGroup. The DBParameterGroup to be deleted can't be
            associated with any DB instances.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBParameterGroupCmdlet.DBParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB parameter group.</para><para>Constraints:</para><ul><li><para>Must be the name of an existing DB parameter group</para></li><li><para>You can't delete a default DB parameter group</para></li><li><para>Cannot be associated with any DB instances</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DeleteDBParameterGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBSubnetGroupCmdlet">
            <summary>
            Deletes a DB subnet group.
            
             <note><para>
            The specified database subnet group must not be associated with any DB instances.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBSubnetGroupCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The name of the database subnet group to delete.</para><note><para>You can't delete the default subnet group.</para></note><para>Constraints:</para><para>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBSubnetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DeleteDBSubnetGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBSubnetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSubnetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSubnetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTDBSubnetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTEventSubscriptionCmdlet">
            <summary>
            Deletes an event notification subscription.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTEventSubscriptionCmdlet.SubscriptionName">
            <summary>
            <para>
            <para>The name of the event notification subscription you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTEventSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventSubscription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.DeleteEventSubscriptionResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.DeleteEventSubscriptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTEventSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubscriptionName parameter.
            The -PassThru parameter is deprecated, use -Select '^SubscriptionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTEventSubscriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTResourceTagCmdlet">
            <summary>
            Removes metadata tags from an Amazon Neptune resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTResourceTagCmdlet.ResourceName">
            <summary>
            <para>
            <para>The Amazon Neptune resource that the tags are removed from. This value is an Amazon
            Resource Name (ARN). For information about creating an ARN, see <a href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
            Constructing an Amazon Resource Name (ARN)</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The tag key (name) of the tag to be removed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.RemoveTagsFromResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceName parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTRoleFromDBClusterCmdlet">
            <summary>
            Disassociates an Identity and Access Management (IAM) role from a DB cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTRoleFromDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The name of the DB cluster to disassociate the IAM role from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTRoleFromDBClusterCmdlet.RoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the IAM role to disassociate from the DB cluster,
            for example <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTRoleFromDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.RemoveRoleFromDBClusterResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTRoleFromDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RoleArn parameter.
            The -PassThru parameter is deprecated, use -Select '^RoleArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTRoleFromDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTSourceIdentifierFromSubscriptionCmdlet">
            <summary>
            Removes a source identifier from an existing event notification subscription.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTSourceIdentifierFromSubscriptionCmdlet.SourceIdentifier">
            <summary>
            <para>
            <para> The source identifier to be removed from the subscription, such as the <b>DB instance
            identifier</b> for a DB instance or the name of a security group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTSourceIdentifierFromSubscriptionCmdlet.SubscriptionName">
            <summary>
            <para>
            <para>The name of the event notification subscription you want to remove a source identifier
            from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTSourceIdentifierFromSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventSubscription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.RemoveSourceIdentifierFromSubscriptionResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.RemoveSourceIdentifierFromSubscriptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTSourceIdentifierFromSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RemoveNPTSourceIdentifierFromSubscriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.ResetNPTDBClusterParameterGroupCmdlet">
            <summary>
            Modifies the parameters of a DB cluster parameter group to the default value. To
            reset specific parameters submit a list of the following: <code>ParameterName</code>
            and <code>ApplyMethod</code>. To reset the entire DB cluster parameter group, specify
            the <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters.
            
             
            <para>
             When resetting the entire group, dynamic parameters are updated immediately and static
            parameters are set to <code>pending-reboot</code> to take effect on the next DB instance
            restart or <a>RebootDBInstance</a> request. You must call <a>RebootDBInstance</a>
            for every DB instance in your DB cluster that you want the updated static parameter
            to apply to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.ResetNPTDBClusterParameterGroupCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB cluster parameter group to reset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.ResetNPTDBClusterParameterGroupCmdlet.Parameter">
            <summary>
            <para>
            <para>A list of parameter names in the DB cluster parameter group to reset to the default
            values. You can't use this parameter if the <code>ResetAllParameters</code> parameter
            is set to <code>true</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.ResetNPTDBClusterParameterGroupCmdlet.ResetAllParameter">
            <summary>
            <para>
            <para>A value that is set to <code>true</code> to reset all parameters in the DB cluster
            parameter group to their default values, and <code>false</code> otherwise. You can't
            use this parameter if there is a list of parameter names specified for the <code>Parameters</code>
            parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.ResetNPTDBClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterParameterGroupName'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.ResetDBClusterParameterGroupResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.ResetDBClusterParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.ResetNPTDBClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.ResetNPTDBClusterParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.ResetNPTDBParameterGroupCmdlet">
            <summary>
            Modifies the parameters of a DB parameter group to the engine/system default value.
            To reset specific parameters, provide a list of the following: <code>ParameterName</code>
            and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the
            <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters.
            When resetting the entire group, dynamic parameters are updated immediately and static
            parameters are set to <code>pending-reboot</code> to take effect on the next DB instance
            restart or <code>RebootDBInstance</code> request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.ResetNPTDBParameterGroupCmdlet.DBParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB parameter group.</para><para>Constraints:</para><ul><li><para>Must match the name of an existing DBParameterGroup.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.ResetNPTDBParameterGroupCmdlet.Parameter">
            <summary>
            <para>
            <para>To reset the entire DB parameter group, specify the <code>DBParameterGroup</code>
            name and <code>ResetAllParameters</code> parameters. To reset specific parameters,
            provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>.
            A maximum of 20 parameters can be modified in a single request.</para><para>Valid Values (for Apply method): <code>pending-reboot</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.ResetNPTDBParameterGroupCmdlet.ResetAllParameter">
            <summary>
            <para>
            <para>Specifies whether (<code>true</code>) or not (<code>false</code>) to reset all parameters
            in the DB parameter group to default values.</para><para>Default: <code>true</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.ResetNPTDBParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBParameterGroupName'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.ResetDBParameterGroupResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.ResetDBParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.ResetNPTDBParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.ResetNPTDBParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.RestartNPTDBInstanceCmdlet">
            <summary>
            You might need to reboot your DB instance, usually for maintenance reasons. For example,
            if you make certain modifications, or if you change the DB parameter group associated
            with the DB instance, you must reboot the instance for the changes to take effect.
            
             
            <para>
            Rebooting a DB instance restarts the database engine service. Rebooting a DB instance
            results in a momentary outage, during which the DB instance status is set to rebooting.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestartNPTDBInstanceCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The DB instance identifier. This parameter is stored as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing DBInstance.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestartNPTDBInstanceCmdlet.ForceFailover">
            <summary>
            <para>
            <para> When <code>true</code>, the reboot is conducted through a MultiAZ failover.</para><para>Constraint: You can't specify <code>true</code> if the instance is not configured
            for MultiAZ.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestartNPTDBInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.RebootDBInstanceResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.RebootDBInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestartNPTDBInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestartNPTDBInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterFromSnapshotCmdlet">
            <summary>
            Creates a new DB cluster from a DB snapshot or DB cluster snapshot.
            
             
            <para>
            If a DB snapshot is specified, the target DB cluster is created from the source DB
            snapshot with a default configuration and default security group.
            </para><para>
            If a DB cluster snapshot is specified, the target DB cluster is created from the source
            DB cluster restore point with the same configuration as the original source DB cluster,
            except that the new DB cluster is created with the default security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterFromSnapshotCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>Provides the list of EC2 Availability Zones that instances in the restored DB cluster
            can be created in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterFromSnapshotCmdlet.DatabaseName">
            <summary>
            <para>
            <para>Not supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterFromSnapshotCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The name of the DB cluster to create from the DB snapshot or DB cluster snapshot.
            This parameter isn't case-sensitive.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens</para></li><li><para>First character must be a letter</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens</para></li></ul><para>Example: <code>my-snapshot-id</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterFromSnapshotCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB cluster parameter group to associate with the new DB cluster.</para><para>Constraints:</para><ul><li><para>If supplied, must match the name of an existing DBClusterParameterGroup.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterFromSnapshotCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The name of the DB subnet group to use for the new DB cluster.</para><para>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterFromSnapshotCmdlet.DeletionProtection">
            <summary>
            <para>
            <para>A value that indicates whether the DB cluster has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterFromSnapshotCmdlet.EnableCloudwatchLogsExport">
            <summary>
            <para>
            <para>The list of logs that the restored DB cluster is to export to Amazon CloudWatch Logs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterFromSnapshotCmdlet.EnableIAMDatabaseAuthentication">
            <summary>
            <para>
            <para>True to enable mapping of AWS Identity and Access Management (IAM) accounts to database
            accounts, and otherwise false.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterFromSnapshotCmdlet.Engine">
            <summary>
            <para>
            <para>The database engine to use for the new DB cluster.</para><para>Default: The same as source</para><para>Constraint: Must be compatible with the engine of the source</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterFromSnapshotCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The version of the database engine to use for the new DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterFromSnapshotCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS KMS key identifier to use when restoring an encrypted DB cluster from a DB
            snapshot or DB cluster snapshot.</para><para>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key.
            If you are restoring a DB cluster with the same AWS account that owns the KMS encryption
            key used to encrypt the new DB cluster, then you can use the KMS key alias instead
            of the ARN for the KMS encryption key.</para><para>If you do not specify a value for the <code>KmsKeyId</code> parameter, then the following
            will occur:</para><ul><li><para>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> is encrypted,
            then the restored DB cluster is encrypted using the KMS key that was used to encrypt
            the DB snapshot or DB cluster snapshot.</para></li><li><para>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> is not
            encrypted, then the restored DB cluster is not encrypted.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterFromSnapshotCmdlet.OptionGroupName">
            <summary>
            <para>
            <para><i>(Not supported by Neptune)</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterFromSnapshotCmdlet.Port">
            <summary>
            <para>
            <para>The port number on which the new DB cluster accepts connections.</para><para>Constraints: Value must be <code>1150-65535</code></para><para>Default: The same port as the original DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterFromSnapshotCmdlet.SnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier for the DB snapshot or DB cluster snapshot to restore from.</para><para>You can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster
            snapshot. However, you can use only the ARN to specify a DB snapshot.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing Snapshot.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterFromSnapshotCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the restored DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterFromSnapshotCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of VPC security groups that the new DB cluster will belong to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterFromSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.RestoreDBClusterFromSnapshotResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.RestoreDBClusterFromSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterFromSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterFromSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterToPointInTimeCmdlet">
            <summary>
            Restores a DB cluster to an arbitrary point in time. Users can restore to any point
            in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code>
            days. The target DB cluster is created from the source DB cluster with the same configuration
            as the original DB cluster, except that the new DB cluster is created with the default
            DB security group.
            
             <note><para>
            This action only restores the DB cluster, not the DB instances for that DB cluster.
            You must invoke the <a>CreateDBInstance</a> action to create DB instances for the
            restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>.
            You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code>
            action has completed and the DB cluster is available.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterToPointInTimeCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The name of the new DB cluster to be created.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens</para></li><li><para>First character must be a letter</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterToPointInTimeCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB cluster parameter group to associate with the new DB cluster.</para><para>Constraints:</para><ul><li><para>If supplied, must match the name of an existing DBClusterParameterGroup.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterToPointInTimeCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The DB subnet group name to use for the new DB cluster.</para><para>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterToPointInTimeCmdlet.DeletionProtection">
            <summary>
            <para>
            <para>A value that indicates whether the DB cluster has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterToPointInTimeCmdlet.EnableCloudwatchLogsExport">
            <summary>
            <para>
            <para>The list of logs that the restored DB cluster is to export to CloudWatch Logs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterToPointInTimeCmdlet.EnableIAMDatabaseAuthentication">
            <summary>
            <para>
            <para>True to enable mapping of AWS Identity and Access Management (IAM) accounts to database
            accounts, and otherwise false.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterToPointInTimeCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS KMS key identifier to use when restoring an encrypted DB cluster from an encrypted
            DB cluster.</para><para>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key.
            If you are restoring a DB cluster with the same AWS account that owns the KMS encryption
            key used to encrypt the new DB cluster, then you can use the KMS key alias instead
            of the ARN for the KMS encryption key.</para><para>You can restore to a new DB cluster and encrypt the new DB cluster with a KMS key
            that is different than the KMS key used to encrypt the source DB cluster. The new
            DB cluster is encrypted with the KMS key identified by the <code>KmsKeyId</code> parameter.</para><para>If you do not specify a value for the <code>KmsKeyId</code> parameter, then the following
            will occur:</para><ul><li><para>If the DB cluster is encrypted, then the restored DB cluster is encrypted using the
            KMS key that was used to encrypt the source DB cluster.</para></li><li><para>If the DB cluster is not encrypted, then the restored DB cluster is not encrypted.</para></li></ul><para>If <code>DBClusterIdentifier</code> refers to a DB cluster that is not encrypted,
            then the restore request is rejected.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterToPointInTimeCmdlet.OptionGroupName">
            <summary>
            <para>
            <para><i>(Not supported by Neptune)</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterToPointInTimeCmdlet.Port">
            <summary>
            <para>
            <para>The port number on which the new DB cluster accepts connections.</para><para>Constraints: Value must be <code>1150-65535</code></para><para>Default: The same port as the original DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterToPointInTimeCmdlet.RestoreToTimeUtc">
            <summary>
            <para>
            <para>The date and time to restore the DB cluster to.</para><para>Valid Values: Value must be a time in Universal Coordinated Time (UTC) format</para><para>Constraints:</para><ul><li><para>Must be before the latest restorable time for the DB instance</para></li><li><para>Must be specified if <code>UseLatestRestorableTime</code> parameter is not provided</para></li><li><para>Cannot be specified if <code>UseLatestRestorableTime</code> parameter is true</para></li><li><para>Cannot be specified if <code>RestoreType</code> parameter is <code>copy-on-write</code></para></li></ul><para>Example: <code>2015-03-07T23:45:00Z</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterToPointInTimeCmdlet.RestoreType">
            <summary>
            <para>
            <para>The type of restore to be performed. You can specify one of the following values:</para><ul><li><para><code>full-copy</code> - The new DB cluster is restored as a full copy of the source
            DB cluster.</para></li><li><para><code>copy-on-write</code> - The new DB cluster is restored as a clone of the source
            DB cluster.</para></li></ul><para>If you don't specify a <code>RestoreType</code> value, then the new DB cluster is
            restored as a full copy of the source DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterToPointInTimeCmdlet.SourceDBClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the source DB cluster from which to restore.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing DBCluster.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterToPointInTimeCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be applied to the restored DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterToPointInTimeCmdlet.UseLatestRestorableTime">
            <summary>
            <para>
            <para>A value that is set to <code>true</code> to restore the DB cluster to the latest restorable
            backup time, and <code>false</code> otherwise.</para><para>Default: <code>false</code></para><para>Constraints: Cannot be specified if <code>RestoreToTime</code> parameter is provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterToPointInTimeCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of VPC security groups that the new DB cluster belongs to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterToPointInTimeCmdlet.RestoreToTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use RestoreToTimeUtc instead. Setting either RestoreToTime
            or RestoreToTimeUtc results in both RestoreToTime and RestoreToTimeUtc being assigned,
            the latest assignment to either one of the two property is reflected in the value
            of both. RestoreToTime is provided for backwards compatibility only and assigning
            a non-Utc DateTime to it results in the wrong timestamp being passed to the service.</para><para>The date and time to restore the DB cluster to.</para><para>Valid Values: Value must be a time in Universal Coordinated Time (UTC) format</para><para>Constraints:</para><ul><li><para>Must be before the latest restorable time for the DB instance</para></li><li><para>Must be specified if <code>UseLatestRestorableTime</code> parameter is not provided</para></li><li><para>Cannot be specified if <code>UseLatestRestorableTime</code> parameter is true</para></li><li><para>Cannot be specified if <code>RestoreType</code> parameter is <code>copy-on-write</code></para></li></ul><para>Example: <code>2015-03-07T23:45:00Z</code></para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterToPointInTimeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.RestoreDBClusterToPointInTimeResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.RestoreDBClusterToPointInTimeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterToPointInTimeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.RestoreNPTDBClusterToPointInTimeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.StartNPTDBClusterCmdlet">
            <summary>
            Starts an Amazon Neptune DB cluster that was stopped using the AWS console, the AWS
            CLI stop-db-cluster command, or the StopDBCluster API.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.StartNPTDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The DB cluster identifier of the Neptune DB cluster to be started. This parameter
            is stored as a lowercase string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.StartNPTDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.StartDBClusterResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.StartDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.StartNPTDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.StartNPTDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.StartNPTDBClusterFailoverCmdlet">
            <summary>
            Forces a failover for a DB cluster.
            
             
            <para>
            A failover for a DB cluster promotes one of the Read Replicas (read-only instances)
            in the DB cluster to be the primary instance (the cluster writer).
            </para><para>
            Amazon Neptune will automatically fail over to a Read Replica, if one exists, when
            the primary instance fails. You can force a failover when you want to simulate a failure
            of a primary instance for testing. Because each instance in a DB cluster has its own
            endpoint address, you will need to clean up and re-establish any existing connections
            that use those endpoint addresses when the failover is complete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.StartNPTDBClusterFailoverCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>A DB cluster identifier to force a failover for. This parameter is not case-sensitive.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing DBCluster.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.StartNPTDBClusterFailoverCmdlet.TargetDBInstanceIdentifier">
            <summary>
            <para>
            <para>The name of the instance to promote to the primary instance.</para><para>You must specify the instance identifier for an Read Replica in the DB cluster. For
            example, <code>mydbcluster-replica1</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.StartNPTDBClusterFailoverCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.FailoverDBClusterResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.FailoverDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.StartNPTDBClusterFailoverCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.StartNPTDBClusterFailoverCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.StopNPTDBClusterCmdlet">
            <summary>
            Stops an Amazon Neptune DB cluster. When you stop a DB cluster, Neptune retains the
            DB cluster's metadata, including its endpoints and DB parameter groups.
            
             
            <para>
            Neptune also retains the transaction logs so you can do a point-in-time restore if
            necessary.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.StopNPTDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The DB cluster identifier of the Neptune DB cluster to be stopped. This parameter
            is stored as a lowercase string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.StopNPTDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.StopDBClusterResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.StopDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.StopNPTDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.StopNPTDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.NPT.SubmitNPTPendingMaintenanceActionCmdlet">
            <summary>
            Applies a pending maintenance action to a resource (for example, to a DB instance).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.SubmitNPTPendingMaintenanceActionCmdlet.ApplyAction">
            <summary>
            <para>
            <para>The pending maintenance action to apply to this resource.</para><para>Valid values: <code>system-update</code>, <code>db-upgrade</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.SubmitNPTPendingMaintenanceActionCmdlet.OptInType">
            <summary>
            <para>
            <para>A value that specifies the type of opt-in request, or undoes an opt-in request. An
            opt-in request of type <code>immediate</code> can't be undone.</para><para>Valid values:</para><ul><li><para><code>immediate</code> - Apply the maintenance action immediately.</para></li><li><para><code>next-maintenance</code> - Apply the maintenance action during the next maintenance
            window for the resource.</para></li><li><para><code>undo-opt-in</code> - Cancel any existing <code>next-maintenance</code> opt-in
            requests.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.SubmitNPTPendingMaintenanceActionCmdlet.ResourceIdentifier">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource that the pending maintenance action
            applies to. For information about creating an ARN, see <a href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
            Constructing an Amazon Resource Name (ARN)</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.SubmitNPTPendingMaintenanceActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourcePendingMaintenanceActions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Neptune.Model.ApplyPendingMaintenanceActionResponse).
            Specifying the name of a property of type Amazon.Neptune.Model.ApplyPendingMaintenanceActionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.SubmitNPTPendingMaintenanceActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.NPT.SubmitNPTPendingMaintenanceActionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
