<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.CloudFormation</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.TestCFNStackCmdlet">
            <summary>
            Tests a CloudFormation stack to determine if it's in a certain status.
            The command returns true or false, depending on whether or not the specified stack is in a given status.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.TestCFNStackCmdlet.StackName">
            <summary>
            The name or unique stack ID of the of the CloudFormation stack whose status will be monitored.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.TestCFNStackCmdlet.Status">
            <summary>
            <para>
            The CloudFormation status. You can tab-complete the values for this parameter or view a list of all
            supported CloudFormation status types in the AWS documentation: https://goo.gl/cpSu29.
            </para>
            <para>
            If not specified the command checks the stack's status against the states 
            'UPDATE_ROLLBACK_COMPLETE', 'CREATE_COMPLETE', 'ROLLBACK_COMPLETE' and 'UPDATE_COMPLETE'.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.WaitCFNStackCmdlet">
            <summary>
            Pauses execution of the script until the desired CloudFormation Stack status has been reached
            or timeout occurs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.WaitCFNStackCmdlet.StackName">
            <summary>
            The name or unique stack ID of the of the CloudFormation stack whose status will be monitored.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.WaitCFNStackCmdlet.Status">
            <summary>
            <para>
            The CloudFormation status. You can tab-complete the values for this parameter or view a list of all
            supported CloudFormation status types in the AWS documentation: https://goo.gl/cpSu29.
            </para>
            <para>
            If not specified the command checks the stack's status against the states 
            'UPDATE_ROLLBACK_COMPLETE', 'CREATE_COMPLETE', 'ROLLBACK_COMPLETE' and 'UPDATE_COMPLETE'.
            </para>
            <para>If the set of states contains 'DELETE_COMPLETE' the cmdlet will wait for the underlying
            DescribeStacks API call to return an error indicating the stack no longer exists before 
            exiting. No output is emitted to the pipeline in this scenario.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.WaitCFNStackCmdlet.Timeout">
            <summary>
            The number of seconds that the command should run for before timing out and throwing an exception.
            If not specified the command waits for 120 seconds.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNAccountLimitCmdlet">
            <summary>
            Retrieves your account's AWS CloudFormation limits, such as the maximum number of
            stacks that you can create in your account. For more information about account limits,
            see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS
            CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNAccountLimitCmdlet.NextToken">
            <summary>
            <para>
            <para>A string that identifies the next page of limits that you want to retrieve.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNAccountLimitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AccountLimits'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DescribeAccountLimitsResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.DescribeAccountLimitsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNAccountLimitCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNChangeSetCmdlet">
            <summary>
            Returns the inputs for the change set and a list of changes that AWS CloudFormation
            will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating
            Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.<br/><br/>In the AWS.Tools.CloudFormation module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNChangeSetCmdlet.ChangeSetName">
            <summary>
            <para>
            <para>The name or Amazon Resource Name (ARN) of the change set that you want to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNChangeSetCmdlet.StackName">
            <summary>
            <para>
            <para>If you specified the name of a change set, specify the stack name or ID (ARN) of the
            change set you want to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNChangeSetCmdlet.NextToken">
            <summary>
            <para>
            <para>A string (provided by the <a>DescribeChangeSet</a> response output) that identifies
            the next page of information that you want to retrieve.</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.CloudFormation module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNChangeSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DescribeChangeSetResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.DescribeChangeSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNChangeSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ChangeSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^ChangeSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNChangeSetCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNChangeSetListCmdlet">
            <summary>
            Returns the ID and status of each active change set for a stack. For example, AWS
            CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or
            <code>CREATE_PENDING</code> state.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNChangeSetListCmdlet.StackName">
            <summary>
            <para>
            <para>The name or the Amazon Resource Name (ARN) of the stack for which you want to list
            change sets.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNChangeSetListCmdlet.NextToken">
            <summary>
            <para>
            <para>A string (provided by the <a>ListChangeSets</a> response output) that identifies the
            next page of change sets that you want to retrieve.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNChangeSetListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Summaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.ListChangeSetsResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.ListChangeSetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNChangeSetListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNChangeSetListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNDetectedStackResourceDriftCmdlet">
            <summary>
            Returns drift information for the resources that have been checked for drift in the
            specified stack. This includes actual and expected configuration values for resources
            where AWS CloudFormation detects configuration drift.
            
             
            <para>
            For a given stack, there will be one <code>StackResourceDrift</code> for each stack
            resource that has been checked for drift. Resources that have not yet been checked
            for drift are not included. Resources that do not currently support drift detection
            are not checked, and so not included. For a list of resources that support drift detection,
            see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources
            that Support Drift Detection</a>.
            </para><para>
            Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a>
            to detect drift on all supported resources for a given stack.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNDetectedStackResourceDriftCmdlet.StackName">
            <summary>
            <para>
            <para>The name of the stack for which you want drift information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNDetectedStackResourceDriftCmdlet.StackResourceDriftStatusFilter">
            <summary>
            <para>
            <para>The resource drift status values to use as filters for the resource drift results
            returned.</para><ul><li><para><code>DELETED</code>: The resource differs from its expected template configuration
            in that the resource has been deleted.</para></li><li><para><code>MODIFIED</code>: One or more resource properties differ from their expected
            template values.</para></li><li><para><code>IN_SYNC</code>: The resources's actual configuration matches its expected template
            configuration.</para></li><li><para><code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNDetectedStackResourceDriftCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned with a single call. If the number of
            available results exceeds this maximum, the response includes a <code>NextToken</code>
            value that you can assign to the <code>NextToken</code> request parameter to get the
            next set of results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNDetectedStackResourceDriftCmdlet.NextToken">
            <summary>
            <para>
            <para>A string that identifies the next page of stack resource drift results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNDetectedStackResourceDriftCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StackResourceDrifts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DescribeStackResourceDriftsResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.DescribeStackResourceDriftsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNDetectedStackResourceDriftCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNDetectedStackResourceDriftCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNExportCmdlet">
            <summary>
            Lists all exported output values in the account and Region in which you call this
            action. Use this action to see the exported output values that you can import into
            other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"><code>Fn::ImportValue</code></a> function. 
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html">
            AWS CloudFormation Export Stack Output Values</a>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNExportCmdlet.NextToken">
            <summary>
            <para>
            <para>A string (provided by the <a>ListExports</a> response output) that identifies the
            next page of exported output values that you asked to retrieve.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNExportCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Exports'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.ListExportsResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.ListExportsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNExportCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNImportListCmdlet">
            <summary>
            Lists all stacks that are importing an exported output value. To modify or remove
            an exported output value, first use this action to see which stacks are using it.
            To see the exported output values in your account, see <a>ListExports</a>. 
            
             
            <para>
            For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"><code>Fn::ImportValue</code></a> function. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNImportListCmdlet.ExportName">
            <summary>
            <para>
            <para>The name of the exported output value. AWS CloudFormation returns the stack names
            that are importing this value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNImportListCmdlet.NextToken">
            <summary>
            <para>
            <para>A string (provided by the <a>ListImports</a> response output) that identifies the
            next page of stacks that are importing the specified exported output value. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNImportListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Imports'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.ListImportsResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.ListImportsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNImportListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExportName parameter.
            The -PassThru parameter is deprecated, use -Select '^ExportName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNImportListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackCmdlet">
            <summary>
            Returns the description for the specified stack; if no stack name was specified, then
            it returns the description for all the stacks created.
            
             <note><para>
            If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackCmdlet.StackName">
            <summary>
            <para>
            <para>The name or the unique stack ID that is associated with the stack, which are not always
            interchangeable:</para><ul><li><para>Running stacks: You can specify either the stack's name or its unique stack ID.</para></li><li><para>Deleted stacks: You must specify the unique stack ID.</para></li></ul><para>Default: There is no default value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackCmdlet.NextToken">
            <summary>
            <para>
            <para>A string that identifies the next page of stacks that you want to retrieve.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Stacks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DescribeStacksResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.DescribeStacksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackDriftDetectionStatusCmdlet">
            <summary>
            Returns information about a stack drift detection operation. A stack drift detection
            operation detects whether a stack's actual configuration differs, or has <i>drifted</i>,
            from it's expected configuration, as defined in the stack template and any values
            specified as template parameters. A stack is considered to have drifted if one or
            more of its resources have drifted. For more information on stack and resource drift,
            see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting
            Unregulated Configuration Changes to Stacks and Resources</a>.
            
             
            <para>
            Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code>
            returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of
            the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift
            detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return
            drift information about the stack and its resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackDriftDetectionStatusCmdlet.StackDriftDetectionId">
            <summary>
            <para>
            <para>The ID of the drift detection results of this operation. </para><para>AWS CloudFormation generates new results, with a new drift detection ID, each time
            this operation is run. However, the number of drift results AWS CloudFormation retains
            for any given stack, and for how long, may vary. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackDriftDetectionStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DescribeStackDriftDetectionStatusResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.DescribeStackDriftDetectionStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackDriftDetectionStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackDriftDetectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^StackDriftDetectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackEventCmdlet">
            <summary>
            Returns all stack related events for a specified stack in reverse chronological order.
            For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a>
            in the AWS CloudFormation User Guide.
            
             <note><para>
            You can list events for stacks that have failed to create or have been deleted by
            specifying the unique stack identifier (stack ID).
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackEventCmdlet.StackName">
            <summary>
            <para>
            <para>The name or the unique stack ID that is associated with the stack, which are not always
            interchangeable:</para><ul><li><para>Running stacks: You can specify either the stack's name or its unique stack ID.</para></li><li><para>Deleted stacks: You must specify the unique stack ID.</para></li></ul><para>Default: There is no default value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackEventCmdlet.NextToken">
            <summary>
            <para>
            <para>A string that identifies the next page of events that you want to retrieve.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackEventCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StackEvents'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DescribeStackEventsResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.DescribeStackEventsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackEventCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackEventCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackInstanceCmdlet">
            <summary>
            Returns the stack instance that's associated with the specified stack set, AWS account,
            and Region.
            
             
            <para>
            For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackInstanceCmdlet.StackInstanceAccount">
            <summary>
            <para>
            <para>The ID of an AWS account that's associated with this stack instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackInstanceCmdlet.StackInstanceRegion">
            <summary>
            <para>
            <para>The name of a Region that's associated with this stack instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackInstanceCmdlet.StackSetName">
            <summary>
            <para>
            <para>The name or the unique stack ID of the stack set that you want to get stack instance
            information for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StackInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DescribeStackInstanceResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.DescribeStackInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackInstanceListCmdlet">
            <summary>
            Returns summary information about stack instances that are associated with the specified
            stack set. You can filter for stack instances that are associated with a specific
            AWS account name or Region.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackInstanceListCmdlet.StackInstanceAccount">
            <summary>
            <para>
            <para>The name of the AWS account that you want to list stack instances for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackInstanceListCmdlet.StackInstanceRegion">
            <summary>
            <para>
            <para>The name of the Region where you want to list stack instances. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackInstanceListCmdlet.StackSetName">
            <summary>
            <para>
            <para>The name or unique ID of the stack set that you want to list stack instances for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackInstanceListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned with a single call. If the number of
            available results exceeds this maximum, the response includes a <code>NextToken</code>
            value that you can assign to the <code>NextToken</code> request parameter to get the
            next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackInstanceListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the previous request didn't return all of the remaining results, the response's
            <code>NextToken</code> parameter value is set to a token. To retrieve the next set
            of results, call <code>ListStackInstances</code> again and assign that token to the
            request object's <code>NextToken</code> parameter. If there are no remaining results,
            the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackInstanceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Summaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.ListStackInstancesResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.ListStackInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackInstanceListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackInstanceListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackPolicyCmdlet">
            <summary>
            Returns the stack policy for a specified stack. If a stack doesn't have a policy,
            a null value is returned.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackPolicyCmdlet.StackName">
            <summary>
            <para>
            <para>The name or unique stack ID that is associated with the stack whose policy you want
            to get.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StackPolicyBody'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.GetStackPolicyResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.GetStackPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceCmdlet">
            <summary>
            Returns a description of the specified resource in the specified stack.
            
             
            <para>
            For deleted stacks, DescribeStackResource returns resource information for up to 90
            days after the stack has been deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceCmdlet.LogicalResourceId">
            <summary>
            <para>
            <para>The logical name of the resource as specified in the template.</para><para>Default: There is no default value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceCmdlet.StackName">
            <summary>
            <para>
            <para>The name or the unique stack ID that is associated with the stack, which are not always
            interchangeable:</para><ul><li><para>Running stacks: You can specify either the stack's name or its unique stack ID.</para></li><li><para>Deleted stacks: You must specify the unique stack ID.</para></li></ul><para>Default: There is no default value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StackResourceDetail'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DescribeStackResourceResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.DescribeStackResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceDriftCmdlet">
            <summary>
            Returns information about whether a resource's actual configuration differs, or has
            <i>drifted</i>, from it's expected configuration, as defined in the stack template
            and any values specified as template parameters. This information includes actual
            and expected property values for resources in which AWS CloudFormation detects drift.
            Only resource properties explicitly defined in the stack template are checked for
            drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting
            Unregulated Configuration Changes to Stacks and Resources</a>.
            
             
            <para>
            Use <code>DetectStackResourceDrift</code> to detect drift on individual resources,
            or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that
            support drift detection.
            </para><para>
            Resources that do not currently support drift detection cannot be checked. For a list
            of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources
            that Support Drift Detection</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceDriftCmdlet.LogicalResourceId">
            <summary>
            <para>
            <para>The logical name of the resource for which to return drift information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceDriftCmdlet.StackName">
            <summary>
            <para>
            <para>The name of the stack to which the resource belongs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceDriftCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StackResourceDrift'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DetectStackResourceDriftResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.DetectStackResourceDriftResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceDriftCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceListCmdlet">
            <summary>
            Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code>
            is specified, all the associated resources that are part of the stack are returned.
            If <code>PhysicalResourceId</code> is specified, the associated resources of the stack
            that the resource belongs to are returned.
            
             <note><para>
            Only the first 100 resources will be returned. If your stack has more resources than
            this, you should use <code>ListStackResources</code> instead.
            </para></note><para>
            For deleted stacks, <code>DescribeStackResources</code> returns resource information
            for up to 90 days after the stack has been deleted.
            </para><para>
            You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>,
            but not both. In addition, you can specify <code>LogicalResourceId</code> to filter
            the returned result. For more information about resources, the <code>LogicalResourceId</code>
            and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS
            CloudFormation User Guide</a>.
            </para><note><para>
            A <code>ValidationError</code> is returned if you specify both <code>StackName</code>
            and <code>PhysicalResourceId</code> in the same request.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceListCmdlet.LogicalResourceId">
            <summary>
            <para>
            <para>The logical name of the resource as specified in the template.</para><para>Default: There is no default value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceListCmdlet.PhysicalResourceId">
            <summary>
            <para>
            <para>The name or unique identifier that corresponds to a physical instance ID of a resource
            supported by AWS CloudFormation.</para><para>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code>
            corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code>
            to <code>DescribeStackResources</code> to find which stack the instance belongs to
            and what other resources are part of the stack.</para><para>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you
            must specify <code>StackName</code>.</para><para>Default: There is no default value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceListCmdlet.StackName">
            <summary>
            <para>
            <para>The name or the unique stack ID that is associated with the stack, which are not always
            interchangeable:</para><ul><li><para>Running stacks: You can specify either the stack's name or its unique stack ID.</para></li><li><para>Deleted stacks: You must specify the unique stack ID.</para></li></ul><para>Default: There is no default value.</para><para>Required: Conditional. If you do not specify <code>StackName</code>, you must specify
            <code>PhysicalResourceId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StackResources'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DescribeStackResourcesResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.DescribeStackResourcesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceSummaryCmdlet">
            <summary>
            Returns descriptions of all resources of the specified stack.
            
             
            <para>
            For deleted stacks, ListStackResources returns resource information for up to 90 days
            after the stack has been deleted.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceSummaryCmdlet.StackName">
            <summary>
            <para>
            <para>The name or the unique stack ID that is associated with the stack, which are not always
            interchangeable:</para><ul><li><para>Running stacks: You can specify either the stack's name or its unique stack ID.</para></li><li><para>Deleted stacks: You must specify the unique stack ID.</para></li></ul><para>Default: There is no default value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceSummaryCmdlet.NextToken">
            <summary>
            <para>
            <para>A string that identifies the next page of stack resources that you want to retrieve.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceSummaryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StackResourceSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.ListStackResourcesResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.ListStackResourcesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceSummaryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackResourceSummaryCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetCmdlet">
            <summary>
            Returns the description of the specified stack set.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetCmdlet.StackSetName">
            <summary>
            <para>
            <para>The name or unique ID of the stack set whose description you want.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StackSet'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DescribeStackSetResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.DescribeStackSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetListCmdlet">
            <summary>
            Returns summary information about stack sets that are associated with the user.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetListCmdlet.Status">
            <summary>
            <para>
            <para>The status of the stack sets that you want to get summary information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned with a single call. If the number of
            available results exceeds this maximum, the response includes a <code>NextToken</code>
            value that you can assign to the <code>NextToken</code> request parameter to get the
            next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the previous paginated request didn't return all of the remaining results, the
            response object's <code>NextToken</code> parameter value is set to a token. To retrieve
            the next set of results, call <code>ListStackSets</code> again and assign that token
            to the request object's <code>NextToken</code> parameter. If there are no remaining
            results, the previous response object's <code>NextToken</code> parameter is set to
            <code>null</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Summaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.ListStackSetsResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.ListStackSetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Status parameter.
            The -PassThru parameter is deprecated, use -Select '^Status' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetOperationCmdlet">
            <summary>
            Returns the description of the specified stack set operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetOperationCmdlet.OperationId">
            <summary>
            <para>
            <para>The unique ID of the stack set operation. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetOperationCmdlet.StackSetName">
            <summary>
            <para>
            <para>The name or the unique stack ID of the stack set for the stack operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetOperationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StackSetOperation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DescribeStackSetOperationResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.DescribeStackSetOperationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetOperationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OperationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OperationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetOperationListCmdlet">
            <summary>
            Returns summary information about operations performed on a stack set.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetOperationListCmdlet.StackSetName">
            <summary>
            <para>
            <para>The name or unique ID of the stack set that you want to get operation summaries for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetOperationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned with a single call. If the number of
            available results exceeds this maximum, the response includes a <code>NextToken</code>
            value that you can assign to the <code>NextToken</code> request parameter to get the
            next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetOperationListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the previous paginated request didn't return all of the remaining results, the
            response object's <code>NextToken</code> parameter value is set to a token. To retrieve
            the next set of results, call <code>ListStackSetOperations</code> again and assign
            that token to the request object's <code>NextToken</code> parameter. If there are
            no remaining results, the previous response object's <code>NextToken</code> parameter
            is set to <code>null</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetOperationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Summaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.ListStackSetOperationsResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.ListStackSetOperationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetOperationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetOperationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetOperationResultListCmdlet">
            <summary>
            Returns summary information about the results of a stack set operation.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetOperationResultListCmdlet.OperationId">
            <summary>
            <para>
            <para>The ID of the stack set operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetOperationResultListCmdlet.StackSetName">
            <summary>
            <para>
            <para>The name or unique ID of the stack set that you want to get operation results for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetOperationResultListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned with a single call. If the number of
            available results exceeds this maximum, the response includes a <code>NextToken</code>
            value that you can assign to the <code>NextToken</code> request parameter to get the
            next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetOperationResultListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the previous request didn't return all of the remaining results, the response object's
            <code>NextToken</code> parameter value is set to a token. To retrieve the next set
            of results, call <code>ListStackSetOperationResults</code> again and assign that token
            to the request object's <code>NextToken</code> parameter. If there are no remaining
            results, the previous response object's <code>NextToken</code> parameter is set to
            <code>null</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetOperationResultListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Summaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.ListStackSetOperationResultsResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.ListStackSetOperationResultsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetOperationResultListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OperationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OperationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSetOperationResultListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSummaryCmdlet">
            <summary>
            Returns the summary information for stacks whose status matches the specified StackStatusFilter.
            Summary information for stacks that have been deleted is kept for 90 days after the
            stack is deleted. If no StackStatusFilter is specified, summary information for all
            stacks is returned (including existing stacks and stacks that have been deleted).<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSummaryCmdlet.StackStatusFilter">
            <summary>
            <para>
            <para>Stack status to use as a filter. Specify one or more stack status codes to list only
            stacks with the specified status codes. For a complete list of stack status codes,
            see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSummaryCmdlet.NextToken">
            <summary>
            <para>
            <para>A string that identifies the next page of stacks that you want to retrieve.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSummaryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StackSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.ListStacksResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.ListStacksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSummaryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackStatusFilter parameter.
            The -PassThru parameter is deprecated, use -Select '^StackStatusFilter' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNStackSummaryCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNTemplateCmdlet">
            <summary>
            Returns the template body for a specified stack. You can get the template for running
            or deleted stacks.
            
             
            <para>
            For deleted stacks, GetTemplate returns the template for up to 90 days after the stack
            has been deleted.
            </para><note><para>
             If the template does not exist, a <code>ValidationError</code> is returned. 
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTemplateCmdlet.ChangeSetName">
            <summary>
            <para>
            <para>The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation
            returns the associated template. If you specify a name, you must also specify the
            <code>StackName</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTemplateCmdlet.StackName">
            <summary>
            <para>
            <para>The name or the unique stack ID that is associated with the stack, which are not always
            interchangeable:</para><ul><li><para>Running stacks: You can specify either the stack's name or its unique stack ID.</para></li><li><para>Deleted stacks: You must specify the unique stack ID.</para></li></ul><para>Default: There is no default value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTemplateCmdlet.TemplateStage">
            <summary>
            <para>
            <para>For templates that include transforms, the stage of the template that AWS CloudFormation
            returns. To get the user-submitted template, specify <code>Original</code>. To get
            the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>.
            </para><para>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code>
            return the same template. By default, AWS CloudFormation specifies <code>Original</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TemplateBody'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.GetTemplateResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.GetTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNTemplateSummaryCmdlet">
            <summary>
            Returns information about a new or existing template. The <code>GetTemplateSummary</code>
            action is useful for viewing parameter information, such as default parameter values
            and parameter types, before you create or update a stack or stack set.
            
             
            <para>
            You can use the <code>GetTemplateSummary</code> action when you submit a template,
            or you can get template information for a stack set, or a running or deleted stack.
            </para><para>
            For deleted stacks, <code>GetTemplateSummary</code> returns the template information
            for up to 90 days after the stack has been deleted. If the template does not exist,
            a <code>ValidationError</code> is returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTemplateSummaryCmdlet.StackName">
            <summary>
            <para>
            <para>The name or the stack ID that is associated with the stack, which are not always interchangeable.
            For running stacks, you can specify either the stack's name or its unique stack ID.
            For deleted stack, you must specify the unique stack ID.</para><para>Conditional: You must specify only one of the following parameters: <code>StackName</code>,
            <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTemplateSummaryCmdlet.StackSetName">
            <summary>
            <para>
            <para>The name or unique ID of the stack set from which the stack was created.</para><para>Conditional: You must specify only one of the following parameters: <code>StackName</code>,
            <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTemplateSummaryCmdlet.TemplateBody">
            <summary>
            <para>
            <para>Structure containing the template body with a minimum length of 1 byte and a maximum
            length of 51,200 bytes. For more information about templates, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template
            Anatomy</a> in the AWS CloudFormation User Guide.</para><para>Conditional: You must specify only one of the following parameters: <code>StackName</code>,
            <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTemplateSummaryCmdlet.TemplateURL">
            <summary>
            <para>
            <para>Location of file containing the template body. The URL must point to a template (max
            size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information
            about templates, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template
            Anatomy</a> in the AWS CloudFormation User Guide.</para><para>Conditional: You must specify only one of the following parameters: <code>StackName</code>,
            <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTemplateSummaryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.GetTemplateSummaryResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.GetTemplateSummaryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTemplateSummaryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeCmdlet">
            <summary>
            Returns detailed information about a type that has been registered.
            
             
            <para>
            If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information
            about that specific type version. Otherwise, it returns information about the default
            type version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the type.</para><para>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>,
            or <code>Arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeCmdlet.Type">
            <summary>
            <para>
            <para>The kind of type. </para><para>Currently the only valid value is <code>RESOURCE</code>.</para><para>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>,
            or <code>Arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeCmdlet.TypeName">
            <summary>
            <para>
            <para>The name of the type.</para><para>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>,
            or <code>Arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeCmdlet.VersionId">
            <summary>
            <para>
            <para>The ID of a specific version of the type. The version ID is the value at the end of
            the Amazon Resource Name (ARN) assigned to the type version when it is registered.</para><para>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information
            about that specific type version. Otherwise, it returns information about the default
            type version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DescribeTypeResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.DescribeTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TypeName parameter.
            The -PassThru parameter is deprecated, use -Select '^TypeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeListCmdlet">
            <summary>
            Returns summary information about types that have been registered with CloudFormation.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeListCmdlet.DeprecatedStatus">
            <summary>
            <para>
            <para>The deprecation status of the types that you want to get summary information about.</para><para>Valid values include:</para><ul><li><para><code>LIVE</code>: The type is registered for use in CloudFormation operations.</para></li><li><para><code>DEPRECATED</code>: The type has been deregistered and can no longer be used
            in CloudFormation operations. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeListCmdlet.ProvisioningType">
            <summary>
            <para>
            <para>The provisioning behavior of the type. AWS CloudFormation determines the provisioning
            type during registration, based on the types of handlers in the schema handler package
            submitted.</para><para>Valid values include:</para><ul><li><para><code>FULLY_MUTABLE</code>: The type includes an update handler to process updates
            to the type during stack update operations.</para></li><li><para><code>IMMUTABLE</code>: The type does not include an update handler, so the type
            cannot be updated and must instead be replaced during stack update operations.</para></li><li><para><code>NON_PROVISIONABLE</code>: The type does not include create, read, and delete
            handlers, and therefore cannot actually be provisioned.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeListCmdlet.Visibility">
            <summary>
            <para>
            <para>The scope at which the type is visible and usable in CloudFormation operations.</para><para>Valid values include:</para><ul><li><para><code>PRIVATE</code>: The type is only visible and usable within the account in which
            it is registered. Currently, AWS CloudFormation marks any types you create as <code>PRIVATE</code>.</para></li><li><para><code>PUBLIC</code>: The type is publically visible and usable within any Amazon
            account.</para></li></ul><para>The default is <code>PRIVATE</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned with a single call. If the number of
            available results exceeds this maximum, the response includes a <code>NextToken</code>
            value that you can assign to the <code>NextToken</code> request parameter to get the
            next set of results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the previous paginated request didn't return all of the remaining results, the
            response object's <code>NextToken</code> parameter value is set to a token. To retrieve
            the next set of results, call this action again and assign that token to the request
            object's <code>NextToken</code> parameter. If there are no remaining results, the
            previous response object's <code>NextToken</code> parameter is set to <code>null</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TypeSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.ListTypesResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.ListTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeRegistrationCmdlet">
            <summary>
            Returns information about a type's registration, including its current status and
            type and version identifiers.
            
             
            <para>
            When you initiate a registration request using <code><a>RegisterType</a></code>,
            you can then use <code><a>DescribeTypeRegistration</a></code> to monitor the progress
            of that registration request.
            </para><para>
            Once the registration request has completed, use <code><a>DescribeType</a></code>
            to return detailed informaiton about a type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeRegistrationCmdlet.RegistrationToken">
            <summary>
            <para>
            <para>The identifier for this registration request.</para><para>This registration token is generated by CloudFormation when you initiate a registration
            request using <code><a>RegisterType</a></code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeRegistrationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DescribeTypeRegistrationResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.DescribeTypeRegistrationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeRegistrationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RegistrationToken parameter.
            The -PassThru parameter is deprecated, use -Select '^RegistrationToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeRegistrationListCmdlet">
            <summary>
            Returns a list of registration tokens for the specified type(s).<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeRegistrationListCmdlet.RegistrationStatusFilter">
            <summary>
            <para>
            <para>The current status of the type registration request.</para><para>The default is <code>IN_PROGRESS</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeRegistrationListCmdlet.Type">
            <summary>
            <para>
            <para>The kind of type.</para><para>Currently the only valid value is <code>RESOURCE</code>.</para><para>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>,
            or <code>Arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeRegistrationListCmdlet.TypeArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the type.</para><para>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>,
            or <code>Arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeRegistrationListCmdlet.TypeName">
            <summary>
            <para>
            <para>The name of the type.</para><para>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>,
            or <code>Arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeRegistrationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned with a single call. If the number of
            available results exceeds this maximum, the response includes a <code>NextToken</code>
            value that you can assign to the <code>NextToken</code> request parameter to get the
            next set of results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeRegistrationListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the previous paginated request didn't return all of the remaining results, the
            response object's <code>NextToken</code> parameter value is set to a token. To retrieve
            the next set of results, call this action again and assign that token to the request
            object's <code>NextToken</code> parameter. If there are no remaining results, the
            previous response object's <code>NextToken</code> parameter is set to <code>null</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeRegistrationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RegistrationTokenList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.ListTypeRegistrationsResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.ListTypeRegistrationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeRegistrationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TypeName parameter.
            The -PassThru parameter is deprecated, use -Select '^TypeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeRegistrationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeVersionCmdlet">
            <summary>
            Returns summary information about the versions of a type.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeVersionCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the type for which you want version summary information.</para><para>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>,
            or <code>Arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeVersionCmdlet.DeprecatedStatus">
            <summary>
            <para>
            <para>The deprecation status of the type versions that you want to get summary information
            about.</para><para>Valid values include:</para><ul><li><para><code>LIVE</code>: The type version is registered and can be used in CloudFormation
            operations, dependent on its provisioning behavior and visibility scope.</para></li><li><para><code>DEPRECATED</code>: The type version has been deregistered and can no longer
            be used in CloudFormation operations. </para></li></ul><para>The default is <code>LIVE</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeVersionCmdlet.Type">
            <summary>
            <para>
            <para>The kind of the type.</para><para>Currently the only valid value is <code>RESOURCE</code>.</para><para>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>,
            or <code>Arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeVersionCmdlet.TypeName">
            <summary>
            <para>
            <para>The name of the type for which you want version summary information.</para><para>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>,
            or <code>Arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeVersionCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned with a single call. If the number of
            available results exceeds this maximum, the response includes a <code>NextToken</code>
            value that you can assign to the <code>NextToken</code> request parameter to get the
            next set of results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeVersionCmdlet.NextToken">
            <summary>
            <para>
            <para>If the previous paginated request didn't return all of the remaining results, the
            response object's <code>NextToken</code> parameter value is set to a token. To retrieve
            the next set of results, call this action again and assign that token to the request
            object's <code>NextToken</code> parameter. If there are no remaining results, the
            previous response object's <code>NextToken</code> parameter is set to <code>null</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TypeVersionSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.ListTypeVersionsResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.ListTypeVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TypeName parameter.
            The -PassThru parameter is deprecated, use -Select '^TypeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.GetCFNTypeVersionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.MeasureCFNTemplateCostCmdlet">
            <summary>
            Returns the estimated monthly cost of a template. The return value is an AWS Simple
            Monthly Calculator URL with a query string that describes the resources required to
            run the template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.MeasureCFNTemplateCostCmdlet.Parameter">
            <summary>
            <para>
            <para>A list of <code>Parameter</code> structures that specify input parameters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.MeasureCFNTemplateCostCmdlet.TemplateBody">
            <summary>
            <para>
            <para>Structure containing the template body with a minimum length of 1 byte and a maximum
            length of 51,200 bytes. (For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template
            Anatomy</a> in the AWS CloudFormation User Guide.)</para><para>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>.
            If both are passed, only <code>TemplateBody</code> is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.MeasureCFNTemplateCostCmdlet.TemplateURL">
            <summary>
            <para>
            <para>Location of file containing the template body. The URL must point to a template that
            is located in an Amazon S3 bucket. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template
            Anatomy</a> in the AWS CloudFormation User Guide.</para><para>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>.
            If both are passed, only <code>TemplateBody</code> is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.MeasureCFNTemplateCostCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Url'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.EstimateTemplateCostResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.EstimateTemplateCostResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.MeasureCFNTemplateCostCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateBody parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateBody' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.MeasureCFNTemplateCostCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.NewCFNChangeSetCmdlet">
            <summary>
            Creates a list of changes that will be applied to a stack so that you can review the
            changes before executing them. You can create a change set for a stack that doesn't
            exist or an existing stack. If you create a change set for a stack that doesn't exist,
            the change set shows all of the resources that AWS CloudFormation will create. If
            you create a change set for an existing stack, AWS CloudFormation compares the stack's
            information with the information that you submit in the change set and lists the differences.
            Use change sets to understand which resources AWS CloudFormation will create or change,
            and how it will change resources in an existing stack, before you create or update
            a stack.
            
             
            <para>
            To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code>
            parameter, specify <code>CREATE</code>. To create a change set for an existing stack,
            specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create
            a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code>
            parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS
            CloudFormation starts creating the change set. To check the status of the change set
            or to review it, use the <a>DescribeChangeSet</a> action.
            </para><para>
            When you are satisfied with the changes the change set will make, execute the change
            set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes
            until you execute the change set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNChangeSetCmdlet.Capability">
            <summary>
            <para>
            <para>In some cases, you must explicitly acknowledge that your stack template contains certain
            capabilities in order for AWS CloudFormation to create the stack.</para><ul><li><para><code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code></para><para>Some stack templates might include resources that can affect permissions in your AWS
            account; for example, by creating new AWS Identity and Access Management (IAM) users.
            For those stacks, you must explicitly acknowledge this by specifying one of these
            capabilities.</para><para>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code>
            or <code>CAPABILITY_NAMED_IAM</code> capability.</para><ul><li><para>If you have IAM resources, you can specify either capability. </para></li><li><para>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>.
            </para></li><li><para>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code>
            error.</para></li></ul><para>If your stack template contains these resources, we recommend that you review all
            permissions associated with them and edit their permissions if necessary.</para><ul><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html">
            AWS::IAM::AccessKey</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html">
            AWS::IAM::Group</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html">
            AWS::IAM::InstanceProfile</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html">
            AWS::IAM::Policy</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html">
            AWS::IAM::Role</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html">
            AWS::IAM::User</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html">
            AWS::IAM::UserToGroupAddition</a></para></li></ul><para>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging
            IAM Resources in AWS CloudFormation Templates</a>.</para></li><li><para><code>CAPABILITY_AUTO_EXPAND</code></para><para>Some template contain macros. Macros perform custom processing on templates; this
            can include simple actions like find-and-replace operations, all the way to extensive
            transformations of entire templates. Because of this, users typically create a change
            set from the processed template, so that they can review the changes resulting from
            the macros before actually creating the stack. If your stack template contains one
            or more macros, and you choose to create a stack directly from the processed template,
            without first reviewing the resulting changes in a change set, you must acknowledge
            this capability. This includes the <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a>
            and <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a>
            transforms, which are macros hosted by AWS CloudFormation.</para><note><para>This capacity does not apply to creating change sets, and specifying it when creating
            change sets has no effect.</para><para>Also, change sets do not currently support nested stacks. If you want to create a
            stack from a stack template that contains macros <i>and</i> nested stacks, you must
            create or update the stack directly from the template using the <a>CreateStack</a>
            or <a>UpdateStack</a> action, and specifying this capability.</para></note><para>For more information on macros, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using
            AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNChangeSetCmdlet.ChangeSetName">
            <summary>
            <para>
            <para>The name of the change set. The name must be unique among all change sets that are
            associated with the specified stack.</para><para>A change set name can contain only alphanumeric, case sensitive characters and hyphens.
            It must start with an alphabetic character and cannot exceed 128 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNChangeSetCmdlet.ChangeSetType">
            <summary>
            <para>
            <para>The type of change set operation. To create a change set for a new stack, specify
            <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>.
            To create a change set for an import operation, specify <code>IMPORT</code>.</para><para>If you create a change set for a new stack, AWS Cloudformation creates a stack with
            a unique stack ID, but no template or resources. The stack will be in the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"><code>REVIEW_IN_PROGRESS</code></a> state until you execute the change set.</para><para>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code>
            type to create a change set for a new stack or the <code>CREATE</code> type to create
            a change set for an existing stack.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNChangeSetCmdlet.Description">
            <summary>
            <para>
            <para>A description to help you identify this change set.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNChangeSetCmdlet.NotificationARNs">
            <summary>
            <para>
            <para>The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS)
            topics that AWS CloudFormation associates with the stack. To remove all associated
            notification topics, specify an empty list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNChangeSetCmdlet.Parameter">
            <summary>
            <para>
            <para>A list of <code>Parameter</code> structures that specify input parameters for the
            change set. For more information, see the <a>Parameter</a> data type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNChangeSetCmdlet.ResourcesToImport">
            <summary>
            <para>
            <para>The resources to import into your stack.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNChangeSetCmdlet.ResourceType">
            <summary>
            <para>
            <para>The template resource types that you have permissions to work with if you execute
            this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>,
            or <code>Custom::MyCustomInstance</code>.</para><para>If the list of resource types doesn't include a resource type that you're updating,
            the stack update fails. By default, AWS CloudFormation grants permissions to all resource
            types. AWS Identity and Access Management (IAM) uses this parameter for condition
            keys in IAM policies for AWS CloudFormation. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling
            Access with AWS Identity and Access Management</a> in the AWS CloudFormation User
            Guide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNChangeSetCmdlet.RoleARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role
            that AWS CloudFormation assumes when executing the change set. AWS CloudFormation
            uses the role's credentials to make calls on your behalf. AWS CloudFormation uses
            this role for all future operations on the stack. As long as users have permission
            to operate on the stack, AWS CloudFormation uses this role even if the users don't
            have permission to pass it. Ensure that the role grants least privilege.</para><para>If you don't specify a value, AWS CloudFormation uses the role that was previously
            associated with the stack. If no role is available, AWS CloudFormation uses a temporary
            session that is generated from your user credentials.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNChangeSetCmdlet.RollbackConfiguration">
            <summary>
            <para>
            <para>The rollback triggers for AWS CloudFormation to monitor during stack creation and
            updating operations, and for the specified monitoring period afterwards.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNChangeSetCmdlet.StackName">
            <summary>
            <para>
            <para>The name or the unique ID of the stack for which you are creating a change set. AWS
            CloudFormation generates the change set by comparing this stack's information with
            the information that you submit, such as a modified template or different parameter
            input values.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNChangeSetCmdlet.Tag">
            <summary>
            <para>
            <para>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these
            tags to resources in the stack. You can specify a maximum of 50 tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNChangeSetCmdlet.TemplateBody">
            <summary>
            <para>
            <para>A structure that contains the body of the revised template, with a minimum length
            of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change
            set by comparing this template with the template of the stack that you specified.</para><para>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNChangeSetCmdlet.TemplateURL">
            <summary>
            <para>
            <para>The location of the file that contains the revised template. The URL must point to
            a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation
            generates the change set by comparing this template with the stack that you specified.</para><para>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNChangeSetCmdlet.UsePreviousTemplate">
            <summary>
            <para>
            <para>Whether to reuse the template that is associated with the stack to create the change
            set.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNChangeSetCmdlet.ClientToken">
            <summary>
            <para>
            <para>A unique identifier for this <code>CreateChangeSet</code> request. Specify this token
            if you plan to retry requests so that AWS CloudFormation knows that you're not attempting
            to create another change set with the same name. You might retry <code>CreateChangeSet</code>
            requests to ensure that AWS CloudFormation successfully received them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNChangeSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Id'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.CreateChangeSetResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.CreateChangeSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNChangeSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNChangeSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet">
            <summary>
            Creates a stack as specified in the template. After the call completes successfully,
            the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a>
            API.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.Capability">
            <summary>
            <para>
            <para>In some cases, you must explicitly acknowledge that your stack template contains certain
            capabilities in order for AWS CloudFormation to create the stack.</para><ul><li><para><code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code></para><para>Some stack templates might include resources that can affect permissions in your AWS
            account; for example, by creating new AWS Identity and Access Management (IAM) users.
            For those stacks, you must explicitly acknowledge this by specifying one of these
            capabilities.</para><para>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code>
            or <code>CAPABILITY_NAMED_IAM</code> capability.</para><ul><li><para>If you have IAM resources, you can specify either capability. </para></li><li><para>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>.
            </para></li><li><para>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code>
            error.</para></li></ul><para>If your stack template contains these resources, we recommend that you review all
            permissions associated with them and edit their permissions if necessary.</para><ul><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html">
            AWS::IAM::AccessKey</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html">
            AWS::IAM::Group</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html">
            AWS::IAM::InstanceProfile</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html">
            AWS::IAM::Policy</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html">
            AWS::IAM::Role</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html">
            AWS::IAM::User</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html">
            AWS::IAM::UserToGroupAddition</a></para></li></ul><para>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging
            IAM Resources in AWS CloudFormation Templates</a>.</para></li><li><para><code>CAPABILITY_AUTO_EXPAND</code></para><para>Some template contain macros. Macros perform custom processing on templates; this
            can include simple actions like find-and-replace operations, all the way to extensive
            transformations of entire templates. Because of this, users typically create a change
            set from the processed template, so that they can review the changes resulting from
            the macros before actually creating the stack. If your stack template contains one
            or more macros, and you choose to create a stack directly from the processed template,
            without first reviewing the resulting changes in a change set, you must acknowledge
            this capability. This includes the <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a>
            and <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a>
            transforms, which are macros hosted by AWS CloudFormation.</para><para>Change sets do not currently support nested stacks. If you want to create a stack
            from a stack template that contains macros <i>and</i> nested stacks, you must create
            the stack directly from the template using this capability.</para><important><para>You should only create stacks directly from a stack template that contains macros
            if you know what processing the macro performs.</para><para>Each macro relies on an underlying Lambda service function for processing stack templates.
            Be aware that the Lambda function owner can update the function operation without
            AWS CloudFormation being notified.</para></important><para>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using
            AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique identifier for this <code>CreateStack</code> request. Specify this token
            if you plan to retry requests so that AWS CloudFormation knows that you're not attempting
            to create a stack with the same name. You might retry <code>CreateStack</code> requests
            to ensure that AWS CloudFormation successfully received them.</para><para>All events triggered by a given stack operation are assigned the same client request
            token, which you can use to track operations. For example, if you execute a <code>CreateStack</code>
            operation with the token <code>token1</code>, then all the <code>StackEvents</code>
            generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</para><para>In the console, stack operations display the client request token on the Events tab.
            Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>,
            which helps you easily identify the stack operation . For example, if you create a
            stack using the console, each stack event would be assigned the same token in the
            following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.DisableRollback">
            <summary>
            <para>
            <para>Set to <code>true</code> to disable rollback of the stack if stack creation failed.
            You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but
            not both.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.EnableTerminationProtection">
            <summary>
            <para>
            <para>Whether to enable termination protection on the specified stack. If a user attempts
            to delete a stack with termination protection enabled, the operation fails and the
            stack remains unchanged. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting
            a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination
            protection is disabled on stacks by default. </para><para> For <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested
            stacks</a>, termination protection is set on the root stack and cannot be changed
            directly on the nested stack.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.RollbackConfiguration_MonitoringTimeInMinute">
            <summary>
            <para>
            <para>The amount of time, in minutes, during which CloudFormation should monitor all the
            rollback triggers after the stack creation or update operation deploys all necessary
            resources.</para><para>The default is 0 minutes.</para><para>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation
            still waits the specified period of time before cleaning up old resources after update
            operations. You can use this monitoring period to perform any manual stack validation
            desired, and manually cancel the stack creation or update (using <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>,
            for example) as necessary.</para><para>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback
            triggers during stack creation and update operations. Then, for update operations,
            it begins disposing of old resources immediately once the operation completes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.NotificationARNs">
            <summary>
            <para>
            <para>The Simple Notification Service (SNS) topic ARNs to publish stack related events.
            You can find your SNS topic ARNs using the SNS console or your Command Line Interface
            (CLI).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.OnFailure">
            <summary>
            <para>
            <para>Determines what action will be taken if stack creation fails. This must be one of:
            DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or
            <code>DisableRollback</code>, but not both.</para><para>Default: <code>ROLLBACK</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.Parameter">
            <summary>
            <para>
            <para>A list of <code>Parameter</code> structures that specify input parameters for the
            stack. For more information, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a>
            data type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.ResourceType">
            <summary>
            <para>
            <para>The template resource types that you have permissions to work with for this create
            stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or
            <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template
            resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code>
            (for all custom resources), <code>Custom::<i>logical_ID</i></code> (for a specific
            custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a
            particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i></code> (for a specific AWS resource).</para><para>If the list of resource types doesn't include a resource that you're creating, the
            stack creation fails. By default, AWS CloudFormation grants permissions to all resource
            types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific
            condition keys in IAM policies. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling
            Access with AWS Identity and Access Management</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.RoleARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role
            that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's
            credentials to make calls on your behalf. AWS CloudFormation always uses this role
            for all future operations on the stack. As long as users have permission to operate
            on the stack, AWS CloudFormation uses this role even if the users don't have permission
            to pass it. Ensure that the role grants least privilege.</para><para>If you don't specify a value, AWS CloudFormation uses the role that was previously
            associated with the stack. If no role is available, AWS CloudFormation uses a temporary
            session that is generated from your user credentials.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.RollbackConfiguration_RollbackTrigger">
            <summary>
            <para>
            <para>The triggers to monitor during stack creation or update actions. </para><para>By default, AWS CloudFormation saves the rollback triggers specified for a stack and
            applies them to any subsequent update operations for the stack, unless you specify
            otherwise. If you do specify rollback triggers for this parameter, those triggers
            replace any list of triggers previously specified for the stack. This means:</para><ul><li><para>To use the rollback triggers previously specified for this stack, if any, don't specify
            this parameter.</para></li><li><para>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers
            that you want used for this stack, even triggers you've specifed before (for example,
            when creating the stack or during a previous stack update). Any triggers that you
            don't include in the updated list of triggers are no longer applied to the stack.</para></li><li><para>To remove all currently specified triggers, specify an empty list for this parameter.</para></li></ul><para>If a specified trigger is missing, the entire stack operation fails and is rolled
            back. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.StackName">
            <summary>
            <para>
            <para>The name that is associated with the stack. The name must be unique in the Region
            in which you are creating the stack.</para><note><para>A stack name can contain only alphanumeric characters (case sensitive) and hyphens.
            It must start with an alphabetic character and cannot be longer than 128 characters.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.StackPolicyBody">
            <summary>
            <para>
            <para>Structure containing the stack policy body. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html">
            Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>.
            You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code>
            parameter, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.StackPolicyURL">
            <summary>
            <para>
            <para>Location of a file containing the stack policy. The URL must point to a policy (maximum
            size: 16 KB) located in an S3 bucket in the same Region as the stack. You can specify
            either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter,
            but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.Tag">
            <summary>
            <para>
            <para>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these
            tags to the resources created in the stack. A maximum number of 50 tags can be specified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.TemplateBody">
            <summary>
            <para>
            <para>Structure containing the template body with a minimum length of 1 byte and a maximum
            length of 51,200 bytes. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template
            Anatomy</a> in the AWS CloudFormation User Guide.</para><para>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code>
            parameter, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.TemplateURL">
            <summary>
            <para>
            <para>Location of file containing the template body. The URL must point to a template (max
            size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information,
            go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template
            Anatomy</a> in the AWS CloudFormation User Guide.</para><para>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code>
            parameter, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.TimeoutInMinutes">
            <summary>
            <para>
            <para>The amount of time that can pass before the stack status becomes CREATE_FAILED; if
            <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack
            will be rolled back.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StackId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.CreateStackResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.CreateStackResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackInstanceCmdlet">
            <summary>
            Creates stack instances for the specified accounts, within the specified Regions.
            A stack instance refers to a stack in a specific account and Region. You must specify
            at least one value for either <code>Accounts</code> or <code>DeploymentTargets</code>,
            and you must specify at least one value for <code>Regions</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackInstanceCmdlet.Account">
            <summary>
            <para>
            <para>[<code>Self-managed</code> permissions] The names of one or more AWS accounts that
            you want to create stack instances in the specified Region(s) for.</para><para>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackInstanceCmdlet.DeploymentTargets_Account">
            <summary>
            <para>
            <para>The names of one or more AWS accounts for which you want to deploy stack set updates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackInstanceCmdlet.OperationId">
            <summary>
            <para>
            <para>The unique identifier for this stack set operation. </para><para>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation
            performs the stack set operation only once, even if you retry the request multiple
            times. You might retry stack set operation requests to ensure that AWS CloudFormation
            successfully received them.</para><para>If you don't specify an operation ID, the SDK generates one automatically. </para><para>Repeating this stack set operation with a new operation ID retries all stack instances
            whose status is <code>OUTDATED</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackInstanceCmdlet.OperationPreference">
            <summary>
            <para>
            <para>Preferences for how AWS CloudFormation performs this stack set operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackInstanceCmdlet.DeploymentTargets_OrganizationalUnitId">
            <summary>
            <para>
            <para>The organization root ID or organizational unit (OU) IDs to which StackSets deploys.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackInstanceCmdlet.ParameterOverride">
            <summary>
            <para>
            <para>A list of stack set parameters whose values you want to override in the selected stack
            instances.</para><para>Any overridden parameter values will be applied to all stack instances in the specified
            accounts and Regions. When specifying parameters and their values, be aware of how
            AWS CloudFormation sets parameter values during stack instance operations:</para><ul><li><para>To override the current value for a parameter, include the parameter and specify its
            value.</para></li><li><para>To leave a parameter set to its present value, you can do one of the following:</para><ul><li><para>Do not include the parameter in the list.</para></li><li><para>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>.
            (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</para></li></ul></li><li><para>To set all overridden parameter back to the values specified in the stack set, specify
            a parameter list but do not include any parameters.</para></li><li><para>To leave all parameters set to their present values, do not specify this property
            at all.</para></li></ul><para>During stack set updates, any parameter values overridden for a stack instance are
            not updated, but retain their overridden value.</para><para>You can only override the parameter <i>values</i> that are specified in the stack
            set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a>
            to update the stack set template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackInstanceCmdlet.StackInstanceRegion">
            <summary>
            <para>
            <para>The names of one or more Regions where you want to create stack instances using the
            specified AWS account(s). </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackInstanceCmdlet.StackSetName">
            <summary>
            <para>
            <para>The name or unique ID of the stack set that you want to create stack instances from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OperationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.CreateStackInstancesResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.CreateStackInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackSetCmdlet">
            <summary>
            Creates a stack set.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackSetCmdlet.AdministrationRoleARN">
            <summary>
            <para>
            <para>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set.
            </para><para>Specify an IAM role only if you are using customized administrator roles to control
            which users or groups can manage specific stack sets within the same administrator
            account. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites:
            Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User
            Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackSetCmdlet.Capability">
            <summary>
            <para>
            <para>In some cases, you must explicitly acknowledge that your stack set template contains
            certain capabilities in order for AWS CloudFormation to create the stack set and related
            stack instances.</para><ul><li><para><code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code></para><para>Some stack templates might include resources that can affect permissions in your AWS
            account; for example, by creating new AWS Identity and Access Management (IAM) users.
            For those stack sets, you must explicitly acknowledge this by specifying one of these
            capabilities.</para><para>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code>
            or <code>CAPABILITY_NAMED_IAM</code> capability.</para><ul><li><para>If you have IAM resources, you can specify either capability. </para></li><li><para>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>.
            </para></li><li><para>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code>
            error.</para></li></ul><para>If your stack template contains these resources, we recommend that you review all
            permissions associated with them and edit their permissions if necessary.</para><ul><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html">
            AWS::IAM::AccessKey</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html">
            AWS::IAM::Group</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html">
            AWS::IAM::InstanceProfile</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html">
            AWS::IAM::Policy</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html">
            AWS::IAM::Role</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html">
            AWS::IAM::User</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html">
            AWS::IAM::UserToGroupAddition</a></para></li></ul><para>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging
            IAM Resources in AWS CloudFormation Templates</a>.</para></li><li><para><code>CAPABILITY_AUTO_EXPAND</code></para><para>Some templates contain macros. If your stack template contains one or more macros,
            and you choose to create a stack directly from the processed template, without first
            reviewing the resulting changes in a change set, you must acknowledge this capability.
            For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using
            AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</para><note><para>Stack sets do not currently support macros in stack templates. (This includes the
            <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a>
            and <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a>
            transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this
            capability, if you include a macro in your template the stack set operation will fail.</para></note></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackSetCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique identifier for this <code>CreateStackSet</code> request. Specify this token
            if you plan to retry requests so that AWS CloudFormation knows that you're not attempting
            to create another stack set with the same name. You might retry <code>CreateStackSet</code>
            requests to ensure that AWS CloudFormation successfully received them.</para><para>If you don't specify an operation ID, the SDK generates one automatically. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackSetCmdlet.Description">
            <summary>
            <para>
            <para>A description of the stack set. You can use the description to identify the stack
            set's purpose or other important information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackSetCmdlet.AutoDeployment_Enabled">
            <summary>
            <para>
            <para>If set to <code>true</code>, StackSets automatically deploys additional stack instances
            to AWS Organizations accounts that are added to a target organization or organizational
            unit (OU) in the specified Regions. If an account is removed from a target organization
            or OU, StackSets deletes stack instances from the account in the specified Regions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackSetCmdlet.ExecutionRoleName">
            <summary>
            <para>
            <para>The name of the IAM execution role to use to create the stack set. If you do not specify
            an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code>
            role for the stack set operation.</para><para>Specify an IAM role only if you are using customized execution roles to control which
            stack resources users and groups can include in their stack sets. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackSetCmdlet.Parameter">
            <summary>
            <para>
            <para>The input parameters for the stack set template. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackSetCmdlet.PermissionModel">
            <summary>
            <para>
            <para>Describes how the IAM roles required for stack set operations are created. By default,
            <code>SELF-MANAGED</code> is specified.</para><ul><li><para>With <code>self-managed</code> permissions, you must create the administrator and
            execution roles required to deploy to target accounts. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html">Grant
            Self-Managed Stack Set Permissions</a>.</para></li><li><para>With <code>service-managed</code> permissions, StackSets automatically creates the
            IAM roles required to deploy to accounts managed by AWS Organizations. For more information,
            see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html">Grant
            Service-Managed Stack Set Permissions</a>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackSetCmdlet.AutoDeployment_RetainStacksOnAccountRemoval">
            <summary>
            <para>
            <para>If set to <code>true</code>, stack resources are retained when an account is removed
            from a target organization or OU. If set to <code>false</code>, stack resources are
            deleted. Specify only if <code>Enabled</code> is set to <code>True</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackSetCmdlet.StackSetName">
            <summary>
            <para>
            <para>The name to associate with the stack set. The name must be unique in the Region where
            you create your stack set.</para><note><para>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens.
            It must start with an alphabetic character and can't be longer than 128 characters.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackSetCmdlet.Tag">
            <summary>
            <para>
            <para>The key-value pairs to associate with this stack set and the stacks created from it.
            AWS CloudFormation also propagates these tags to supported resources that are created
            in the stacks. A maximum number of 50 tags can be specified.</para><para>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation
            checks to see if you have the required IAM permission to tag resources. If you don't,
            the entire <code>CreateStackSet</code> action fails with an <code>access denied</code>
            error, and the stack set is not created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackSetCmdlet.TemplateBody">
            <summary>
            <para>
            <para>The structure that contains the template body, with a minimum length of 1 byte and
            a maximum length of 51,200 bytes. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template
            Anatomy</a> in the AWS CloudFormation User Guide.</para><para>Conditional: You must specify either the TemplateBody or the TemplateURL parameter,
            but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackSetCmdlet.TemplateURL">
            <summary>
            <para>
            <para>The location of the file that contains the template body. The URL must point to a
            template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For
            more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template
            Anatomy</a> in the AWS CloudFormation User Guide.</para><para>Conditional: You must specify either the TemplateBody or the TemplateURL parameter,
            but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StackSetId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.CreateStackSetResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.CreateStackSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.NewCFNStackSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.RegisterCFNTypeCmdlet">
            <summary>
            Registers a type with the CloudFormation service. Registering a type makes it available
            for use in CloudFormation templates in your AWS account, and includes:
            
             <ul><li><para>
            Validating the resource schema
            </para></li><li><para>
            Determining which handlers have been specified for the resource
            </para></li><li><para>
            Making the resource type available for use in your account
            </para></li></ul><para>
            For more information on how to develop types and ready them for registeration, see
            <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-types.html">Creating
            Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.
            </para><para>
            You can have a maximum of 50 resource type versions registered at a time. This maximum
            is per account and per region. Use <a href="AWSCloudFormation/latest/APIReference/API_DeregisterType.html">DeregisterType</a>
            to deregister specific resource type versions if necessary.
            </para><para>
            Once you have initiated a registration request using <code><a>RegisterType</a></code>,
            you can use <code><a>DescribeTypeRegistration</a></code> to monitor the progress
            of the registration request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RegisterCFNTypeCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique identifier that acts as an idempotency key for this registration request.
            Specifying a client request token prevents CloudFormation from generating more than
            one version of a type from the same registeration request, even if the request is
            submitted multiple times. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RegisterCFNTypeCmdlet.ExecutionRoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the IAM execution role to use to register the type.
            If your resource type calls AWS APIs in any of its handlers, you must create an <i><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM execution
            role</a></i> that includes the necessary permissions to call those AWS APIs, and
            provision that execution role in your account. CloudFormation then assumes that execution
            role to provide your resource type with the appropriate credentials.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RegisterCFNTypeCmdlet.LoggingConfig_LogGroupName">
            <summary>
            <para>
            <para>The Amazon CloudWatch log group to which CloudFormation sends error logging information
            when invoking the type's handlers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RegisterCFNTypeCmdlet.LoggingConfig_LogRoleArn">
            <summary>
            <para>
            <para>The ARN of the role that CloudFormation should assume when sending log entries to
            CloudWatch logs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RegisterCFNTypeCmdlet.SchemaHandlerPackage">
            <summary>
            <para>
            <para>A url to the S3 bucket containing the schema handler package that contains the schema,
            event handlers, and associated files for the type you want to register.</para><para>For information on generating a schema handler package for the type you want to register,
            see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-cli-submit.html">submit</a>
            in the <i>CloudFormation CLI User Guide</i>.</para><note><para>As part of registering a resource provider type, CloudFormation must be able to access
            the S3 bucket which contains the schema handler package for that resource provider.
            For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry.html#registry-register-permissions">IAM
            Permissions for Registering a Resource Provider</a> in the <i>AWS CloudFormation User
            Guide</i>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RegisterCFNTypeCmdlet.Type">
            <summary>
            <para>
            <para>The kind of type.</para><para>Currently, the only valid value is <code>RESOURCE</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RegisterCFNTypeCmdlet.TypeName">
            <summary>
            <para>
            <para>The name of the type being registered.</para><para>We recommend that type names adhere to the following pattern: <i>company_or_organization</i>::<i>service</i>::<i>type</i>.</para><note><para>The following organization namespaces are reserved and cannot be used in your resource
            type names:</para><ul><li><para><code>Alexa</code></para></li><li><para><code>AMZN</code></para></li><li><para><code>Amazon</code></para></li><li><para><code>AWS</code></para></li><li><para><code>Custom</code></para></li><li><para><code>Dev</code></para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RegisterCFNTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RegistrationToken'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.RegisterTypeResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.RegisterTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RegisterCFNTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TypeName parameter.
            The -PassThru parameter is deprecated, use -Select '^TypeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RegisterCFNTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNChangeSetCmdlet">
            <summary>
            Deletes the specified change set. Deleting change sets ensures that no one executes
            the wrong change set.
            
             
            <para>
            If the call successfully completes, AWS CloudFormation successfully deleted the change
            set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNChangeSetCmdlet.ChangeSetName">
            <summary>
            <para>
            <para>The name or Amazon Resource Name (ARN) of the change set that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNChangeSetCmdlet.StackName">
            <summary>
            <para>
            <para>If you specified the name of a change set to delete, specify the stack name or ID
            (ARN) that is associated with it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNChangeSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DeleteChangeSetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNChangeSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ChangeSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^ChangeSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNChangeSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackCmdlet">
            <summary>
            Deletes a specified stack. Once the call completes successfully, stack deletion starts.
            Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has
            been completed successfully.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique identifier for this <code>DeleteStack</code> request. Specify this token
            if you plan to retry requests so that AWS CloudFormation knows that you're not attempting
            to delete a stack with the same name. You might retry <code>DeleteStack</code> requests
            to ensure that AWS CloudFormation successfully received them.</para><para>All events triggered by a given stack operation are assigned the same client request
            token, which you can use to track operations. For example, if you execute a <code>CreateStack</code>
            operation with the token <code>token1</code>, then all the <code>StackEvents</code>
            generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</para><para>In the console, stack operations display the client request token on the Events tab.
            Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>,
            which helps you easily identify the stack operation . For example, if you create a
            stack using the console, each stack event would be assigned the same token in the
            following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackCmdlet.RetainResource">
            <summary>
            <para>
            <para>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs
            that are associated with the resources you want to retain. During deletion, AWS CloudFormation
            deletes the stack but does not delete the retained resources.</para><para>Retaining resources is useful when you cannot delete a resource, such as a non-empty
            S3 bucket, but you want to delete the stack.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackCmdlet.RoleARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role
            that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's
            credentials to make calls on your behalf.</para><para>If you don't specify a value, AWS CloudFormation uses the role that was previously
            associated with the stack. If no role is available, AWS CloudFormation uses a temporary
            session that is generated from your user credentials.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackCmdlet.StackName">
            <summary>
            <para>
            <para>The name or the unique stack ID that is associated with the stack.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DeleteStackResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackInstanceCmdlet">
            <summary>
            Deletes stack instances for the specified accounts, in the specified Regions.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackInstanceCmdlet.Account">
            <summary>
            <para>
            <para>[<code>Self-managed</code> permissions] The names of the AWS accounts that you want
            to delete stack instances for.</para><para>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackInstanceCmdlet.DeploymentTargets_Account">
            <summary>
            <para>
            <para>The names of one or more AWS accounts for which you want to deploy stack set updates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackInstanceCmdlet.OperationId">
            <summary>
            <para>
            <para>The unique identifier for this stack set operation. </para><para>If you don't specify an operation ID, the SDK generates one automatically. </para><para>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation
            performs the stack set operation only once, even if you retry the request multiple
            times. You can retry stack set operation requests to ensure that AWS CloudFormation
            successfully received them.</para><para>Repeating this stack set operation with a new operation ID retries all stack instances
            whose status is <code>OUTDATED</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackInstanceCmdlet.OperationPreference">
            <summary>
            <para>
            <para>Preferences for how AWS CloudFormation performs this stack set operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackInstanceCmdlet.DeploymentTargets_OrganizationalUnitId">
            <summary>
            <para>
            <para>The organization root ID or organizational unit (OU) IDs to which StackSets deploys.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackInstanceCmdlet.StackInstanceRegion">
            <summary>
            <para>
            <para>The Regions where you want to delete stack set instances. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackInstanceCmdlet.RetainStack">
            <summary>
            <para>
            <para>Removes the stack instances from the specified stack set, but doesn't delete the stacks.
            You can't reassociate a retained stack or add an existing, saved stack to a new stack
            set.</para><para>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack
            set operation options</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackInstanceCmdlet.StackSetName">
            <summary>
            <para>
            <para>The name or unique ID of the stack set that you want to delete stack instances for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OperationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DeleteStackInstancesResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.DeleteStackInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackSetCmdlet">
            <summary>
            Deletes a stack set. Before you can delete a stack set, all of its member stack instances
            must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackSetCmdlet.StackSetName">
            <summary>
            <para>
            <para>The name or unique ID of the stack set that you're deleting. You can obtain this value
            by running <a>ListStackSets</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DeleteStackSetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.RemoveCFNStackSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.ResumeCFNUpdateRollbackCmdlet">
            <summary>
            For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues
            rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the
            cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed">
            fix the error</a> and continue the rollback. By continuing the rollback, you can return
            your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and
            then try to update the stack again.
            
             
            <para>
            A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation
            cannot roll back all changes after a failed stack update. For example, you might have
            a stack that is rolling back to an old database instance that was deleted outside
            of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted,
            it assumes that the database instance still exists and attempts to roll back to it,
            causing the update rollback to fail.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.ResumeCFNUpdateRollbackCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify
            this token if you plan to retry requests so that AWS CloudFormation knows that you're
            not attempting to continue the rollback to a stack with the same name. You might retry
            <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully
            received them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.ResumeCFNUpdateRollbackCmdlet.ResourcesToSkip">
            <summary>
            <para>
            <para>A list of the logical IDs of the resources that AWS CloudFormation skips during the
            continue update rollback operation. You can specify only resources that are in the
            <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources
            that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because
            an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a>
            action, and view the resource status reason. </para><important><para>Specify this property to skip rolling back resources that AWS CloudFormation can't
            successfully roll back. We recommend that you <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed">
            troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status
            of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back
            the stack. After the rollback is complete, the state of the skipped resources will
            be inconsistent with the state of the resources in the stack template. Before performing
            another stack update, you must update the stack or resources to be consistent with
            each other. If you don't, subsequent stack updates might fail, and the stack will
            become unrecoverable. </para></important><para>Specify the minimum number of resources required to successfully roll back your stack.
            For example, a failed resource update might cause dependent resources to fail. In
            this case, it might not be necessary to skip the dependent resources. </para><para>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>.
            If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>)
            in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must
            be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>,
            or <code>DELETE_FAILED</code>. </para><note><para>Don't confuse a child stack's name with its corresponding logical ID defined in the
            parent stack. For an example of a continue update rollback operation with nested stacks,
            see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using
            ResourcesToSkip to recover a nested stacks hierarchy</a>. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.ResumeCFNUpdateRollbackCmdlet.RoleARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role
            that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the
            role's credentials to make calls on your behalf. AWS CloudFormation always uses this
            role for all future operations on the stack. As long as users have permission to operate
            on the stack, AWS CloudFormation uses this role even if the users don't have permission
            to pass it. Ensure that the role grants least privilege.</para><para>If you don't specify a value, AWS CloudFormation uses the role that was previously
            associated with the stack. If no role is available, AWS CloudFormation uses a temporary
            session that is generated from your user credentials.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.ResumeCFNUpdateRollbackCmdlet.StackName">
            <summary>
            <para>
            <para>The name or the unique ID of the stack that you want to continue rolling back.</para><note><para>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code>
            resource). Instead, use this operation on the parent stack (the stack that contains
            the <code>AWS::CloudFormation::Stack</code> resource).</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.ResumeCFNUpdateRollbackCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.ContinueUpdateRollbackResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.ResumeCFNUpdateRollbackCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.ResumeCFNUpdateRollbackCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.SendCFNResourceSignalCmdlet">
            <summary>
            Sends a signal to the specified resource with a success or failure status. You can
            use the SignalResource API in conjunction with a creation policy or update policy.
            AWS CloudFormation doesn't proceed with a stack creation or update until resources
            receive the required number of signals or the timeout period is exceeded. The SignalResource
            API is useful in cases where you want to send signals from anywhere other than an
            Amazon EC2 instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.SendCFNResourceSignalCmdlet.LogicalResourceId">
            <summary>
            <para>
            <para>The logical ID of the resource that you want to signal. The logical ID is the name
            of the resource that given in the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.SendCFNResourceSignalCmdlet.StackName">
            <summary>
            <para>
            <para>The stack name or unique stack ID that includes the resource that you want to signal.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.SendCFNResourceSignalCmdlet.Status">
            <summary>
            <para>
            <para>The status of the signal, which is either success or failure. A failure signal causes
            AWS CloudFormation to immediately fail the stack creation or update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.SendCFNResourceSignalCmdlet.UniqueId">
            <summary>
            <para>
            <para>A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups,
            specify the instance ID that you are signaling as the unique ID. If you send multiple
            signals to a single resource (such as signaling a wait condition), each signal requires
            a different unique ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.SendCFNResourceSignalCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.SignalResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.SendCFNResourceSignalCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.SendCFNResourceSignalCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.SetCFNStackPolicyCmdlet">
            <summary>
            Sets a stack policy for a specified stack.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.SetCFNStackPolicyCmdlet.StackName">
            <summary>
            <para>
            <para>The name or unique stack ID that you want to associate a policy with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.SetCFNStackPolicyCmdlet.StackPolicyBody">
            <summary>
            <para>
            <para>Structure containing the stack policy body. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html">
            Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can
            specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code>
            parameter, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.SetCFNStackPolicyCmdlet.StackPolicyURL">
            <summary>
            <para>
            <para>Location of a file containing the stack policy. The URL must point to a policy (maximum
            size: 16 KB) located in an S3 bucket in the same Region as the stack. You can specify
            either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter,
            but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.SetCFNStackPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.SetStackPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.SetCFNStackPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.SetCFNStackPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.SetCFNTypeDefaultVersionCmdlet">
            <summary>
            Specify the default version of a type. The default version of a type will be used
            in CloudFormation operations.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.SetCFNTypeDefaultVersionCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the type for which you want version summary information.</para><para>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>,
            or <code>Arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.SetCFNTypeDefaultVersionCmdlet.Type">
            <summary>
            <para>
            <para>The kind of type.</para><para>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>,
            or <code>Arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.SetCFNTypeDefaultVersionCmdlet.TypeName">
            <summary>
            <para>
            <para>The name of the type.</para><para>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>,
            or <code>Arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.SetCFNTypeDefaultVersionCmdlet.VersionId">
            <summary>
            <para>
            <para>The ID of a specific version of the type. The version ID is the value at the end of
            the Amazon Resource Name (ARN) assigned to the type version when it is registered.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.SetCFNTypeDefaultVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.SetTypeDefaultVersionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.SetCFNTypeDefaultVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TypeName parameter.
            The -PassThru parameter is deprecated, use -Select '^TypeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.SetCFNTypeDefaultVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.StartCFNChangeSetCmdlet">
            <summary>
            Updates a stack using the input information that was provided when the specified change
            set was created. After the call successfully completes, AWS CloudFormation starts
            updating the stack. Use the <a>DescribeStacks</a> action to view the status of the
            update.
            
             
            <para>
            When you execute a change set, AWS CloudFormation deletes all other change sets associated
            with the stack because they aren't valid for the updated stack.
            </para><para>
            If a stack policy is associated with the stack, AWS CloudFormation enforces the policy
            during the update. You can't specify a temporary stack policy that overrides the current
            policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StartCFNChangeSetCmdlet.ChangeSetName">
            <summary>
            <para>
            <para>The name or ARN of the change set that you want use to update the specified stack.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StartCFNChangeSetCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token
            if you plan to retry requests so that AWS CloudFormation knows that you're not attempting
            to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code>
            requests to ensure that AWS CloudFormation successfully received them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StartCFNChangeSetCmdlet.StackName">
            <summary>
            <para>
            <para>If you specified the name of a change set, specify the stack name or ID (ARN) that
            is associated with the change set you want to execute.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StartCFNChangeSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.ExecuteChangeSetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StartCFNChangeSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ChangeSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^ChangeSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StartCFNChangeSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.StartCFNStackDriftDetectionCmdlet">
            <summary>
            Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from
            it's expected configuration, as defined in the stack template and any values specified
            as template parameters. For each resource in the stack that supports drift detection,
            AWS CloudFormation compares the actual configuration of the resource with its expected
            template configuration. Only resource properties explicitly defined in the stack template
            are checked for drift. A stack is considered to have drifted if one or more of its
            resources differ from their expected template configurations. For more information,
            see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting
            Unregulated Configuration Changes to Stacks and Resources</a>.
            
             
            <para>
            Use <code>DetectStackDrift</code> to detect drift on all supported resources for a
            given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.
            </para><para>
            For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources
            that Support Drift Detection</a>.
            </para><para><code>DetectStackDrift</code> can take up to several minutes, depending on the number
            of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a>
            to monitor the progress of a detect stack drift operation. Once the drift detection
            operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information
            about the stack and its resources.
            </para><para>
            When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested
            stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on
            the nested stack itself.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StartCFNStackDriftDetectionCmdlet.LogicalResourceId">
            <summary>
            <para>
            <para>The logical names of any resources you want to use as filters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StartCFNStackDriftDetectionCmdlet.StackName">
            <summary>
            <para>
            <para>The name of the stack for which you want to detect drift. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StartCFNStackDriftDetectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StackDriftDetectionId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DetectStackDriftResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.DetectStackDriftResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StartCFNStackDriftDetectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StartCFNStackDriftDetectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.StartCFNStackSetDriftDetectionCmdlet">
            <summary>
            Detect drift on a stack set. When CloudFormation performs drift detection on a stack
            set, it performs drift detection on the stack associated with each stack instance
            in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How
            CloudFormation Performs Drift Detection on a Stack Set</a>.
            
             
            <para><code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack
            set drift detection operation. Use this operation id with <code><a>DescribeStackSetOperation</a></code> to monitor the progress of the drift detection operation. The drift detection
            operation may take some time, depending on the number of stack instances included
            in the stack set, as well as the number of resources included in each stack.
            </para><para>
            Once the operation has completed, use the following actions to return drift information:
            </para><ul><li><para>
            Use <code><a>DescribeStackSet</a></code> to return detailed informaiton about the
            stack set, including detailed information about the last <i>completed</i> drift operation
            performed on the stack set. (Information about drift operations that are in progress
            is not included.)
            </para></li><li><para>
            Use <code><a>ListStackInstances</a></code> to return a list of stack instances belonging
            to the stack set, including the drift status and last drift time checked of each instance.
            </para></li><li><para>
            Use <code><a>DescribeStackInstance</a></code> to return detailed information about
            a specific stack instance, including its drift status and last drift time checked.
            </para></li></ul><para>
            For more information on performing a drift detection operation on a stack set, see
            <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting
            Unmanaged Changes in Stack Sets</a>. 
            </para><para>
            You can only run a single drift detection operation on a given stack set at one time.
            
            </para><para>
            To stop a drift detection stack set operation, use <code><a>StopStackSetOperation</a></code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StartCFNStackSetDriftDetectionCmdlet.OperationId">
            <summary>
            <para>
            <para><i>The ID of the stack set operation.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StartCFNStackSetDriftDetectionCmdlet.OperationPreference">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StartCFNStackSetDriftDetectionCmdlet.StackSetName">
            <summary>
            <para>
            <para>The name of the stack set on which to perform the drift detection operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StartCFNStackSetDriftDetectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OperationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DetectStackSetDriftResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.DetectStackSetDriftResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StartCFNStackSetDriftDetectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StartCFNStackSetDriftDetectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.StopCFNStackSetOperationCmdlet">
            <summary>
            Stops an in-progress operation on a stack set and its associated stack instances.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StopCFNStackSetOperationCmdlet.OperationId">
            <summary>
            <para>
            <para>The ID of the stack operation. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StopCFNStackSetOperationCmdlet.StackSetName">
            <summary>
            <para>
            <para>The name or unique ID of the stack set that you want to stop the operation for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StopCFNStackSetOperationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.StopStackSetOperationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StopCFNStackSetOperationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StopCFNStackSetOperationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.StopCFNUpdateStackCmdlet">
            <summary>
            Cancels an update on the specified stack. If the call completes successfully, the
            stack rolls back the update and reverts to the previous stack configuration.
            
             <note><para>
            You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StopCFNUpdateStackCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique identifier for this <code>CancelUpdateStack</code> request. Specify this
            token if you plan to retry requests so that AWS CloudFormation knows that you're not
            attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code>
            requests to ensure that AWS CloudFormation successfully received them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StopCFNUpdateStackCmdlet.StackName">
            <summary>
            <para>
            <para>The name or the unique stack ID that is associated with the stack.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StopCFNUpdateStackCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.CancelUpdateStackResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StopCFNUpdateStackCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.StopCFNUpdateStackCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.TestCFNTemplateCmdlet">
            <summary>
            Validates a specified template. AWS CloudFormation first checks if the template is
            valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML.
            If both these checks fail, AWS CloudFormation returns a template validation error.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.TestCFNTemplateCmdlet.TemplateBody">
            <summary>
            <para>
            <para>Structure containing the template body with a minimum length of 1 byte and a maximum
            length of 51,200 bytes. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template
            Anatomy</a> in the AWS CloudFormation User Guide.</para><para>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>.
            If both are passed, only <code>TemplateBody</code> is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.TestCFNTemplateCmdlet.TemplateURL">
            <summary>
            <para>
            <para>Location of file containing the template body. The URL must point to a template (max
            size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information,
            go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template
            Anatomy</a> in the AWS CloudFormation User Guide.</para><para>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>.
            If both are passed, only <code>TemplateBody</code> is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.TestCFNTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.ValidateTemplateResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.ValidateTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.TestCFNTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateBody parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateBody' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.UnregisterCFNTypeCmdlet">
            <summary>
            Removes a type or type version from active use in the CloudFormation registry. If
            a type or type version is deregistered, it cannot be used in CloudFormation operations.
            
             
            <para>
            To deregister a type, you must individually deregister all registered versions of
            that type. If a type has only a single registered version, deregistering that version
            results in the type itself being deregistered. 
            </para><para>
            You cannot deregister the default version of a type, unless it is the only registered
            version of that type, in which case the type itself is deregistered as well. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UnregisterCFNTypeCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the type.</para><para>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>,
            or <code>Arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UnregisterCFNTypeCmdlet.Type">
            <summary>
            <para>
            <para>The kind of type.</para><para>Currently the only valid value is <code>RESOURCE</code>.</para><para>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>,
            or <code>Arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UnregisterCFNTypeCmdlet.TypeName">
            <summary>
            <para>
            <para>The name of the type.</para><para>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>,
            or <code>Arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UnregisterCFNTypeCmdlet.VersionId">
            <summary>
            <para>
            <para>The ID of a specific version of the type. The version ID is the value at the end of
            the Amazon Resource Name (ARN) assigned to the type version when it is registered.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UnregisterCFNTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.DeregisterTypeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UnregisterCFNTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TypeName parameter.
            The -PassThru parameter is deprecated, use -Select '^TypeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UnregisterCFNTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet">
            <summary>
            Updates a stack as specified in the template. After the call completes successfully,
            the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a>
            action.
            
             
            <para>
            To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a>
            action.
            </para><para>
            For more information about creating an update template, updating a stack, and monitoring
            the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating
            a Stack</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet.Capability">
            <summary>
            <para>
            <para>In some cases, you must explicitly acknowledge that your stack template contains certain
            capabilities in order for AWS CloudFormation to update the stack.</para><ul><li><para><code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code></para><para>Some stack templates might include resources that can affect permissions in your AWS
            account; for example, by creating new AWS Identity and Access Management (IAM) users.
            For those stacks, you must explicitly acknowledge this by specifying one of these
            capabilities.</para><para>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code>
            or <code>CAPABILITY_NAMED_IAM</code> capability.</para><ul><li><para>If you have IAM resources, you can specify either capability. </para></li><li><para>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>.
            </para></li><li><para>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code>
            error.</para></li></ul><para>If your stack template contains these resources, we recommend that you review all
            permissions associated with them and edit their permissions if necessary.</para><ul><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html">
            AWS::IAM::AccessKey</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html">
            AWS::IAM::Group</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html">
            AWS::IAM::InstanceProfile</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html">
            AWS::IAM::Policy</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html">
            AWS::IAM::Role</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html">
            AWS::IAM::User</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html">
            AWS::IAM::UserToGroupAddition</a></para></li></ul><para>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging
            IAM Resources in AWS CloudFormation Templates</a>.</para></li><li><para><code>CAPABILITY_AUTO_EXPAND</code></para><para>Some template contain macros. Macros perform custom processing on templates; this
            can include simple actions like find-and-replace operations, all the way to extensive
            transformations of entire templates. Because of this, users typically create a change
            set from the processed template, so that they can review the changes resulting from
            the macros before actually updating the stack. If your stack template contains one
            or more macros, and you choose to update a stack directly from the processed template,
            without first reviewing the resulting changes in a change set, you must acknowledge
            this capability. This includes the <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a>
            and <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a>
            transforms, which are macros hosted by AWS CloudFormation.</para><para>Change sets do not currently support nested stacks. If you want to update a stack
            from a stack template that contains macros <i>and</i> nested stacks, you must update
            the stack directly from the template using this capability.</para><important><para>You should only update stacks directly from a stack template that contains macros
            if you know what processing the macro performs.</para><para>Each macro relies on an underlying Lambda service function for processing stack templates.
            Be aware that the Lambda function owner can update the function operation without
            AWS CloudFormation being notified.</para></important><para>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using
            AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique identifier for this <code>UpdateStack</code> request. Specify this token
            if you plan to retry requests so that AWS CloudFormation knows that you're not attempting
            to update a stack with the same name. You might retry <code>UpdateStack</code> requests
            to ensure that AWS CloudFormation successfully received them.</para><para>All events triggered by a given stack operation are assigned the same client request
            token, which you can use to track operations. For example, if you execute a <code>CreateStack</code>
            operation with the token <code>token1</code>, then all the <code>StackEvents</code>
            generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</para><para>In the console, stack operations display the client request token on the Events tab.
            Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>,
            which helps you easily identify the stack operation . For example, if you create a
            stack using the console, each stack event would be assigned the same token in the
            following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet.RollbackConfiguration_MonitoringTimeInMinute">
            <summary>
            <para>
            <para>The amount of time, in minutes, during which CloudFormation should monitor all the
            rollback triggers after the stack creation or update operation deploys all necessary
            resources.</para><para>The default is 0 minutes.</para><para>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation
            still waits the specified period of time before cleaning up old resources after update
            operations. You can use this monitoring period to perform any manual stack validation
            desired, and manually cancel the stack creation or update (using <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>,
            for example) as necessary.</para><para>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback
            triggers during stack creation and update operations. Then, for update operations,
            it begins disposing of old resources immediately once the operation completes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet.NotificationARNs">
            <summary>
            <para>
            <para>Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation
            associates with the stack. Specify an empty list to remove all notification topics.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet.Parameter">
            <summary>
            <para>
            <para>A list of <code>Parameter</code> structures that specify input parameters for the
            stack. For more information, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a>
            data type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet.ResourceType">
            <summary>
            <para>
            <para>The template resource types that you have permissions to work with for this update
            stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or
            <code>Custom::MyCustomInstance</code>.</para><para>If the list of resource types doesn't include a resource that you're updating, the
            stack update fails. By default, AWS CloudFormation grants permissions to all resource
            types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific
            condition keys in IAM policies. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling
            Access with AWS Identity and Access Management</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet.RoleARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role
            that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's
            credentials to make calls on your behalf. AWS CloudFormation always uses this role
            for all future operations on the stack. As long as users have permission to operate
            on the stack, AWS CloudFormation uses this role even if the users don't have permission
            to pass it. Ensure that the role grants least privilege.</para><para>If you don't specify a value, AWS CloudFormation uses the role that was previously
            associated with the stack. If no role is available, AWS CloudFormation uses a temporary
            session that is generated from your user credentials.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet.RollbackConfiguration_RollbackTrigger">
            <summary>
            <para>
            <para>The triggers to monitor during stack creation or update actions. </para><para>By default, AWS CloudFormation saves the rollback triggers specified for a stack and
            applies them to any subsequent update operations for the stack, unless you specify
            otherwise. If you do specify rollback triggers for this parameter, those triggers
            replace any list of triggers previously specified for the stack. This means:</para><ul><li><para>To use the rollback triggers previously specified for this stack, if any, don't specify
            this parameter.</para></li><li><para>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers
            that you want used for this stack, even triggers you've specifed before (for example,
            when creating the stack or during a previous stack update). Any triggers that you
            don't include in the updated list of triggers are no longer applied to the stack.</para></li><li><para>To remove all currently specified triggers, specify an empty list for this parameter.</para></li></ul><para>If a specified trigger is missing, the entire stack operation fails and is rolled
            back. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet.StackName">
            <summary>
            <para>
            <para>The name or unique stack ID of the stack to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet.StackPolicyBody">
            <summary>
            <para>
            <para>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code>
            or the <code>StackPolicyURL</code> parameter, but not both.</para><para>You might update the stack policy, for example, in order to protect a new resource
            that you created during a stack update. If you do not specify a stack policy, the
            current policy that is associated with the stack is unchanged.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet.StackPolicyDuringUpdateBody">
            <summary>
            <para>
            <para>Structure containing the temporary overriding stack policy body. You can specify either
            the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code>
            parameter, but not both.</para><para>If you want to update protected resources, specify a temporary overriding stack policy
            during this update. If you do not specify a stack policy, the current policy that
            is associated with the stack will be used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet.StackPolicyDuringUpdateURL">
            <summary>
            <para>
            <para>Location of a file containing the temporary overriding stack policy. The URL must
            point to a policy (max size: 16KB) located in an S3 bucket in the same Region as the
            stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the
            <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</para><para>If you want to update protected resources, specify a temporary overriding stack policy
            during this update. If you do not specify a stack policy, the current policy that
            is associated with the stack will be used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet.StackPolicyURL">
            <summary>
            <para>
            <para>Location of a file containing the updated stack policy. The URL must point to a policy
            (max size: 16KB) located in an S3 bucket in the same Region as the stack. You can
            specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code>
            parameter, but not both.</para><para>You might update the stack policy, for example, in order to protect a new resource
            that you created during a stack update. If you do not specify a stack policy, the
            current policy that is associated with the stack is unchanged.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet.Tag">
            <summary>
            <para>
            <para>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these
            tags to supported resources in the stack. You can specify a maximum number of 50 tags.</para><para>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's
            tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet.TemplateBody">
            <summary>
            <para>
            <para>Structure containing the template body with a minimum length of 1 byte and a maximum
            length of 51,200 bytes. (For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template
            Anatomy</a> in the AWS CloudFormation User Guide.)</para><para>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>,
            <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet.TemplateURL">
            <summary>
            <para>
            <para>Location of file containing the template body. The URL must point to a template that
            is located in an Amazon S3 bucket. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template
            Anatomy</a> in the AWS CloudFormation User Guide.</para><para>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>,
            <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet.UsePreviousTemplate">
            <summary>
            <para>
            <para>Reuse the existing template that is associated with the stack that you are updating.</para><para>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>,
            <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StackId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.UpdateStackResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.UpdateStackResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackInstanceCmdlet">
            <summary>
            Updates the parameter values for stack instances for the specified accounts, within
            the specified Regions. A stack instance refers to a stack in a specific account and
            Region. 
            
             
            <para>
            You can only update stack instances in Regions and accounts where they already exist;
            to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>.
            
            </para><para>
            During stack set updates, any parameters overridden for a stack instance are not updated,
            but retain their overridden value.
            </para><para>
            You can only update the parameter <i>values</i> that are specified in the stack set;
            to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a>
            to update the stack set template. If you add a parameter to a template, before you
            can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a>
            to update all stack instances with the updated template and parameter value specified
            in the stack set. Once a stack instance has been updated with the new parameter, you
            can then override the parameter value using <code>UpdateStackInstances</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackInstanceCmdlet.Account">
            <summary>
            <para>
            <para>[<code>Self-managed</code> permissions] The names of one or more AWS accounts for
            which you want to update parameter values for stack instances. The overridden parameter
            values will be applied to all stack instances in the specified accounts and Regions.</para><para>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackInstanceCmdlet.DeploymentTargets_Account">
            <summary>
            <para>
            <para>The names of one or more AWS accounts for which you want to deploy stack set updates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackInstanceCmdlet.OperationId">
            <summary>
            <para>
            <para>The unique identifier for this stack set operation. </para><para>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation
            performs the stack set operation only once, even if you retry the request multiple
            times. You might retry stack set operation requests to ensure that AWS CloudFormation
            successfully received them.</para><para>If you don't specify an operation ID, the SDK generates one automatically. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackInstanceCmdlet.OperationPreference">
            <summary>
            <para>
            <para>Preferences for how AWS CloudFormation performs this stack set operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackInstanceCmdlet.DeploymentTargets_OrganizationalUnitId">
            <summary>
            <para>
            <para>The organization root ID or organizational unit (OU) IDs to which StackSets deploys.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackInstanceCmdlet.ParameterOverride">
            <summary>
            <para>
            <para> A list of input parameters whose values you want to update for the specified stack
            instances. </para><para>Any overridden parameter values will be applied to all stack instances in the specified
            accounts and Regions. When specifying parameters and their values, be aware of how
            AWS CloudFormation sets parameter values during stack instance update operations:</para><ul><li><para>To override the current value for a parameter, include the parameter and specify its
            value.</para></li><li><para>To leave a parameter set to its present value, you can do one of the following:</para><ul><li><para>Do not include the parameter in the list.</para></li><li><para>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>.
            (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</para></li></ul></li><li><para>To set all overridden parameter back to the values specified in the stack set, specify
            a parameter list but do not include any parameters.</para></li><li><para>To leave all parameters set to their present values, do not specify this property
            at all.</para></li></ul><para>During stack set updates, any parameter values overridden for a stack instance are
            not updated, but retain their overridden value.</para><para>You can only override the parameter <i>values</i> that are specified in the stack
            set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update
            the stack set template. If you add a parameter to a template, before you can override
            the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a>
            to update all stack instances with the updated template and parameter value specified
            in the stack set. Once a stack instance has been updated with the new parameter, you
            can then override the parameter value using <code>UpdateStackInstances</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackInstanceCmdlet.StackInstanceRegion">
            <summary>
            <para>
            <para>The names of one or more Regions in which you want to update parameter values for
            stack instances. The overridden parameter values will be applied to all stack instances
            in the specified accounts and Regions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackInstanceCmdlet.StackSetName">
            <summary>
            <para>
            <para>The name or unique ID of the stack set associated with the stack instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OperationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.UpdateStackInstancesResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.UpdateStackInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet">
            <summary>
            Updates the stack set, and associated stack instances in the specified accounts and
            Regions.
            
             
            <para>
            Even if the stack set operation created by updating the stack set fails (completely
            or partially, below or above a specified failure tolerance), the stack set is updated
            with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack
            set use the updated stack set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.Account">
            <summary>
            <para>
            <para>[<code>Self-managed</code> permissions] The accounts in which to update associated
            stack instances. If you specify accounts, you must also specify the Regions in which
            to update stack set instances.</para><para>To update <i>all</i> the stack instances associated with this stack set, do not specify
            the <code>Accounts</code> or <code>Regions</code> properties.</para><para>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code>
            or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code>
            property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code>
            prior to updating the stack instances in the specified accounts and Regions. If the
            stack set update does not include changes to the template or parameters, AWS CloudFormation
            updates the stack instances in the specified accounts and Regions, while leaving all
            other stack instances with their existing stack instance status. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.DeploymentTargets_Account">
            <summary>
            <para>
            <para>The names of one or more AWS accounts for which you want to deploy stack set updates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.AdministrationRoleARN">
            <summary>
            <para>
            <para>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</para><para>Specify an IAM role only if you are using customized administrator roles to control
            which users or groups can manage specific stack sets within the same administrator
            account. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting
            Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</para><para>If you specified a customized administrator role when you created the stack set, you
            must specify a customized administrator role, even if it is the same customized administrator
            role used with this stack set previously.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.Capability">
            <summary>
            <para>
            <para>In some cases, you must explicitly acknowledge that your stack template contains certain
            capabilities in order for AWS CloudFormation to update the stack set and its associated
            stack instances.</para><ul><li><para><code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code></para><para>Some stack templates might include resources that can affect permissions in your AWS
            account; for example, by creating new AWS Identity and Access Management (IAM) users.
            For those stacks sets, you must explicitly acknowledge this by specifying one of these
            capabilities.</para><para>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code>
            or <code>CAPABILITY_NAMED_IAM</code> capability.</para><ul><li><para>If you have IAM resources, you can specify either capability. </para></li><li><para>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>.
            </para></li><li><para>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code>
            error.</para></li></ul><para>If your stack template contains these resources, we recommend that you review all
            permissions associated with them and edit their permissions if necessary.</para><ul><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html">
            AWS::IAM::AccessKey</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html">
            AWS::IAM::Group</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html">
            AWS::IAM::InstanceProfile</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html">
            AWS::IAM::Policy</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html">
            AWS::IAM::Role</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html">
            AWS::IAM::User</a></para></li><li><para><a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html">
            AWS::IAM::UserToGroupAddition</a></para></li></ul><para>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging
            IAM Resources in AWS CloudFormation Templates</a>.</para></li><li><para><code>CAPABILITY_AUTO_EXPAND</code></para><para>Some templates contain macros. If your stack template contains one or more macros,
            and you choose to update a stack directly from the processed template, without first
            reviewing the resulting changes in a change set, you must acknowledge this capability.
            For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using
            AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</para><important><para>Stack sets do not currently support macros in stack templates. (This includes the
            <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a>
            and <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a>
            transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this
            capability, if you include a macro in your template the stack set operation will fail.</para></important></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.Description">
            <summary>
            <para>
            <para>A brief description of updates that you are making.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.AutoDeployment_Enabled">
            <summary>
            <para>
            <para>If set to <code>true</code>, StackSets automatically deploys additional stack instances
            to AWS Organizations accounts that are added to a target organization or organizational
            unit (OU) in the specified Regions. If an account is removed from a target organization
            or OU, StackSets deletes stack instances from the account in the specified Regions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.ExecutionRoleName">
            <summary>
            <para>
            <para>The name of the IAM execution role to use to update the stack set. If you do not specify
            an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code>
            role for the stack set operation.</para><para>Specify an IAM role only if you are using customized execution roles to control which
            stack resources users and groups can include in their stack sets. </para><para> If you specify a customized execution role, AWS CloudFormation uses that role to
            update the stack. If you do not specify a customized execution role, AWS CloudFormation
            performs the update using the role previously associated with the stack set, so long
            as you have permissions to perform operations on the stack set.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.OperationId">
            <summary>
            <para>
            <para>The unique ID for this stack set operation. </para><para>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation
            performs the stack set operation only once, even if you retry the request multiple
            times. You might retry stack set operation requests to ensure that AWS CloudFormation
            successfully received them.</para><para>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</para><para>Repeating this stack set operation with a new operation ID retries all stack instances
            whose status is <code>OUTDATED</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.OperationPreference">
            <summary>
            <para>
            <para>Preferences for how AWS CloudFormation performs this stack set operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.DeploymentTargets_OrganizationalUnitId">
            <summary>
            <para>
            <para>The organization root ID or organizational unit (OU) IDs to which StackSets deploys.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.Parameter">
            <summary>
            <para>
            <para>A list of input parameters for the stack set template. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.PermissionModel">
            <summary>
            <para>
            <para>Describes how the IAM roles required for stack set operations are created. You cannot
            modify <code>PermissionModel</code> if there are stack instances associated with your
            stack set.</para><ul><li><para>With <code>self-managed</code> permissions, you must create the administrator and
            execution roles required to deploy to target accounts. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html">Grant
            Self-Managed Stack Set Permissions</a>.</para></li><li><para>With <code>service-managed</code> permissions, StackSets automatically creates the
            IAM roles required to deploy to accounts managed by AWS Organizations. For more information,
            see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html">Grant
            Service-Managed Stack Set Permissions</a>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.StackRegion">
            <summary>
            <para>
            <para>The Regions in which to update associated stack instances. If you specify Regions,
            you must also specify accounts in which to update stack set instances.</para><para>To update <i>all</i> the stack instances associated with this stack set, do not specify
            the <code>Accounts</code> or <code>Regions</code> properties.</para><para>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code>
            or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code>
            property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code>
            prior to updating the stack instances in the specified accounts and Regions. If the
            stack set update does not include changes to the template or parameters, AWS CloudFormation
            updates the stack instances in the specified accounts and Regions, while leaving all
            other stack instances with their existing stack instance status. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.AutoDeployment_RetainStacksOnAccountRemoval">
            <summary>
            <para>
            <para>If set to <code>true</code>, stack resources are retained when an account is removed
            from a target organization or OU. If set to <code>false</code>, stack resources are
            deleted. Specify only if <code>Enabled</code> is set to <code>True</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.StackSetName">
            <summary>
            <para>
            <para>The name or unique ID of the stack set that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.Tag">
            <summary>
            <para>
            <para>The key-value pairs to associate with this stack set and the stacks created from it.
            AWS CloudFormation also propagates these tags to supported resources that are created
            in the stacks. You can specify a maximum number of 50 tags.</para><para>If you specify tags for this parameter, those tags replace any list of tags that are
            currently associated with this stack set. This means:</para><ul><li><para>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's
            tags. </para></li><li><para>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the
            tags that you want associated with this stack set, even tags you've specifed before
            (for example, when creating the stack set or during a previous update of the stack
            set.). Any tags that you don't include in the updated list of tags are removed from
            the stack set, and therefore from the stacks and resources as well. </para></li><li><para>If you specify an empty value, AWS CloudFormation removes all currently associated
            tags.</para></li></ul><para>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation
            checks to see if you have the required IAM permission to tag resources. If you omit
            tags that are currently associated with the stack set from the list of tags you specify,
            AWS CloudFormation assumes that you want to remove those tags from the stack set,
            and checks to see if you have permission to untag resources. If you don't have the
            necessary permission(s), the entire <code>UpdateStackSet</code> action fails with
            an <code>access denied</code> error, and the stack set is not updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.TemplateBody">
            <summary>
            <para>
            <para>The structure that contains the template body, with a minimum length of 1 byte and
            a maximum length of 51,200 bytes. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template
            Anatomy</a> in the AWS CloudFormation User Guide.</para><para>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>
            or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.TemplateURL">
            <summary>
            <para>
            <para>The location of the file that contains the template body. The URL must point to a
            template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For
            more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template
            Anatomy</a> in the AWS CloudFormation User Guide.</para><para>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>
            or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.UsePreviousTemplate">
            <summary>
            <para>
            <para>Use the existing template that's associated with the stack set that you're updating.</para><para>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>
            or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OperationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.UpdateStackSetResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.UpdateStackSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNStackSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNTerminationProtectionCmdlet">
            <summary>
            Updates termination protection for the specified stack. If a user attempts to delete
            a stack with termination protection enabled, the operation fails and the stack remains
            unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting
            a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.
            
             
            <para>
             For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested
            stacks</a>, termination protection is set on the root stack and cannot be changed
            directly on the nested stack.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNTerminationProtectionCmdlet.EnableTerminationProtection">
            <summary>
            <para>
            <para>Whether to enable termination protection on the specified stack.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNTerminationProtectionCmdlet.StackName">
            <summary>
            <para>
            <para>The name or unique ID of the stack for which you want to set termination protection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNTerminationProtectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StackId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.UpdateTerminationProtectionResponse).
            Specifying the name of a property of type Amazon.CloudFormation.Model.UpdateTerminationProtectionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNTerminationProtectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StackName parameter.
            The -PassThru parameter is deprecated, use -Select '^StackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.UpdateCFNTerminationProtectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CFN.WriteCFNHandlerProgressCmdlet">
            <summary>
            Reports progress of a resource handler to CloudFormation.
            
             
            <para>
            Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation
            CLI</a>. Do not use this API in your code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.WriteCFNHandlerProgressCmdlet.BearerToken">
            <summary>
            <para>
            <para>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation
            CLI</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.WriteCFNHandlerProgressCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation
            CLI</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.WriteCFNHandlerProgressCmdlet.CurrentOperationStatus">
            <summary>
            <para>
            <para>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation
            CLI</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.WriteCFNHandlerProgressCmdlet.ErrorCode">
            <summary>
            <para>
            <para>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation
            CLI</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.WriteCFNHandlerProgressCmdlet.OperationStatus">
            <summary>
            <para>
            <para>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation
            CLI</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.WriteCFNHandlerProgressCmdlet.ResourceModel">
            <summary>
            <para>
            <para>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation
            CLI</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.WriteCFNHandlerProgressCmdlet.StatusMessage">
            <summary>
            <para>
            <para>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation
            CLI</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.WriteCFNHandlerProgressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudFormation.Model.RecordHandlerProgressResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.WriteCFNHandlerProgressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OperationStatus parameter.
            The -PassThru parameter is deprecated, use -Select '^OperationStatus' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CFN.WriteCFNHandlerProgressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
