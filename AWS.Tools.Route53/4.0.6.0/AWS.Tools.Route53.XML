<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.Route53</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZonesByNameCmdlet">
            <summary>
            Retrieves a list of your hosted zones in lexicographic order. The response includes
            a <code>HostedZones</code> child element for each hosted zone created by the current
            AWS account. 
            
             
            <para><code>ListHostedZonesByName</code> sorts hosted zones by name with the labels reversed.
            For example:
            </para><para><code>com.example.www.</code></para><para>
            Note the trailing dot, which can change the sort order in some circumstances.
            </para><para>
            If the domain name includes escape characters or Punycode, <code>ListHostedZonesByName</code>
            alphabetizes the domain name using the escaped or Punycoded value, which is the format
            that Amazon Route 53 saves in its database. For example, to create a hosted zone for
            ex√§mple.com, you specify ex\344mple.com for the domain name. <code>ListHostedZonesByName</code>
            alphabetizes it as:
            </para><para><code>com.ex\344mple.</code></para><para>
            The labels are reversed and alphabetized using the escaped value. For more information
            about valid domain name formats, including internationalized domain names, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DomainNameFormat.html">DNS
            Domain Name Format</a> in the <i>Amazon Route 53 Developer Guide</i>.
            </para><para>
            Route 53 returns up to 100 items in each response. If you have a lot of hosted zones,
            use the <code>MaxItems</code> parameter to list them in groups of up to 100. The response
            includes values that help navigate from one group of <code>MaxItems</code> hosted
            zones to the next:
            </para><ul><li><para>
            The <code>DNSName</code> and <code>HostedZoneId</code> elements in the response contain
            the values, if any, specified for the <code>dnsname</code> and <code>hostedzoneid</code>
            parameters in the request that produced the current response.
            </para></li><li><para>
            The <code>MaxItems</code> element in the response contains the value, if any, that
            you specified for the <code>maxitems</code> parameter in the request that produced
            the current response.
            </para></li><li><para>
            If the value of <code>IsTruncated</code> in the response is true, there are more hosted
            zones associated with the current AWS account. 
            </para><para>
            If <code>IsTruncated</code> is false, this response includes the last hosted zone
            that is associated with the current account. The <code>NextDNSName</code> element
            and <code>NextHostedZoneId</code> elements are omitted from the response.
            </para></li><li><para>
            The <code>NextDNSName</code> and <code>NextHostedZoneId</code> elements in the response
            contain the domain name and the hosted zone ID of the next hosted zone that is associated
            with the current AWS account. If you want to list more hosted zones, make another
            call to <code>ListHostedZonesByName</code>, and specify the value of <code>NextDNSName</code>
            and <code>NextHostedZoneId</code> in the <code>dnsname</code> and <code>hostedzoneid</code>
            parameters, respectively.
            </para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZonesByNameCmdlet.HostedZoneId">
            <summary>
            <para>
            <para>(Optional) For your first request to <code>ListHostedZonesByName</code>, do not include
            the <code>hostedzoneid</code> parameter.</para><para>If you have more hosted zones than the value of <code>maxitems</code>, <code>ListHostedZonesByName</code>
            returns only the first <code>maxitems</code> hosted zones. To get the next group of
            <code>maxitems</code> hosted zones, submit another request to <code>ListHostedZonesByName</code>
            and include both <code>dnsname</code> and <code>hostedzoneid</code> parameters. For
            the value of <code>hostedzoneid</code>, specify the value of the <code>NextHostedZoneId</code>
            element from the previous response.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-HostedZoneId $null' for the first call and '-HostedZoneId $AWSHistory.LastServiceResponse.NextHostedZoneId' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZonesByNameCmdlet.DNSName">
            <summary>
            <para>
            <para>(Optional) For your first request to <code>ListHostedZonesByName</code>, include the
            <code>dnsname</code> parameter only if you want to specify the name of the first hosted
            zone in the response. If you don't include the <code>dnsname</code> parameter, Amazon
            Route 53 returns all of the hosted zones that were created by the current AWS account,
            in ASCII order. For subsequent requests, include both <code>dnsname</code> and <code>hostedzoneid</code>
            parameters. For <code>dnsname</code>, specify the value of <code>NextDNSName</code>
            from the previous response.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-DNSName $null' for the first call and '-DNSName $AWSHistory.LastServiceResponse.NextDNSName' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZonesByNameCmdlet.MaxItem">
            <summary>
            <para>
            <para>The maximum number of hosted zones to be included in the response body for this request.
            If you have more than <code>maxitems</code> hosted zones, then the value of the <code>IsTruncated</code>
            element in the response is true, and the values of <code>NextDNSName</code> and <code>NextHostedZoneId</code>
            specify the first hosted zone in the next group of <code>maxitems</code> hosted zones.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZonesByNameCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HostedZones'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.ListHostedZonesByNameResponse).
            Specifying the name of a property of type Amazon.Route53.Model.ListHostedZonesByNameResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZonesByNameCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of DNSName
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.EditR53ResourceRecordSetCmdlet">
            <summary>
            Creates, changes, or deletes a resource record set, which contains authoritative DNS
            information for a specified domain name or subdomain name. For example, you can use
            <code>ChangeResourceRecordSets</code> to create a resource record set that routes
            traffic for test.example.com to a web server that has an IP address of 192.0.2.44.
            
             
            <para><b>Deleting Resource Record Sets</b></para><para>
            To delete a resource record set, you must specify all the same values that you specified
            when you created it.
            </para><para><b>Change Batches and Transactional Changes</b></para><para>
            The request body must include a document with a <code>ChangeResourceRecordSetsRequest</code>
            element. The request body contains a list of change items, known as a change batch.
            Change batches are considered transactional changes. Route 53 validates the changes
            in the request and then either makes all or none of the changes in the change batch
            request. This ensures that DNS routing isn't adversely affected by partial changes
            to the resource record sets in a hosted zone. 
            </para><para>
            For example, suppose a change batch request contains two changes: it deletes the <code>CNAME</code>
            resource record set for www.example.com and creates an alias resource record set for
            www.example.com. If validation for both records succeeds, Route 53 deletes the first
            resource record set and creates the second resource record set in a single operation.
            If validation for either the <code>DELETE</code> or the <code>CREATE</code> action
            fails, then the request is canceled, and the original <code>CNAME</code> record continues
            to exist.
            </para><note><para>
            If you try to delete the same resource record set more than once in a single change
            batch, Route 53 returns an <code>InvalidChangeBatch</code> error.
            </para></note><para><b>Traffic Flow</b></para><para>
            To create resource record sets for complex routing configurations, use either the
            traffic flow visual editor in the Route 53 console or the API actions for traffic
            policies and traffic policy instances. Save the configuration as a traffic policy,
            then associate the traffic policy with one or more domain names (such as example.com)
            or subdomain names (such as www.example.com), in the same hosted zone or in multiple
            hosted zones. You can roll back the updates if the new configuration isn't performing
            as expected. For more information, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/traffic-flow.html">Using
            Traffic Flow to Route DNS Traffic</a> in the <i>Amazon Route 53 Developer Guide</i>.
            </para><para><b>Create, Delete, and Upsert</b></para><para>
            Use <code>ChangeResourceRecordsSetsRequest</code> to perform the following actions:
            </para><ul><li><para><code>CREATE</code>: Creates a resource record set that has the specified values.
            </para></li><li><para><code>DELETE</code>: Deletes an existing resource record set that has the specified
            values.
            </para></li><li><para><code>UPSERT</code>: If a resource record set does not already exist, AWS creates
            it. If a resource set does exist, Route 53 updates it with the values in the request.
            
            </para></li></ul><para><b>Syntaxes for Creating, Updating, and Deleting Resource Record Sets</b></para><para>
            The syntax for a request depends on the type of resource record set that you want
            to create, delete, or update, such as weighted, alias, or failover. The XML elements
            in your request must appear in the order listed in the syntax. 
            </para><para>
            For an example for each type of resource record set, see "Examples."
            </para><para>
            Don't refer to the syntax in the "Parameter Syntax" section, which includes all of
            the elements for every kind of resource record set that you can create, delete, or
            update by using <code>ChangeResourceRecordSets</code>. 
            </para><para><b>Change Propagation to Route 53 DNS Servers</b></para><para>
            When you submit a <code>ChangeResourceRecordSets</code> request, Route 53 propagates
            your changes to all of the Route 53 authoritative DNS servers. While your changes
            are propagating, <code>GetChange</code> returns a status of <code>PENDING</code>.
            When propagation is complete, <code>GetChange</code> returns a status of <code>INSYNC</code>.
            Changes generally propagate to all Route 53 name servers within 60 seconds. For more
            information, see <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_GetChange.html">GetChange</a>.
            </para><para><b>Limits on ChangeResourceRecordSets Requests</b></para><para>
            For information about the limits on a <code>ChangeResourceRecordSets</code> request,
            see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html">Limits</a>
            in the <i>Amazon Route 53 Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.EditR53ResourceRecordSetCmdlet.ChangeBatch_Change">
            <summary>
            <para>
            <para>Information about the changes to make to the record sets.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.EditR53ResourceRecordSetCmdlet.ChangeBatch_Comment">
            <summary>
            <para>
            <para><i>Optional:</i> Any comments you want to include about a change batch request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.EditR53ResourceRecordSetCmdlet.HostedZoneId">
            <summary>
            <para>
            <para>The ID of the hosted zone that contains the resource record sets that you want to
            change.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.EditR53ResourceRecordSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ChangeInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.ChangeResourceRecordSetsResponse).
            Specifying the name of a property of type Amazon.Route53.Model.ChangeResourceRecordSetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.EditR53ResourceRecordSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HostedZoneId parameter.
            The -PassThru parameter is deprecated, use -Select '^HostedZoneId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.EditR53ResourceRecordSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.EditR53TagsForResourceCmdlet">
            <summary>
            Adds, edits, or deletes tags for a health check or a hosted zone.
            
             
            <para>
            For information about using tags for cost allocation, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
            Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.EditR53TagsForResourceCmdlet.AddTag">
            <summary>
            <para>
            <para>A complex type that contains a list of the tags that you want to add to the specified
            health check or hosted zone and/or the tags that you want to edit <code>Value</code>
            for.</para><para>You can add a maximum of 10 tags to a health check or a hosted zone.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.EditR53TagsForResourceCmdlet.RemoveTagKey">
            <summary>
            <para>
            <para>A complex type that contains a list of the tags that you want to delete from the specified
            health check or hosted zone. You can specify up to 10 keys.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.EditR53TagsForResourceCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of the resource for which you want to add, change, or delete tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.EditR53TagsForResourceCmdlet.ResourceType">
            <summary>
            <para>
            <para>The type of the resource.</para><ul><li><para>The resource type for health checks is <code>healthcheck</code>.</para></li><li><para>The resource type for hosted zones is <code>hostedzone</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.EditR53TagsForResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.ChangeTagsForResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.EditR53TagsForResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.EditR53TagsForResourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53AccountLimitCmdlet">
            <summary>
            Gets the specified limit for the current account, for example, the maximum number
            of health checks that you can create using the account.
            
             
            <para>
            For the default limit, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html">Limits</a>
            in the <i>Amazon Route 53 Developer Guide</i>. To request a higher limit, <a href="https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&amp;limitType=service-code-route53">open
            a case</a>.
            </para><note><para>
            You can also view account limits in AWS Trusted Advisor. Sign in to the AWS Management
            Console and open the Trusted Advisor console at <a href="https://console.aws.amazon.com/trustedadvisor">https://console.aws.amazon.com/trustedadvisor/</a>.
            Then choose <b>Service limits</b> in the navigation pane.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53AccountLimitCmdlet.Type">
            <summary>
            <para>
            <para>The limit that you want to get. Valid values include the following:</para><ul><li><para><b>MAX_HEALTH_CHECKS_BY_OWNER</b>: The maximum number of health checks that you can
            create using the current account.</para></li><li><para><b>MAX_HOSTED_ZONES_BY_OWNER</b>: The maximum number of hosted zones that you can
            create using the current account.</para></li><li><para><b>MAX_REUSABLE_DELEGATION_SETS_BY_OWNER</b>: The maximum number of reusable delegation
            sets that you can create using the current account.</para></li><li><para><b>MAX_TRAFFIC_POLICIES_BY_OWNER</b>: The maximum number of traffic policies that
            you can create using the current account.</para></li><li><para><b>MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER</b>: The maximum number of traffic policy
            instances that you can create using the current account. (Traffic policy instances
            are referred to as traffic flow policy records in the Amazon Route 53 console.)</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53AccountLimitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Count'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.GetAccountLimitResponse).
            Specifying the name of a property of type Amazon.Route53.Model.GetAccountLimitResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53ChangeCmdlet">
            <summary>
            Returns the current status of a change batch request. The status is one of the following
            values:
            
             <ul><li><para><code>PENDING</code> indicates that the changes in this request have not propagated
            to all Amazon Route 53 DNS servers. This is the initial status of all change batch
            requests.
            </para></li><li><para><code>INSYNC</code> indicates that the changes have propagated to all Route 53 DNS
            servers. 
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ChangeCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the change batch request. The value that you specify here is the value that
            <code>ChangeResourceRecordSets</code> returned in the <code>Id</code> element when
            you submitted the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ChangeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ChangeInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.GetChangeResponse).
            Specifying the name of a property of type Amazon.Route53.Model.GetChangeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ChangeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53CheckerIpRangeCmdlet">
            <summary>
            <important><para><code>GetCheckerIpRanges</code> still works, but we recommend that you download ip-ranges.json,
            which includes IP address ranges for all AWS services. For more information, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/route-53-ip-addresses.html">IP
            Address Ranges of Amazon Route 53 Servers</a> in the <i>Amazon Route 53 Developer
            Guide</i>.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53CheckerIpRangeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CheckerIpRanges'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.GetCheckerIpRangesResponse).
            Specifying the name of a property of type Amazon.Route53.Model.GetCheckerIpRangesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53GeoLocationCmdlet">
            <summary>
            Gets information about whether a specified geographic location is supported for Amazon
            Route 53 geolocation resource record sets.
            
             
            <para>
            Use the following syntax to determine whether a continent is supported for geolocation:
            </para><para><code>GET /2013-04-01/geolocation?continentcode=<i>two-letter abbreviation for a
            continent</i></code></para><para>
            Use the following syntax to determine whether a country is supported for geolocation:
            </para><para><code>GET /2013-04-01/geolocation?countrycode=<i>two-character country code</i></code></para><para>
            Use the following syntax to determine whether a subdivision of a country is supported
            for geolocation:
            </para><para><code>GET /2013-04-01/geolocation?countrycode=<i>two-character country code</i>&amp;subdivisioncode=<i>subdivision
            code</i></code></para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53GeoLocationCmdlet.ContinentCode">
            <summary>
            <para>
            <para>For geolocation resource record sets, a two-letter abbreviation that identifies a
            continent. Amazon Route 53 supports the following continent codes:</para><ul><li><para><b>AF</b>: Africa</para></li><li><para><b>AN</b>: Antarctica</para></li><li><para><b>AS</b>: Asia</para></li><li><para><b>EU</b>: Europe</para></li><li><para><b>OC</b>: Oceania</para></li><li><para><b>NA</b>: North America</para></li><li><para><b>SA</b>: South America</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53GeoLocationCmdlet.CountryCode">
            <summary>
            <para>
            <para>Amazon Route 53 uses the two-letter country codes that are specified in <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO
            standard 3166-1 alpha-2</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53GeoLocationCmdlet.SubdivisionCode">
            <summary>
            <para>
            <para>For <code>SubdivisionCode</code>, Amazon Route 53 supports only states of the United
            States. For a list of state abbreviations, see <a href="https://pe.usps.com/text/pub28/28apb.htm">Appendix
            B: Two‚ÄìLetter State and Possession Abbreviations</a> on the United States Postal Service
            website. </para><para>If you specify <code>subdivisioncode</code>, you must also specify <code>US</code>
            for <code>CountryCode</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53GeoLocationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GeoLocationDetails'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.GetGeoLocationResponse).
            Specifying the name of a property of type Amazon.Route53.Model.GetGeoLocationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53GeoLocationListCmdlet">
            <summary>
            Retrieves a list of supported geographic locations.
            
             
            <para>
            Countries are listed first, and continents are listed last. If Amazon Route 53 supports
            subdivisions for a country (for example, states or provinces), the subdivisions for
            that country are listed in alphabetical order immediately after the corresponding
            country.
            </para><para>
            For a list of supported geolocation codes, see the <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_GeoLocation.html">GeoLocation</a>
            data type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53GeoLocationListCmdlet.StartContinentCode">
            <summary>
            <para>
            <para>The code for the continent with which you want to start listing locations that Amazon
            Route 53 supports for geolocation. If Route 53 has already returned a page or more
            of results, if <code>IsTruncated</code> is true, and if <code>NextContinentCode</code>
            from the previous response has a value, enter that value in <code>startcontinentcode</code>
            to return the next page of results.</para><para>Include <code>startcontinentcode</code> only if you want to list continents. Don't
            include <code>startcontinentcode</code> when you're listing countries or countries
            with their subdivisions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53GeoLocationListCmdlet.StartCountryCode">
            <summary>
            <para>
            <para>The code for the country with which you want to start listing locations that Amazon
            Route 53 supports for geolocation. If Route 53 has already returned a page or more
            of results, if <code>IsTruncated</code> is <code>true</code>, and if <code>NextCountryCode</code>
            from the previous response has a value, enter that value in <code>startcountrycode</code>
            to return the next page of results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53GeoLocationListCmdlet.StartSubdivisionCode">
            <summary>
            <para>
            <para>The code for the state of the United States with which you want to start listing locations
            that Amazon Route 53 supports for geolocation. If Route 53 has already returned a
            page or more of results, if <code>IsTruncated</code> is <code>true</code>, and if
            <code>NextSubdivisionCode</code> from the previous response has a value, enter that
            value in <code>startsubdivisioncode</code> to return the next page of results.</para><para>To list subdivisions (U.S. states), you must include both <code>startcountrycode</code>
            and <code>startsubdivisioncode</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53GeoLocationListCmdlet.MaxItem">
            <summary>
            <para>
            <para>(Optional) The maximum number of geolocations to be included in the response body
            for this request. If more than <code>maxitems</code> geolocations remain to be listed,
            then the value of the <code>IsTruncated</code> element in the response is <code>true</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53GeoLocationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.ListGeoLocationsResponse).
            Specifying the name of a property of type Amazon.Route53.Model.ListGeoLocationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53HealthCheckCmdlet">
            <summary>
            Gets information about a specified health check.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HealthCheckCmdlet.HealthCheckId">
            <summary>
            <para>
            <para>The identifier that Amazon Route 53 assigned to the health check when you created
            it. When you add or update a resource record set, you use this value to specify which
            health check to use. The value can be up to 64 characters long.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HealthCheckCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HealthCheck'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.GetHealthCheckResponse).
            Specifying the name of a property of type Amazon.Route53.Model.GetHealthCheckResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HealthCheckCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HealthCheckId parameter.
            The -PassThru parameter is deprecated, use -Select '^HealthCheckId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53HealthCheckCountCmdlet">
            <summary>
            Retrieves the number of health checks that are associated with the current AWS account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HealthCheckCountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HealthCheckCount'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.GetHealthCheckCountResponse).
            Specifying the name of a property of type Amazon.Route53.Model.GetHealthCheckCountResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53HealthCheckLastFailureReasonCmdlet">
            <summary>
            Gets the reason that a specified health check failed most recently.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HealthCheckLastFailureReasonCmdlet.HealthCheckId">
            <summary>
            <para>
            <para>The ID for the health check for which you want the last failure reason. When you created
            the health check, <code>CreateHealthCheck</code> returned the ID in the response,
            in the <code>HealthCheckId</code> element.</para><note><para>If you want to get the last failure reason for a calculated health check, you must
            use the Amazon Route 53 console or the CloudWatch console. You can't use <code>GetHealthCheckLastFailureReason</code>
            for a calculated health check.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HealthCheckLastFailureReasonCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HealthCheckObservations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.GetHealthCheckLastFailureReasonResponse).
            Specifying the name of a property of type Amazon.Route53.Model.GetHealthCheckLastFailureReasonResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HealthCheckLastFailureReasonCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HealthCheckId parameter.
            The -PassThru parameter is deprecated, use -Select '^HealthCheckId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53HealthCheckListCmdlet">
            <summary>
            Retrieve a list of the health checks that are associated with the current AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HealthCheckListCmdlet.Marker">
            <summary>
            <para>
            <para>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>,
            you have more health checks. To get another group, submit another <code>ListHealthChecks</code>
            request. </para><para>For the value of <code>marker</code>, specify the value of <code>NextMarker</code>
            from the previous response, which is the ID of the first health check that Amazon
            Route 53 will return if you submit another request.</para><para>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>,
            there are no more health checks to get.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HealthCheckListCmdlet.MaxItem">
            <summary>
            <para>
            <para>The maximum number of health checks that you want <code>ListHealthChecks</code> to
            return in response to the current request. Amazon Route 53 returns a maximum of 100
            items. If you set <code>MaxItems</code> to a value greater than 100, Route 53 returns
            only the first 100 health checks. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HealthCheckListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HealthChecks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.ListHealthChecksResponse).
            Specifying the name of a property of type Amazon.Route53.Model.ListHealthChecksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HealthCheckListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53HealthCheckStatusCmdlet">
            <summary>
            Gets status of a specified health check.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HealthCheckStatusCmdlet.HealthCheckId">
            <summary>
            <para>
            <para>The ID for the health check that you want the current status for. When you created
            the health check, <code>CreateHealthCheck</code> returned the ID in the response,
            in the <code>HealthCheckId</code> element.</para><note><para>If you want to check the status of a calculated health check, you must use the Amazon
            Route 53 console or the CloudWatch console. You can't use <code>GetHealthCheckStatus</code>
            to get the status of a calculated health check.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HealthCheckStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HealthCheckObservations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.GetHealthCheckStatusResponse).
            Specifying the name of a property of type Amazon.Route53.Model.GetHealthCheckStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HealthCheckStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HealthCheckId parameter.
            The -PassThru parameter is deprecated, use -Select '^HealthCheckId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZoneCmdlet">
            <summary>
            Gets information about a specified hosted zone including the four name servers assigned
            to the hosted zone.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZoneCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the hosted zone that you want to get information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZoneCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.GetHostedZoneResponse).
            Specifying the name of a property of type Amazon.Route53.Model.GetHostedZoneResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZoneCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZoneCountCmdlet">
            <summary>
            Retrieves the number of hosted zones that are associated with the current AWS account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZoneCountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HostedZoneCount'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.GetHostedZoneCountResponse).
            Specifying the name of a property of type Amazon.Route53.Model.GetHostedZoneCountResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZoneLimitCmdlet">
            <summary>
            Gets the specified limit for a specified hosted zone, for example, the maximum number
            of records that you can create in the hosted zone. 
            
             
            <para>
            For the default limit, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html">Limits</a>
            in the <i>Amazon Route 53 Developer Guide</i>. To request a higher limit, <a href="https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&amp;limitType=service-code-route53">open
            a case</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZoneLimitCmdlet.HostedZoneId">
            <summary>
            <para>
            <para>The ID of the hosted zone that you want to get a limit for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZoneLimitCmdlet.Type">
            <summary>
            <para>
            <para>The limit that you want to get. Valid values include the following:</para><ul><li><para><b>MAX_RRSETS_BY_ZONE</b>: The maximum number of records that you can create in the
            specified hosted zone.</para></li><li><para><b>MAX_VPCS_ASSOCIATED_BY_ZONE</b>: The maximum number of Amazon VPCs that you can
            associate with the specified private hosted zone.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZoneLimitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Count'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.GetHostedZoneLimitResponse).
            Specifying the name of a property of type Amazon.Route53.Model.GetHostedZoneLimitResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZoneLimitCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HostedZoneId parameter.
            The -PassThru parameter is deprecated, use -Select '^HostedZoneId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZoneListCmdlet">
            <summary>
            Retrieves a list of the public and private hosted zones that are associated with the
            current AWS account. The response includes a <code>HostedZones</code> child element
            for each hosted zone.
            
             
            <para>
            Amazon Route 53 returns a maximum of 100 items in each response. If you have a lot
            of hosted zones, you can use the <code>maxitems</code> parameter to list them in groups
            of up to 100.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZoneListCmdlet.DelegationSetId">
            <summary>
            <para>
            <para>If you're using reusable delegation sets and you want to list all of the hosted zones
            that are associated with a reusable delegation set, specify the ID of that reusable
            delegation set. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZoneListCmdlet.Marker">
            <summary>
            <para>
            <para>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>,
            you have more hosted zones. To get more hosted zones, submit another <code>ListHostedZones</code>
            request. </para><para>For the value of <code>marker</code>, specify the value of <code>NextMarker</code>
            from the previous response, which is the ID of the first hosted zone that Amazon Route
            53 will return if you submit another request.</para><para>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>,
            there are no more hosted zones to get.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZoneListCmdlet.MaxItem">
            <summary>
            <para>
            <para>(Optional) The maximum number of hosted zones that you want Amazon Route 53 to return.
            If you have more than <code>maxitems</code> hosted zones, the value of <code>IsTruncated</code>
            in the response is <code>true</code>, and the value of <code>NextMarker</code> is
            the hosted zone ID of the first hosted zone that Route 53 will return if you submit
            another request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZoneListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HostedZones'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.ListHostedZonesResponse).
            Specifying the name of a property of type Amazon.Route53.Model.ListHostedZonesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZoneListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DelegationSetId parameter.
            The -PassThru parameter is deprecated, use -Select '^DelegationSetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53HostedZoneListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53QueryLoggingConfigCmdlet">
            <summary>
            Gets information about a specified configuration for DNS query logging.
            
             
            <para>
            For more information about DNS query logs, see <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_CreateQueryLoggingConfig.html">CreateQueryLoggingConfig</a>
            and <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/query-logs.html">Logging
            DNS Queries</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53QueryLoggingConfigCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the configuration for DNS query logging that you want to get information
            about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53QueryLoggingConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'QueryLoggingConfig'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.GetQueryLoggingConfigResponse).
            Specifying the name of a property of type Amazon.Route53.Model.GetQueryLoggingConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53QueryLoggingConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53QueryLoggingConfigListCmdlet">
            <summary>
            Lists the configurations for DNS query logging that are associated with the current
            AWS account or the configuration that is associated with a specified hosted zone.
            
             
            <para>
            For more information about DNS query logs, see <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_CreateQueryLoggingConfig.html">CreateQueryLoggingConfig</a>.
            Additional information, including the format of DNS query logs, appears in <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/query-logs.html">Logging
            DNS Queries</a> in the <i>Amazon Route 53 Developer Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53QueryLoggingConfigListCmdlet.HostedZoneId">
            <summary>
            <para>
            <para>(Optional) If you want to list the query logging configuration that is associated
            with a hosted zone, specify the ID in <code>HostedZoneId</code>. </para><para>If you don't specify a hosted zone ID, <code>ListQueryLoggingConfigs</code> returns
            all of the configurations that are associated with the current AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53QueryLoggingConfigListCmdlet.MaxResult">
            <summary>
            <para>
            <para>(Optional) The maximum number of query logging configurations that you want Amazon
            Route 53 to return in response to the current request. If the current AWS account
            has more than <code>MaxResults</code> configurations, use the value of <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListQueryLoggingConfigs.html#API_ListQueryLoggingConfigs_RequestSyntax">NextToken</a>
            in the response to get the next page of results.</para><para>If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100
            configurations.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53QueryLoggingConfigListCmdlet.NextToken">
            <summary>
            <para>
            <para>(Optional) If the current AWS account has more than <code>MaxResults</code> query
            logging configurations, use <code>NextToken</code> to get the second and subsequent
            pages of results.</para><para>For the first <code>ListQueryLoggingConfigs</code> request, omit this value.</para><para>For the second and subsequent requests, get the value of <code>NextToken</code> from
            the previous response and specify that value for <code>NextToken</code> in the request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53QueryLoggingConfigListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'QueryLoggingConfigs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.ListQueryLoggingConfigsResponse).
            Specifying the name of a property of type Amazon.Route53.Model.ListQueryLoggingConfigsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53QueryLoggingConfigListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HostedZoneId parameter.
            The -PassThru parameter is deprecated, use -Select '^HostedZoneId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53QueryLoggingConfigListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53ResourceRecordSetCmdlet">
            <summary>
            Lists the resource record sets in a specified hosted zone.
            
             
            <para><code>ListResourceRecordSets</code> returns up to 100 resource record sets at a time
            in ASCII order, beginning at a position specified by the <code>name</code> and <code>type</code>
            elements.
            </para><para><b>Sort order</b></para><para><code>ListResourceRecordSets</code> sorts results first by DNS name with the labels
            reversed, for example:
            </para><para><code>com.example.www.</code></para><para>
            Note the trailing dot, which can change the sort order when the record name contains
            characters that appear before <code>.</code> (decimal 46) in the ASCII table. These
            characters include the following: <code>! " # $ % &amp; ' ( ) * + , -</code></para><para>
            When multiple records have the same DNS name, <code>ListResourceRecordSets</code>
            sorts results by the record type.
            </para><para><b>Specifying where to start listing records</b></para><para>
            You can use the name and type elements to specify the resource record set that the
            list begins with:
            </para><dl><dt>If you do not specify Name or Type</dt><dd><para>
            The results begin with the first resource record set that the hosted zone contains.
            </para></dd><dt>If you specify Name but not Type</dt><dd><para>
            The results begin with the first resource record set in the list whose name is greater
            than or equal to <code>Name</code>.
            </para></dd><dt>If you specify Type but not Name</dt><dd><para>
            Amazon Route 53 returns the <code>InvalidInput</code> error.
            </para></dd><dt>If you specify both Name and Type</dt><dd><para>
            The results begin with the first resource record set in the list whose name is greater
            than or equal to <code>Name</code>, and whose type is greater than or equal to <code>Type</code>.
            </para></dd></dl><para><b>Resource record sets that are PENDING</b></para><para>
            This action returns the most current version of the records. This includes records
            that are <code>PENDING</code>, and that are not yet available on all Route 53 DNS
            servers.
            </para><para><b>Changing resource record sets</b></para><para>
            To ensure that you get an accurate listing of the resource record sets for a hosted
            zone at a point in time, do not submit a <code>ChangeResourceRecordSets</code> request
            while you're paging through the results of a <code>ListResourceRecordSets</code> request.
            If you do, some pages may display results without the latest changes while other pages
            display results with the latest changes.
            </para><para><b>Displaying the next page of results</b></para><para>
            If a <code>ListResourceRecordSets</code> command returns more than one page of results,
            the value of <code>IsTruncated</code> is <code>true</code>. To display the next page
            of results, get the values of <code>NextRecordName</code>, <code>NextRecordType</code>,
            and <code>NextRecordIdentifier</code> (if any) from the response. Then submit another
            <code>ListResourceRecordSets</code> request, and specify those values for <code>StartRecordName</code>,
            <code>StartRecordType</code>, and <code>StartRecordIdentifier</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ResourceRecordSetCmdlet.HostedZoneId">
            <summary>
            <para>
            <para>The ID of the hosted zone that contains the resource record sets that you want to
            list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ResourceRecordSetCmdlet.StartRecordIdentifier">
            <summary>
            <para>
            <para><i>Resource record sets that have a routing policy other than simple:</i> If results
            were truncated for a given DNS name and type, specify the value of <code>NextRecordIdentifier</code>
            from the previous response to get the next resource record set that has the current
            DNS name and type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ResourceRecordSetCmdlet.StartRecordName">
            <summary>
            <para>
            <para>The first name in the lexicographic ordering of resource record sets that you want
            to list. If the specified record name doesn't exist, the results begin with the first
            resource record set that has a name greater than the value of <code>name</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ResourceRecordSetCmdlet.StartRecordType">
            <summary>
            <para>
            <para>The type of resource record set to begin the record listing from.</para><para>Valid values for basic resource record sets: <code>A</code> | <code>AAAA</code> |
            <code>CAA</code> | <code>CNAME</code> | <code>MX</code> | <code>NAPTR</code> | <code>NS</code>
            | <code>PTR</code> | <code>SOA</code> | <code>SPF</code> | <code>SRV</code> | <code>TXT</code></para><para>Values for weighted, latency, geolocation, and failover resource record sets: <code>A</code>
            | <code>AAAA</code> | <code>CAA</code> | <code>CNAME</code> | <code>MX</code> | <code>NAPTR</code>
            | <code>PTR</code> | <code>SPF</code> | <code>SRV</code> | <code>TXT</code></para><para>Values for alias resource record sets: </para><ul><li><para><b>API Gateway custom regional API or edge-optimized API</b>: A</para></li><li><para><b>CloudFront distribution</b>: A or AAAA</para></li><li><para><b>Elastic Beanstalk environment that has a regionalized subdomain</b>: A</para></li><li><para><b>Elastic Load Balancing load balancer</b>: A | AAAA</para></li><li><para><b>S3 bucket</b>: A</para></li><li><para><b>VPC interface VPC endpoint</b>: A</para></li><li><para><b>Another resource record set in this hosted zone:</b> The type of the resource
            record set that the alias references.</para></li></ul><para>Constraint: Specifying <code>type</code> without specifying <code>name</code> returns
            an <code>InvalidInput</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ResourceRecordSetCmdlet.MaxItem">
            <summary>
            <para>
            <para>(Optional) The maximum number of resource records sets to include in the response
            body for this request. If the response includes more than <code>maxitems</code> resource
            record sets, the value of the <code>IsTruncated</code> element in the response is
            <code>true</code>, and the values of the <code>NextRecordName</code> and <code>NextRecordType</code>
            elements in the response identify the first resource record set in the next group
            of <code>maxitems</code> resource record sets.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ResourceRecordSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.ListResourceRecordSetsResponse).
            Specifying the name of a property of type Amazon.Route53.Model.ListResourceRecordSetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ResourceRecordSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HostedZoneId parameter.
            The -PassThru parameter is deprecated, use -Select '^HostedZoneId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53ReusableDelegationSetCmdlet">
            <summary>
            Retrieves information about a specified reusable delegation set, including the four
            name servers that are assigned to the delegation set.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ReusableDelegationSetCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the reusable delegation set that you want to get a list of name servers
            for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ReusableDelegationSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DelegationSet'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.GetReusableDelegationSetResponse).
            Specifying the name of a property of type Amazon.Route53.Model.GetReusableDelegationSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ReusableDelegationSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53ReusableDelegationSetLimitCmdlet">
            <summary>
            Gets the maximum number of hosted zones that you can associate with the specified
            reusable delegation set.
            
             
            <para>
            For the default limit, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html">Limits</a>
            in the <i>Amazon Route 53 Developer Guide</i>. To request a higher limit, <a href="https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&amp;limitType=service-code-route53">open
            a case</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ReusableDelegationSetLimitCmdlet.DelegationSetId">
            <summary>
            <para>
            <para>The ID of the delegation set that you want to get the limit for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ReusableDelegationSetLimitCmdlet.Type">
            <summary>
            <para>
            <para>Specify <code>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</code> to get the maximum number
            of hosted zones that you can associate with the specified reusable delegation set.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ReusableDelegationSetLimitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Count'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.GetReusableDelegationSetLimitResponse).
            Specifying the name of a property of type Amazon.Route53.Model.GetReusableDelegationSetLimitResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ReusableDelegationSetLimitCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DelegationSetId parameter.
            The -PassThru parameter is deprecated, use -Select '^DelegationSetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53ReusableDelegationSetListCmdlet">
            <summary>
            Retrieves a list of the reusable delegation sets that are associated with the current
            AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ReusableDelegationSetListCmdlet.Marker">
            <summary>
            <para>
            <para>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>,
            you have more reusable delegation sets. To get another group, submit another <code>ListReusableDelegationSets</code>
            request. </para><para>For the value of <code>marker</code>, specify the value of <code>NextMarker</code>
            from the previous response, which is the ID of the first reusable delegation set that
            Amazon Route 53 will return if you submit another request.</para><para>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>,
            there are no more reusable delegation sets to get.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ReusableDelegationSetListCmdlet.MaxItem">
            <summary>
            <para>
            <para>The number of reusable delegation sets that you want Amazon Route 53 to return in
            the response to this request. If you specify a value greater than 100, Route 53 returns
            only the first 100 reusable delegation sets.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ReusableDelegationSetListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DelegationSets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.ListReusableDelegationSetsResponse).
            Specifying the name of a property of type Amazon.Route53.Model.ListReusableDelegationSetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53ReusableDelegationSetListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53TagsForResourceCmdlet">
            <summary>
            Lists tags for one health check or hosted zone. 
            
             
            <para>
            For information about using tags for cost allocation, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
            Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TagsForResourceCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of the resource for which you want to retrieve tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TagsForResourceCmdlet.ResourceType">
            <summary>
            <para>
            <para>The type of the resource.</para><ul><li><para>The resource type for health checks is <code>healthcheck</code>.</para></li><li><para>The resource type for hosted zones is <code>hostedzone</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TagsForResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourceTagSet'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.Route53.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TagsForResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53TagsForResourceListCmdlet">
            <summary>
            Lists tags for up to 10 health checks or hosted zones.
            
             
            <para>
            For information about using tags for cost allocation, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
            Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TagsForResourceListCmdlet.ResourceId">
            <summary>
            <para>
            <para>A complex type that contains the ResourceId element for each resource for which you
            want to get a list of tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TagsForResourceListCmdlet.ResourceType">
            <summary>
            <para>
            <para>The type of the resources.</para><ul><li><para>The resource type for health checks is <code>healthcheck</code>.</para></li><li><para>The resource type for hosted zones is <code>hostedzone</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TagsForResourceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourceTagSets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.ListTagsForResourcesResponse).
            Specifying the name of a property of type Amazon.Route53.Model.ListTagsForResourcesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TagsForResourceListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyCmdlet">
            <summary>
            Gets information about a specific traffic policy version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the traffic policy that you want to get information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyCmdlet.Version">
            <summary>
            <para>
            <para>The version number of the traffic policy that you want to get information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficPolicy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.GetTrafficPolicyResponse).
            Specifying the name of a property of type Amazon.Route53.Model.GetTrafficPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstanceCmdlet">
            <summary>
            Gets information about a specified traffic policy instance.
            
             <note><para>
            After you submit a <code>CreateTrafficPolicyInstance</code> or an <code>UpdateTrafficPolicyInstance</code>
            request, there's a brief delay while Amazon Route 53 creates the resource record sets
            that are specified in the traffic policy definition. For more information, see the
            <code>State</code> response element.
            </para></note><note><para>
            In the Route 53 console, traffic policy instances are known as policy records.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstanceCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the traffic policy instance that you want to get information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficPolicyInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.GetTrafficPolicyInstanceResponse).
            Specifying the name of a property of type Amazon.Route53.Model.GetTrafficPolicyInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstanceCountCmdlet">
            <summary>
            Gets the number of traffic policy instances that are associated with the current AWS
            account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstanceCountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficPolicyInstanceCount'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.GetTrafficPolicyInstanceCountResponse).
            Specifying the name of a property of type Amazon.Route53.Model.GetTrafficPolicyInstanceCountResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstanceListCmdlet">
            <summary>
            Gets information about the traffic policy instances that you created by using the
            current AWS account.
            
             <note><para>
            After you submit an <code>UpdateTrafficPolicyInstance</code> request, there's a brief
            delay while Amazon Route 53 creates the resource record sets that are specified in
            the traffic policy definition. For more information, see the <code>State</code> response
            element.
            </para></note><para>
            Route 53 returns a maximum of 100 items in each response. If you have a lot of traffic
            policy instances, you can use the <code>MaxItems</code> parameter to list them in
            groups of up to 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstanceListCmdlet.HostedZoneIdMarker">
            <summary>
            <para>
            <para>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>,
            you have more traffic policy instances. To get more traffic policy instances, submit
            another <code>ListTrafficPolicyInstances</code> request. For the value of <code>HostedZoneId</code>,
            specify the value of <code>HostedZoneIdMarker</code> from the previous response, which
            is the hosted zone ID of the first traffic policy instance in the next group of traffic
            policy instances.</para><para>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>,
            there are no more traffic policy instances to get.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstanceListCmdlet.TrafficPolicyInstanceNameMarker">
            <summary>
            <para>
            <para>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>,
            you have more traffic policy instances. To get more traffic policy instances, submit
            another <code>ListTrafficPolicyInstances</code> request. For the value of <code>trafficpolicyinstancename</code>,
            specify the value of <code>TrafficPolicyInstanceNameMarker</code> from the previous
            response, which is the name of the first traffic policy instance in the next group
            of traffic policy instances.</para><para>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>,
            there are no more traffic policy instances to get.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstanceListCmdlet.TrafficPolicyInstanceTypeMarker">
            <summary>
            <para>
            <para>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>,
            you have more traffic policy instances. To get more traffic policy instances, submit
            another <code>ListTrafficPolicyInstances</code> request. For the value of <code>trafficpolicyinstancetype</code>,
            specify the value of <code>TrafficPolicyInstanceTypeMarker</code> from the previous
            response, which is the type of the first traffic policy instance in the next group
            of traffic policy instances.</para><para>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>,
            there are no more traffic policy instances to get.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstanceListCmdlet.MaxItem">
            <summary>
            <para>
            <para>The maximum number of traffic policy instances that you want Amazon Route 53 to return
            in response to a <code>ListTrafficPolicyInstances</code> request. If you have more
            than <code>MaxItems</code> traffic policy instances, the value of the <code>IsTruncated</code>
            element in the response is <code>true</code>, and the values of <code>HostedZoneIdMarker</code>,
            <code>TrafficPolicyInstanceNameMarker</code>, and <code>TrafficPolicyInstanceTypeMarker</code>
            represent the first traffic policy instance in the next group of <code>MaxItems</code>
            traffic policy instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstanceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.ListTrafficPolicyInstancesResponse).
            Specifying the name of a property of type Amazon.Route53.Model.ListTrafficPolicyInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstancesByHostedZoneCmdlet">
            <summary>
            Gets information about the traffic policy instances that you created in a specified
            hosted zone.
            
             <note><para>
            After you submit a <code>CreateTrafficPolicyInstance</code> or an <code>UpdateTrafficPolicyInstance</code>
            request, there's a brief delay while Amazon Route 53 creates the resource record sets
            that are specified in the traffic policy definition. For more information, see the
            <code>State</code> response element.
            </para></note><para>
            Route 53 returns a maximum of 100 items in each response. If you have a lot of traffic
            policy instances, you can use the <code>MaxItems</code> parameter to list them in
            groups of up to 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstancesByHostedZoneCmdlet.HostedZoneId">
            <summary>
            <para>
            <para>The ID of the hosted zone that you want to list traffic policy instances for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstancesByHostedZoneCmdlet.TrafficPolicyInstanceNameMarker">
            <summary>
            <para>
            <para>If the value of <code>IsTruncated</code> in the previous response is true, you have
            more traffic policy instances. To get more traffic policy instances, submit another
            <code>ListTrafficPolicyInstances</code> request. For the value of <code>trafficpolicyinstancename</code>,
            specify the value of <code>TrafficPolicyInstanceNameMarker</code> from the previous
            response, which is the name of the first traffic policy instance in the next group
            of traffic policy instances.</para><para>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>,
            there are no more traffic policy instances to get.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstancesByHostedZoneCmdlet.TrafficPolicyInstanceTypeMarker">
            <summary>
            <para>
            <para>If the value of <code>IsTruncated</code> in the previous response is true, you have
            more traffic policy instances. To get more traffic policy instances, submit another
            <code>ListTrafficPolicyInstances</code> request. For the value of <code>trafficpolicyinstancetype</code>,
            specify the value of <code>TrafficPolicyInstanceTypeMarker</code> from the previous
            response, which is the type of the first traffic policy instance in the next group
            of traffic policy instances.</para><para>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>,
            there are no more traffic policy instances to get.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstancesByHostedZoneCmdlet.MaxItem">
            <summary>
            <para>
            <para>The maximum number of traffic policy instances to be included in the response body
            for this request. If you have more than <code>MaxItems</code> traffic policy instances,
            the value of the <code>IsTruncated</code> element in the response is <code>true</code>,
            and the values of <code>HostedZoneIdMarker</code>, <code>TrafficPolicyInstanceNameMarker</code>,
            and <code>TrafficPolicyInstanceTypeMarker</code> represent the first traffic policy
            instance that Amazon Route 53 will return if you submit another request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstancesByHostedZoneCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.ListTrafficPolicyInstancesByHostedZoneResponse).
            Specifying the name of a property of type Amazon.Route53.Model.ListTrafficPolicyInstancesByHostedZoneResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstancesByHostedZoneCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HostedZoneId parameter.
            The -PassThru parameter is deprecated, use -Select '^HostedZoneId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstancesByPolicyCmdlet">
            <summary>
            Gets information about the traffic policy instances that you created by using a specify
            traffic policy version.
            
             <note><para>
            After you submit a <code>CreateTrafficPolicyInstance</code> or an <code>UpdateTrafficPolicyInstance</code>
            request, there's a brief delay while Amazon Route 53 creates the resource record sets
            that are specified in the traffic policy definition. For more information, see the
            <code>State</code> response element.
            </para></note><para>
            Route 53 returns a maximum of 100 items in each response. If you have a lot of traffic
            policy instances, you can use the <code>MaxItems</code> parameter to list them in
            groups of up to 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstancesByPolicyCmdlet.HostedZoneIdMarker">
            <summary>
            <para>
            <para>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>,
            you have more traffic policy instances. To get more traffic policy instances, submit
            another <code>ListTrafficPolicyInstancesByPolicy</code> request. </para><para>For the value of <code>hostedzoneid</code>, specify the value of <code>HostedZoneIdMarker</code>
            from the previous response, which is the hosted zone ID of the first traffic policy
            instance that Amazon Route 53 will return if you submit another request.</para><para>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>,
            there are no more traffic policy instances to get.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstancesByPolicyCmdlet.TrafficPolicyId">
            <summary>
            <para>
            <para>The ID of the traffic policy for which you want to list traffic policy instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstancesByPolicyCmdlet.TrafficPolicyInstanceNameMarker">
            <summary>
            <para>
            <para>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>,
            you have more traffic policy instances. To get more traffic policy instances, submit
            another <code>ListTrafficPolicyInstancesByPolicy</code> request.</para><para>For the value of <code>trafficpolicyinstancename</code>, specify the value of <code>TrafficPolicyInstanceNameMarker</code>
            from the previous response, which is the name of the first traffic policy instance
            that Amazon Route 53 will return if you submit another request.</para><para>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>,
            there are no more traffic policy instances to get.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstancesByPolicyCmdlet.TrafficPolicyInstanceTypeMarker">
            <summary>
            <para>
            <para>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>,
            you have more traffic policy instances. To get more traffic policy instances, submit
            another <code>ListTrafficPolicyInstancesByPolicy</code> request.</para><para>For the value of <code>trafficpolicyinstancetype</code>, specify the value of <code>TrafficPolicyInstanceTypeMarker</code>
            from the previous response, which is the name of the first traffic policy instance
            that Amazon Route 53 will return if you submit another request.</para><para>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>,
            there are no more traffic policy instances to get.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstancesByPolicyCmdlet.TrafficPolicyVersion">
            <summary>
            <para>
            <para>The version of the traffic policy for which you want to list traffic policy instances.
            The version must be associated with the traffic policy that is specified by <code>TrafficPolicyId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstancesByPolicyCmdlet.MaxItem">
            <summary>
            <para>
            <para>The maximum number of traffic policy instances to be included in the response body
            for this request. If you have more than <code>MaxItems</code> traffic policy instances,
            the value of the <code>IsTruncated</code> element in the response is <code>true</code>,
            and the values of <code>HostedZoneIdMarker</code>, <code>TrafficPolicyInstanceNameMarker</code>,
            and <code>TrafficPolicyInstanceTypeMarker</code> represent the first traffic policy
            instance that Amazon Route 53 will return if you submit another request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstancesByPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.ListTrafficPolicyInstancesByPolicyResponse).
            Specifying the name of a property of type Amazon.Route53.Model.ListTrafficPolicyInstancesByPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyInstancesByPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrafficPolicyId parameter.
            The -PassThru parameter is deprecated, use -Select '^TrafficPolicyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyListCmdlet">
            <summary>
            Gets information about the latest version for every traffic policy that is associated
            with the current AWS account. Policies are listed in the order that they were created
            in.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyListCmdlet.MaxItem">
            <summary>
            <para>
            <para>(Optional) The maximum number of traffic policies that you want Amazon Route 53 to
            return in response to this request. If you have more than <code>MaxItems</code> traffic
            policies, the value of <code>IsTruncated</code> in the response is <code>true</code>,
            and the value of <code>TrafficPolicyIdMarker</code> is the ID of the first traffic
            policy that Route 53 will return if you submit another request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyListCmdlet.TrafficPolicyIdMarker">
            <summary>
            <para>
            <para>(Conditional) For your first request to <code>ListTrafficPolicies</code>, don't include
            the <code>TrafficPolicyIdMarker</code> parameter.</para><para>If you have more traffic policies than the value of <code>MaxItems</code>, <code>ListTrafficPolicies</code>
            returns only the first <code>MaxItems</code> traffic policies. To get the next group
            of policies, submit another request to <code>ListTrafficPolicies</code>. For the value
            of <code>TrafficPolicyIdMarker</code>, specify the value of <code>TrafficPolicyIdMarker</code>
            that was returned in the previous response.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-TrafficPolicyIdMarker $null' for the first call and '-TrafficPolicyIdMarker $AWSHistory.LastServiceResponse.TrafficPolicyIdMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficPolicySummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.ListTrafficPoliciesResponse).
            Specifying the name of a property of type Amazon.Route53.Model.ListTrafficPoliciesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of TrafficPolicyIdMarker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyVersionListCmdlet">
            <summary>
            Gets information about all of the versions for a specified traffic policy.
            
             
            <para>
            Traffic policy versions are listed in numerical order by <code>VersionNumber</code>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyVersionListCmdlet.Id">
            <summary>
            <para>
            <para>Specify the value of <code>Id</code> of the traffic policy for which you want to list
            all versions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyVersionListCmdlet.MaxItem">
            <summary>
            <para>
            <para>The maximum number of traffic policy versions that you want Amazon Route 53 to include
            in the response body for this request. If the specified traffic policy has more than
            <code>MaxItems</code> versions, the value of <code>IsTruncated</code> in the response
            is <code>true</code>, and the value of the <code>TrafficPolicyVersionMarker</code>
            element is the ID of the first version that Route 53 will return if you submit another
            request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyVersionListCmdlet.TrafficPolicyVersionMarker">
            <summary>
            <para>
            <para>For your first request to <code>ListTrafficPolicyVersions</code>, don't include the
            <code>TrafficPolicyVersionMarker</code> parameter.</para><para>If you have more traffic policy versions than the value of <code>MaxItems</code>,
            <code>ListTrafficPolicyVersions</code> returns only the first group of <code>MaxItems</code>
            versions. To get more traffic policy versions, submit another <code>ListTrafficPolicyVersions</code>
            request. For the value of <code>TrafficPolicyVersionMarker</code>, specify the value
            of <code>TrafficPolicyVersionMarker</code> in the previous response.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-TrafficPolicyVersionMarker $null' for the first call and '-TrafficPolicyVersionMarker $AWSHistory.LastServiceResponse.TrafficPolicyVersionMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficPolicies'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.ListTrafficPolicyVersionsResponse).
            Specifying the name of a property of type Amazon.Route53.Model.ListTrafficPolicyVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53TrafficPolicyVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of TrafficPolicyVersionMarker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.GetR53VPCAssociationAuthorizationListCmdlet">
            <summary>
            Gets a list of the VPCs that were created by other accounts and that can be associated
            with a specified hosted zone because you've submitted one or more <code>CreateVPCAssociationAuthorization</code>
            requests. 
            
             
            <para>
            The response includes a <code>VPCs</code> element with a <code>VPC</code> child element
            for each VPC that can be associated with the hosted zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53VPCAssociationAuthorizationListCmdlet.HostedZoneId">
            <summary>
            <para>
            <para>The ID of the hosted zone for which you want a list of VPCs that can be associated
            with the hosted zone.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53VPCAssociationAuthorizationListCmdlet.MaxResult">
            <summary>
            <para>
            <para><i>Optional</i>: An integer that specifies the maximum number of VPCs that you want
            Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>,
            Route 53 returns up to 50 VPCs per page.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53VPCAssociationAuthorizationListCmdlet.NextToken">
            <summary>
            <para>
            <para><i>Optional</i>: If a response includes a <code>NextToken</code> element, there are
            more VPCs that can be associated with the specified hosted zone. To get the next page
            of results, submit another request, and include the value of <code>NextToken</code>
            from the response in the <code>nexttoken</code> parameter in another <code>ListVPCAssociationAuthorizations</code>
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53VPCAssociationAuthorizationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.ListVPCAssociationAuthorizationsResponse).
            Specifying the name of a property of type Amazon.Route53.Model.ListVPCAssociationAuthorizationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.GetR53VPCAssociationAuthorizationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HostedZoneId parameter.
            The -PassThru parameter is deprecated, use -Select '^HostedZoneId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet">
            <summary>
            Creates a new health check.
            
             
            <para>
            For information about adding health checks to resource record sets, see <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResourceRecordSet.html#Route53-Type-ResourceRecordSet-HealthCheckId">HealthCheckId</a>
            in <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_ChangeResourceRecordSets.html">ChangeResourceRecordSets</a>.
            
            </para><para><b>ELB Load Balancers</b></para><para>
            If you're registering EC2 instances with an Elastic Load Balancing (ELB) load balancer,
            do not create Amazon Route 53 health checks for the EC2 instances. When you register
            an EC2 instance with a load balancer, you configure settings for an ELB health check,
            which performs a similar function to a Route 53 health check.
            </para><para><b>Private Hosted Zones</b></para><para>
            You can associate health checks with failover resource record sets in a private hosted
            zone. Note the following:
            </para><ul><li><para>
            Route 53 health checkers are outside the VPC. To check the health of an endpoint within
            a VPC by IP address, you must assign a public IP address to the instance in the VPC.
            </para></li><li><para>
            You can configure a health checker to check the health of an external resource that
            the instance relies on, such as a database server.
            </para></li><li><para>
            You can create a CloudWatch metric, associate an alarm with the metric, and then create
            a health check that is based on the state of the alarm. For example, you might create
            a CloudWatch metric that checks the status of the Amazon EC2 <code>StatusCheckFailed</code>
            metric, add an alarm to the metric, and then create a health check that is based on
            the state of the alarm. For information about creating CloudWatch metrics and alarms
            by using the CloudWatch console, see the <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/WhatIsCloudWatch.html">Amazon
            CloudWatch User Guide</a>.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.CallerReference">
            <summary>
            <para>
            <para>A unique string that identifies the request and that allows you to retry a failed
            <code>CreateHealthCheck</code> request without the risk of creating two identical
            health checks:</para><ul><li><para>If you send a <code>CreateHealthCheck</code> request with the same <code>CallerReference</code>
            and settings as a previous request, and if the health check doesn't exist, Amazon
            Route 53 creates the health check. If the health check does exist, Route 53 returns
            the settings for the existing health check.</para></li><li><para>If you send a <code>CreateHealthCheck</code> request with the same <code>CallerReference</code>
            as a deleted health check, regardless of the settings, Route 53 returns a <code>HealthCheckAlreadyExists</code>
            error.</para></li><li><para>If you send a <code>CreateHealthCheck</code> request with the same <code>CallerReference</code>
            as an existing health check but with different settings, Route 53 returns a <code>HealthCheckAlreadyExists</code>
            error.</para></li><li><para>If you send a <code>CreateHealthCheck</code> request with a unique <code>CallerReference</code>
            but settings identical to an existing health check, Route 53 creates the health check.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.HealthCheckConfig_ChildHealthCheck">
            <summary>
            <para>
            <para>(CALCULATED Health Checks Only) A complex type that contains one <code>ChildHealthCheck</code>
            element for each health check that you want to associate with a <code>CALCULATED</code>
            health check.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.HealthCheckConfig_Disabled">
            <summary>
            <para>
            <para>Stops Route 53 from performing health checks. When you disable a health check, here's
            what happens:</para><ul><li><para><b>Health checks that check the health of endpoints:</b> Route 53 stops submitting
            requests to your application, server, or other resource.</para></li><li><para><b>Calculated health checks:</b> Route 53 stops aggregating the status of the referenced
            health checks.</para></li><li><para><b>Health checks that monitor CloudWatch alarms:</b> Route 53 stops monitoring the
            corresponding CloudWatch metrics.</para></li></ul><para>After you disable a health check, Route 53 considers the status of the health check
            to always be healthy. If you configured DNS failover, Route 53 continues to route
            traffic to the corresponding resources. If you want to stop routing traffic to a resource,
            change the value of <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_UpdateHealthCheck.html#Route53-UpdateHealthCheck-request-Inverted">Inverted</a>.
            </para><para>Charges for a health check still apply when the health check is disabled. For more
            information, see <a href="http://aws.amazon.com/route53/pricing/">Amazon Route 53
            Pricing</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.HealthCheckConfig_EnableSNI">
            <summary>
            <para>
            <para>Specify whether you want Amazon Route 53 to send the value of <code>FullyQualifiedDomainName</code>
            to the endpoint in the <code>client_hello</code> message during TLS negotiation. This
            allows the endpoint to respond to <code>HTTPS</code> health check requests with the
            applicable SSL/TLS certificate.</para><para>Some endpoints require that <code>HTTPS</code> requests include the host name in the
            <code>client_hello</code> message. If you don't enable SNI, the status of the health
            check will be <code>SSL alert handshake_failure</code>. A health check can also have
            that status for other reasons. If SNI is enabled and you're still getting the error,
            check the SSL/TLS configuration on your endpoint and confirm that your certificate
            is valid.</para><para>The SSL/TLS certificate on your endpoint includes a domain name in the <code>Common
            Name</code> field and possibly several more in the <code>Subject Alternative Names</code>
            field. One of the domain names in the certificate should match the value that you
            specify for <code>FullyQualifiedDomainName</code>. If the endpoint responds to the
            <code>client_hello</code> message with a certificate that does not include the domain
            name that you specified in <code>FullyQualifiedDomainName</code>, a health checker
            will retry the handshake. In the second attempt, the health checker will omit <code>FullyQualifiedDomainName</code>
            from the <code>client_hello</code> message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.HealthCheckConfig_FailureThreshold">
            <summary>
            <para>
            <para>The number of consecutive health checks that an endpoint must pass or fail for Amazon
            Route 53 to change the current status of the endpoint from unhealthy to healthy or
            vice versa. For more information, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html">How
            Amazon Route 53 Determines Whether an Endpoint Is Healthy</a> in the <i>Amazon Route
            53 Developer Guide</i>.</para><para>If you don't specify a value for <code>FailureThreshold</code>, the default value
            is three health checks.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.HealthCheckConfig_FullyQualifiedDomainName">
            <summary>
            <para>
            <para>Amazon Route 53 behavior depends on whether you specify a value for <code>IPAddress</code>.</para><para><b>If you specify a value for</b><code>IPAddress</code>:</para><para>Amazon Route 53 sends health check requests to the specified IPv4 or IPv6 address
            and passes the value of <code>FullyQualifiedDomainName</code> in the <code>Host</code>
            header for all health checks except TCP health checks. This is typically the fully
            qualified DNS name of the endpoint on which you want Route 53 to perform health checks.</para><para>When Route 53 checks the health of an endpoint, here is how it constructs the <code>Host</code>
            header:</para><ul><li><para>If you specify a value of <code>80</code> for <code>Port</code> and <code>HTTP</code>
            or <code>HTTP_STR_MATCH</code> for <code>Type</code>, Route 53 passes the value of
            <code>FullyQualifiedDomainName</code> to the endpoint in the Host header. </para></li><li><para>If you specify a value of <code>443</code> for <code>Port</code> and <code>HTTPS</code>
            or <code>HTTPS_STR_MATCH</code> for <code>Type</code>, Route 53 passes the value of
            <code>FullyQualifiedDomainName</code> to the endpoint in the <code>Host</code> header.</para></li><li><para>If you specify another value for <code>Port</code> and any value except <code>TCP</code>
            for <code>Type</code>, Route 53 passes <code>FullyQualifiedDomainName:Port</code>
            to the endpoint in the <code>Host</code> header.</para></li></ul><para>If you don't specify a value for <code>FullyQualifiedDomainName</code>, Route 53 substitutes
            the value of <code>IPAddress</code> in the <code>Host</code> header in each of the
            preceding cases.</para><para><b>If you don't specify a value for <code>IPAddress</code></b>:</para><para>Route 53 sends a DNS request to the domain that you specify for <code>FullyQualifiedDomainName</code>
            at the interval that you specify for <code>RequestInterval</code>. Using an IPv4 address
            that DNS returns, Route 53 then checks the health of the endpoint.</para><note><para>If you don't specify a value for <code>IPAddress</code>, Route 53 uses only IPv4 to
            send health checks to the endpoint. If there's no resource record set with a type
            of A for the name that you specify for <code>FullyQualifiedDomainName</code>, the
            health check fails with a "DNS resolution failed" error.</para></note><para>If you want to check the health of weighted, latency, or failover resource record
            sets and you choose to specify the endpoint only by <code>FullyQualifiedDomainName</code>,
            we recommend that you create a separate health check for each endpoint. For example,
            create a health check for each HTTP server that is serving content for www.example.com.
            For the value of <code>FullyQualifiedDomainName</code>, specify the domain name of
            the server (such as us-east-2-www.example.com), not the name of the resource record
            sets (www.example.com).</para><important><para>In this configuration, if you create a health check for which the value of <code>FullyQualifiedDomainName</code>
            matches the name of the resource record sets and you then associate the health check
            with those resource record sets, health check results will be unpredictable.</para></important><para>In addition, if the value that you specify for <code>Type</code> is <code>HTTP</code>,
            <code>HTTPS</code>, <code>HTTP_STR_MATCH</code>, or <code>HTTPS_STR_MATCH</code>,
            Route 53 passes the value of <code>FullyQualifiedDomainName</code> in the <code>Host</code>
            header, as it does when you specify a value for <code>IPAddress</code>. If the value
            of <code>Type</code> is <code>TCP</code>, Route 53 doesn't pass a <code>Host</code>
            header.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.HealthCheckConfig_HealthThreshold">
            <summary>
            <para>
            <para>The number of child health checks that are associated with a <code>CALCULATED</code>
            health check that Amazon Route 53 must consider healthy for the <code>CALCULATED</code>
            health check to be considered healthy. To specify the child health checks that you
            want to associate with a <code>CALCULATED</code> health check, use the <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_UpdateHealthCheck.html#Route53-UpdateHealthCheck-request-ChildHealthChecks">ChildHealthChecks</a>
            element.</para><para>Note the following:</para><ul><li><para>If you specify a number greater than the number of child health checks, Route 53 always
            considers this health check to be unhealthy.</para></li><li><para>If you specify <code>0</code>, Route 53 always considers this health check to be healthy.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.HealthCheckConfig_InsufficientDataHealthStatus">
            <summary>
            <para>
            <para>When CloudWatch has insufficient data about the metric to determine the alarm state,
            the status that you want Amazon Route 53 to assign to the health check:</para><ul><li><para><code>Healthy</code>: Route 53 considers the health check to be healthy.</para></li><li><para><code>Unhealthy</code>: Route 53 considers the health check to be unhealthy.</para></li><li><para><code>LastKnownStatus</code>: Route 53 uses the status of the health check from the
            last time that CloudWatch had sufficient data to determine the alarm state. For new
            health checks that have no last known status, the default status for the health check
            is healthy.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.HealthCheckConfig_Inverted">
            <summary>
            <para>
            <para>Specify whether you want Amazon Route 53 to invert the status of a health check, for
            example, to consider a health check unhealthy when it otherwise would be considered
            healthy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.HealthCheckConfig_IPAddress">
            <summary>
            <para>
            <para>The IPv4 or IPv6 IP address of the endpoint that you want Amazon Route 53 to perform
            health checks on. If you don't specify a value for <code>IPAddress</code>, Route 53
            sends a DNS request to resolve the domain name that you specify in <code>FullyQualifiedDomainName</code>
            at the interval that you specify in <code>RequestInterval</code>. Using an IP address
            returned by DNS, Route 53 then checks the health of the endpoint.</para><para>Use one of the following formats for the value of <code>IPAddress</code>: </para><ul><li><para><b>IPv4 address</b>: four values between 0 and 255, separated by periods (.), for
            example, <code>192.0.2.44</code>.</para></li><li><para><b>IPv6 address</b>: eight groups of four hexadecimal values, separated by colons
            (:), for example, <code>2001:0db8:85a3:0000:0000:abcd:0001:2345</code>. You can also
            shorten IPv6 addresses as described in RFC 5952, for example, <code>2001:db8:85a3::abcd:1:2345</code>.</para></li></ul><para>If the endpoint is an EC2 instance, we recommend that you create an Elastic IP address,
            associate it with your EC2 instance, and specify the Elastic IP address for <code>IPAddress</code>.
            This ensures that the IP address of your instance will never change.</para><para>For more information, see <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_UpdateHealthCheck.html#Route53-UpdateHealthCheck-request-FullyQualifiedDomainName">FullyQualifiedDomainName</a>.
            </para><para>Constraints: Route 53 can't check the health of endpoints for which the IP address
            is in local, private, non-routable, or multicast ranges. For more information about
            IP addresses for which you can't create health checks, see the following documents:</para><ul><li><para><a href="https://tools.ietf.org/html/rfc5735">RFC 5735, Special Use IPv4 Addresses</a></para></li><li><para><a href="https://tools.ietf.org/html/rfc6598">RFC 6598, IANA-Reserved IPv4 Prefix
            for Shared Address Space</a></para></li><li><para><a href="https://tools.ietf.org/html/rfc5156">RFC 5156, Special-Use IPv6 Addresses</a></para></li></ul><para>When the value of <code>Type</code> is <code>CALCULATED</code> or <code>CLOUDWATCH_METRIC</code>,
            omit <code>IPAddress</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.HealthCheckConfig_MeasureLatency">
            <summary>
            <para>
            <para>Specify whether you want Amazon Route 53 to measure the latency between health checkers
            in multiple AWS regions and your endpoint, and to display CloudWatch latency graphs
            on the <b>Health Checks</b> page in the Route 53 console.</para><important><para>You can't change the value of <code>MeasureLatency</code> after you create a health
            check.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.AlarmIdentifier_Name">
            <summary>
            <para>
            <para>The name of the CloudWatch alarm that you want Amazon Route 53 health checkers to
            use to determine whether this health check is healthy.</para><note><para>Route 53 supports CloudWatch alarms with the following features:</para><ul><li><para>Standard-resolution metrics. High-resolution metrics aren't supported. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/publishingMetrics.html#high-resolution-metrics">High-Resolution
            Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</para></li><li><para>Statistics: Average, Minimum, Maximum, Sum, and SampleCount. Extended statistics aren't
            supported.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.HealthCheckConfig_Port">
            <summary>
            <para>
            <para>The port on the endpoint that you want Amazon Route 53 to perform health checks on.</para><note><para>Don't specify a value for <code>Port</code> when you specify a value for <code>Type</code>
            of <code>CLOUDWATCH_METRIC</code> or <code>CALCULATED</code>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.AlarmIdentifier_Region">
            <summary>
            <para>
            <para>For the CloudWatch alarm that you want Route 53 health checkers to use to determine
            whether this health check is healthy, the region that the alarm was created in.</para><para>For the current list of CloudWatch regions, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#cw_region">Amazon
            CloudWatch</a> in the <i>AWS Service Endpoints</i> chapter of the <i>Amazon Web Services
            General Reference</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.HealthCheckConfig_Region">
            <summary>
            <para>
            <para>A complex type that contains one <code>Region</code> element for each region from
            which you want Amazon Route 53 health checkers to check the specified endpoint.</para><para>If you don't specify any regions, Route 53 health checkers automatically performs
            checks from all of the regions that are listed under <b>Valid Values</b>.</para><para>If you update a health check to remove a region that has been performing health checks,
            Route 53 will briefly continue to perform checks from that region to ensure that some
            health checkers are always checking the endpoint (for example, if you replace three
            regions with four different regions). </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.HealthCheckConfig_RequestInterval">
            <summary>
            <para>
            <para>The number of seconds between the time that Amazon Route 53 gets a response from your
            endpoint and the time that it sends the next health check request. Each Route 53 health
            checker makes requests at this interval.</para><important><para>You can't change the value of <code>RequestInterval</code> after you create a health
            check.</para></important><para>If you don't specify a value for <code>RequestInterval</code>, the default value is
            <code>30</code> seconds.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.HealthCheckConfig_ResourcePath">
            <summary>
            <para>
            <para>The path, if any, that you want Amazon Route 53 to request when performing health
            checks. The path can be any value for which your endpoint will return an HTTP status
            code of 2xx or 3xx when the endpoint is healthy, for example, the file /docs/route53-health-check.html.
            You can also include query string parameters, for example, <code>/welcome.html?language=jp&amp;login=y</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.HealthCheckConfig_SearchString">
            <summary>
            <para>
            <para>If the value of Type is <code>HTTP_STR_MATCH</code> or <code>HTTPS_STR_MATCH</code>,
            the string that you want Amazon Route 53 to search for in the response body from the
            specified resource. If the string appears in the response body, Route 53 considers
            the resource healthy.</para><para>Route 53 considers case when searching for <code>SearchString</code> in the response
            body. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.HealthCheckConfig_Type">
            <summary>
            <para>
            <para>The type of health check that you want to create, which indicates how Amazon Route
            53 determines whether an endpoint is healthy.</para><important><para>You can't change the value of <code>Type</code> after you create a health check.</para></important><para>You can create the following types of health checks:</para><ul><li><para><b>HTTP</b>: Route 53 tries to establish a TCP connection. If successful, Route 53
            submits an HTTP request and waits for an HTTP status code of 200 or greater and less
            than 400.</para></li><li><para><b>HTTPS</b>: Route 53 tries to establish a TCP connection. If successful, Route
            53 submits an HTTPS request and waits for an HTTP status code of 200 or greater and
            less than 400.</para><important><para>If you specify <code>HTTPS</code> for the value of <code>Type</code>, the endpoint
            must support TLS v1.0 or later.</para></important></li><li><para><b>HTTP_STR_MATCH</b>: Route 53 tries to establish a TCP connection. If successful,
            Route 53 submits an HTTP request and searches the first 5,120 bytes of the response
            body for the string that you specify in <code>SearchString</code>.</para></li><li><para><b>HTTPS_STR_MATCH</b>: Route 53 tries to establish a TCP connection. If successful,
            Route 53 submits an <code>HTTPS</code> request and searches the first 5,120 bytes
            of the response body for the string that you specify in <code>SearchString</code>.</para></li><li><para><b>TCP</b>: Route 53 tries to establish a TCP connection.</para></li><li><para><b>CLOUDWATCH_METRIC</b>: The health check is associated with a CloudWatch alarm.
            If the state of the alarm is <code>OK</code>, the health check is considered healthy.
            If the state is <code>ALARM</code>, the health check is considered unhealthy. If CloudWatch
            doesn't have sufficient data to determine whether the state is <code>OK</code> or
            <code>ALARM</code>, the health check status depends on the setting for <code>InsufficientDataHealthStatus</code>:
            <code>Healthy</code>, <code>Unhealthy</code>, or <code>LastKnownStatus</code>. </para></li><li><para><b>CALCULATED</b>: For health checks that monitor the status of other health checks,
            Route 53 adds up the number of health checks that Route 53 health checkers consider
            to be healthy and compares that number with the value of <code>HealthThreshold</code>.
            </para></li></ul><para>For more information, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html">How
            Route 53 Determines Whether an Endpoint Is Healthy</a> in the <i>Amazon Route 53 Developer
            Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.CreateHealthCheckResponse).
            Specifying the name of a property of type Amazon.Route53.Model.CreateHealthCheckResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HealthCheckCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CallerReference parameter.
            The -PassThru parameter is deprecated, use -Select '^CallerReference' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.NewR53HostedZoneCmdlet">
            <summary>
            Creates a new public or private hosted zone. You create records in a public hosted
            zone to define how you want to route traffic on the internet for a domain, such as
            example.com, and its subdomains (apex.example.com, acme.example.com). You create records
            in a private hosted zone to define how you want to route traffic for a domain and
            its subdomains within one or more Amazon Virtual Private Clouds (Amazon VPCs). 
            
             <important><para>
            You can't convert a public hosted zone to a private hosted zone or vice versa. Instead,
            you must create a new hosted zone with the same name and create new resource record
            sets.
            </para></important><para>
            For more information about charges for hosted zones, see <a href="http://aws.amazon.com/route53/pricing/">Amazon
            Route 53 Pricing</a>.
            </para><para>
            Note the following:
            </para><ul><li><para>
            You can't create a hosted zone for a top-level domain (TLD) such as .com.
            </para></li><li><para>
            For public hosted zones, Route 53 automatically creates a default SOA record and four
            NS records for the zone. For more information about SOA and NS records, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/SOA-NSrecords.html">NS
            and SOA Records that Route 53 Creates for a Hosted Zone</a> in the <i>Amazon Route
            53 Developer Guide</i>.
            </para><para>
            If you want to use the same name servers for multiple public hosted zones, you can
            optionally associate a reusable delegation set with the hosted zone. See the <code>DelegationSetId</code>
            element.
            </para></li><li><para>
            If your domain is registered with a registrar other than Route 53, you must update
            the name servers with your registrar to make Route 53 the DNS service for the domain.
            For more information, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/MigratingDNS.html">Migrating
            DNS Service for an Existing Domain to Amazon Route 53</a> in the <i>Amazon Route 53
            Developer Guide</i>. 
            </para></li></ul><para>
            When you submit a <code>CreateHostedZone</code> request, the initial status of the
            hosted zone is <code>PENDING</code>. For public hosted zones, this means that the
            NS and SOA records are not yet available on all Route 53 DNS servers. When the NS
            and SOA records are available, the status of the zone changes to <code>INSYNC</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HostedZoneCmdlet.CallerReference">
            <summary>
            <para>
            <para>A unique string that identifies the request and that allows failed <code>CreateHostedZone</code>
            requests to be retried without the risk of executing the operation twice. You must
            use a unique <code>CallerReference</code> string every time you submit a <code>CreateHostedZone</code>
            request. <code>CallerReference</code> can be any unique string, for example, a date/time
            stamp.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HostedZoneCmdlet.HostedZoneConfig_Comment">
            <summary>
            <para>
            <para>Any comments that you want to include about the hosted zone.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HostedZoneCmdlet.DelegationSetId">
            <summary>
            <para>
            <para>If you want to associate a reusable delegation set with this hosted zone, the ID that
            Amazon Route 53 assigned to the reusable delegation set when you created it. For more
            information about reusable delegation sets, see <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_CreateReusableDelegationSet.html">CreateReusableDelegationSet</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HostedZoneCmdlet.Name">
            <summary>
            <para>
            <para>The name of the domain. Specify a fully qualified domain name, for example, <i>www.example.com</i>.
            The trailing dot is optional; Amazon Route 53 assumes that the domain name is fully
            qualified. This means that Route 53 treats <i>www.example.com</i> (without a trailing
            dot) and <i>www.example.com.</i> (with a trailing dot) as identical.</para><para>If you're creating a public hosted zone, this is the name you have registered with
            your DNS registrar. If your domain name is registered with a registrar other than
            Route 53, change the name servers for your domain to the set of <code>NameServers</code>
            that <code>CreateHostedZone</code> returns in <code>DelegationSet</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HostedZoneCmdlet.HostedZoneConfig_PrivateZone">
            <summary>
            <para>
            <para>A value that indicates whether this is a private hosted zone.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HostedZoneCmdlet.VPC_VPCId">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HostedZoneCmdlet.VPC_VPCRegion">
            <summary>
            <para>
            <para>(Private hosted zones only) The region that an Amazon VPC was created in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HostedZoneCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.CreateHostedZoneResponse).
            Specifying the name of a property of type Amazon.Route53.Model.CreateHostedZoneResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HostedZoneCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53HostedZoneCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.NewR53QueryLoggingConfigCmdlet">
            <summary>
            Creates a configuration for DNS query logging. After you create a query logging configuration,
            Amazon Route 53 begins to publish log data to an Amazon CloudWatch Logs log group.
            
             
            <para>
            DNS query logs contain information about the queries that Route 53 receives for a
            specified public hosted zone, such as the following:
            </para><ul><li><para>
            Route 53 edge location that responded to the DNS query
            </para></li><li><para>
            Domain or subdomain that was requested
            </para></li><li><para>
            DNS record type, such as A or AAAA
            </para></li><li><para>
            DNS response code, such as <code>NoError</code> or <code>ServFail</code></para></li></ul><dl><dt>Log Group and Resource Policy</dt><dd><para>
            Before you create a query logging configuration, perform the following operations.
            </para><note><para>
            If you create a query logging configuration using the Route 53 console, Route 53 performs
            these operations automatically.
            </para></note><ol><li><para>
            Create a CloudWatch Logs log group, and make note of the ARN, which you specify when
            you create a query logging configuration. Note the following:
            </para><ul><li><para>
            You must create the log group in the us-east-1 region.
            </para></li><li><para>
            You must use the same AWS account to create the log group and the hosted zone that
            you want to configure query logging for.
            </para></li><li><para>
            When you create log groups for query logging, we recommend that you use a consistent
            prefix, for example:
            </para><para><code>/aws/route53/<i>hosted zone name</i></code></para><para>
            In the next step, you'll create a resource policy, which controls access to one or
            more log groups and the associated AWS resources, such as Route 53 hosted zones. There's
            a limit on the number of resource policies that you can create, so we recommend that
            you use a consistent prefix so you can use the same resource policy for all the log
            groups that you create for query logging.
            </para></li></ul></li><li><para>
            Create a CloudWatch Logs resource policy, and give it the permissions that Route 53
            needs to create log streams and to send query logs to log streams. For the value of
            <code>Resource</code>, specify the ARN for the log group that you created in the previous
            step. To use the same resource policy for all the CloudWatch Logs log groups that
            you created for query logging configurations, replace the hosted zone name with <code>*</code>,
            for example:
            </para><para><code>arn:aws:logs:us-east-1:123412341234:log-group:/aws/route53/*</code></para><note><para>
            You can't use the CloudWatch console to create or edit a resource policy. You must
            use the CloudWatch API, one of the AWS SDKs, or the AWS CLI.
            </para></note></li></ol></dd><dt>Log Streams and Edge Locations</dt><dd><para>
            When Route 53 finishes creating the configuration for DNS query logging, it does the
            following:
            </para><ul><li><para>
            Creates a log stream for an edge location the first time that the edge location responds
            to DNS queries for the specified hosted zone. That log stream is used to log all queries
            that Route 53 responds to for that edge location.
            </para></li><li><para>
            Begins to send query logs to the applicable log stream.
            </para></li></ul><para>
            The name of each log stream is in the following format:
            </para><para><code><i>hosted zone ID</i>/<i>edge location code</i></code></para><para>
            The edge location code is a three-letter code and an arbitrarily assigned number,
            for example, DFW3. The three-letter code typically corresponds with the International
            Air Transport Association airport code for an airport near the edge location. (These
            abbreviations might change in the future.) For a list of edge locations, see "The
            Route 53 Global Network" on the <a href="http://aws.amazon.com/route53/details/">Route
            53 Product Details</a> page.
            </para></dd><dt>Queries That Are Logged</dt><dd><para>
            Query logs contain only the queries that DNS resolvers forward to Route 53. If a DNS
            resolver has already cached the response to a query (such as the IP address for a
            load balancer for example.com), the resolver will continue to return the cached response.
            It doesn't forward another query to Route 53 until the TTL for the corresponding resource
            record set expires. Depending on how many DNS queries are submitted for a resource
            record set, and depending on the TTL for that resource record set, query logs might
            contain information about only one query out of every several thousand queries that
            are submitted to DNS. For more information about how DNS works, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-dns-service.html">Routing
            Internet Traffic to Your Website or Web Application</a> in the <i>Amazon Route 53
            Developer Guide</i>.
            </para></dd><dt>Log File Format</dt><dd><para>
            For a list of the values in each query log and the format of each value, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/query-logs.html">Logging
            DNS Queries</a> in the <i>Amazon Route 53 Developer Guide</i>.
            </para></dd><dt>Pricing</dt><dd><para>
            For information about charges for query logs, see <a href="http://aws.amazon.com/cloudwatch/pricing/">Amazon
            CloudWatch Pricing</a>.
            </para></dd><dt>How to Stop Logging</dt><dd><para>
            If you want Route 53 to stop sending query logs to CloudWatch Logs, delete the query
            logging configuration. For more information, see <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_DeleteQueryLoggingConfig.html">DeleteQueryLoggingConfig</a>.
            </para></dd></dl>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53QueryLoggingConfigCmdlet.CloudWatchLogsLogGroupArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the log group that you want to Amazon Route 53
            to send query logs to. This is the format of the ARN:</para><para>arn:aws:logs:<i>region</i>:<i>account-id</i>:log-group:<i>log_group_name</i></para><para>To get the ARN for a log group, you can use the CloudWatch console, the <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeLogGroups.html">DescribeLogGroups</a>
            API action, the <a href="https://docs.aws.amazon.com/cli/latest/reference/logs/describe-log-groups.html">describe-log-groups</a>
            command, or the applicable command in one of the AWS SDKs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53QueryLoggingConfigCmdlet.HostedZoneId">
            <summary>
            <para>
            <para>The ID of the hosted zone that you want to log queries for. You can log queries only
            for public hosted zones.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53QueryLoggingConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.CreateQueryLoggingConfigResponse).
            Specifying the name of a property of type Amazon.Route53.Model.CreateQueryLoggingConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53QueryLoggingConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HostedZoneId parameter.
            The -PassThru parameter is deprecated, use -Select '^HostedZoneId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53QueryLoggingConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.NewR53ReusableDelegationSetCmdlet">
            <summary>
            Creates a delegation set (a group of four name servers) that can be reused by multiple
            hosted zones that were created by the same AWS account. 
            
             
            <para>
            You can also create a reusable delegation set that uses the four name servers that
            are associated with an existing hosted zone. Specify the hosted zone ID in the <code>CreateReusableDelegationSet</code>
            request.
            </para><note><para>
            You can't associate a reusable delegation set with a private hosted zone.
            </para></note><para>
            For information about using a reusable delegation set to configure white label name
            servers, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/white-label-name-servers.html">Configuring
            White Label Name Servers</a>.
            </para><para>
            The process for migrating existing hosted zones to use a reusable delegation set is
            comparable to the process for configuring white label name servers. You need to perform
            the following steps:
            </para><ol><li><para>
            Create a reusable delegation set.
            </para></li><li><para>
            Recreate hosted zones, and reduce the TTL to 60 seconds or less.
            </para></li><li><para>
            Recreate resource record sets in the new hosted zones.
            </para></li><li><para>
            Change the registrar's name servers to use the name servers for the new hosted zones.
            </para></li><li><para>
            Monitor traffic for the website or application.
            </para></li><li><para>
            Change TTLs back to their original values.
            </para></li></ol><para>
            If you want to migrate existing hosted zones to use a reusable delegation set, the
            existing hosted zones can't use any of the name servers that are assigned to the reusable
            delegation set. If one or more hosted zones do use one or more name servers that are
            assigned to the reusable delegation set, you can do one of the following:
            </para><ul><li><para>
            For small numbers of hosted zones‚Äîup to a few hundred‚Äîit's relatively easy to create
            reusable delegation sets until you get one that has four name servers that don't overlap
            with any of the name servers in your hosted zones.
            </para></li><li><para>
            For larger numbers of hosted zones, the easiest solution is to use more than one reusable
            delegation set.
            </para></li><li><para>
            For larger numbers of hosted zones, you can also migrate hosted zones that have overlapping
            name servers to hosted zones that don't have overlapping name servers, then migrate
            the hosted zones again to use the reusable delegation set.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53ReusableDelegationSetCmdlet.CallerReference">
            <summary>
            <para>
            <para>A unique string that identifies the request, and that allows you to retry failed <code>CreateReusableDelegationSet</code>
            requests without the risk of executing the operation twice. You must use a unique
            <code>CallerReference</code> string every time you submit a <code>CreateReusableDelegationSet</code>
            request. <code>CallerReference</code> can be any unique string, for example a date/time
            stamp.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53ReusableDelegationSetCmdlet.HostedZoneId">
            <summary>
            <para>
            <para>If you want to mark the delegation set for an existing hosted zone as reusable, the
            ID for that hosted zone.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53ReusableDelegationSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.CreateReusableDelegationSetResponse).
            Specifying the name of a property of type Amazon.Route53.Model.CreateReusableDelegationSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53ReusableDelegationSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HostedZoneId parameter.
            The -PassThru parameter is deprecated, use -Select '^HostedZoneId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53ReusableDelegationSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyCmdlet">
            <summary>
            Creates a traffic policy, which you use to create multiple DNS resource record sets
            for one domain name (such as example.com) or one subdomain name (such as www.example.com).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyCmdlet.Comment">
            <summary>
            <para>
            <para>(Optional) Any comments that you want to include about the traffic policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyCmdlet.Document">
            <summary>
            <para>
            <para>The definition of this traffic policy in JSON format. For more information, see <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/api-policies-traffic-policy-document-format.html">Traffic
            Policy Document Format</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyCmdlet.Name">
            <summary>
            <para>
            <para>The name of the traffic policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.CreateTrafficPolicyResponse).
            Specifying the name of a property of type Amazon.Route53.Model.CreateTrafficPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyInstanceCmdlet">
            <summary>
            Creates resource record sets in a specified hosted zone based on the settings in a
            specified traffic policy version. In addition, <code>CreateTrafficPolicyInstance</code>
            associates the resource record sets with a specified domain name (such as example.com)
            or subdomain name (such as www.example.com). Amazon Route 53 responds to DNS queries
            for the domain or subdomain name by using the resource record sets that <code>CreateTrafficPolicyInstance</code>
            created.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyInstanceCmdlet.HostedZoneId">
            <summary>
            <para>
            <para>The ID of the hosted zone that you want Amazon Route 53 to create resource record
            sets in by using the configuration in a traffic policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyInstanceCmdlet.Name">
            <summary>
            <para>
            <para>The domain name (such as example.com) or subdomain name (such as www.example.com)
            for which Amazon Route 53 responds to DNS queries by using the resource record sets
            that Route 53 creates for this traffic policy instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyInstanceCmdlet.TrafficPolicyId">
            <summary>
            <para>
            <para>The ID of the traffic policy that you want to use to create resource record sets in
            the specified hosted zone.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyInstanceCmdlet.TrafficPolicyVersion">
            <summary>
            <para>
            <para>The version of the traffic policy that you want to use to create resource record sets
            in the specified hosted zone.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyInstanceCmdlet.TTL">
            <summary>
            <para>
            <para>(Optional) The TTL that you want Amazon Route 53 to assign to all of the resource
            record sets that it creates in the specified hosted zone.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.CreateTrafficPolicyInstanceResponse).
            Specifying the name of a property of type Amazon.Route53.Model.CreateTrafficPolicyInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyVersionCmdlet">
            <summary>
            Creates a new version of an existing traffic policy. When you create a new version
            of a traffic policy, you specify the ID of the traffic policy that you want to update
            and a JSON-formatted document that describes the new version. You use traffic policies
            to create multiple DNS resource record sets for one domain name (such as example.com)
            or one subdomain name (such as www.example.com). You can create a maximum of 1000
            versions of a traffic policy. If you reach the limit and need to create another version,
            you'll need to start a new traffic policy.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyVersionCmdlet.Comment">
            <summary>
            <para>
            <para>The comment that you specified in the <code>CreateTrafficPolicyVersion</code> request,
            if any.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyVersionCmdlet.Document">
            <summary>
            <para>
            <para>The definition of this version of the traffic policy, in JSON format. You specified
            the JSON in the <code>CreateTrafficPolicyVersion</code> request. For more information
            about the JSON format, see <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_CreateTrafficPolicy.html">CreateTrafficPolicy</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyVersionCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the traffic policy for which you want to create a new version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.CreateTrafficPolicyVersionResponse).
            Specifying the name of a property of type Amazon.Route53.Model.CreateTrafficPolicyVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53TrafficPolicyVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.NewR53VPCAssociationAuthorizationCmdlet">
            <summary>
            Authorizes the AWS account that created a specified VPC to submit an <code>AssociateVPCWithHostedZone</code>
            request to associate the VPC with a specified hosted zone that was created by a different
            account. To submit a <code>CreateVPCAssociationAuthorization</code> request, you must
            use the account that created the hosted zone. After you authorize the association,
            use the account that created the VPC to submit an <code>AssociateVPCWithHostedZone</code>
            request.
            
             <note><para>
            If you want to associate multiple VPCs that you created by using one account with
            a hosted zone that you created by using a different account, you must submit one authorization
            request for each VPC.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53VPCAssociationAuthorizationCmdlet.HostedZoneId">
            <summary>
            <para>
            <para>The ID of the private hosted zone that you want to authorize associating a VPC with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53VPCAssociationAuthorizationCmdlet.VPC_VPCId">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53VPCAssociationAuthorizationCmdlet.VPC_VPCRegion">
            <summary>
            <para>
            <para>(Private hosted zones only) The region that an Amazon VPC was created in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53VPCAssociationAuthorizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.CreateVPCAssociationAuthorizationResponse).
            Specifying the name of a property of type Amazon.Route53.Model.CreateVPCAssociationAuthorizationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53VPCAssociationAuthorizationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VPC_VPCId parameter.
            The -PassThru parameter is deprecated, use -Select '^VPC_VPCId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.NewR53VPCAssociationAuthorizationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.RegisterR53VPCWithHostedZoneCmdlet">
            <summary>
            Associates an Amazon VPC with a private hosted zone. 
            
             <note><para>
            To perform the association, the VPC and the private hosted zone must already exist.
            Also, you can't convert a public hosted zone into a private hosted zone.
            </para></note><para>
            If you want to associate a VPC that was created by one AWS account with a private
            hosted zone that was created by a different account, do one of the following:
            </para><ul><li><para>
            Use the AWS account that created the private hosted zone to submit a <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_CreateVPCAssociationAuthorization.html">CreateVPCAssociationAuthorization</a>
            request. Then use the account that created the VPC to submit an <code>AssociateVPCWithHostedZone</code>
            request.
            </para></li><li><para>
            If a subnet in the VPC was shared with another account, you can use the account that
            the subnet was shared with to submit an <code>AssociateVPCWithHostedZone</code> request.
            For more information about sharing subnets, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-sharing.html">Working
            with Shared VPCs</a>.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RegisterR53VPCWithHostedZoneCmdlet.Comment">
            <summary>
            <para>
            <para><i>Optional:</i> A comment about the association request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RegisterR53VPCWithHostedZoneCmdlet.HostedZoneId">
            <summary>
            <para>
            <para>The ID of the private hosted zone that you want to associate an Amazon VPC with.</para><para>Note that you can't associate a VPC with a hosted zone that doesn't have an existing
            VPC association.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RegisterR53VPCWithHostedZoneCmdlet.VPC_VPCId">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RegisterR53VPCWithHostedZoneCmdlet.VPC_VPCRegion">
            <summary>
            <para>
            <para>(Private hosted zones only) The region that an Amazon VPC was created in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RegisterR53VPCWithHostedZoneCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ChangeInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.AssociateVPCWithHostedZoneResponse).
            Specifying the name of a property of type Amazon.Route53.Model.AssociateVPCWithHostedZoneResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RegisterR53VPCWithHostedZoneCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HostedZoneId parameter.
            The -PassThru parameter is deprecated, use -Select '^HostedZoneId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RegisterR53VPCWithHostedZoneCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.RemoveR53HealthCheckCmdlet">
            <summary>
            Deletes a health check.
            
             <important><para>
            Amazon Route 53 does not prevent you from deleting a health check even if the health
            check is associated with one or more resource record sets. If you delete a health
            check and you don't update the associated resource record sets, the future status
            of the health check can't be predicted and may change. This will affect the routing
            of DNS queries for your DNS failover configuration. For more information, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/health-checks-creating-deleting.html#health-checks-deleting.html">Replacing
            and Deleting Health Checks</a> in the <i>Amazon Route 53 Developer Guide</i>.
            </para></important><para>
            If you're using AWS Cloud Map and you configured Cloud Map to create a Route 53 health
            check when you register an instance, you can't use the Route 53 <code>DeleteHealthCheck</code>
            command to delete the health check. The health check is deleted automatically when
            you deregister the instance; there can be a delay of several hours before the health
            check is deleted from Route 53. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53HealthCheckCmdlet.HealthCheckId">
            <summary>
            <para>
            <para>The ID of the health check that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53HealthCheckCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.DeleteHealthCheckResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53HealthCheckCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HealthCheckId parameter.
            The -PassThru parameter is deprecated, use -Select '^HealthCheckId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53HealthCheckCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.RemoveR53HostedZoneCmdlet">
            <summary>
            Deletes a hosted zone.
            
             
            <para>
            If the hosted zone was created by another service, such as AWS Cloud Map, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DeleteHostedZone.html#delete-public-hosted-zone-created-by-another-service">Deleting
            Public Hosted Zones That Were Created by Another Service</a> in the <i>Amazon Route
            53 Developer Guide</i> for information about how to delete it. (The process is the
            same for public and private hosted zones that were created by another service.)
            </para><para>
            If you want to keep your domain registration but you want to stop routing internet
            traffic to your website or web application, we recommend that you delete resource
            record sets in the hosted zone instead of deleting the hosted zone.
            </para><important><para>
            If you delete a hosted zone, you can't undelete it. You must create a new hosted zone
            and update the name servers for your domain registration, which can require up to
            48 hours to take effect. (If you delegated responsibility for a subdomain to a hosted
            zone and you delete the child hosted zone, you must update the name servers in the
            parent hosted zone.) In addition, if you delete a hosted zone, someone could hijack
            the domain and route traffic to their own resources using your domain name.
            </para></important><para>
            If you want to avoid the monthly charge for the hosted zone, you can transfer DNS
            service for the domain to a free DNS service. When you transfer DNS service, you have
            to update the name servers for the domain registration. If the domain is registered
            with Route 53, see <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_UpdateDomainNameservers.html">UpdateDomainNameservers</a>
            for information about how to replace Route 53 name servers with name servers for the
            new DNS service. If the domain is registered with another registrar, use the method
            provided by the registrar to update name servers for the domain registration. For
            more information, perform an internet search on "free DNS service."
            </para><para>
            You can delete a hosted zone only if it contains only the default SOA record and NS
            resource record sets. If the hosted zone contains other resource record sets, you
            must delete them before you can delete the hosted zone. If you try to delete a hosted
            zone that contains other resource record sets, the request fails, and Route 53 returns
            a <code>HostedZoneNotEmpty</code> error. For information about deleting records from
            your hosted zone, see <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_ChangeResourceRecordSets.html">ChangeResourceRecordSets</a>.
            </para><para>
            To verify that the hosted zone has been deleted, do one of the following:
            </para><ul><li><para>
            Use the <code>GetHostedZone</code> action to request information about the hosted
            zone.
            </para></li><li><para>
            Use the <code>ListHostedZones</code> action to get a list of the hosted zones associated
            with the current AWS account.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53HostedZoneCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the hosted zone you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53HostedZoneCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ChangeInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.DeleteHostedZoneResponse).
            Specifying the name of a property of type Amazon.Route53.Model.DeleteHostedZoneResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53HostedZoneCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53HostedZoneCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.RemoveR53QueryLoggingConfigCmdlet">
            <summary>
            Deletes a configuration for DNS query logging. If you delete a configuration, Amazon
            Route 53 stops sending query logs to CloudWatch Logs. Route 53 doesn't delete any
            logs that are already in CloudWatch Logs.
            
             
            <para>
            For more information about DNS query logs, see <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_CreateQueryLoggingConfig.html">CreateQueryLoggingConfig</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53QueryLoggingConfigCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the configuration that you want to delete. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53QueryLoggingConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.DeleteQueryLoggingConfigResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53QueryLoggingConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53QueryLoggingConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.RemoveR53ReusableDelegationSetCmdlet">
            <summary>
            Deletes a reusable delegation set.
            
             <important><para>
            You can delete a reusable delegation set only if it isn't associated with any hosted
            zones.
            </para></important><para>
            To verify that the reusable delegation set is not associated with any hosted zones,
            submit a <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_GetReusableDelegationSet.html">GetReusableDelegationSet</a>
            request and specify the ID of the reusable delegation set that you want to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53ReusableDelegationSetCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the reusable delegation set that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53ReusableDelegationSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.DeleteReusableDelegationSetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53ReusableDelegationSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53ReusableDelegationSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.RemoveR53TrafficPolicyCmdlet">
            <summary>
            Deletes a traffic policy.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53TrafficPolicyCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the traffic policy that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53TrafficPolicyCmdlet.Version">
            <summary>
            <para>
            <para>The version number of the traffic policy that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53TrafficPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.DeleteTrafficPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53TrafficPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53TrafficPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.RemoveR53TrafficPolicyInstanceCmdlet">
            <summary>
            Deletes a traffic policy instance and all of the resource record sets that Amazon
            Route 53 created when you created the instance.
            
             <note><para>
            In the Route 53 console, traffic policy instances are known as policy records.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53TrafficPolicyInstanceCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the traffic policy instance that you want to delete. </para><important><para>When you delete a traffic policy instance, Amazon Route 53 also deletes all of the
            resource record sets that were created when you created the traffic policy instance.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53TrafficPolicyInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.DeleteTrafficPolicyInstanceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53TrafficPolicyInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53TrafficPolicyInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.RemoveR53VPCAssociationAuthorizationCmdlet">
            <summary>
            Removes authorization to submit an <code>AssociateVPCWithHostedZone</code> request
            to associate a specified VPC with a hosted zone that was created by a different account.
            You must use the account that created the hosted zone to submit a <code>DeleteVPCAssociationAuthorization</code>
            request.
            
             <important><para>
            Sending this request only prevents the AWS account that created the VPC from associating
            the VPC with the Amazon Route 53 hosted zone in the future. If the VPC is already
            associated with the hosted zone, <code>DeleteVPCAssociationAuthorization</code> won't
            disassociate the VPC from the hosted zone. If you want to delete an existing association,
            use <code>DisassociateVPCFromHostedZone</code>.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53VPCAssociationAuthorizationCmdlet.HostedZoneId">
            <summary>
            <para>
            <para>When removing authorization to associate a VPC that was created by one AWS account
            with a hosted zone that was created with a different AWS account, the ID of the hosted
            zone.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53VPCAssociationAuthorizationCmdlet.VPC_VPCId">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53VPCAssociationAuthorizationCmdlet.VPC_VPCRegion">
            <summary>
            <para>
            <para>(Private hosted zones only) The region that an Amazon VPC was created in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53VPCAssociationAuthorizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.DeleteVPCAssociationAuthorizationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53VPCAssociationAuthorizationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VPC_VPCId parameter.
            The -PassThru parameter is deprecated, use -Select '^VPC_VPCId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.RemoveR53VPCAssociationAuthorizationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.TestR53DNSAnswerCmdlet">
            <summary>
            Gets the value that Amazon Route 53 returns in response to a DNS request for a specified
            record name and type. You can optionally specify the IP address of a DNS resolver,
            an EDNS0 client subnet IP address, and a subnet mask.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.TestR53DNSAnswerCmdlet.EDNS0ClientSubnetIP">
            <summary>
            <para>
            <para>If the resolver that you specified for resolverip supports EDNS0, specify the IPv4
            or IPv6 address of a client in the applicable location, for example, <code>192.0.2.44</code>
            or <code>2001:db8:85a3::8a2e:370:7334</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.TestR53DNSAnswerCmdlet.EDNS0ClientSubnetMask">
            <summary>
            <para>
            <para>If you specify an IP address for <code>edns0clientsubnetip</code>, you can optionally
            specify the number of bits of the IP address that you want the checking tool to include
            in the DNS query. For example, if you specify <code>192.0.2.44</code> for <code>edns0clientsubnetip</code>
            and <code>24</code> for <code>edns0clientsubnetmask</code>, the checking tool will
            simulate a request from 192.0.2.0/24. The default value is 24 bits for IPv4 addresses
            and 64 bits for IPv6 addresses.</para><para>The range of valid values depends on whether <code>edns0clientsubnetip</code> is an
            IPv4 or an IPv6 address:</para><ul><li><para><b>IPv4</b>: Specify a value between 0 and 32</para></li><li><para><b>IPv6</b>: Specify a value between 0 and 128</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.TestR53DNSAnswerCmdlet.HostedZoneId">
            <summary>
            <para>
            <para>The ID of the hosted zone that you want Amazon Route 53 to simulate a query for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.TestR53DNSAnswerCmdlet.RecordName">
            <summary>
            <para>
            <para>The name of the resource record set that you want Amazon Route 53 to simulate a query
            for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.TestR53DNSAnswerCmdlet.RecordType">
            <summary>
            <para>
            <para>The type of the resource record set.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.TestR53DNSAnswerCmdlet.ResolverIP">
            <summary>
            <para>
            <para>If you want to simulate a request from a specific DNS resolver, specify the IP address
            for that resolver. If you omit this value, <code>TestDnsAnswer</code> uses the IP
            address of a DNS resolver in the AWS US East (N. Virginia) Region (<code>us-east-1</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.TestR53DNSAnswerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.TestDNSAnswerResponse).
            Specifying the name of a property of type Amazon.Route53.Model.TestDNSAnswerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.TestR53DNSAnswerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HostedZoneId parameter.
            The -PassThru parameter is deprecated, use -Select '^HostedZoneId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.UnregisterR53VPCFromHostedZoneCmdlet">
            <summary>
            Disassociates a VPC from a Amazon Route 53 private hosted zone. Note the following:
            
             <ul><li><para>
            You can't disassociate the last VPC from a private hosted zone.
            </para></li><li><para>
            You can't convert a private hosted zone into a public hosted zone.
            </para></li><li><para>
            You can submit a <code>DisassociateVPCFromHostedZone</code> request using either the
            account that created the hosted zone or the account that created the VPC.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UnregisterR53VPCFromHostedZoneCmdlet.Comment">
            <summary>
            <para>
            <para><i>Optional:</i> A comment about the disassociation request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UnregisterR53VPCFromHostedZoneCmdlet.HostedZoneId">
            <summary>
            <para>
            <para>The ID of the private hosted zone that you want to disassociate a VPC from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UnregisterR53VPCFromHostedZoneCmdlet.VPC_VPCId">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UnregisterR53VPCFromHostedZoneCmdlet.VPC_VPCRegion">
            <summary>
            <para>
            <para>(Private hosted zones only) The region that an Amazon VPC was created in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UnregisterR53VPCFromHostedZoneCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ChangeInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.DisassociateVPCFromHostedZoneResponse).
            Specifying the name of a property of type Amazon.Route53.Model.DisassociateVPCFromHostedZoneResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UnregisterR53VPCFromHostedZoneCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HostedZoneId parameter.
            The -PassThru parameter is deprecated, use -Select '^HostedZoneId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UnregisterR53VPCFromHostedZoneCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet">
            <summary>
            Updates an existing health check. Note that some values can't be updated. 
            
             
            <para>
            For more information about updating health checks, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/health-checks-creating-deleting.html">Creating,
            Updating, and Deleting Health Checks</a> in the <i>Amazon Route 53 Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.ChildHealthCheck">
            <summary>
            <para>
            <para>A complex type that contains one <code>ChildHealthCheck</code> element for each health
            check that you want to associate with a <code>CALCULATED</code> health check.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.Disabled">
            <summary>
            <para>
            <para>Stops Route 53 from performing health checks. When you disable a health check, here's
            what happens:</para><ul><li><para><b>Health checks that check the health of endpoints:</b> Route 53 stops submitting
            requests to your application, server, or other resource.</para></li><li><para><b>Calculated health checks:</b> Route 53 stops aggregating the status of the referenced
            health checks.</para></li><li><para><b>Health checks that monitor CloudWatch alarms:</b> Route 53 stops monitoring the
            corresponding CloudWatch metrics.</para></li></ul><para>After you disable a health check, Route 53 considers the status of the health check
            to always be healthy. If you configured DNS failover, Route 53 continues to route
            traffic to the corresponding resources. If you want to stop routing traffic to a resource,
            change the value of <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_UpdateHealthCheck.html#Route53-UpdateHealthCheck-request-Inverted">Inverted</a>.
            </para><para>Charges for a health check still apply when the health check is disabled. For more
            information, see <a href="http://aws.amazon.com/route53/pricing/">Amazon Route 53
            Pricing</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.EnableSNI">
            <summary>
            <para>
            <para>Specify whether you want Amazon Route 53 to send the value of <code>FullyQualifiedDomainName</code>
            to the endpoint in the <code>client_hello</code> message during <code>TLS</code> negotiation.
            This allows the endpoint to respond to <code>HTTPS</code> health check requests with
            the applicable SSL/TLS certificate.</para><para>Some endpoints require that HTTPS requests include the host name in the <code>client_hello</code>
            message. If you don't enable SNI, the status of the health check will be SSL alert
            <code>handshake_failure</code>. A health check can also have that status for other
            reasons. If SNI is enabled and you're still getting the error, check the SSL/TLS configuration
            on your endpoint and confirm that your certificate is valid.</para><para>The SSL/TLS certificate on your endpoint includes a domain name in the <code>Common
            Name</code> field and possibly several more in the <code>Subject Alternative Names</code>
            field. One of the domain names in the certificate should match the value that you
            specify for <code>FullyQualifiedDomainName</code>. If the endpoint responds to the
            <code>client_hello</code> message with a certificate that does not include the domain
            name that you specified in <code>FullyQualifiedDomainName</code>, a health checker
            will retry the handshake. In the second attempt, the health checker will omit <code>FullyQualifiedDomainName</code>
            from the <code>client_hello</code> message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.FailureThreshold">
            <summary>
            <para>
            <para>The number of consecutive health checks that an endpoint must pass or fail for Amazon
            Route 53 to change the current status of the endpoint from unhealthy to healthy or
            vice versa. For more information, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html">How
            Amazon Route 53 Determines Whether an Endpoint Is Healthy</a> in the <i>Amazon Route
            53 Developer Guide</i>.</para><para>If you don't specify a value for <code>FailureThreshold</code>, the default value
            is three health checks.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.FullyQualifiedDomainName">
            <summary>
            <para>
            <para>Amazon Route 53 behavior depends on whether you specify a value for <code>IPAddress</code>.</para><note><para>If a health check already has a value for <code>IPAddress</code>, you can change the
            value. However, you can't update an existing health check to add or remove the value
            of <code>IPAddress</code>. </para></note><para><b>If you specify a value for</b><code>IPAddress</code>:</para><para>Route 53 sends health check requests to the specified IPv4 or IPv6 address and passes
            the value of <code>FullyQualifiedDomainName</code> in the <code>Host</code> header
            for all health checks except TCP health checks. This is typically the fully qualified
            DNS name of the endpoint on which you want Route 53 to perform health checks.</para><para>When Route 53 checks the health of an endpoint, here is how it constructs the <code>Host</code>
            header:</para><ul><li><para>If you specify a value of <code>80</code> for <code>Port</code> and <code>HTTP</code>
            or <code>HTTP_STR_MATCH</code> for <code>Type</code>, Route 53 passes the value of
            <code>FullyQualifiedDomainName</code> to the endpoint in the <code>Host</code> header.</para></li><li><para>If you specify a value of <code>443</code> for <code>Port</code> and <code>HTTPS</code>
            or <code>HTTPS_STR_MATCH</code> for <code>Type</code>, Route 53 passes the value of
            <code>FullyQualifiedDomainName</code> to the endpoint in the <code>Host</code> header.</para></li><li><para>If you specify another value for <code>Port</code> and any value except <code>TCP</code>
            for <code>Type</code>, Route 53 passes <i><code>FullyQualifiedDomainName</code>:<code>Port</code></i> to the endpoint in the <code>Host</code> header.</para></li></ul><para>If you don't specify a value for <code>FullyQualifiedDomainName</code>, Route 53 substitutes
            the value of <code>IPAddress</code> in the <code>Host</code> header in each of the
            above cases.</para><para><b>If you don't specify a value for</b><code>IPAddress</code>:</para><para>If you don't specify a value for <code>IPAddress</code>, Route 53 sends a DNS request
            to the domain that you specify in <code>FullyQualifiedDomainName</code> at the interval
            you specify in <code>RequestInterval</code>. Using an IPv4 address that is returned
            by DNS, Route 53 then checks the health of the endpoint.</para><note><para>If you don't specify a value for <code>IPAddress</code>, Route 53 uses only IPv4 to
            send health checks to the endpoint. If there's no resource record set with a type
            of A for the name that you specify for <code>FullyQualifiedDomainName</code>, the
            health check fails with a "DNS resolution failed" error.</para></note><para>If you want to check the health of weighted, latency, or failover resource record
            sets and you choose to specify the endpoint only by <code>FullyQualifiedDomainName</code>,
            we recommend that you create a separate health check for each endpoint. For example,
            create a health check for each HTTP server that is serving content for www.example.com.
            For the value of <code>FullyQualifiedDomainName</code>, specify the domain name of
            the server (such as <code>us-east-2-www.example.com</code>), not the name of the resource
            record sets (www.example.com).</para><important><para>In this configuration, if the value of <code>FullyQualifiedDomainName</code> matches
            the name of the resource record sets and you then associate the health check with
            those resource record sets, health check results will be unpredictable.</para></important><para>In addition, if the value of <code>Type</code> is <code>HTTP</code>, <code>HTTPS</code>,
            <code>HTTP_STR_MATCH</code>, or <code>HTTPS_STR_MATCH</code>, Route 53 passes the
            value of <code>FullyQualifiedDomainName</code> in the <code>Host</code> header, as
            it does when you specify a value for <code>IPAddress</code>. If the value of <code>Type</code>
            is <code>TCP</code>, Route 53 doesn't pass a <code>Host</code> header.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.HealthCheckId">
            <summary>
            <para>
            <para>The ID for the health check for which you want detailed information. When you created
            the health check, <code>CreateHealthCheck</code> returned the ID in the response,
            in the <code>HealthCheckId</code> element.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.HealthCheckVersion">
            <summary>
            <para>
            <para>A sequential counter that Amazon Route 53 sets to <code>1</code> when you create a
            health check and increments by 1 each time you update settings for the health check.</para><para>We recommend that you use <code>GetHealthCheck</code> or <code>ListHealthChecks</code>
            to get the current value of <code>HealthCheckVersion</code> for the health check that
            you want to update, and that you include that value in your <code>UpdateHealthCheck</code>
            request. This prevents Route 53 from overwriting an intervening update:</para><ul><li><para>If the value in the <code>UpdateHealthCheck</code> request matches the value of <code>HealthCheckVersion</code>
            in the health check, Route 53 updates the health check with the new settings.</para></li><li><para>If the value of <code>HealthCheckVersion</code> in the health check is greater, the
            health check was changed after you got the version number. Route 53 does not update
            the health check, and it returns a <code>HealthCheckVersionMismatch</code> error.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.HealthThreshold">
            <summary>
            <para>
            <para>The number of child health checks that are associated with a <code>CALCULATED</code>
            health that Amazon Route 53 must consider healthy for the <code>CALCULATED</code>
            health check to be considered healthy. To specify the child health checks that you
            want to associate with a <code>CALCULATED</code> health check, use the <code>ChildHealthChecks</code>
            and <code>ChildHealthCheck</code> elements.</para><para>Note the following:</para><ul><li><para>If you specify a number greater than the number of child health checks, Route 53 always
            considers this health check to be unhealthy.</para></li><li><para>If you specify <code>0</code>, Route 53 always considers this health check to be healthy.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.InsufficientDataHealthStatus">
            <summary>
            <para>
            <para>When CloudWatch has insufficient data about the metric to determine the alarm state,
            the status that you want Amazon Route 53 to assign to the health check:</para><ul><li><para><code>Healthy</code>: Route 53 considers the health check to be healthy.</para></li><li><para><code>Unhealthy</code>: Route 53 considers the health check to be unhealthy.</para></li><li><para><code>LastKnownStatus</code>: Route 53 uses the status of the health check from the
            last time CloudWatch had sufficient data to determine the alarm state. For new health
            checks that have no last known status, the default status for the health check is
            healthy.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.Inverted">
            <summary>
            <para>
            <para>Specify whether you want Amazon Route 53 to invert the status of a health check, for
            example, to consider a health check unhealthy when it otherwise would be considered
            healthy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.IPAddress">
            <summary>
            <para>
            <para>The IPv4 or IPv6 IP address for the endpoint that you want Amazon Route 53 to perform
            health checks on. If you don't specify a value for <code>IPAddress</code>, Route 53
            sends a DNS request to resolve the domain name that you specify in <code>FullyQualifiedDomainName</code>
            at the interval that you specify in <code>RequestInterval</code>. Using an IP address
            that is returned by DNS, Route 53 then checks the health of the endpoint.</para><para>Use one of the following formats for the value of <code>IPAddress</code>: </para><ul><li><para><b>IPv4 address</b>: four values between 0 and 255, separated by periods (.), for
            example, <code>192.0.2.44</code>.</para></li><li><para><b>IPv6 address</b>: eight groups of four hexadecimal values, separated by colons
            (:), for example, <code>2001:0db8:85a3:0000:0000:abcd:0001:2345</code>. You can also
            shorten IPv6 addresses as described in RFC 5952, for example, <code>2001:db8:85a3::abcd:1:2345</code>.</para></li></ul><para>If the endpoint is an EC2 instance, we recommend that you create an Elastic IP address,
            associate it with your EC2 instance, and specify the Elastic IP address for <code>IPAddress</code>.
            This ensures that the IP address of your instance never changes. For more information,
            see the applicable documentation:</para><ul><li><para>Linux: <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses (EIP)</a> in the <i>Amazon EC2 User Guide for Linux Instances</i></para></li><li><para>Windows: <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses (EIP)</a> in the <i>Amazon EC2 User Guide for Windows Instances</i></para></li></ul><note><para>If a health check already has a value for <code>IPAddress</code>, you can change the
            value. However, you can't update an existing health check to add or remove the value
            of <code>IPAddress</code>. </para></note><para>For more information, see <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_UpdateHealthCheck.html#Route53-UpdateHealthCheck-request-FullyQualifiedDomainName">FullyQualifiedDomainName</a>.
            </para><para>Constraints: Route 53 can't check the health of endpoints for which the IP address
            is in local, private, non-routable, or multicast ranges. For more information about
            IP addresses for which you can't create health checks, see the following documents:</para><ul><li><para><a href="https://tools.ietf.org/html/rfc5735">RFC 5735, Special Use IPv4 Addresses</a></para></li><li><para><a href="https://tools.ietf.org/html/rfc6598">RFC 6598, IANA-Reserved IPv4 Prefix
            for Shared Address Space</a></para></li><li><para><a href="https://tools.ietf.org/html/rfc5156">RFC 5156, Special-Use IPv6 Addresses</a></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.AlarmIdentifier_Name">
            <summary>
            <para>
            <para>The name of the CloudWatch alarm that you want Amazon Route 53 health checkers to
            use to determine whether this health check is healthy.</para><note><para>Route 53 supports CloudWatch alarms with the following features:</para><ul><li><para>Standard-resolution metrics. High-resolution metrics aren't supported. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/publishingMetrics.html#high-resolution-metrics">High-Resolution
            Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</para></li><li><para>Statistics: Average, Minimum, Maximum, Sum, and SampleCount. Extended statistics aren't
            supported.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.Port">
            <summary>
            <para>
            <para>The port on the endpoint that you want Amazon Route 53 to perform health checks on.</para><note><para>Don't specify a value for <code>Port</code> when you specify a value for <code>Type</code>
            of <code>CLOUDWATCH_METRIC</code> or <code>CALCULATED</code>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.AlarmIdentifier_Region">
            <summary>
            <para>
            <para>For the CloudWatch alarm that you want Route 53 health checkers to use to determine
            whether this health check is healthy, the region that the alarm was created in.</para><para>For the current list of CloudWatch regions, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#cw_region">Amazon
            CloudWatch</a> in the <i>AWS Service Endpoints</i> chapter of the <i>Amazon Web Services
            General Reference</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.HealthCheckRegion">
            <summary>
            <para>
            <para>A complex type that contains one <code>Region</code> element for each region that
            you want Amazon Route 53 health checkers to check the specified endpoint from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.ResetElement">
            <summary>
            <para>
            <para>A complex type that contains one <code>ResettableElementName</code> element for each
            element that you want to reset to the default value. Valid values for <code>ResettableElementName</code>
            include the following:</para><ul><li><para><code>ChildHealthChecks</code>: Amazon Route 53 resets <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_HealthCheckConfig.html#Route53-Type-HealthCheckConfig-ChildHealthChecks">ChildHealthChecks</a>
            to null.</para></li><li><para><code>FullyQualifiedDomainName</code>: Route 53 resets <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_UpdateHealthCheck.html#Route53-UpdateHealthCheck-request-FullyQualifiedDomainName">FullyQualifiedDomainName</a>.
            to null.</para></li><li><para><code>Regions</code>: Route 53 resets the <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_HealthCheckConfig.html#Route53-Type-HealthCheckConfig-Regions">Regions</a>
            list to the default set of regions. </para></li><li><para><code>ResourcePath</code>: Route 53 resets <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_HealthCheckConfig.html#Route53-Type-HealthCheckConfig-ResourcePath">ResourcePath</a>
            to null.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.ResourcePath">
            <summary>
            <para>
            <para>The path that you want Amazon Route 53 to request when performing health checks. The
            path can be any value for which your endpoint will return an HTTP status code of 2xx
            or 3xx when the endpoint is healthy, for example the file /docs/route53-health-check.html.
            You can also include query string parameters, for example, <code>/welcome.html?language=jp&amp;login=y</code>.
            </para><para>Specify this value only if you want to change it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.SearchString">
            <summary>
            <para>
            <para>If the value of <code>Type</code> is <code>HTTP_STR_MATCH</code> or <code>HTTPS_STR_MATCH</code>,
            the string that you want Amazon Route 53 to search for in the response body from the
            specified resource. If the string appears in the response body, Route 53 considers
            the resource healthy. (You can't change the value of <code>Type</code> when you update
            a health check.)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HealthCheck'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.UpdateHealthCheckResponse).
            Specifying the name of a property of type Amazon.Route53.Model.UpdateHealthCheckResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HealthCheckId parameter.
            The -PassThru parameter is deprecated, use -Select '^HealthCheckId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HealthCheckCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.UpdateR53HostedZoneCommentCmdlet">
            <summary>
            Updates the comment for a specified hosted zone.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HostedZoneCommentCmdlet.Comment">
            <summary>
            <para>
            <para>The new comment for the hosted zone. If you don't specify a value for <code>Comment</code>,
            Amazon Route 53 deletes the existing value of the <code>Comment</code> element, if
            any.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HostedZoneCommentCmdlet.Id">
            <summary>
            <para>
            <para>The ID for the hosted zone that you want to update the comment for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HostedZoneCommentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HostedZone'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.UpdateHostedZoneCommentResponse).
            Specifying the name of a property of type Amazon.Route53.Model.UpdateHostedZoneCommentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HostedZoneCommentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53HostedZoneCommentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.UpdateR53TrafficPolicyCommentCmdlet">
            <summary>
            Updates the comment for a specified traffic policy version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53TrafficPolicyCommentCmdlet.Comment">
            <summary>
            <para>
            <para>The new comment for the specified traffic policy and version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53TrafficPolicyCommentCmdlet.Id">
            <summary>
            <para>
            <para>The value of <code>Id</code> for the traffic policy that you want to update the comment
            for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53TrafficPolicyCommentCmdlet.Version">
            <summary>
            <para>
            <para>The value of <code>Version</code> for the traffic policy that you want to update the
            comment for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53TrafficPolicyCommentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficPolicy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.UpdateTrafficPolicyCommentResponse).
            Specifying the name of a property of type Amazon.Route53.Model.UpdateTrafficPolicyCommentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53TrafficPolicyCommentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53TrafficPolicyCommentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53.UpdateR53TrafficPolicyInstanceCmdlet">
            <summary>
            Updates the resource record sets in a specified hosted zone that were created based
            on the settings in a specified traffic policy version.
            
             
            <para>
            When you update a traffic policy instance, Amazon Route 53 continues to respond to
            DNS queries for the root resource record set name (such as example.com) while it replaces
            one group of resource record sets with another. Route 53 performs the following operations:
            </para><ol><li><para>
            Route 53 creates a new group of resource record sets based on the specified traffic
            policy. This is true regardless of how significant the differences are between the
            existing resource record sets and the new resource record sets. 
            </para></li><li><para>
            When all of the new resource record sets have been created, Route 53 starts to respond
            to DNS queries for the root resource record set name (such as example.com) by using
            the new resource record sets.
            </para></li><li><para>
            Route 53 deletes the old group of resource record sets that are associated with the
            root resource record set name.
            </para></li></ol>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53TrafficPolicyInstanceCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the traffic policy instance that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53TrafficPolicyInstanceCmdlet.TrafficPolicyId">
            <summary>
            <para>
            <para>The ID of the traffic policy that you want Amazon Route 53 to use to update resource
            record sets for the specified traffic policy instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53TrafficPolicyInstanceCmdlet.TrafficPolicyVersion">
            <summary>
            <para>
            <para>The version of the traffic policy that you want Amazon Route 53 to use to update resource
            record sets for the specified traffic policy instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53TrafficPolicyInstanceCmdlet.TTL">
            <summary>
            <para>
            <para>The TTL that you want Amazon Route 53 to assign to all of the updated resource record
            sets.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53TrafficPolicyInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrafficPolicyInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53.Model.UpdateTrafficPolicyInstanceResponse).
            Specifying the name of a property of type Amazon.Route53.Model.UpdateTrafficPolicyInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53TrafficPolicyInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53.UpdateR53TrafficPolicyInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
