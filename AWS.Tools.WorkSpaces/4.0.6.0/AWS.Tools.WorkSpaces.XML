<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.WorkSpaces</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceCmdlet">
            <summary>
            Terminates the specified WorkSpaces.
            
             
            <para>
            Terminating a WorkSpace is a permanent action and cannot be undone. The user's data
            is destroyed. If you need to archive any user data, contact Amazon Web Services before
            terminating the WorkSpace.
            </para><para>
            You can terminate a WorkSpace that is in any state except <code>SUSPENDED</code>.
            </para><para>
            This operation is asynchronous and returns before the WorkSpaces have been completely
            terminated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceCmdlet.WorkspaceId">
            <summary>
            The IDs of one or more WorkSpaces to terminate.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceCmdlet.Request">
            <summary>
            <para>
            <para>The WorkSpaces to terminate. You can specify up to 25 WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FailedRequests'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.TerminateWorkspacesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.TerminateWorkspacesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Request parameter.
            The -PassThru parameter is deprecated, use -Select '^Request' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.ResetWKSWorkspaceCmdlet">
            <summary>
            Rebuilds the specified WorkSpace.
            
             
            <para>
            You cannot rebuild a WorkSpace unless its state is <code>AVAILABLE</code>, <code>ERROR</code>,
            <code>UNHEALTHY</code>, or <code>STOPPED</code>.
            </para><para>
            Rebuilding a WorkSpace is a potentially destructive action that can result in the
            loss of data. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/reset-workspace.html">Rebuild
            a WorkSpace</a>.
            </para><para>
            This operation is asynchronous and returns before the WorkSpaces have been completely
            rebuilt.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ResetWKSWorkspaceCmdlet.WorkspaceId">
            <summary>
            The IDs of the WorkSpaces to rebuild. You can specify a single WorkSpace.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ResetWKSWorkspaceCmdlet.Request">
            <summary>
            <para>
            <para>The WorkSpace to rebuild. You can specify a single WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ResetWKSWorkspaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FailedRequests'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.RebuildWorkspacesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.RebuildWorkspacesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ResetWKSWorkspaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Request parameter.
            The -PassThru parameter is deprecated, use -Select '^Request' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ResetWKSWorkspaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RestartWKSWorkspaceCmdlet">
            <summary>
            Reboots the specified WorkSpaces.
            
             
            <para>
            You cannot reboot a WorkSpace unless its state is <code>AVAILABLE</code> or <code>UNHEALTHY</code>.
            </para><para>
            This operation is asynchronous and returns before the WorkSpaces have rebooted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RestartWKSWorkspaceCmdlet.WorkspaceId">
            <summary>
            The IDs of one or more WorkSpaces to reboot.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RestartWKSWorkspaceCmdlet.Request">
            <summary>
            <para>
            <para>The WorkSpaces to reboot. You can specify up to 25 WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RestartWKSWorkspaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FailedRequests'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.RebootWorkspacesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.RebootWorkspacesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RestartWKSWorkspaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Request parameter.
            The -PassThru parameter is deprecated, use -Select '^Request' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RestartWKSWorkspaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceCmdlet">
            <summary>
            Starts the specified WorkSpaces.
            
             
            <para>
            You cannot start a WorkSpace unless it has a running mode of <code>AutoStop</code>
            and a state of <code>STOPPED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceCmdlet.WorkspaceId">
            <summary>
            The IDs of one or more WorkSpaces to start.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceCmdlet.Request">
            <summary>
            <para>
            <para>The WorkSpaces to start. You can specify up to 25 WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FailedRequests'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.StartWorkspacesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.StartWorkspacesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Request parameter.
            The -PassThru parameter is deprecated, use -Select '^Request' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.StopWKSWorkspaceCmdlet">
            <summary>
            Stops the specified WorkSpaces.
            
             
            <para>
            You cannot stop a WorkSpace unless it has a running mode of <code>AutoStop</code>
            and a state of <code>AVAILABLE</code>, <code>IMPAIRED</code>, <code>UNHEALTHY</code>,
            or <code>ERROR</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StopWKSWorkspaceCmdlet.WorkspaceId">
            <summary>
            The IDs of one or more WorkSpaces to be stopped.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StopWKSWorkspaceCmdlet.Request">
            <summary>
            <para>
            <para>The WorkSpaces to stop. You can specify up to 25 WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StopWKSWorkspaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FailedRequests'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.StopWorkspacesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.StopWorkspacesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StopWKSWorkspaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Request parameter.
            The -PassThru parameter is deprecated, use -Select '^Request' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StopWKSWorkspaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.ApproveWKSIpRuleCmdlet">
            <summary>
            Adds one or more rules to the specified IP access control group.
            
             
            <para>
            This action gives users permission to access their WorkSpaces from the CIDR address
            ranges specified in the rules.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ApproveWKSIpRuleCmdlet.GroupId">
            <summary>
            <para>
            <para>The identifier of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ApproveWKSIpRuleCmdlet.UserRule">
            <summary>
            <para>
            <para>The rules to add to the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ApproveWKSIpRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.AuthorizeIpRulesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ApproveWKSIpRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ApproveWKSIpRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.CopyWKSWorkspaceImageCmdlet">
            <summary>
            Copies the specified image from the specified Region to the current Region.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.CopyWKSWorkspaceImageCmdlet.Description">
            <summary>
            <para>
            <para>A description of the image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.CopyWKSWorkspaceImageCmdlet.Name">
            <summary>
            <para>
            <para>The name of the image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.CopyWKSWorkspaceImageCmdlet.SourceImageId">
            <summary>
            <para>
            <para>The identifier of the source image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.CopyWKSWorkspaceImageCmdlet.SourceRegion">
            <summary>
            <para>
            <para>The identifier of the source Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.CopyWKSWorkspaceImageCmdlet.Tag">
            <summary>
            <para>
            <para>The tags for the image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.CopyWKSWorkspaceImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ImageId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.CopyWorkspaceImageResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.CopyWorkspaceImageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.CopyWKSWorkspaceImageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceImageId parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceImageId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.CopyWKSWorkspaceImageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.EditWKSAccountCmdlet">
            <summary>
            Modifies the configuration of Bring Your Own License (BYOL) for the specified account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSAccountCmdlet.DedicatedTenancyManagementCidrRange">
            <summary>
            <para>
            <para>The IP address range, specified as an IPv4 CIDR block, for the management network
            interface. Specify an IP address range that is compatible with your network and in
            CIDR notation (that is, specify the range as an IPv4 CIDR block). The CIDR block size
            must be /16 (for example, 203.0.113.25/16). It must also be specified as available
            by the <code>ListAvailableManagementCidrRanges</code> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSAccountCmdlet.DedicatedTenancySupport">
            <summary>
            <para>
            <para>The status of BYOL.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSAccountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.ModifyAccountResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSAccountCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.EditWKSClientPropertyCmdlet">
            <summary>
            Modifies the properties of the specified Amazon WorkSpaces clients.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSClientPropertyCmdlet.ClientProperties_ReconnectEnabled">
            <summary>
            <para>
            <para>Specifies whether users can cache their credentials on the Amazon WorkSpaces client.
            When enabled, users can choose to reconnect to their WorkSpaces without re-entering
            their credentials. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSClientPropertyCmdlet.ResourceId">
            <summary>
            <para>
            <para>The resource identifiers, in the form of directory IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSClientPropertyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.ModifyClientPropertiesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSClientPropertyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClientProperties_ReconnectEnabled parameter.
            The -PassThru parameter is deprecated, use -Select '^ClientProperties_ReconnectEnabled' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSClientPropertyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.EditWKSSelfservicePermissionCmdlet">
            <summary>
            Modifies the self-service WorkSpace management capabilities for your users. For more
            information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/enable-user-self-service-workspace-management.html">Enable
            Self-Service WorkSpace Management Capabilities for Your Users</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSelfservicePermissionCmdlet.SelfservicePermissions_ChangeComputeType">
            <summary>
            <para>
            <para>Specifies whether users can change the compute type (bundle) for their WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSelfservicePermissionCmdlet.SelfservicePermissions_IncreaseVolumeSize">
            <summary>
            <para>
            <para>Specifies whether users can increase the volume size of the drives on their WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSelfservicePermissionCmdlet.SelfservicePermissions_RebuildWorkspace">
            <summary>
            <para>
            <para>Specifies whether users can rebuild the operating system of a WorkSpace to its original
            state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSelfservicePermissionCmdlet.ResourceId">
            <summary>
            <para>
            <para>The identifier of the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSelfservicePermissionCmdlet.SelfservicePermissions_RestartWorkspace">
            <summary>
            <para>
            <para>Specifies whether users can restart their WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSelfservicePermissionCmdlet.SelfservicePermissions_SwitchRunningMode">
            <summary>
            <para>
            <para>Specifies whether users can switch the running mode of their WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSelfservicePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.ModifySelfservicePermissionsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSelfservicePermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSelfservicePermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet">
            <summary>
            Specifies which devices and operating systems users can use to access their WorkSpaces.
            For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/update-directory-details.html#control-device-access">
            Control Device Access</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.WorkspaceAccessProperties_DeviceTypeAndroid">
            <summary>
            <para>
            <para>Indicates whether users can use Android devices to access their WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.WorkspaceAccessProperties_DeviceTypeChromeOs">
            <summary>
            <para>
            <para>Indicates whether users can use Chromebooks to access their WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.WorkspaceAccessProperties_DeviceTypeIo">
            <summary>
            <para>
            <para>Indicates whether users can use iOS devices to access their WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.WorkspaceAccessProperties_DeviceTypeOsx">
            <summary>
            <para>
            <para>Indicates whether users can use macOS clients to access their WorkSpaces. To restrict
            WorkSpaces access to trusted devices (also known as managed devices) with valid certificates,
            specify a value of <code>TRUST</code>. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/trusted-devices.html">Restrict
            WorkSpaces Access to Trusted Devices</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.WorkspaceAccessProperties_DeviceTypeWeb">
            <summary>
            <para>
            <para>Indicates whether users can access their WorkSpaces through a web browser.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.WorkspaceAccessProperties_DeviceTypeWindow">
            <summary>
            <para>
            <para>Indicates whether users can use Windows clients to access their WorkSpaces. To restrict
            WorkSpaces access to trusted devices (also known as managed devices) with valid certificates,
            specify a value of <code>TRUST</code>. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/trusted-devices.html">Restrict
            WorkSpaces Access to Trusted Devices</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.WorkspaceAccessProperties_DeviceTypeZeroClient">
            <summary>
            <para>
            <para>Indicates whether users can use zero client devices to access their WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.ResourceId">
            <summary>
            <para>
            <para>The identifier of the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.ModifyWorkspaceAccessPropertiesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet">
            <summary>
            Modify the default properties used to create WorkSpaces.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet.WorkspaceCreationProperties_CustomSecurityGroupId">
            <summary>
            <para>
            <para>The identifier of your custom security group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet.WorkspaceCreationProperties_DefaultOu">
            <summary>
            <para>
            <para>The default organizational unit (OU) for your WorkSpace directories.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet.WorkspaceCreationProperties_EnableInternetAccess">
            <summary>
            <para>
            <para>Indicates whether internet access is enabled for your WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet.WorkspaceCreationProperties_EnableMaintenanceMode">
            <summary>
            <para>
            <para>Indicates whether maintenance mode is enabled for your WorkSpaces. For more information,
            see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/workspace-maintenance.html">WorkSpace
            Maintenance</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet.ResourceId">
            <summary>
            <para>
            <para>The identifier of the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet.WorkspaceCreationProperties_UserEnabledAsLocalAdministrator">
            <summary>
            <para>
            <para>Indicates whether users are local administrators of their WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.ModifyWorkspaceCreationPropertiesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspacePropertyCmdlet">
            <summary>
            Modifies the specified WorkSpace properties.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspacePropertyCmdlet.WorkspaceProperties_ComputeTypeName">
            <summary>
            <para>
            <para>The compute type. For more information, see <a href="http://aws.amazon.com/workspaces/details/#Amazon_WorkSpaces_Bundles">Amazon
            WorkSpaces Bundles</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspacePropertyCmdlet.WorkspaceProperties_RootVolumeSizeGib">
            <summary>
            <para>
            <para>The size of the root volume.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspacePropertyCmdlet.WorkspaceProperties_RunningMode">
            <summary>
            <para>
            <para>The running mode. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/running-mode.html">Manage
            the WorkSpace Running Mode</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspacePropertyCmdlet.WorkspaceProperties_RunningModeAutoStopTimeoutInMinute">
            <summary>
            <para>
            <para>The time after a user logs off when WorkSpaces are automatically stopped. Configured
            in 60-minute intervals.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspacePropertyCmdlet.WorkspaceProperties_UserVolumeSizeGib">
            <summary>
            <para>
            <para>The size of the user storage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspacePropertyCmdlet.WorkspaceId">
            <summary>
            <para>
            <para>The identifier of the WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspacePropertyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.ModifyWorkspacePropertiesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspacePropertyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkspaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkspaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspacePropertyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceStateCmdlet">
            <summary>
            Sets the state of the specified WorkSpace.
            
             
            <para>
            To maintain a WorkSpace without being interrupted, set the WorkSpace state to <code>ADMIN_MAINTENANCE</code>.
            WorkSpaces in this state do not respond to requests to reboot, stop, start, rebuild,
            or restore. An AutoStop WorkSpace in this state is not stopped. Users cannot log into
            a WorkSpace in the <code>ADMIN_MAINTENANCE</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceStateCmdlet.WorkspaceId">
            <summary>
            <para>
            <para>The identifier of the WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceStateCmdlet.WorkspaceState">
            <summary>
            <para>
            <para>The WorkSpace state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceStateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.ModifyWorkspaceStateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceStateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkspaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkspaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceStateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSAccountCmdlet">
            <summary>
            Retrieves a list that describes the configuration of Bring Your Own License (BYOL)
            for the specified account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSAccountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeAccountResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeAccountResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSAccountModificationCmdlet">
            <summary>
            Retrieves a list that describes modifications to the configuration of Bring Your Own
            License (BYOL) for the specified account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSAccountModificationCmdlet.NextToken">
            <summary>
            <para>
            <para>If you received a <code>NextToken</code> from a previous call that was paginated,
            provide this token to receive the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSAccountModificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AccountModifications'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeAccountModificationsResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeAccountModificationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSAccountModificationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSAvailableManagementCidrRangeListCmdlet">
            <summary>
            Retrieves a list of IP address ranges, specified as IPv4 CIDR blocks, that you can
            use for the network management interface when you enable Bring Your Own License (BYOL).
            
            
             
            <para>
            The management network interface is connected to a secure Amazon WorkSpaces management
            network. It is used for interactive streaming of the WorkSpace desktop to Amazon WorkSpaces
            clients, and to allow Amazon WorkSpaces to manage the WorkSpace.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSAvailableManagementCidrRangeListCmdlet.ManagementCidrRangeConstraint">
            <summary>
            <para>
            <para>The IP address range to search. Specify an IP address range that is compatible with
            your network and in CIDR notation (that is, specify the range as an IPv4 CIDR block).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSAvailableManagementCidrRangeListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSAvailableManagementCidrRangeListCmdlet.NextToken">
            <summary>
            <para>
            <para>If you received a <code>NextToken</code> from a previous call that was paginated,
            provide this token to receive the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSAvailableManagementCidrRangeListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ManagementCidrRanges'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.ListAvailableManagementCidrRangesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.ListAvailableManagementCidrRangesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSAvailableManagementCidrRangeListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ManagementCidrRangeConstraint parameter.
            The -PassThru parameter is deprecated, use -Select '^ManagementCidrRangeConstraint' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSAvailableManagementCidrRangeListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSClientPropertyCmdlet">
            <summary>
            Retrieves a list that describes one or more specified Amazon WorkSpaces clients.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSClientPropertyCmdlet.ResourceId">
            <summary>
            <para>
            <para>The resource identifier, in the form of directory IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSClientPropertyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ClientPropertiesList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeClientPropertiesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeClientPropertiesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSClientPropertyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSIpGroupCmdlet">
            <summary>
            Describes one or more of your IP access control groups.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSIpGroupCmdlet.GroupId">
            <summary>
            <para>
            <para>The identifiers of one or more IP access control groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSIpGroupCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSIpGroupCmdlet.NextToken">
            <summary>
            <para>
            <para>If you received a <code>NextToken</code> from a previous call that was paginated,
            provide this token to receive the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSIpGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Result'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeIpGroupsResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeIpGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSIpGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSIpGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSTagCmdlet">
            <summary>
            Describes the specified tags for the specified WorkSpaces resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSTagCmdlet.WorkspaceId">
            <summary>
            <para>
            <para>The identifier of the WorkSpaces resource. The supported resource types are WorkSpaces,
            registered directories, images, custom bundles, and IP access control groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TagList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeTagsResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeTagsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkspaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkspaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceCmdlet">
            <summary>
            Describes the specified WorkSpaces.
            
             
            <para>
            You can filter the results by using the bundle identifier, directory identifier, or
            owner, but you can specify only one filter at a time.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceCmdlet.BundleId">
            <summary>
            <para>
            <para>The identifier of the bundle. All WorkSpaces that are created from this bundle are
            retrieved. You cannot combine this parameter with any other filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory. In addition, you can optionally specify a specific
            directory user (see <code>UserName</code>). You cannot combine this parameter with
            any other filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceCmdlet.UserName">
            <summary>
            <para>
            <para>The name of the directory user. You must specify this parameter with <code>DirectoryId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceCmdlet.WorkspaceId">
            <summary>
            <para>
            <para>The identifiers of the WorkSpaces. You cannot combine this parameter with any other
            filter.</para><para>Because the <a>CreateWorkspaces</a> operation is asynchronous, the identifier it returns
            is not immediately available. If you immediately call <a>DescribeWorkspaces</a> with
            this identifier, no information is returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of items to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceCmdlet.NextToken">
            <summary>
            <para>
            <para>If you received a <code>NextToken</code> from a previous call that was paginated,
            provide this token to receive the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Workspaces'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeWorkspacesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeWorkspacesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceBundleCmdlet">
            <summary>
            Retrieves a list that describes the available WorkSpace bundles.
            
             
            <para>
            You can filter the results using either bundle ID or owner, but not both.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceBundleCmdlet.BundleId">
            <summary>
            <para>
            <para>The identifiers of the bundles. You cannot combine this parameter with any other filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceBundleCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results. (You received this token from a previous call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceBundleCmdlet.Owner">
            <summary>
            <para>
            <para>The owner of the bundles. You cannot combine this parameter with any other filter.</para><para>Specify <code>AMAZON</code> to describe the bundles provided by AWS or null to describe
            the bundles that belong to your account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceBundleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Bundles'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeWorkspaceBundlesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeWorkspaceBundlesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceBundleCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceDirectoryCmdlet">
            <summary>
            Describes the available directories that are registered with Amazon WorkSpaces.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceDirectoryCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifiers of the directories. If the value is null, all directories are retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceDirectoryCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of directories to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceDirectoryCmdlet.NextToken">
            <summary>
            <para>
            <para>If you received a <code>NextToken</code> from a previous call that was paginated,
            provide this token to receive the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceDirectoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Directories'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeWorkspaceDirectoriesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeWorkspaceDirectoriesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceDirectoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceDirectoryCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImageCmdlet">
            <summary>
            Retrieves a list that describes one or more specified images, if the image identifiers
            are provided. Otherwise, all images in the account are described.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImageCmdlet.ImageId">
            <summary>
            <para>
            <para>The identifier of the image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImageCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImageCmdlet.NextToken">
            <summary>
            <para>
            <para>If you received a <code>NextToken</code> from a previous call that was paginated,
            provide this token to receive the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Images'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeWorkspaceImagesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeWorkspaceImagesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImageId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImageId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImageCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspacesConnectionStatusCmdlet">
            <summary>
            Describes the connection status of the specified WorkSpaces.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspacesConnectionStatusCmdlet.WorkspaceId">
            <summary>
            <para>
            <para>The identifiers of the WorkSpaces. You can specify up to 25 WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspacesConnectionStatusCmdlet.NextToken">
            <summary>
            <para>
            <para>If you received a <code>NextToken</code> from a previous call that was paginated,
            provide this token to receive the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspacesConnectionStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WorkspacesConnectionStatus'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeWorkspacesConnectionStatusResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeWorkspacesConnectionStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspacesConnectionStatusCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceSnapshotCmdlet">
            <summary>
            Describes the snapshots for the specified WorkSpace.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceSnapshotCmdlet.WorkspaceId">
            <summary>
            <para>
            <para>The identifier of the WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeWorkspaceSnapshotsResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeWorkspaceSnapshotsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkspaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkspaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.ImportWKSWorkspaceImageCmdlet">
            <summary>
            Imports the specified Windows 7 or Windows 10 Bring Your Own License (BYOL) image
            into Amazon WorkSpaces. The image must be an already licensed EC2 image that is in
            your AWS account, and you must own the image.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSWorkspaceImageCmdlet.Ec2ImageId">
            <summary>
            <para>
            <para>The identifier of the EC2 image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSWorkspaceImageCmdlet.ImageDescription">
            <summary>
            <para>
            <para>The description of the WorkSpace image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSWorkspaceImageCmdlet.ImageName">
            <summary>
            <para>
            <para>The name of the WorkSpace image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSWorkspaceImageCmdlet.IngestionProcess">
            <summary>
            <para>
            <para>The ingestion process to be used when importing the image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSWorkspaceImageCmdlet.Tag">
            <summary>
            <para>
            <para>The tags. Each WorkSpaces resource can have a maximum of 50 tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSWorkspaceImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ImageId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.ImportWorkspaceImageResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.ImportWorkspaceImageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSWorkspaceImageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImageName parameter.
            The -PassThru parameter is deprecated, use -Select '^ImageName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSWorkspaceImageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.NewWKSIpGroupCmdlet">
            <summary>
            Creates an IP access control group.
            
             
            <para>
            An IP access control group provides you with the ability to control the IP addresses
            from which users are allowed to access their WorkSpaces. To specify the CIDR address
            ranges, add rules to your IP access control group and then associate the group with
            your directory. You can add rules when you create the group or at any time using <a>AuthorizeIpRules</a>.
            </para><para>
            There is a default IP access control group associated with your directory. If you
            don't associate an IP access control group with your directory, the default group
            is used. The default group includes a default rule that allows users to access their
            WorkSpaces from anywhere. You cannot modify the default IP access control group for
            your directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSIpGroupCmdlet.GroupDesc">
            <summary>
            <para>
            <para>The description of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSIpGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSIpGroupCmdlet.Tag">
            <summary>
            <para>
            <para>The tags. Each WorkSpaces resource can have a maximum of 50 tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSIpGroupCmdlet.UserRule">
            <summary>
            <para>
            <para>The rules to add to the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSIpGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GroupId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.CreateIpGroupResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.CreateIpGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSIpGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSIpGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.NewWKSTagCmdlet">
            <summary>
            Creates the specified tags for the specified WorkSpaces resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSTagCmdlet.WorkspaceId">
            <summary>
            <para>
            <para>The identifier of the WorkSpaces resource. The supported resource types are WorkSpaces,
            registered directories, images, custom bundles, and IP access control groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags. Each WorkSpaces resource can have a maximum of 50 tags. If you want to add
            new tags to a set of existing tags, you must submit all of the existing tags along
            with the new ones.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.CreateTagsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceCmdlet">
            <summary>
            Creates one or more WorkSpaces.
            
             
            <para>
            This operation is asynchronous and returns before the WorkSpaces are created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceCmdlet.Workspace">
            <summary>
            <para>
            <para>The WorkSpaces to create. You can specify up to 25 WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.CreateWorkspacesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.CreateWorkspacesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Workspace parameter.
            The -PassThru parameter is deprecated, use -Select '^Workspace' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSIpGroupCmdlet">
            <summary>
            Associates the specified IP access control group with the specified directory.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSIpGroupCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSIpGroupCmdlet.GroupId">
            <summary>
            <para>
            <para>The identifiers of one or more IP access control groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSIpGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.AssociateIpGroupsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSIpGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSIpGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSWorkspaceDirectoryCmdlet">
            <summary>
            Registers the specified directory. This operation is asynchronous and returns before
            the WorkSpace directory is registered. If this is the first time you are registering
            a directory, you will need to create the workspaces_DefaultRole role before you can
            register a directory. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/workspaces-access-control.html#create-default-role">
            Creating the workspaces_DefaultRole Role</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSWorkspaceDirectoryCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory. You cannot register a directory if it does not have
            a status of Active. If the directory does not have a status of Active, you will receive
            an InvalidResourceStateException error. If you have already registered the maximum
            number of directories that you can register with Amazon WorkSpaces, you will receive
            a ResourceLimitExceededException error. Deregister directories that you are not using
            for WorkSpaces, and try again.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSWorkspaceDirectoryCmdlet.EnableSelfService">
            <summary>
            <para>
            <para>Indicates whether self-service capabilities are enabled or disabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSWorkspaceDirectoryCmdlet.EnableWorkDoc">
            <summary>
            <para>
            <para>Indicates whether Amazon WorkDocs is enabled or disabled. If you have enabled this
            parameter and WorkDocs is not available in the Region, you will receive an OperationNotSupportedException
            error. Set <code>EnableWorkDocs</code> to disabled, and try again.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSWorkspaceDirectoryCmdlet.SubnetId">
            <summary>
            <para>
            <para>The identifiers of the subnets for your virtual private cloud (VPC). Make sure that
            the subnets are in supported Availability Zones. The subnets must also be in separate
            Availability Zones. If these conditions are not met, you will receive an OperationNotSupportedException
            error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSWorkspaceDirectoryCmdlet.Tag">
            <summary>
            <para>
            <para>The tags associated with the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSWorkspaceDirectoryCmdlet.Tenancy">
            <summary>
            <para>
            <para>Indicates whether your WorkSpace directory is dedicated or shared. To use Bring Your
            Own License (BYOL) images, this value must be set to <code>DEDICATED</code> and your
            AWS account must be enabled for BYOL. If your account has not been enabled for BYOL,
            you will receive an InvalidParameterValuesException error. For more information about
            BYOL images, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/byol-windows-images.html">Bring
            Your Own Windows Desktop Images</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSWorkspaceDirectoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.RegisterWorkspaceDirectoryResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSWorkspaceDirectoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSWorkspaceDirectoryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSIpGroupCmdlet">
            <summary>
            Deletes the specified IP access control group.
            
             
            <para>
            You cannot delete an IP access control group that is associated with a directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSIpGroupCmdlet.GroupId">
            <summary>
            <para>
            <para>The identifier of the IP access control group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSIpGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DeleteIpGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSIpGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSIpGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSTagCmdlet">
            <summary>
            Deletes the specified tags from the specified WorkSpaces resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSTagCmdlet.ResourceId">
            <summary>
            <para>
            <para>The identifier of the WorkSpaces resource. The supported resource types are WorkSpaces,
            registered directories, images, custom bundles, and IP access control groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The tag keys.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DeleteTagsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceImageCmdlet">
            <summary>
            Deletes the specified image from your account. To delete an image, you must first
            delete any bundles that are associated with the image and un-share the image if it
            is shared with other accounts.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceImageCmdlet.ImageId">
            <summary>
            <para>
            <para>The identifier of the image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DeleteWorkspaceImageResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceImageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImageId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImageId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceImageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RestoreWKSWorkspaceCmdlet">
            <summary>
            Restores the specified WorkSpace to its last known healthy state.
            
             
            <para>
            You cannot restore a WorkSpace unless its state is <code> AVAILABLE</code>, <code>ERROR</code>,
            <code>UNHEALTHY</code>, or <code>STOPPED</code>.
            </para><para>
            Restoring a WorkSpace is a potentially destructive action that can result in the loss
            of data. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/restore-workspace.html">Restore
            a WorkSpace</a>.
            </para><para>
            This operation is asynchronous and returns before the WorkSpace is completely restored.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RestoreWKSWorkspaceCmdlet.WorkspaceId">
            <summary>
            <para>
            <para>The identifier of the WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RestoreWKSWorkspaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.RestoreWorkspaceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RestoreWKSWorkspaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkspaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkspaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RestoreWKSWorkspaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RevokeWKSIpRuleCmdlet">
            <summary>
            Removes one or more rules from the specified IP access control group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RevokeWKSIpRuleCmdlet.GroupId">
            <summary>
            <para>
            <para>The identifier of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RevokeWKSIpRuleCmdlet.UserRule">
            <summary>
            <para>
            <para>The rules to remove from the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RevokeWKSIpRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.RevokeIpRulesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RevokeWKSIpRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RevokeWKSIpRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceMigrationCmdlet">
            <summary>
            Migrates a WorkSpace from one operating system or bundle type to another, while retaining
            the data on the user volume.
            
             
            <para>
            The migration process recreates the WorkSpace by using a new root volume from the
            target bundle image and the user volume from the last available snapshot of the original
            WorkSpace. During migration, the original <code>D:\Users\%USERNAME%</code> user profile
            folder is renamed to <code>D:\Users\%USERNAME%MMddyyTHHmmss%.NotMigrated</code>. A
            new <code>D:\Users\%USERNAME%\</code> folder is generated by the new OS. Certain files
            in the old user profile are moved to the new user profile.
            </para><para>
            For available migration scenarios, details about what happens during migration, and
            best practices, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/migrate-workspaces.html">Migrate
            a WorkSpace</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceMigrationCmdlet.BundleId">
            <summary>
            <para>
            <para>The identifier of the target bundle type to migrate the WorkSpace to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceMigrationCmdlet.SourceWorkspaceId">
            <summary>
            <para>
            <para>The identifier of the WorkSpace to migrate from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceMigrationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.MigrateWorkspaceResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.MigrateWorkspaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceMigrationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceWorkspaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceWorkspaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceMigrationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSIpGroupCmdlet">
            <summary>
            Disassociates the specified IP access control group from the specified directory.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSIpGroupCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSIpGroupCmdlet.GroupId">
            <summary>
            <para>
            <para>The identifiers of one or more IP access control groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSIpGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DisassociateIpGroupsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSIpGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSIpGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSWorkspaceDirectoryCmdlet">
            <summary>
            Deregisters the specified directory. This operation is asynchronous and returns before
            the WorkSpace directory is deregistered. If any WorkSpaces are registered to this
            directory, you must remove them before you can deregister the directory.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSWorkspaceDirectoryCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory. If any WorkSpaces are registered to this directory,
            you must remove them before you deregister the directory, or you will receive an OperationNotSupportedException
            error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSWorkspaceDirectoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DeregisterWorkspaceDirectoryResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSWorkspaceDirectoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSWorkspaceDirectoryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSRulesOfIpGroupCmdlet">
            <summary>
            Replaces the current rules of the specified IP access control group with the specified
            rules.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSRulesOfIpGroupCmdlet.GroupId">
            <summary>
            <para>
            <para>The identifier of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSRulesOfIpGroupCmdlet.UserRule">
            <summary>
            <para>
            <para>One or more rules.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSRulesOfIpGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.UpdateRulesOfIpGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSRulesOfIpGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSRulesOfIpGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
