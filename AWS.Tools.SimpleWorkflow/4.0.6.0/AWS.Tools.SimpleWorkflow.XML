<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.SimpleWorkflow</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.AddSWFResourceTagCmdlet">
            <summary>
            Add a tag to a Amazon SWF domain.
            
             <note><para>
            Amazon SWF supports a maximum of 50 tags per resource.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.AddSWFResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the Amazon SWF domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.AddSWFResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The list of tags to add to a domain. </para><para>Tags may only contain unicode letters, digits, whitespace, or these symbols: <code>_
            . : / = + - @</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.AddSWFResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.AddSWFResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.AddSWFResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.GetSWFActivityTypeCmdlet">
            <summary>
            Returns information about the specified activity type. This includes configuration
            settings provided when the type was registered and other general information about
            the type.
            
             
            <para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para><ul><li><para><code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.
            </para></li><li><para><code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.
            </para></li></ul></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFActivityTypeCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain in which the activity type is registered.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFActivityTypeCmdlet.ActivityType_Name">
            <summary>
            <para>
            <para>The name of this activity.</para><note><para>The combination of activity type name and version must be unique within a domain.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFActivityTypeCmdlet.ActivityType_Version">
            <summary>
            <para>
            <para>The version of this activity.</para><note><para>The combination of activity type name and version must be unique with in a domain.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFActivityTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ActivityTypeDetail'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.DescribeActivityTypeResponse).
            Specifying the name of a property of type Amazon.SimpleWorkflow.Model.DescribeActivityTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFActivityTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ActivityType_Name parameter.
            The -PassThru parameter is deprecated, use -Select '^ActivityType_Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.GetSWFActivityTypeListCmdlet">
            <summary>
            Returns information about all activities registered in the specified domain that match
            the specified name and registration status. The result includes information like creation
            date, current status of the activity, etc. The results may be split into multiple
            pages. To retrieve subsequent pages, make the call again using the <code>nextPageToken</code>
            returned by the initial call.
            
             
            <para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFActivityTypeListCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain in which the activity types have been registered.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFActivityTypeListCmdlet.Name">
            <summary>
            <para>
            <para>If specified, only lists the activity types that have this name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFActivityTypeListCmdlet.RegistrationStatus">
            <summary>
            <para>
            <para>Specifies the registration status of the activity types to list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFActivityTypeListCmdlet.ReverseOrder">
            <summary>
            <para>
            <para>When set to <code>true</code>, returns the results in reverse order. By default, the
            results are returned in ascending alphabetical order by <code>name</code> of the activity
            types.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFActivityTypeListCmdlet.MaximumPageSize">
            <summary>
            <para>
            <para>The maximum number of results that are returned per call. Use <code>nextPageToken</code>
            to obtain further pages of results. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFActivityTypeListCmdlet.NextPageToken">
            <summary>
            <para>
            <para>If <code>NextPageToken</code> is returned there are more results available. The value
            of <code>NextPageToken</code> is a unique pagination token for each page. Make the
            call again using the returned token to retrieve the next page. Keep all other arguments
            unchanged. Each pagination token expires after 60 seconds. Using an expired pagination
            token will return a <code>400</code> error: "<code>Specified token has exceeded its
            maximum lifetime</code>". </para><para>The configured <code>maximumPageSize</code> determines how many results can be returned
            in a single call. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextPageToken $null' for the first call and '-NextPageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFActivityTypeListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ActivityTypeInfos.TypeInfos'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.ListActivityTypesResponse).
            Specifying the name of a property of type Amazon.SimpleWorkflow.Model.ListActivityTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFActivityTypeListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Domain parameter.
            The -PassThru parameter is deprecated, use -Select '^Domain' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFActivityTypeListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextPageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionCountCmdlet">
            <summary>
            Returns the number of closed workflow executions within the given domain that meet
            the specified filtering criteria.
            
             <note><para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para></note><para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para><ul><li><para><code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para></li><li><para><code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para></li><li><para><code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para></li></ul></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionCountCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain containing the workflow executions to count.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionCountCmdlet.CloseTimeFilter_LatestDate">
            <summary>
            <para>
            <para>Specifies the latest start or close date and time to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionCountCmdlet.StartTimeFilter_LatestDate">
            <summary>
            <para>
            <para>Specifies the latest start or close date and time to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionCountCmdlet.TypeFilter_Name">
            <summary>
            <para>
            <para> Name of the workflow type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionCountCmdlet.CloseTimeFilter_OldestDate">
            <summary>
            <para>
            <para>Specifies the oldest start or close date and time to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionCountCmdlet.StartTimeFilter_OldestDate">
            <summary>
            <para>
            <para>Specifies the oldest start or close date and time to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionCountCmdlet.CloseStatusFilter_Status">
            <summary>
            <para>
            <para> The close status that must match the close status of an execution for it to meet
            the criteria of this filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionCountCmdlet.TagFilter_Tag">
            <summary>
            <para>
            <para> Specifies the tag that must be associated with the execution for it to meet the filter
            criteria.</para><para>Tags may only contain unicode letters, digits, whitespace, or these symbols: <code>_
            . : / = + - @</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionCountCmdlet.TypeFilter_Version">
            <summary>
            <para>
            <para>Version of the workflow type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionCountCmdlet.ExecutionFilter_WorkflowId">
            <summary>
            <para>
            <para>The workflowId to pass of match the criteria of this filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionCountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WorkflowExecutionCount'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.CountClosedWorkflowExecutionsResponse).
            Specifying the name of a property of type Amazon.SimpleWorkflow.Model.CountClosedWorkflowExecutionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionCountCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Domain parameter.
            The -PassThru parameter is deprecated, use -Select '^Domain' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionListCmdlet">
            <summary>
            Returns a list of closed workflow executions in the specified domain that meet the
            filtering criteria. The results may be split into multiple pages. To retrieve subsequent
            pages, make the call again using the nextPageToken returned by the initial call.
            
             <note><para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para></note><para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para><ul><li><para><code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para></li><li><para><code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para></li><li><para><code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para></li></ul></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionListCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain that contains the workflow executions to list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionListCmdlet.CloseTimeFilter_LatestDate">
            <summary>
            <para>
            <para>Specifies the latest start or close date and time to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionListCmdlet.StartTimeFilter_LatestDate">
            <summary>
            <para>
            <para>Specifies the latest start or close date and time to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionListCmdlet.TypeFilter_Name">
            <summary>
            <para>
            <para> Name of the workflow type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionListCmdlet.CloseTimeFilter_OldestDate">
            <summary>
            <para>
            <para>Specifies the oldest start or close date and time to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionListCmdlet.StartTimeFilter_OldestDate">
            <summary>
            <para>
            <para>Specifies the oldest start or close date and time to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionListCmdlet.ReverseOrder">
            <summary>
            <para>
            <para>When set to <code>true</code>, returns the results in reverse order. By default the
            results are returned in descending order of the start or the close time of the executions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionListCmdlet.CloseStatusFilter_Status">
            <summary>
            <para>
            <para> The close status that must match the close status of an execution for it to meet
            the criteria of this filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionListCmdlet.TagFilter_Tag">
            <summary>
            <para>
            <para> Specifies the tag that must be associated with the execution for it to meet the filter
            criteria.</para><para>Tags may only contain unicode letters, digits, whitespace, or these symbols: <code>_
            . : / = + - @</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionListCmdlet.TypeFilter_Version">
            <summary>
            <para>
            <para>Version of the workflow type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionListCmdlet.ExecutionFilter_WorkflowId">
            <summary>
            <para>
            <para>The workflowId to pass of match the criteria of this filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionListCmdlet.MaximumPageSize">
            <summary>
            <para>
            <para>The maximum number of results that are returned per call. Use <code>nextPageToken</code>
            to obtain further pages of results. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionListCmdlet.NextPageToken">
            <summary>
            <para>
            <para>If <code>NextPageToken</code> is returned there are more results available. The value
            of <code>NextPageToken</code> is a unique pagination token for each page. Make the
            call again using the returned token to retrieve the next page. Keep all other arguments
            unchanged. Each pagination token expires after 60 seconds. Using an expired pagination
            token will return a <code>400</code> error: "<code>Specified token has exceeded its
            maximum lifetime</code>". </para><para>The configured <code>maximumPageSize</code> determines how many results can be returned
            in a single call. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextPageToken $null' for the first call and '-NextPageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WorkflowExecutionInfos.ExecutionInfos'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsResponse).
            Specifying the name of a property of type Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Domain parameter.
            The -PassThru parameter is deprecated, use -Select '^Domain' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFClosedWorkflowExecutionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextPageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.GetSWFDomainCmdlet">
            <summary>
            Returns information about the specified domain, including description and status.
            
             
            <para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFDomainCmdlet.Name">
            <summary>
            <para>
            <para>The name of the domain to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DomainDetail'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.DescribeDomainResponse).
            Specifying the name of a property of type Amazon.SimpleWorkflow.Model.DescribeDomainResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.GetSWFDomainListCmdlet">
            <summary>
            Returns the list of domains registered in the account. The results may be split into
            multiple pages. To retrieve subsequent pages, make the call again using the nextPageToken
            returned by the initial call.
            
             <note><para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para></note><para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains. The element must be set to <code>arn:aws:swf::AccountID:domain/*</code>,
            where <i>AccountID</i> is the account ID, with no dashes.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFDomainListCmdlet.RegistrationStatus">
            <summary>
            <para>
            <para>Specifies the registration status of the domains to list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFDomainListCmdlet.ReverseOrder">
            <summary>
            <para>
            <para>When set to <code>true</code>, returns the results in reverse order. By default, the
            results are returned in ascending alphabetical order by <code>name</code> of the domains.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFDomainListCmdlet.MaximumPageSize">
            <summary>
            <para>
            <para>The maximum number of results that are returned per call. Use <code>nextPageToken</code>
            to obtain further pages of results. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFDomainListCmdlet.NextPageToken">
            <summary>
            <para>
            <para>If <code>NextPageToken</code> is returned there are more results available. The value
            of <code>NextPageToken</code> is a unique pagination token for each page. Make the
            call again using the returned token to retrieve the next page. Keep all other arguments
            unchanged. Each pagination token expires after 60 seconds. Using an expired pagination
            token will return a <code>400</code> error: "<code>Specified token has exceeded its
            maximum lifetime</code>". </para><para>The configured <code>maximumPageSize</code> determines how many results can be returned
            in a single call. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextPageToken $null' for the first call and '-NextPageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFDomainListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DomainInfos.Infos'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.ListDomainsResponse).
            Specifying the name of a property of type Amazon.SimpleWorkflow.Model.ListDomainsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFDomainListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextPageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.GetSWFOpenWorkflowExecutionCountCmdlet">
            <summary>
            Returns the number of open workflow executions within the given domain that meet the
            specified filtering criteria.
            
             <note><para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para></note><para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para><ul><li><para><code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para></li><li><para><code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para></li><li><para><code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para></li></ul></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFOpenWorkflowExecutionCountCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain containing the workflow executions to count.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFOpenWorkflowExecutionCountCmdlet.StartTimeFilter_LatestDate">
            <summary>
            <para>
            <para>Specifies the latest start or close date and time to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFOpenWorkflowExecutionCountCmdlet.TypeFilter_Name">
            <summary>
            <para>
            <para> Name of the workflow type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFOpenWorkflowExecutionCountCmdlet.StartTimeFilter_OldestDate">
            <summary>
            <para>
            <para>Specifies the oldest start or close date and time to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFOpenWorkflowExecutionCountCmdlet.TagFilter_Tag">
            <summary>
            <para>
            <para> Specifies the tag that must be associated with the execution for it to meet the filter
            criteria.</para><para>Tags may only contain unicode letters, digits, whitespace, or these symbols: <code>_
            . : / = + - @</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFOpenWorkflowExecutionCountCmdlet.TypeFilter_Version">
            <summary>
            <para>
            <para>Version of the workflow type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFOpenWorkflowExecutionCountCmdlet.ExecutionFilter_WorkflowId">
            <summary>
            <para>
            <para>The workflowId to pass of match the criteria of this filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFOpenWorkflowExecutionCountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WorkflowExecutionCount'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.CountOpenWorkflowExecutionsResponse).
            Specifying the name of a property of type Amazon.SimpleWorkflow.Model.CountOpenWorkflowExecutionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFOpenWorkflowExecutionCountCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Domain parameter.
            The -PassThru parameter is deprecated, use -Select '^Domain' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.GetSWFPendingActivityTaskCountCmdlet">
            <summary>
            Returns the estimated number of activity tasks in the specified task list. The count
            returned is an approximation and isn't guaranteed to be exact. If you specify a task
            list that no activity task was ever scheduled in then <code>0</code> is returned.
            
             
            <para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFPendingActivityTaskCountCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain that contains the task list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFPendingActivityTaskCountCmdlet.TaskList_Name">
            <summary>
            <para>
            <para>The name of the task list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFPendingActivityTaskCountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PendingTaskCount'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.CountPendingActivityTasksResponse).
            Specifying the name of a property of type Amazon.SimpleWorkflow.Model.CountPendingActivityTasksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFPendingActivityTaskCountCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TaskList_Name parameter.
            The -PassThru parameter is deprecated, use -Select '^TaskList_Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.GetSWFPendingDecisionTaskCountCmdlet">
            <summary>
            Returns the estimated number of decision tasks in the specified task list. The count
            returned is an approximation and isn't guaranteed to be exact. If you specify a task
            list that no decision task was ever scheduled in then <code>0</code> is returned.
            
             
            <para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFPendingDecisionTaskCountCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain that contains the task list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFPendingDecisionTaskCountCmdlet.TaskList_Name">
            <summary>
            <para>
            <para>The name of the task list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFPendingDecisionTaskCountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PendingTaskCount'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.CountPendingDecisionTasksResponse).
            Specifying the name of a property of type Amazon.SimpleWorkflow.Model.CountPendingDecisionTasksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFPendingDecisionTaskCountCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TaskList_Name parameter.
            The -PassThru parameter is deprecated, use -Select '^TaskList_Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.GetSWFResourceTagCmdlet">
            <summary>
            List tags for a given domain.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the Amazon SWF domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.SimpleWorkflow.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowExecutionCmdlet">
            <summary>
            Returns information about the specified workflow execution including its type and
            some statistics.
            
             <note><para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para></note><para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowExecutionCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain containing the workflow execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowExecutionCmdlet.Execution_RunId">
            <summary>
            <para>
            <para>A system-generated unique identifier for the workflow execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowExecutionCmdlet.Execution_WorkflowId">
            <summary>
            <para>
            <para>The user defined identifier associated with the workflow execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WorkflowExecutionDetail'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.DescribeWorkflowExecutionResponse).
            Specifying the name of a property of type Amazon.SimpleWorkflow.Model.DescribeWorkflowExecutionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Execution_RunId parameter.
            The -PassThru parameter is deprecated, use -Select '^Execution_RunId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowExecutionHistoryCmdlet">
            <summary>
            Returns the history of the specified workflow execution. The results may be split
            into multiple pages. To retrieve subsequent pages, make the call again using the <code>nextPageToken</code>
            returned by the initial call.
            
             <note><para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para></note><para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowExecutionHistoryCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain containing the workflow execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowExecutionHistoryCmdlet.ReverseOrder">
            <summary>
            <para>
            <para>When set to <code>true</code>, returns the events in reverse order. By default the
            results are returned in ascending order of the <code>eventTimeStamp</code> of the
            events.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowExecutionHistoryCmdlet.Execution_RunId">
            <summary>
            <para>
            <para>A system-generated unique identifier for the workflow execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowExecutionHistoryCmdlet.Execution_WorkflowId">
            <summary>
            <para>
            <para>The user defined identifier associated with the workflow execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowExecutionHistoryCmdlet.MaximumPageSize">
            <summary>
            <para>
            <para>The maximum number of results that are returned per call. Use <code>nextPageToken</code>
            to obtain further pages of results. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowExecutionHistoryCmdlet.NextPageToken">
            <summary>
            <para>
            <para>If <code>NextPageToken</code> is returned there are more results available. The value
            of <code>NextPageToken</code> is a unique pagination token for each page. Make the
            call again using the returned token to retrieve the next page. Keep all other arguments
            unchanged. Each pagination token expires after 60 seconds. Using an expired pagination
            token will return a <code>400</code> error: "<code>Specified token has exceeded its
            maximum lifetime</code>". </para><para>The configured <code>maximumPageSize</code> determines how many results can be returned
            in a single call. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextPageToken $null' for the first call and '-NextPageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowExecutionHistoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'History.Events'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.GetWorkflowExecutionHistoryResponse).
            Specifying the name of a property of type Amazon.SimpleWorkflow.Model.GetWorkflowExecutionHistoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowExecutionHistoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Execution_RunId parameter.
            The -PassThru parameter is deprecated, use -Select '^Execution_RunId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowExecutionHistoryCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextPageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowTypeCmdlet">
            <summary>
            Returns information about the specified <i>workflow type</i>. This includes configuration
            settings specified when the type was registered and other information such as creation
            date, current status, etc.
            
             
            <para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para><ul><li><para><code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para></li><li><para><code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para></li></ul></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowTypeCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain in which this workflow type is registered.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowTypeCmdlet.WorkflowType_Name">
            <summary>
            <para>
            <para> The name of the workflow type.</para><note><para>The combination of workflow type name and version must be unique with in a domain.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowTypeCmdlet.WorkflowType_Version">
            <summary>
            <para>
            <para> The version of the workflow type.</para><note><para>The combination of workflow type name and version must be unique with in a domain.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WorkflowTypeDetail'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.DescribeWorkflowTypeResponse).
            Specifying the name of a property of type Amazon.SimpleWorkflow.Model.DescribeWorkflowTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkflowType_Name parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkflowType_Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowTypeListCmdlet">
            <summary>
            Returns information about workflow types in the specified domain. The results may
            be split into multiple pages that can be retrieved by making the call repeatedly.
            
             
            <para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowTypeListCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain in which the workflow types have been registered.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowTypeListCmdlet.Name">
            <summary>
            <para>
            <para>If specified, lists the workflow type with this name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowTypeListCmdlet.RegistrationStatus">
            <summary>
            <para>
            <para>Specifies the registration status of the workflow types to list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowTypeListCmdlet.ReverseOrder">
            <summary>
            <para>
            <para>When set to <code>true</code>, returns the results in reverse order. By default the
            results are returned in ascending alphabetical order of the <code>name</code> of the
            workflow types.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowTypeListCmdlet.MaximumPageSize">
            <summary>
            <para>
            <para>The maximum number of results that are returned per call. Use <code>nextPageToken</code>
            to obtain further pages of results. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowTypeListCmdlet.NextPageToken">
            <summary>
            <para>
            <para>If <code>NextPageToken</code> is returned there are more results available. The value
            of <code>NextPageToken</code> is a unique pagination token for each page. Make the
            call again using the returned token to retrieve the next page. Keep all other arguments
            unchanged. Each pagination token expires after 60 seconds. Using an expired pagination
            token will return a <code>400</code> error: "<code>Specified token has exceeded its
            maximum lifetime</code>". </para><para>The configured <code>maximumPageSize</code> determines how many results can be returned
            in a single call. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextPageToken $null' for the first call and '-NextPageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowTypeListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WorkflowTypeInfos.TypeInfos'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.ListWorkflowTypesResponse).
            Specifying the name of a property of type Amazon.SimpleWorkflow.Model.ListWorkflowTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowTypeListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Domain parameter.
            The -PassThru parameter is deprecated, use -Select '^Domain' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.GetSWFWorkflowTypeListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextPageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.NewSWFActivityTypeCmdlet">
            <summary>
            Registers a new <i>activity type</i> along with its configuration settings in the
            specified domain.
            
             <important><para>
            A <code>TypeAlreadyExists</code> fault is returned if the type already exists in the
            domain. You cannot change any configuration settings of the type after its registration,
            and it must be registered as a new version.
            </para></important><para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para><ul><li><para><code>defaultTaskList.name</code>: String constraint. The key is <code>swf:defaultTaskList.name</code>.
            </para></li><li><para><code>name</code>: String constraint. The key is <code>swf:name</code>.
            </para></li><li><para><code>version</code>: String constraint. The key is <code>swf:version</code>.
            </para></li></ul></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFActivityTypeCmdlet.DefaultTaskHeartbeatTimeout">
            <summary>
            <para>
            <para>If set, specifies the default maximum time before which a worker processing a task
            of this type must report progress by calling <a>RecordActivityTaskHeartbeat</a>. If
            the timeout is exceeded, the activity task is automatically timed out. This default
            can be overridden when scheduling an activity task using the <code>ScheduleActivityTask</code><a>Decision</a>. If the activity worker subsequently attempts to record a heartbeat
            or returns a result, the activity worker receives an <code>UnknownResource</code>
            fault. In this case, Amazon SWF no longer considers the activity task to be valid;
            the activity worker should clean up the activity task.</para><para>The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFActivityTypeCmdlet.DefaultTaskPriority">
            <summary>
            <para>
            <para>The default task priority to assign to the activity type. If not assigned, then <code>0</code>
            is used. Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code>
            (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate
            higher priority.</para><para>For more information about setting task priority, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting
            Task Priority</a> in the <i>in the <i>Amazon SWF Developer Guide</i>.</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFActivityTypeCmdlet.DefaultTaskScheduleToCloseTimeout">
            <summary>
            <para>
            <para>If set, specifies the default maximum duration for a task of this activity type. This
            default can be overridden when scheduling an activity task using the <code>ScheduleActivityTask</code><a>Decision</a>.</para><para>The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFActivityTypeCmdlet.DefaultTaskScheduleToStartTimeout">
            <summary>
            <para>
            <para>If set, specifies the default maximum duration that a task of this activity type can
            wait before being assigned to a worker. This default can be overridden when scheduling
            an activity task using the <code>ScheduleActivityTask</code><a>Decision</a>.</para><para>The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFActivityTypeCmdlet.DefaultTaskStartToCloseTimeout">
            <summary>
            <para>
            <para>If set, specifies the default maximum duration that a worker can take to process tasks
            of this activity type. This default can be overridden when scheduling an activity
            task using the <code>ScheduleActivityTask</code><a>Decision</a>.</para><para>The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFActivityTypeCmdlet.Description">
            <summary>
            <para>
            <para>A textual description of the activity type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFActivityTypeCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain in which this activity is to be registered.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFActivityTypeCmdlet.DefaultTaskList_Name">
            <summary>
            <para>
            <para>The name of the task list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFActivityTypeCmdlet.Name">
            <summary>
            <para>
            <para>The name of the activity type within the domain.</para><para>The specified string must not start or end with whitespace. It must not contain a
            <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or
            any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>).
            Also, it must not <i>be</i> the literal string <code>arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFActivityTypeCmdlet.Version">
            <summary>
            <para>
            <para>The version of the activity type.</para><note><para>The activity type consists of the name and version, the combination of which must
            be unique within the domain.</para></note><para>The specified string must not start or end with whitespace. It must not contain a
            <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or
            any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>).
            Also, it must not <i>be</i> the literal string <code>arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFActivityTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.RegisterActivityTypeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFActivityTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFActivityTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.NewSWFDomainCmdlet">
            <summary>
            Registers a new domain.
            
             
            <para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            You cannot use an IAM policy to control domain access for this action. The name of
            the domain being registered is available as the resource of this action.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFDomainCmdlet.Description">
            <summary>
            <para>
            <para>A text description of the domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFDomainCmdlet.Name">
            <summary>
            <para>
            <para>Name of the domain to register. The name must be unique in the region that the domain
            is registered in.</para><para>The specified string must not start or end with whitespace. It must not contain a
            <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or
            any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>).
            Also, it must not <i>be</i> the literal string <code>arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFDomainCmdlet.Tag">
            <summary>
            <para>
            <para>Tags to be added when registering a domain.</para><para>Tags may only contain unicode letters, digits, whitespace, or these symbols: <code>_
            . : / = + - @</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFDomainCmdlet.WorkflowExecutionRetentionPeriodInDay">
            <summary>
            <para>
            <para>The duration (in days) that records and histories of workflow executions on the domain
            should be kept by the service. After the retention period, the workflow execution
            isn't available in the results of visibility calls.</para><para>If you pass the value <code>NONE</code> or <code>0</code> (zero), then the workflow
            execution history isn't retained. As soon as the workflow execution completes, the
            execution record and its history are deleted.</para><para>The maximum workflow execution retention period is 90 days. For more information about
            Amazon SWF service limits, see: <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-limits.html">Amazon
            SWF Service Limits</a> in the <i>Amazon SWF Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.RegisterDomainResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFDomainCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.NewSWFWorkflowTypeCmdlet">
            <summary>
            Registers a new <i>workflow type</i> and its configuration settings in the specified
            domain.
            
             
            <para>
            The retention period for the workflow history is set by the <a>RegisterDomain</a>
            action.
            </para><important><para>
            If the type already exists, then a <code>TypeAlreadyExists</code> fault is returned.
            You cannot change the configuration settings of a workflow type once it is registered
            and it must be registered as a new version.
            </para></important><para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para><ul><li><para><code>defaultTaskList.name</code>: String constraint. The key is <code>swf:defaultTaskList.name</code>.
            </para></li><li><para><code>name</code>: String constraint. The key is <code>swf:name</code>.
            </para></li><li><para><code>version</code>: String constraint. The key is <code>swf:version</code>.
            </para></li></ul></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFWorkflowTypeCmdlet.DefaultChildPolicy">
            <summary>
            <para>
            <para>If set, specifies the default policy to use for the child workflow executions when
            a workflow execution of this type is terminated, by calling the <a>TerminateWorkflowExecution</a>
            action explicitly or due to an expired timeout. This default can be overridden when
            starting a workflow execution using the <a>StartWorkflowExecution</a> action or the
            <code>StartChildWorkflowExecution</code><a>Decision</a>.</para><para>The supported child policies are:</para><ul><li><para><code>TERMINATE</code> – The child executions are terminated.</para></li><li><para><code>REQUEST_CANCEL</code> – A request to cancel is attempted for each child execution
            by recording a <code>WorkflowExecutionCancelRequested</code> event in its history.
            It is up to the decider to take appropriate actions when it receives an execution
            history with this event.</para></li><li><para><code>ABANDON</code> – No action is taken. The child executions continue to run.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFWorkflowTypeCmdlet.DefaultExecutionStartToCloseTimeout">
            <summary>
            <para>
            <para>If set, specifies the default maximum duration for executions of this workflow type.
            You can override this default when starting an execution through the <a>StartWorkflowExecution</a>
            Action or <code>StartChildWorkflowExecution</code><a>Decision</a>.</para><para>The duration is specified in seconds; an integer greater than or equal to 0. Unlike
            some of the other timeout parameters in Amazon SWF, you cannot specify a value of
            "NONE" for <code>defaultExecutionStartToCloseTimeout</code>; there is a one-year max
            limit on the time that a workflow execution can run. Exceeding this limit always causes
            the workflow execution to time out.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFWorkflowTypeCmdlet.DefaultLambdaRole">
            <summary>
            <para>
            <para>The default IAM role attached to this workflow type.</para><note><para>Executions of this workflow type need IAM roles to invoke Lambda functions. If you
            don't specify an IAM role when you start this workflow type, the default Lambda role
            is attached to the execution. For more information, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html">https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html</a>
            in the <i>Amazon SWF Developer Guide</i>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFWorkflowTypeCmdlet.DefaultTaskPriority">
            <summary>
            <para>
            <para>The default task priority to assign to the workflow type. If not assigned, then <code>0</code>
            is used. Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code>
            (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate
            higher priority.</para><para>For more information about setting task priority, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting
            Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFWorkflowTypeCmdlet.DefaultTaskStartToCloseTimeout">
            <summary>
            <para>
            <para>If set, specifies the default maximum duration of decision tasks for this workflow
            type. This default can be overridden when starting a workflow execution using the
            <a>StartWorkflowExecution</a> action or the <code>StartChildWorkflowExecution</code><a>Decision</a>.</para><para>The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFWorkflowTypeCmdlet.Description">
            <summary>
            <para>
            <para>Textual description of the workflow type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFWorkflowTypeCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain in which to register the workflow type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFWorkflowTypeCmdlet.DefaultTaskList_Name">
            <summary>
            <para>
            <para>The name of the task list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFWorkflowTypeCmdlet.Name">
            <summary>
            <para>
            <para>The name of the workflow type.</para><para>The specified string must not start or end with whitespace. It must not contain a
            <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or
            any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>).
            Also, it must not <i>be</i> the literal string <code>arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFWorkflowTypeCmdlet.Version">
            <summary>
            <para>
            <para>The version of the workflow type.</para><note><para>The workflow type consists of the name and version, the combination of which must
            be unique within the domain. To get a list of all currently registered workflow types,
            use the <a>ListWorkflowTypes</a> action.</para></note><para>The specified string must not start or end with whitespace. It must not contain a
            <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or
            any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>).
            Also, it must not <i>be</i> the literal string <code>arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFWorkflowTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.RegisterWorkflowTypeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFWorkflowTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.NewSWFWorkflowTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFActivityTypeCmdlet">
            <summary>
            Deprecates the specified <i>activity type</i>. After an activity type has been deprecated,
            you cannot create new tasks of that activity type. Tasks of this type that were scheduled
            before the type was deprecated continue to run.
            
             <note><para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para></note><para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para><ul><li><para><code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.
            </para></li><li><para><code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.
            </para></li></ul></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFActivityTypeCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain in which the activity type is registered.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFActivityTypeCmdlet.ActivityType_Name">
            <summary>
            <para>
            <para>The name of this activity.</para><note><para>The combination of activity type name and version must be unique within a domain.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFActivityTypeCmdlet.ActivityType_Version">
            <summary>
            <para>
            <para>The version of this activity.</para><note><para>The combination of activity type name and version must be unique with in a domain.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFActivityTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.DeprecateActivityTypeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFActivityTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ActivityType_Name parameter.
            The -PassThru parameter is deprecated, use -Select '^ActivityType_Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFActivityTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFDomainCmdlet">
            <summary>
            Deprecates the specified domain. After a domain has been deprecated it cannot be used
            to create new workflow executions or register new types. However, you can still use
            visibility actions on this domain. Deprecating a domain also deprecates all activity
            and workflow types registered in the domain. Executions that were started before the
            domain was deprecated continues to run.
            
             <note><para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para></note><para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFDomainCmdlet.Name">
            <summary>
            <para>
            <para>The name of the domain to deprecate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.DeprecateDomainResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFDomainCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFResourceTagCmdlet">
            <summary>
            Remove a tag from a Amazon SWF domain.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the Amazon SWF domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The list of tags to remove from the Amazon SWF domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFWorkflowTypeCmdlet">
            <summary>
            Deprecates the specified <i>workflow type</i>. After a workflow type has been deprecated,
            you cannot create new executions of that type. Executions that were started before
            the type was deprecated continues to run. A deprecated workflow type may still be
            used when calling visibility actions.
            
             <note><para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para></note><para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para><ul><li><para><code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para></li><li><para><code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para></li></ul></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFWorkflowTypeCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain in which the workflow type is registered.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFWorkflowTypeCmdlet.WorkflowType_Name">
            <summary>
            <para>
            <para> The name of the workflow type.</para><note><para>The combination of workflow type name and version must be unique with in a domain.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFWorkflowTypeCmdlet.WorkflowType_Version">
            <summary>
            <para>
            <para> The version of the workflow type.</para><note><para>The combination of workflow type name and version must be unique with in a domain.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFWorkflowTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.DeprecateWorkflowTypeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFWorkflowTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkflowType_Name parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkflowType_Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RemoveSWFWorkflowTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.RequestSWFCancelWorkflowExecutionCmdlet">
            <summary>
            Records a <code>WorkflowExecutionCancelRequested</code> event in the currently running
            workflow execution identified by the given domain, workflowId, and runId. This logically
            requests the cancellation of the workflow execution as a whole. It is up to the decider
            to take appropriate actions when it receives an execution history with this event.
            
             <note><para>
            If the runId isn't specified, the <code>WorkflowExecutionCancelRequested</code> event
            is recorded in the history of the current open workflow execution with the specified
            workflowId in the domain.
            </para></note><note><para>
            Because this action allows the workflow to properly clean up and gracefully close,
            it should be used instead of <a>TerminateWorkflowExecution</a> when possible.
            </para></note><para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RequestSWFCancelWorkflowExecutionCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain containing the workflow execution to cancel.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RequestSWFCancelWorkflowExecutionCmdlet.RunId">
            <summary>
            <para>
            <para>The runId of the workflow execution to cancel.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RequestSWFCancelWorkflowExecutionCmdlet.WorkflowId">
            <summary>
            <para>
            <para>The workflowId of the workflow execution to cancel.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RequestSWFCancelWorkflowExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.RequestCancelWorkflowExecutionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RequestSWFCancelWorkflowExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkflowId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkflowId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RequestSWFCancelWorkflowExecutionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.RestoreSWFActivityTypeCmdlet">
            <summary>
            Undeprecates a previously deprecated <i>activity type</i>. After an activity type
            has been undeprecated, you can create new tasks of that activity type.
            
             <note><para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para></note><para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para><ul><li><para><code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.
            </para></li><li><para><code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.
            </para></li></ul></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RestoreSWFActivityTypeCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain of the deprecated activity type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RestoreSWFActivityTypeCmdlet.ActivityType_Name">
            <summary>
            <para>
            <para>The name of this activity.</para><note><para>The combination of activity type name and version must be unique within a domain.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RestoreSWFActivityTypeCmdlet.ActivityType_Version">
            <summary>
            <para>
            <para>The version of this activity.</para><note><para>The combination of activity type name and version must be unique with in a domain.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RestoreSWFActivityTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.UndeprecateActivityTypeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RestoreSWFActivityTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Domain parameter.
            The -PassThru parameter is deprecated, use -Select '^Domain' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RestoreSWFActivityTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.RestoreSWFDomainCmdlet">
            <summary>
            Undeprecates a previously deprecated domain. After a domain has been undeprecated
            it can be used to create new workflow executions or register new types.
            
             <note><para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para></note><para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RestoreSWFDomainCmdlet.Name">
            <summary>
            <para>
            <para>The name of the domain of the deprecated workflow type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RestoreSWFDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.UndeprecateDomainResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RestoreSWFDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RestoreSWFDomainCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.RestoreSWFWorkflowTypeCmdlet">
            <summary>
            Undeprecates a previously deprecated <i>workflow type</i>. After a workflow type has
            been undeprecated, you can create new executions of that type. 
            
             <note><para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para></note><para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para><ul><li><para><code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para></li><li><para><code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para></li></ul></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RestoreSWFWorkflowTypeCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain of the deprecated workflow type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RestoreSWFWorkflowTypeCmdlet.WorkflowType_Name">
            <summary>
            <para>
            <para> The name of the workflow type.</para><note><para>The combination of workflow type name and version must be unique with in a domain.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RestoreSWFWorkflowTypeCmdlet.WorkflowType_Version">
            <summary>
            <para>
            <para> The version of the workflow type.</para><note><para>The combination of workflow type name and version must be unique with in a domain.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RestoreSWFWorkflowTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.UndeprecateWorkflowTypeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RestoreSWFWorkflowTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Domain parameter.
            The -PassThru parameter is deprecated, use -Select '^Domain' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.RestoreSWFWorkflowTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.SendSWFSignalToWorkflowExecutionCmdlet">
            <summary>
            Records a <code>WorkflowExecutionSignaled</code> event in the workflow execution history
            and creates a decision task for the workflow execution identified by the given domain,
            workflowId and runId. The event is recorded with the specified user defined signalName
            and input (if provided).
            
             <note><para>
            If a runId isn't specified, then the <code>WorkflowExecutionSignaled</code> event
            is recorded in the history of the current open workflow with the matching workflowId
            in the domain.
            </para></note><note><para>
            If the specified workflow execution isn't open, this method fails with <code>UnknownResource</code>.
            </para></note><para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.SendSWFSignalToWorkflowExecutionCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain containing the workflow execution to signal.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.SendSWFSignalToWorkflowExecutionCmdlet.Input">
            <summary>
            <para>
            <para>Data to attach to the <code>WorkflowExecutionSignaled</code> event in the target workflow
            execution's history.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.SendSWFSignalToWorkflowExecutionCmdlet.RunId">
            <summary>
            <para>
            <para>The runId of the workflow execution to signal.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.SendSWFSignalToWorkflowExecutionCmdlet.SignalName">
            <summary>
            <para>
            <para>The name of the signal. This name must be meaningful to the target workflow.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.SendSWFSignalToWorkflowExecutionCmdlet.WorkflowId">
            <summary>
            <para>
            <para>The workflowId of the workflow execution to signal.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.SendSWFSignalToWorkflowExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.SignalWorkflowExecutionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.SendSWFSignalToWorkflowExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SignalName parameter.
            The -PassThru parameter is deprecated, use -Select '^SignalName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.SendSWFSignalToWorkflowExecutionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.StartSWFWorkflowExecutionCmdlet">
            <summary>
            Starts an execution of the workflow type in the specified domain using the provided
            <code>workflowId</code> and input data.
            
             
            <para>
            This action returns the newly started workflow execution.
            </para><para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para><ul><li><para><code>tagList.member.0</code>: The key is <code>swf:tagList.member.0</code>.
            </para></li><li><para><code>tagList.member.1</code>: The key is <code>swf:tagList.member.1</code>.
            </para></li><li><para><code>tagList.member.2</code>: The key is <code>swf:tagList.member.2</code>.
            </para></li><li><para><code>tagList.member.3</code>: The key is <code>swf:tagList.member.3</code>.
            </para></li><li><para><code>tagList.member.4</code>: The key is <code>swf:tagList.member.4</code>.
            </para></li><li><para><code>taskList</code>: String constraint. The key is <code>swf:taskList.name</code>.
            </para></li><li><para><code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para></li><li><para><code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para></li></ul></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StartSWFWorkflowExecutionCmdlet.ChildPolicy">
            <summary>
            <para>
            <para>If set, specifies the policy to use for the child workflow executions of this workflow
            execution if it is terminated, by calling the <a>TerminateWorkflowExecution</a> action
            explicitly or due to an expired timeout. This policy overrides the default child policy
            specified when registering the workflow type using <a>RegisterWorkflowType</a>.</para><para>The supported child policies are:</para><ul><li><para><code>TERMINATE</code> – The child executions are terminated.</para></li><li><para><code>REQUEST_CANCEL</code> – A request to cancel is attempted for each child execution
            by recording a <code>WorkflowExecutionCancelRequested</code> event in its history.
            It is up to the decider to take appropriate actions when it receives an execution
            history with this event.</para></li><li><para><code>ABANDON</code> – No action is taken. The child executions continue to run.</para></li></ul><note><para>A child policy for this workflow execution must be specified either as a default for
            the workflow type or through this parameter. If neither this parameter is set nor
            a default child policy was specified at registration time then a fault is returned.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StartSWFWorkflowExecutionCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain in which the workflow execution is created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StartSWFWorkflowExecutionCmdlet.ExecutionStartToCloseTimeout">
            <summary>
            <para>
            <para>The total duration for this workflow execution. This overrides the defaultExecutionStartToCloseTimeout
            specified when registering the workflow type.</para><para>The duration is specified in seconds; an integer greater than or equal to <code>0</code>.
            Exceeding this limit causes the workflow execution to time out. Unlike some of the
            other timeout parameters in Amazon SWF, you cannot specify a value of "NONE" for this
            timeout; there is a one-year max limit on the time that a workflow execution can run.</para><note><para>An execution start-to-close timeout must be specified either through this parameter
            or as a default when the workflow type is registered. If neither this parameter nor
            a default execution start-to-close timeout is specified, a fault is returned.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StartSWFWorkflowExecutionCmdlet.Input">
            <summary>
            <para>
            <para>The input for the workflow execution. This is a free form string which should be meaningful
            to the workflow you are starting. This <code>input</code> is made available to the
            new workflow execution in the <code>WorkflowExecutionStarted</code> history event.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StartSWFWorkflowExecutionCmdlet.LambdaRole">
            <summary>
            <para>
            <para>The IAM role to attach to this workflow execution.</para><note><para>Executions of this workflow type need IAM roles to invoke Lambda functions. If you
            don't attach an IAM role, any attempt to schedule a Lambda task fails. This results
            in a <code>ScheduleLambdaFunctionFailed</code> history event. For more information,
            see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html">https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html</a>
            in the <i>Amazon SWF Developer Guide</i>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StartSWFWorkflowExecutionCmdlet.TaskList_Name">
            <summary>
            <para>
            <para>The name of the task list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StartSWFWorkflowExecutionCmdlet.WorkflowType_Name">
            <summary>
            <para>
            <para> The name of the workflow type.</para><note><para>The combination of workflow type name and version must be unique with in a domain.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StartSWFWorkflowExecutionCmdlet.TagList">
            <summary>
            <para>
            <para>The list of tags to associate with the workflow execution. You can specify a maximum
            of 5 tags. You can list workflow executions with a specific tag by calling <a>ListOpenWorkflowExecutions</a>
            or <a>ListClosedWorkflowExecutions</a> and specifying a <a>TagFilter</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StartSWFWorkflowExecutionCmdlet.TaskPriority">
            <summary>
            <para>
            <para>The task priority to use for this workflow execution. This overrides any default priority
            that was assigned when the workflow type was registered. If not set, then the default
            task priority for the workflow type is used. Valid values are integers that range
            from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code>
            (2147483647). Higher numbers indicate higher priority.</para><para>For more information about setting task priority, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting
            Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StartSWFWorkflowExecutionCmdlet.TaskStartToCloseTimeout">
            <summary>
            <para>
            <para>Specifies the maximum duration of decision tasks for this workflow execution. This
            parameter overrides the <code>defaultTaskStartToCloseTimout</code> specified when
            registering the workflow type using <a>RegisterWorkflowType</a>.</para><para>The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.</para><note><para>A task start-to-close timeout for this workflow execution must be specified either
            as a default for the workflow type or through this parameter. If neither this parameter
            is set nor a default task start-to-close timeout was specified at registration time
            then a fault is returned.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StartSWFWorkflowExecutionCmdlet.WorkflowType_Version">
            <summary>
            <para>
            <para> The version of the workflow type.</para><note><para>The combination of workflow type name and version must be unique with in a domain.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StartSWFWorkflowExecutionCmdlet.WorkflowId">
            <summary>
            <para>
            <para>The user defined identifier associated with the workflow execution. You can use this
            to associate a custom identifier with the workflow execution. You may specify the
            same identifier if a workflow execution is logically a <i>restart</i> of a previous
            execution. You cannot have two open workflow executions with the same <code>workflowId</code>
            at the same time within the same domain.</para><para>The specified string must not start or end with whitespace. It must not contain a
            <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or
            any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>).
            Also, it must not <i>be</i> the literal string <code>arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StartSWFWorkflowExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Run.RunId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.StartWorkflowExecutionResponse).
            Specifying the name of a property of type Amazon.SimpleWorkflow.Model.StartWorkflowExecutionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StartSWFWorkflowExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkflowId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkflowId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StartSWFWorkflowExecutionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SWF.StopSWFWorkflowExecutionCmdlet">
            <summary>
            Records a <code>WorkflowExecutionTerminated</code> event and forces closure of the
            workflow execution identified by the given domain, runId, and workflowId. The child
            policy, registered with the workflow type or specified when starting this execution,
            is applied to any open child workflow executions of this workflow execution.
            
             <important><para>
            If the identified workflow execution was in progress, it is terminated immediately.
            </para></important><note><para>
            If a runId isn't specified, then the <code>WorkflowExecutionTerminated</code> event
            is recorded in the history of the current open workflow with the matching workflowId
            in the domain.
            </para></note><note><para>
            You should consider using <a>RequestCancelWorkflowExecution</a> action instead because
            it allows the workflow to gracefully close while <a>TerminateWorkflowExecution</a>
            doesn't.
            </para></note><para><b>Access Control</b></para><para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para><ul><li><para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para></li><li><para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para></li><li><para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para></li></ul><para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StopSWFWorkflowExecutionCmdlet.ChildPolicy">
            <summary>
            <para>
            <para>If set, specifies the policy to use for the child workflow executions of the workflow
            execution being terminated. This policy overrides the child policy specified for the
            workflow execution at registration time or when starting the execution.</para><para>The supported child policies are:</para><ul><li><para><code>TERMINATE</code> – The child executions are terminated.</para></li><li><para><code>REQUEST_CANCEL</code> – A request to cancel is attempted for each child execution
            by recording a <code>WorkflowExecutionCancelRequested</code> event in its history.
            It is up to the decider to take appropriate actions when it receives an execution
            history with this event.</para></li><li><para><code>ABANDON</code> – No action is taken. The child executions continue to run.</para></li></ul><note><para>A child policy for this workflow execution must be specified either as a default for
            the workflow type or through this parameter. If neither this parameter is set nor
            a default child policy was specified at registration time then a fault is returned.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StopSWFWorkflowExecutionCmdlet.Detail">
            <summary>
            <para>
            <para> Details for terminating the workflow execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StopSWFWorkflowExecutionCmdlet.Domain">
            <summary>
            <para>
            <para>The domain of the workflow execution to terminate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StopSWFWorkflowExecutionCmdlet.Reason">
            <summary>
            <para>
            <para> A descriptive reason for terminating the workflow execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StopSWFWorkflowExecutionCmdlet.RunId">
            <summary>
            <para>
            <para>The runId of the workflow execution to terminate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StopSWFWorkflowExecutionCmdlet.WorkflowId">
            <summary>
            <para>
            <para>The workflowId of the workflow execution to terminate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StopSWFWorkflowExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleWorkflow.Model.TerminateWorkflowExecutionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StopSWFWorkflowExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkflowId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkflowId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SWF.StopSWFWorkflowExecutionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
