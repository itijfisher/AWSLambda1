<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.RDS</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.AddRDSRoleToDBClusterCmdlet">
            <summary>
            Associates an Identity and Access Management (IAM) role from an Amazon Aurora DB cluster.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Integrating.Authorizing.html">Authorizing
            Amazon Aurora MySQL to Access Other AWS Services on Your Behalf</a> in the <i>Amazon
            Aurora User Guide</i>.
            
             <note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSRoleToDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The name of the DB cluster to associate the IAM role with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSRoleToDBClusterCmdlet.FeatureName">
            <summary>
            <para>
            <para>The name of the feature for the DB cluster that the IAM role is to be associated with.
            For the list of supported feature names, see <a>DBEngineVersion</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSRoleToDBClusterCmdlet.RoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the IAM role to associate with the Aurora DB cluster,
            for example <code>arn:aws:iam::123456789012:role/AuroraAccessRole</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSRoleToDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.AddRoleToDBClusterResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSRoleToDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSRoleToDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.AddRDSRoleToDBInstanceCmdlet">
            <summary>
            Associates an AWS Identity and Access Management (IAM) role with a DB instance.
            
             <note><para>
            To add a role to a DB instance, the status of the DB instance must be <code>available</code>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSRoleToDBInstanceCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The name of the DB instance to associate the IAM role with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSRoleToDBInstanceCmdlet.FeatureName">
            <summary>
            <para>
            <para>The name of the feature for the DB instance that the IAM role is to be associated
            with. For the list of supported feature names, see <a>DBEngineVersion</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSRoleToDBInstanceCmdlet.RoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the IAM role to associate with the DB instance,
            for example <code>arn:aws:iam::123456789012:role/AccessRole</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSRoleToDBInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.AddRoleToDBInstanceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSRoleToDBInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RoleArn parameter.
            The -PassThru parameter is deprecated, use -Select '^RoleArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSRoleToDBInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.AddRDSSourceIdentifierToSubscriptionCmdlet">
            <summary>
            Adds a source identifier to an existing RDS event notification subscription.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSSourceIdentifierToSubscriptionCmdlet.SourceIdentifier">
            <summary>
            <para>
            <para>The identifier of the event source to be added.</para><para>Constraints:</para><ul><li><para>If the source type is a DB instance, then a <code>DBInstanceIdentifier</code> must
            be supplied.</para></li><li><para>If the source type is a DB security group, a <code>DBSecurityGroupName</code> must
            be supplied.</para></li><li><para>If the source type is a DB parameter group, a <code>DBParameterGroupName</code> must
            be supplied.</para></li><li><para>If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code> must be supplied.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSSourceIdentifierToSubscriptionCmdlet.SubscriptionName">
            <summary>
            <para>
            <para>The name of the RDS event notification subscription you want to add a source identifier
            to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSSourceIdentifierToSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventSubscription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.AddSourceIdentifierToSubscriptionResponse).
            Specifying the name of a property of type Amazon.RDS.Model.AddSourceIdentifierToSubscriptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSSourceIdentifierToSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubscriptionName parameter.
            The -PassThru parameter is deprecated, use -Select '^SubscriptionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSSourceIdentifierToSubscriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.AddRDSTagsToResourceCmdlet">
            <summary>
            Adds metadata tags to an Amazon RDS resource. These tags can also be used with cost
            allocation reporting to track cost associated with Amazon RDS resources, or used in
            a Condition statement in an IAM policy for Amazon RDS.
            
             
            <para>
            For an overview on tagging Amazon RDS resources, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html">Tagging
            Amazon RDS Resources</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSTagsToResourceCmdlet.ResourceName">
            <summary>
            <para>
            <para>The Amazon RDS resource that the tags are added to. This value is an Amazon Resource
            Name (ARN). For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing">
            Constructing an RDS Amazon Resource Name (ARN)</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSTagsToResourceCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the Amazon RDS resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSTagsToResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.AddTagsToResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSTagsToResourceCmdlet.PassThru">
            <summary>
            Returns the collection of tags that were added
            The -PassThru parameter is deprecated, use -Select instead. This parameter will be removed in future
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.AddRDSTagsToResourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.ConvertRDSReadReplicaDBClusterCmdlet">
            <summary>
            Promotes a read replica DB cluster to a standalone DB cluster.
            
             <note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ConvertRDSReadReplicaDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the DB cluster read replica to promote. This parameter isn't case-sensitive.
            </para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing DB cluster read replica.</para></li></ul><para>Example: <code>my-cluster-replica1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ConvertRDSReadReplicaDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.PromoteReadReplicaDBClusterResponse).
            Specifying the name of a property of type Amazon.RDS.Model.PromoteReadReplicaDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ConvertRDSReadReplicaDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ConvertRDSReadReplicaDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.ConvertRDSReadReplicaToStandaloneCmdlet">
            <summary>
            Promotes a read replica DB instance to a standalone DB instance.
            
             <note><ul><li><para>
            Backup duration is a function of the amount of changes to the database since the previous
            backup. If you plan to promote a read replica to a standalone instance, we recommend
            that you enable backups and complete at least one backup prior to promotion. In addition,
            a read replica cannot be promoted to a standalone instance when it is in the <code>backing-up</code>
            status. If you have enabled backups on your read replica, configure the automated
            backup window so that daily backups do not interfere with read replica promotion.
            </para></li><li><para>
            This command doesn't apply to Aurora MySQL and Aurora PostgreSQL.
            </para></li></ul></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ConvertRDSReadReplicaToStandaloneCmdlet.BackupRetentionPeriod">
            <summary>
            <para>
            <para>The number of days for which automated backups are retained. Setting this parameter
            to a positive number enables backups. Setting this parameter to 0 disables automated
            backups.</para><para>Default: 1</para><para>Constraints:</para><ul><li><para>Must be a value from 0 to 35.</para></li><li><para>Can't be set to 0 if the DB instance is a source to read replicas.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ConvertRDSReadReplicaToStandaloneCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The DB instance identifier. This value is stored as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing read replica DB instance.</para></li></ul><para>Example: <code>mydbinstance</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ConvertRDSReadReplicaToStandaloneCmdlet.PreferredBackupWindow">
            <summary>
            <para>
            <para> The daily time range during which automated backups are created if automated backups
            are enabled, using the <code>BackupRetentionPeriod</code> parameter. </para><para> The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html">
            Adjusting the Preferred Maintenance Window</a> in the <i>Amazon RDS User Guide.</i></para><para>Constraints:</para><ul><li><para>Must be in the format <code>hh24:mi-hh24:mi</code>.</para></li><li><para>Must be in Universal Coordinated Time (UTC).</para></li><li><para>Must not conflict with the preferred maintenance window.</para></li><li><para>Must be at least 30 minutes.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ConvertRDSReadReplicaToStandaloneCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.PromoteReadReplicaResponse).
            Specifying the name of a property of type Amazon.RDS.Model.PromoteReadReplicaResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ConvertRDSReadReplicaToStandaloneCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ConvertRDSReadReplicaToStandaloneCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBClusterParameterGroupCmdlet">
            <summary>
            Copies the specified DB cluster parameter group.
            
             <note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBClusterParameterGroupCmdlet.SourceDBClusterParameterGroupIdentifier">
            <summary>
            <para>
            <para>The identifier or Amazon Resource Name (ARN) for the source DB cluster parameter group.
            For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing">
            Constructing an ARN for Amazon RDS</a> in the <i>Amazon Aurora User Guide</i>. </para><para>Constraints:</para><ul><li><para>Must specify a valid DB cluster parameter group.</para></li><li><para>If the source DB cluster parameter group is in the same AWS Region as the copy, specify
            a valid DB parameter group identifier, for example <code>my-db-cluster-param-group</code>,
            or a valid ARN.</para></li><li><para>If the source DB parameter group is in a different AWS Region than the copy, specify
            a valid DB cluster parameter group ARN, for example <code>arn:aws:rds:us-east-1:123456789012:cluster-pg:custom-cluster-group1</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBClusterParameterGroupCmdlet.Tag">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBClusterParameterGroupCmdlet.TargetDBClusterParameterGroupDescription">
            <summary>
            <para>
            <para>A description for the copied DB cluster parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBClusterParameterGroupCmdlet.TargetDBClusterParameterGroupIdentifier">
            <summary>
            <para>
            <para>The identifier for the copied DB cluster parameter group.</para><para>Constraints:</para><ul><li><para>Can't be null, empty, or blank</para></li><li><para>Must contain from 1 to 255 letters, numbers, or hyphens</para></li><li><para>First character must be a letter</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens</para></li></ul><para>Example: <code>my-cluster-param-group1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterParameterGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CopyDBClusterParameterGroupResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CopyDBClusterParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceDBClusterParameterGroupIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceDBClusterParameterGroupIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBClusterParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBClusterSnapshotCmdlet">
            <summary>
            Copies a snapshot of a DB cluster.
            
             
            <para>
            To copy a DB cluster snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code>
            must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.
            </para><para>
            You can copy an encrypted DB cluster snapshot from another AWS Region. In that case,
            the AWS Region where you call the <code>CopyDBClusterSnapshot</code> action is the
            destination AWS Region for the encrypted DB cluster snapshot to be copied to. To copy
            an encrypted DB cluster snapshot from another AWS Region, you must provide the following
            values:
            </para><ul><li><para><code>KmsKeyId</code> - The AWS Key Management System (AWS KMS) key identifier for
            the key to use to encrypt the copy of the DB cluster snapshot in the destination AWS
            Region.
            </para></li><li><para><code>PreSignedUrl</code> - A URL that contains a Signature Version 4 signed request
            for the <code>CopyDBClusterSnapshot</code> action to be called in the source AWS Region
            where the DB cluster snapshot is copied from. The pre-signed URL must be a valid request
            for the <code>CopyDBClusterSnapshot</code> API action that can be executed in the
            source AWS Region that contains the encrypted DB cluster snapshot to be copied.
            </para><para>
            The pre-signed URL request must contain the following parameter values:
            </para><ul><li><para><code>KmsKeyId</code> - The KMS key identifier for the key to use to encrypt the
            copy of the DB cluster snapshot in the destination AWS Region. This is the same identifier
            for both the <code>CopyDBClusterSnapshot</code> action that is called in the destination
            AWS Region, and the action contained in the pre-signed URL.
            </para></li><li><para><code>DestinationRegion</code> - The name of the AWS Region that the DB cluster snapshot
            is to be created in.
            </para></li><li><para><code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier
            for the encrypted DB cluster snapshot to be copied. This identifier must be in the
            Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are
            copying an encrypted DB cluster snapshot from the us-west-2 AWS Region, then your
            <code>SourceDBClusterSnapshotIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:cluster-snapshot:aurora-cluster1-snapshot-20161115</code>.
            </para></li></ul><para>
            To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">
            Authenticating Requests: Using Query Parameters (AWS Signature Version 4)</a> and
            <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">
            Signature Version 4 Signing Process</a>.
            </para><note><para>
            If you are using an AWS SDK tool or the AWS CLI, you can specify <code>SourceRegion</code>
            (or <code>--source-region</code> for the AWS CLI) instead of specifying <code>PreSignedUrl</code>
            manually. Specifying <code>SourceRegion</code> autogenerates a pre-signed URL that
            is a valid request for the operation that can be executed in the source AWS Region.
            </para></note></li><li><para><code>TargetDBClusterSnapshotIdentifier</code> - The identifier for the new copy
            of the DB cluster snapshot in the destination AWS Region.
            </para></li><li><para><code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier
            for the encrypted DB cluster snapshot to be copied. This identifier must be in the
            ARN format for the source AWS Region and is the same value as the <code>SourceDBClusterSnapshotIdentifier</code>
            in the pre-signed URL. 
            </para></li></ul><para>
            To cancel the copy operation once it is in progress, delete the target DB cluster
            snapshot identified by <code>TargetDBClusterSnapshotIdentifier</code> while that DB
            cluster snapshot is in "copying" status.
            </para><para>
            For more information on copying encrypted DB cluster snapshots from one AWS Region
            to another, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_CopySnapshot.html">
            Copying a Snapshot</a> in the <i>Amazon Aurora User Guide.</i></para><para>
            For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBClusterSnapshotCmdlet.CopyTag">
            <summary>
            <para>
            <para>A value that indicates whether to copy all tags from the source DB cluster snapshot
            to the target DB cluster snapshot. By default, tags are not copied.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBClusterSnapshotCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS KMS key ID for an encrypted DB cluster snapshot. The KMS key ID is the Amazon
            Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption
            key. </para><para>If you copy an encrypted DB cluster snapshot from your AWS account, you can specify
            a value for <code>KmsKeyId</code> to encrypt the copy with a new KMS encryption key.
            If you don't specify a value for <code>KmsKeyId</code>, then the copy of the DB cluster
            snapshot is encrypted with the same KMS key as the source DB cluster snapshot. </para><para>If you copy an encrypted DB cluster snapshot that is shared from another AWS account,
            then you must specify a value for <code>KmsKeyId</code>. </para><para>To copy an encrypted DB cluster snapshot to another AWS Region, you must set <code>KmsKeyId</code>
            to the KMS key ID you want to use to encrypt the copy of the DB cluster snapshot in
            the destination AWS Region. KMS encryption keys are specific to the AWS Region that
            they are created in, and you can't use encryption keys from one AWS Region in another
            AWS Region.</para><para>If you copy an unencrypted DB cluster snapshot and specify a value for the <code>KmsKeyId</code>
            parameter, an error is returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBClusterSnapshotCmdlet.PreSignedUrl">
            <summary>
            <para>
            <para>The URL that contains a Signature Version 4 signed request for the <code>CopyDBClusterSnapshot</code>
            API action in the AWS Region that contains the source DB cluster snapshot to copy.
            The <code>PreSignedUrl</code> parameter must be used when copying an encrypted DB
            cluster snapshot from another AWS Region. Don't specify <code>PreSignedUrl</code>
            when you are copying an encrypted DB cluster snapshot in the same AWS Region.</para><para>The pre-signed URL must be a valid request for the <code>CopyDBClusterSnapshot</code>
            API action that can be executed in the source AWS Region that contains the encrypted
            DB cluster snapshot to be copied. The pre-signed URL request must contain the following
            parameter values:</para><ul><li><para><code>KmsKeyId</code> - The AWS KMS key identifier for the key to use to encrypt
            the copy of the DB cluster snapshot in the destination AWS Region. This is the same
            identifier for both the <code>CopyDBClusterSnapshot</code> action that is called in
            the destination AWS Region, and the action contained in the pre-signed URL.</para></li><li><para><code>DestinationRegion</code> - The name of the AWS Region that the DB cluster snapshot
            is to be created in.</para></li><li><para><code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier
            for the encrypted DB cluster snapshot to be copied. This identifier must be in the
            Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are
            copying an encrypted DB cluster snapshot from the us-west-2 AWS Region, then your
            <code>SourceDBClusterSnapshotIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:cluster-snapshot:aurora-cluster1-snapshot-20161115</code>.</para></li></ul><para>To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">
            Authenticating Requests: Using Query Parameters (AWS Signature Version 4)</a> and
            <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">
            Signature Version 4 Signing Process</a>.</para><note><para>If you are using an AWS SDK tool or the AWS CLI, you can specify <code>SourceRegion</code>
            (or <code>--source-region</code> for the AWS CLI) instead of specifying <code>PreSignedUrl</code>
            manually. Specifying <code>SourceRegion</code> autogenerates a pre-signed URL that
            is a valid request for the operation that can be executed in the source AWS Region.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBClusterSnapshotCmdlet.SourceDBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier of the DB cluster snapshot to copy. This parameter isn't case-sensitive.</para><para>You can't copy an encrypted, shared DB cluster snapshot from one AWS Region to another.</para><para>Constraints:</para><ul><li><para>Must specify a valid system snapshot in the "available" state.</para></li><li><para>If the source snapshot is in the same AWS Region as the copy, specify a valid DB snapshot
            identifier.</para></li><li><para>If the source snapshot is in a different AWS Region than the copy, specify a valid
            DB cluster snapshot ARN. For more information, go to <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_CopySnapshot.html#USER_CopySnapshot.AcrossRegions">
            Copying Snapshots Across AWS Regions</a> in the <i>Amazon Aurora User Guide.</i></para></li></ul><para>Example: <code>my-cluster-snapshot1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBClusterSnapshotCmdlet.SourceRegion">
            <summary>
            <para>
             The SourceRegion for generating the PreSignedUrl property.
            
             If SourceRegion is set and the PreSignedUrl property is not,
             then PreSignedUrl will be automatically generated by the client.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBClusterSnapshotCmdlet.Tag">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBClusterSnapshotCmdlet.TargetDBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier of the new DB cluster snapshot to create from the source DB cluster
            snapshot. This parameter isn't case-sensitive.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>my-cluster-snapshot2</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBClusterSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterSnapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CopyDBClusterSnapshotResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CopyDBClusterSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBClusterSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceDBClusterSnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceDBClusterSnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBClusterSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBParameterGroupCmdlet">
            <summary>
            Copies the specified DB parameter group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBParameterGroupCmdlet.SourceDBParameterGroupIdentifier">
            <summary>
            <para>
            <para> The identifier or ARN for the source DB parameter group. For information about creating
            an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing">
            Constructing an ARN for Amazon RDS</a> in the <i>Amazon RDS User Guide</i>. </para><para>Constraints:</para><ul><li><para>Must specify a valid DB parameter group.</para></li><li><para>Must specify a valid DB parameter group identifier, for example <code>my-db-param-group</code>,
            or a valid ARN.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBParameterGroupCmdlet.Tag">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBParameterGroupCmdlet.TargetDBParameterGroupDescription">
            <summary>
            <para>
            <para>A description for the copied DB parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBParameterGroupCmdlet.TargetDBParameterGroupIdentifier">
            <summary>
            <para>
            <para>The identifier for the copied DB parameter group.</para><para>Constraints:</para><ul><li><para>Can't be null, empty, or blank</para></li><li><para>Must contain from 1 to 255 letters, numbers, or hyphens</para></li><li><para>First character must be a letter</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens</para></li></ul><para>Example: <code>my-db-parameter-group</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBParameterGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CopyDBParameterGroupResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CopyDBParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceDBParameterGroupIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceDBParameterGroupIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBSnapshotCmdlet">
            <summary>
            Copies the specified DB snapshot. The source DB snapshot must be in the "available"
            state.
            
             
            <para>
            You can copy a snapshot from one AWS Region to another. In that case, the AWS Region
            where you call the <code>CopyDBSnapshot</code> action is the destination AWS Region
            for the DB snapshot copy. 
            </para><para>
            For more information about copying snapshots, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopySnapshot.html#USER_CopyDBSnapshot">Copying
            a DB Snapshot</a> in the <i>Amazon RDS User Guide.</i></para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBSnapshotCmdlet.CopyTag">
            <summary>
            <para>
            <para>A value that indicates whether to copy all tags from the source DB snapshot to the
            target DB snapshot. By default, tags are not copied.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBSnapshotCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS KMS key ID for an encrypted DB snapshot. The KMS key ID is the Amazon Resource
            Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key. </para><para>If you copy an encrypted DB snapshot from your AWS account, you can specify a value
            for this parameter to encrypt the copy with a new KMS encryption key. If you don't
            specify a value for this parameter, then the copy of the DB snapshot is encrypted
            with the same KMS key as the source DB snapshot. </para><para>If you copy an encrypted DB snapshot that is shared from another AWS account, then
            you must specify a value for this parameter. </para><para>If you specify this parameter when you copy an unencrypted snapshot, the copy is encrypted.
            </para><para>If you copy an encrypted snapshot to a different AWS Region, then you must specify
            a KMS key for the destination AWS Region. KMS encryption keys are specific to the
            AWS Region that they are created in, and you can't use encryption keys from one AWS
            Region in another AWS Region. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBSnapshotCmdlet.OptionGroupName">
            <summary>
            <para>
            <para>The name of an option group to associate with the copy of the snapshot.</para><para>Specify this option if you are copying a snapshot from one AWS Region to another,
            and your DB instance uses a nondefault option group. If your source DB instance uses
            Transparent Data Encryption for Oracle or Microsoft SQL Server, you must specify this
            option when copying across AWS Regions. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopySnapshot.html#USER_CopySnapshot.Options">Option
            Group Considerations</a> in the <i>Amazon RDS User Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBSnapshotCmdlet.PreSignedUrl">
            <summary>
            <para>
            <para>The URL that contains a Signature Version 4 signed request for the <code>CopyDBSnapshot</code>
            API action in the source AWS Region that contains the source DB snapshot to copy.
            </para><para>You must specify this parameter when you copy an encrypted DB snapshot from another
            AWS Region by using the Amazon RDS API. Don't specify <code>PreSignedUrl</code> when
            you are copying an encrypted DB snapshot in the same AWS Region.</para><para>The presigned URL must be a valid request for the <code>CopyDBSnapshot</code> API
            action that can be executed in the source AWS Region that contains the encrypted DB
            snapshot to be copied. The presigned URL request must contain the following parameter
            values: </para><ul><li><para><code>DestinationRegion</code> - The AWS Region that the encrypted DB snapshot is
            copied to. This AWS Region is the same one where the <code>CopyDBSnapshot</code> action
            is called that contains this presigned URL. </para><para>For example, if you copy an encrypted DB snapshot from the us-west-2 AWS Region to
            the us-east-1 AWS Region, then you call the <code>CopyDBSnapshot</code> action in
            the us-east-1 AWS Region and provide a presigned URL that contains a call to the <code>CopyDBSnapshot</code>
            action in the us-west-2 AWS Region. For this example, the <code>DestinationRegion</code>
            in the presigned URL must be set to the us-east-1 AWS Region. </para></li><li><para><code>KmsKeyId</code> - The AWS KMS key identifier for the key to use to encrypt
            the copy of the DB snapshot in the destination AWS Region. This is the same identifier
            for both the <code>CopyDBSnapshot</code> action that is called in the destination
            AWS Region, and the action contained in the presigned URL. </para></li><li><para><code>SourceDBSnapshotIdentifier</code> - The DB snapshot identifier for the encrypted
            snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format
            for the source AWS Region. For example, if you are copying an encrypted DB snapshot
            from the us-west-2 AWS Region, then your <code>SourceDBSnapshotIdentifier</code> looks
            like the following example: <code>arn:aws:rds:us-west-2:123456789012:snapshot:mysql-instance1-snapshot-20161115</code>.
            </para></li></ul><para>To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">Authenticating
            Requests: Using Query Parameters (AWS Signature Version 4)</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
            Version 4 Signing Process</a>. </para><note><para>If you are using an AWS SDK tool or the AWS CLI, you can specify <code>SourceRegion</code>
            (or <code>--source-region</code> for the AWS CLI) instead of specifying <code>PreSignedUrl</code>
            manually. Specifying <code>SourceRegion</code> autogenerates a pre-signed URL that
            is a valid request for the operation that can be executed in the source AWS Region.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBSnapshotCmdlet.SourceDBSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier for the source DB snapshot.</para><para>If the source snapshot is in the same AWS Region as the copy, specify a valid DB snapshot
            identifier. For example, you might specify <code>rds:mysql-instance1-snapshot-20130805</code>.
            </para><para>If the source snapshot is in a different AWS Region than the copy, specify a valid
            DB snapshot ARN. For example, you might specify <code>arn:aws:rds:us-west-2:123456789012:snapshot:mysql-instance1-snapshot-20130805</code>.
            </para><para>If you are copying from a shared manual DB snapshot, this parameter must be the Amazon
            Resource Name (ARN) of the shared DB snapshot. </para><para>If you are copying an encrypted snapshot this parameter must be in the ARN format
            for the source AWS Region, and must match the <code>SourceDBSnapshotIdentifier</code>
            in the <code>PreSignedUrl</code> parameter. </para><para>Constraints:</para><ul><li><para>Must specify a valid system snapshot in the "available" state.</para></li></ul><para>Example: <code>rds:mydb-2012-04-02-00-01</code></para><para>Example: <code>arn:aws:rds:us-west-2:123456789012:snapshot:mysql-instance1-snapshot-20130805</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBSnapshotCmdlet.SourceRegion">
            <summary>
            <para>
             The SourceRegion for generating the PreSignedUrl property.
            
             If SourceRegion is set and the PreSignedUrl property is not,
             then PreSignedUrl will be automatically generated by the client.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBSnapshotCmdlet.Tag">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBSnapshotCmdlet.TargetDBSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier for the copy of the snapshot. </para><para>Constraints:</para><ul><li><para>Can't be null, empty, or blank</para></li><li><para>Must contain from 1 to 255 letters, numbers, or hyphens</para></li><li><para>First character must be a letter</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens</para></li></ul><para>Example: <code>my-db-snapshot</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBSnapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CopyDBSnapshotResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CopyDBSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceDBSnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceDBSnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSDBSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.CopyRDSOptionGroupCmdlet">
            <summary>
            Copies the specified option group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSOptionGroupCmdlet.SourceOptionGroupIdentifier">
            <summary>
            <para>
            <para>The identifier or ARN for the source option group. For information about creating
            an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing">
            Constructing an ARN for Amazon RDS</a> in the <i>Amazon RDS User Guide</i>. </para><para>Constraints:</para><ul><li><para>Must specify a valid option group.</para></li><li><para>If the source option group is in the same AWS Region as the copy, specify a valid
            option group identifier, for example <code>my-option-group</code>, or a valid ARN.</para></li><li><para>If the source option group is in a different AWS Region than the copy, specify a valid
            option group ARN, for example <code>arn:aws:rds:us-west-2:123456789012:og:special-options</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSOptionGroupCmdlet.Tag">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSOptionGroupCmdlet.TargetOptionGroupDescription">
            <summary>
            <para>
            <para>The description for the copied option group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSOptionGroupCmdlet.TargetOptionGroupIdentifier">
            <summary>
            <para>
            <para>The identifier for the copied option group.</para><para>Constraints:</para><ul><li><para>Can't be null, empty, or blank</para></li><li><para>Must contain from 1 to 255 letters, numbers, or hyphens</para></li><li><para>First character must be a letter</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens</para></li></ul><para>Example: <code>my-option-group</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSOptionGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OptionGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CopyOptionGroupResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CopyOptionGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSOptionGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceOptionGroupIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceOptionGroupIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.CopyRDSOptionGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.EditRDSCertificateCmdlet">
            <summary>
            Override the system-default Secure Sockets Layer/Transport Layer Security (SSL/TLS)
            certificate for Amazon RDS for new DB instances temporarily, or remove the override.
            
             
            <para>
            By using this operation, you can specify an RDS-approved SSL/TLS certificate for new
            DB instances that is different from the default certificate provided by RDS. You can
            also use this operation to remove the override, so that new DB instances use the default
            certificate provided by RDS.
            </para><para>
            You might need to override the default certificate in the following situations:
            </para><ul><li><para>
            You already migrated your applications to support the latest certificate authority
            (CA) certificate, but the new CA certificate is not yet the RDS default CA certificate
            for the specified AWS Region.
            </para></li><li><para>
            RDS has already moved to a new default CA certificate for the specified AWS Region,
            but you are still in the process of supporting the new CA certificate. In this case,
            you temporarily need additional time to finish your application changes.
            </para></li></ul><para>
            For more information about rotating your SSL/TLS certificate for RDS DB engines, see
            <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL-certificate-rotation.html">
            Rotating Your SSL/TLS Certificate</a> in the <i>Amazon RDS User Guide</i>.
            </para><para>
            For more information about rotating your SSL/TLS certificate for Aurora DB engines,
            see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL-certificate-rotation.html">
            Rotating Your SSL/TLS Certificate</a> in the <i>Amazon Aurora User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSCertificateCmdlet.CertificateIdentifier">
            <summary>
            <para>
            <para>The new default certificate identifier to override the current one with.</para><para>To determine the valid values, use the <code>describe-certificates</code> AWS CLI
            command or the <code>DescribeCertificates</code> API operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSCertificateCmdlet.RemoveCustomerOverride">
            <summary>
            <para>
            <para>A value that indicates whether to remove the override for the default certificate.
            If the override is removed, the default certificate is the system default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Certificate'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ModifyCertificatesResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ModifyCertificatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSCertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.EditRDSCurrentDBClusterCapacityCmdlet">
            <summary>
            Set the capacity of an Aurora Serverless DB cluster to a specific value.
            
             
            <para>
            Aurora Serverless scales seamlessly based on the workload on the DB cluster. In some
            cases, the capacity might not scale fast enough to meet a sudden change in workload,
            such as a large number of new transactions. Call <code>ModifyCurrentDBClusterCapacity</code>
            to set the capacity explicitly.
            </para><para>
            After this call sets the DB cluster capacity, Aurora Serverless can automatically
            scale the DB cluster based on the cooldown period for scaling up and the cooldown
            period for scaling down.
            </para><para>
            For more information about Aurora Serverless, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html">Using
            Amazon Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.
            </para><important><para>
            If you call <code>ModifyCurrentDBClusterCapacity</code> with the default <code>TimeoutAction</code>,
            connections that prevent Aurora Serverless from finding a scaling point might be dropped.
            For more information about scaling points, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.auto-scaling">
            Autoscaling for Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.
            </para></important><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSCurrentDBClusterCapacityCmdlet.Capacity">
            <summary>
            <para>
            <para>The DB cluster capacity.</para><para>When you change the capacity of a paused Aurora Serverless DB cluster, it automatically
            resumes.</para><para>Constraints:</para><ul><li><para>For Aurora MySQL, valid capacity values are <code>1</code>, <code>2</code>, <code>4</code>,
            <code>8</code>, <code>16</code>, <code>32</code>, <code>64</code>, <code>128</code>,
            and <code>256</code>.</para></li><li><para>For Aurora PostgreSQL, valid capacity values are <code>2</code>, <code>4</code>, <code>8</code>,
            <code>16</code>, <code>32</code>, <code>64</code>, <code>192</code>, and <code>384</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSCurrentDBClusterCapacityCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The DB cluster identifier for the cluster being modified. This parameter isn't case-sensitive.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing DB cluster.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSCurrentDBClusterCapacityCmdlet.SecondsBeforeTimeout">
            <summary>
            <para>
            <para>The amount of time, in seconds, that Aurora Serverless tries to find a scaling point
            to perform seamless scaling before enforcing the timeout action. The default is 300.</para><ul><li><para>Value must be from 10 through 600.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSCurrentDBClusterCapacityCmdlet.TimeoutAction">
            <summary>
            <para>
            <para>The action to take when the timeout is reached, either <code>ForceApplyCapacityChange</code>
            or <code>RollbackCapacityChange</code>.</para><para><code>ForceApplyCapacityChange</code>, the default, sets the capacity to the specified
            value as soon as possible.</para><para><code>RollbackCapacityChange</code> ignores the capacity change if a scaling point
            isn't found in the timeout period.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSCurrentDBClusterCapacityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ModifyCurrentDBClusterCapacityResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ModifyCurrentDBClusterCapacityResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSCurrentDBClusterCapacityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSCurrentDBClusterCapacityCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet">
            <summary>
            Modify a setting for an Amazon Aurora DB cluster. You can change one or more database
            configuration parameters by specifying these parameters and the new values in the
            request. For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.AllowMajorVersionUpgrade">
            <summary>
            <para>
            <para>A value that indicates whether major version upgrades are allowed.</para><para>Constraints: You must allow major version upgrades when specifying a value for the
            <code>EngineVersion</code> parameter that is a different major version than the DB
            cluster's current version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.ApplyImmediately">
            <summary>
            <para>
            <para>A value that indicates whether the modifications in this request and any pending modifications
            are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code>
            setting for the DB cluster. If this parameter is disabled, changes to the DB cluster
            are applied during the next maintenance window.</para><para>The <code>ApplyImmediately</code> parameter only affects the <code>EnableIAMDatabaseAuthentication</code>,
            <code>MasterUserPassword</code>, and <code>NewDBClusterIdentifier</code> values. If
            the <code>ApplyImmediately</code> parameter is disabled, then changes to the <code>EnableIAMDatabaseAuthentication</code>,
            <code>MasterUserPassword</code>, and <code>NewDBClusterIdentifier</code> values are
            applied during the next maintenance window. All other changes are applied immediately,
            regardless of the value of the <code>ApplyImmediately</code> parameter.</para><para>By default, this parameter is disabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.ScalingConfiguration_AutoPause">
            <summary>
            <para>
            <para>A value that indicates whether to allow or disallow automatic pause for an Aurora
            DB cluster in <code>serverless</code> DB engine mode. A DB cluster can be paused only
            when it's idle (it has no connections).</para><note><para>If a DB cluster is paused for more than seven days, the DB cluster might be backed
            up with a snapshot. In this case, the DB cluster is restored when there is a request
            to connect to it. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.BacktrackWindow">
            <summary>
            <para>
            <para>The target backtrack window, in seconds. To disable backtracking, set this value to
            0.</para><para>Default: 0</para><para>Constraints:</para><ul><li><para>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.BackupRetentionPeriod">
            <summary>
            <para>
            <para>The number of days for which automated backups are retained. You must specify a minimum
            value of 1.</para><para>Default: 1</para><para>Constraints:</para><ul><li><para>Must be a value from 1 to 35</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.CopyTagsToSnapshot">
            <summary>
            <para>
            <para>A value that indicates whether to copy all tags from the DB cluster to snapshots of
            the DB cluster. The default is not to copy them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The DB cluster identifier for the cluster being modified. This parameter isn't case-sensitive.</para><para>Constraints: This identifier must match the identifier of an existing DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB cluster parameter group to use for the DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.DBInstanceParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB parameter group to apply to all instances of the DB cluster. </para><note><para>When you apply a parameter group using the <code>DBInstanceParameterGroupName</code>
            parameter, the DB cluster isn't rebooted automatically. Also, parameter changes aren't
            applied during the next maintenance window but instead are applied immediately.</para></note><para>Default: The existing name setting</para><para>Constraints:</para><ul><li><para>The DB parameter group must be in the same DB parameter group family as this DB cluster.</para></li><li><para>The <code>DBInstanceParameterGroupName</code> parameter is only valid in combination
            with the <code>AllowMajorVersionUpgrade</code> parameter.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.DeletionProtection">
            <summary>
            <para>
            <para>A value that indicates whether the DB cluster has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.CloudwatchLogsExportConfiguration_DisableLogType">
            <summary>
            <para>
            <para>The list of log types to disable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.Domain">
            <summary>
            <para>
            <para>The Active Directory directory ID to move the DB cluster to. Specify <code>none</code>
            to remove the cluster from its current domain. The domain must be created prior to
            this operation. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.DomainIAMRoleName">
            <summary>
            <para>
            <para>Specify the name of the IAM role to be used when making API calls to the Directory
            Service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.EnableHttpEndpoint">
            <summary>
            <para>
            <para>A value that indicates whether to enable the HTTP endpoint for an Aurora Serverless
            DB cluster. By default, the HTTP endpoint is disabled.</para><para>When enabled, the HTTP endpoint provides a connectionless web service API for running
            SQL queries on the Aurora Serverless DB cluster. You can also query your database
            from inside the RDS console with the query editor.</para><para>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html">Using
            the Data API for Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.EnableIAMDatabaseAuthentication">
            <summary>
            <para>
            <para>A value that indicates whether to enable mapping of AWS Identity and Access Management
            (IAM) accounts to database accounts. By default, mapping is disabled.</para><para>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html">
            IAM Database Authentication</a> in the <i>Amazon Aurora User Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.CloudwatchLogsExportConfiguration_EnableLogType">
            <summary>
            <para>
            <para>The list of log types to enable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The version number of the database engine to which you want to upgrade. Changing this
            parameter results in an outage. The change is applied during the next maintenance
            window unless <code>ApplyImmediately</code> is enabled.</para><para>To list all of the available engine versions for <code>aurora</code> (for MySQL 5.6-compatible
            Aurora), use the following command:</para><para><code>aws rds describe-db-engine-versions --engine aurora --query "DBEngineVersions[].EngineVersion"</code></para><para>To list all of the available engine versions for <code>aurora-mysql</code> (for MySQL
            5.7-compatible Aurora), use the following command:</para><para><code>aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"</code></para><para>To list all of the available engine versions for <code>aurora-postgresql</code>, use
            the following command:</para><para><code>aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.MasterUserPassword">
            <summary>
            <para>
            <para>The new password for the master database user. This password can contain any printable
            ASCII character except "/", """, or "@".</para><para>Constraints: Must contain from 8 to 41 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.ScalingConfiguration_MaxCapacity">
            <summary>
            <para>
            <para>The maximum capacity for an Aurora DB cluster in <code>serverless</code> DB engine
            mode.</para><para>For Aurora MySQL, valid capacity values are <code>1</code>, <code>2</code>, <code>4</code>,
            <code>8</code>, <code>16</code>, <code>32</code>, <code>64</code>, <code>128</code>,
            and <code>256</code>.</para><para>For Aurora PostgreSQL, valid capacity values are <code>2</code>, <code>4</code>, <code>8</code>,
            <code>16</code>, <code>32</code>, <code>64</code>, <code>192</code>, and <code>384</code>.</para><para>The maximum capacity must be greater than or equal to the minimum capacity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.ScalingConfiguration_MinCapacity">
            <summary>
            <para>
            <para>The minimum capacity for an Aurora DB cluster in <code>serverless</code> DB engine
            mode.</para><para>For Aurora MySQL, valid capacity values are <code>1</code>, <code>2</code>, <code>4</code>,
            <code>8</code>, <code>16</code>, <code>32</code>, <code>64</code>, <code>128</code>,
            and <code>256</code>.</para><para>For Aurora PostgreSQL, valid capacity values are <code>2</code>, <code>4</code>, <code>8</code>,
            <code>16</code>, <code>32</code>, <code>64</code>, <code>192</code>, and <code>384</code>.</para><para>The minimum capacity must be less than or equal to the maximum capacity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.NewDBClusterIdentifier">
            <summary>
            <para>
            <para>The new DB cluster identifier for the DB cluster when renaming a DB cluster. This
            value is stored as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens</para></li><li><para>The first character must be a letter</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens</para></li></ul><para>Example: <code>my-cluster2</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.OptionGroupName">
            <summary>
            <para>
            <para>A value that indicates that the DB cluster should be associated with the specified
            option group. Changing this parameter doesn't result in an outage except in the following
            case, and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code>
            is enabled for this request. If the parameter change results in an option group that
            enables OEM, this change can cause a brief (sub-second) period during which new connections
            are rejected but existing connections are not interrupted. </para><para>Permanent options can't be removed from an option group. The option group can't be
            removed from a DB cluster once it is associated with a DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.Port">
            <summary>
            <para>
            <para>The port number on which the DB cluster accepts connections.</para><para>Constraints: Value must be <code>1150-65535</code></para><para>Default: The same port as the original DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.PreferredBackupWindow">
            <summary>
            <para>
            <para>The daily time range during which automated backups are created if automated backups
            are enabled, using the <code>BackupRetentionPeriod</code> parameter. </para><para>The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora">
            Adjusting the Preferred DB Cluster Maintenance Window</a> in the <i>Amazon Aurora
            User Guide.</i></para><para>Constraints:</para><ul><li><para>Must be in the format <code>hh24:mi-hh24:mi</code>.</para></li><li><para>Must be in Universal Coordinated Time (UTC).</para></li><li><para>Must not conflict with the preferred maintenance window.</para></li><li><para>Must be at least 30 minutes.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>The weekly time range during which system maintenance can occur, in Universal Coordinated
            Time (UTC).</para><para>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code></para><para>The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region, occurring on a random day of the week. To see the time blocks
            available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora">
            Adjusting the Preferred DB Cluster Maintenance Window</a> in the <i>Amazon Aurora
            User Guide.</i></para><para>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</para><para>Constraints: Minimum 30-minute window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.ScalingConfiguration_SecondsUntilAutoPause">
            <summary>
            <para>
            <para>The time, in seconds, before an Aurora DB cluster in <code>serverless</code> mode
            is paused.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.ScalingConfiguration_TimeoutAction">
            <summary>
            <para>
            <para>The action to take when the timeout is reached, either <code>ForceApplyCapacityChange</code>
            or <code>RollbackCapacityChange</code>.</para><para><code>ForceApplyCapacityChange</code> sets the capacity to the specified value as
            soon as possible.</para><para><code>RollbackCapacityChange</code>, the default, ignores the capacity change if
            a scaling point isn't found in the timeout period.</para><important><para>If you specify <code>ForceApplyCapacityChange</code>, connections that prevent Aurora
            Serverless from finding a scaling point might be dropped.</para></important><para>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.auto-scaling">
            Autoscaling for Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of VPC security groups that the DB cluster will belong to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ModifyDBClusterResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ModifyDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterEndpointCmdlet">
            <summary>
            Modifies the properties of an endpoint in an Amazon Aurora DB cluster.
            
             <note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterEndpointCmdlet.DBClusterEndpointIdentifier">
            <summary>
            <para>
            <para>The identifier of the endpoint to modify. This parameter is stored as a lowercase
            string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterEndpointCmdlet.EndpointType">
            <summary>
            <para>
            <para>The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>, <code>ANY</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterEndpointCmdlet.ExcludedMember">
            <summary>
            <para>
            <para>List of DB instance identifiers that aren't part of the custom endpoint group. All
            other eligible instances are reachable through the custom endpoint. Only relevant
            if the list of static members is empty.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterEndpointCmdlet.StaticMember">
            <summary>
            <para>
            <para>List of DB instance identifiers that are part of the custom endpoint group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ModifyDBClusterEndpointResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ModifyDBClusterEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterEndpointIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterEndpointIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterParameterGroupCmdlet">
            <summary>
            Modifies the parameters of a DB cluster parameter group. To modify more than one
            parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>,
            and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
            request. 
            
             
            <para>
            For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            Changes to dynamic parameters are applied immediately. Changes to static parameters
            require a reboot without failover to the DB cluster associated with the parameter
            group before the change can take effect.
            </para></note><important><para>
            After you create a DB cluster parameter group, you should wait at least 5 minutes
            before creating your first DB cluster that uses that DB cluster parameter group as
            the default parameter group. This allows Amazon RDS to fully complete the create action
            before the parameter group is used as the default for a new DB cluster. This is especially
            important for parameters that are critical when creating the default database for
            a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code>
            parameter. You can use the <i>Parameter Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon
            RDS console</a> or the <code>DescribeDBClusterParameters</code> action to verify that
            your DB cluster parameter group has been created or modified.
            </para><para>
            If the modified DB cluster parameter group is used by an Aurora Serverless cluster,
            Aurora applies the update immediately. The cluster restart might interrupt your workload.
            In that case, your application must reopen any connections and retry any transactions
            that were active when the parameter changes took effect.
            </para></important><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterParameterGroupCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB cluster parameter group to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterParameterGroupCmdlet.Parameter">
            <summary>
            <para>
            <para>A list of parameters in the DB cluster parameter group to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterParameterGroupName'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ModifyDBClusterParameterGroupResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ModifyDBClusterParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterSnapshotAttributeCmdlet">
            <summary>
            Adds an attribute and values to, or removes an attribute and values from, a manual
            DB cluster snapshot.
            
             
            <para>
            To share a manual DB cluster snapshot with other AWS accounts, specify <code>restore</code>
            as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to
            add a list of IDs of the AWS accounts that are authorized to restore the manual DB
            cluster snapshot. Use the value <code>all</code> to make the manual DB cluster snapshot
            public, which means that it can be copied or restored by all AWS accounts. Do not
            add the <code>all</code> value for any manual DB cluster snapshots that contain private
            information that you don't want available to all AWS accounts. If a manual DB cluster
            snapshot is encrypted, it can be shared, but only by specifying a list of authorized
            AWS account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code>
            as a value for that parameter in this case.
            </para><para>
            To view which AWS accounts have access to copy or restore a manual DB cluster snapshot,
            or whether a manual DB cluster snapshot public or private, use the <code>DescribeDBClusterSnapshotAttributes</code>
            API action.
            </para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterSnapshotAttributeCmdlet.AttributeName">
            <summary>
            <para>
            <para>The name of the DB cluster snapshot attribute to modify.</para><para>To manage authorization for other AWS accounts to copy or restore a manual DB cluster
            snapshot, set this value to <code>restore</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterSnapshotAttributeCmdlet.DBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier for the DB cluster snapshot to modify the attributes for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterSnapshotAttributeCmdlet.ValuesToAdd">
            <summary>
            <para>
            <para>A list of DB cluster snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</para><para>To authorize other AWS accounts to copy or restore a manual DB cluster snapshot, set
            this list to include one or more AWS account IDs, or <code>all</code> to make the
            manual DB cluster snapshot restorable by any AWS account. Do not add the <code>all</code>
            value for any manual DB cluster snapshots that contain private information that you
            don't want available to all AWS accounts.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterSnapshotAttributeCmdlet.ValuesToRemove">
            <summary>
            <para>
            <para>A list of DB cluster snapshot attributes to remove from the attribute specified by
            <code>AttributeName</code>.</para><para>To remove authorization for other AWS accounts to copy or restore a manual DB cluster
            snapshot, set this list to include one or more AWS account identifiers, or <code>all</code>
            to remove authorization for any AWS account to copy or restore the DB cluster snapshot.
            If you specify <code>all</code>, an AWS account whose account ID is explicitly added
            to the <code>restore</code> attribute can still copy or restore a manual DB cluster
            snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterSnapshotAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterSnapshotAttributesResult'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ModifyDBClusterSnapshotAttributeResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ModifyDBClusterSnapshotAttributeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterSnapshotAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AttributeName parameter.
            The -PassThru parameter is deprecated, use -Select '^AttributeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBClusterSnapshotAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet">
            <summary>
            Modifies settings for a DB instance. You can change one or more database configuration
            parameters by specifying these parameters and the new values in the request. To learn
            what modifications you can make to your DB instance, call <code>DescribeValidDBInstanceModifications</code>
            before you call <code>ModifyDBInstance</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.AllocatedStorage">
            <summary>
            <para>
            <para>The new amount of storage (in gibibytes) to allocate for the DB instance. </para><para>For MariaDB, MySQL, Oracle, and PostgreSQL, the value supplied must be at least 10%
            greater than the current value. Values that are not at least 10% greater than the
            existing value are rounded up so that they are 10% greater than the current value.
            </para><para>For the valid values for allocated storage for each engine, see <code>CreateDBInstance</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.AllowMajorVersionUpgrade">
            <summary>
            <para>
            <para>A value that indicates whether major version upgrades are allowed. Changing this parameter
            doesn't result in an outage and the change is asynchronously applied as soon as possible.</para><para>Constraints: Major version upgrades must be allowed when specifying a value for the
            EngineVersion parameter that is a different major version than the DB instance's current
            version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.ApplyImmediately">
            <summary>
            <para>
            <para>A value that indicates whether the modifications in this request and any pending modifications
            are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code>
            setting for the DB instance. By default, this parameter is disabled. </para><para> If this parameter is disabled, changes to the DB instance are applied during the
            next maintenance window. Some parameter changes can cause an outage and are applied
            on the next call to <a>RebootDBInstance</a>, or the next failure reboot. Review the
            table of parameters in <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html">Modifying
            a DB Instance</a> in the <i>Amazon RDS User Guide.</i> to see the impact of enabling
            or disabling <code>ApplyImmediately</code> for each modified parameter and to determine
            when the changes are applied. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.AutoMinorVersionUpgrade">
            <summary>
            <para>
            <para> A value that indicates whether minor version upgrades are applied automatically to
            the DB instance during the maintenance window. Changing this parameter doesn't result
            in an outage except in the following case and the change is asynchronously applied
            as soon as possible. An outage results if this parameter is enabled during the maintenance
            window, and a newer minor version is available, and RDS has enabled auto patching
            for that engine version. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.BackupRetentionPeriod">
            <summary>
            <para>
            <para>The number of days to retain automated backups. Setting this parameter to a positive
            number enables backups. Setting this parameter to 0 disables automated backups.</para><para>Changing this parameter can result in an outage if you change from 0 to a non-zero
            value or from a non-zero value to 0. These changes are applied during the next maintenance
            window unless the <code>ApplyImmediately</code> parameter is enabled for this request.
            If you change the parameter from one non-zero value to another non-zero value, the
            change is asynchronously applied as soon as possible.</para><para><b>Amazon Aurora</b></para><para>Not applicable. The retention period for automated backups is managed by the DB cluster.
            For more information, see <code>ModifyDBCluster</code>.</para><para>Default: Uses existing setting</para><para>Constraints:</para><ul><li><para>Must be a value from 0 to 35</para></li><li><para>Can be specified for a MySQL read replica only if the source is running MySQL 5.6
            or later</para></li><li><para>Can be specified for a PostgreSQL read replica only if the source is running PostgreSQL
            9.3.5</para></li><li><para>Can't be set to 0 if the DB instance is a source to read replicas</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.CACertificateIdentifier">
            <summary>
            <para>
            <para>Indicates the certificate that needs to be associated with the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.CertificateRotationRestart">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance is restarted when you rotate your SSL/TLS
            certificate.</para><para>By default, the DB instance is restarted when you rotate your SSL/TLS certificate.
            The certificate is not updated until the DB instance is restarted.</para><important><para>Set this parameter only if you are <i>not</i> using SSL/TLS to connect to the DB instance.</para></important><para>If you are using SSL/TLS to connect to the DB instance, follow the appropriate instructions
            for your DB engine to rotate your SSL/TLS certificate:</para><ul><li><para>For more information about rotating your SSL/TLS certificate for RDS DB engines, see
            <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL-certificate-rotation.html">
            Rotating Your SSL/TLS Certificate.</a> in the <i>Amazon RDS User Guide.</i></para></li><li><para>For more information about rotating your SSL/TLS certificate for Aurora DB engines,
            see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL-certificate-rotation.html">
            Rotating Your SSL/TLS Certificate</a> in the <i>Amazon Aurora User Guide.</i></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.CopyTagsToSnapshot">
            <summary>
            <para>
            <para>A value that indicates whether to copy all tags from the DB instance to snapshots
            of the DB instance. By default, tags are not copied.</para><para><b>Amazon Aurora</b></para><para>Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this
            value for an Aurora DB instance has no effect on the DB cluster setting. For more
            information, see <code>ModifyDBCluster</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.DBInstanceClass">
            <summary>
            <para>
            <para>The new compute and memory capacity of the DB instance, for example, <code>db.m4.large</code>.
            Not all DB instance classes are available in all AWS Regions, or for all database
            engines. For the full list of DB instance classes, and availability for your engine,
            see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB
            Instance Class</a> in the <i>Amazon RDS User Guide.</i></para><para>If you modify the DB instance class, an outage occurs during the change. The change
            is applied during the next maintenance window, unless <code>ApplyImmediately</code>
            is enabled for this request. </para><para>Default: Uses existing setting</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The DB instance identifier. This value is stored as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing DBInstance.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.DBParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB parameter group to apply to the DB instance. Changing this setting
            doesn't result in an outage. The parameter group name itself is changed immediately,
            but the actual parameter changes are not applied until you reboot the instance without
            failover. In this case, the DB instance isn't rebooted automatically and the parameter
            changes isn't applied during the next maintenance window.</para><para>Default: Uses existing setting</para><para>Constraints: The DB parameter group must be in the same DB parameter group family
            as this DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.DBPortNumber">
            <summary>
            <para>
            <para>The port number on which the database accepts connections.</para><para>The value of the <code>DBPortNumber</code> parameter must not match any of the port
            values specified for options in the option group for the DB instance.</para><para>Your database will restart when you change the <code>DBPortNumber</code> value regardless
            of the value of the <code>ApplyImmediately</code> parameter.</para><para><b>MySQL</b></para><para> Default: <code>3306</code></para><para> Valid values: <code>1150-65535</code></para><para><b>MariaDB</b></para><para> Default: <code>3306</code></para><para> Valid values: <code>1150-65535</code></para><para><b>PostgreSQL</b></para><para> Default: <code>5432</code></para><para> Valid values: <code>1150-65535</code></para><para>Type: Integer</para><para><b>Oracle</b></para><para> Default: <code>1521</code></para><para> Valid values: <code>1150-65535</code></para><para><b>SQL Server</b></para><para> Default: <code>1433</code></para><para> Valid values: <code>1150-65535</code> except <code>1234</code>, <code>1434</code>,
            <code>3260</code>, <code>3343</code>, <code>3389</code>, <code>47001</code>, and <code>49152-49156</code>.</para><para><b>Amazon Aurora</b></para><para> Default: <code>3306</code></para><para> Valid values: <code>1150-65535</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.DBSecurityGroup">
            <summary>
            <para>
            <para>A list of DB security groups to authorize on this DB instance. Changing this setting
            doesn't result in an outage and the change is asynchronously applied as soon as possible.</para><para>Constraints:</para><ul><li><para>If supplied, must match existing DBSecurityGroups.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The new DB subnet group for the DB instance. You can use this parameter to move your
            DB instance to a different VPC. If your DB instance isn't in a VPC, you can also use
            this parameter to move your DB instance into a VPC. For more information, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html#USER_VPC.Non-VPC2VPC">Updating
            the VPC for a DB Instance</a> in the <i>Amazon RDS User Guide.</i></para><para>Changing the subnet group causes an outage during the change. The change is applied
            during the next maintenance window, unless you enable <code>ApplyImmediately</code>.
            </para><para>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</para><para>Example: <code>mySubnetGroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.DeletionProtection">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html">
            Deleting a DB Instance</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.CloudwatchLogsExportConfiguration_DisableLogType">
            <summary>
            <para>
            <para>The list of log types to disable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.Domain">
            <summary>
            <para>
            <para>The Active Directory directory ID to move the DB instance to. Specify <code>none</code>
            to remove the instance from its current domain. The domain must be created prior to
            this operation. Currently, only Microsoft SQL Server and Oracle DB instances can be
            created in an Active Directory Domain. </para><para>For Microsoft SQL Server DB instances, Amazon RDS can use Windows Authentication to
            authenticate users that connect to the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_SQLServerWinAuth.html">
            Using Windows Authentication with an Amazon RDS DB Instance Running Microsoft SQL
            Server</a> in the <i>Amazon RDS User Guide</i>.</para><para>For Oracle DB instances, Amazon RDS can use Kerberos Authentication to authenticate
            users that connect to the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-kerberos.html">
            Using Kerberos Authentication with Amazon RDS for Oracle</a> in the <i>Amazon RDS
            User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.DomainIAMRoleName">
            <summary>
            <para>
            <para>The name of the IAM role to use when making API calls to the Directory Service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.EnableIAMDatabaseAuthentication">
            <summary>
            <para>
            <para>A value that indicates whether to enable mapping of AWS Identity and Access Management
            (IAM) accounts to database accounts. By default, mapping is disabled. For information
            about the supported DB engines, see <a>CreateDBInstance</a>.</para><para>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html">
            IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User
            Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.CloudwatchLogsExportConfiguration_EnableLogType">
            <summary>
            <para>
            <para>The list of log types to enable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.EnablePerformanceInsight">
            <summary>
            <para>
            <para>A value that indicates whether to enable Performance Insights for the DB instance.</para><para>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html">Using
            Amazon Performance Insights</a> in the <i>Amazon Relational Database Service User
            Guide</i>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.EngineVersion">
            <summary>
            <para>
            <para> The version number of the database engine to upgrade to. Changing this parameter
            results in an outage and the change is applied during the next maintenance window
            unless the <code>ApplyImmediately</code> parameter is eanbled for this request. </para><para>For major version upgrades, if a nondefault DB parameter group is currently in use,
            a new DB parameter group in the DB parameter group family for the new engine version
            must be specified. The new DB parameter group can be the default for that DB parameter
            group family.</para><para>For information about valid engine versions, see <code>CreateDBInstance</code>, or
            call <code>DescribeDBEngineVersions</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.Iops">
            <summary>
            <para>
            <para>The new Provisioned IOPS (I/O operations per second) value for the RDS instance. </para><para>Changing this setting doesn't result in an outage and the change is applied during
            the next maintenance window unless the <code>ApplyImmediately</code> parameter is
            enabled for this request. If you are migrating from Provisioned IOPS to standard storage,
            set this value to 0. The DB instance will require a reboot for the change in storage
            type to take effect. </para><para>If you choose to migrate your DB instance from using standard storage to using Provisioned
            IOPS, or from using Provisioned IOPS to using standard storage, the process can take
            time. The duration of the migration depends on several factors such as database load,
            storage size, storage type (standard or Provisioned IOPS), amount of IOPS provisioned
            (if any), and the number of prior scale storage operations. Typical migration times
            are under 24 hours, but the process can take up to several days in some cases. During
            the migration, the DB instance is available for use, but might experience performance
            degradation. While the migration takes place, nightly backups for the instance are
            suspended. No other Amazon RDS operations can take place for the instance, including
            modifying the instance, rebooting the instance, deleting the instance, creating a
            read replica for the instance, and creating a DB snapshot of the instance. </para><para>Constraints: For MariaDB, MySQL, Oracle, and PostgreSQL, the value supplied must be
            at least 10% greater than the current value. Values that are not at least 10% greater
            than the existing value are rounded up so that they are 10% greater than the current
            value. </para><para>Default: Uses existing setting</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.LicenseModel">
            <summary>
            <para>
            <para>The license model for the DB instance.</para><para>Valid values: <code>license-included</code> | <code>bring-your-own-license</code>
            | <code>general-public-license</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.MasterUserPassword">
            <summary>
            <para>
            <para>The new password for the master user. The password can include any printable ASCII
            character except "/", """, or "@".</para><para> Changing this parameter doesn't result in an outage and the change is asynchronously
            applied as soon as possible. Between the time of the request and the completion of
            the request, the <code>MasterUserPassword</code> element exists in the <code>PendingModifiedValues</code>
            element of the operation response. </para><para><b>Amazon Aurora</b></para><para>Not applicable. The password for the master user is managed by the DB cluster. For
            more information, see <code>ModifyDBCluster</code>. </para><para>Default: Uses existing setting</para><para><b>MariaDB</b></para><para>Constraints: Must contain from 8 to 41 characters.</para><para><b>Microsoft SQL Server</b></para><para>Constraints: Must contain from 8 to 128 characters.</para><para><b>MySQL</b></para><para>Constraints: Must contain from 8 to 41 characters.</para><para><b>Oracle</b></para><para>Constraints: Must contain from 8 to 30 characters.</para><para><b>PostgreSQL</b></para><para>Constraints: Must contain from 8 to 128 characters.</para><note><para>Amazon RDS API actions never return the password, so this action provides a way to
            regain access to a primary instance user if the password is lost. This includes restoring
            privileges that might have been accidentally revoked. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.MaxAllocatedStorage">
            <summary>
            <para>
            <para>The upper limit to which Amazon RDS can automatically scale the storage of the DB
            instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.MonitoringInterval">
            <summary>
            <para>
            <para>The interval, in seconds, between points when Enhanced Monitoring metrics are collected
            for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0.
            The default is 0.</para><para>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code>
            to a value other than 0.</para><para>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.MonitoringRoleArn">
            <summary>
            <para>
            <para>The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon
            CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>.
            For information on creating a monitoring role, go to <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html#USER_Monitoring.OS.IAMRole">To
            create an IAM role for Amazon RDS Enhanced Monitoring</a> in the <i>Amazon RDS User
            Guide.</i></para><para>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply
            a <code>MonitoringRoleArn</code> value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.MultiAZ">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance is a Multi-AZ deployment. Changing
            this parameter doesn't result in an outage and the change is applied during the next
            maintenance window unless the <code>ApplyImmediately</code> parameter is enabled for
            this request. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.NewDBInstanceIdentifier">
            <summary>
            <para>
            <para> The new DB instance identifier for the DB instance when renaming a DB instance. When
            you change the DB instance identifier, an instance reboot occurs immediately if you
            enable <code>ApplyImmediately</code>, or will occur during the next maintenance window
            if you disable Apply Immediately. This value is stored as a lowercase string. </para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens.</para></li><li><para>The first character must be a letter.</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>mydbinstance</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.OptionGroupName">
            <summary>
            <para>
            <para> Indicates that the DB instance should be associated with the specified option group.
            Changing this parameter doesn't result in an outage except in the following case and
            the change is applied during the next maintenance window unless the <code>ApplyImmediately</code>
            parameter is enabled for this request. If the parameter change results in an option
            group that enables OEM, this change can cause a brief (sub-second) period during which
            new connections are rejected but existing connections are not interrupted. </para><para>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't
            be removed from an option group, and that option group can't be removed from a DB
            instance once it is associated with a DB instance</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.PerformanceInsightsKMSKeyId">
            <summary>
            <para>
            <para>The AWS KMS key identifier for encryption of Performance Insights data. The KMS key
            ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for
            the KMS encryption key.</para><para>If you do not specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon
            RDS uses your default encryption key. AWS KMS creates the default encryption key for
            your AWS account. Your AWS account has a different default encryption key for each
            AWS Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.PerformanceInsightsRetentionPeriod">
            <summary>
            <para>
            <para>The amount of time, in days, to retain Performance Insights data. Valid values are
            7 or 731 (2 years). </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.PreferredBackupWindow">
            <summary>
            <para>
            <para> The daily time range during which automated backups are created if automated backups
            are enabled, as determined by the <code>BackupRetentionPeriod</code> parameter. Changing
            this parameter doesn't result in an outage and the change is asynchronously applied
            as soon as possible. </para><para><b>Amazon Aurora</b></para><para>Not applicable. The daily time range for creating automated backups is managed by
            the DB cluster. For more information, see <code>ModifyDBCluster</code>.</para><para>Constraints:</para><ul><li><para>Must be in the format hh24:mi-hh24:mi</para></li><li><para>Must be in Universal Time Coordinated (UTC)</para></li><li><para>Must not conflict with the preferred maintenance window</para></li><li><para>Must be at least 30 minutes</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>The weekly time range (in UTC) during which system maintenance can occur, which might
            result in an outage. Changing this parameter doesn't result in an outage, except in
            the following situation, and the change is asynchronously applied as soon as possible.
            If there are pending actions that cause a reboot, and the maintenance window is changed
            to include the current time, then changing this parameter will cause a reboot of the
            DB instance. If moving this window to the current time, there must be at least 30
            minutes between the current time and end of the window to ensure pending changes are
            applied.</para><para>Default: Uses existing setting</para><para>Format: ddd:hh24:mi-ddd:hh24:mi</para><para>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</para><para>Constraints: Must be at least 30 minutes</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.ProcessorFeature">
            <summary>
            <para>
            <para>The number of CPU cores and the number of threads per core for the DB instance class
            of the DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.PromotionTier">
            <summary>
            <para>
            <para>A value that specifies the order in which an Aurora Replica is promoted to the primary
            instance after a failure of the existing primary instance. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance">
            Fault Tolerance for an Aurora DB Cluster</a> in the <i>Amazon Aurora User Guide</i>.
            </para><para>Default: 1</para><para>Valid Values: 0 - 15</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.PubliclyAccessible">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance is publicly accessible. When the DB
            instance is publicly accessible, it is an Internet-facing instance with a publicly
            resolvable DNS name, which resolves to a public IP address. When the DB instance isn't
            publicly accessible, it is an internal instance with a DNS name that resolves to a
            private IP address. </para><para><code>PubliclyAccessible</code> only applies to DB instances in a VPC. The DB instance
            must be part of a public subnet and <code>PubliclyAccessible</code> must be enabled
            for it to be publicly accessible. </para><para>Changes to the <code>PubliclyAccessible</code> parameter are applied immediately regardless
            of the value of the <code>ApplyImmediately</code> parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.StorageType">
            <summary>
            <para>
            <para>Specifies the storage type to be associated with the DB instance. </para><para>If you specify Provisioned IOPS (<code>io1</code>), you must also include a value
            for the <code>Iops</code> parameter. </para><para>If you choose to migrate your DB instance from using standard storage to using Provisioned
            IOPS, or from using Provisioned IOPS to using standard storage, the process can take
            time. The duration of the migration depends on several factors such as database load,
            storage size, storage type (standard or Provisioned IOPS), amount of IOPS provisioned
            (if any), and the number of prior scale storage operations. Typical migration times
            are under 24 hours, but the process can take up to several days in some cases. During
            the migration, the DB instance is available for use, but might experience performance
            degradation. While the migration takes place, nightly backups for the instance are
            suspended. No other Amazon RDS operations can take place for the instance, including
            modifying the instance, rebooting the instance, deleting the instance, creating a
            read replica for the instance, and creating a DB snapshot of the instance. </para><para> Valid values: <code>standard | gp2 | io1</code></para><para>Default: <code>io1</code> if the <code>Iops</code> parameter is specified, otherwise
            <code>gp2</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.TdeCredentialArn">
            <summary>
            <para>
            <para>The ARN from the key store with which to associate the instance for TDE encryption.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.TdeCredentialPassword">
            <summary>
            <para>
            <para>The password for the given ARN from the key store in order to access the device.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.UseDefaultProcessorFeature">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance class of the DB instance uses its default
            processor features.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of EC2 VPC security groups to authorize on this DB instance. This change is
            asynchronously applied as soon as possible.</para><para><b>Amazon Aurora</b></para><para>Not applicable. The associated list of EC2 VPC security groups is managed by the DB
            cluster. For more information, see <code>ModifyDBCluster</code>.</para><para>Constraints:</para><ul><li><para>If supplied, must match existing VpcSecurityGroupIds.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ModifyDBInstanceResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ModifyDBInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBParameterGroupCmdlet">
            <summary>
            Modifies the parameters of a DB parameter group. To modify more than one parameter,
            submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>,
            and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
            request. 
            
             <note><para>
            Changes to dynamic parameters are applied immediately. Changes to static parameters
            require a reboot without failover to the DB instance associated with the parameter
            group before the change can take effect.
            </para></note><important><para>
            After you modify a DB parameter group, you should wait at least 5 minutes before creating
            your first DB instance that uses that DB parameter group as the default parameter
            group. This allows Amazon RDS to fully complete the modify action before the parameter
            group is used as the default for a new DB instance. This is especially important for
            parameters that are critical when creating the default database for a DB instance,
            such as the character set for the default database defined by the <code>character_set_database</code>
            parameter. You can use the <i>Parameter Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon
            RDS console</a> or the <i>DescribeDBParameters</i> command to verify that your DB
            parameter group has been created or modified.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBParameterGroupCmdlet.DBParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB parameter group.</para><para>Constraints:</para><ul><li><para>If supplied, must match the name of an existing <code>DBParameterGroup</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBParameterGroupCmdlet.Parameter">
            <summary>
            <para>
            <para>An array of parameter names, values, and the apply method for the parameter update.
            At least one parameter name, value, and apply method must be supplied; later arguments
            are optional. A maximum of 20 parameters can be modified in a single request.</para><para>Valid Values (for the application method): <code>immediate | pending-reboot</code></para><note><para>You can use the immediate value with dynamic parameters only. You can use the pending-reboot
            value for both dynamic and static parameters, and changes are applied when you reboot
            the DB instance without failover.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBParameterGroupName'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ModifyDBParameterGroupResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ModifyDBParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyCmdlet">
            <summary>
            <note><para>
            This is prerelease documentation for the RDS Database Proxy feature in preview release.
            It is subject to change.
            </para></note><para>
            Changes the settings for an existing DB proxy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyCmdlet.Auth">
            <summary>
            <para>
            <para>The new authentication settings for the <code>DBProxy</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyCmdlet.DBProxyName">
            <summary>
            <para>
            <para>The identifier for the <code>DBProxy</code> to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyCmdlet.DebugLogging">
            <summary>
            <para>
            <para>Whether the proxy includes detailed information about SQL statements in its logs.
            This information helps you to debug issues involving SQL behavior or the performance
            and scalability of the proxy connections. The debug information includes the text
            of SQL statements that you submit through the proxy. Thus, only enable this setting
            when needed for debugging, and only when you have security measures in place to safeguard
            any sensitive information that appears in the logs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyCmdlet.IdleClientTimeout">
            <summary>
            <para>
            <para>The number of seconds that a connection to the proxy can be inactive before the proxy
            disconnects it. You can set this value higher or lower than the connection timeout
            limit for the associated database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyCmdlet.NewDBProxyName">
            <summary>
            <para>
            <para>The new identifier for the <code>DBProxy</code>. An identifier must begin with a letter
            and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen
            or contain two consecutive hyphens.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyCmdlet.RequireTLS">
            <summary>
            <para>
            <para>Whether Transport Layer Security (TLS) encryption is required for connections to the
            proxy. By enabling this setting, you can enforce encrypted TLS connections to the
            proxy, even if the associated database doesn't use TLS.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyCmdlet.RoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets
            in AWS Secrets Manager.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyCmdlet.SecurityGroup">
            <summary>
            <para>
            <para>The new list of security groups for the <code>DBProxy</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBProxy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ModifyDBProxyResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ModifyDBProxyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBProxyName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBProxyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyTargetGroupCmdlet">
            <summary>
            <note><para>
            This is prerelease documentation for the RDS Database Proxy feature in preview release.
            It is subject to change.
            </para></note><para>
            Modifies the properties of a <code>DBProxyTargetGroup</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyTargetGroupCmdlet.ConnectionPoolConfig_ConnectionBorrowTimeout">
            <summary>
            <para>
            <para>The number of seconds for a proxy to wait for a connection to become available in
            the connection pool. Only applies when the proxy has opened its maximum number of
            connections and all connections are busy with client sessions.</para><para>Default: 120</para><para>Constraints: between 1 and 3600, or 0 representing unlimited</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyTargetGroupCmdlet.DBProxyName">
            <summary>
            <para>
            <para>The name of the new proxy to which to assign the target group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyTargetGroupCmdlet.ConnectionPoolConfig_InitQuery">
            <summary>
            <para>
            <para> One or more SQL statements for the proxy to run when opening each new database connection.
            Typically used with <code>SET</code> statements to make sure that each connection
            has identical settings such as time zone and character set. For multiple statements,
            use semicolons as the separator. You can also include multiple variables in a single
            <code>SET</code> statement, such as <code>SET x=1, y=2</code>. </para><para><code>InitQuery</code> is not currently supported for PostgreSQL.</para><para>Default: no initialization query</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyTargetGroupCmdlet.ConnectionPoolConfig_MaxConnectionsPercent">
            <summary>
            <para>
            <para>The maximum size of the connection pool for each target in a target group. For Aurora
            MySQL, it is expressed as a percentage of the <code>max_connections</code> setting
            for the RDS DB instance or Aurora DB cluster used by the target group.</para><para>Default: 100</para><para>Constraints: between 1 and 100</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyTargetGroupCmdlet.ConnectionPoolConfig_MaxIdleConnectionsPercent">
            <summary>
            <para>
            <para> Controls how actively the proxy closes idle database connections in the connection
            pool. A high value enables the proxy to leave a high percentage of idle connections
            open. A low value causes the proxy to close idle client connections and return the
            underlying database connections to the connection pool. For Aurora MySQL, it is expressed
            as a percentage of the <code>max_connections</code> setting for the RDS DB instance
            or Aurora DB cluster used by the target group. </para><para>Default: 50</para><para>Constraints: between 0 and <code>MaxConnectionsPercent</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyTargetGroupCmdlet.NewName">
            <summary>
            <para>
            <para>The new name for the modified <code>DBProxyTarget</code>. An identifier must begin
            with a letter and must contain only ASCII letters, digits, and hyphens; it can't end
            with a hyphen or contain two consecutive hyphens.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyTargetGroupCmdlet.ConnectionPoolConfig_SessionPinningFilter">
            <summary>
            <para>
            <para>Each item in the list represents a class of SQL operations that normally cause all
            later statements in a session using a proxy to be pinned to the same underlying database
            connection. Including an item in the list exempts that class of SQL operations from
            the pinning behavior.</para><para>Default: no session pinning filters</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyTargetGroupCmdlet.TargetGroupName">
            <summary>
            <para>
            <para>The name of the new target group to assign to the proxy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyTargetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBProxyTargetGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ModifyDBProxyTargetGroupResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ModifyDBProxyTargetGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyTargetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TargetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^TargetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBProxyTargetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSnapshotCmdlet">
            <summary>
            Updates a manual DB snapshot with a new engine version. The snapshot can be encrypted
            or unencrypted, but not shared or public. 
            
             
            <para>
            Amazon RDS supports upgrading DB snapshots for MySQL, Oracle, and PostgreSQL. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSnapshotCmdlet.DBSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier of the DB snapshot to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSnapshotCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The engine version to upgrade the DB snapshot to. </para><para>The following are the database engines and engine versions that are available when
            you upgrade a DB snapshot. </para><para><b>MySQL</b></para><ul><li><para><code>5.5.46</code> (supported for 5.1 DB snapshots)</para></li></ul><para><b>Oracle</b></para><ul><li><para><code>12.1.0.2.v8</code> (supported for 12.1.0.1 DB snapshots)</para></li><li><para><code>11.2.0.4.v12</code> (supported for 11.2.0.2 DB snapshots)</para></li><li><para><code>11.2.0.4.v11</code> (supported for 11.2.0.3 DB snapshots)</para></li></ul><para><b>PostgreSQL</b></para><para>For the list of engine versions that are available for upgrading a DB snapshot, see
            <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.PostgreSQL.html#USER_UpgradeDBInstance.PostgreSQL.MajorVersion">
            Upgrading the PostgreSQL DB Engine for Amazon RDS</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSnapshotCmdlet.OptionGroupName">
            <summary>
            <para>
            <para>The option group to identify with the upgraded DB snapshot. </para><para>You can specify this parameter when you upgrade an Oracle DB snapshot. The same option
            group considerations apply when upgrading a DB snapshot as when upgrading a DB instance.
            For more information, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Oracle.html#USER_UpgradeDBInstance.Oracle.OGPG.OG">Option
            Group Considerations</a> in the <i>Amazon RDS User Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBSnapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ModifyDBSnapshotResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ModifyDBSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSnapshotAttributeCmdlet">
            <summary>
            Adds an attribute and values to, or removes an attribute and values from, a manual
            DB snapshot.
            
             
            <para>
            To share a manual DB snapshot with other AWS accounts, specify <code>restore</code>
            as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to
            add a list of IDs of the AWS accounts that are authorized to restore the manual DB
            snapshot. Uses the value <code>all</code> to make the manual DB snapshot public, which
            means it can be copied or restored by all AWS accounts. Do not add the <code>all</code>
            value for any manual DB snapshots that contain private information that you don't
            want available to all AWS accounts. If the manual DB snapshot is encrypted, it can
            be shared, but only by specifying a list of authorized AWS account IDs for the <code>ValuesToAdd</code>
            parameter. You can't use <code>all</code> as a value for that parameter in this case.
            </para><para>
            To view which AWS accounts have access to copy or restore a manual DB snapshot, or
            whether a manual DB snapshot public or private, use the <code>DescribeDBSnapshotAttributes</code>
            API action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSnapshotAttributeCmdlet.AttributeName">
            <summary>
            <para>
            <para>The name of the DB snapshot attribute to modify.</para><para>To manage authorization for other AWS accounts to copy or restore a manual DB snapshot,
            set this value to <code>restore</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSnapshotAttributeCmdlet.DBSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier for the DB snapshot to modify the attributes for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSnapshotAttributeCmdlet.ValuesToAdd">
            <summary>
            <para>
            <para>A list of DB snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</para><para>To authorize other AWS accounts to copy or restore a manual snapshot, set this list
            to include one or more AWS account IDs, or <code>all</code> to make the manual DB
            snapshot restorable by any AWS account. Do not add the <code>all</code> value for
            any manual DB snapshots that contain private information that you don't want available
            to all AWS accounts.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSnapshotAttributeCmdlet.ValuesToRemove">
            <summary>
            <para>
            <para>A list of DB snapshot attributes to remove from the attribute specified by <code>AttributeName</code>.</para><para>To remove authorization for other AWS accounts to copy or restore a manual snapshot,
            set this list to include one or more AWS account identifiers, or <code>all</code>
            to remove authorization for any AWS account to copy or restore the DB snapshot. If
            you specify <code>all</code>, an AWS account whose account ID is explicitly added
            to the <code>restore</code> attribute can still copy or restore the manual DB snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSnapshotAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBSnapshotAttributesResult'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ModifyDBSnapshotAttributeResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ModifyDBSnapshotAttributeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSnapshotAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSnapshotAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSubnetGroupCmdlet">
            <summary>
            Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet
            in at least two AZs in the AWS Region.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSubnetGroupCmdlet.DBSubnetGroupDescription">
            <summary>
            <para>
            <para>The description for the DB subnet group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSubnetGroupCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The name for the DB subnet group. This value is stored as a lowercase string. You
            can't modify the default subnet group. </para><para>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSubnetGroupCmdlet.SubnetId">
            <summary>
            <para>
            <para>The EC2 subnet IDs for the DB subnet group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSubnetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBSubnetGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ModifyDBSubnetGroupResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ModifyDBSubnetGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSubnetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSubnetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSubnetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSDBSubnetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.EditRDSEventSubscriptionCmdlet">
            <summary>
            Modifies an existing RDS event notification subscription. You can't modify the source
            identifiers using this call. To change source identifiers for a subscription, use
            the <code>AddSourceIdentifierToSubscription</code> and <code>RemoveSourceIdentifierFromSubscription</code>
            calls.
            
             
            <para>
            You can see a list of the event categories for a given SourceType in the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html">Events</a>
            topic in the <i>Amazon RDS User Guide</i> or by using the <b>DescribeEventCategories</b>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSEventSubscriptionCmdlet.Enabled">
            <summary>
            <para>
            <para> A value that indicates whether to activate the subscription. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSEventSubscriptionCmdlet.EventCategory">
            <summary>
            <para>
            <para> A list of event categories for a SourceType that you want to subscribe to. You can
            see a list of the categories for a given SourceType in the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html">Events</a>
            topic in the <i>Amazon RDS User Guide</i> or by using the <b>DescribeEventCategories</b>
            action. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSEventSubscriptionCmdlet.SnsTopicArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the SNS topic created for event notification. The
            ARN is created by Amazon SNS when you create a topic and subscribe to it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSEventSubscriptionCmdlet.SourceType">
            <summary>
            <para>
            <para>The type of source that is generating the events. For example, if you want to be notified
            of events generated by a DB instance, you would set this parameter to db-instance.
            If this value isn't specified, all events are returned.</para><para>Valid values: db-instance | db-parameter-group | db-security-group | db-snapshot</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSEventSubscriptionCmdlet.SubscriptionName">
            <summary>
            <para>
            <para>The name of the RDS event notification subscription.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSEventSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventSubscription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ModifyEventSubscriptionResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ModifyEventSubscriptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSEventSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubscriptionName parameter.
            The -PassThru parameter is deprecated, use -Select '^SubscriptionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSEventSubscriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.EditRDSGlobalClusterCmdlet">
            <summary>
            Modify a setting for an Amazon Aurora global cluster. You can change one or more
            database configuration parameters by specifying these parameters and the new values
            in the request. For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSGlobalClusterCmdlet.DeletionProtection">
            <summary>
            <para>
            <para> Indicates if the global database cluster has deletion protection enabled. The global
            database cluster can't be deleted when deletion protection is enabled. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSGlobalClusterCmdlet.GlobalClusterIdentifier">
            <summary>
            <para>
            <para> The DB cluster identifier for the global cluster being modified. This parameter isn't
            case-sensitive. </para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing global database cluster.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSGlobalClusterCmdlet.NewGlobalClusterIdentifier">
            <summary>
            <para>
            <para> The new cluster identifier for the global database cluster when modifying a global
            database cluster. This value is stored as a lowercase string. </para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens</para></li><li><para>The first character must be a letter</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens</para></li></ul><para>Example: <code>my-cluster2</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSGlobalClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GlobalCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ModifyGlobalClusterResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ModifyGlobalClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSGlobalClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GlobalClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^GlobalClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSGlobalClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.EditRDSOptionGroupCmdlet">
            <summary>
            Modifies an existing option group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSOptionGroupCmdlet.ApplyImmediately">
            <summary>
            <para>
            <para>A value that indicates whether to apply the change immediately or during the next
            maintenance window for each instance associated with the option group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSOptionGroupCmdlet.OptionGroupName">
            <summary>
            <para>
            <para>The name of the option group to be modified.</para><para>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't
            be removed from an option group, and that option group can't be removed from a DB
            instance once it is associated with a DB instance</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSOptionGroupCmdlet.OptionsToInclude">
            <summary>
            <para>
            <para>Options in this list are added to the option group or, if already present, the specified
            configuration is used to update the existing configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSOptionGroupCmdlet.OptionsToRemove">
            <summary>
            <para>
            <para>Options in this list are removed from the option group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSOptionGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OptionGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ModifyOptionGroupResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ModifyOptionGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSOptionGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OptionGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^OptionGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EditRDSOptionGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.EnableRDSDBSecurityGroupIngressCmdlet">
            <summary>
            Enables ingress to a DBSecurityGroup using one of two forms of authorization. First,
            EC2 or VPC security groups can be added to the DBSecurityGroup if the application
            using the database is running on EC2 or VPC instances. Second, IP ranges are available
            if the application accessing your database is running on the Internet. Required parameters
            for this API are one of CIDR range, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId
            and either EC2SecurityGroupName or EC2SecurityGroupId for non-VPC).
            
             <note><para>
            You can't authorize ingress from an EC2 security group in one AWS Region to an Amazon
            RDS DB instance in another. You can't authorize ingress from a VPC security group
            in one VPC to an Amazon RDS DB instance in another.
            </para></note><para>
            For an overview of CIDR ranges, go to the <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Wikipedia
            Tutorial</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EnableRDSDBSecurityGroupIngressCmdlet.CIDRIP">
            <summary>
            <para>
            <para>The IP range to authorize.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EnableRDSDBSecurityGroupIngressCmdlet.DBSecurityGroupName">
            <summary>
            <para>
            <para>The name of the DB security group to add authorization to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EnableRDSDBSecurityGroupIngressCmdlet.EC2SecurityGroupId">
            <summary>
            <para>
            <para> Id of the EC2 security group to authorize. For VPC DB security groups, <code>EC2SecurityGroupId</code>
            must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code>
            or <code>EC2SecurityGroupId</code> must be provided. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EnableRDSDBSecurityGroupIngressCmdlet.EC2SecurityGroupName">
            <summary>
            <para>
            <para> Name of the EC2 security group to authorize. For VPC DB security groups, <code>EC2SecurityGroupId</code>
            must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code>
            or <code>EC2SecurityGroupId</code> must be provided. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EnableRDSDBSecurityGroupIngressCmdlet.EC2SecurityGroupOwnerId">
            <summary>
            <para>
            <para> AWS account number of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code>
            parameter. The AWS access key ID isn't an acceptable value. For VPC DB security groups,
            <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code>
            and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must
            be provided. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EnableRDSDBSecurityGroupIngressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBSecurityGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.AuthorizeDBSecurityGroupIngressResponse).
            Specifying the name of a property of type Amazon.RDS.Model.AuthorizeDBSecurityGroupIngressResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EnableRDSDBSecurityGroupIngressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSecurityGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSecurityGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.EnableRDSDBSecurityGroupIngressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSAccountAttributeCmdlet">
            <summary>
            Lists all of the attributes for a customer account. The attributes include Amazon
            RDS quotas for the account, such as the number of DB instances allowed. The description
            for a quota includes the quota name, current usage toward that quota, and the quota's
            maximum value.
            
             
            <para>
            This command doesn't take any parameters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSAccountAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AccountQuotas'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeAccountAttributesResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeAccountAttributesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSCertificateCmdlet">
            <summary>
            Lists the set of CA certificates provided by Amazon RDS for this AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSCertificateCmdlet.CertificateIdentifier">
            <summary>
            <para>
            <para>The user-supplied certificate identifier. If this parameter is specified, information
            for only the identified certificate is returned. This parameter isn't case-sensitive.</para><para>Constraints:</para><ul><li><para>Must match an existing CertificateIdentifier.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSCertificateCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSCertificateCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribeCertificates</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSCertificateCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Certificates'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeCertificatesResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeCertificatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSCertificateCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSCustomAvailabilityZoneCmdlet">
            <summary>
            Returns information about custom Availability Zones (AZs).
            
             
            <para>
            A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.
            </para><para>
            For more information about RDS on VMware, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html"><i>RDS on VMware User Guide.</i></a></para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSCustomAvailabilityZoneCmdlet.CustomAvailabilityZoneId">
            <summary>
            <para>
            <para>The custom AZ identifier. If this parameter is specified, information from only the
            specific custom AZ is returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSCustomAvailabilityZoneCmdlet.Filter">
            <summary>
            <para>
            <para>A filter that specifies one or more custom AZs to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSCustomAvailabilityZoneCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous <code>DescribeCustomAvailabilityZones</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSCustomAvailabilityZoneCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so you can retrieve the remaining results.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSCustomAvailabilityZoneCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CustomAvailabilityZones'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeCustomAvailabilityZonesResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeCustomAvailabilityZonesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSCustomAvailabilityZoneCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CustomAvailabilityZoneId parameter.
            The -PassThru parameter is deprecated, use -Select '^CustomAvailabilityZoneId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSCustomAvailabilityZoneCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterCmdlet">
            <summary>
            Returns information about provisioned Aurora DB clusters. This API supports pagination.
            
             
            <para>
            For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            This operation can also return information for Amazon Neptune DB instances and Amazon
            DocumentDB instances.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The user-supplied DB cluster identifier. If this parameter is specified, information
            from only the specific DB cluster is returned. This parameter isn't case-sensitive.</para><para>Constraints:</para><ul><li><para>If supplied, must match an existing DBClusterIdentifier.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterCmdlet.Filter">
            <summary>
            <para>
            <para>A filter that specifies one or more DB clusters to describe.</para><para>Supported filters:</para><ul><li><para><code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon
            Resource Names (ARNs). The results list will only include information about the DB
            clusters identified by these ARNs.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterCmdlet.IncludeShared">
            <summary>
            <para>
            <para>Optional Boolean parameter that specifies whether the output includes information
            about clusters shared from other AWS accounts.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous <code>DescribeDBClusters</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeDBClustersResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeDBClustersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterBacktrackListCmdlet">
            <summary>
            Returns information about backtracks for a DB cluster.
            
             
            <para>
            For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterBacktrackListCmdlet.BacktrackIdentifier">
            <summary>
            <para>
            <para>If specified, this value is the backtrack identifier of the backtrack to be described.</para><para>Constraints:</para><ul><li><para>Must contain a valid universally unique identifier (UUID). For more information about
            UUIDs, see <a href="http://www.ietf.org/rfc/rfc4122.txt">A Universally Unique Identifier
            (UUID) URN Namespace</a>.</para></li></ul><para>Example: <code>123e4567-e89b-12d3-a456-426655440000</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterBacktrackListCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The DB cluster identifier of the DB cluster to be described. This parameter is stored
            as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 alphanumeric characters or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>my-cluster1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterBacktrackListCmdlet.Filter">
            <summary>
            <para>
            <para>A filter that specifies one or more DB clusters to describe. Supported filters include
            the following:</para><ul><li><para><code>db-cluster-backtrack-id</code> - Accepts backtrack identifiers. The results
            list includes information about only the backtracks identified by these identifiers.</para></li><li><para><code>db-cluster-backtrack-status</code> - Accepts any of the following backtrack
            status values:</para><ul><li><para><code>applying</code></para></li><li><para><code>completed</code></para></li><li><para><code>failed</code></para></li><li><para><code>pending</code></para></li></ul><para>The results list includes information about only the backtracks identified by these
            values.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterBacktrackListCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribeDBClusterBacktracks</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterBacktrackListCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterBacktrackListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterBacktracks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeDBClusterBacktracksResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeDBClusterBacktracksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterBacktrackListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterEndpointCmdlet">
            <summary>
            Returns information about endpoints for an Amazon Aurora DB cluster.
            
             <note><para>
            This action only applies to Aurora DB clusters.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterEndpointCmdlet.DBClusterEndpointIdentifier">
            <summary>
            <para>
            <para>The identifier of the endpoint to describe. This parameter is stored as a lowercase
            string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterEndpointCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The DB cluster identifier of the DB cluster associated with the endpoint. This parameter
            is stored as a lowercase string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterEndpointCmdlet.Filter">
            <summary>
            <para>
            <para>A set of name-value pairs that define which endpoints to include in the output. The
            filters are specified as name-value pairs, in the format <code>Name=<i>endpoint_type</i>,Values=<i>endpoint_type1</i>,<i>endpoint_type2</i>,...</code>.
            <code>Name</code> can be one of: <code>db-cluster-endpoint-type</code>, <code>db-cluster-endpoint-custom-type</code>,
            <code>db-cluster-endpoint-id</code>, <code>db-cluster-endpoint-status</code>. <code>Values</code>
            for the <code> db-cluster-endpoint-type</code> filter can be one or more of: <code>reader</code>,
            <code>writer</code>, <code>custom</code>. <code>Values</code> for the <code>db-cluster-endpoint-custom-type</code>
            filter can be one or more of: <code>reader</code>, <code>any</code>. <code>Values</code>
            for the <code>db-cluster-endpoint-status</code> filter can be one or more of: <code>available</code>,
            <code>creating</code>, <code>deleting</code>, <code>modifying</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterEndpointCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribeDBClusterEndpoints</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterEndpointCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterEndpoints'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeDBClusterEndpointsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeDBClusterEndpointsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterEndpointCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterParameterCmdlet">
            <summary>
            Returns the detailed parameter list for a particular DB cluster parameter group.
            
             
            <para>
            For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterParameterCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of a specific DB cluster parameter group to return parameter details for.</para><para>Constraints:</para><ul><li><para>If supplied, must match the name of an existing DBClusterParameterGroup.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterParameterCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterParameterCmdlet.Source">
            <summary>
            <para>
            <para> A value that indicates to return only parameters for a specific source. Parameter
            sources can be <code>engine</code>, <code>service</code>, or <code>customer</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterParameterCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribeDBClusterParameters</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterParameterCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Parameters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeDBClusterParametersResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeDBClusterParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterParameterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterParameterCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterParameterGroupCmdlet">
            <summary>
            Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code>
            parameter is specified, the list will contain only the description of the specified
            DB cluster parameter group. 
            
             
            <para>
            For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterParameterGroupCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of a specific DB cluster parameter group to return details for.</para><para>Constraints:</para><ul><li><para>If supplied, must match the name of an existing DBClusterParameterGroup.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterParameterGroupCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterParameterGroupCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribeDBClusterParameterGroups</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterParameterGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterParameterGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeDBClusterParameterGroupsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeDBClusterParameterGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterParameterGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterSnapshotCmdlet">
            <summary>
            Returns information about DB cluster snapshots. This API action supports pagination.
            
             
            <para>
            For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterSnapshotCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The ID of the DB cluster to retrieve the list of DB cluster snapshots for. This parameter
            can't be used in conjunction with the <code>DBClusterSnapshotIdentifier</code> parameter.
            This parameter isn't case-sensitive. </para><para>Constraints:</para><ul><li><para>If supplied, must match the identifier of an existing DBCluster.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterSnapshotCmdlet.DBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>A specific DB cluster snapshot identifier to describe. This parameter can't be used
            in conjunction with the <code>DBClusterIdentifier</code> parameter. This value is
            stored as a lowercase string. </para><para>Constraints:</para><ul><li><para>If supplied, must match the identifier of an existing DBClusterSnapshot.</para></li><li><para>If this identifier is for an automated snapshot, the <code>SnapshotType</code> parameter
            must also be specified.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterSnapshotCmdlet.Filter">
            <summary>
            <para>
            <para>A filter that specifies one or more DB cluster snapshots to describe.</para><para>Supported filters:</para><ul><li><para><code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon
            Resource Names (ARNs).</para></li><li><para><code>db-cluster-snapshot-id</code> - Accepts DB cluster snapshot identifiers.</para></li><li><para><code>snapshot-type</code> - Accepts types of DB cluster snapshots.</para></li><li><para><code>engine</code> - Accepts names of database engines.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterSnapshotCmdlet.IncludePublic">
            <summary>
            <para>
            <para>A value that indicates whether to include manual DB cluster snapshots that are public
            and can be copied or restored by any AWS account. By default, the public snapshots
            are not included.</para><para>You can share a manual DB cluster snapshot as public by using the <a>ModifyDBClusterSnapshotAttribute</a>
            API action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterSnapshotCmdlet.IncludeShared">
            <summary>
            <para>
            <para>A value that indicates whether to include shared manual DB cluster snapshots from
            other AWS accounts that this AWS account has been given permission to copy or restore.
            By default, these snapshots are not included.</para><para>You can give an AWS account permission to restore a manual DB cluster snapshot from
            another AWS account by the <code>ModifyDBClusterSnapshotAttribute</code> API action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterSnapshotCmdlet.SnapshotType">
            <summary>
            <para>
            <para>The type of DB cluster snapshots to be returned. You can specify one of the following
            values:</para><ul><li><para><code>automated</code> - Return all DB cluster snapshots that have been automatically
            taken by Amazon RDS for my AWS account.</para></li><li><para><code>manual</code> - Return all DB cluster snapshots that have been taken by my
            AWS account.</para></li><li><para><code>shared</code> - Return all manual DB cluster snapshots that have been shared
            to my AWS account.</para></li><li><para><code>public</code> - Return all DB cluster snapshots that have been marked as public.</para></li></ul><para>If you don't specify a <code>SnapshotType</code> value, then both automated and manual
            DB cluster snapshots are returned. You can include shared DB cluster snapshots with
            these results by enabling the <code>IncludeShared</code> parameter. You can include
            public DB cluster snapshots with these results by enabling the <code>IncludePublic</code>
            parameter.</para><para>The <code>IncludeShared</code> and <code>IncludePublic</code> parameters don't apply
            for <code>SnapshotType</code> values of <code>manual</code> or <code>automated</code>.
            The <code>IncludePublic</code> parameter doesn't apply when <code>SnapshotType</code>
            is set to <code>shared</code>. The <code>IncludeShared</code> parameter doesn't apply
            when <code>SnapshotType</code> is set to <code>public</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterSnapshotCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous <code>DescribeDBClusterSnapshots</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterSnapshotCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterSnapshots'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeDBClusterSnapshotsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeDBClusterSnapshotsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterSnapshotCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterSnapshotAttributeCmdlet">
            <summary>
            Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster
            snapshot.
            
             
            <para>
            When sharing snapshots with other AWS accounts, <code>DescribeDBClusterSnapshotAttributes</code>
            returns the <code>restore</code> attribute and a list of IDs for the AWS accounts
            that are authorized to copy or restore the manual DB cluster snapshot. If <code>all</code>
            is included in the list of values for the <code>restore</code> attribute, then the
            manual DB cluster snapshot is public and can be copied or restored by all AWS accounts.
            </para><para>
            To add or remove access for an AWS account to copy or restore a manual DB cluster
            snapshot, or to make the manual DB cluster snapshot public or private, use the <code>ModifyDBClusterSnapshotAttribute</code>
            API action.
            </para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterSnapshotAttributeCmdlet.DBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier for the DB cluster snapshot to describe the attributes for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterSnapshotAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterSnapshotAttributesResult'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeDBClusterSnapshotAttributesResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeDBClusterSnapshotAttributesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBClusterSnapshotAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterSnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterSnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBEngineVersionCmdlet">
            <summary>
            Returns a list of the available DB engines.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBEngineVersionCmdlet.DBParameterGroupFamily">
            <summary>
            <para>
            <para>The name of a specific DB parameter group family to return details for.</para><para>Constraints:</para><ul><li><para>If supplied, must match an existing DBParameterGroupFamily.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBEngineVersionCmdlet.DefaultOnly">
            <summary>
            <para>
            <para>A value that indicates whether only the default version of the specified engine or
            engine and major version combination is returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBEngineVersionCmdlet.Engine">
            <summary>
            <para>
            <para>The database engine to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBEngineVersionCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The database engine version to return.</para><para>Example: <code>5.1.49</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBEngineVersionCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBEngineVersionCmdlet.IncludeAll">
            <summary>
            <para>
            <para>A value that indicates whether to include engine versions that aren't available in
            the list. The default is to list only available engine versions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBEngineVersionCmdlet.ListSupportedCharacterSet">
            <summary>
            <para>
            <para>A value that indicates whether to list the supported character sets for each engine
            version.</para><para>If this parameter is enabled and the requested engine supports the <code>CharacterSetName</code>
            parameter for <code>CreateDBInstance</code>, the response includes a list of supported
            character sets for each engine version. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBEngineVersionCmdlet.ListSupportedTimezone">
            <summary>
            <para>
            <para>A value that indicates whether to list the supported time zones for each engine version.</para><para>If this parameter is enabled and the requested engine supports the <code>TimeZone</code>
            parameter for <code>CreateDBInstance</code>, the response includes a list of supported
            time zones for each engine version. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBEngineVersionCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBEngineVersionCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more than the <code>MaxRecords</code>
            value is available, a pagination token called a marker is included in the response
            so you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBEngineVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBEngineVersions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeDBEngineVersionsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeDBEngineVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBEngineVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Engine parameter.
            The -PassThru parameter is deprecated, use -Select '^Engine' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBEngineVersionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBInstanceCmdlet">
            <summary>
            Returns information about provisioned RDS instances. This API supports pagination.
            
             <note><para>
            This operation can also return information for Amazon Neptune DB instances and Amazon
            DocumentDB instances.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBInstanceCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The user-supplied instance identifier. If this parameter is specified, information
            from only the specific DB instance is returned. This parameter isn't case-sensitive.</para><para>Constraints:</para><ul><li><para>If supplied, must match the identifier of an existing DBInstance.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBInstanceCmdlet.Filter">
            <summary>
            <para>
            <para>A filter that specifies one or more DB instances to describe.</para><para>Supported filters:</para><ul><li><para><code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon
            Resource Names (ARNs). The results list will only include information about the DB
            instances associated with the DB clusters identified by these ARNs.</para></li><li><para><code>db-instance-id</code> - Accepts DB instance identifiers and DB instance Amazon
            Resource Names (ARNs). The results list will only include information about the DB
            instances identified by these ARNs.</para></li><li><para><code>dbi-resource-id</code> - Accepts DB instance resource identifiers. The results
            list will only include information about the DB instances identified by these DB instance
            resource identifiers.</para></li><li><para><code>domain</code> - Accepts Active Directory directory IDs. The results list will
            only include information about the DB instances associated with these domains.</para></li><li><para><code>engine</code> - Accepts engine names. The results list will only include information
            about the DB instances for these engines.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBInstanceCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribeDBInstances</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBInstanceCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstances'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeDBInstancesResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeDBInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBInstanceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBInstanceAutomatedBackupCmdlet">
            <summary>
            Displays backups for both current and deleted instances. For example, use this operation
            to find details about automated backups for previously deleted instances. Current
            instances with retention periods greater than zero (0) are returned for both the <code>DescribeDBInstanceAutomatedBackups</code>
            and <code>DescribeDBInstances</code> operations.
            
             
            <para>
            All parameters are optional.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBInstanceAutomatedBackupCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>(Optional) The user-supplied instance identifier. If this parameter is specified,
            it must match the identifier of an existing DB instance. It returns information from
            the specific DB instance' automated backup. This parameter isn't case-sensitive. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBInstanceAutomatedBackupCmdlet.DbiResourceId">
            <summary>
            <para>
            <para>The resource ID of the DB instance that is the source of the automated backup. This
            parameter isn't case-sensitive. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBInstanceAutomatedBackupCmdlet.Filter">
            <summary>
            <para>
            <para>A filter that specifies which resources to return based on status.</para><para>Supported filters are the following:</para><ul><li><para><code>status</code></para><ul><li><para><code>active</code> - automated backups for current instances</para></li><li><para><code>retained</code> - automated backups for deleted instances</para></li><li><para><code>creating</code> - automated backups that are waiting for the first automated
            snapshot to be available</para></li></ul></li><li><para><code>db-instance-id</code> - Accepts DB instance identifiers and Amazon Resource
            Names (ARNs) for DB instances. The results list includes only information about the
            DB instance automated backupss identified by these ARNs.</para></li><li><para><code>dbi-resource-id</code> - Accepts DB instance resource identifiers and DB Amazon
            Resource Names (ARNs) for DB instances. The results list includes only information
            about the DB instance resources identified by these ARNs.</para></li></ul><para>Returns all resources by default. The status for each resource is specified in the
            response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBInstanceAutomatedBackupCmdlet.Marker">
            <summary>
            <para>
            <para>The pagination token provided in the previous request. If this parameter is specified
            the response includes only records beyond the marker, up to <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBInstanceAutomatedBackupCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that you can retrieve the remaining results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBInstanceAutomatedBackupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstanceAutomatedBackups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeDBInstanceAutomatedBackupsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeDBInstanceAutomatedBackupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBInstanceAutomatedBackupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBInstanceAutomatedBackupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBLogFileCmdlet">
            <summary>
            Returns a list of DB log files for the DB instance.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBLogFileCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The customer-assigned name of the DB instance that contains the log files you want
            to list.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing DBInstance.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBLogFileCmdlet.FileLastWritten">
            <summary>
            <para>
            <para>Filters the available log files for files written since the specified date, in POSIX
            timestamp format with milliseconds.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBLogFileCmdlet.FilenameContains">
            <summary>
            <para>
            <para>Filters the available log files for log file names that contain the specified string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBLogFileCmdlet.FileSize">
            <summary>
            <para>
            <para>Filters the available log files for files larger than the specified size.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBLogFileCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBLogFileCmdlet.Marker">
            <summary>
            <para>
            <para>The pagination token provided in the previous request. If this parameter is specified
            the response includes only records beyond the marker, up to MaxRecords.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBLogFileCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified MaxRecords value, a pagination token called a marker is included in
            the response so you can retrieve the remaining results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBLogFileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DescribeDBLogFiles'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeDBLogFilesResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeDBLogFilesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBLogFileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBLogFileCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBLogFilePortionCmdlet">
            <summary>
            Downloads all or a portion of the specified log file, up to 1 MB in size.<br/><br/>In the AWS.Tools.RDS module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBLogFilePortionCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The customer-assigned name of the DB instance that contains the log files you want
            to list.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing DBInstance.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBLogFilePortionCmdlet.LogFileName">
            <summary>
            <para>
            <para>The name of the log file to be downloaded.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBLogFilePortionCmdlet.NumberOfLines">
            <summary>
            <para>
            <para>The number of lines to download. If the number of lines specified results in a file
            over 1 MB in size, the file is truncated at 1 MB in size.</para><para>If the NumberOfLines parameter is specified, then the block of lines returned can
            be from the beginning or the end of the log file, depending on the value of the Marker
            parameter.</para><ul><li><para>If neither Marker or NumberOfLines are specified, the entire log file is returned
            up to a maximum of 10000 lines, starting with the most recent log entries first.</para></li><li><para>If NumberOfLines is specified and Marker isn't specified, then the most recent lines
            from the end of the log file are returned.</para></li><li><para>If Marker is specified as "0", then the specified number of lines from the beginning
            of the log file are returned.</para></li><li><para>You can download the log file in blocks of lines by specifying the size of the block
            using the NumberOfLines parameter, and by specifying a value of "0" for the Marker
            parameter in your first request. Include the Marker value returned in the response
            as the Marker value for the next request, continuing until the AdditionalDataPending
            response element returns false.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBLogFilePortionCmdlet.Marker">
            <summary>
            <para>
            <para>The pagination token provided in the previous request or "0". If the Marker parameter
            is specified the response includes only records beyond the marker until the end of
            the file or up to NumberOfLines.</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.RDS module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBLogFilePortionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DownloadDBLogFilePortionResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DownloadDBLogFilePortionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBLogFilePortionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBLogFilePortionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBParameterCmdlet">
            <summary>
            Returns the detailed parameter list for a particular DB parameter group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBParameterCmdlet.DBParameterGroupName">
            <summary>
            <para>
            <para>The name of a specific DB parameter group to return details for.</para><para>Constraints:</para><ul><li><para>If supplied, must match the name of an existing DBParameterGroup.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBParameterCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBParameterCmdlet.Source">
            <summary>
            <para>
            <para>The parameter types to return.</para><para>Default: All parameter types returned</para><para>Valid Values: <code>user | system | engine-default</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBParameterCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribeDBParameters</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBParameterCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Parameters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeDBParametersResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeDBParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBParameterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBParameterCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBParameterGroupCmdlet">
            <summary>
            Returns a list of <code>DBParameterGroup</code> descriptions. If a <code>DBParameterGroupName</code>
            is specified, the list will contain only the description of the specified DB parameter
            group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBParameterGroupCmdlet.DBParameterGroupName">
            <summary>
            <para>
            <para>The name of a specific DB parameter group to return details for.</para><para>Constraints:</para><ul><li><para>If supplied, must match the name of an existing DBClusterParameterGroup.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBParameterGroupCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBParameterGroupCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribeDBParameterGroups</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBParameterGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBParameterGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeDBParameterGroupsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeDBParameterGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBParameterGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyCmdlet">
            <summary>
            <note><para>
            This is prerelease documentation for the RDS Database Proxy feature in preview release.
            It is subject to change.
            </para></note><para>
            Returns information about DB proxies.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyCmdlet.DBProxyName">
            <summary>
            <para>
            <para>The name of the DB proxy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBProxies'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeDBProxiesResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeDBProxiesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBProxyName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBProxyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyTargetCmdlet">
            <summary>
            <note><para>
            This is prerelease documentation for the RDS Database Proxy feature in preview release.
            It is subject to change.
            </para></note><para>
            Returns information about <code>DBProxyTarget</code> objects. This API supports pagination.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyTargetCmdlet.DBProxyName">
            <summary>
            <para>
            <para>The identifier of the <code>DBProxyTarget</code> to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyTargetCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyTargetCmdlet.TargetGroupName">
            <summary>
            <para>
            <para>The identifier of the <code>DBProxyTargetGroup</code> to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyTargetCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyTargetCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Targets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeDBProxyTargetsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeDBProxyTargetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyTargetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBProxyName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBProxyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyTargetCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyTargetGroupCmdlet">
            <summary>
            <note><para>
            This is prerelease documentation for the RDS Database Proxy feature in preview release.
            It is subject to change.
            </para></note><para>
            Returns information about DB proxy target groups, represented by <code>DBProxyTargetGroup</code>
            data structures.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyTargetGroupCmdlet.DBProxyName">
            <summary>
            <para>
            <para>The identifier of the <code>DBProxy</code> associated with the target group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyTargetGroupCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyTargetGroupCmdlet.TargetGroupName">
            <summary>
            <para>
            <para>The identifier of the <code>DBProxyTargetGroup</code> to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyTargetGroupCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyTargetGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyTargetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TargetGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeDBProxyTargetGroupsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeDBProxyTargetGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyTargetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBProxyName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBProxyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBProxyTargetGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSecurityGroupCmdlet">
            <summary>
            Returns a list of <code>DBSecurityGroup</code> descriptions. If a <code>DBSecurityGroupName</code>
            is specified, the list will contain only the descriptions of the specified DB security
            group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSecurityGroupCmdlet.DBSecurityGroupName">
            <summary>
            <para>
            <para>The name of the DB security group to return details for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSecurityGroupCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSecurityGroupCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribeDBSecurityGroups</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSecurityGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSecurityGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBSecurityGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeDBSecurityGroupsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeDBSecurityGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSecurityGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSecurityGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSecurityGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSecurityGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSnapshotCmdlet">
            <summary>
            Returns information about DB snapshots. This API action supports pagination.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSnapshotCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The ID of the DB instance to retrieve the list of DB snapshots for. This parameter
            can't be used in conjunction with <code>DBSnapshotIdentifier</code>. This parameter
            isn't case-sensitive. </para><para>Constraints:</para><ul><li><para>If supplied, must match the identifier of an existing DBInstance.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSnapshotCmdlet.DbiResourceId">
            <summary>
            <para>
            <para>A specific DB resource ID to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSnapshotCmdlet.DBSnapshotIdentifier">
            <summary>
            <para>
            <para> A specific DB snapshot identifier to describe. This parameter can't be used in conjunction
            with <code>DBInstanceIdentifier</code>. This value is stored as a lowercase string.
            </para><para>Constraints:</para><ul><li><para>If supplied, must match the identifier of an existing DBSnapshot.</para></li><li><para>If this identifier is for an automated snapshot, the <code>SnapshotType</code> parameter
            must also be specified.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSnapshotCmdlet.Filter">
            <summary>
            <para>
            <para>A filter that specifies one or more DB snapshots to describe.</para><para>Supported filters:</para><ul><li><para><code>db-instance-id</code> - Accepts DB instance identifiers and DB instance Amazon
            Resource Names (ARNs).</para></li><li><para><code>db-snapshot-id</code> - Accepts DB snapshot identifiers.</para></li><li><para><code>dbi-resource-id</code> - Accepts identifiers of source DB instances.</para></li><li><para><code>snapshot-type</code> - Accepts types of DB snapshots.</para></li><li><para><code>engine</code> - Accepts names of database engines.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSnapshotCmdlet.IncludePublic">
            <summary>
            <para>
            <para>A value that indicates whether to include manual DB cluster snapshots that are public
            and can be copied or restored by any AWS account. By default, the public snapshots
            are not included.</para><para>You can share a manual DB snapshot as public by using the <a>ModifyDBSnapshotAttribute</a>
            API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSnapshotCmdlet.IncludeShared">
            <summary>
            <para>
            <para>A value that indicates whether to include shared manual DB cluster snapshots from
            other AWS accounts that this AWS account has been given permission to copy or restore.
            By default, these snapshots are not included.</para><para>You can give an AWS account permission to restore a manual DB snapshot from another
            AWS account by using the <code>ModifyDBSnapshotAttribute</code> API action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSnapshotCmdlet.SnapshotType">
            <summary>
            <para>
            <para>The type of snapshots to be returned. You can specify one of the following values:</para><ul><li><para><code>automated</code> - Return all DB snapshots that have been automatically taken
            by Amazon RDS for my AWS account.</para></li><li><para><code>manual</code> - Return all DB snapshots that have been taken by my AWS account.</para></li><li><para><code>shared</code> - Return all manual DB snapshots that have been shared to my
            AWS account.</para></li><li><para><code>public</code> - Return all DB snapshots that have been marked as public.</para></li><li><para><code>awsbackup</code> - Return the DB snapshots managed by the AWS Backup service.</para><para>For information about AWS Backup, see the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html"><i>AWS Backup Developer Guide.</i></a></para><para>The <code>awsbackup</code> type does not apply to Aurora.</para></li></ul><para>If you don't specify a <code>SnapshotType</code> value, then both automated and manual
            snapshots are returned. Shared and public DB snapshots are not included in the returned
            results by default. You can include shared snapshots with these results by enabling
            the <code>IncludeShared</code> parameter. You can include public snapshots with these
            results by enabling the <code>IncludePublic</code> parameter.</para><para>The <code>IncludeShared</code> and <code>IncludePublic</code> parameters don't apply
            for <code>SnapshotType</code> values of <code>manual</code> or <code>automated</code>.
            The <code>IncludePublic</code> parameter doesn't apply when <code>SnapshotType</code>
            is set to <code>shared</code>. The <code>IncludeShared</code> parameter doesn't apply
            when <code>SnapshotType</code> is set to <code>public</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSnapshotCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribeDBSnapshots</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSnapshotCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBSnapshots'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeDBSnapshotsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeDBSnapshotsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSnapshotCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSnapshotAttributeCmdlet">
            <summary>
            Returns a list of DB snapshot attribute names and values for a manual DB snapshot.
            
             
            <para>
            When sharing snapshots with other AWS accounts, <code>DescribeDBSnapshotAttributes</code>
            returns the <code>restore</code> attribute and a list of IDs for the AWS accounts
            that are authorized to copy or restore the manual DB snapshot. If <code>all</code>
            is included in the list of values for the <code>restore</code> attribute, then the
            manual DB snapshot is public and can be copied or restored by all AWS accounts.
            </para><para>
            To add or remove access for an AWS account to copy or restore a manual DB snapshot,
            or to make the manual DB snapshot public or private, use the <code>ModifyDBSnapshotAttribute</code>
            API action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSnapshotAttributeCmdlet.DBSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier for the DB snapshot to describe the attributes for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSnapshotAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBSnapshotAttributesResult'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeDBSnapshotAttributesResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeDBSnapshotAttributesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSnapshotAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSubnetGroupCmdlet">
            <summary>
            Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified,
            the list will contain only the descriptions of the specified DBSubnetGroup.
            
             
            <para>
            For an overview of CIDR ranges, go to the <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Wikipedia
            Tutorial</a>. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSubnetGroupCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The name of the DB subnet group to return details for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSubnetGroupCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSubnetGroupCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous DescribeDBSubnetGroups request.
            If this parameter is specified, the response includes only records beyond the marker,
            up to the value specified by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSubnetGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSubnetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBSubnetGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeDBSubnetGroupsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeDBSubnetGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSubnetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSubnetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSubnetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSDBSubnetGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSEngineDefaultClusterParameterCmdlet">
            <summary>
            Returns the default engine and system parameter information for the cluster database
            engine.
            
             
            <para>
            For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i></para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEngineDefaultClusterParameterCmdlet.DBParameterGroupFamily">
            <summary>
            <para>
            <para>The name of the DB cluster parameter group family to return engine parameter information
            for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEngineDefaultClusterParameterCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEngineDefaultClusterParameterCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribeEngineDefaultClusterParameters</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEngineDefaultClusterParameterCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEngineDefaultClusterParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EngineDefaults'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeEngineDefaultClusterParametersResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeEngineDefaultClusterParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSEngineDefaultParameterCmdlet">
            <summary>
            Returns the default engine and system parameter information for the specified database
            engine.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEngineDefaultParameterCmdlet.DBParameterGroupFamily">
            <summary>
            <para>
            <para>The name of the DB parameter group family.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEngineDefaultParameterCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEngineDefaultParameterCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribeEngineDefaultParameters</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEngineDefaultParameterCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEngineDefaultParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EngineDefaults.Parameters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeEngineDefaultParametersResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeEngineDefaultParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEngineDefaultParameterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBParameterGroupFamily parameter.
            The -PassThru parameter is deprecated, use -Select '^DBParameterGroupFamily' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEngineDefaultParameterCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventCmdlet">
            <summary>
            Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter
            groups for the past 14 days. Events specific to a particular DB instance, DB security
            group, database snapshot, or DB parameter group can be obtained by providing the name
            as a parameter. By default, the past hour of events are returned.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventCmdlet.Duration">
            <summary>
            <para>
            <para>The number of minutes to retrieve events for.</para><para>Default: 60</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventCmdlet.UtcEndTime">
            <summary>
            <para>
            <para> The end of the time interval for which to retrieve events, specified in ISO 8601
            format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a></para><para>Example: 2009-07-08T18:00Z</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventCmdlet.EventCategory">
            <summary>
            <para>
            <para>A list of event categories that trigger notifications for a event notification subscription.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventCmdlet.SourceIdentifier">
            <summary>
            <para>
            <para>The identifier of the event source for which events are returned. If not specified,
            then all sources are included in the response.</para><para>Constraints:</para><ul><li><para>If SourceIdentifier is supplied, SourceType must also be provided.</para></li><li><para>If the source type is <code>DBInstance</code>, then a <code>DBInstanceIdentifier</code>
            must be supplied.</para></li><li><para>If the source type is <code>DBSecurityGroup</code>, a <code>DBSecurityGroupName</code>
            must be supplied.</para></li><li><para>If the source type is <code>DBParameterGroup</code>, a <code>DBParameterGroupName</code>
            must be supplied.</para></li><li><para>If the source type is <code>DBSnapshot</code>, a <code>DBSnapshotIdentifier</code>
            must be supplied.</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventCmdlet.SourceType">
            <summary>
            <para>
            <para>The event source to retrieve events for. If no value is specified, all events are
            returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventCmdlet.UtcStartTime">
            <summary>
            <para>
            <para> The beginning of the time interval to retrieve events for, specified in ISO 8601
            format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a></para><para>Example: 2009-07-08T18:00Z</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventCmdlet.EndTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc
            results in both EndTime and EndTimeUtc being assigned, the latest assignment to either
            one of the two property is reflected in the value of both. EndTime is provided for
            backwards compatibility only and assigning a non-Utc DateTime to it results in the
            wrong timestamp being passed to the service.</para><para> The end of the time interval for which to retrieve events, specified in ISO 8601
            format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a></para><para>Example: 2009-07-08T18:00Z</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous DescribeEvents request. If this
            parameter is specified, the response includes only records beyond the marker, up to
            the value specified by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventCmdlet.StartTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or
            StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. StartTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para> The beginning of the time interval to retrieve events for, specified in ISO 8601
            format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a></para><para>Example: 2009-07-08T18:00Z</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Events'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeEventsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeEventsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventCategoryCmdlet">
            <summary>
            Displays a list of categories for all event source types, or, if specified, for a
            specified source type. You can see a list of the event categories and source types
            in the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html">
            Events</a> topic in the <i>Amazon RDS User Guide.</i>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventCategoryCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventCategoryCmdlet.SourceType">
            <summary>
            <para>
            <para>The type of source that is generating the events.</para><para>Valid values: db-instance | db-parameter-group | db-security-group | db-snapshot</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventCategoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventCategoriesMapList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeEventCategoriesResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeEventCategoriesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventCategoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceType parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventSubscriptionCmdlet">
            <summary>
            Lists all the subscription descriptions for a customer account. The description for
            a subscription includes SubscriptionName, SNSTopicARN, CustomerID, SourceType, SourceID,
            CreationTime, and Status.
            
             
            <para>
            If you specify a SubscriptionName, lists the description for that subscription.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventSubscriptionCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventSubscriptionCmdlet.SubscriptionName">
            <summary>
            <para>
            <para>The name of the RDS event notification subscription you want to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventSubscriptionCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code> . </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventSubscriptionCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventSubscriptionsList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeEventSubscriptionsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeEventSubscriptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubscriptionName parameter.
            The -PassThru parameter is deprecated, use -Select '^SubscriptionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSEventSubscriptionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSExportTaskCmdlet">
            <summary>
            Returns information about a snapshot export to Amazon S3. This API operation supports
            pagination.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSExportTaskCmdlet.ExportTaskIdentifier">
            <summary>
            <para>
            <para>The identifier of the snapshot export task to be described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSExportTaskCmdlet.Filter">
            <summary>
            <para>
            <para>Filters specify one or more snapshot exports to describe. The filters are specified
            as name-value pairs that define what to include in the output.</para><para>Supported filters include the following: </para><ul><li><para><code>export-task-identifier</code> - An identifier for the snapshot export task.</para></li><li><para><code>s3-bucket</code> - The Amazon S3 bucket the snapshot is exported to.</para></li><li><para><code>source-arn</code> - The Amazon Resource Name (ARN) of the snapshot exported
            to Amazon S3</para></li><li><para><code>status</code> - The status of the export task.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSExportTaskCmdlet.SourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the snapshot exported to Amazon S3.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSExportTaskCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribeExportTasks</code>
            request. If you specify this parameter, the response includes only records beyond
            the marker, up to the value specified by the <code>MaxRecords</code> parameter. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSExportTaskCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified value, a pagination token called a marker is included in the response.
            You can use the marker in a later <code>DescribeExportTasks</code> request to retrieve
            the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSExportTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ExportTasks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeExportTasksResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeExportTasksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSExportTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExportTaskIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ExportTaskIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSExportTaskCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSGlobalClusterCmdlet">
            <summary>
            Returns information about Aurora global database clusters. This API supports pagination.
            
            
             
            <para>
             For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSGlobalClusterCmdlet.Filter">
            <summary>
            <para>
            <para>A filter that specifies one or more global DB clusters to describe.</para><para>Supported filters:</para><ul><li><para><code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon
            Resource Names (ARNs). The results list will only include information about the DB
            clusters identified by these ARNs.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSGlobalClusterCmdlet.GlobalClusterIdentifier">
            <summary>
            <para>
            <para> The user-supplied DB cluster identifier. If this parameter is specified, information
            from only the specific DB cluster is returned. This parameter isn't case-sensitive.
            </para><para>Constraints:</para><ul><li><para>If supplied, must match an existing DBClusterIdentifier.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSGlobalClusterCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribeGlobalClusters</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSGlobalClusterCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSGlobalClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GlobalClusters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeGlobalClustersResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeGlobalClustersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSGlobalClusterCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSInstallationMediaCmdlet">
            <summary>
            Describes the available installation media for a DB engine that requires an on-premises
            customer provided license, such as Microsoft SQL Server.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSInstallationMediaCmdlet.Filter">
            <summary>
            <para>
            <para>A filter that specifies one or more installation media to describe. Supported filters
            include the following:</para><ul><li><para><code>custom-availability-zone-id</code> - Accepts custom Availability Zone (AZ)
            identifiers. The results list includes information about only the custom AZs identified
            by these identifiers.</para></li><li><para><code>engine</code> - Accepts database engines. The results list includes information
            about only the database engines identified by these identifiers.</para><para>For more information about the valid engines for installation media, see <a>ImportInstallationMedia</a>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSInstallationMediaCmdlet.InstallationMediaId">
            <summary>
            <para>
            <para>The installation medium ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSInstallationMediaCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSInstallationMediaCmdlet.MaxRecord">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous DescribeInstallationMedia request.
            If this parameter is specified, the response includes only records beyond the marker,
            up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSInstallationMediaCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstallationMedia'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeInstallationMediaResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeInstallationMediaResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSInstallationMediaCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstallationMediaId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstallationMediaId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSInstallationMediaCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSOptionGroupCmdlet">
            <summary>
            Describes the available option groups.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOptionGroupCmdlet.EngineName">
            <summary>
            <para>
            <para>Filters the list of option groups to only include groups associated with a specific
            database engine.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOptionGroupCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOptionGroupCmdlet.MajorEngineVersion">
            <summary>
            <para>
            <para>Filters the list of option groups to only include groups associated with a specific
            database engine version. If specified, then EngineName must also be specified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOptionGroupCmdlet.OptionGroupName">
            <summary>
            <para>
            <para>The name of the option group to describe. Can't be supplied together with EngineName
            or MajorEngineVersion.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOptionGroupCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous DescribeOptionGroups request.
            If this parameter is specified, the response includes only records beyond the marker,
            up to the value specified by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOptionGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOptionGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OptionGroupsList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeOptionGroupsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeOptionGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOptionGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OptionGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^OptionGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOptionGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSOptionGroupOptionCmdlet">
            <summary>
            Describes all available options.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOptionGroupOptionCmdlet.EngineName">
            <summary>
            <para>
            <para>A required parameter. Options available for the given engine name are described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOptionGroupOptionCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOptionGroupOptionCmdlet.MajorEngineVersion">
            <summary>
            <para>
            <para>If specified, filters the results to include only options for the specified major
            engine version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOptionGroupOptionCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOptionGroupOptionCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOptionGroupOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OptionGroupOptions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeOptionGroupOptionsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeOptionGroupOptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOptionGroupOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EngineName parameter.
            The -PassThru parameter is deprecated, use -Select '^EngineName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOptionGroupOptionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSOrderableDBInstanceOptionCmdlet">
            <summary>
            Returns a list of orderable DB instance options for the specified engine.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOrderableDBInstanceOptionCmdlet.AvailabilityZoneGroup">
            <summary>
            <para>
            <para>The Availability Zone group associated with a Local Zone. Specify this parameter to
            retrieve available offerings for the Local Zones in the group.</para><para>Omit this parameter to show the available offerings in the specified AWS Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOrderableDBInstanceOptionCmdlet.DBInstanceClass">
            <summary>
            <para>
            <para>The DB instance class filter value. Specify this parameter to show only the available
            offerings matching the specified DB instance class.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOrderableDBInstanceOptionCmdlet.Engine">
            <summary>
            <para>
            <para>The name of the engine to retrieve DB instance options for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOrderableDBInstanceOptionCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The engine version filter value. Specify this parameter to show only the available
            offerings matching the specified engine version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOrderableDBInstanceOptionCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOrderableDBInstanceOptionCmdlet.LicenseModel">
            <summary>
            <para>
            <para>The license model filter value. Specify this parameter to show only the available
            offerings matching the specified license model.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOrderableDBInstanceOptionCmdlet.Vpc">
            <summary>
            <para>
            <para>A value that indicates whether to show only VPC or non-VPC offerings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOrderableDBInstanceOptionCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code> . </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOrderableDBInstanceOptionCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOrderableDBInstanceOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OrderableDBInstanceOptions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeOrderableDBInstanceOptionsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeOrderableDBInstanceOptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOrderableDBInstanceOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Engine parameter.
            The -PassThru parameter is deprecated, use -Select '^Engine' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSOrderableDBInstanceOptionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSPendingMaintenanceActionCmdlet">
            <summary>
            Returns a list of resources (for example, DB instances) that have at least one pending
            maintenance action.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSPendingMaintenanceActionCmdlet.Filter">
            <summary>
            <para>
            <para>A filter that specifies one or more resources to return pending maintenance actions
            for.</para><para>Supported filters:</para><ul><li><para><code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon
            Resource Names (ARNs). The results list will only include pending maintenance actions
            for the DB clusters identified by these ARNs.</para></li><li><para><code>db-instance-id</code> - Accepts DB instance identifiers and DB instance ARNs.
            The results list will only include pending maintenance actions for the DB instances
            identified by these ARNs.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSPendingMaintenanceActionCmdlet.ResourceIdentifier">
            <summary>
            <para>
            <para>The ARN of a resource to return pending maintenance actions for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSPendingMaintenanceActionCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous <code>DescribePendingMaintenanceActions</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to a number of records specified by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSPendingMaintenanceActionCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSPendingMaintenanceActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PendingMaintenanceActions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribePendingMaintenanceActionsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribePendingMaintenanceActionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSPendingMaintenanceActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSPendingMaintenanceActionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstanceCmdlet">
            <summary>
            Returns information about reserved DB instances for this account, or about a specified
            reserved DB instance.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstanceCmdlet.DBInstanceClass">
            <summary>
            <para>
            <para>The DB instance class filter value. Specify this parameter to show only those reservations
            matching the specified DB instances class.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstanceCmdlet.Duration">
            <summary>
            <para>
            <para>The duration filter value, specified in years or seconds. Specify this parameter to
            show only reservations for this duration.</para><para>Valid Values: <code>1 | 3 | 31536000 | 94608000</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstanceCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstanceCmdlet.LeaseId">
            <summary>
            <para>
            <para>The lease identifier filter value. Specify this parameter to show only the reservation
            that matches the specified lease ID.</para><note><para>AWS Support might request the lease ID for an issue related to a reserved DB instance.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstanceCmdlet.MultiAZ">
            <summary>
            <para>
            <para>A value that indicates whether to show only those reservations that support Multi-AZ.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstanceCmdlet.OfferingType">
            <summary>
            <para>
            <para>The offering type filter value. Specify this parameter to show only the available
            offerings matching the specified offering type.</para><para>Valid Values: <code>"Partial Upfront" | "All Upfront" | "No Upfront" </code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstanceCmdlet.ProductDescription">
            <summary>
            <para>
            <para>The product description filter value. Specify this parameter to show only those reservations
            matching the specified product description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstanceCmdlet.ReservedDBInstanceId">
            <summary>
            <para>
            <para>The reserved DB instance identifier filter value. Specify this parameter to show only
            the reservation that matches the specified reservation ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstanceCmdlet.ReservedDBInstancesOfferingId">
            <summary>
            <para>
            <para>The offering identifier filter value. Specify this parameter to show only purchased
            reservations matching the specified offering identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstanceCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstanceCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more than the <code>MaxRecords</code>
            value is available, a pagination token called a marker is included in the response
            so you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReservedDBInstances'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeReservedDBInstancesResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeReservedDBInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedDBInstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedDBInstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstanceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstancesOfferingListCmdlet">
            <summary>
            Lists available reserved DB instance offerings.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstancesOfferingListCmdlet.DBInstanceClass">
            <summary>
            <para>
            <para>The DB instance class filter value. Specify this parameter to show only the available
            offerings matching the specified DB instance class.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstancesOfferingListCmdlet.Duration">
            <summary>
            <para>
            <para>Duration filter value, specified in years or seconds. Specify this parameter to show
            only reservations for this duration.</para><para>Valid Values: <code>1 | 3 | 31536000 | 94608000</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstancesOfferingListCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstancesOfferingListCmdlet.MultiAZ">
            <summary>
            <para>
            <para>A value that indicates whether to show only those reservations that support Multi-AZ.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstancesOfferingListCmdlet.OfferingType">
            <summary>
            <para>
            <para>The offering type filter value. Specify this parameter to show only the available
            offerings matching the specified offering type.</para><para>Valid Values: <code>"Partial Upfront" | "All Upfront" | "No Upfront" </code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstancesOfferingListCmdlet.ProductDescription">
            <summary>
            <para>
            <para>Product description filter value. Specify this parameter to show only the available
            offerings that contain the specified product description.</para><note><para>The results show offerings that partially match the filter value.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstancesOfferingListCmdlet.ReservedDBInstancesOfferingId">
            <summary>
            <para>
            <para>The offering identifier filter value. Specify this parameter to show only the available
            offering that matches the specified reservation identifier.</para><para>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstancesOfferingListCmdlet.Marker">
            <summary>
            <para>
            <para> An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstancesOfferingListCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more than the <code>MaxRecords</code>
            value is available, a pagination token called a marker is included in the response
            so you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstancesOfferingListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReservedDBInstancesOfferings'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeReservedDBInstancesOfferingsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeReservedDBInstancesOfferingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstancesOfferingListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedDBInstancesOfferingId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedDBInstancesOfferingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSReservedDBInstancesOfferingListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSSourceRegionCmdlet">
            <summary>
            Returns a list of the source AWS Regions where the current AWS Region can create a
            read replica or copy a DB snapshot from. This API action supports pagination.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSSourceRegionCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSSourceRegionCmdlet.RegionName">
            <summary>
            <para>
            <para>The source AWS Region name. For example, <code>us-east-1</code>.</para><para>Constraints:</para><ul><li><para>Must specify a valid AWS Region name.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSSourceRegionCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous <code>DescribeSourceRegions</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSSourceRegionCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so you can retrieve the remaining results. </para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSSourceRegionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SourceRegions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeSourceRegionsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeSourceRegionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSSourceRegionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSTagForResourceCmdlet">
            <summary>
            Lists all tags on an Amazon RDS resource.
            
             
            <para>
            For an overview on tagging an Amazon RDS resource, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html">Tagging
            Amazon RDS Resources</a> in the <i>Amazon RDS User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSTagForResourceCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter isn't currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSTagForResourceCmdlet.ResourceName">
            <summary>
            <para>
            <para>The Amazon RDS resource with tags to be listed. This value is an Amazon Resource Name
            (ARN). For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing">
            Constructing an ARN for Amazon RDS</a> in the <i>Amazon RDS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSTagForResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TagList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSTagForResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceName parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.GetRDSValidDBInstanceModificationCmdlet">
            <summary>
            You can call <code>DescribeValidDBInstanceModifications</code> to learn what modifications
            you can make to your DB instance. You can use this information when you call <code>ModifyDBInstance</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSValidDBInstanceModificationCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The customer identifier or the ARN of your DB instance. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSValidDBInstanceModificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ValidDBInstanceModificationsMessage'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DescribeValidDBInstanceModificationsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DescribeValidDBInstanceModificationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.GetRDSValidDBInstanceModificationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.ImportRDSInstallationMediaCmdlet">
            <summary>
            Imports the installation media for a DB engine that requires an on-premises customer
            provided license, such as SQL Server.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ImportRDSInstallationMediaCmdlet.CustomAvailabilityZoneId">
            <summary>
            <para>
            <para>The identifier of the custom Availability Zone (AZ) to import the installation media
            to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ImportRDSInstallationMediaCmdlet.Engine">
            <summary>
            <para>
            <para>The name of the database engine to be used for this instance. </para><para>The list only includes supported DB engines that require an on-premises customer provided
            license. </para><para>Valid Values: </para><ul><li><para><code>sqlserver-ee</code></para></li><li><para><code>sqlserver-se</code></para></li><li><para><code>sqlserver-ex</code></para></li><li><para><code>sqlserver-web</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ImportRDSInstallationMediaCmdlet.EngineInstallationMediaPath">
            <summary>
            <para>
            <para>The path to the installation medium for the specified DB engine.</para><para>Example: <code>SQLServerISO/en_sql_server_2016_enterprise_x64_dvd_8701793.iso</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ImportRDSInstallationMediaCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The version number of the database engine to use.</para><para>For a list of valid engine versions, call <a>DescribeDBEngineVersions</a>.</para><para>The following are the database engines and links to information about the major and
            minor versions. The list only includes DB engines that require an on-premises customer
            provided license.</para><para><b>Microsoft SQL Server</b></para><para>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.FeatureSupport">Version
            and Feature Support on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ImportRDSInstallationMediaCmdlet.OSInstallationMediaPath">
            <summary>
            <para>
            <para>The path to the installation medium for the operating system associated with the specified
            DB engine.</para><para>Example: <code>WindowsISO/en_windows_server_2016_x64_dvd_9327751.iso</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ImportRDSInstallationMediaCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ImportInstallationMediaResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ImportInstallationMediaResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ImportRDSInstallationMediaCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CustomAvailabilityZoneId parameter.
            The -PassThru parameter is deprecated, use -Select '^CustomAvailabilityZoneId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ImportRDSInstallationMediaCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.NewRDSCustomAvailabilityZoneCmdlet">
            <summary>
            Creates a custom Availability Zone (AZ).
            
             
            <para>
            A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.
            </para><para>
            For more information about RDS on VMware, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html"><i>RDS on VMware User Guide.</i></a></para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSCustomAvailabilityZoneCmdlet.CustomAvailabilityZoneName">
            <summary>
            <para>
            <para>The name of the custom Availability Zone (AZ).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSCustomAvailabilityZoneCmdlet.ExistingVpnId">
            <summary>
            <para>
            <para>The ID of an existing virtual private network (VPN) between the Amazon RDS website
            and the VMware vSphere cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSCustomAvailabilityZoneCmdlet.NewVpnTunnelName">
            <summary>
            <para>
            <para>The name of a new VPN tunnel between the Amazon RDS website and the VMware vSphere
            cluster.</para><para>Specify this parameter only if <code>ExistingVpnId</code> isn't specified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSCustomAvailabilityZoneCmdlet.VpnTunnelOriginatorIP">
            <summary>
            <para>
            <para>The IP address of network traffic from your on-premises data center. A custom AZ receives
            the network traffic.</para><para>Specify this parameter only if <code>ExistingVpnId</code> isn't specified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSCustomAvailabilityZoneCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CustomAvailabilityZone'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CreateCustomAvailabilityZoneResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CreateCustomAvailabilityZoneResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSCustomAvailabilityZoneCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CustomAvailabilityZoneName parameter.
            The -PassThru parameter is deprecated, use -Select '^CustomAvailabilityZoneName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSCustomAvailabilityZoneCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet">
            <summary>
            Creates a new Amazon Aurora DB cluster.
            
             
            <para>
            You can use the <code>ReplicationSourceIdentifier</code> parameter to create the DB
            cluster as a read replica of another DB cluster or Amazon RDS MySQL DB instance. For
            cross-region replication where the DB cluster identified by <code>ReplicationSourceIdentifier</code>
            is encrypted, you must also specify the <code>PreSignedUrl</code> parameter.
            </para><para>
            For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.ScalingConfiguration_AutoPause">
            <summary>
            <para>
            <para>A value that indicates whether to allow or disallow automatic pause for an Aurora
            DB cluster in <code>serverless</code> DB engine mode. A DB cluster can be paused only
            when it's idle (it has no connections).</para><note><para>If a DB cluster is paused for more than seven days, the DB cluster might be backed
            up with a snapshot. In this case, the DB cluster is restored when there is a request
            to connect to it. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>A list of Availability Zones (AZs) where instances in the DB cluster can be created.
            For information on AWS Regions and Availability Zones, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.RegionsAndAvailabilityZones.html">Choosing
            the Regions and Availability Zones</a> in the <i>Amazon Aurora User Guide</i>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.BacktrackWindow">
            <summary>
            <para>
            <para>The target backtrack window, in seconds. To disable backtracking, set this value to
            0. </para><para>Default: 0</para><para>Constraints:</para><ul><li><para>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.BackupRetentionPeriod">
            <summary>
            <para>
            <para>The number of days for which automated backups are retained.</para><para>Default: 1</para><para>Constraints:</para><ul><li><para>Must be a value from 1 to 35</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.CharacterSetName">
            <summary>
            <para>
            <para>A value that indicates that the DB cluster should be associated with the specified
            CharacterSet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.CopyTagsToSnapshot">
            <summary>
            <para>
            <para>A value that indicates whether to copy all tags from the DB cluster to snapshots of
            the DB cluster. The default is not to copy them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name for your database of up to 64 alphanumeric characters. If you do not provide
            a name, Amazon RDS doesn't create a database in the DB cluster you are creating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The DB cluster identifier. This parameter is stored as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>my-cluster1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para> The name of the DB cluster parameter group to associate with this DB cluster. If
            you do not specify a value, then the default DB cluster parameter group for the specified
            DB engine and version is used. </para><para>Constraints:</para><ul><li><para>If supplied, must match the name of an existing DB cluster parameter group.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>A DB subnet group to associate with this DB cluster.</para><para>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.DeletionProtection">
            <summary>
            <para>
            <para>A value that indicates whether the DB cluster has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.Domain">
            <summary>
            <para>
            <para>The Active Directory directory ID to create the DB cluster in.</para><para> For Amazon Aurora DB clusters, Amazon RDS can use Kerberos Authentication to authenticate
            users that connect to the DB cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html">Kerberos
            Authentication</a> in the <i>Amazon Aurora User Guide</i>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.DomainIAMRoleName">
            <summary>
            <para>
            <para>Specify the name of the IAM role to be used when making API calls to the Directory
            Service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.EnableCloudwatchLogsExport">
            <summary>
            <para>
            <para>The list of log types that need to be enabled for exporting to CloudWatch Logs. The
            values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing
            Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.EnableHttpEndpoint">
            <summary>
            <para>
            <para>A value that indicates whether to enable the HTTP endpoint for an Aurora Serverless
            DB cluster. By default, the HTTP endpoint is disabled.</para><para>When enabled, the HTTP endpoint provides a connectionless web service API for running
            SQL queries on the Aurora Serverless DB cluster. You can also query your database
            from inside the RDS console with the query editor.</para><para>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html">Using
            the Data API for Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.EnableIAMDatabaseAuthentication">
            <summary>
            <para>
            <para>A value that indicates whether to enable mapping of AWS Identity and Access Management
            (IAM) accounts to database accounts. By default, mapping is disabled.</para><para>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html">
            IAM Database Authentication</a> in the <i>Amazon Aurora User Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.Engine">
            <summary>
            <para>
            <para>The name of the database engine to be used for this DB cluster.</para><para>Valid Values: <code>aurora</code> (for MySQL 5.6-compatible Aurora), <code>aurora-mysql</code>
            (for MySQL 5.7-compatible Aurora), and <code>aurora-postgresql</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.EngineMode">
            <summary>
            <para>
            <para>The DB engine mode of the DB cluster, either <code>provisioned</code>, <code>serverless</code>,
            <code>parallelquery</code>, <code>global</code>, or <code>multimaster</code>.</para><note><para><code>global</code> engine mode only applies for global database clusters created
            with Aurora MySQL version 5.6.10a. For higher Aurora MySQL versions, the clusters
            in a global database use <code>provisioned</code> engine mode. </para></note><para>Limitations and requirements apply to some DB engine modes. For more information,
            see the following sections in the <i>Amazon Aurora User Guide</i>:</para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.limitations">
            Limitations of Aurora Serverless</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-mysql-parallel-query.html#aurora-mysql-parallel-query-limitations">
            Limitations of Parallel Query</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html#aurora-global-database.limitations">
            Requirements for Aurora Global Databases</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-multi-master.html#aurora-multi-master-limitations">
            Limitations of Multi-Master Clusters</a></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The version number of the database engine to use.</para><para>To list all of the available engine versions for <code>aurora</code> (for MySQL 5.6-compatible
            Aurora), use the following command:</para><para><code>aws rds describe-db-engine-versions --engine aurora --query "DBEngineVersions[].EngineVersion"</code></para><para>To list all of the available engine versions for <code>aurora-mysql</code> (for MySQL
            5.7-compatible Aurora), use the following command:</para><para><code>aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"</code></para><para>To list all of the available engine versions for <code>aurora-postgresql</code>, use
            the following command:</para><para><code>aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"</code></para><para><b>Aurora MySQL</b></para><para>Example: <code>5.6.10a</code>, <code>5.6.mysql_aurora.1.19.2</code>, <code>5.7.12</code>,
            <code>5.7.mysql_aurora.2.04.5</code></para><para><b>Aurora PostgreSQL</b></para><para>Example: <code>9.6.3</code>, <code>10.7</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.GlobalClusterIdentifier">
            <summary>
            <para>
            <para> The global cluster ID of an Aurora cluster that becomes the primary cluster in the
            new global database cluster. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS KMS key identifier for an encrypted DB cluster.</para><para>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key.
            If you are creating a DB cluster with the same AWS account that owns the KMS encryption
            key used to encrypt the new DB cluster, then you can use the KMS key alias instead
            of the ARN for the KMS encryption key.</para><para>If an encryption key isn't specified in <code>KmsKeyId</code>:</para><ul><li><para>If <code>ReplicationSourceIdentifier</code> identifies an encrypted source, then Amazon
            RDS will use the encryption key used to encrypt the source. Otherwise, Amazon RDS
            will use your default encryption key. </para></li><li><para>If the <code>StorageEncrypted</code> parameter is enabled and <code>ReplicationSourceIdentifier</code>
            isn't specified, then Amazon RDS will use your default encryption key.</para></li></ul><para>AWS KMS creates the default encryption key for your AWS account. Your AWS account
            has a different default encryption key for each AWS Region.</para><para>If you create a read replica of an encrypted DB cluster in another AWS Region, you
            must set <code>KmsKeyId</code> to a KMS key ID that is valid in the destination AWS
            Region. This key is used to encrypt the read replica in that AWS Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.MasterUsername">
            <summary>
            <para>
            <para>The name of the master user for the DB cluster.</para><para>Constraints:</para><ul><li><para>Must be 1 to 16 letters or numbers.</para></li><li><para>First character must be a letter.</para></li><li><para>Can't be a reserved word for the chosen database engine.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.MasterUserPassword">
            <summary>
            <para>
            <para>The password for the master database user. This password can contain any printable
            ASCII character except "/", """, or "@".</para><para>Constraints: Must contain from 8 to 41 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.ScalingConfiguration_MaxCapacity">
            <summary>
            <para>
            <para>The maximum capacity for an Aurora DB cluster in <code>serverless</code> DB engine
            mode.</para><para>For Aurora MySQL, valid capacity values are <code>1</code>, <code>2</code>, <code>4</code>,
            <code>8</code>, <code>16</code>, <code>32</code>, <code>64</code>, <code>128</code>,
            and <code>256</code>.</para><para>For Aurora PostgreSQL, valid capacity values are <code>2</code>, <code>4</code>, <code>8</code>,
            <code>16</code>, <code>32</code>, <code>64</code>, <code>192</code>, and <code>384</code>.</para><para>The maximum capacity must be greater than or equal to the minimum capacity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.ScalingConfiguration_MinCapacity">
            <summary>
            <para>
            <para>The minimum capacity for an Aurora DB cluster in <code>serverless</code> DB engine
            mode.</para><para>For Aurora MySQL, valid capacity values are <code>1</code>, <code>2</code>, <code>4</code>,
            <code>8</code>, <code>16</code>, <code>32</code>, <code>64</code>, <code>128</code>,
            and <code>256</code>.</para><para>For Aurora PostgreSQL, valid capacity values are <code>2</code>, <code>4</code>, <code>8</code>,
            <code>16</code>, <code>32</code>, <code>64</code>, <code>192</code>, and <code>384</code>.</para><para>The minimum capacity must be less than or equal to the maximum capacity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.OptionGroupName">
            <summary>
            <para>
            <para>A value that indicates that the DB cluster should be associated with the specified
            option group.</para><para>Permanent options can't be removed from an option group. The option group can't be
            removed from a DB cluster once it is associated with a DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.Port">
            <summary>
            <para>
            <para>The port number on which the instances in the DB cluster accept connections.</para><para> Default: <code>3306</code> if engine is set as aurora or <code>5432</code> if set
            to aurora-postgresql. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.PreferredBackupWindow">
            <summary>
            <para>
            <para>The daily time range during which automated backups are created if automated backups
            are enabled using the <code>BackupRetentionPeriod</code> parameter. </para><para>The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora">
            Adjusting the Preferred DB Cluster Maintenance Window</a> in the <i>Amazon Aurora
            User Guide.</i></para><para>Constraints:</para><ul><li><para>Must be in the format <code>hh24:mi-hh24:mi</code>.</para></li><li><para>Must be in Universal Coordinated Time (UTC).</para></li><li><para>Must not conflict with the preferred maintenance window.</para></li><li><para>Must be at least 30 minutes.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>The weekly time range during which system maintenance can occur, in Universal Coordinated
            Time (UTC).</para><para>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code></para><para>The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region, occurring on a random day of the week. To see the time blocks
            available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora">
            Adjusting the Preferred DB Cluster Maintenance Window</a> in the <i>Amazon Aurora
            User Guide.</i></para><para>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</para><para>Constraints: Minimum 30-minute window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.PreSignedUrl">
            <summary>
            <para>
            <para>A URL that contains a Signature Version 4 signed request for the <code>CreateDBCluster</code>
            action to be called in the source AWS Region where the DB cluster is replicated from.
            You only need to specify <code>PreSignedUrl</code> when you are performing cross-region
            replication from an encrypted DB cluster.</para><para>The pre-signed URL must be a valid request for the <code>CreateDBCluster</code> API
            action that can be executed in the source AWS Region that contains the encrypted DB
            cluster to be copied.</para><para>The pre-signed URL request must contain the following parameter values:</para><ul><li><para><code>KmsKeyId</code> - The AWS KMS key identifier for the key to use to encrypt
            the copy of the DB cluster in the destination AWS Region. This should refer to the
            same KMS key for both the <code>CreateDBCluster</code> action that is called in the
            destination AWS Region, and the action contained in the pre-signed URL.</para></li><li><para><code>DestinationRegion</code> - The name of the AWS Region that Aurora read replica
            will be created in.</para></li><li><para><code>ReplicationSourceIdentifier</code> - The DB cluster identifier for the encrypted
            DB cluster to be copied. This identifier must be in the Amazon Resource Name (ARN)
            format for the source AWS Region. For example, if you are copying an encrypted DB
            cluster from the us-west-2 AWS Region, then your <code>ReplicationSourceIdentifier</code>
            would look like Example: <code>arn:aws:rds:us-west-2:123456789012:cluster:aurora-cluster1</code>.</para></li></ul><para>To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">
            Authenticating Requests: Using Query Parameters (AWS Signature Version 4)</a> and
            <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">
            Signature Version 4 Signing Process</a>.</para><note><para>If you are using an AWS SDK tool or the AWS CLI, you can specify <code>SourceRegion</code>
            (or <code>--source-region</code> for the AWS CLI) instead of specifying <code>PreSignedUrl</code>
            manually. Specifying <code>SourceRegion</code> autogenerates a pre-signed URL that
            is a valid request for the operation that can be executed in the source AWS Region.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.ReplicationSourceIdentifier">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB
            cluster is created as a read replica.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.ScalingConfiguration_SecondsUntilAutoPause">
            <summary>
            <para>
            <para>The time, in seconds, before an Aurora DB cluster in <code>serverless</code> mode
            is paused.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.SourceRegion">
            <summary>
            <para>
             The SourceRegion for generating the PreSignedUrl property.
            
             If SourceRegion is set and the PreSignedUrl property is not,
             then PreSignedUrl will be automatically generated by the client.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.StorageEncrypted">
            <summary>
            <para>
            <para>A value that indicates whether the DB cluster is encrypted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.Tag">
            <summary>
            <para>
            <para>Tags to assign to the DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.ScalingConfiguration_TimeoutAction">
            <summary>
            <para>
            <para>The action to take when the timeout is reached, either <code>ForceApplyCapacityChange</code>
            or <code>RollbackCapacityChange</code>.</para><para><code>ForceApplyCapacityChange</code> sets the capacity to the specified value as
            soon as possible.</para><para><code>RollbackCapacityChange</code>, the default, ignores the capacity change if
            a scaling point isn't found in the timeout period.</para><important><para>If you specify <code>ForceApplyCapacityChange</code>, connections that prevent Aurora
            Serverless from finding a scaling point might be dropped.</para></important><para>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.auto-scaling">
            Autoscaling for Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of EC2 VPC security groups to associate with this DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CreateDBClusterResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CreateDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterEndpointCmdlet">
            <summary>
            Creates a new custom endpoint and associates it with an Amazon Aurora DB cluster.
            
             <note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterEndpointCmdlet.DBClusterEndpointIdentifier">
            <summary>
            <para>
            <para>The identifier to use for the new endpoint. This parameter is stored as a lowercase
            string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterEndpointCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The DB cluster identifier of the DB cluster associated with the endpoint. This parameter
            is stored as a lowercase string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterEndpointCmdlet.EndpointType">
            <summary>
            <para>
            <para>The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>, <code>ANY</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterEndpointCmdlet.ExcludedMember">
            <summary>
            <para>
            <para>List of DB instance identifiers that aren't part of the custom endpoint group. All
            other eligible instances are reachable through the custom endpoint. Only relevant
            if the list of static members is empty.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterEndpointCmdlet.StaticMember">
            <summary>
            <para>
            <para>List of DB instance identifiers that are part of the custom endpoint group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterEndpointCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the Amazon RDS resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CreateDBClusterEndpointResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CreateDBClusterEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterEndpointIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterEndpointIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterParameterGroupCmdlet">
            <summary>
            Creates a new DB cluster parameter group.
            
             
            <para>
            Parameters in a DB cluster parameter group apply to all of the instances in a DB cluster.
            </para><para>
             A DB cluster parameter group is initially created with the default parameters for
            the database engine used by instances in the DB cluster. To provide custom values
            for any of the parameters, you must modify the group after creating it using <code>ModifyDBClusterParameterGroup</code>.
            Once you've created a DB cluster parameter group, you need to associate it with your
            DB cluster using <code>ModifyDBCluster</code>. When you associate a new DB cluster
            parameter group with a running DB cluster, you need to reboot the DB instances in
            the DB cluster without failover for the new DB cluster parameter group and associated
            settings to take effect. 
            </para><important><para>
            After you create a DB cluster parameter group, you should wait at least 5 minutes
            before creating your first DB cluster that uses that DB cluster parameter group as
            the default parameter group. This allows Amazon RDS to fully complete the create action
            before the DB cluster parameter group is used as the default for a new DB cluster.
            This is especially important for parameters that are critical when creating the default
            database for a DB cluster, such as the character set for the default database defined
            by the <code>character_set_database</code> parameter. You can use the <i>Parameter
            Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon RDS
            console</a> or the <code>DescribeDBClusterParameters</code> action to verify that
            your DB cluster parameter group has been created or modified.
            </para></important><para>
            For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterParameterGroupCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB cluster parameter group.</para><para>Constraints:</para><ul><li><para>Must match the name of an existing DB cluster parameter group.</para></li></ul><note><para>This value is stored as a lowercase string.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterParameterGroupCmdlet.DBParameterGroupFamily">
            <summary>
            <para>
            <para>The DB cluster parameter group family name. A DB cluster parameter group can be associated
            with one and only one DB cluster parameter group family, and can be applied only to
            a DB cluster running a database engine and engine version compatible with that DB
            cluster parameter group family.</para><para><b>Aurora MySQL</b></para><para>Example: <code>aurora5.6</code>, <code>aurora-mysql5.7</code></para><para><b>Aurora PostgreSQL</b></para><para>Example: <code>aurora-postgresql9.6</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterParameterGroupCmdlet.Description">
            <summary>
            <para>
            <para>The description for the DB cluster parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterParameterGroupCmdlet.Tag">
            <summary>
            <para>
            <para>Tags to assign to the DB cluster parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterParameterGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CreateDBClusterParameterGroupResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CreateDBClusterParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterSnapshotCmdlet">
            <summary>
            Creates a snapshot of a DB cluster. For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterSnapshotCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the DB cluster to create a snapshot for. This parameter isn't case-sensitive.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing DBCluster.</para></li></ul><para>Example: <code>my-cluster1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterSnapshotCmdlet.DBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier of the DB cluster snapshot. This parameter is stored as a lowercase
            string.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>my-cluster1-snapshot1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterSnapshotCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the DB cluster snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterSnapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CreateDBClusterSnapshotResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CreateDBClusterSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBClusterSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet">
            <summary>
            Creates a new DB instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.AllocatedStorage">
            <summary>
            <para>
            <para>The amount of storage (in gibibytes) to allocate for the DB instance.</para><para>Type: Integer</para><para><b>Amazon Aurora</b></para><para>Not applicable. Aurora cluster volumes automatically grow as the amount of data in
            your database increases, though you are only charged for the space that you use in
            an Aurora cluster volume.</para><para><b>MySQL</b></para><para>Constraints to the amount of storage for each storage type are the following: </para><ul><li><para>General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536.</para></li><li><para>Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.</para></li><li><para>Magnetic storage (standard): Must be an integer from 5 to 3072.</para></li></ul><para><b>MariaDB</b></para><para>Constraints to the amount of storage for each storage type are the following: </para><ul><li><para>General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536.</para></li><li><para>Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.</para></li><li><para>Magnetic storage (standard): Must be an integer from 5 to 3072.</para></li></ul><para><b>PostgreSQL</b></para><para>Constraints to the amount of storage for each storage type are the following: </para><ul><li><para>General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536.</para></li><li><para>Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.</para></li><li><para>Magnetic storage (standard): Must be an integer from 5 to 3072.</para></li></ul><para><b>Oracle</b></para><para>Constraints to the amount of storage for each storage type are the following: </para><ul><li><para>General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536.</para></li><li><para>Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.</para></li><li><para>Magnetic storage (standard): Must be an integer from 10 to 3072.</para></li></ul><para><b>SQL Server</b></para><para>Constraints to the amount of storage for each storage type are the following: </para><ul><li><para>General Purpose (SSD) storage (gp2):</para><ul><li><para>Enterprise and Standard editions: Must be an integer from 200 to 16384.</para></li><li><para>Web and Express editions: Must be an integer from 20 to 16384.</para></li></ul></li><li><para>Provisioned IOPS storage (io1):</para><ul><li><para>Enterprise and Standard editions: Must be an integer from 200 to 16384.</para></li><li><para>Web and Express editions: Must be an integer from 100 to 16384.</para></li></ul></li><li><para>Magnetic storage (standard):</para><ul><li><para>Enterprise and Standard editions: Must be an integer from 200 to 1024.</para></li><li><para>Web and Express editions: Must be an integer from 20 to 1024.</para></li></ul></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.AutoMinorVersionUpgrade">
            <summary>
            <para>
            <para>A value that indicates whether minor engine upgrades are applied automatically to
            the DB instance during the maintenance window. By default, minor engine upgrades are
            applied automatically.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para> The Availability Zone (AZ) where the database will be created. For information on
            AWS Regions and Availability Zones, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html">Regions
            and Availability Zones</a>. </para><para>Default: A random, system-chosen Availability Zone in the endpoint's AWS Region.</para><para> Example: <code>us-east-1d</code></para><para> Constraint: The <code>AvailabilityZone</code> parameter can't be specified if the
            DB instance is a Multi-AZ deployment. The specified Availability Zone must be in the
            same AWS Region as the current endpoint. </para><note><para>If you're creating a DB instance in an RDS on VMware environment, specify the identifier
            of the custom Availability Zone to create the DB instance in.</para><para>For more information about RDS on VMware, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html"><i>RDS on VMware User Guide.</i></a></para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.BackupRetentionPeriod">
            <summary>
            <para>
            <para>The number of days for which automated backups are retained. Setting this parameter
            to a positive number enables backups. Setting this parameter to 0 disables automated
            backups.</para><para><b>Amazon Aurora</b></para><para>Not applicable. The retention period for automated backups is managed by the DB cluster.</para><para>Default: 1</para><para>Constraints:</para><ul><li><para>Must be a value from 0 to 35</para></li><li><para>Can't be set to 0 if the DB instance is a source to read replicas</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.CharacterSetName">
            <summary>
            <para>
            <para>For supported engines, indicates that the DB instance should be associated with the
            specified CharacterSet.</para><para><b>Amazon Aurora</b></para><para>Not applicable. The character set is managed by the DB cluster. For more information,
            see <code>CreateDBCluster</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.CopyTagsToSnapshot">
            <summary>
            <para>
            <para>A value that indicates whether to copy tags from the DB instance to snapshots of the
            DB instance. By default, tags are not copied.</para><para><b>Amazon Aurora</b></para><para>Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this
            value for an Aurora DB instance has no effect on the DB cluster setting.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the DB cluster that the instance will belong to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.DBInstanceClass">
            <summary>
            <para>
            <para>The compute and memory capacity of the DB instance, for example, <code>db.m4.large</code>.
            Not all DB instance classes are available in all AWS Regions, or for all database
            engines. For the full list of DB instance classes, and availability for your engine,
            see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB
            Instance Class</a> in the <i>Amazon RDS User Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The DB instance identifier. This parameter is stored as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>mydbinstance</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.DBName">
            <summary>
            <para>
            <para>The meaning of this parameter differs according to the database engine you use.</para><para><b>MySQL</b></para><para>The name of the database to create when the DB instance is created. If this parameter
            isn't specified, no database is created in the DB instance.</para><para>Constraints:</para><ul><li><para>Must contain 1 to 64 letters or numbers.</para></li><li><para>Can't be a word reserved by the specified database engine</para></li></ul><para><b>MariaDB</b></para><para>The name of the database to create when the DB instance is created. If this parameter
            isn't specified, no database is created in the DB instance.</para><para>Constraints:</para><ul><li><para>Must contain 1 to 64 letters or numbers.</para></li><li><para>Can't be a word reserved by the specified database engine</para></li></ul><para><b>PostgreSQL</b></para><para>The name of the database to create when the DB instance is created. If this parameter
            isn't specified, the default "postgres" database is created in the DB instance.</para><para>Constraints:</para><ul><li><para>Must contain 1 to 63 letters, numbers, or underscores.</para></li><li><para>Must begin with a letter or an underscore. Subsequent characters can be letters, underscores,
            or digits (0-9).</para></li><li><para>Can't be a word reserved by the specified database engine</para></li></ul><para><b>Oracle</b></para><para>The Oracle System ID (SID) of the created DB instance. If you specify <code>null</code>,
            the default value <code>ORCL</code> is used. You can't specify the string NULL, or
            any other reserved word, for <code>DBName</code>. </para><para>Default: <code>ORCL</code></para><para>Constraints:</para><ul><li><para>Can't be longer than 8 characters</para></li></ul><para><b>SQL Server</b></para><para>Not applicable. Must be null.</para><para><b>Amazon Aurora</b></para><para>The name of the database to create when the primary instance of the DB cluster is
            created. If this parameter isn't specified, no database is created in the DB instance.</para><para>Constraints:</para><ul><li><para>Must contain 1 to 64 letters or numbers.</para></li><li><para>Can't be a word reserved by the specified database engine</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.DBParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB parameter group to associate with this DB instance. If you do not
            specify a value, then the default DB parameter group for the specified DB engine and
            version is used.</para><para>Constraints:</para><ul><li><para>Must be 1 to 255 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.DBSecurityGroup">
            <summary>
            <para>
            <para>A list of DB security groups to associate with this DB instance.</para><para>Default: The default DB security group for the database engine.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>A DB subnet group to associate with this DB instance.</para><para>If there is no DB subnet group, then it is a non-VPC DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.DeletionProtection">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html">
            Deleting a DB Instance</a>. </para><para><b>Amazon Aurora</b></para><para>Not applicable. You can enable or disable deletion protection for the DB cluster.
            For more information, see <code>CreateDBCluster</code>. DB instances in a DB cluster
            can be deleted even when deletion protection is enabled for the DB cluster. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.Domain">
            <summary>
            <para>
            <para>The Active Directory directory ID to create the DB instance in. Currently, only Microsoft
            SQL Server and Oracle DB instances can be created in an Active Directory Domain.</para><para>For Microsoft SQL Server DB instances, Amazon RDS can use Windows Authentication to
            authenticate users that connect to the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_SQLServerWinAuth.html">
            Using Windows Authentication with an Amazon RDS DB Instance Running Microsoft SQL
            Server</a> in the <i>Amazon RDS User Guide</i>.</para><para>For Oracle DB instances, Amazon RDS can use Kerberos Authentication to authenticate
            users that connect to the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-kerberos.html">
            Using Kerberos Authentication with Amazon RDS for Oracle</a> in the <i>Amazon RDS
            User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.DomainIAMRoleName">
            <summary>
            <para>
            <para>Specify the name of the IAM role to be used when making API calls to the Directory
            Service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.EnableCloudwatchLogsExport">
            <summary>
            <para>
            <para>The list of log types that need to be enabled for exporting to CloudWatch Logs. The
            values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing
            Database Logs to Amazon CloudWatch Logs </a> in the <i>Amazon Relational Database
            Service User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.EnableIAMDatabaseAuthentication">
            <summary>
            <para>
            <para>A value that indicates whether to enable mapping of AWS Identity and Access Management
            (IAM) accounts to database accounts. By default, mapping is disabled.</para><para>You can enable IAM database authentication for the following database engines:</para><para><b>Amazon Aurora</b></para><para>Not applicable. Mapping AWS IAM accounts to database accounts is managed by the DB
            cluster.</para><para><b>MySQL</b></para><ul><li><para>For MySQL 5.6, minor version 5.6.34 or higher</para></li><li><para>For MySQL 5.7, minor version 5.7.16 or higher</para></li><li><para>For MySQL 8.0, minor version 8.0.16 or higher</para></li></ul><para><b>PostgreSQL</b></para><ul><li><para>For PostgreSQL 9.5, minor version 9.5.15 or higher</para></li><li><para>For PostgreSQL 9.6, minor version 9.6.11 or higher</para></li><li><para>PostgreSQL 10.6, 10.7, and 10.9</para></li></ul><para>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html">
            IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User
            Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.EnablePerformanceInsight">
            <summary>
            <para>
            <para>A value that indicates whether to enable Performance Insights for the DB instance.
            </para><para>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html">Using
            Amazon Performance Insights</a> in the <i>Amazon Relational Database Service User
            Guide</i>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.Engine">
            <summary>
            <para>
            <para>The name of the database engine to be used for this instance. </para><para>Not every database engine is available for every AWS Region. </para><para>Valid Values: </para><ul><li><para><code>aurora</code> (for MySQL 5.6-compatible Aurora)</para></li><li><para><code>aurora-mysql</code> (for MySQL 5.7-compatible Aurora)</para></li><li><para><code>aurora-postgresql</code></para></li><li><para><code>mariadb</code></para></li><li><para><code>mysql</code></para></li><li><para><code>oracle-ee</code></para></li><li><para><code>oracle-se2</code></para></li><li><para><code>oracle-se1</code></para></li><li><para><code>oracle-se</code></para></li><li><para><code>postgres</code></para></li><li><para><code>sqlserver-ee</code></para></li><li><para><code>sqlserver-se</code></para></li><li><para><code>sqlserver-ex</code></para></li><li><para><code>sqlserver-web</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The version number of the database engine to use.</para><para>For a list of valid engine versions, use the <code>DescribeDBEngineVersions</code>
            action.</para><para>The following are the database engines and links to information about the major and
            minor versions that are available with Amazon RDS. Not every database engine is available
            for every AWS Region.</para><para><b>Amazon Aurora</b></para><para>Not applicable. The version number of the database engine to be used by the DB instance
            is managed by the DB cluster.</para><para><b>MariaDB</b></para><para>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MariaDB.html#MariaDB.Concepts.VersionMgmt">MariaDB
            on Amazon RDS Versions</a> in the <i>Amazon RDS User Guide.</i></para><para><b>Microsoft SQL Server</b></para><para>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.FeatureSupport">Version
            and Feature Support on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i></para><para><b>MySQL</b></para><para>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt">MySQL
            on Amazon RDS Versions</a> in the <i>Amazon RDS User Guide.</i></para><para><b>Oracle</b></para><para>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.PatchComposition.html">Oracle
            Database Engine Release Notes</a> in the <i>Amazon RDS User Guide.</i></para><para><b>PostgreSQL</b></para><para>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts.General.DBVersions">Supported
            PostgreSQL Database Versions</a> in the <i>Amazon RDS User Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.Iops">
            <summary>
            <para>
            <para>The amount of Provisioned IOPS (input/output operations per second) to be initially
            allocated for the DB instance. For information about valid Iops values, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Amazon
            RDS Provisioned IOPS Storage to Improve Performance</a> in the <i>Amazon RDS User
            Guide</i>. </para><para>Constraints: For MariaDB, MySQL, Oracle, and PostgreSQL DB instances, must be a multiple
            between .5 and 50 of the storage amount for the DB instance. For SQL Server DB instances,
            must be a multiple between 1 and 50 of the storage amount for the DB instance. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS KMS key identifier for an encrypted DB instance.</para><para>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key.
            If you are creating a DB instance with the same AWS account that owns the KMS encryption
            key used to encrypt the new DB instance, then you can use the KMS key alias instead
            of the ARN for the KM encryption key.</para><para><b>Amazon Aurora</b></para><para>Not applicable. The KMS key identifier is managed by the DB cluster. For more information,
            see <code>CreateDBCluster</code>.</para><para>If <code>StorageEncrypted</code> is enabled, and you do not specify a value for the
            <code>KmsKeyId</code> parameter, then Amazon RDS will use your default encryption
            key. AWS KMS creates the default encryption key for your AWS account. Your AWS account
            has a different default encryption key for each AWS Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.LicenseModel">
            <summary>
            <para>
            <para>License model information for this DB instance.</para><para> Valid values: <code>license-included</code> | <code>bring-your-own-license</code>
            | <code>general-public-license</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.MasterUsername">
            <summary>
            <para>
            <para>The name for the master user.</para><para><b>Amazon Aurora</b></para><para>Not applicable. The name for the master user is managed by the DB cluster. </para><para><b>MariaDB</b></para><para>Constraints:</para><ul><li><para>Required for MariaDB.</para></li><li><para>Must be 1 to 16 letters or numbers.</para></li><li><para>Can't be a reserved word for the chosen database engine.</para></li></ul><para><b>Microsoft SQL Server</b></para><para>Constraints:</para><ul><li><para>Required for SQL Server.</para></li><li><para>Must be 1 to 128 letters or numbers.</para></li><li><para>The first character must be a letter.</para></li><li><para>Can't be a reserved word for the chosen database engine.</para></li></ul><para><b>MySQL</b></para><para>Constraints:</para><ul><li><para>Required for MySQL.</para></li><li><para>Must be 1 to 16 letters or numbers.</para></li><li><para>First character must be a letter.</para></li><li><para>Can't be a reserved word for the chosen database engine.</para></li></ul><para><b>Oracle</b></para><para>Constraints:</para><ul><li><para>Required for Oracle.</para></li><li><para>Must be 1 to 30 letters or numbers.</para></li><li><para>First character must be a letter.</para></li><li><para>Can't be a reserved word for the chosen database engine.</para></li></ul><para><b>PostgreSQL</b></para><para>Constraints:</para><ul><li><para>Required for PostgreSQL.</para></li><li><para>Must be 1 to 63 letters or numbers.</para></li><li><para>First character must be a letter.</para></li><li><para>Can't be a reserved word for the chosen database engine.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.MasterUserPassword">
            <summary>
            <para>
            <para>The password for the master user. The password can include any printable ASCII character
            except "/", """, or "@".</para><para><b>Amazon Aurora</b></para><para>Not applicable. The password for the master user is managed by the DB cluster.</para><para><b>MariaDB</b></para><para>Constraints: Must contain from 8 to 41 characters.</para><para><b>Microsoft SQL Server</b></para><para>Constraints: Must contain from 8 to 128 characters.</para><para><b>MySQL</b></para><para>Constraints: Must contain from 8 to 41 characters.</para><para><b>Oracle</b></para><para>Constraints: Must contain from 8 to 30 characters.</para><para><b>PostgreSQL</b></para><para>Constraints: Must contain from 8 to 128 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.MaxAllocatedStorage">
            <summary>
            <para>
            <para>The upper limit to which Amazon RDS can automatically scale the storage of the DB
            instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.MonitoringInterval">
            <summary>
            <para>
            <para>The interval, in seconds, between points when Enhanced Monitoring metrics are collected
            for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0.
            The default is 0.</para><para>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code>
            to a value other than 0.</para><para>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.MonitoringRoleArn">
            <summary>
            <para>
            <para>The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon
            CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>.
            For information on creating a monitoring role, go to <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling">Setting
            Up and Enabling Enhanced Monitoring</a> in the <i>Amazon RDS User Guide</i>.</para><para>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply
            a <code>MonitoringRoleArn</code> value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.MultiAZ">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance is a Multi-AZ deployment. You can't
            set the <code>AvailabilityZone</code> parameter if the DB instance is a Multi-AZ deployment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.OptionGroupName">
            <summary>
            <para>
            <para>Indicates that the DB instance should be associated with the specified option group.</para><para>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't
            be removed from an option group. Also, that option group can't be removed from a DB
            instance once it is associated with a DB instance</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.PerformanceInsightsKMSKeyId">
            <summary>
            <para>
            <para>The AWS KMS key identifier for encryption of Performance Insights data. The KMS key
            ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for
            the KMS encryption key.</para><para>If you do not specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon
            RDS uses your default encryption key. AWS KMS creates the default encryption key for
            your AWS account. Your AWS account has a different default encryption key for each
            AWS Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.PerformanceInsightsRetentionPeriod">
            <summary>
            <para>
            <para>The amount of time, in days, to retain Performance Insights data. Valid values are
            7 or 731 (2 years). </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.Port">
            <summary>
            <para>
            <para>The port number on which the database accepts connections.</para><para><b>MySQL</b></para><para> Default: <code>3306</code></para><para> Valid values: <code>1150-65535</code></para><para>Type: Integer</para><para><b>MariaDB</b></para><para> Default: <code>3306</code></para><para> Valid values: <code>1150-65535</code></para><para>Type: Integer</para><para><b>PostgreSQL</b></para><para> Default: <code>5432</code></para><para> Valid values: <code>1150-65535</code></para><para>Type: Integer</para><para><b>Oracle</b></para><para> Default: <code>1521</code></para><para> Valid values: <code>1150-65535</code></para><para><b>SQL Server</b></para><para> Default: <code>1433</code></para><para> Valid values: <code>1150-65535</code> except <code>1234</code>, <code>1434</code>,
            <code>3260</code>, <code>3343</code>, <code>3389</code>, <code>47001</code>, and <code>49152-49156</code>.</para><para><b>Amazon Aurora</b></para><para> Default: <code>3306</code></para><para> Valid values: <code>1150-65535</code></para><para>Type: Integer</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.PreferredBackupWindow">
            <summary>
            <para>
            <para> The daily time range during which automated backups are created if automated backups
            are enabled, using the <code>BackupRetentionPeriod</code> parameter. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow">The
            Backup Window</a> in the <i>Amazon RDS User Guide</i>. </para><para><b>Amazon Aurora</b></para><para>Not applicable. The daily time range for creating automated backups is managed by
            the DB cluster.</para><para> The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow">
            Adjusting the Preferred DB Instance Maintenance Window</a> in the <i>Amazon RDS User
            Guide</i>. </para><para>Constraints:</para><ul><li><para>Must be in the format <code>hh24:mi-hh24:mi</code>.</para></li><li><para>Must be in Universal Coordinated Time (UTC).</para></li><li><para>Must not conflict with the preferred maintenance window.</para></li><li><para>Must be at least 30 minutes.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>The time range each week during which system maintenance can occur, in Universal Coordinated
            Time (UTC). For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance">Amazon
            RDS Maintenance Window</a>. </para><para> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code></para><para>The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region, occurring on a random day of the week. </para><para>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</para><para>Constraints: Minimum 30-minute window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.ProcessorFeature">
            <summary>
            <para>
            <para>The number of CPU cores and the number of threads per core for the DB instance class
            of the DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.PromotionTier">
            <summary>
            <para>
            <para>A value that specifies the order in which an Aurora Replica is promoted to the primary
            instance after a failure of the existing primary instance. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance">
            Fault Tolerance for an Aurora DB Cluster</a> in the <i>Amazon Aurora User Guide</i>.
            </para><para>Default: 1</para><para>Valid Values: 0 - 15</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.PubliclyAccessible">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance is publicly accessible. When the DB
            instance is publicly accessible, it is an Internet-facing instance with a publicly
            resolvable DNS name, which resolves to a public IP address. When the DB instance isn't
            publicly accessible, it is an internal instance with a DNS name that resolves to a
            private IP address.</para><para>Default: The default behavior varies depending on whether <code>DBSubnetGroupName</code>
            is specified.</para><para>If <code>DBSubnetGroupName</code> isn't specified, and <code>PubliclyAccessible</code>
            isn't specified, the following applies:</para><ul><li><para>If the default VPC in the target region doesn’t have an Internet gateway attached
            to it, the DB instance is private.</para></li><li><para>If the default VPC in the target region has an Internet gateway attached to it, the
            DB instance is public.</para></li></ul><para>If <code>DBSubnetGroupName</code> is specified, and <code>PubliclyAccessible</code>
            isn't specified, the following applies:</para><ul><li><para>If the subnets are part of a VPC that doesn’t have an Internet gateway attached to
            it, the DB instance is private.</para></li><li><para>If the subnets are part of a VPC that has an Internet gateway attached to it, the
            DB instance is public.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.StorageEncrypted">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance is encrypted. By default, it isn't
            encrypted.</para><para><b>Amazon Aurora</b></para><para>Not applicable. The encryption for DB instances is managed by the DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.StorageType">
            <summary>
            <para>
            <para>Specifies the storage type to be associated with the DB instance.</para><para> Valid values: <code>standard | gp2 | io1</code></para><para> If you specify <code>io1</code>, you must also include a value for the <code>Iops</code>
            parameter. </para><para> Default: <code>io1</code> if the <code>Iops</code> parameter is specified, otherwise
            <code>gp2</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.Tag">
            <summary>
            <para>
            <para>Tags to assign to the DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.TdeCredentialArn">
            <summary>
            <para>
            <para>The ARN from the key store with which to associate the instance for TDE encryption.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.TdeCredentialPassword">
            <summary>
            <para>
            <para>The password for the given ARN from the key store in order to access the device.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.Timezone">
            <summary>
            <para>
            <para>The time zone of the DB instance. The time zone parameter is currently supported only
            by <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone">Microsoft
            SQL Server</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of Amazon EC2 VPC security groups to associate with this DB instance.</para><para><b>Amazon Aurora</b></para><para>Not applicable. The associated list of EC2 VPC security groups is managed by the DB
            cluster.</para><para>Default: The default EC2 VPC security group for the DB subnet group's VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CreateDBInstanceResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CreateDBInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet">
            <summary>
            Creates a new DB instance that acts as a read replica for an existing source DB instance.
            You can create a read replica for a DB instance running MySQL, MariaDB, Oracle, PostgreSQL,
            or SQL Server. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReadRepl.html">Working
            with Read Replicas</a> in the <i>Amazon RDS User Guide</i>. 
            
             
            <para>
            Amazon Aurora doesn't support this action. Call the <code>CreateDBInstance</code>
            action to create a DB instance for an Aurora DB cluster.
            </para><para>
            All read replica DB instances are created with backups disabled. All other DB instance
            attributes (including DB security groups and DB parameter groups) are inherited from
            the source DB instance, except as specified.
            </para><important><para>
            Your source DB instance must have backup retention enabled. 
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.AutoMinorVersionUpgrade">
            <summary>
            <para>
            <para>A value that indicates whether minor engine upgrades are applied automatically to
            the read replica during the maintenance window.</para><para>Default: Inherits from the source DB instance</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>The Availability Zone (AZ) where the read replica will be created.</para><para>Default: A random, system-chosen Availability Zone in the endpoint's AWS Region.</para><para> Example: <code>us-east-1d</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.CopyTagsToSnapshot">
            <summary>
            <para>
            <para>A value that indicates whether to copy all tags from the read replica to snapshots
            of the read replica. By default, tags are not copied.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.DBInstanceClass">
            <summary>
            <para>
            <para>The compute and memory capacity of the read replica, for example, <code>db.m4.large</code>.
            Not all DB instance classes are available in all AWS Regions, or for all database
            engines. For the full list of DB instance classes, and availability for your engine,
            see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB
            Instance Class</a> in the <i>Amazon RDS User Guide.</i></para><para>Default: Inherits from the source DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The DB instance identifier of the read replica. This identifier is the unique key
            that identifies a DB instance. This parameter is stored as a lowercase string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.DBParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB parameter group to associate with this DB instance.</para><para>If you do not specify a value for <code>DBParameterGroupName</code>, then Amazon RDS
            uses the <code>DBParameterGroup</code> of source DB instance for a same region read
            replica, or the default <code>DBParameterGroup</code> for the specified DB engine
            for a cross region read replica.</para><note><para>Currently, specifying a parameter group for this operation is only supported for Oracle
            DB instances.</para></note><para>Constraints:</para><ul><li><para>Must be 1 to 255 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>Specifies a DB subnet group for the DB instance. The new DB instance is created in
            the VPC associated with the DB subnet group. If no DB subnet group is specified, then
            the new DB instance isn't created in a VPC.</para><para>Constraints:</para><ul><li><para>Can only be specified if the source DB instance identifier specifies a DB instance
            in another AWS Region.</para></li><li><para>If supplied, must match the name of an existing DBSubnetGroup.</para></li><li><para>The specified DB subnet group must be in the same AWS Region in which the operation
            is running.</para></li><li><para>All read replicas in one AWS Region that are created from the same source DB instance
            must either:&gt;</para><ul><li><para>Specify DB subnet groups from the same VPC. All these read replicas are created in
            the same VPC.</para></li><li><para>Not specify a DB subnet group. All these read replicas are created outside of any
            VPC.</para></li></ul></li></ul><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.DeletionProtection">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html">
            Deleting a DB Instance</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.Domain">
            <summary>
            <para>
            <para>The Active Directory directory ID to create the DB instance in.</para><para>For Oracle DB instances, Amazon RDS can use Kerberos Authentication to authenticate
            users that connect to the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-kerberos.html">
            Using Kerberos Authentication with Amazon RDS for Oracle</a> in the <i>Amazon RDS
            User Guide</i>.</para><para>For Microsoft SQL Server DB instances, Amazon RDS can use Windows Authentication to
            authenticate users that connect to the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_SQLServerWinAuth.html">
            Using Windows Authentication with an Amazon RDS DB Instance Running Microsoft SQL
            Server</a> in the <i>Amazon RDS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.DomainIAMRoleName">
            <summary>
            <para>
            <para>Specify the name of the IAM role to be used when making API calls to the Directory
            Service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.EnableCloudwatchLogsExport">
            <summary>
            <para>
            <para>The list of logs that the new DB instance is to export to CloudWatch Logs. The values
            in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing
            Database Logs to Amazon CloudWatch Logs </a> in the <i>Amazon RDS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.EnableIAMDatabaseAuthentication">
            <summary>
            <para>
            <para>A value that indicates whether to enable mapping of AWS Identity and Access Management
            (IAM) accounts to database accounts. By default, mapping is disabled. For information
            about the supported DB engines, see <a>CreateDBInstance</a>.</para><para>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html">
            IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User
            Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.EnablePerformanceInsight">
            <summary>
            <para>
            <para>A value that indicates whether to enable Performance Insights for the read replica.
            </para><para>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html">Using
            Amazon Performance Insights</a> in the <i>Amazon RDS User Guide</i>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.Iops">
            <summary>
            <para>
            <para>The amount of Provisioned IOPS (input/output operations per second) to be initially
            allocated for the DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS KMS key ID for an encrypted read replica. The KMS key ID is the Amazon Resource
            Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.</para><para>If you create an encrypted read replica in the same AWS Region as the source DB instance,
            then you do not have to specify a value for this parameter. The read replica is encrypted
            with the same KMS key as the source DB instance.</para><para>If you create an encrypted read replica in a different AWS Region, then you must specify
            a KMS key for the destination AWS Region. KMS encryption keys are specific to the
            AWS Region that they are created in, and you can't use encryption keys from one AWS
            Region in another AWS Region.</para><para>You can't create an encrypted read replica from an unencrypted DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.MonitoringInterval">
            <summary>
            <para>
            <para>The interval, in seconds, between points when Enhanced Monitoring metrics are collected
            for the read replica. To disable collecting Enhanced Monitoring metrics, specify 0.
            The default is 0.</para><para>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code>
            to a value other than 0.</para><para>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.MonitoringRoleArn">
            <summary>
            <para>
            <para>The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon
            CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>.
            For information on creating a monitoring role, go to <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html#USER_Monitoring.OS.IAMRole">To
            create an IAM role for Amazon RDS Enhanced Monitoring</a> in the <i>Amazon RDS User
            Guide</i>.</para><para>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply
            a <code>MonitoringRoleArn</code> value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.MultiAZ">
            <summary>
            <para>
            <para>A value that indicates whether the read replica is in a Multi-AZ deployment. </para><para>You can create a read replica as a Multi-AZ DB instance. RDS creates a standby of
            your replica in another Availability Zone for failover support for the replica. Creating
            your read replica as a Multi-AZ DB instance is independent of whether the source database
            is a Multi-AZ DB instance. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.OptionGroupName">
            <summary>
            <para>
            <para>The option group the DB instance is associated with. If omitted, the option group
            associated with the source instance is used.</para><note><para>For SQL Server, you must use the option group associated with the source instance.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.PerformanceInsightsKMSKeyId">
            <summary>
            <para>
            <para>The AWS KMS key identifier for encryption of Performance Insights data. The KMS key
            ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for
            the KMS encryption key.</para><para>If you do not specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon
            RDS uses your default encryption key. AWS KMS creates the default encryption key for
            your AWS account. Your AWS account has a different default encryption key for each
            AWS Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.PerformanceInsightsRetentionPeriod">
            <summary>
            <para>
            <para>The amount of time, in days, to retain Performance Insights data. Valid values are
            7 or 731 (2 years). </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.Port">
            <summary>
            <para>
            <para>The port number that the DB instance uses for connections.</para><para>Default: Inherits from the source DB instance</para><para>Valid Values: <code>1150-65535</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.PreSignedUrl">
            <summary>
            <para>
            <para>The URL that contains a Signature Version 4 signed request for the <code>CreateDBInstanceReadReplica</code>
            API action in the source AWS Region that contains the source DB instance. </para><para>You must specify this parameter when you create an encrypted read replica from another
            AWS Region by using the Amazon RDS API. Don't specify <code>PreSignedUrl</code> when
            you are creating an encrypted read replica in the same AWS Region.</para><para>The presigned URL must be a valid request for the <code>CreateDBInstanceReadReplica</code>
            API action that can be executed in the source AWS Region that contains the encrypted
            source DB instance. The presigned URL request must contain the following parameter
            values: </para><ul><li><para><code>DestinationRegion</code> - The AWS Region that the encrypted read replica is
            created in. This AWS Region is the same one where the <code>CreateDBInstanceReadReplica</code>
            action is called that contains this presigned URL.</para><para>For example, if you create an encrypted DB instance in the us-west-1 AWS Region, from
            a source DB instance in the us-east-2 AWS Region, then you call the <code>CreateDBInstanceReadReplica</code>
            action in the us-east-1 AWS Region and provide a presigned URL that contains a call
            to the <code>CreateDBInstanceReadReplica</code> action in the us-west-2 AWS Region.
            For this example, the <code>DestinationRegion</code> in the presigned URL must be
            set to the us-east-1 AWS Region. </para></li><li><para><code>KmsKeyId</code> - The AWS KMS key identifier for the key to use to encrypt
            the read replica in the destination AWS Region. This is the same identifier for both
            the <code>CreateDBInstanceReadReplica</code> action that is called in the destination
            AWS Region, and the action contained in the presigned URL. </para></li><li><para><code>SourceDBInstanceIdentifier</code> - The DB instance identifier for the encrypted
            DB instance to be replicated. This identifier must be in the Amazon Resource Name
            (ARN) format for the source AWS Region. For example, if you are creating an encrypted
            read replica from a DB instance in the us-west-2 AWS Region, then your <code>SourceDBInstanceIdentifier</code>
            looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:instance:mysql-instance1-20161115</code>.
            </para></li></ul><para>To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">Authenticating
            Requests: Using Query Parameters (AWS Signature Version 4)</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
            Version 4 Signing Process</a>. </para><note><para>If you are using an AWS SDK tool or the AWS CLI, you can specify <code>SourceRegion</code>
            (or <code>--source-region</code> for the AWS CLI) instead of specifying <code>PreSignedUrl</code>
            manually. Specifying <code>SourceRegion</code> autogenerates a presigned URL that
            is a valid request for the operation that can be executed in the source AWS Region.</para><para><code>SourceRegion</code> isn't supported for SQL Server, because SQL Server on Amazon
            RDS doesn't support cross-region read replicas.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.ProcessorFeature">
            <summary>
            <para>
            <para>The number of CPU cores and the number of threads per core for the DB instance class
            of the DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.PubliclyAccessible">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance is publicly accessible. When the DB
            instance is publicly accessible, it is an Internet-facing instance with a publicly
            resolvable DNS name, which resolves to a public IP address. When the DB instance isn't
            publicly accessible, it is an internal instance with a DNS name that resolves to a
            private IP address. For more information, see <a>CreateDBInstance</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.SourceDBInstanceIdentifier">
            <summary>
            <para>
            <para>The identifier of the DB instance that will act as the source for the read replica.
            Each DB instance can have up to five read replicas.</para><para>Constraints:</para><ul><li><para>Must be the identifier of an existing MySQL, MariaDB, Oracle, PostgreSQL, or SQL Server
            DB instance.</para></li><li><para>Can specify a DB instance that is a MySQL read replica only if the source is running
            MySQL 5.6 or later.</para></li><li><para>For the limitations of Oracle read replicas, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.html">Read
            Replica Limitations with Oracle</a> in the <i>Amazon RDS User Guide</i>.</para></li><li><para>For the limitations of SQL Server read replicas, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/SQLServer.ReadReplicas.Limitations.html">Read
            Replica Limitations with Microsoft SQL Server</a> in the <i>Amazon RDS User Guide</i>.</para></li><li><para>Can specify a PostgreSQL DB instance only if the source is running PostgreSQL 9.3.5
            or later (9.4.7 and higher for cross-region replication).</para></li><li><para>The specified DB instance must have automatic backups enabled, that is, its backup
            retention period must be greater than 0.</para></li><li><para>If the source DB instance is in the same AWS Region as the read replica, specify a
            valid DB instance identifier.</para></li><li><para>If the source DB instance is in a different AWS Region from the read replica, specify
            a valid DB instance ARN. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing">Constructing
            an ARN for Amazon RDS</a> in the <i>Amazon RDS User Guide</i>. This doesn't apply
            to SQL Server, which doesn't support cross-region replicas.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.SourceRegion">
            <summary>
            <para>
             The SourceRegion for generating the PreSignedUrl property.
            
             If SourceRegion is set and the PreSignedUrl property is not,
             then PreSignedUrl will be automatically generated by the client.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.StorageType">
            <summary>
            <para>
            <para>Specifies the storage type to be associated with the read replica.</para><para> Valid values: <code>standard | gp2 | io1</code></para><para> If you specify <code>io1</code>, you must also include a value for the <code>Iops</code>
            parameter. </para><para> Default: <code>io1</code> if the <code>Iops</code> parameter is specified, otherwise
            <code>gp2</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.Tag">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.UseDefaultProcessorFeature">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance class of the DB instance uses its default
            processor features.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para> A list of EC2 VPC security groups to associate with the read replica. </para><para> Default: The default EC2 VPC security group for the DB subnet group's VPC. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CreateDBInstanceReadReplicaResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CreateDBInstanceReadReplicaResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBInstanceReadReplicaCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBParameterGroupCmdlet">
            <summary>
            Creates a new DB parameter group.
            
             
            <para>
             A DB parameter group is initially created with the default parameters for the database
            engine used by the DB instance. To provide custom values for any of the parameters,
            you must modify the group after creating it using <i>ModifyDBParameterGroup</i>. Once
            you've created a DB parameter group, you need to associate it with your DB instance
            using <i>ModifyDBInstance</i>. When you associate a new DB parameter group with a
            running DB instance, you need to reboot the DB instance without failover for the new
            DB parameter group and associated settings to take effect. 
            </para><important><para>
            After you create a DB parameter group, you should wait at least 5 minutes before creating
            your first DB instance that uses that DB parameter group as the default parameter
            group. This allows Amazon RDS to fully complete the create action before the parameter
            group is used as the default for a new DB instance. This is especially important for
            parameters that are critical when creating the default database for a DB instance,
            such as the character set for the default database defined by the <code>character_set_database</code>
            parameter. You can use the <i>Parameter Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon
            RDS console</a> or the <i>DescribeDBParameters</i> command to verify that your DB
            parameter group has been created or modified.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBParameterGroupCmdlet.DBParameterGroupFamily">
            <summary>
            <para>
            <para>The DB parameter group family name. A DB parameter group can be associated with one
            and only one DB parameter group family, and can be applied only to a DB instance running
            a database engine and engine version compatible with that DB parameter group family.</para><para>To list all of the available parameter group families, use the following command:</para><para><code>aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily"</code></para><note><para>The output contains duplicates.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBParameterGroupCmdlet.DBParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB parameter group.</para><para>Constraints:</para><ul><li><para>Must be 1 to 255 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens</para></li></ul><note><para>This value is stored as a lowercase string.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBParameterGroupCmdlet.Description">
            <summary>
            <para>
            <para>The description for the DB parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBParameterGroupCmdlet.Tag">
            <summary>
            <para>
            <para>Tags to assign to the DB parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBParameterGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CreateDBParameterGroupResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CreateDBParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBProxyCmdlet">
            <summary>
            <note><para>
            This is prerelease documentation for the RDS Database Proxy feature in preview release.
            It is subject to change.
            </para></note><para>
            Creates a new DB proxy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBProxyCmdlet.Auth">
            <summary>
            <para>
            <para>The authorization mechanism that the proxy uses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBProxyCmdlet.DBProxyName">
            <summary>
            <para>
            <para>The identifier for the proxy. This name must be unique for all proxies owned by your
            AWS account in the specified AWS Region. An identifier must begin with a letter and
            must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or
            contain two consecutive hyphens.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBProxyCmdlet.DebugLogging">
            <summary>
            <para>
            <para>Whether the proxy includes detailed information about SQL statements in its logs.
            This information helps you to debug issues involving SQL behavior or the performance
            and scalability of the proxy connections. The debug information includes the text
            of SQL statements that you submit through the proxy. Thus, only enable this setting
            when needed for debugging, and only when you have security measures in place to safeguard
            any sensitive information that appears in the logs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBProxyCmdlet.EngineFamily">
            <summary>
            <para>
            <para>The kinds of databases that the proxy can connect to. This value determines which
            database network protocol the proxy recognizes when it interprets network traffic
            to and from the database. The engine family applies to MySQL and PostgreSQL for both
            RDS and Aurora.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBProxyCmdlet.IdleClientTimeout">
            <summary>
            <para>
            <para>The number of seconds that a connection to the proxy can be inactive before the proxy
            disconnects it. You can set this value higher or lower than the connection timeout
            limit for the associated database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBProxyCmdlet.RequireTLS">
            <summary>
            <para>
            <para>A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption
            is required for connections to the proxy. By enabling this setting, you can enforce
            encrypted TLS connections to the proxy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBProxyCmdlet.RoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets
            in AWS Secrets Manager.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBProxyCmdlet.Tag">
            <summary>
            <para>
            <para>An optional set of key-value pairs to associate arbitrary data of your choosing with
            the proxy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBProxyCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>One or more VPC security group IDs to associate with the new proxy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBProxyCmdlet.VpcSubnetId">
            <summary>
            <para>
            <para>One or more VPC subnet IDs to associate with the new proxy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBProxyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBProxy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CreateDBProxyResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CreateDBProxyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBProxyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBProxyName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBProxyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBProxyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSecurityGroupCmdlet">
            <summary>
            Creates a new DB security group. DB security groups control access to a DB instance.
            
             <note><para>
            A DB security group controls access to EC2-Classic DB instances that are not in a
            VPC.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSecurityGroupCmdlet.DBSecurityGroupDescription">
            <summary>
            <para>
            <para>The description for the DB security group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSecurityGroupCmdlet.DBSecurityGroupName">
            <summary>
            <para>
            <para>The name for the DB security group. This value is stored as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must be 1 to 255 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens</para></li><li><para>Must not be "Default"</para></li></ul><para>Example: <code>mysecuritygroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSecurityGroupCmdlet.Tag">
            <summary>
            <para>
            <para>Tags to assign to the DB security group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSecurityGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBSecurityGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CreateDBSecurityGroupResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CreateDBSecurityGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSecurityGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSecurityGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSecurityGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSecurityGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSnapshotCmdlet">
            <summary>
            Creates a DBSnapshot. The source DBInstance must be in "available" state.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSnapshotCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The identifier of the DB instance that you want to create the snapshot of.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing DBInstance.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSnapshotCmdlet.DBSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier for the DB snapshot.</para><para>Constraints:</para><ul><li><para>Can't be null, empty, or blank</para></li><li><para>Must contain from 1 to 255 letters, numbers, or hyphens</para></li><li><para>First character must be a letter</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens</para></li></ul><para>Example: <code>my-snapshot-id</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSnapshotCmdlet.Tag">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBSnapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CreateDBSnapshotResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CreateDBSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSubnetGroupCmdlet">
            <summary>
            Creates a new DB subnet group. DB subnet groups must contain at least one subnet in
            at least two AZs in the AWS Region.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSubnetGroupCmdlet.DBSubnetGroupDescription">
            <summary>
            <para>
            <para>The description for the DB subnet group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSubnetGroupCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The name for the DB subnet group. This value is stored as a lowercase string.</para><para>Constraints: Must contain no more than 255 letters, numbers, periods, underscores,
            spaces, or hyphens. Must not be default.</para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSubnetGroupCmdlet.SubnetId">
            <summary>
            <para>
            <para>The EC2 Subnet IDs for the DB subnet group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSubnetGroupCmdlet.Tag">
            <summary>
            <para>
            <para>Tags to assign to the DB subnet group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSubnetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBSubnetGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CreateDBSubnetGroupResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CreateDBSubnetGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSubnetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSubnetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSubnetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSDBSubnetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.NewRDSEventSubscriptionCmdlet">
            <summary>
            Creates an RDS event notification subscription. This action requires a topic Amazon
            Resource Name (ARN) created by either the RDS console, the SNS console, or the SNS
            API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe
            to the topic. The ARN is displayed in the SNS console.
            
             
            <para>
            You can specify the type of source (SourceType) you want to be notified of, provide
            a list of RDS sources (SourceIds) that triggers the events, and provide a list of
            event categories (EventCategories) for events you want to be notified of. For example,
            you can specify SourceType = db-instance, SourceIds = mydbinstance1, mydbinstance2
            and EventCategories = Availability, Backup.
            </para><para>
            If you specify both the SourceType and SourceIds, such as SourceType = db-instance
            and SourceIdentifier = myDBInstance1, you are notified of all the db-instance events
            for the specified source. If you specify a SourceType but do not specify a SourceIdentifier,
            you receive notice of the events for that source type for all your RDS sources. If
            you don't specify either the SourceType or the SourceIdentifier, you are notified
            of events generated from all RDS sources belonging to your customer account.
            </para><note><para>
            RDS event notification is only available for unencrypted SNS topics. If you specify
            an encrypted SNS topic, event notifications aren't sent for the topic.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSEventSubscriptionCmdlet.Enabled">
            <summary>
            <para>
            <para> A value that indicates whether to activate the subscription. If the event notification
            subscription isn't activated, the subscription is created but not active. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSEventSubscriptionCmdlet.EventCategory">
            <summary>
            <para>
            <para> A list of event categories for a SourceType that you want to subscribe to. You can
            see a list of the categories for a given SourceType in the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html">Events</a>
            topic in the <i>Amazon RDS User Guide</i> or by using the <b>DescribeEventCategories</b>
            action. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSEventSubscriptionCmdlet.SnsTopicArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the SNS topic created for event notification. The
            ARN is created by Amazon SNS when you create a topic and subscribe to it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSEventSubscriptionCmdlet.SourceId">
            <summary>
            <para>
            <para>The list of identifiers of the event sources for which events are returned. If not
            specified, then all sources are included in the response. An identifier must begin
            with a letter and must contain only ASCII letters, digits, and hyphens. It can't end
            with a hyphen or contain two consecutive hyphens.</para><para>Constraints:</para><ul><li><para>If SourceIds are supplied, SourceType must also be provided.</para></li><li><para>If the source type is a DB instance, then a <code>DBInstanceIdentifier</code> must
            be supplied.</para></li><li><para>If the source type is a DB security group, a <code>DBSecurityGroupName</code> must
            be supplied.</para></li><li><para>If the source type is a DB parameter group, a <code>DBParameterGroupName</code> must
            be supplied.</para></li><li><para>If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code> must be supplied.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSEventSubscriptionCmdlet.SourceType">
            <summary>
            <para>
            <para>The type of source that is generating the events. For example, if you want to be notified
            of events generated by a DB instance, you would set this parameter to db-instance.
            if this value isn't specified, all events are returned.</para><para>Valid values: <code>db-instance</code> | <code>db-cluster</code> | <code>db-parameter-group</code>
            | <code>db-security-group</code> | <code>db-snapshot</code> | <code>db-cluster-snapshot</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSEventSubscriptionCmdlet.SubscriptionName">
            <summary>
            <para>
            <para>The name of the subscription.</para><para>Constraints: The name must be less than 255 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSEventSubscriptionCmdlet.Tag">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSEventSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventSubscription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CreateEventSubscriptionResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CreateEventSubscriptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSEventSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubscriptionName parameter.
            The -PassThru parameter is deprecated, use -Select '^SubscriptionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSEventSubscriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.NewRDSGlobalClusterCmdlet">
            <summary>
            <para>
             Creates an Aurora global database spread across multiple regions. The global database
            contains a single primary cluster with read-write capability, and a read-only secondary
            cluster that receives data from the primary cluster through high-speed replication
            performed by the Aurora storage subsystem. 
            </para><para>
             You can create a global database that is initially empty, and then add a primary
            cluster and a secondary cluster to it. Or you can specify an existing Aurora cluster
            during the create operation, and this cluster becomes the primary cluster of the global
            database. 
            </para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSGlobalClusterCmdlet.DatabaseName">
            <summary>
            <para>
            <para> The name for your database of up to 64 alpha-numeric characters. If you do not provide
            a name, Amazon Aurora will not create a database in the global database cluster you
            are creating. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSGlobalClusterCmdlet.DeletionProtection">
            <summary>
            <para>
            <para> The deletion protection setting for the new global database. The global database
            can't be deleted when deletion protection is enabled. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSGlobalClusterCmdlet.Engine">
            <summary>
            <para>
            <para>Provides the name of the database engine to be used for this DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSGlobalClusterCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The engine version of the Aurora global database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSGlobalClusterCmdlet.GlobalClusterIdentifier">
            <summary>
            <para>
            <para>The cluster identifier of the new global database cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSGlobalClusterCmdlet.SourceDBClusterIdentifier">
            <summary>
            <para>
            <para> The Amazon Resource Name (ARN) to use as the primary cluster of the global database.
            This parameter is optional. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSGlobalClusterCmdlet.StorageEncrypted">
            <summary>
            <para>
            <para> The storage encryption setting for the new global database cluster. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSGlobalClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GlobalCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CreateGlobalClusterResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CreateGlobalClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSGlobalClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatabaseName parameter.
            The -PassThru parameter is deprecated, use -Select '^DatabaseName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSGlobalClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.NewRDSOptionGroupCmdlet">
            <summary>
            Creates a new option group. You can create up to 20 option groups.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSOptionGroupCmdlet.EngineName">
            <summary>
            <para>
            <para>Specifies the name of the engine that this option group should be associated with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSOptionGroupCmdlet.MajorEngineVersion">
            <summary>
            <para>
            <para>Specifies the major version of the engine that this option group should be associated
            with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSOptionGroupCmdlet.OptionGroupDescription">
            <summary>
            <para>
            <para>The description of the option group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSOptionGroupCmdlet.OptionGroupName">
            <summary>
            <para>
            <para>Specifies the name of the option group to be created.</para><para>Constraints:</para><ul><li><para>Must be 1 to 255 letters, numbers, or hyphens</para></li><li><para>First character must be a letter</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens</para></li></ul><para>Example: <code>myoptiongroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSOptionGroupCmdlet.Tag">
            <summary>
            <para>
            <para>Tags to assign to the option group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSOptionGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OptionGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CreateOptionGroupResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CreateOptionGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSOptionGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OptionGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^OptionGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSOptionGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.NewRDSReservedDBInstancesOfferingPurchaseCmdlet">
            <summary>
            Purchases a reserved DB instance offering.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSReservedDBInstancesOfferingPurchaseCmdlet.DBInstanceCount">
            <summary>
            <para>
            <para>The number of instances to reserve.</para><para>Default: <code>1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSReservedDBInstancesOfferingPurchaseCmdlet.ReservedDBInstanceId">
            <summary>
            <para>
            <para>Customer-specified identifier to track this reservation.</para><para>Example: myreservationID</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSReservedDBInstancesOfferingPurchaseCmdlet.ReservedDBInstancesOfferingId">
            <summary>
            <para>
            <para>The ID of the Reserved DB instance offering to purchase.</para><para>Example: 438012d3-4052-4cc7-b2e3-8d3372e0e706</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSReservedDBInstancesOfferingPurchaseCmdlet.Tag">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSReservedDBInstancesOfferingPurchaseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReservedDBInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.PurchaseReservedDBInstancesOfferingResponse).
            Specifying the name of a property of type Amazon.RDS.Model.PurchaseReservedDBInstancesOfferingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSReservedDBInstancesOfferingPurchaseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedDBInstancesOfferingId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedDBInstancesOfferingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.NewRDSReservedDBInstancesOfferingPurchaseCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RegisterRDSDBProxyTargetCmdlet">
            <summary>
            <note><para>
            This is prerelease documentation for the RDS Database Proxy feature in preview release.
            It is subject to change.
            </para></note><para>
            Associate one or more <code>DBProxyTarget</code> data structures with a <code>DBProxyTargetGroup</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RegisterRDSDBProxyTargetCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>One or more DB cluster identifiers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RegisterRDSDBProxyTargetCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>One or more DB instance identifiers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RegisterRDSDBProxyTargetCmdlet.DBProxyName">
            <summary>
            <para>
            <para>The identifier of the <code>DBProxy</code> that is associated with the <code>DBProxyTargetGroup</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RegisterRDSDBProxyTargetCmdlet.TargetGroupName">
            <summary>
            <para>
            <para>The identifier of the <code>DBProxyTargetGroup</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RegisterRDSDBProxyTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBProxyTargets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.RegisterDBProxyTargetsResponse).
            Specifying the name of a property of type Amazon.RDS.Model.RegisterDBProxyTargetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RegisterRDSDBProxyTargetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBProxyName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBProxyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RegisterRDSDBProxyTargetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSCustomAvailabilityZoneCmdlet">
            <summary>
            Deletes a custom Availability Zone (AZ).
            
             
            <para>
            A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.
            </para><para>
            For more information about RDS on VMware, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html"><i>RDS on VMware User Guide.</i></a></para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSCustomAvailabilityZoneCmdlet.CustomAvailabilityZoneId">
            <summary>
            <para>
            <para>The custom AZ identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSCustomAvailabilityZoneCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CustomAvailabilityZone'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DeleteCustomAvailabilityZoneResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DeleteCustomAvailabilityZoneResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSCustomAvailabilityZoneCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CustomAvailabilityZoneId parameter.
            The -PassThru parameter is deprecated, use -Select '^CustomAvailabilityZoneId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSCustomAvailabilityZoneCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterCmdlet">
            <summary>
            The DeleteDBCluster action deletes a previously provisioned DB cluster. When you delete
            a DB cluster, all automated backups for that DB cluster are deleted and can't be recovered.
            Manual DB cluster snapshots of the specified DB cluster are not deleted.
            
              
            <para>
            For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The DB cluster identifier for the DB cluster to be deleted. This parameter isn't case-sensitive.</para><para>Constraints:</para><ul><li><para>Must match an existing DBClusterIdentifier.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterCmdlet.FinalDBSnapshotIdentifier">
            <summary>
            <para>
            <para> The DB cluster snapshot identifier of the new DB cluster snapshot created when <code>SkipFinalSnapshot</code>
            is disabled. </para><note><para> Specifying this parameter and also skipping the creation of a final DB cluster snapshot
            with the <code>SkipFinalShapshot</code> parameter results in an error.</para></note><para>Constraints:</para><ul><li><para>Must be 1 to 255 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterCmdlet.SkipFinalSnapshot">
            <summary>
            <para>
            <para>A value that indicates whether to skip the creation of a final DB cluster snapshot
            before the DB cluster is deleted. If skip is specified, no DB cluster snapshot is
            created. If skip isn't specified, a DB cluster snapshot is created before the DB cluster
            is deleted. By default, skip isn't specified, and the DB cluster snapshot is created.
            By default, this parameter is disabled.</para><note><para>You must specify a <code>FinalDBSnapshotIdentifier</code> parameter if <code>SkipFinalSnapshot</code>
            is disabled.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DeleteDBClusterResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DeleteDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterEndpointCmdlet">
            <summary>
            Deletes a custom endpoint and removes it from an Amazon Aurora DB cluster.
            
             <note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterEndpointCmdlet.DBClusterEndpointIdentifier">
            <summary>
            <para>
            <para>The identifier associated with the custom endpoint. This parameter is stored as a
            lowercase string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DeleteDBClusterEndpointResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DeleteDBClusterEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterEndpointIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterEndpointIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterParameterGroupCmdlet">
            <summary>
            Deletes a specified DB cluster parameter group. The DB cluster parameter group to
            be deleted can't be associated with any DB clusters.
            
             
            <para>
            For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterParameterGroupCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB cluster parameter group.</para><para>Constraints:</para><ul><li><para>Must be the name of an existing DB cluster parameter group.</para></li><li><para>You can't delete a default DB cluster parameter group.</para></li><li><para>Can't be associated with any DB clusters.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DeleteDBClusterParameterGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterSnapshotCmdlet">
            <summary>
            Deletes a DB cluster snapshot. If the snapshot is being copied, the copy operation
            is terminated.
            
             <note><para>
            The DB cluster snapshot must be in the <code>available</code> state to be deleted.
            </para></note><para>
            For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterSnapshotCmdlet.DBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier of the DB cluster snapshot to delete.</para><para>Constraints: Must be the name of an existing DB cluster snapshot in the <code>available</code>
            state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterSnapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DeleteDBClusterSnapshotResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DeleteDBClusterSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterSnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterSnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBClusterSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBInstanceCmdlet">
            <summary>
            The DeleteDBInstance action deletes a previously provisioned DB instance. When you
            delete a DB instance, all automated backups for that instance are deleted and can't
            be recovered. Manual DB snapshots of the DB instance to be deleted by <code>DeleteDBInstance</code>
            are not deleted.
            
             
            <para>
             If you request a final DB snapshot the status of the Amazon RDS DB instance is <code>deleting</code>
            until the DB snapshot is created. The API action <code>DescribeDBInstance</code> is
            used to monitor the status of this operation. The action can't be canceled or reverted
            once submitted. 
            </para><para>
            When a DB instance is in a failure state and has a status of <code>failed</code>,
            <code>incompatible-restore</code>, or <code>incompatible-network</code>, you can only
            delete it when you skip creation of the final snapshot with the <code>SkipFinalSnapshot</code>
            parameter.
            </para><para>
            If the specified DB instance is part of an Amazon Aurora DB cluster, you can't delete
            the DB instance if both of the following conditions are true:
            </para><ul><li><para>
            The DB cluster is a read replica of another Amazon Aurora DB cluster.
            </para></li><li><para>
            The DB instance is the only instance in the DB cluster.
            </para></li></ul><para>
            To delete a DB instance in this case, first call the <code>PromoteReadReplicaDBCluster</code>
            API action to promote the DB cluster so it's no longer a read replica. After the promotion
            completes, then call the <code>DeleteDBInstance</code> API action to delete the final
            instance in the DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBInstanceCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The DB instance identifier for the DB instance to be deleted. This parameter isn't
            case-sensitive.</para><para>Constraints:</para><ul><li><para>Must match the name of an existing DB instance.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBInstanceCmdlet.DeleteAutomatedBackup">
            <summary>
            <para>
            <para>A value that indicates whether to remove automated backups immediately after the DB
            instance is deleted. This parameter isn't case-sensitive. The default is to remove
            automated backups immediately after the DB instance is deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBInstanceCmdlet.FinalDBSnapshotIdentifier">
            <summary>
            <para>
            <para> The <code>DBSnapshotIdentifier</code> of the new <code>DBSnapshot</code> created
            when the <code>SkipFinalSnapshot</code> parameter is disabled. </para><note><para>Specifying this parameter and also specifying to skip final DB snapshot creation in
            SkipFinalShapshot results in an error.</para></note><para>Constraints:</para><ul><li><para>Must be 1 to 255 letters or numbers.</para></li><li><para>First character must be a letter.</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens.</para></li><li><para>Can't be specified when deleting a read replica.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBInstanceCmdlet.SkipFinalSnapshot">
            <summary>
            <para>
            <para>A value that indicates whether to skip the creation of a final DB snapshot before
            the DB instance is deleted. If skip is specified, no DB snapshot is created. If skip
            isn't specified, a DB snapshot is created before the DB instance is deleted. By default,
            skip isn't specified, and the DB snapshot is created.</para><para>When a DB instance is in a failure state and has a status of 'failed', 'incompatible-restore',
            or 'incompatible-network', it can only be deleted when skip is specified.</para><para>Specify skip when deleting a read replica.</para><note><para>The FinalDBSnapshotIdentifier parameter must be specified if skip isn't specified.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DeleteDBInstanceResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DeleteDBInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBInstanceAutomatedBackupCmdlet">
            <summary>
            Deletes automated backups based on the source instance's <code>DbiResourceId</code>
            value or the restorable instance's resource ID.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBInstanceAutomatedBackupCmdlet.DbiResourceId">
            <summary>
            <para>
            <para>The identifier for the source DB instance, which can't be changed and which is unique
            to an AWS Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBInstanceAutomatedBackupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstanceAutomatedBackup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DeleteDBInstanceAutomatedBackupResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DeleteDBInstanceAutomatedBackupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBInstanceAutomatedBackupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DbiResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^DbiResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBInstanceAutomatedBackupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBParameterGroupCmdlet">
            <summary>
            Deletes a specified DB parameter group. The DB parameter group to be deleted can't
            be associated with any DB instances.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBParameterGroupCmdlet.DBParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB parameter group.</para><para>Constraints:</para><ul><li><para>Must be the name of an existing DB parameter group</para></li><li><para>You can't delete a default DB parameter group</para></li><li><para>Can't be associated with any DB instances</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DeleteDBParameterGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBProxyCmdlet">
            <summary>
            <note><para>
            This is prerelease documentation for the RDS Database Proxy feature in preview release.
            It is subject to change.
            </para></note><para>
            Deletes an existing proxy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBProxyCmdlet.DBProxyName">
            <summary>
            <para>
            <para>The name of the DB proxy to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBProxyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBProxy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DeleteDBProxyResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DeleteDBProxyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBProxyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBProxyName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBProxyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBProxyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBSecurityGroupCmdlet">
            <summary>
            Deletes a DB security group.
            
             <note><para>
            The specified DB security group must not be associated with any DB instances.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBSecurityGroupCmdlet.DBSecurityGroupName">
            <summary>
            <para>
            <para>The name of the DB security group to delete.</para><note><para>You can't delete the default DB security group.</para></note><para>Constraints:</para><ul><li><para>Must be 1 to 255 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens</para></li><li><para>Must not be "Default"</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBSecurityGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DeleteDBSecurityGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBSecurityGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSecurityGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSecurityGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBSecurityGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBSnapshotCmdlet">
            <summary>
            Deletes a DB snapshot. If the snapshot is being copied, the copy operation is terminated.
            
             <note><para>
            The DB snapshot must be in the <code>available</code> state to be deleted.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBSnapshotCmdlet.DBSnapshotIdentifier">
            <summary>
            <para>
            <para>The DB snapshot identifier.</para><para>Constraints: Must be the name of an existing DB snapshot in the <code>available</code>
            state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBSnapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DeleteDBSnapshotResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DeleteDBSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBSubnetGroupCmdlet">
            <summary>
            Deletes a DB subnet group.
            
             <note><para>
            The specified database subnet group must not be associated with any DB instances.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBSubnetGroupCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The name of the database subnet group to delete.</para><note><para>You can't delete the default subnet group.</para></note><para>Constraints:</para><para>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBSubnetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DeleteDBSubnetGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBSubnetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSubnetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSubnetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSDBSubnetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSEventSubscriptionCmdlet">
            <summary>
            Deletes an RDS event notification subscription.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSEventSubscriptionCmdlet.SubscriptionName">
            <summary>
            <para>
            <para>The name of the RDS event notification subscription you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSEventSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventSubscription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DeleteEventSubscriptionResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DeleteEventSubscriptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSEventSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubscriptionName parameter.
            The -PassThru parameter is deprecated, use -Select '^SubscriptionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSEventSubscriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSFromGlobalClusterCmdlet">
            <summary>
            Detaches an Aurora secondary cluster from an Aurora global database cluster. The
            cluster becomes a standalone cluster with read-write capability instead of being read-only
            and receiving data from a primary cluster in a different region. 
            
             <note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSFromGlobalClusterCmdlet.DbClusterIdentifier">
            <summary>
            <para>
            <para> The Amazon Resource Name (ARN) identifying the cluster that was detached from the
            Aurora global database cluster. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSFromGlobalClusterCmdlet.GlobalClusterIdentifier">
            <summary>
            <para>
            <para> The cluster identifier to detach from the Aurora global database cluster. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSFromGlobalClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GlobalCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.RemoveFromGlobalClusterResponse).
            Specifying the name of a property of type Amazon.RDS.Model.RemoveFromGlobalClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSFromGlobalClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DbClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DbClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSFromGlobalClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSGlobalClusterCmdlet">
            <summary>
            Deletes a global database cluster. The primary and secondary clusters must already
            be detached or destroyed first. 
            
             <note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSGlobalClusterCmdlet.GlobalClusterIdentifier">
            <summary>
            <para>
            <para> The cluster identifier of the global database cluster being deleted. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSGlobalClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GlobalCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DeleteGlobalClusterResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DeleteGlobalClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSGlobalClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GlobalClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^GlobalClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSGlobalClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSInstallationMediaCmdlet">
            <summary>
            Deletes the installation medium for a DB engine that requires an on-premises customer
            provided license, such as Microsoft SQL Server.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSInstallationMediaCmdlet.InstallationMediaId">
            <summary>
            <para>
            <para>The installation medium ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSInstallationMediaCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DeleteInstallationMediaResponse).
            Specifying the name of a property of type Amazon.RDS.Model.DeleteInstallationMediaResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSInstallationMediaCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstallationMediaId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstallationMediaId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSInstallationMediaCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSOptionGroupCmdlet">
            <summary>
            Deletes an existing option group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSOptionGroupCmdlet.OptionGroupName">
            <summary>
            <para>
            <para>The name of the option group to be deleted.</para><note><para>You can't delete default option groups.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSOptionGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DeleteOptionGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSOptionGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OptionGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^OptionGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSOptionGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSRoleFromDBClusterCmdlet">
            <summary>
            Disassociates an AWS Identity and Access Management (IAM) role from an Amazon Aurora
            DB cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Integrating.Authorizing.html">Authorizing
            Amazon Aurora MySQL to Access Other AWS Services on Your Behalf </a> in the <i>Amazon
            Aurora User Guide</i>.
            
             <note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSRoleFromDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The name of the DB cluster to disassociate the IAM role from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSRoleFromDBClusterCmdlet.FeatureName">
            <summary>
            <para>
            <para>The name of the feature for the DB cluster that the IAM role is to be disassociated
            from. For the list of supported feature names, see <a>DBEngineVersion</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSRoleFromDBClusterCmdlet.RoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the IAM role to disassociate from the Aurora DB
            cluster, for example <code>arn:aws:iam::123456789012:role/AuroraAccessRole</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSRoleFromDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.RemoveRoleFromDBClusterResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSRoleFromDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSRoleFromDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSRoleFromDBInstanceCmdlet">
            <summary>
            Disassociates an AWS Identity and Access Management (IAM) role from a DB instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSRoleFromDBInstanceCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The name of the DB instance to disassociate the IAM role from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSRoleFromDBInstanceCmdlet.FeatureName">
            <summary>
            <para>
            <para>The name of the feature for the DB instance that the IAM role is to be disassociated
            from. For the list of supported feature names, see <code>DBEngineVersion</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSRoleFromDBInstanceCmdlet.RoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the IAM role to disassociate from the DB instance,
            for example <code>arn:aws:iam::123456789012:role/AccessRole</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSRoleFromDBInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.RemoveRoleFromDBInstanceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSRoleFromDBInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RoleArn parameter.
            The -PassThru parameter is deprecated, use -Select '^RoleArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSRoleFromDBInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSSourceIdentifierFromSubscriptionCmdlet">
            <summary>
            Removes a source identifier from an existing RDS event notification subscription.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSSourceIdentifierFromSubscriptionCmdlet.SourceIdentifier">
            <summary>
            <para>
            <para> The source identifier to be removed from the subscription, such as the <b>DB instance
            identifier</b> for a DB instance or the name of a security group. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSSourceIdentifierFromSubscriptionCmdlet.SubscriptionName">
            <summary>
            <para>
            <para>The name of the RDS event notification subscription you want to remove a source identifier
            from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSSourceIdentifierFromSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventSubscription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.RemoveSourceIdentifierFromSubscriptionResponse).
            Specifying the name of a property of type Amazon.RDS.Model.RemoveSourceIdentifierFromSubscriptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSSourceIdentifierFromSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubscriptionName parameter.
            The -PassThru parameter is deprecated, use -Select '^SubscriptionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSSourceIdentifierFromSubscriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSTagFromResourceCmdlet">
            <summary>
            Removes metadata tags from an Amazon RDS resource.
            
             
            <para>
            For an overview on tagging an Amazon RDS resource, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html">Tagging
            Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i></para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSTagFromResourceCmdlet.ResourceName">
            <summary>
            <para>
            <para>The Amazon RDS resource that the tags are removed from. This value is an Amazon Resource
            Name (ARN). For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing">
            Constructing an ARN for Amazon RDS</a> in the <i>Amazon RDS User Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSTagFromResourceCmdlet.TagKey">
            <summary>
            <para>
            <para>The tag key (name) of the tag to be removed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSTagFromResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.RemoveTagsFromResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSTagFromResourceCmdlet.PassThru">
            <summary>
            Returns the collection of tag keys that were removed
            The -PassThru parameter is deprecated, use -Select instead. This parameter will be removed in future
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RemoveRDSTagFromResourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBClusterCmdlet">
            <summary>
            Backtracks a DB cluster to a specific time, without creating a new DB cluster.
            
             
            <para>
            For more information on backtracking, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Managing.Backtrack.html">
            Backtracking an Aurora DB Cluster</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBClusterCmdlet.UtcBacktrackTo">
            <summary>
            <para>
            <para>The timestamp of the time to backtrack the DB cluster to, specified in ISO 8601 format.
            For more information about ISO 8601, see the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a></para><note><para>If the specified time isn't a consistent time for the DB cluster, Aurora automatically
            chooses the nearest possible consistent time for the DB cluster.</para></note><para>Constraints:</para><ul><li><para>Must contain a valid ISO 8601 timestamp.</para></li><li><para>Can't contain a timestamp set in the future.</para></li></ul><para>Example: <code>2017-07-08T18:00Z</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The DB cluster identifier of the DB cluster to be backtracked. This parameter is stored
            as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 alphanumeric characters or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>my-cluster1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBClusterCmdlet.EnforceReset">
            <summary>
            <para>
            <para>A value that indicates whether to force the DB cluster to backtrack when binary logging
            is enabled. Otherwise, an error occurs when binary logging is enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBClusterCmdlet.UseEarliestTimeOnPointInTimeUnavailable">
            <summary>
            <para>
            <para>A value that indicates whether to backtrack the DB cluster to the earliest possible
            backtrack time when <i>BacktrackTo</i> is set to a timestamp earlier than the earliest
            backtrack time. When this parameter is disabled and <i>BacktrackTo</i> is set to a
            timestamp earlier than the earliest backtrack time, an error occurs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBClusterCmdlet.BacktrackTo">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use BacktrackToUtc instead. Setting either BacktrackTo
            or BacktrackToUtc results in both BacktrackTo and BacktrackToUtc being assigned, the
            latest assignment to either one of the two property is reflected in the value of both.
            BacktrackTo is provided for backwards compatibility only and assigning a non-Utc DateTime
            to it results in the wrong timestamp being passed to the service.</para><para>The timestamp of the time to backtrack the DB cluster to, specified in ISO 8601 format.
            For more information about ISO 8601, see the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a></para><note><para>If the specified time isn't a consistent time for the DB cluster, Aurora automatically
            chooses the nearest possible consistent time for the DB cluster.</para></note><para>Constraints:</para><ul><li><para>Must contain a valid ISO 8601 timestamp.</para></li><li><para>Can't contain a timestamp set in the future.</para></li></ul><para>Example: <code>2017-07-08T18:00Z</code></para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.BacktrackDBClusterResponse).
            Specifying the name of a property of type Amazon.RDS.Model.BacktrackDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBClusterParameterGroupCmdlet">
            <summary>
            Modifies the parameters of a DB cluster parameter group to the default value. To
            reset specific parameters submit a list of the following: <code>ParameterName</code>
            and <code>ApplyMethod</code>. To reset the entire DB cluster parameter group, specify
            the <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters.
            
            
             
            <para>
             When resetting the entire group, dynamic parameters are updated immediately and static
            parameters are set to <code>pending-reboot</code> to take effect on the next DB instance
            restart or <code>RebootDBInstance</code> request. You must call <code>RebootDBInstance</code>
            for every DB instance in your DB cluster that you want the updated static parameter
            to apply to.
            </para><para>
            For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBClusterParameterGroupCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB cluster parameter group to reset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBClusterParameterGroupCmdlet.Parameter">
            <summary>
            <para>
            <para>A list of parameter names in the DB cluster parameter group to reset to the default
            values. You can't use this parameter if the <code>ResetAllParameters</code> parameter
            is enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBClusterParameterGroupCmdlet.ResetAllParameter">
            <summary>
            <para>
            <para>A value that indicates whether to reset all parameters in the DB cluster parameter
            group to their default values. You can't use this parameter if there is a list of
            parameter names specified for the <code>Parameters</code> parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterParameterGroupName'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ResetDBClusterParameterGroupResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ResetDBClusterParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBClusterParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBParameterGroupCmdlet">
            <summary>
            Modifies the parameters of a DB parameter group to the engine/system default value.
            To reset specific parameters, provide a list of the following: <code>ParameterName</code>
            and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the
            <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters.
            When resetting the entire group, dynamic parameters are updated immediately and static
            parameters are set to <code>pending-reboot</code> to take effect on the next DB instance
            restart or <code>RebootDBInstance</code> request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBParameterGroupCmdlet.DBParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB parameter group.</para><para>Constraints:</para><ul><li><para>Must match the name of an existing <code>DBParameterGroup</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBParameterGroupCmdlet.Parameter">
            <summary>
            <para>
            <para>To reset the entire DB parameter group, specify the <code>DBParameterGroup</code>
            name and <code>ResetAllParameters</code> parameters. To reset specific parameters,
            provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>.
            A maximum of 20 parameters can be modified in a single request.</para><para><b>MySQL</b></para><para>Valid Values (for Apply method): <code>immediate</code> | <code>pending-reboot</code></para><para>You can use the immediate value with dynamic parameters only. You can use the <code>pending-reboot</code>
            value for both dynamic and static parameters, and changes are applied when DB instance
            reboots.</para><para><b>MariaDB</b></para><para>Valid Values (for Apply method): <code>immediate</code> | <code>pending-reboot</code></para><para>You can use the immediate value with dynamic parameters only. You can use the <code>pending-reboot</code>
            value for both dynamic and static parameters, and changes are applied when DB instance
            reboots.</para><para><b>Oracle</b></para><para>Valid Values (for Apply method): <code>pending-reboot</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBParameterGroupCmdlet.ResetAllParameter">
            <summary>
            <para>
            <para> A value that indicates whether to reset all parameters in the DB parameter group
            to default values. By default, all parameters in the DB parameter group are reset
            to default values. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBParameterGroupName'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ResetDBParameterGroupResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ResetDBParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.ResetRDSDBParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RestartRDSDBInstanceCmdlet">
            <summary>
            You might need to reboot your DB instance, usually for maintenance reasons. For example,
            if you make certain modifications, or if you change the DB parameter group associated
            with the DB instance, you must reboot the instance for the changes to take effect.
            
            
             
            <para>
            Rebooting a DB instance restarts the database engine service. Rebooting a DB instance
            results in a momentary outage, during which the DB instance status is set to rebooting.
            
            </para><para>
            For more information about rebooting, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_RebootInstance.html">Rebooting
            a DB Instance</a> in the <i>Amazon RDS User Guide.</i></para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestartRDSDBInstanceCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The DB instance identifier. This parameter is stored as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing DBInstance.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestartRDSDBInstanceCmdlet.ForceFailover">
            <summary>
            <para>
            <para> A value that indicates whether the reboot is conducted through a Multi-AZ failover.
            </para><para>Constraint: You can't enable force failover if the instance isn't configured for Multi-AZ.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestartRDSDBInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.RebootDBInstanceResponse).
            Specifying the name of a property of type Amazon.RDS.Model.RebootDBInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestartRDSDBInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestartRDSDBInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet">
            <summary>
            Creates an Amazon Aurora DB cluster from data stored in an Amazon S3 bucket. Amazon
            RDS must be authorized to access the Amazon S3 bucket and the data must be created
            using the Percona XtraBackup utility as described in <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Migrating.html">
            Migrating Data to an Amazon Aurora MySQL DB Cluster</a> in the <i>Amazon Aurora User
            Guide</i>.
            
             <note><para>
            This action only restores the DB cluster, not the DB instances for that DB cluster.
            You must invoke the <code>CreateDBInstance</code> action to create DB instances for
            the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>.
            You can create DB instances only after the <code>RestoreDBClusterFromS3</code> action
            has completed and the DB cluster is available.
            </para></note><para>
            For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>A list of Availability Zones (AZs) where instances in the restored DB cluster can
            be created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.BacktrackWindow">
            <summary>
            <para>
            <para>The target backtrack window, in seconds. To disable backtracking, set this value to
            0.</para><para>Default: 0</para><para>Constraints:</para><ul><li><para>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.BackupRetentionPeriod">
            <summary>
            <para>
            <para>The number of days for which automated backups of the restored DB cluster are retained.
            You must specify a minimum value of 1.</para><para>Default: 1</para><para>Constraints:</para><ul><li><para>Must be a value from 1 to 35</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.CharacterSetName">
            <summary>
            <para>
            <para>A value that indicates that the restored DB cluster should be associated with the
            specified CharacterSet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.CopyTagsToSnapshot">
            <summary>
            <para>
            <para>A value that indicates whether to copy all tags from the restored DB cluster to snapshots
            of the restored DB cluster. The default is not to copy them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.DatabaseName">
            <summary>
            <para>
            <para>The database name for the restored DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The name of the DB cluster to create from the source data in the Amazon S3 bucket.
            This parameter is isn't case-sensitive.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>my-cluster1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB cluster parameter group to associate with the restored DB cluster.
            If this argument is omitted, <code>default.aurora5.6</code> is used. </para><para>Constraints:</para><ul><li><para>If supplied, must match the name of an existing DBClusterParameterGroup.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>A DB subnet group to associate with the restored DB cluster.</para><para>Constraints: If supplied, must match the name of an existing DBSubnetGroup. </para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.DeletionProtection">
            <summary>
            <para>
            <para>A value that indicates whether the DB cluster has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.Domain">
            <summary>
            <para>
            <para>Specify the Active Directory directory ID to restore the DB cluster in. The domain
            must be created prior to this operation. </para><para> For Amazon Aurora DB clusters, Amazon RDS can use Kerberos Authentication to authenticate
            users that connect to the DB cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html">Kerberos
            Authentication</a> in the <i>Amazon Aurora User Guide</i>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.DomainIAMRoleName">
            <summary>
            <para>
            <para>Specify the name of the IAM role to be used when making API calls to the Directory
            Service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.EnableCloudwatchLogsExport">
            <summary>
            <para>
            <para>The list of logs that the restored DB cluster is to export to CloudWatch Logs. The
            values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing
            Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.EnableIAMDatabaseAuthentication">
            <summary>
            <para>
            <para>A value that indicates whether to enable mapping of AWS Identity and Access Management
            (IAM) accounts to database accounts. By default, mapping is disabled.</para><para>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html">
            IAM Database Authentication</a> in the <i>Amazon Aurora User Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.Engine">
            <summary>
            <para>
            <para>The name of the database engine to be used for the restored DB cluster.</para><para>Valid Values: <code>aurora</code>, <code>aurora-postgresql</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.EngineVersion">
            <summary>
            <para>
            <para>The version number of the database engine to use.</para><para>To list all of the available engine versions for <code>aurora</code> (for MySQL 5.6-compatible
            Aurora), use the following command:</para><para><code>aws rds describe-db-engine-versions --engine aurora --query "DBEngineVersions[].EngineVersion"</code></para><para>To list all of the available engine versions for <code>aurora-mysql</code> (for MySQL
            5.7-compatible Aurora), use the following command:</para><para><code>aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"</code></para><para>To list all of the available engine versions for <code>aurora-postgresql</code>, use
            the following command:</para><para><code>aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"</code></para><para><b>Aurora MySQL</b></para><para>Example: <code>5.6.10a</code>, <code>5.6.mysql_aurora.1.19.2</code>, <code>5.7.12</code>,
            <code>5.7.mysql_aurora.2.04.5</code></para><para><b>Aurora PostgreSQL</b></para><para>Example: <code>9.6.3</code>, <code>10.7</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS KMS key identifier for an encrypted DB cluster.</para><para>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key.
            If you are creating a DB cluster with the same AWS account that owns the KMS encryption
            key used to encrypt the new DB cluster, then you can use the KMS key alias instead
            of the ARN for the KM encryption key.</para><para>If the StorageEncrypted parameter is enabled, and you do not specify a value for the
            <code>KmsKeyId</code> parameter, then Amazon RDS will use your default encryption
            key. AWS KMS creates the default encryption key for your AWS account. Your AWS account
            has a different default encryption key for each AWS Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.MasterUsername">
            <summary>
            <para>
            <para>The name of the master user for the restored DB cluster.</para><para>Constraints:</para><ul><li><para>Must be 1 to 16 letters or numbers.</para></li><li><para>First character must be a letter.</para></li><li><para>Can't be a reserved word for the chosen database engine.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.MasterUserPassword">
            <summary>
            <para>
            <para>The password for the master database user. This password can contain any printable
            ASCII character except "/", """, or "@".</para><para>Constraints: Must contain from 8 to 41 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.OptionGroupName">
            <summary>
            <para>
            <para>A value that indicates that the restored DB cluster should be associated with the
            specified option group.</para><para>Permanent options can't be removed from an option group. An option group can't be
            removed from a DB cluster once it is associated with a DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.Port">
            <summary>
            <para>
            <para>The port number on which the instances in the restored DB cluster accept connections.</para><para> Default: <code>3306</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.PreferredBackupWindow">
            <summary>
            <para>
            <para>The daily time range during which automated backups are created if automated backups
            are enabled using the <code>BackupRetentionPeriod</code> parameter. </para><para>The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora">
            Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Aurora User Guide.</i></para><para>Constraints:</para><ul><li><para>Must be in the format <code>hh24:mi-hh24:mi</code>.</para></li><li><para>Must be in Universal Coordinated Time (UTC).</para></li><li><para>Must not conflict with the preferred maintenance window.</para></li><li><para>Must be at least 30 minutes.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>The weekly time range during which system maintenance can occur, in Universal Coordinated
            Time (UTC).</para><para>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code></para><para>The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region, occurring on a random day of the week. To see the time blocks
            available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora">
            Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Aurora User Guide.</i></para><para>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</para><para>Constraints: Minimum 30-minute window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.S3BucketName">
            <summary>
            <para>
            <para>The name of the Amazon S3 bucket that contains the data used to create the Amazon
            Aurora DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.S3IngestionRoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role
            that authorizes Amazon RDS to access the Amazon S3 bucket on your behalf.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.S3Prefix">
            <summary>
            <para>
            <para>The prefix for all of the file names that contain the data used to create the Amazon
            Aurora DB cluster. If you do not specify a <b>SourceS3Prefix</b> value, then the Amazon
            Aurora DB cluster is created by using all of the files in the Amazon S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.SourceEngine">
            <summary>
            <para>
            <para>The identifier for the database engine that was backed up to create the files stored
            in the Amazon S3 bucket. </para><para>Valid values: <code>mysql</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.SourceEngineVersion">
            <summary>
            <para>
            <para>The version of the database that the backup files were created from.</para><para>MySQL version 5.5 and 5.6 are supported. </para><para>Example: <code>5.6.22</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.StorageEncrypted">
            <summary>
            <para>
            <para>A value that indicates whether the restored DB cluster is encrypted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.Tag">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of EC2 VPC security groups to associate with the restored DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.RestoreDBClusterFromS3Response).
            Specifying the name of a property of type Amazon.RDS.Model.RestoreDBClusterFromS3Response will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromS3Cmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet">
            <summary>
            Creates a new DB cluster from a DB snapshot or DB cluster snapshot. This action only
            applies to Aurora DB clusters.
            
             
            <para>
            The target DB cluster is created from the source snapshot with a default configuration.
            If you don't specify a security group, the new DB cluster is associated with the default
            security group.
            </para><note><para>
            This action only restores the DB cluster, not the DB instances for that DB cluster.
            You must invoke the <code>CreateDBInstance</code> action to create DB instances for
            the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>.
            You can create DB instances only after the <code>RestoreDBClusterFromSnapshot</code>
            action has completed and the DB cluster is available.
            </para></note><para>
            For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.ScalingConfiguration_AutoPause">
            <summary>
            <para>
            <para>A value that indicates whether to allow or disallow automatic pause for an Aurora
            DB cluster in <code>serverless</code> DB engine mode. A DB cluster can be paused only
            when it's idle (it has no connections).</para><note><para>If a DB cluster is paused for more than seven days, the DB cluster might be backed
            up with a snapshot. In this case, the DB cluster is restored when there is a request
            to connect to it. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>Provides the list of Availability Zones (AZs) where instances in the restored DB cluster
            can be created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.BacktrackWindow">
            <summary>
            <para>
            <para>The target backtrack window, in seconds. To disable backtracking, set this value to
            0.</para><para>Default: 0</para><para>Constraints:</para><ul><li><para>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.CopyTagsToSnapshot">
            <summary>
            <para>
            <para>A value that indicates whether to copy all tags from the restored DB cluster to snapshots
            of the restored DB cluster. The default is not to copy them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The database name for the restored DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The name of the DB cluster to create from the DB snapshot or DB cluster snapshot.
            This parameter isn't case-sensitive.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens</para></li><li><para>First character must be a letter</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens</para></li></ul><para>Example: <code>my-snapshot-id</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB cluster parameter group to associate with this DB cluster. If this
            argument is omitted, the default DB cluster parameter group for the specified engine
            is used.</para><para>Constraints:</para><ul><li><para>If supplied, must match the name of an existing default DB cluster parameter group.</para></li><li><para>Must be 1 to 255 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The name of the DB subnet group to use for the new DB cluster.</para><para>Constraints: If supplied, must match the name of an existing DB subnet group.</para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.DeletionProtection">
            <summary>
            <para>
            <para>A value that indicates whether the DB cluster has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.Domain">
            <summary>
            <para>
            <para>Specify the Active Directory directory ID to restore the DB cluster in. The domain
            must be created prior to this operation. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.DomainIAMRoleName">
            <summary>
            <para>
            <para>Specify the name of the IAM role to be used when making API calls to the Directory
            Service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.EnableCloudwatchLogsExport">
            <summary>
            <para>
            <para>The list of logs that the restored DB cluster is to export to Amazon CloudWatch Logs.
            The values in the list depend on the DB engine being used. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing
            Database Logs to Amazon CloudWatch Logs </a> in the <i>Amazon Aurora User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.EnableIAMDatabaseAuthentication">
            <summary>
            <para>
            <para>A value that indicates whether to enable mapping of AWS Identity and Access Management
            (IAM) accounts to database accounts. By default, mapping is disabled.</para><para>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html">
            IAM Database Authentication</a> in the <i>Amazon Aurora User Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.Engine">
            <summary>
            <para>
            <para>The database engine to use for the new DB cluster.</para><para>Default: The same as source</para><para>Constraint: Must be compatible with the engine of the source</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.EngineMode">
            <summary>
            <para>
            <para>The DB engine mode of the DB cluster, either <code>provisioned</code>, <code>serverless</code>,
            <code>parallelquery</code>, <code>global</code>, or <code>multimaster</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The version of the database engine to use for the new DB cluster.</para><para>To list all of the available engine versions for <code>aurora</code> (for MySQL 5.6-compatible
            Aurora), use the following command:</para><para><code>aws rds describe-db-engine-versions --engine aurora --query "DBEngineVersions[].EngineVersion"</code></para><para>To list all of the available engine versions for <code>aurora-mysql</code> (for MySQL
            5.7-compatible Aurora), use the following command:</para><para><code>aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"</code></para><para>To list all of the available engine versions for <code>aurora-postgresql</code>, use
            the following command:</para><para><code>aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"</code></para><note><para>If you aren't using the default engine version, then you must specify the engine version.</para></note><para><b>Aurora MySQL</b></para><para>Example: <code>5.6.10a</code>, <code>5.6.mysql_aurora.1.19.2</code>, <code>5.7.12</code>,
            <code>5.7.mysql_aurora.2.04.5</code></para><para><b>Aurora PostgreSQL</b></para><para>Example: <code>9.6.3</code>, <code>10.7</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS KMS key identifier to use when restoring an encrypted DB cluster from a DB
            snapshot or DB cluster snapshot.</para><para>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key.
            If you are restoring a DB cluster with the same AWS account that owns the KMS encryption
            key used to encrypt the new DB cluster, then you can use the KMS key alias instead
            of the ARN for the KMS encryption key.</para><para>If you don't specify a value for the <code>KmsKeyId</code> parameter, then the following
            occurs:</para><ul><li><para>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> is encrypted,
            then the restored DB cluster is encrypted using the KMS key that was used to encrypt
            the DB snapshot or DB cluster snapshot.</para></li><li><para>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> isn't
            encrypted, then the restored DB cluster isn't encrypted.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.ScalingConfiguration_MaxCapacity">
            <summary>
            <para>
            <para>The maximum capacity for an Aurora DB cluster in <code>serverless</code> DB engine
            mode.</para><para>For Aurora MySQL, valid capacity values are <code>1</code>, <code>2</code>, <code>4</code>,
            <code>8</code>, <code>16</code>, <code>32</code>, <code>64</code>, <code>128</code>,
            and <code>256</code>.</para><para>For Aurora PostgreSQL, valid capacity values are <code>2</code>, <code>4</code>, <code>8</code>,
            <code>16</code>, <code>32</code>, <code>64</code>, <code>192</code>, and <code>384</code>.</para><para>The maximum capacity must be greater than or equal to the minimum capacity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.ScalingConfiguration_MinCapacity">
            <summary>
            <para>
            <para>The minimum capacity for an Aurora DB cluster in <code>serverless</code> DB engine
            mode.</para><para>For Aurora MySQL, valid capacity values are <code>1</code>, <code>2</code>, <code>4</code>,
            <code>8</code>, <code>16</code>, <code>32</code>, <code>64</code>, <code>128</code>,
            and <code>256</code>.</para><para>For Aurora PostgreSQL, valid capacity values are <code>2</code>, <code>4</code>, <code>8</code>,
            <code>16</code>, <code>32</code>, <code>64</code>, <code>192</code>, and <code>384</code>.</para><para>The minimum capacity must be less than or equal to the maximum capacity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.OptionGroupName">
            <summary>
            <para>
            <para>The name of the option group to use for the restored DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.Port">
            <summary>
            <para>
            <para>The port number on which the new DB cluster accepts connections.</para><para>Constraints: This value must be <code>1150-65535</code></para><para>Default: The same port as the original DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.ScalingConfiguration_SecondsUntilAutoPause">
            <summary>
            <para>
            <para>The time, in seconds, before an Aurora DB cluster in <code>serverless</code> mode
            is paused.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.SnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier for the DB snapshot or DB cluster snapshot to restore from.</para><para>You can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster
            snapshot. However, you can use only the ARN to specify a DB snapshot.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing Snapshot.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the restored DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.ScalingConfiguration_TimeoutAction">
            <summary>
            <para>
            <para>The action to take when the timeout is reached, either <code>ForceApplyCapacityChange</code>
            or <code>RollbackCapacityChange</code>.</para><para><code>ForceApplyCapacityChange</code> sets the capacity to the specified value as
            soon as possible.</para><para><code>RollbackCapacityChange</code>, the default, ignores the capacity change if
            a scaling point isn't found in the timeout period.</para><important><para>If you specify <code>ForceApplyCapacityChange</code>, connections that prevent Aurora
            Serverless from finding a scaling point might be dropped.</para></important><para>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.auto-scaling">
            Autoscaling for Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of VPC security groups that the new DB cluster will belong to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.RestoreDBClusterFromSnapshotResponse).
            Specifying the name of a property of type Amazon.RDS.Model.RestoreDBClusterFromSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterFromSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet">
            <summary>
            Restores a DB cluster to an arbitrary point in time. Users can restore to any point
            in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code>
            days. The target DB cluster is created from the source DB cluster with the same configuration
            as the original DB cluster, except that the new DB cluster is created with the default
            DB security group. 
            
             <note><para>
            This action only restores the DB cluster, not the DB instances for that DB cluster.
            You must invoke the <code>CreateDBInstance</code> action to create DB instances for
            the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>.
            You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code>
            action has completed and the DB cluster is available.
            </para></note><para>
            For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.BacktrackWindow">
            <summary>
            <para>
            <para>The target backtrack window, in seconds. To disable backtracking, set this value to
            0.</para><para>Default: 0</para><para>Constraints:</para><ul><li><para>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.CopyTagsToSnapshot">
            <summary>
            <para>
            <para>A value that indicates whether to copy all tags from the restored DB cluster to snapshots
            of the restored DB cluster. The default is not to copy them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The name of the new DB cluster to be created.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens</para></li><li><para>First character must be a letter</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB cluster parameter group to associate with this DB cluster. If this
            argument is omitted, the default DB cluster parameter group for the specified engine
            is used.</para><para>Constraints:</para><ul><li><para>If supplied, must match the name of an existing DB cluster parameter group.</para></li><li><para>Must be 1 to 255 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The DB subnet group name to use for the new DB cluster.</para><para>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.DeletionProtection">
            <summary>
            <para>
            <para>A value that indicates whether the DB cluster has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.Domain">
            <summary>
            <para>
            <para>Specify the Active Directory directory ID to restore the DB cluster in. The domain
            must be created prior to this operation. </para><para> For Amazon Aurora DB clusters, Amazon RDS can use Kerberos Authentication to authenticate
            users that connect to the DB cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html">Kerberos
            Authentication</a> in the <i>Amazon Aurora User Guide</i>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.DomainIAMRoleName">
            <summary>
            <para>
            <para>Specify the name of the IAM role to be used when making API calls to the Directory
            Service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.EnableCloudwatchLogsExport">
            <summary>
            <para>
            <para>The list of logs that the restored DB cluster is to export to CloudWatch Logs. The
            values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing
            Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.EnableIAMDatabaseAuthentication">
            <summary>
            <para>
            <para>A value that indicates whether to enable mapping of AWS Identity and Access Management
            (IAM) accounts to database accounts. By default, mapping is disabled.</para><para>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html">
            IAM Database Authentication</a> in the <i>Amazon Aurora User Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS KMS key identifier to use when restoring an encrypted DB cluster from an encrypted
            DB cluster.</para><para>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key.
            If you are restoring a DB cluster with the same AWS account that owns the KMS encryption
            key used to encrypt the new DB cluster, then you can use the KMS key alias instead
            of the ARN for the KMS encryption key.</para><para>You can restore to a new DB cluster and encrypt the new DB cluster with a KMS key
            that is different than the KMS key used to encrypt the source DB cluster. The new
            DB cluster is encrypted with the KMS key identified by the <code>KmsKeyId</code> parameter.</para><para>If you don't specify a value for the <code>KmsKeyId</code> parameter, then the following
            occurs:</para><ul><li><para>If the DB cluster is encrypted, then the restored DB cluster is encrypted using the
            KMS key that was used to encrypt the source DB cluster.</para></li><li><para>If the DB cluster isn't encrypted, then the restored DB cluster isn't encrypted.</para></li></ul><para>If <code>DBClusterIdentifier</code> refers to a DB cluster that isn't encrypted, then
            the restore request is rejected.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.OptionGroupName">
            <summary>
            <para>
            <para>The name of the option group for the new DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.Port">
            <summary>
            <para>
            <para>The port number on which the new DB cluster accepts connections.</para><para>Constraints: A value from <code>1150-65535</code>. </para><para>Default: The default port for the engine.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.UtcRestoreToTime">
            <summary>
            <para>
            <para>The date and time to restore the DB cluster to.</para><para>Valid Values: Value must be a time in Universal Coordinated Time (UTC) format</para><para>Constraints:</para><ul><li><para>Must be before the latest restorable time for the DB instance</para></li><li><para>Must be specified if <code>UseLatestRestorableTime</code> parameter isn't provided</para></li><li><para>Can't be specified if the <code>UseLatestRestorableTime</code> parameter is enabled</para></li><li><para>Can't be specified if the <code>RestoreType</code> parameter is <code>copy-on-write</code></para></li></ul><para>Example: <code>2015-03-07T23:45:00Z</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.RestoreType">
            <summary>
            <para>
            <para>The type of restore to be performed. You can specify one of the following values:</para><ul><li><para><code>full-copy</code> - The new DB cluster is restored as a full copy of the source
            DB cluster.</para></li><li><para><code>copy-on-write</code> - The new DB cluster is restored as a clone of the source
            DB cluster.</para></li></ul><para>Constraints: You can't specify <code>copy-on-write</code> if the engine version of
            the source DB cluster is earlier than 1.11.</para><para>If you don't specify a <code>RestoreType</code> value, then the new DB cluster is
            restored as a full copy of the source DB cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.SourceDBClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the source DB cluster from which to restore.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing DBCluster.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.Tag">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.UseLatestRestorableTime">
            <summary>
            <para>
            <para>A value that indicates whether to restore the DB cluster to the latest restorable
            backup time. By default, the DB cluster isn't restored to the latest restorable backup
            time. </para><para>Constraints: Can't be specified if <code>RestoreToTime</code> parameter is provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of VPC security groups that the new DB cluster belongs to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.RestoreToTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use RestoreToTimeUtc instead. Setting either RestoreToTime
            or RestoreToTimeUtc results in both RestoreToTime and RestoreToTimeUtc being assigned,
            the latest assignment to either one of the two property is reflected in the value
            of both. RestoreToTime is provided for backwards compatibility only and assigning
            a non-Utc DateTime to it results in the wrong timestamp being passed to the service.</para><para>The date and time to restore the DB cluster to.</para><para>Valid Values: Value must be a time in Universal Coordinated Time (UTC) format</para><para>Constraints:</para><ul><li><para>Must be before the latest restorable time for the DB instance</para></li><li><para>Must be specified if <code>UseLatestRestorableTime</code> parameter isn't provided</para></li><li><para>Can't be specified if the <code>UseLatestRestorableTime</code> parameter is enabled</para></li><li><para>Can't be specified if the <code>RestoreType</code> parameter is <code>copy-on-write</code></para></li></ul><para>Example: <code>2015-03-07T23:45:00Z</code></para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.RestoreDBClusterToPointInTimeResponse).
            Specifying the name of a property of type Amazon.RDS.Model.RestoreDBClusterToPointInTimeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBClusterToPointInTimeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet">
            <summary>
            Creates a new DB instance from a DB snapshot. The target database is created from
            the source database restore point with the most of original configuration with the
            default security group and the default DB parameter group. By default, the new DB
            instance is created as a single-AZ deployment except when the instance is a SQL Server
            instance that has an option group that is associated with mirroring; in this case,
            the instance becomes a mirrored AZ deployment and not a single-AZ deployment.
            
             
            <para>
            If your intent is to replace your original DB instance with the new, restored DB instance,
            then rename your original DB instance before you call the RestoreDBInstanceFromDBSnapshot
            action. RDS doesn't allow two DB instances with the same name. Once you have renamed
            your original DB instance with a different identifier, then you can pass the original
            name of the DB instance as the DBInstanceIdentifier in the call to the RestoreDBInstanceFromDBSnapshot
            action. The result is that you will replace the original DB instance with the DB instance
            created from the snapshot.
            </para><para>
            If you are restoring from a shared manual DB snapshot, the <code>DBSnapshotIdentifier</code>
            must be the ARN of the shared DB snapshot.
            </para><note><para>
            This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora, use
            <code>RestoreDBClusterFromSnapshot</code>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.AutoMinorVersionUpgrade">
            <summary>
            <para>
            <para>A value that indicates whether minor version upgrades are applied automatically to
            the DB instance during the maintenance window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>The Availability Zone (AZ) where the DB instance will be created.</para><para>Default: A random, system-chosen Availability Zone.</para><para>Constraint: You can't specify the <code>AvailabilityZone</code> parameter if the DB
            instance is a Multi-AZ deployment.</para><para>Example: <code>us-east-1a</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.CopyTagsToSnapshot">
            <summary>
            <para>
            <para>A value that indicates whether to copy all tags from the restored DB instance to snapshots
            of the DB instance. By default, tags are not copied.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.DBInstanceClass">
            <summary>
            <para>
            <para>The compute and memory capacity of the Amazon RDS DB instance, for example, <code>db.m4.large</code>.
            Not all DB instance classes are available in all AWS Regions, or for all database
            engines. For the full list of DB instance classes, and availability for your engine,
            see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB
            Instance Class</a> in the <i>Amazon RDS User Guide.</i></para><para>Default: The same DBInstanceClass as the original DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>Name of the DB instance to create from the DB snapshot. This parameter isn't case-sensitive.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 numbers, letters, or hyphens</para></li><li><para>First character must be a letter</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens</para></li></ul><para>Example: <code>my-snapshot-id</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.DBName">
            <summary>
            <para>
            <para>The database name for the restored DB instance.</para><note><para>This parameter doesn't apply to the MySQL, PostgreSQL, or MariaDB engines.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.DBParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB parameter group to associate with this DB instance.</para><para>If you do not specify a value for <code>DBParameterGroupName</code>, then the default
            <code>DBParameterGroup</code> for the specified DB engine is used.</para><para>Constraints:</para><ul><li><para>If supplied, must match the name of an existing DBParameterGroup.</para></li><li><para>Must be 1 to 255 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.DBSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier for the DB snapshot to restore from.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing DBSnapshot.</para></li><li><para>If you are restoring from a shared manual DB snapshot, the <code>DBSnapshotIdentifier</code>
            must be the ARN of the shared DB snapshot.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The DB subnet group name to use for the new instance.</para><para>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.DeletionProtection">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html">
            Deleting a DB Instance</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.Domain">
            <summary>
            <para>
            <para>Specify the Active Directory directory ID to restore the DB instance in. The domain
            must be created prior to this operation. Currently, only Microsoft SQL Server and
            Oracle DB instances can be created in an Active Directory Domain. </para><para>For Microsoft SQL Server DB instances, Amazon RDS can use Windows Authentication to
            authenticate users that connect to the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_SQLServerWinAuth.html">
            Using Windows Authentication with an Amazon RDS DB Instance Running Microsoft SQL
            Server</a> in the <i>Amazon RDS User Guide</i>.</para><para>For Oracle DB instances, Amazon RDS can use Kerberos Authentication to authenticate
            users that connect to the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-kerberos.html">
            Using Kerberos Authentication with Amazon RDS for Oracle</a> in the <i>Amazon RDS
            User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.DomainIAMRoleName">
            <summary>
            <para>
            <para>Specify the name of the IAM role to be used when making API calls to the Directory
            Service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.EnableCloudwatchLogsExport">
            <summary>
            <para>
            <para>The list of logs that the restored DB instance is to export to CloudWatch Logs. The
            values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing
            Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.EnableIAMDatabaseAuthentication">
            <summary>
            <para>
            <para>A value that indicates whether to enable mapping of AWS Identity and Access Management
            (IAM) accounts to database accounts. By default, mapping is disabled. For information
            about the supported DB engines, see <a>CreateDBInstance</a>.</para><para>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html">
            IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User
            Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.Engine">
            <summary>
            <para>
            <para>The database engine to use for the new instance.</para><para>Default: The same as source</para><para>Constraint: Must be compatible with the engine of the source. For example, you can
            restore a MariaDB 10.1 DB instance from a MySQL 5.6 snapshot.</para><para>Valid Values:</para><ul><li><para><code>mariadb</code></para></li><li><para><code>mysql</code></para></li><li><para><code>oracle-ee</code></para></li><li><para><code>oracle-se2</code></para></li><li><para><code>oracle-se1</code></para></li><li><para><code>oracle-se</code></para></li><li><para><code>postgres</code></para></li><li><para><code>sqlserver-ee</code></para></li><li><para><code>sqlserver-se</code></para></li><li><para><code>sqlserver-ex</code></para></li><li><para><code>sqlserver-web</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.Iops">
            <summary>
            <para>
            <para>Specifies the amount of provisioned IOPS for the DB instance, expressed in I/O operations
            per second. If this parameter isn't specified, the IOPS value is taken from the backup.
            If this parameter is set to 0, the new instance is converted to a non-PIOPS instance.
            The conversion takes additional time, though your DB instance is available for connections
            before the conversion starts. </para><para>The provisioned IOPS value must follow the requirements for your database engine.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Amazon
            RDS Provisioned IOPS Storage to Improve Performance</a> in the <i>Amazon RDS User
            Guide.</i></para><para>Constraints: Must be an integer greater than 1000.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.LicenseModel">
            <summary>
            <para>
            <para>License model information for the restored DB instance.</para><para>Default: Same as source.</para><para> Valid values: <code>license-included</code> | <code>bring-your-own-license</code>
            | <code>general-public-license</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.MultiAZ">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance is a Multi-AZ deployment.</para><para>Constraint: You can't specify the <code>AvailabilityZone</code> parameter if the DB
            instance is a Multi-AZ deployment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.OptionGroupName">
            <summary>
            <para>
            <para>The name of the option group to be used for the restored DB instance.</para><para>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't
            be removed from an option group, and that option group can't be removed from a DB
            instance once it is associated with a DB instance</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.Port">
            <summary>
            <para>
            <para>The port number on which the database accepts connections.</para><para>Default: The same port as the original DB instance</para><para>Constraints: Value must be <code>1150-65535</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.ProcessorFeature">
            <summary>
            <para>
            <para>The number of CPU cores and the number of threads per core for the DB instance class
            of the DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.PubliclyAccessible">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance is publicly accessible. When the DB
            instance is publicly accessible, it is an Internet-facing instance with a publicly
            resolvable DNS name, which resolves to a public IP address. When the DB instance isn't
            publicly accessible, it is an internal instance with a DNS name that resolves to a
            private IP address. For more information, see <a>CreateDBInstance</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.StorageType">
            <summary>
            <para>
            <para>Specifies the storage type to be associated with the DB instance.</para><para> Valid values: <code>standard | gp2 | io1</code></para><para> If you specify <code>io1</code>, you must also include a value for the <code>Iops</code>
            parameter. </para><para> Default: <code>io1</code> if the <code>Iops</code> parameter is specified, otherwise
            <code>gp2</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.Tag">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.TdeCredentialArn">
            <summary>
            <para>
            <para>The ARN from the key store with which to associate the instance for TDE encryption.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.TdeCredentialPassword">
            <summary>
            <para>
            <para>The password for the given ARN from the key store in order to access the device.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.UseDefaultProcessorFeature">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance class of the DB instance uses its default
            processor features.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para> A list of EC2 VPC security groups to associate with this DB instance. </para><para> Default: The default EC2 VPC security group for the DB subnet group's VPC. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.RestoreDBInstanceFromDBSnapshotResponse).
            Specifying the name of a property of type Amazon.RDS.Model.RestoreDBInstanceFromDBSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromDBSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet">
            <summary>
            Amazon Relational Database Service (Amazon RDS) supports importing MySQL databases
            by using backup files. You can create a backup of your on-premises database, store
            it on Amazon Simple Storage Service (Amazon S3), and then restore the backup file
            onto a new Amazon RDS DB instance running MySQL. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/MySQL.Procedural.Importing.html">Importing
            Data into an Amazon RDS MySQL DB Instance</a> in the <i>Amazon RDS User Guide.</i>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.AllocatedStorage">
            <summary>
            <para>
            <para>The amount of storage (in gigabytes) to allocate initially for the DB instance. Follow
            the allocation rules specified in <code>CreateDBInstance</code>. </para><note><para>Be sure to allocate enough memory for your new DB instance so that the restore operation
            can succeed. You can also allocate additional memory for future growth. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.AutoMinorVersionUpgrade">
            <summary>
            <para>
            <para>A value that indicates whether minor engine upgrades are applied automatically to
            the DB instance during the maintenance window. By default, minor engine upgrades are
            not applied automatically. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>The Availability Zone that the DB instance is created in. For information about AWS
            Regions and Availability Zones, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html">Regions
            and Availability Zones</a> in the <i>Amazon RDS User Guide.</i></para><para>Default: A random, system-chosen Availability Zone in the endpoint's AWS Region. </para><para> Example: <code>us-east-1d</code></para><para>Constraint: The <code>AvailabilityZone</code> parameter can't be specified if the
            DB instance is a Multi-AZ deployment. The specified Availability Zone must be in the
            same AWS Region as the current endpoint. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.BackupRetentionPeriod">
            <summary>
            <para>
            <para>The number of days for which automated backups are retained. Setting this parameter
            to a positive number enables backups. For more information, see <code>CreateDBInstance</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.CopyTagsToSnapshot">
            <summary>
            <para>
            <para>A value that indicates whether to copy all tags from the DB instance to snapshots
            of the DB instance. By default, tags are not copied. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.DBInstanceClass">
            <summary>
            <para>
            <para>The compute and memory capacity of the DB instance, for example, <code>db.m4.large</code>.
            Not all DB instance classes are available in all AWS Regions, or for all database
            engines. For the full list of DB instance classes, and availability for your engine,
            see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB
            Instance Class</a> in the <i>Amazon RDS User Guide.</i></para><para>Importing from Amazon S3 isn't supported on the db.t2.micro DB instance class. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The DB instance identifier. This parameter is stored as a lowercase string. </para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>mydbinstance</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.DBName">
            <summary>
            <para>
            <para>The name of the database to create when the DB instance is created. Follow the naming
            rules specified in <code>CreateDBInstance</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.DBParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB parameter group to associate with this DB instance.</para><para>If you do not specify a value for <code>DBParameterGroupName</code>, then the default
            <code>DBParameterGroup</code> for the specified DB engine is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.DBSecurityGroup">
            <summary>
            <para>
            <para>A list of DB security groups to associate with this DB instance.</para><para>Default: The default DB security group for the database engine.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>A DB subnet group to associate with this DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.DeletionProtection">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html">
            Deleting a DB Instance</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.EnableCloudwatchLogsExport">
            <summary>
            <para>
            <para>The list of logs that the restored DB instance is to export to CloudWatch Logs. The
            values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing
            Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.EnableIAMDatabaseAuthentication">
            <summary>
            <para>
            <para>A value that indicates whether to enable mapping of AWS Identity and Access Management
            (IAM) accounts to database accounts. By default, mapping is disabled. For information
            about the supported DB engines, see <a>CreateDBInstance</a>.</para><para>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html">
            IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User
            Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.EnablePerformanceInsight">
            <summary>
            <para>
            <para>A value that indicates whether to enable Performance Insights for the DB instance.
            </para><para>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html">Using
            Amazon Performance Insights</a> in the <i>Amazon Relational Database Service User
            Guide</i>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.Engine">
            <summary>
            <para>
            <para>The name of the database engine to be used for this instance. </para><para>Valid Values: <code>mysql</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.EngineVersion">
            <summary>
            <para>
            <para>The version number of the database engine to use. Choose the latest minor version
            of your database engine. For information about engine versions, see <code>CreateDBInstance</code>,
            or call <code>DescribeDBEngineVersions</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.Iops">
            <summary>
            <para>
            <para>The amount of Provisioned IOPS (input/output operations per second) to allocate initially
            for the DB instance. For information about valid Iops values, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Amazon
            RDS Provisioned IOPS Storage to Improve Performance</a> in the <i>Amazon RDS User
            Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS KMS key identifier for an encrypted DB instance. </para><para>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key.
            If you are creating a DB instance with the same AWS account that owns the KMS encryption
            key used to encrypt the new DB instance, then you can use the KMS key alias instead
            of the ARN for the KM encryption key. </para><para>If the <code>StorageEncrypted</code> parameter is enabled, and you do not specify
            a value for the <code>KmsKeyId</code> parameter, then Amazon RDS will use your default
            encryption key. AWS KMS creates the default encryption key for your AWS account. Your
            AWS account has a different default encryption key for each AWS Region. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.LicenseModel">
            <summary>
            <para>
            <para>The license model for this DB instance. Use <code>general-public-license</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.MasterUsername">
            <summary>
            <para>
            <para>The name for the master user. </para><para>Constraints: </para><ul><li><para>Must be 1 to 16 letters or numbers.</para></li><li><para>First character must be a letter.</para></li><li><para>Can't be a reserved word for the chosen database engine.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.MasterUserPassword">
            <summary>
            <para>
            <para>The password for the master user. The password can include any printable ASCII character
            except "/", """, or "@". </para><para>Constraints: Must contain from 8 to 41 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.MonitoringInterval">
            <summary>
            <para>
            <para>The interval, in seconds, between points when Enhanced Monitoring metrics are collected
            for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0.
            </para><para>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code>
            to a value other than 0. </para><para>Valid Values: 0, 1, 5, 10, 15, 30, 60 </para><para>Default: <code>0</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.MonitoringRoleArn">
            <summary>
            <para>
            <para>The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon
            CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>.
            For information on creating a monitoring role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling">Setting
            Up and Enabling Enhanced Monitoring</a> in the <i>Amazon RDS User Guide.</i></para><para>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply
            a <code>MonitoringRoleArn</code> value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.MultiAZ">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance is a Multi-AZ deployment. If the DB
            instance is a Multi-AZ deployment, you can't set the <code>AvailabilityZone</code>
            parameter. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.OptionGroupName">
            <summary>
            <para>
            <para>The name of the option group to associate with this DB instance. If this argument
            is omitted, the default option group for the specified engine is used. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.PerformanceInsightsKMSKeyId">
            <summary>
            <para>
            <para>The AWS KMS key identifier for encryption of Performance Insights data. The KMS key
            ID is the Amazon Resource Name (ARN), the KMS key identifier, or the KMS key alias
            for the KMS encryption key. </para><para>If you do not specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon
            RDS uses your default encryption key. AWS KMS creates the default encryption key for
            your AWS account. Your AWS account has a different default encryption key for each
            AWS Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.PerformanceInsightsRetentionPeriod">
            <summary>
            <para>
            <para>The amount of time, in days, to retain Performance Insights data. Valid values are
            7 or 731 (2 years). </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.Port">
            <summary>
            <para>
            <para>The port number on which the database accepts connections. </para><para>Type: Integer </para><para>Valid Values: <code>1150</code>-<code>65535</code></para><para>Default: <code>3306</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.PreferredBackupWindow">
            <summary>
            <para>
            <para>The time range each day during which automated backups are created if automated backups
            are enabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow">The
            Backup Window</a> in the <i>Amazon RDS User Guide.</i></para><para>Constraints:</para><ul><li><para>Must be in the format <code>hh24:mi-hh24:mi</code>.</para></li><li><para>Must be in Universal Coordinated Time (UTC).</para></li><li><para>Must not conflict with the preferred maintenance window.</para></li><li><para>Must be at least 30 minutes.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>The time range each week during which system maintenance can occur, in Universal Coordinated
            Time (UTC). For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance">Amazon
            RDS Maintenance Window</a> in the <i>Amazon RDS User Guide.</i></para><para>Constraints:</para><ul><li><para>Must be in the format <code>ddd:hh24:mi-ddd:hh24:mi</code>.</para></li><li><para>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</para></li><li><para>Must be in Universal Coordinated Time (UTC).</para></li><li><para>Must not conflict with the preferred backup window.</para></li><li><para>Must be at least 30 minutes.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.ProcessorFeature">
            <summary>
            <para>
            <para>The number of CPU cores and the number of threads per core for the DB instance class
            of the DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.PubliclyAccessible">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance is publicly accessible. When the DB
            instance is publicly accessible, it is an Internet-facing instance with a publicly
            resolvable DNS name, which resolves to a public IP address. When the DB instance isn't
            publicly accessible, it is an internal instance with a DNS name that resolves to a
            private IP address. For more information, see <a>CreateDBInstance</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.S3BucketName">
            <summary>
            <para>
            <para>The name of your Amazon S3 bucket that contains your database backup file. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.S3IngestionRoleArn">
            <summary>
            <para>
            <para>An AWS Identity and Access Management (IAM) role to allow Amazon RDS to access your
            Amazon S3 bucket. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.S3Prefix">
            <summary>
            <para>
            <para>The prefix of your Amazon S3 bucket. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.SourceEngine">
            <summary>
            <para>
            <para>The name of the engine of your source database. </para><para>Valid Values: <code>mysql</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.SourceEngineVersion">
            <summary>
            <para>
            <para>The engine version of your source database. </para><para>Valid Values: <code>5.6</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.StorageEncrypted">
            <summary>
            <para>
            <para>A value that indicates whether the new DB instance is encrypted or not. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.StorageType">
            <summary>
            <para>
            <para>Specifies the storage type to be associated with the DB instance. </para><para>Valid values: <code>standard</code> | <code>gp2</code> | <code>io1</code></para><para>If you specify <code>io1</code>, you must also include a value for the <code>Iops</code>
            parameter. </para><para>Default: <code>io1</code> if the <code>Iops</code> parameter is specified; otherwise
            <code>gp2</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.Tag">
            <summary>
            <para>
            <para>A list of tags to associate with this DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging
            Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.UseDefaultProcessorFeature">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance class of the DB instance uses its default
            processor features.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of VPC security groups to associate with this DB instance. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.RestoreDBInstanceFromS3Response).
            Specifying the name of a property of type Amazon.RDS.Model.RestoreDBInstanceFromS3Response will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceFromS3Cmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet">
            <summary>
            Restores a DB instance to an arbitrary point in time. You can restore to any point
            in time before the time identified by the LatestRestorableTime property. You can restore
            to a point up to the number of days specified by the BackupRetentionPeriod property.
            
             
            <para>
            The target database is created with most of the original configuration, but in a system-selected
            Availability Zone, with the default security group, the default subnet group, and
            the default DB parameter group. By default, the new DB instance is created as a single-AZ
            deployment except when the instance is a SQL Server instance that has an option group
            that is associated with mirroring; in this case, the instance becomes a mirrored deployment
            and not a single-AZ deployment.
            </para><note><para>
            This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora, use
            <code>RestoreDBClusterToPointInTime</code>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.AutoMinorVersionUpgrade">
            <summary>
            <para>
            <para>A value that indicates whether minor version upgrades are applied automatically to
            the DB instance during the maintenance window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>The Availability Zone (AZ) where the DB instance will be created.</para><para>Default: A random, system-chosen Availability Zone.</para><para>Constraint: You can't specify the <code>AvailabilityZone</code> parameter if the DB
            instance is a Multi-AZ deployment.</para><para>Example: <code>us-east-1a</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.CopyTagsToSnapshot">
            <summary>
            <para>
            <para>A value that indicates whether to copy all tags from the restored DB instance to snapshots
            of the DB instance. By default, tags are not copied.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.DBInstanceClass">
            <summary>
            <para>
            <para>The compute and memory capacity of the Amazon RDS DB instance, for example, <code>db.m4.large</code>.
            Not all DB instance classes are available in all AWS Regions, or for all database
            engines. For the full list of DB instance classes, and availability for your engine,
            see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB
            Instance Class</a> in the <i>Amazon RDS User Guide.</i></para><para>Default: The same DBInstanceClass as the original DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.DBName">
            <summary>
            <para>
            <para>The database name for the restored DB instance.</para><note><para>This parameter isn't used for the MySQL or MariaDB engines.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.DBParameterGroupName">
            <summary>
            <para>
            <para>The name of the DB parameter group to associate with this DB instance.</para><para>If you do not specify a value for <code>DBParameterGroupName</code>, then the default
            <code>DBParameterGroup</code> for the specified DB engine is used.</para><para>Constraints:</para><ul><li><para>If supplied, must match the name of an existing DBParameterGroup.</para></li><li><para>Must be 1 to 255 letters, numbers, or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The DB subnet group name to use for the new instance.</para><para>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.DeletionProtection">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html">
            Deleting a DB Instance</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.Domain">
            <summary>
            <para>
            <para>Specify the Active Directory directory ID to restore the DB instance in. The domain
            must be created prior to this operation. Currently, only Microsoft SQL Server and
            Oracle DB instances can be created in an Active Directory Domain. </para><para>For Microsoft SQL Server DB instances, Amazon RDS can use Windows Authentication to
            authenticate users that connect to the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_SQLServerWinAuth.html">
            Using Windows Authentication with an Amazon RDS DB Instance Running Microsoft SQL
            Server</a> in the <i>Amazon RDS User Guide</i>.</para><para>For Oracle DB instances, Amazon RDS can use Kerberos Authentication to authenticate
            users that connect to the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-kerberos.html">
            Using Kerberos Authentication with Amazon RDS for Oracle</a> in the <i>Amazon RDS
            User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.DomainIAMRoleName">
            <summary>
            <para>
            <para>Specify the name of the IAM role to be used when making API calls to the Directory
            Service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.EnableCloudwatchLogsExport">
            <summary>
            <para>
            <para>The list of logs that the restored DB instance is to export to CloudWatch Logs. The
            values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing
            Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.EnableIAMDatabaseAuthentication">
            <summary>
            <para>
            <para>A value that indicates whether to enable mapping of AWS Identity and Access Management
            (IAM) accounts to database accounts. By default, mapping is disabled. For information
            about the supported DB engines, see <a>CreateDBInstance</a>.</para><para>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html">
            IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User
            Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.Engine">
            <summary>
            <para>
            <para>The database engine to use for the new instance.</para><para>Default: The same as source</para><para>Constraint: Must be compatible with the engine of the source</para><para>Valid Values:</para><ul><li><para><code>mariadb</code></para></li><li><para><code>mysql</code></para></li><li><para><code>oracle-ee</code></para></li><li><para><code>oracle-se2</code></para></li><li><para><code>oracle-se1</code></para></li><li><para><code>oracle-se</code></para></li><li><para><code>postgres</code></para></li><li><para><code>sqlserver-ee</code></para></li><li><para><code>sqlserver-se</code></para></li><li><para><code>sqlserver-ex</code></para></li><li><para><code>sqlserver-web</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.Iops">
            <summary>
            <para>
            <para>The amount of Provisioned IOPS (input/output operations per second) to be initially
            allocated for the DB instance.</para><para>Constraints: Must be an integer greater than 1000.</para><para><b>SQL Server</b></para><para>Setting the IOPS value for the SQL Server database engine isn't supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.LicenseModel">
            <summary>
            <para>
            <para>License model information for the restored DB instance.</para><para>Default: Same as source.</para><para> Valid values: <code>license-included</code> | <code>bring-your-own-license</code>
            | <code>general-public-license</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.MultiAZ">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance is a Multi-AZ deployment.</para><para>Constraint: You can't specify the <code>AvailabilityZone</code> parameter if the DB
            instance is a Multi-AZ deployment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.OptionGroupName">
            <summary>
            <para>
            <para>The name of the option group to be used for the restored DB instance.</para><para>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't
            be removed from an option group, and that option group can't be removed from a DB
            instance once it is associated with a DB instance</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.Port">
            <summary>
            <para>
            <para>The port number on which the database accepts connections.</para><para>Constraints: Value must be <code>1150-65535</code></para><para>Default: The same port as the original DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.ProcessorFeature">
            <summary>
            <para>
            <para>The number of CPU cores and the number of threads per core for the DB instance class
            of the DB instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.PubliclyAccessible">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance is publicly accessible. When the DB
            instance is publicly accessible, it is an Internet-facing instance with a publicly
            resolvable DNS name, which resolves to a public IP address. When the DB instance isn't
            publicly accessible, it is an internal instance with a DNS name that resolves to a
            private IP address. For more information, see <a>CreateDBInstance</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.UtcRestoreTime">
            <summary>
            <para>
            <para>The date and time to restore from.</para><para>Valid Values: Value must be a time in Universal Coordinated Time (UTC) format</para><para>Constraints:</para><ul><li><para>Must be before the latest restorable time for the DB instance</para></li><li><para>Can't be specified if the <code>UseLatestRestorableTime</code> parameter is enabled</para></li></ul><para>Example: <code>2009-09-07T23:45:00Z</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.SourceDBInstanceIdentifier">
            <summary>
            <para>
            <para>The identifier of the source DB instance from which to restore.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing DB instance.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.SourceDbiResourceId">
            <summary>
            <para>
            <para>The resource ID of the source DB instance from which to restore.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.StorageType">
            <summary>
            <para>
            <para>Specifies the storage type to be associated with the DB instance.</para><para> Valid values: <code>standard | gp2 | io1</code></para><para> If you specify <code>io1</code>, you must also include a value for the <code>Iops</code>
            parameter. </para><para> Default: <code>io1</code> if the <code>Iops</code> parameter is specified, otherwise
            <code>gp2</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.Tag">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.TargetDBInstanceIdentifier">
            <summary>
            <para>
            <para>The name of the new DB instance to be created.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens</para></li><li><para>First character must be a letter</para></li><li><para>Can't end with a hyphen or contain two consecutive hyphens</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.TdeCredentialArn">
            <summary>
            <para>
            <para>The ARN from the key store with which to associate the instance for TDE encryption.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.TdeCredentialPassword">
            <summary>
            <para>
            <para>The password for the given ARN from the key store in order to access the device.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.UseDefaultProcessorFeature">
            <summary>
            <para>
            <para>A value that indicates whether the DB instance class of the DB instance uses its default
            processor features.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.UseLatestRestorableTime">
            <summary>
            <para>
            <para> A value that indicates whether the DB instance is restored from the latest backup
            time. By default, the DB instance isn't restored from the latest backup time. </para><para>Constraints: Can't be specified if the <code>RestoreTime</code> parameter is provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para> A list of EC2 VPC security groups to associate with this DB instance. </para><para> Default: The default EC2 VPC security group for the DB subnet group's VPC. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.RestoreTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use RestoreTimeUtc instead. Setting either RestoreTime
            or RestoreTimeUtc results in both RestoreTime and RestoreTimeUtc being assigned, the
            latest assignment to either one of the two property is reflected in the value of both.
            RestoreTime is provided for backwards compatibility only and assigning a non-Utc DateTime
            to it results in the wrong timestamp being passed to the service.</para><para>The date and time to restore from.</para><para>Valid Values: Value must be a time in Universal Coordinated Time (UTC) format</para><para>Constraints:</para><ul><li><para>Must be before the latest restorable time for the DB instance</para></li><li><para>Can't be specified if the <code>UseLatestRestorableTime</code> parameter is enabled</para></li></ul><para>Example: <code>2009-09-07T23:45:00Z</code></para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.RestoreDBInstanceToPointInTimeResponse).
            Specifying the name of a property of type Amazon.RDS.Model.RestoreDBInstanceToPointInTimeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceDBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceDBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RestoreRDSDBInstanceToPointInTimeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.RevokeRDSDBSecurityGroupIngressCmdlet">
            <summary>
            Revokes ingress from a DBSecurityGroup for previously authorized IP ranges or EC2
            or VPC Security Groups. Required parameters for this API are one of CIDRIP, EC2SecurityGroupId
            for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RevokeRDSDBSecurityGroupIngressCmdlet.CIDRIP">
            <summary>
            <para>
            <para> The IP range to revoke access from. Must be a valid CIDR range. If <code>CIDRIP</code>
            is specified, <code>EC2SecurityGroupName</code>, <code>EC2SecurityGroupId</code> and
            <code>EC2SecurityGroupOwnerId</code> can't be provided. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RevokeRDSDBSecurityGroupIngressCmdlet.DBSecurityGroupName">
            <summary>
            <para>
            <para>The name of the DB security group to revoke ingress from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RevokeRDSDBSecurityGroupIngressCmdlet.EC2SecurityGroupId">
            <summary>
            <para>
            <para> The id of the EC2 security group to revoke access from. For VPC DB security groups,
            <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId
            and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must
            be provided. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RevokeRDSDBSecurityGroupIngressCmdlet.EC2SecurityGroupName">
            <summary>
            <para>
            <para> The name of the EC2 security group to revoke access from. For VPC DB security groups,
            <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId
            and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must
            be provided. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RevokeRDSDBSecurityGroupIngressCmdlet.EC2SecurityGroupOwnerId">
            <summary>
            <para>
            <para> The AWS account number of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code>
            parameter. The AWS access key ID isn't an acceptable value. For VPC DB security groups,
            <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId
            and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must
            be provided. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RevokeRDSDBSecurityGroupIngressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBSecurityGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.RevokeDBSecurityGroupIngressResponse).
            Specifying the name of a property of type Amazon.RDS.Model.RevokeDBSecurityGroupIngressResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RevokeRDSDBSecurityGroupIngressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSecurityGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSecurityGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.RevokeRDSDBSecurityGroupIngressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.StartRDSActivityStreamCmdlet">
            <summary>
            Starts a database activity stream to monitor activity on the database. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/DBActivityStreams.html">Database
            Activity Streams</a> in the <i>Amazon Aurora User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSActivityStreamCmdlet.ApplyImmediately">
            <summary>
            <para>
            <para>Specifies whether or not the database activity stream is to start as soon as possible,
            regardless of the maintenance window for the database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSActivityStreamCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS KMS key identifier for encrypting messages in the database activity stream.
            The key identifier can be either a key ID, a key ARN, or a key alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSActivityStreamCmdlet.Mode">
            <summary>
            <para>
            <para>Specifies the mode of the database activity stream. Database events such as a change
            or access generate an activity stream event. The database session can handle these
            events either synchronously or asynchronously. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSActivityStreamCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the DB cluster, for example <code>arn:aws:rds:us-east-1:12345667890:cluster:das-cluster</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSActivityStreamCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.StartActivityStreamResponse).
            Specifying the name of a property of type Amazon.RDS.Model.StartActivityStreamResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSActivityStreamCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSActivityStreamCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.StartRDSDBClusterCmdlet">
            <summary>
            Starts an Amazon Aurora DB cluster that was stopped using the AWS console, the stop-db-cluster
            AWS CLI command, or the StopDBCluster action.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-cluster-stop-start.html">
            Stopping and Starting an Aurora Cluster</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The DB cluster identifier of the Amazon Aurora DB cluster to be started. This parameter
            is stored as a lowercase string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.StartDBClusterResponse).
            Specifying the name of a property of type Amazon.RDS.Model.StartDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.StartRDSDBClusterFailoverCmdlet">
            <summary>
            Forces a failover for a DB cluster.
            
             
            <para>
            A failover for a DB cluster promotes one of the Aurora Replicas (read-only instances)
            in the DB cluster to be the primary instance (the cluster writer).
            </para><para>
            Amazon Aurora will automatically fail over to an Aurora Replica, if one exists, when
            the primary instance fails. You can force a failover when you want to simulate a failure
            of a primary instance for testing. Because each instance in a DB cluster has its own
            endpoint address, you will need to clean up and re-establish any existing connections
            that use those endpoint addresses when the failover is complete.
            </para><para>
            For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">
            What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSDBClusterFailoverCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>A DB cluster identifier to force a failover for. This parameter isn't case-sensitive.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing DBCluster.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSDBClusterFailoverCmdlet.TargetDBInstanceIdentifier">
            <summary>
            <para>
            <para>The name of the instance to promote to the primary instance.</para><para>You must specify the instance identifier for an Aurora Replica in the DB cluster.
            For example, <code>mydbcluster-replica1</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSDBClusterFailoverCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.FailoverDBClusterResponse).
            Specifying the name of a property of type Amazon.RDS.Model.FailoverDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSDBClusterFailoverCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSDBClusterFailoverCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.StartRDSDBInstanceCmdlet">
            <summary>
            Starts an Amazon RDS DB instance that was stopped using the AWS console, the stop-db-instance
            AWS CLI command, or the StopDBInstance action. 
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_StartInstance.html">
            Starting an Amazon RDS DB instance That Was Previously Stopped</a> in the <i>Amazon
            RDS User Guide.</i></para><note><para>
             This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora DB clusters,
            use <code>StartDBCluster</code> instead. 
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSDBInstanceCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para> The user-supplied instance identifier. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSDBInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.StartDBInstanceResponse).
            Specifying the name of a property of type Amazon.RDS.Model.StartDBInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSDBInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSDBInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.StartRDSExportTaskCmdlet">
            <summary>
            Starts an export of a snapshot to Amazon S3. The provided IAM role must have access
            to the S3 bucket.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSExportTaskCmdlet.ExportOnly">
            <summary>
            <para>
            <para>The data to be exported from the snapshot. If this parameter is not provided, all
            the snapshot data is exported. Valid values are the following:</para><ul><li><para><code>database</code> - Export all the data from a specified database.</para></li><li><para><code>database.table</code><i>table-name</i> - Export a table of the snapshot. This
            format is valid only for RDS for MySQL, RDS for MariaDB, and Aurora MySQL.</para></li><li><para><code>database.schema</code><i>schema-name</i> - Export a database schema of the
            snapshot. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</para></li><li><para><code>database.schema.table</code><i>table-name</i> - Export a table of the database
            schema. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSExportTaskCmdlet.ExportTaskIdentifier">
            <summary>
            <para>
            <para>A unique identifier for the snapshot export task. This ID isn't an identifier for
            the Amazon S3 bucket where the snapshot is to be exported to. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSExportTaskCmdlet.IamRoleArn">
            <summary>
            <para>
            <para>The name of the IAM role to use for writing to the Amazon S3 bucket when exporting
            a snapshot. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSExportTaskCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The ID of the AWS KMS key to use to encrypt the snapshot exported to Amazon S3. The
            KMS key ID is the Amazon Resource Name (ARN), the KMS key identifier, or the KMS key
            alias for the KMS encryption key. The IAM role used for the snapshot export must have
            encryption and decryption permissions to use this KMS key. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSExportTaskCmdlet.S3BucketName">
            <summary>
            <para>
            <para>The name of the Amazon S3 bucket to export the snapshot to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSExportTaskCmdlet.S3Prefix">
            <summary>
            <para>
            <para>The Amazon S3 bucket prefix to use as the file name and path of the exported snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSExportTaskCmdlet.SourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the snapshot to export to Amazon S3.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSExportTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.StartExportTaskResponse).
            Specifying the name of a property of type Amazon.RDS.Model.StartExportTaskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSExportTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExportTaskIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ExportTaskIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StartRDSExportTaskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.StopRDSActivityStreamCmdlet">
            <summary>
            Stops a database activity stream that was started using the AWS console, the <code>start-activity-stream</code>
            AWS CLI command, or the <code>StartActivityStream</code> action.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/DBActivityStreams.html">Database
            Activity Streams</a> in the <i>Amazon Aurora User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StopRDSActivityStreamCmdlet.ApplyImmediately">
            <summary>
            <para>
            <para>Specifies whether or not the database activity stream is to stop as soon as possible,
            regardless of the maintenance window for the database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StopRDSActivityStreamCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the DB cluster for the database activity stream.
            For example, <code>arn:aws:rds:us-east-1:12345667890:cluster:das-cluster</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StopRDSActivityStreamCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.StopActivityStreamResponse).
            Specifying the name of a property of type Amazon.RDS.Model.StopActivityStreamResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StopRDSActivityStreamCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StopRDSActivityStreamCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.StopRDSDBClusterCmdlet">
            <summary>
            Stops an Amazon Aurora DB cluster. When you stop a DB cluster, Aurora retains the
            DB cluster's metadata, including its endpoints and DB parameter groups. Aurora also
            retains the transaction logs so you can do a point-in-time restore if necessary. 
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-cluster-stop-start.html">
            Stopping and Starting an Aurora Cluster</a> in the <i>Amazon Aurora User Guide.</i></para><note><para>
            This action only applies to Aurora DB clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StopRDSDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The DB cluster identifier of the Amazon Aurora DB cluster to be stopped. This parameter
            is stored as a lowercase string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StopRDSDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.StopDBClusterResponse).
            Specifying the name of a property of type Amazon.RDS.Model.StopDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StopRDSDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StopRDSDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.StopRDSDBInstanceCmdlet">
            <summary>
            Stops an Amazon RDS DB instance. When you stop a DB instance, Amazon RDS retains
            the DB instance's metadata, including its endpoint, DB parameter group, and option
            group membership. Amazon RDS also retains the transaction logs so you can do a point-in-time
            restore if necessary. 
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_StopInstance.html">
            Stopping an Amazon RDS DB Instance Temporarily</a> in the <i>Amazon RDS User Guide.</i></para><note><para>
             This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora clusters,
            use <code>StopDBCluster</code> instead. 
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StopRDSDBInstanceCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para> The user-supplied instance identifier. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StopRDSDBInstanceCmdlet.DBSnapshotIdentifier">
            <summary>
            <para>
            <para> The user-supplied instance identifier of the DB Snapshot created immediately before
            the DB instance is stopped. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StopRDSDBInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.StopDBInstanceResponse).
            Specifying the name of a property of type Amazon.RDS.Model.StopDBInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StopRDSDBInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StopRDSDBInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.StopRDSExportTaskCmdlet">
            <summary>
            Cancels an export task in progress that is exporting a snapshot to Amazon S3. Any
            data that has already been written to the S3 bucket isn't removed.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StopRDSExportTaskCmdlet.ExportTaskIdentifier">
            <summary>
            <para>
            <para>The identifier of the snapshot export task to cancel.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StopRDSExportTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.CancelExportTaskResponse).
            Specifying the name of a property of type Amazon.RDS.Model.CancelExportTaskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StopRDSExportTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExportTaskIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ExportTaskIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.StopRDSExportTaskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.SubmitRDSPendingMaintenanceActionCmdlet">
            <summary>
            Applies a pending maintenance action to a resource (for example, to a DB instance).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.SubmitRDSPendingMaintenanceActionCmdlet.ApplyAction">
            <summary>
            <para>
            <para>The pending maintenance action to apply to this resource.</para><para>Valid values: <code>system-update</code>, <code>db-upgrade</code>, <code>hardware-maintenance</code>,
            <code>ca-certificate-rotation</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.SubmitRDSPendingMaintenanceActionCmdlet.OptInType">
            <summary>
            <para>
            <para>A value that specifies the type of opt-in request, or undoes an opt-in request. An
            opt-in request of type <code>immediate</code> can't be undone.</para><para>Valid values:</para><ul><li><para><code>immediate</code> - Apply the maintenance action immediately.</para></li><li><para><code>next-maintenance</code> - Apply the maintenance action during the next maintenance
            window for the resource.</para></li><li><para><code>undo-opt-in</code> - Cancel any existing <code>next-maintenance</code> opt-in
            requests.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.SubmitRDSPendingMaintenanceActionCmdlet.ResourceIdentifier">
            <summary>
            <para>
            <para>The RDS Amazon Resource Name (ARN) of the resource that the pending maintenance action
            applies to. For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing">
            Constructing an RDS Amazon Resource Name (ARN)</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.SubmitRDSPendingMaintenanceActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourcePendingMaintenanceActions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.ApplyPendingMaintenanceActionResponse).
            Specifying the name of a property of type Amazon.RDS.Model.ApplyPendingMaintenanceActionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.SubmitRDSPendingMaintenanceActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.SubmitRDSPendingMaintenanceActionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RDS.UnregisterRDSDBProxyTargetCmdlet">
            <summary>
            <note><para>
            This is prerelease documentation for the RDS Database Proxy feature in preview release.
            It is subject to change.
            </para></note><para>
            Remove the association between one or more <code>DBProxyTarget</code> data structures
            and a <code>DBProxyTargetGroup</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.UnregisterRDSDBProxyTargetCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>One or more DB cluster identifiers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.UnregisterRDSDBProxyTargetCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>One or more DB instance identifiers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.UnregisterRDSDBProxyTargetCmdlet.DBProxyName">
            <summary>
            <para>
            <para>The identifier of the <code>DBProxy</code> that is associated with the <code>DBProxyTargetGroup</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.UnregisterRDSDBProxyTargetCmdlet.TargetGroupName">
            <summary>
            <para>
            <para>The identifier of the <code>DBProxyTargetGroup</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.UnregisterRDSDBProxyTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.RDS.Model.DeregisterDBProxyTargetsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.UnregisterRDSDBProxyTargetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBProxyName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBProxyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RDS.UnregisterRDSDBProxyTargetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
