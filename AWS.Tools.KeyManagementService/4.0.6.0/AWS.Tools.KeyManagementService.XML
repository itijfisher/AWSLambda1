<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.KeyManagementService</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.AddKMSResourceTagCmdlet">
            <summary>
            Adds or edits tags for a customer master key (CMK). You cannot perform this operation
            on a CMK in a different AWS account.
            
             
            <para>
            Each tag consists of a tag key and a tag value. Tag keys and tag values are both required,
            but tag values can be empty (null) strings.
            </para><para>
            You can only use a tag key once for each CMK. If you use the tag key again, AWS KMS
            replaces the current tag value with the specified value.
            </para><para>
            For information about the rules that apply to tag keys and tag values, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html">User-Defined
            Tag Restrictions</a> in the <i>AWS Billing and Cost Management User Guide</i>.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.AddKMSResourceTagCmdlet.KeyId">
            <summary>
            <para>
            <para>A unique identifier for the CMK you are tagging.</para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.AddKMSResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>One or more tags. Each tag consists of a tag key and a tag value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.AddKMSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.AddKMSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.AddKMSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.ConnectKMSCustomKeyStoreCmdlet">
            <summary>
            Connects or reconnects a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a> to its associated AWS CloudHSM cluster.
            
             
            <para>
            The custom key store must be connected before you can create customer master keys
            (CMKs) in the key store or use the CMKs it contains. You can disconnect and reconnect
            a custom key store at any time.
            </para><para>
            To connect a custom key store, its associated AWS CloudHSM cluster must have at least
            one active HSM. To get the number of active HSMs in a cluster, use the <a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html">DescribeClusters</a>
            operation. To add HSMs to the cluster, use the <a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_CreateHsm.html">CreateHsm</a>
            operation. Also, the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"><code>kmsuser</code> crypto user</a> (CU) must not be logged into the cluster. This
            prevents AWS KMS from using this account to log in.
            </para><para>
            The connection process can take an extended amount of time to complete; up to 20 minutes.
            This operation starts the connection process, but it does not wait for it to complete.
            When it succeeds, this operation quickly returns an HTTP 200 response and a JSON object
            with no properties. However, this response does not indicate that the custom key store
            is connected. To get the connection state of the custom key store, use the <a>DescribeCustomKeyStores</a>
            operation.
            </para><para>
            During the connection process, AWS KMS finds the AWS CloudHSM cluster that is associated
            with the custom key store, creates the connection infrastructure, connects to the
            cluster, logs into the AWS CloudHSM client as the <code>kmsuser</code> CU, and rotates
            its password.
            </para><para>
            The <code>ConnectCustomKeyStore</code> operation might fail for various reasons. To
            find the reason, use the <a>DescribeCustomKeyStores</a> operation and see the <code>ConnectionErrorCode</code>
            in the response. For help interpreting the <code>ConnectionErrorCode</code>, see <a>CustomKeyStoresListEntry</a>.
            </para><para>
            To fix the failure, use the <a>DisconnectCustomKeyStore</a> operation to disconnect
            the custom key store, correct the error, use the <a>UpdateCustomKeyStore</a> operation
            if necessary, and then use <code>ConnectCustomKeyStore</code> again.
            </para><para>
            If you are having trouble connecting or disconnecting a custom key store, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html">Troubleshooting
            a Custom Key Store</a> in the <i>AWS Key Management Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ConnectKMSCustomKeyStoreCmdlet.CustomKeyStoreId">
            <summary>
            <para>
            <para>Enter the key store ID of the custom key store that you want to connect. To find the
            ID of a custom key store, use the <a>DescribeCustomKeyStores</a> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ConnectKMSCustomKeyStoreCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ConnectCustomKeyStoreResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ConnectKMSCustomKeyStoreCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CustomKeyStoreId parameter.
            The -PassThru parameter is deprecated, use -Select '^CustomKeyStoreId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ConnectKMSCustomKeyStoreCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.DisableKMSGrantCmdlet">
            <summary>
            Retires a grant. To clean up, you can retire a grant when you're done using it. You
            should revoke a grant when you intend to actively deny operations that depend on it.
            The following are permitted to call this API:
            
             <ul><li><para>
            The AWS account (root user) under which the grant was created
            </para></li><li><para>
            The <code>RetiringPrincipal</code>, if present in the grant
            </para></li><li><para>
            The <code>GranteePrincipal</code>, if <code>RetireGrant</code> is an operation specified
            in the grant
            </para></li></ul><para>
            You must identify the grant to retire by its grant token or by a combination of the
            grant ID and the Amazon Resource Name (ARN) of the customer master key (CMK). A grant
            token is a unique variable-length base64-encoded string. A grant ID is a 64 character
            unique identifier of a grant. The <a>CreateGrant</a> operation returns both.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSGrantCmdlet.GrantId">
            <summary>
            <para>
            <para>Unique identifier of the grant to retire. The grant ID is returned in the response
            to a <code>CreateGrant</code> operation.</para><ul><li><para>Grant ID Example - 0123456789012345678901234567890123456789012345678901234567890123</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSGrantCmdlet.GrantToken">
            <summary>
            <para>
            <para>Token that identifies the grant to be retired.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSGrantCmdlet.KeyId">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the CMK associated with the grant. </para><para>For example: <code>arn:aws:kms:us-east-2:444455556666:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSGrantCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.RetireGrantResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSGrantCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.DisableKMSKeyCmdlet">
            <summary>
            Sets the state of a customer master key (CMK) to disabled, thereby preventing its
            use for <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operations</a>. You cannot perform this operation on a CMK in a different AWS account.
            
             
            <para>
            For more information about how key state affects the use of a CMK, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects the Use of a Customer Master Key</a> in the <i><i>AWS Key Management
            Service Developer Guide</i></i>.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSKeyCmdlet.KeyId">
            <summary>
            <para>
            <para>A unique identifier for the customer master key (CMK).</para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.DisableKeyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.DisableKMSKeyRotationCmdlet">
            <summary>
            Disables <a href="https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html">automatic
            rotation of the key material</a> for the specified symmetric customer master key (CMK).
            
             
            <para>
             You cannot enable automatic rotation of asymmetric CMKs, CMKs with imported key material,
            or CMKs in a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a>. You cannot perform this operation on a CMK in a different AWS account.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSKeyRotationCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies a symmetric customer master key (CMK). You cannot enable automatic rotation
            of <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html#asymmetric-cmks">asymmetric
            CMKs</a>, CMKs with <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">imported
            key material</a>, or CMKs in a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a>.</para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSKeyRotationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.DisableKeyRotationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSKeyRotationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSKeyRotationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.DisconnectKMSCustomKeyStoreCmdlet">
            <summary>
            Disconnects the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a> from its associated AWS CloudHSM cluster. While a custom key store is
            disconnected, you can manage the custom key store and its customer master keys (CMKs),
            but you cannot create or use CMKs in the custom key store. You can reconnect the custom
            key store at any time.
            
             <note><para>
            While a custom key store is disconnected, all attempts to create customer master keys
            (CMKs) in the custom key store or to use existing CMKs in <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operations</a> will fail. This action can prevent users from storing and accessing
            sensitive data.
            </para></note><para>
            To find the connection state of a custom key store, use the <a>DescribeCustomKeyStores</a>
            operation. To reconnect a custom key store, use the <a>ConnectCustomKeyStore</a> operation.
            </para><para>
            If the operation succeeds, it returns a JSON object with no properties.
            </para><para>
            This operation is part of the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">Custom
            Key Store feature</a> feature in AWS KMS, which combines the convenience and extensive
            integration of AWS KMS with the isolation and control of a single-tenant key store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisconnectKMSCustomKeyStoreCmdlet.CustomKeyStoreId">
            <summary>
            <para>
            <para>Enter the ID of the custom key store you want to disconnect. To find the ID of a custom
            key store, use the <a>DescribeCustomKeyStores</a> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisconnectKMSCustomKeyStoreCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.DisconnectCustomKeyStoreResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisconnectKMSCustomKeyStoreCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CustomKeyStoreId parameter.
            The -PassThru parameter is deprecated, use -Select '^CustomKeyStoreId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisconnectKMSCustomKeyStoreCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.EnableKMSKeyCmdlet">
            <summary>
            Sets the key state of a customer master key (CMK) to enabled. This allows you to use
            the CMK for <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operations</a>. You cannot perform this operation on a CMK in a different AWS account.
            
             
            <para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.EnableKMSKeyCmdlet.KeyId">
            <summary>
            <para>
            <para>A unique identifier for the customer master key (CMK).</para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.EnableKMSKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.EnableKeyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.EnableKMSKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.EnableKMSKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.EnableKMSKeyRotationCmdlet">
            <summary>
            Enables <a href="https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html">automatic
            rotation of the key material</a> for the specified symmetric customer master key (CMK).
            You cannot perform this operation on a CMK in a different AWS account.
            
             
            <para>
            You cannot enable automatic rotation of asymmetric CMKs, CMKs with imported key material,
            or CMKs in a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a>.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.EnableKMSKeyRotationCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies a symmetric customer master key (CMK). You cannot enable automatic rotation
            of asymmetric CMKs, CMKs with imported key material, or CMKs in a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a>.</para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.EnableKMSKeyRotationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.EnableKeyRotationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.EnableKMSKeyRotationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.EnableKMSKeyRotationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSAliasListCmdlet">
            <summary>
            Gets a list of aliases in the caller's AWS account and region. You cannot list aliases
            in other accounts. For more information about aliases, see <a>CreateAlias</a>.
            
             
            <para>
            By default, the ListAliases command returns all aliases in the account and region.
            To get only the aliases that point to a particular customer master key (CMK), use
            the <code>KeyId</code> parameter.
            </para><para>
            The <code>ListAliases</code> response can include aliases that you created and associated
            with your customer managed CMKs, and aliases that AWS created and associated with
            AWS managed CMKs in your account. You can recognize AWS aliases because their names
            have the format <code>aws/&lt;service-name&gt;</code>, such as <code>aws/dynamodb</code>.
            </para><para>
            The response might also include aliases that have no <code>TargetKeyId</code> field.
            These are predefined aliases that AWS has created but has not yet associated with
            a CMK. Aliases that AWS creates in your account, including predefined aliases, do
            not count against your <a href="https://docs.aws.amazon.com/kms/latest/developerguide/limits.html#aliases-limit">AWS
            KMS aliases quota</a>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSAliasListCmdlet.KeyId">
            <summary>
            <para>
            <para>Lists only aliases that refer to the specified CMK. The value of this parameter can
            be the ID or Amazon Resource Name (ARN) of a CMK in the caller's account and region.
            You cannot use an alias name or alias ARN in this value.</para><para>This parameter is optional. If you omit it, <code>ListAliases</code> returns all aliases
            in the account and region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSAliasListCmdlet.Limit">
            <summary>
            <para>
            <para>Use this parameter to specify the maximum number of items to return. When this value
            is present, AWS KMS does not return more than the specified number of items, but it
            might return fewer.</para><para>This value is optional. If you include a value, it must be between 1 and 100, inclusive.
            If you do not include a value, it defaults to 50.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSAliasListCmdlet.Marker">
            <summary>
            <para>
            <para>Use this parameter in a subsequent request after you receive a response with truncated
            results. Set it to the value of <code>NextMarker</code> from the truncated response
            you just received.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSAliasListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Aliases'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ListAliasesResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.ListAliasesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSAliasListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSAliasListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSCustomKeyStoreCmdlet">
            <summary>
            Gets information about <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key stores</a> in the account and region.
            
             
            <para>
            This operation is part of the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">Custom
            Key Store feature</a> feature in AWS KMS, which combines the convenience and extensive
            integration of AWS KMS with the isolation and control of a single-tenant key store.
            </para><para>
            By default, this operation returns information about all custom key stores in the
            account and region. To get only information about a particular custom key store, use
            either the <code>CustomKeyStoreName</code> or <code>CustomKeyStoreId</code> parameter
            (but not both).
            </para><para>
            To determine whether the custom key store is connected to its AWS CloudHSM cluster,
            use the <code>ConnectionState</code> element in the response. If an attempt to connect
            the custom key store failed, the <code>ConnectionState</code> value is <code>FAILED</code>
            and the <code>ConnectionErrorCode</code> element in the response indicates the cause
            of the failure. For help interpreting the <code>ConnectionErrorCode</code>, see <a>CustomKeyStoresListEntry</a>.
            </para><para>
            Custom key stores have a <code>DISCONNECTED</code> connection state if the key store
            has never been connected or you use the <a>DisconnectCustomKeyStore</a> operation
            to disconnect it. If your custom key store state is <code>CONNECTED</code> but you
            are having trouble using it, make sure that its associated AWS CloudHSM cluster is
            active and contains the minimum number of HSMs required for the operation, if any.
            </para><para>
             For help repairing your custom key store, see the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html">Troubleshooting
            Custom Key Stores</a> topic in the <i>AWS Key Management Service Developer Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSCustomKeyStoreCmdlet.CustomKeyStoreId">
            <summary>
            <para>
            <para>Gets only information about the specified custom key store. Enter the key store ID.</para><para>By default, this operation gets information about all custom key stores in the account
            and region. To limit the output to a particular custom key store, you can use either
            the <code>CustomKeyStoreId</code> or <code>CustomKeyStoreName</code> parameter, but
            not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSCustomKeyStoreCmdlet.CustomKeyStoreName">
            <summary>
            <para>
            <para>Gets only information about the specified custom key store. Enter the friendly name
            of the custom key store.</para><para>By default, this operation gets information about all custom key stores in the account
            and region. To limit the output to a particular custom key store, you can use either
            the <code>CustomKeyStoreId</code> or <code>CustomKeyStoreName</code> parameter, but
            not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSCustomKeyStoreCmdlet.Limit">
            <summary>
            <para>
            <para>Use this parameter to specify the maximum number of items to return. When this value
            is present, AWS KMS does not return more than the specified number of items, but it
            might return fewer.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSCustomKeyStoreCmdlet.Marker">
            <summary>
            <para>
            <para>Use this parameter in a subsequent request after you receive a response with truncated
            results. Set it to the value of <code>NextMarker</code> from the truncated response
            you just received.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSCustomKeyStoreCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CustomKeyStores'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.DescribeCustomKeyStoresResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.DescribeCustomKeyStoresResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSCustomKeyStoreCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CustomKeyStoreId parameter.
            The -PassThru parameter is deprecated, use -Select '^CustomKeyStoreId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSCustomKeyStoreCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSGrantListCmdlet">
            <summary>
            Gets a list of all grants for the specified customer master key (CMK).
            
             
            <para>
            To perform this operation on a CMK in a different AWS account, specify the key ARN
            in the value of the <code>KeyId</code> parameter.
            </para><note><para>
            The <code>GranteePrincipal</code> field in the <code>ListGrants</code> response usually
            contains the user or role designated as the grantee principal in the grant. However,
            when the grantee principal in the grant is an AWS service, the <code>GranteePrincipal</code>
            field contains the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#principal-services">service
            principal</a>, which might represent several different grantee principals.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSGrantListCmdlet.KeyId">
            <summary>
            <para>
            <para>A unique identifier for the customer master key (CMK).</para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK. To specify a CMK
            in a different AWS account, you must use the key ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSGrantListCmdlet.Limit">
            <summary>
            <para>
            <para>Use this parameter to specify the maximum number of items to return. When this value
            is present, AWS KMS does not return more than the specified number of items, but it
            might return fewer.</para><para>This value is optional. If you include a value, it must be between 1 and 100, inclusive.
            If you do not include a value, it defaults to 50.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSGrantListCmdlet.Marker">
            <summary>
            <para>
            <para>Use this parameter in a subsequent request after you receive a response with truncated
            results. Set it to the value of <code>NextMarker</code> from the truncated response
            you just received.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSGrantListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Grants'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ListGrantsResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.ListGrantsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSGrantListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSGrantListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyCmdlet">
            <summary>
            Provides detailed information about a customer master key (CMK). You can run <code>DescribeKey</code>
            on a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk">customer
            managed CMK</a> or an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk">AWS
            managed CMK</a>.
            
             
            <para>
            This detailed information includes the key ARN, creation date (and deletion date,
            if applicable), the key state, and the origin and expiration date (if any) of the
            key material. For CMKs in custom key stores, it includes information about the custom
            key store, such as the key store ID and the AWS CloudHSM cluster ID. It includes fields,
            like <code>KeySpec</code>, that help you distinguish symmetric from asymmetric CMKs.
            It also provides information that is particularly important to asymmetric CMKs, such
            as the key usage (encryption or signing) and the encryption algorithms or signing
            algorithms that the CMK supports.
            </para><para><code>DescribeKey</code> does not return the following information:
            </para><ul><li><para>
            Aliases associated with the CMK. To get this information, use <a>ListAliases</a>.
            </para></li><li><para>
            Whether automatic key rotation is enabled on the CMK. To get this information, use
            <a>GetKeyRotationStatus</a>. Also, some key states prevent a CMK from being automatically
            rotated. For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html#rotate-keys-how-it-works">How
            Automatic Key Rotation Works</a> in <i>AWS Key Management Service Developer Guide</i>.
            </para></li><li><para>
            Tags on the CMK. To get this information, use <a>ListResourceTags</a>.
            </para></li><li><para>
            Key policies and grants on the CMK. To get this information, use <a>GetKeyPolicy</a>
            and <a>ListGrants</a>.
            </para></li></ul><para>
            If you call the <code>DescribeKey</code> operation on a <i>predefined AWS alias</i>,
            that is, an AWS alias with no key ID, AWS KMS creates an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys">AWS
            managed CMK</a>. Then, it associates the alias with the new CMK, and returns the <code>KeyId</code>
            and <code>Arn</code> of the new CMK in the response.
            </para><para>
            To perform this operation on a CMK in a different AWS account, specify the key ARN
            or alias ARN in the value of the KeyId parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant
            Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyCmdlet.KeyId">
            <summary>
            <para>
            <para>Describes the specified customer master key (CMK). </para><para>If you specify a predefined AWS alias (an AWS alias with no key ID), KMS associates
            the alias with an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys">AWS
            managed CMK</a> and returns its <code>KeyId</code> and <code>Arn</code> in the response.</para><para>To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias
            ARN. When using an alias name, prefix it with <code>"alias/"</code>. To specify a
            CMK in a different AWS account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'KeyMetadata'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.DescribeKeyResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.DescribeKeyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyListCmdlet">
            <summary>
            Gets a list of all customer master keys (CMKs) in the caller's AWS account and Region.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyListCmdlet.Limit">
            <summary>
            <para>
            <para>Use this parameter to specify the maximum number of items to return. When this value
            is present, AWS KMS does not return more than the specified number of items, but it
            might return fewer.</para><para>This value is optional. If you include a value, it must be between 1 and 1000, inclusive.
            If you do not include a value, it defaults to 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyListCmdlet.Marker">
            <summary>
            <para>
            <para>Use this parameter in a subsequent request after you receive a response with truncated
            results. Set it to the value of <code>NextMarker</code> from the truncated response
            you just received.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Keys'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ListKeysResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.ListKeysResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyCmdlet">
            <summary>
            Gets a key policy attached to the specified customer master key (CMK). You cannot
            perform this operation on a CMK in a different AWS account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyCmdlet.KeyId">
            <summary>
            <para>
            <para>A unique identifier for the customer master key (CMK).</para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>Specifies the name of the key policy. The only valid name is <code>default</code>.
            To get the names of key policies, use <a>ListKeyPolicies</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Policy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.GetKeyPolicyResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.GetKeyPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyListCmdlet">
            <summary>
            Gets the names of the key policies that are attached to a customer master key (CMK).
            This operation is designed to get policy names that you can use in a <a>GetKeyPolicy</a>
            operation. However, the only valid policy name is <code>default</code>. You cannot
            perform this operation on a CMK in a different AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyListCmdlet.KeyId">
            <summary>
            <para>
            <para>A unique identifier for the customer master key (CMK).</para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyListCmdlet.Limit">
            <summary>
            <para>
            <para>Use this parameter to specify the maximum number of items to return. When this value
            is present, AWS KMS does not return more than the specified number of items, but it
            might return fewer.</para><para>This value is optional. If you include a value, it must be between 1 and 1000, inclusive.
            If you do not include a value, it defaults to 100.</para><para>Only one policy can be attached to a key.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyListCmdlet.Marker">
            <summary>
            <para>
            <para>Use this parameter in a subsequent request after you receive a response with truncated
            results. Set it to the value of <code>NextMarker</code> from the truncated response
            you just received.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PolicyNames'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ListKeyPoliciesResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.ListKeyPoliciesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyRotationStatusCmdlet">
            <summary>
            Gets a Boolean value that indicates whether <a href="https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html">automatic
            rotation of the key material</a> is enabled for the specified customer master key
            (CMK).
            
             
            <para>
            You cannot enable automatic rotation of asymmetric CMKs, CMKs with imported key material,
            or CMKs in a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a>. The key rotation status for these CMKs is always <code>false</code>.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para><ul><li><para>
            Disabled: The key rotation status does not change when you disable a CMK. However,
            while the CMK is disabled, AWS KMS does not rotate the backing key.
            </para></li><li><para>
            Pending deletion: While a CMK is pending deletion, its key rotation status is <code>false</code>
            and AWS KMS does not rotate the backing key. If you cancel the deletion, the original
            key rotation status is restored.
            </para></li></ul><para>
            To perform this operation on a CMK in a different AWS account, specify the key ARN
            in the value of the <code>KeyId</code> parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyRotationStatusCmdlet.KeyId">
            <summary>
            <para>
            <para>A unique identifier for the customer master key (CMK).</para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK. To specify a CMK
            in a different AWS account, you must use the key ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyRotationStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'KeyRotationEnabled'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.GetKeyRotationStatusResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.GetKeyRotationStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyRotationStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSParametersForImportCmdlet">
            <summary>
            Returns the items you need to import key material into a symmetric, customer managed
            customer master key (CMK). For more information about importing key material into
            AWS KMS, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing
            Key Material</a> in the <i>AWS Key Management Service Developer Guide</i>.
            
             
            <para>
            This operation returns a public key and an import token. Use the public key to encrypt
            the symmetric key material. Store the import token to send with a subsequent <a>ImportKeyMaterial</a>
            request.
            </para><para>
            You must specify the key ID of the symmetric CMK into which you will import key material.
            This CMK's <code>Origin</code> must be <code>EXTERNAL</code>. You must also specify
            the wrapping algorithm and type of wrapping key (public key) that you will use to
            encrypt the key material. You cannot perform this operation on an asymmetric CMK or
            on any CMK in a different AWS account.
            </para><para>
            To import key material, you must use the public key and import token from the same
            response. These items are valid for 24 hours. The expiration date and time appear
            in the <code>GetParametersForImport</code> response. You cannot use an expired token
            in an <a>ImportKeyMaterial</a> request. If your key and token expire, send another
            <code>GetParametersForImport</code> request.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSParametersForImportCmdlet.KeyId">
            <summary>
            <para>
            <para>The identifier of the symmetric CMK into which you will import key material. The <code>Origin</code>
            of the CMK must be <code>EXTERNAL</code>.</para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSParametersForImportCmdlet.WrappingAlgorithm">
            <summary>
            <para>
            <para>The algorithm you will use to encrypt the key material before importing it with <a>ImportKeyMaterial</a>.
            For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-encrypt-key-material.html">Encrypt
            the Key Material</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSParametersForImportCmdlet.WrappingKeySpec">
            <summary>
            <para>
            <para>The type of wrapping key (public key) to return in the response. Only 2048-bit RSA
            public keys are supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSParametersForImportCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.GetParametersForImportResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.GetParametersForImportResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSParametersForImportCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSPublicKeyCmdlet">
            <summary>
            Returns the public key of an asymmetric CMK. Unlike the private key of a asymmetric
            CMK, which never leaves AWS KMS unencrypted, callers with <code>kms:GetPublicKey</code>
            permission can download the public key of an asymmetric CMK. You can share the public
            key to allow others to encrypt messages and verify signatures outside of AWS KMS.
            For information about symmetric and asymmetric CMKs, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
            Symmetric and Asymmetric CMKs</a> in the <i>AWS Key Management Service Developer Guide</i>.
            
             
            <para>
            You do not need to download the public key. Instead, you can use the public key within
            AWS KMS by calling the <a>Encrypt</a>, <a>ReEncrypt</a>, or <a>Verify</a> operations
            with the identifier of an asymmetric CMK. When you use the public key within AWS KMS,
            you benefit from the authentication, authorization, and logging that are part of every
            AWS KMS operation. You also reduce of risk of encrypting data that cannot be decrypted.
            These features are not effective outside of AWS KMS. For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/download-public-key.html#download-public-key-considerations">Special
            Considerations for Downloading Public Keys</a>.
            </para><para>
            To help you use the public key safely outside of AWS KMS, <code>GetPublicKey</code>
            returns important information about the public key in the response, including:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_GetPublicKey.html#KMS-GetPublicKey-response-CustomerMasterKeySpec">CustomerMasterKeySpec</a>:
            The type of key material in the public key, such as <code>RSA_4096</code> or <code>ECC_NIST_P521</code>.
            </para></li><li><para><a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_GetPublicKey.html#KMS-GetPublicKey-response-KeyUsage">KeyUsage</a>:
            Whether the key is used for encryption or signing.
            </para></li><li><para><a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_GetPublicKey.html#KMS-GetPublicKey-response-EncryptionAlgorithms">EncryptionAlgorithms</a>
            or <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_GetPublicKey.html#KMS-GetPublicKey-response-SigningAlgorithms">SigningAlgorithms</a>:
            A list of the encryption algorithms or the signing algorithms for the key.
            </para></li></ul><para>
            Although AWS KMS cannot enforce these restrictions on external operations, it is crucial
            that you use this information to prevent the public key from being used improperly.
            For example, you can prevent a public signing key from being used encrypt data, or
            prevent a public key from being used with an encryption algorithm that is not supported
            by AWS KMS. You can also avoid errors, such as using the wrong signing algorithm in
            a verification operation.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSPublicKeyCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant
            Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSPublicKeyCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies the asymmetric CMK that includes the public key.</para><para>To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias
            ARN. When using an alias name, prefix it with <code>"alias/"</code>. To specify a
            CMK in a different AWS account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSPublicKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.GetPublicKeyResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.GetPublicKeyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSPublicKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSResourceTagCmdlet">
            <summary>
            Returns a list of all tags for the specified customer master key (CMK).
            
             
            <para>
            You cannot perform this operation on a CMK in a different AWS account.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSResourceTagCmdlet.KeyId">
            <summary>
            <para>
            <para>A unique identifier for the customer master key (CMK).</para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSResourceTagCmdlet.Limit">
            <summary>
            <para>
            <para>Use this parameter to specify the maximum number of items to return. When this value
            is present, AWS KMS does not return more than the specified number of items, but it
            might return fewer.</para><para>This value is optional. If you include a value, it must be between 1 and 50, inclusive.
            If you do not include a value, it defaults to 50.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSResourceTagCmdlet.Marker">
            <summary>
            <para>
            <para>Use this parameter in a subsequent request after you receive a response with truncated
            results. Set it to the value of <code>NextMarker</code> from the truncated response
            you just received.</para><para>Do not attempt to construct this value. Use only the value of <code>NextMarker</code>
            from the truncated response you just received.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ListResourceTagsResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.ListResourceTagsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSResourceTagCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSRetirableGrantCmdlet">
            <summary>
            Returns a list of all grants for which the grant's <code>RetiringPrincipal</code>
            matches the one specified.
            
             
            <para>
            A typical use is to list all grants that you are able to retire. To retire a grant,
            use <a>RetireGrant</a>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSRetirableGrantCmdlet.RetiringPrincipal">
            <summary>
            <para>
            <para>The retiring principal for which to list grants.</para><para>To specify the retiring principal, use the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of an AWS principal. Valid AWS principals include AWS accounts
            (root), IAM users, federated users, and assumed role users. For examples of the ARN
            syntax for specifying a principal, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-iam">AWS
            Identity and Access Management (IAM)</a> in the Example ARNs section of the <i>Amazon
            Web Services General Reference</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSRetirableGrantCmdlet.Limit">
            <summary>
            <para>
            <para>Use this parameter to specify the maximum number of items to return. When this value
            is present, AWS KMS does not return more than the specified number of items, but it
            might return fewer.</para><para>This value is optional. If you include a value, it must be between 1 and 100, inclusive.
            If you do not include a value, it defaults to 50.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSRetirableGrantCmdlet.Marker">
            <summary>
            <para>
            <para>Use this parameter in a subsequent request after you receive a response with truncated
            results. Set it to the value of <code>NextMarker</code> from the truncated response
            you just received.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSRetirableGrantCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Grants'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ListRetirableGrantsResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.ListRetirableGrantsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSRetirableGrantCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.ImportKMSKeyMaterialCmdlet">
            <summary>
            Imports key material into an existing symmetric AWS KMS customer master key (CMK)
            that was created without key material. After you successfully import key material
            into a CMK, you can <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html#reimport-key-material">reimport
            the same key material</a> into that CMK, but you cannot import different key material.
            
             
            <para>
            You cannot perform this operation on an asymmetric CMK or on any CMK in a different
            AWS account. For more information about creating CMKs with no key material and then
            importing key material, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing
            Key Material</a> in the <i>AWS Key Management Service Developer Guide</i>.
            </para><para>
            Before using this operation, call <a>GetParametersForImport</a>. Its response includes
            a public key and an import token. Use the public key to encrypt the key material.
            Then, submit the import token from the same <code>GetParametersForImport</code> response.
            </para><para>
            When calling this operation, you must specify the following values:
            </para><ul><li><para>
            The key ID or key ARN of a CMK with no key material. Its <code>Origin</code> must
            be <code>EXTERNAL</code>.
            </para><para>
            To create a CMK with no key material, call <a>CreateKey</a> and set the value of its
            <code>Origin</code> parameter to <code>EXTERNAL</code>. To get the <code>Origin</code>
            of a CMK, call <a>DescribeKey</a>.)
            </para></li><li><para>
            The encrypted key material. To get the public key to encrypt the key material, call
            <a>GetParametersForImport</a>.
            </para></li><li><para>
            The import token that <a>GetParametersForImport</a> returned. You must use a public
            key and token from the same <code>GetParametersForImport</code> response.
            </para></li><li><para>
            Whether the key material expires and if so, when. If you set an expiration date, AWS
            KMS deletes the key material from the CMK on the specified date, and the CMK becomes
            unusable. To use the CMK again, you must reimport the same key material. The only
            way to change an expiration date is by reimporting the same key material and specifying
            a new expiration date. 
            </para></li></ul><para>
            When this operation is successful, the key state of the CMK changes from <code>PendingImport</code>
            to <code>Enabled</code>, and you can use the CMK.
            </para><para>
            If this operation fails, use the exception to help determine the problem. If the error
            is related to the key material, the import token, or wrapping key, use <a>GetParametersForImport</a>
            to get a new public key and import token for the CMK and repeat the import procedure.
            For help, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html#importing-keys-overview">How
            To Import Key Material</a> in the <i>AWS Key Management Service Developer Guide</i>.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ImportKMSKeyMaterialCmdlet.EncryptedKeyMaterial">
            <summary>
            <para>
            <para>The encrypted key material to import. The key material must be encrypted with the
            public wrapping key that <a>GetParametersForImport</a> returned, using the wrapping
            algorithm that you specified in the same <code>GetParametersForImport</code> request.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ImportKMSKeyMaterialCmdlet.ExpirationModel">
            <summary>
            <para>
            <para>Specifies whether the key material expires. The default is <code>KEY_MATERIAL_EXPIRES</code>,
            in which case you must include the <code>ValidTo</code> parameter. When this parameter
            is set to <code>KEY_MATERIAL_DOES_NOT_EXPIRE</code>, you must omit the <code>ValidTo</code>
            parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ImportKMSKeyMaterialCmdlet.ImportToken">
            <summary>
            <para>
            <para>The import token that you received in the response to a previous <a>GetParametersForImport</a>
            request. It must be from the same response that contained the public key that you
            used to encrypt the key material.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ImportKMSKeyMaterialCmdlet.KeyId">
            <summary>
            <para>
            <para>The identifier of the symmetric CMK that receives the imported key material. The CMK's
            <code>Origin</code> must be <code>EXTERNAL</code>. This must be the same CMK specified
            in the <code>KeyID</code> parameter of the corresponding <a>GetParametersForImport</a>
            request.</para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ImportKMSKeyMaterialCmdlet.ValidTo">
            <summary>
            <para>
            <para>The time at which the imported key material expires. When the key material expires,
            AWS KMS deletes the key material and the CMK becomes unusable. You must omit this
            parameter when the <code>ExpirationModel</code> parameter is set to <code>KEY_MATERIAL_DOES_NOT_EXPIRE</code>.
            Otherwise it is required.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ImportKMSKeyMaterialCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ImportKeyMaterialResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ImportKMSKeyMaterialCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ImportKMSKeyMaterialCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSDecryptCmdlet">
            <summary>
            Decrypts ciphertext that was encrypted by a AWS KMS customer master key (CMK) using
            any of the following operations:
            
             <ul><li><para><a>Encrypt</a></para></li><li><para><a>GenerateDataKey</a></para></li><li><para><a>GenerateDataKeyPair</a></para></li><li><para><a>GenerateDataKeyWithoutPlaintext</a></para></li><li><para><a>GenerateDataKeyPairWithoutPlaintext</a></para></li></ul><para>
            You can use this operation to decrypt ciphertext that was encrypted under a symmetric
            or asymmetric CMK. When the CMK is asymmetric, you must specify the CMK and the encryption
            algorithm that was used to encrypt the ciphertext. For information about symmetric
            and asymmetric CMKs, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
            Symmetric and Asymmetric CMKs</a> in the <i>AWS Key Management Service Developer Guide</i>.
            </para><para>
            The Decrypt operation also decrypts ciphertext that was encrypted outside of AWS KMS
            by the public key in an AWS KMS asymmetric CMK. However, it cannot decrypt ciphertext
            produced by other libraries, such as the <a href="https://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/">AWS
            Encryption SDK</a> or <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingClientSideEncryption.html">Amazon
            S3 client-side encryption</a>. These libraries return a ciphertext format that is
            incompatible with AWS KMS.
            </para><para>
            If the ciphertext was encrypted under a symmetric CMK, you do not need to specify
            the CMK or the encryption algorithm. AWS KMS can get this information from metadata
            that it adds to the symmetric ciphertext blob. However, if you prefer, you can specify
            the <code>KeyId</code> to ensure that a particular CMK is used to decrypt the ciphertext.
            If you specify a different CMK than the one used to encrypt the ciphertext, the <code>Decrypt</code>
            operation fails.
            </para><para>
            Whenever possible, use key policies to give users permission to call the Decrypt operation
            on a particular CMK, instead of using IAM policies. Otherwise, you might create an
            IAM user policy that gives the user Decrypt permission on all CMKs. This user could
            decrypt ciphertext that was encrypted by CMKs in other accounts if the key policy
            for the cross-account CMK permits it. If you must use an IAM policy for <code>Decrypt</code>
            permissions, limit the user to particular CMKs or particular trusted accounts.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSDecryptCmdlet.CiphertextBlob">
            <summary>
            <para>
            <para>Ciphertext to be decrypted. The blob includes metadata.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSDecryptCmdlet.EncryptionAlgorithm">
            <summary>
            <para>
            <para>Specifies the encryption algorithm that will be used to decrypt the ciphertext. Specify
            the same algorithm that was used to encrypt the data. If you specify a different algorithm,
            the <code>Decrypt</code> operation fails.</para><para>This parameter is required only when the ciphertext was encrypted under an asymmetric
            CMK. The default value, <code>SYMMETRIC_DEFAULT</code>, represents the only supported
            algorithm that is valid for symmetric CMKs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSDecryptCmdlet.EncryptionContext">
            <summary>
            <para>
            <para>Specifies the encryption context to use when decrypting the data. An encryption context
            is valid only for <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operations</a> with a symmetric CMK. The standard asymmetric encryption algorithms
            that AWS KMS uses do not support an encryption context.</para><para>An <i>encryption context</i> is a collection of non-secret key-value pairs that represents
            additional authenticated data. When you use an encryption context to encrypt data,
            you must specify the same (an exact case-sensitive match) encryption context to decrypt
            the data. An encryption context is optional when encrypting with a symmetric CMK,
            but it is highly recommended.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            Context</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSDecryptCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant
            Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSDecryptCmdlet.KeyId">
            <summary>
            <para>
            <para>Specifies the customer master key (CMK) that AWS KMS will use to decrypt the ciphertext.
            Enter a key ID of the CMK that was used to encrypt the ciphertext.</para><para>If you specify a <code>KeyId</code> value, the <code>Decrypt</code> operation succeeds
            only if the specified CMK was used to encrypt the ciphertext.</para><para>This parameter is required only when the ciphertext was encrypted under an asymmetric
            CMK. Otherwise, AWS KMS uses the metadata that it adds to the ciphertext blob to determine
            which CMK was used to encrypt the ciphertext. However, you can use this parameter
            to ensure that a particular CMK (of any kind) is used to decrypt the ciphertext.</para><para>To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias
            ARN. When using an alias name, prefix it with <code>"alias/"</code>.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSDecryptCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.DecryptResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.DecryptResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSEncryptCmdlet">
            <summary>
            Encrypts plaintext into ciphertext by using a customer master key (CMK). The <code>Encrypt</code>
            operation has two primary use cases:
            
             <ul><li><para>
            You can encrypt small amounts of arbitrary data, such as a personal identifier or
            database password, or other sensitive information. 
            </para></li><li><para>
            You can use the <code>Encrypt</code> operation to move encrypted data from one AWS
            Region to another. For example, in Region A, generate a data key and use the plaintext
            key to encrypt your data. Then, in Region A, use the <code>Encrypt</code> operation
            to encrypt the plaintext data key under a CMK in Region B. Now, you can move the encrypted
            data and the encrypted data key to Region B. When necessary, you can decrypt the encrypted
            data key and the encrypted data entirely within in Region B.
            </para></li></ul><para>
            You don't need to use the <code>Encrypt</code> operation to encrypt a data key. The
            <a>GenerateDataKey</a> and <a>GenerateDataKeyPair</a> operations return a plaintext
            data key and an encrypted copy of that data key.
            </para><para>
            When you encrypt data, you must specify a symmetric or asymmetric CMK to use in the
            encryption operation. The CMK must have a <code>KeyUsage</code> value of <code>ENCRYPT_DECRYPT.</code>
            To find the <code>KeyUsage</code> of a CMK, use the <a>DescribeKey</a> operation.
            
            </para><para>
            If you use a symmetric CMK, you can use an encryption context to add additional security
            to your encryption operation. If you specify an <code>EncryptionContext</code> when
            encrypting data, you must specify the same encryption context (a case-sensitive exact
            match) when decrypting the data. Otherwise, the request to decrypt fails with an <code>InvalidCiphertextException</code>.
            For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            Context</a> in the <i>AWS Key Management Service Developer Guide</i>.
            </para><para>
            If you specify an asymmetric CMK, you must also specify the encryption algorithm.
            The algorithm must be compatible with the CMK type.
            </para><important><para>
            When you use an asymmetric CMK to encrypt or reencrypt data, be sure to record the
            CMK and encryption algorithm that you choose. You will be required to provide the
            same CMK and encryption algorithm when you decrypt the data. If the CMK and algorithm
            do not match the values used to encrypt the data, the decrypt operation fails.
            </para><para>
            You are not required to supply the CMK ID and encryption algorithm when you decrypt
            with symmetric CMKs because AWS KMS stores this information in the ciphertext blob.
            AWS KMS cannot store metadata in ciphertext generated with asymmetric keys. The standard
            format for asymmetric key ciphertext does not include configurable fields.
            </para></important><para>
            The maximum size of the data that you can encrypt varies with the type of CMK and
            the encryption algorithm that you choose.
            </para><ul><li><para>
            Symmetric CMKs
            </para><ul><li><para><code>SYMMETRIC_DEFAULT</code>: 4096 bytes
            </para></li></ul></li><li><para><code>RSA_2048</code></para><ul><li><para><code>RSAES_OAEP_SHA_1</code>: 214 bytes
            </para></li><li><para><code>RSAES_OAEP_SHA_256</code>: 190 bytes
            </para></li></ul></li><li><para><code>RSA_3072</code></para><ul><li><para><code>RSAES_OAEP_SHA_1</code>: 342 bytes
            </para></li><li><para><code>RSAES_OAEP_SHA_256</code>: 318 bytes
            </para></li></ul></li><li><para><code>RSA_4096</code></para><ul><li><para><code>RSAES_OAEP_SHA_1</code>: 470 bytes
            </para></li><li><para><code>RSAES_OAEP_SHA_256</code>: 446 bytes
            </para></li></ul></li></ul><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para><para>
            To perform this operation on a CMK in a different AWS account, specify the key ARN
            or alias ARN in the value of the KeyId parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSEncryptCmdlet.EncryptionAlgorithm">
            <summary>
            <para>
            <para>Specifies the encryption algorithm that AWS KMS will use to encrypt the plaintext
            message. The algorithm must be compatible with the CMK that you specify.</para><para>This parameter is required only for asymmetric CMKs. The default value, <code>SYMMETRIC_DEFAULT</code>,
            is the algorithm used for symmetric CMKs. If you are using an asymmetric CMK, we recommend
            RSAES_OAEP_SHA_256.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSEncryptCmdlet.EncryptionContext">
            <summary>
            <para>
            <para>Specifies the encryption context that will be used to encrypt the data. An encryption
            context is valid only for <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operations</a> with a symmetric CMK. The standard asymmetric encryption algorithms
            that AWS KMS uses do not support an encryption context. </para><para>An <i>encryption context</i> is a collection of non-secret key-value pairs that represents
            additional authenticated data. When you use an encryption context to encrypt data,
            you must specify the same (an exact case-sensitive match) encryption context to decrypt
            the data. An encryption context is optional when encrypting with a symmetric CMK,
            but it is highly recommended.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            Context</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSEncryptCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant
            Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSEncryptCmdlet.KeyId">
            <summary>
            <para>
            <para>A unique identifier for the customer master key (CMK).</para><para>To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias
            ARN. When using an alias name, prefix it with <code>"alias/"</code>. To specify a
            CMK in a different AWS account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSEncryptCmdlet.Plaintext">
            <summary>
            <para>
            <para>Data to be encrypted.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSEncryptCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.EncryptResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.EncryptResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSEncryptCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSEncryptCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet">
            <summary>
            Decrypts ciphertext and then reencrypts it entirely within AWS KMS. You can use this
            operation to change the customer master key (CMK) under which data is encrypted, such
            as when you <a href="https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html#rotate-keys-manually">manually
            rotate</a> a CMK or change the CMK that protects a ciphertext. You can also use it
            to reencrypt ciphertext under the same CMK, such as to change the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">encryption
            context</a> of a ciphertext.
            
             
            <para>
            The <code>ReEncrypt</code> operation can decrypt ciphertext that was encrypted by
            using an AWS KMS CMK in an AWS KMS operation, such as <a>Encrypt</a> or <a>GenerateDataKey</a>.
            It can also decrypt ciphertext that was encrypted by using the public key of an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-concepts.html#asymmetric-cmks">asymmetric
            CMK</a> outside of AWS KMS. However, it cannot decrypt ciphertext produced by other
            libraries, such as the <a href="https://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/">AWS
            Encryption SDK</a> or <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingClientSideEncryption.html">Amazon
            S3 client-side encryption</a>. These libraries return a ciphertext format that is
            incompatible with AWS KMS.
            </para><para>
            When you use the <code>ReEncrypt</code> operation, you need to provide information
            for the decrypt operation and the subsequent encrypt operation.
            </para><ul><li><para>
            If your ciphertext was encrypted under an asymmetric CMK, you must identify the <i>source
            CMK</i>, that is, the CMK that encrypted the ciphertext. You must also supply the
            encryption algorithm that was used. This information is required to decrypt the data.
            </para></li><li><para>
            It is optional, but you can specify a source CMK even when the ciphertext was encrypted
            under a symmetric CMK. This ensures that the ciphertext is decrypted only by using
            a particular CMK. If the CMK that you specify cannot decrypt the ciphertext, the <code>ReEncrypt</code>
            operation fails.
            </para></li><li><para>
            To reencrypt the data, you must specify the <i>destination CMK</i>, that is, the CMK
            that re-encrypts the data after it is decrypted. You can select a symmetric or asymmetric
            CMK. If the destination CMK is an asymmetric CMK, you must also provide the encryption
            algorithm. The algorithm that you choose must be compatible with the CMK.
            </para><important><para>
            When you use an asymmetric CMK to encrypt or reencrypt data, be sure to record the
            CMK and encryption algorithm that you choose. You will be required to provide the
            same CMK and encryption algorithm when you decrypt the data. If the CMK and algorithm
            do not match the values used to encrypt the data, the decrypt operation fails.
            </para><para>
            You are not required to supply the CMK ID and encryption algorithm when you decrypt
            with symmetric CMKs because AWS KMS stores this information in the ciphertext blob.
            AWS KMS cannot store metadata in ciphertext generated with asymmetric keys. The standard
            format for asymmetric key ciphertext does not include configurable fields.
            </para></important></li></ul><para>
            Unlike other AWS KMS API operations, <code>ReEncrypt</code> callers must have two
            permissions:
            </para><ul><li><para><code>kms:ReEncryptFrom</code> permission on the source CMK
            </para></li><li><para><code>kms:ReEncryptTo</code> permission on the destination CMK
            </para></li></ul><para>
            To permit reencryption from or to a CMK, include the <code>"kms:ReEncrypt*"</code>
            permission in your <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">key
            policy</a>. This permission is automatically included in the key policy when you use
            the console to create a CMK. But you must include it manually when you create a CMK
            programmatically or when you use the <a>PutKeyPolicy</a> operation to set a key policy.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet.CiphertextBlob">
            <summary>
            <para>
            <para>Ciphertext of the data to reencrypt.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet.DestinationEncryptionAlgorithm">
            <summary>
            <para>
            <para>Specifies the encryption algorithm that AWS KMS will use to reecrypt the data after
            it has decrypted it. The default value, <code>SYMMETRIC_DEFAULT</code>, represents
            the encryption algorithm used for symmetric CMKs.</para><para>This parameter is required only when the destination CMK is an asymmetric CMK.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet.DestinationEncryptionContext">
            <summary>
            <para>
            <para>Specifies that encryption context to use when the reencrypting the data.</para><para>A destination encryption context is valid only when the destination CMK is a symmetric
            CMK. The standard ciphertext format for asymmetric CMKs does not include fields for
            metadata.</para><para>An <i>encryption context</i> is a collection of non-secret key-value pairs that represents
            additional authenticated data. When you use an encryption context to encrypt data,
            you must specify the same (an exact case-sensitive match) encryption context to decrypt
            the data. An encryption context is optional when encrypting with a symmetric CMK,
            but it is highly recommended.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            Context</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet.DestinationKeyId">
            <summary>
            <para>
            <para>A unique identifier for the CMK that is used to reencrypt the data. Specify a symmetric
            or asymmetric CMK with a <code>KeyUsage</code> value of <code>ENCRYPT_DECRYPT</code>.
            To find the <code>KeyUsage</code> value of a CMK, use the <a>DescribeKey</a> operation.</para><para>To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias
            ARN. When using an alias name, prefix it with <code>"alias/"</code>. To specify a
            CMK in a different AWS account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant
            Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet.SourceEncryptionAlgorithm">
            <summary>
            <para>
            <para>Specifies the encryption algorithm that AWS KMS will use to decrypt the ciphertext
            before it is reencrypted. The default value, <code>SYMMETRIC_DEFAULT</code>, represents
            the algorithm used for symmetric CMKs.</para><para>Specify the same algorithm that was used to encrypt the ciphertext. If you specify
            a different algorithm, the decrypt attempt fails.</para><para>This parameter is required only when the ciphertext was encrypted under an asymmetric
            CMK.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet.SourceEncryptionContext">
            <summary>
            <para>
            <para>Specifies the encryption context to use to decrypt the ciphertext. Enter the same
            encryption context that was used to encrypt the ciphertext.</para><para>An <i>encryption context</i> is a collection of non-secret key-value pairs that represents
            additional authenticated data. When you use an encryption context to encrypt data,
            you must specify the same (an exact case-sensitive match) encryption context to decrypt
            the data. An encryption context is optional when encrypting with a symmetric CMK,
            but it is highly recommended.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            Context</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet.SourceKeyId">
            <summary>
            <para>
            <para>A unique identifier for the CMK that is used to decrypt the ciphertext before it reencrypts
            it using the destination CMK.</para><para>This parameter is required only when the ciphertext was encrypted under an asymmetric
            CMK. Otherwise, AWS KMS uses the metadata that it adds to the ciphertext blob to determine
            which CMK was used to encrypt the ciphertext. However, you can use this parameter
            to ensure that a particular CMK (of any kind) is used to decrypt the ciphertext before
            it is reencrypted.</para><para>If you specify a <code>KeyId</code> value, the decrypt part of the <code>ReEncrypt</code>
            operation succeeds only if the specified CMK was used to encrypt the ciphertext.</para><para>To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias
            ARN. When using an alias name, prefix it with <code>"alias/"</code>.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ReEncryptResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.ReEncryptResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSSigningCmdlet">
            <summary>
            Creates a <a href="https://en.wikipedia.org/wiki/Digital_signature">digital signature</a>
            for a message or message digest by using the private key in an asymmetric CMK. To
            verify the signature, use the <a>Verify</a> operation, or use the public key in the
            same asymmetric CMK outside of AWS KMS. For information about symmetric and asymmetric
            CMKs, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
            Symmetric and Asymmetric CMKs</a> in the <i>AWS Key Management Service Developer Guide</i>.
            
             
            <para>
            Digital signatures are generated and verified by using asymmetric key pair, such as
            an RSA or ECC pair that is represented by an asymmetric customer master key (CMK).
            The key owner (or an authorized user) uses their private key to sign a message. Anyone
            with the public key can verify that the message was signed with that particular private
            key and that the message hasn't changed since it was signed. 
            </para><para>
            To use the <code>Sign</code> operation, provide the following information:
            </para><ul><li><para>
            Use the <code>KeyId</code> parameter to identify an asymmetric CMK with a <code>KeyUsage</code>
            value of <code>SIGN_VERIFY</code>. To get the <code>KeyUsage</code> value of a CMK,
            use the <a>DescribeKey</a> operation. The caller must have <code>kms:Sign</code> permission
            on the CMK.
            </para></li><li><para>
            Use the <code>Message</code> parameter to specify the message or message digest to
            sign. You can submit messages of up to 4096 bytes. To sign a larger message, generate
            a hash digest of the message, and then provide the hash digest in the <code>Message</code>
            parameter. To indicate whether the message is a full message or a digest, use the
            <code>MessageType</code> parameter.
            </para></li><li><para>
            Choose a signing algorithm that is compatible with the CMK. 
            </para></li></ul><important><para>
            When signing a message, be sure to record the CMK and the signing algorithm. This
            information is required to verify the signature.
            </para></important><para>
            To verify the signature that this operation generates, use the <a>Verify</a> operation.
            Or use the <a>GetPublicKey</a> operation to download the public key and then use the
            public key to verify the signature outside of AWS KMS. 
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSSigningCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant
            Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSSigningCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies an asymmetric CMK. AWS KMS uses the private key in the asymmetric CMK to
            sign the message. The <code>KeyUsage</code> type of the CMK must be <code>SIGN_VERIFY</code>.
            To find the <code>KeyUsage</code> of a CMK, use the <a>DescribeKey</a> operation.</para><para>To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias
            ARN. When using an alias name, prefix it with <code>"alias/"</code>. To specify a
            CMK in a different AWS account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSSigningCmdlet.Message">
            <summary>
            <para>
            <para>Specifies the message or message digest to sign. Messages can be 0-4096 bytes. To
            sign a larger message, provide the message digest.</para><para>If you provide a message, AWS KMS generates a hash digest of the message and then
            signs it.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSSigningCmdlet.MessageType">
            <summary>
            <para>
            <para>Tells AWS KMS whether the value of the <code>Message</code> parameter is a message
            or message digest. The default value, RAW, indicates a message. To indicate a message
            digest, enter <code>DIGEST</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSSigningCmdlet.SigningAlgorithm">
            <summary>
            <para>
            <para>Specifies the signing algorithm to use when signing the message. </para><para>Choose an algorithm that is compatible with the type and size of the specified asymmetric
            CMK.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSSigningCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Signature'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.SignResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.SignResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSSigningCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Message parameter.
            The -PassThru parameter is deprecated, use -Select '^Message' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSSigningCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.NewKMSAliasCmdlet">
            <summary>
            Creates a display name for a customer managed customer master key (CMK). You can use
            an alias to identify a CMK in <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operations</a>, such as <a>Encrypt</a> and <a>GenerateDataKey</a>. You can change
            the CMK associated with the alias at any time.
            
             
            <para>
            Aliases are easier to remember than key IDs. They can also help to simplify your applications.
            For example, if you use an alias in your code, you can change the CMK your code uses
            by associating a given alias with a different CMK. 
            </para><para>
            To run the same code in multiple AWS regions, use an alias in your code, such as <code>alias/ApplicationKey</code>.
            Then, in each AWS Region, create an <code>alias/ApplicationKey</code> alias that is
            associated with a CMK in that Region. When you run your code, it uses the <code>alias/ApplicationKey</code>
            CMK for that AWS Region without any Region-specific code.
            </para><para>
            This operation does not return a response. To get the alias that you created, use
            the <a>ListAliases</a> operation.
            </para><para>
            To use aliases successfully, be aware of the following information.
            </para><ul><li><para>
            Each alias points to only one CMK at a time, although a single CMK can have multiple
            aliases. The alias and its associated CMK must be in the same AWS account and Region.
            
            </para></li><li><para>
            You can associate an alias with any customer managed CMK in the same AWS account and
            Region. However, you do not have permission to associate an alias with an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk">AWS
            managed CMK</a> or an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-owned-cmk">AWS
            owned CMK</a>. 
            </para></li><li><para>
            To change the CMK associated with an alias, use the <a>UpdateAlias</a> operation.
            The current CMK and the new CMK must be the same type (both symmetric or both asymmetric)
            and they must have the same key usage (<code>ENCRYPT_DECRYPT</code> or <code>SIGN_VERIFY</code>).
            This restriction prevents cryptographic errors in code that uses aliases.
            </para></li><li><para>
            The alias name must begin with <code>alias/</code> followed by a name, such as <code>alias/ExampleAlias</code>.
            It can contain only alphanumeric characters, forward slashes (/), underscores (_),
            and dashes (-). The alias name cannot begin with <code>alias/aws/</code>. The <code>alias/aws/</code>
            prefix is reserved for <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk">AWS
            managed CMKs</a>. 
            </para></li><li><para>
            The alias name must be unique within an AWS Region. However, you can use the same
            alias name in multiple Regions of the same AWS account. Each instance of the alias
            is associated with a CMK in its Region.
            </para></li><li><para>
            After you create an alias, you cannot change its alias name. However, you can use
            the <a>DeleteAlias</a> operation to delete the alias and then create a new alias with
            the desired name.
            </para></li><li><para>
            You can use an alias name or alias ARN to identify a CMK in AWS KMS <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operations</a> and in the <a>DescribeKey</a> operation. However, you cannot use alias
            names or alias ARNs in API operations that manage CMKs, such as <a>DisableKey</a>
            or <a>GetKeyPolicy</a>. For information about the valid CMK identifiers for each AWS
            KMS API operation, see the descriptions of the <code>KeyId</code> parameter in the
            API operation documentation.
            </para></li></ul><para>
            Because an alias is not a property of a CMK, you can delete and change the aliases
            of a CMK without affecting the CMK. Also, aliases do not appear in the response from
            the <a>DescribeKey</a> operation. To get the aliases and alias ARNs of CMKs in each
            AWS account and Region, use the <a>ListAliases</a> operation.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSAliasCmdlet.AliasName">
            <summary>
            <para>
            <para>Specifies the alias name. This value must begin with <code>alias/</code> followed
            by a name, such as <code>alias/ExampleAlias</code>. The alias name cannot begin with
            <code>alias/aws/</code>. The <code>alias/aws/</code> prefix is reserved for AWS managed
            CMKs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSAliasCmdlet.TargetKeyId">
            <summary>
            <para>
            <para>Identifies the CMK to which the alias refers. Specify the key ID or the Amazon Resource
            Name (ARN) of the CMK. You cannot specify another alias. For help finding the key
            ID and ARN, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/viewing-keys.html#find-cmk-id-arn">Finding
            the Key ID and ARN</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.CreateAliasResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TargetKeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^TargetKeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.NewKMSCustomKeyStoreCmdlet">
            <summary>
            Creates a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a> that is associated with an <a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/clusters.html">AWS
            CloudHSM cluster</a> that you own and manage.
            
             
            <para>
            This operation is part of the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">Custom
            Key Store feature</a> feature in AWS KMS, which combines the convenience and extensive
            integration of AWS KMS with the isolation and control of a single-tenant key store.
            </para><para>
            Before you create the custom key store, you must assemble the required elements, including
            an AWS CloudHSM cluster that fulfills the requirements for a custom key store. For
            details about the required elements, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/create-keystore.html#before-keystore">Assemble
            the Prerequisites</a> in the <i>AWS Key Management Service Developer Guide</i>.
            </para><para>
            When the operation completes successfully, it returns the ID of the new custom key
            store. Before you can use your new custom key store, you need to use the <a>ConnectCustomKeyStore</a>
            operation to connect the new key store to its AWS CloudHSM cluster. Even if you are
            not going to use your custom key store immediately, you might want to connect it to
            verify that all settings are correct and then disconnect it until you are ready to
            use it.
            </para><para>
            For help with failures, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html">Troubleshooting
            a Custom Key Store</a> in the <i>AWS Key Management Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSCustomKeyStoreCmdlet.CloudHsmClusterId">
            <summary>
            <para>
            <para>Identifies the AWS CloudHSM cluster for the custom key store. Enter the cluster ID
            of any active AWS CloudHSM cluster that is not already associated with a custom key
            store. To find the cluster ID, use the <a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html">DescribeClusters</a>
            operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSCustomKeyStoreCmdlet.CustomKeyStoreName">
            <summary>
            <para>
            <para>Specifies a friendly name for the custom key store. The name must be unique in your
            AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSCustomKeyStoreCmdlet.KeyStorePassword">
            <summary>
            <para>
            <para>Enter the password of the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"><code>kmsuser</code> crypto user (CU) account</a> in the specified AWS CloudHSM cluster.
            AWS KMS logs into the cluster as this user to manage key material on your behalf.</para><para>The password must be a string of 7 to 32 characters. Its value is case sensitive.</para><para>This parameter tells AWS KMS the <code>kmsuser</code> account password; it does not
            change the password in the AWS CloudHSM cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSCustomKeyStoreCmdlet.TrustAnchorCertificate">
            <summary>
            <para>
            <para>Enter the content of the trust anchor certificate for the cluster. This is the content
            of the <code>customerCA.crt</code> file that you created when you <a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html">initialized
            the cluster</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSCustomKeyStoreCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CustomKeyStoreId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.CreateCustomKeyStoreResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.CreateCustomKeyStoreResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSCustomKeyStoreCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CustomKeyStoreName parameter.
            The -PassThru parameter is deprecated, use -Select '^CustomKeyStoreName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSCustomKeyStoreCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyCmdlet">
            <summary>
            Generates a unique symmetric data key for client-side encryption. This operation returns
            a plaintext copy of the data key and a copy that is encrypted under a customer master
            key (CMK) that you specify. You can use the plaintext key to encrypt your data outside
            of AWS KMS and store the encrypted data key with the encrypted data.
            
             
            <para><code>GenerateDataKey</code> returns a unique data key for each request. The bytes
            in the plaintext key are not related to the caller or the CMK.
            </para><para>
            To generate a data key, specify the symmetric CMK that will be used to encrypt the
            data key. You cannot use an asymmetric CMK to generate data keys. To get the type
            of your CMK, use the <a>DescribeKey</a> operation. You must also specify the length
            of the data key. Use either the <code>KeySpec</code> or <code>NumberOfBytes</code>
            parameters (but not both). For 128-bit and 256-bit data keys, use the <code>KeySpec</code>
            parameter. 
            </para><para>
            To get only an encrypted copy of the data key, use <a>GenerateDataKeyWithoutPlaintext</a>.
            To generate an asymmetric data key pair, use the <a>GenerateDataKeyPair</a> or <a>GenerateDataKeyPairWithoutPlaintext</a>
            operation. To get a cryptographically secure random byte string, use <a>GenerateRandom</a>.
            </para><para>
            You can use the optional encryption context to add additional security to the encryption
            operation. If you specify an <code>EncryptionContext</code>, you must specify the
            same encryption context (a case-sensitive exact match) when decrypting the encrypted
            data key. Otherwise, the request to decrypt fails with an <code>InvalidCiphertextException</code>.
            For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            Context</a> in the <i>AWS Key Management Service Developer Guide</i>.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para><para><b>How to use your data key</b></para><para>
            We recommend that you use the following pattern to encrypt data locally in your application.
            You can write your own code or use a client-side encryption library, such as the <a href="https://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/">AWS Encryption
            SDK</a>, the <a href="https://docs.aws.amazon.com/dynamodb-encryption-client/latest/devguide/">Amazon
            DynamoDB Encryption Client</a>, or <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingClientSideEncryption.html">Amazon
            S3 client-side encryption</a> to do these tasks for you.
            </para><para>
            To encrypt data outside of AWS KMS:
            </para><ol><li><para>
            Use the <code>GenerateDataKey</code> operation to get a data key.
            </para></li><li><para>
            Use the plaintext data key (in the <code>Plaintext</code> field of the response) to
            encrypt your data outside of AWS KMS. Then erase the plaintext data key from memory.
            </para></li><li><para>
            Store the encrypted data key (in the <code>CiphertextBlob</code> field of the response)
            with the encrypted data.
            </para></li></ol><para>
            To decrypt data outside of AWS KMS:
            </para><ol><li><para>
            Use the <a>Decrypt</a> operation to decrypt the encrypted data key. The operation
            returns a plaintext copy of the data key.
            </para></li><li><para>
            Use the plaintext data key to decrypt data outside of AWS KMS, then erase the plaintext
            data key from memory.
            </para></li></ol>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyCmdlet.EncryptionContext">
            <summary>
            <para>
            <para>Specifies the encryption context that will be used when encrypting the data key.</para><para>An <i>encryption context</i> is a collection of non-secret key-value pairs that represents
            additional authenticated data. When you use an encryption context to encrypt data,
            you must specify the same (an exact case-sensitive match) encryption context to decrypt
            the data. An encryption context is optional when encrypting with a symmetric CMK,
            but it is highly recommended.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            Context</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant
            Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies the symmetric CMK that encrypts the data key.</para><para>To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias
            ARN. When using an alias name, prefix it with <code>"alias/"</code>. To specify a
            CMK in a different AWS account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyCmdlet.KeySpec">
            <summary>
            <para>
            <para>Specifies the length of the data key. Use <code>AES_128</code> to generate a 128-bit
            symmetric key, or <code>AES_256</code> to generate a 256-bit symmetric key.</para><para>You must specify either the <code>KeySpec</code> or the <code>NumberOfBytes</code>
            parameter (but not both) in every <code>GenerateDataKey</code> request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyCmdlet.NumberOfBytes">
            <summary>
            <para>
            <para>Specifies the length of the data key in bytes. For example, use the value 64 to generate
            a 512-bit data key (64 bytes is 512 bits). For 128-bit (16-byte) and 256-bit (32-byte)
            data keys, use the <code>KeySpec</code> parameter.</para><para>You must specify either the <code>KeySpec</code> or the <code>NumberOfBytes</code>
            parameter (but not both) in every <code>GenerateDataKey</code> request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.GenerateDataKeyResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.GenerateDataKeyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairCmdlet">
            <summary>
            Generates a unique asymmetric data key pair. The <code>GenerateDataKeyPair</code>
            operation returns a plaintext public key, a plaintext private key, and a copy of the
            private key that is encrypted under the symmetric CMK you specify. You can use the
            data key pair to perform asymmetric cryptography outside of AWS KMS.
            
             
            <para><code>GenerateDataKeyPair</code> returns a unique data key pair for each request.
            The bytes in the keys are not related to the caller or the CMK that is used to encrypt
            the private key.
            </para><para>
            You can use the public key that <code>GenerateDataKeyPair</code> returns to encrypt
            data or verify a signature outside of AWS KMS. Then, store the encrypted private key
            with the data. When you are ready to decrypt data or sign a message, you can use the
            <a>Decrypt</a> operation to decrypt the encrypted private key.
            </para><para>
            To generate a data key pair, you must specify a symmetric customer master key (CMK)
            to encrypt the private key in a data key pair. You cannot use an asymmetric CMK or
            a CMK in a custom key store. To get the type and origin of your CMK, use the <a>DescribeKey</a>
            operation. 
            </para><para>
            If you are using the data key pair to encrypt data, or for any operation where you
            don't immediately need a private key, consider using the <a>GenerateDataKeyPairWithoutPlaintext</a>
            operation. <code>GenerateDataKeyPairWithoutPlaintext</code> returns a plaintext public
            key and an encrypted private key, but omits the plaintext private key that you need
            only to decrypt ciphertext or sign a message. Later, when you need to decrypt the
            data or sign a message, use the <a>Decrypt</a> operation to decrypt the encrypted
            private key in the data key pair.
            </para><para>
            You can use the optional encryption context to add additional security to the encryption
            operation. If you specify an <code>EncryptionContext</code>, you must specify the
            same encryption context (a case-sensitive exact match) when decrypting the encrypted
            data key. Otherwise, the request to decrypt fails with an <code>InvalidCiphertextException</code>.
            For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            Context</a> in the <i>AWS Key Management Service Developer Guide</i>.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairCmdlet.EncryptionContext">
            <summary>
            <para>
            <para>Specifies the encryption context that will be used when encrypting the private key
            in the data key pair.</para><para>An <i>encryption context</i> is a collection of non-secret key-value pairs that represents
            additional authenticated data. When you use an encryption context to encrypt data,
            you must specify the same (an exact case-sensitive match) encryption context to decrypt
            the data. An encryption context is optional when encrypting with a symmetric CMK,
            but it is highly recommended.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            Context</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant
            Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairCmdlet.KeyId">
            <summary>
            <para>
            <para>Specifies the symmetric CMK that encrypts the private key in the data key pair. You
            cannot specify an asymmetric CMK or a CMK in a custom key store. To get the type and
            origin of your CMK, use the <a>DescribeKey</a> operation.</para><para>To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias
            ARN. When using an alias name, prefix it with <code>"alias/"</code>. To specify a
            CMK in a different AWS account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairCmdlet.KeyPairSpec">
            <summary>
            <para>
            <para>Determines the type of data key pair that is generated. </para><para>The AWS KMS rule that restricts the use of asymmetric RSA CMKs to encrypt and decrypt
            or to sign and verify (but not both), and the rule that permits you to use ECC CMKs
            only to sign and verify, are not effective outside of AWS KMS.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.GenerateDataKeyPairResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.GenerateDataKeyPairResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairWithoutPlaintextCmdlet">
            <summary>
            Generates a unique asymmetric data key pair. The <code>GenerateDataKeyPairWithoutPlaintext</code>
            operation returns a plaintext public key and a copy of the private key that is encrypted
            under the symmetric CMK you specify. Unlike <a>GenerateDataKeyPair</a>, this operation
            does not return a plaintext private key. 
            
             
            <para>
            To generate a data key pair, you must specify a symmetric customer master key (CMK)
            to encrypt the private key in the data key pair. You cannot use an asymmetric CMK
            or a CMK in a custom key store. To get the type and origin of your CMK, use the <code>KeySpec</code>
            field in the <a>DescribeKey</a> response.
            </para><para>
            You can use the public key that <code>GenerateDataKeyPairWithoutPlaintext</code> returns
            to encrypt data or verify a signature outside of AWS KMS. Then, store the encrypted
            private key with the data. When you are ready to decrypt data or sign a message, you
            can use the <a>Decrypt</a> operation to decrypt the encrypted private key.
            </para><para><code>GenerateDataKeyPairWithoutPlaintext</code> returns a unique data key pair for
            each request. The bytes in the key are not related to the caller or CMK that is used
            to encrypt the private key.
            </para><para>
            You can use the optional encryption context to add additional security to the encryption
            operation. If you specify an <code>EncryptionContext</code>, you must specify the
            same encryption context (a case-sensitive exact match) when decrypting the encrypted
            data key. Otherwise, the request to decrypt fails with an <code>InvalidCiphertextException</code>.
            For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            Context</a> in the <i>AWS Key Management Service Developer Guide</i>.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairWithoutPlaintextCmdlet.EncryptionContext">
            <summary>
            <para>
            <para>Specifies the encryption context that will be used when encrypting the private key
            in the data key pair.</para><para>An <i>encryption context</i> is a collection of non-secret key-value pairs that represents
            additional authenticated data. When you use an encryption context to encrypt data,
            you must specify the same (an exact case-sensitive match) encryption context to decrypt
            the data. An encryption context is optional when encrypting with a symmetric CMK,
            but it is highly recommended.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            Context</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairWithoutPlaintextCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant
            Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairWithoutPlaintextCmdlet.KeyId">
            <summary>
            <para>
            <para>Specifies the CMK that encrypts the private key in the data key pair. You must specify
            a symmetric CMK. You cannot use an asymmetric CMK or a CMK in a custom key store.
            To get the type and origin of your CMK, use the <a>DescribeKey</a> operation. </para><para>To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias
            ARN. When using an alias name, prefix it with <code>"alias/"</code>.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairWithoutPlaintextCmdlet.KeyPairSpec">
            <summary>
            <para>
            <para>Determines the type of data key pair that is generated.</para><para>The AWS KMS rule that restricts the use of asymmetric RSA CMKs to encrypt and decrypt
            or to sign and verify (but not both), and the rule that permits you to use ECC CMKs
            only to sign and verify, are not effective outside of AWS KMS.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairWithoutPlaintextCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.GenerateDataKeyPairWithoutPlaintextResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.GenerateDataKeyPairWithoutPlaintextResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairWithoutPlaintextCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairWithoutPlaintextCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyWithoutPlaintextCmdlet">
            <summary>
            Generates a unique symmetric data key. This operation returns a data key that is encrypted
            under a customer master key (CMK) that you specify. To request an asymmetric data
            key pair, use the <a>GenerateDataKeyPair</a> or <a>GenerateDataKeyPairWithoutPlaintext</a>
            operations.
            
             
            <para><code>GenerateDataKeyWithoutPlaintext</code> is identical to the <a>GenerateDataKey</a>
            operation except that returns only the encrypted copy of the data key. This operation
            is useful for systems that need to encrypt data at some point, but not immediately.
            When you need to encrypt the data, you call the <a>Decrypt</a> operation on the encrypted
            copy of the key. 
            </para><para>
            It's also useful in distributed systems with different levels of trust. For example,
            you might store encrypted data in containers. One component of your system creates
            new containers and stores an encrypted data key with each container. Then, a different
            component puts the data into the containers. That component first decrypts the data
            key, uses the plaintext data key to encrypt data, puts the encrypted data into the
            container, and then destroys the plaintext data key. In this system, the component
            that creates the containers never sees the plaintext data key.
            </para><para><code>GenerateDataKeyWithoutPlaintext</code> returns a unique data key for each request.
            The bytes in the keys are not related to the caller or CMK that is used to encrypt
            the private key.
            </para><para>
            To generate a data key, you must specify the symmetric customer master key (CMK) that
            is used to encrypt the data key. You cannot use an asymmetric CMK to generate a data
            key. To get the type of your CMK, use the <a>DescribeKey</a> operation.
            </para><para>
            If the operation succeeds, you will find the encrypted copy of the data key in the
            <code>CiphertextBlob</code> field.
            </para><para>
            You can use the optional encryption context to add additional security to the encryption
            operation. If you specify an <code>EncryptionContext</code>, you must specify the
            same encryption context (a case-sensitive exact match) when decrypting the encrypted
            data key. Otherwise, the request to decrypt fails with an <code>InvalidCiphertextException</code>.
            For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            Context</a> in the <i>AWS Key Management Service Developer Guide</i>.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyWithoutPlaintextCmdlet.EncryptionContext">
            <summary>
            <para>
            <para>Specifies the encryption context that will be used when encrypting the data key.</para><para>An <i>encryption context</i> is a collection of non-secret key-value pairs that represents
            additional authenticated data. When you use an encryption context to encrypt data,
            you must specify the same (an exact case-sensitive match) encryption context to decrypt
            the data. An encryption context is optional when encrypting with a symmetric CMK,
            but it is highly recommended.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            Context</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyWithoutPlaintextCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant
            Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyWithoutPlaintextCmdlet.KeyId">
            <summary>
            <para>
            <para>The identifier of the symmetric customer master key (CMK) that encrypts the data key.</para><para>To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias
            ARN. When using an alias name, prefix it with <code>"alias/"</code>. To specify a
            CMK in a different AWS account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyWithoutPlaintextCmdlet.KeySpec">
            <summary>
            <para>
            <para>The length of the data key. Use <code>AES_128</code> to generate a 128-bit symmetric
            key, or <code>AES_256</code> to generate a 256-bit symmetric key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyWithoutPlaintextCmdlet.NumberOfBytes">
            <summary>
            <para>
            <para>The length of the data key in bytes. For example, use the value 64 to generate a 512-bit
            data key (64 bytes is 512 bits). For common key lengths (128-bit and 256-bit symmetric
            keys), we recommend that you use the <code>KeySpec</code> field instead of this one.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyWithoutPlaintextCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.GenerateDataKeyWithoutPlaintextResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.GenerateDataKeyWithoutPlaintextResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyWithoutPlaintextCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyWithoutPlaintextCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet">
            <summary>
            Adds a grant to a customer master key (CMK). The grant allows the grantee principal
            to use the CMK when the conditions specified in the grant are met. When setting permissions,
            grants are an alternative to key policies. 
            
             
            <para>
            To create a grant that allows a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operation</a> only when the request includes a particular <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">encryption
            context</a>, use the <code>Constraints</code> parameter. For details, see <a>GrantConstraints</a>.
            </para><para>
            You can create grants on symmetric and asymmetric CMKs. However, if the grant allows
            an operation that the CMK does not support, <code>CreateGrant</code> fails with a
            <code>ValidationException</code>. 
            </para><ul><li><para>
            Grants for symmetric CMKs cannot allow operations that are not supported for symmetric
            CMKs, including <a>Sign</a>, <a>Verify</a>, and <a>GetPublicKey</a>. (There are limited
            exceptions to this rule for legacy operations, but you should not create a grant for
            an operation that AWS KMS does not support.)
            </para></li><li><para>
            Grants for asymmetric CMKs cannot allow operations that are not supported for asymmetric
            CMKs, including operations that <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateDataKey">generate
            data keys</a> or <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateDataKeyPair">data
            key pairs</a>, or operations related to <a href="https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html">automatic
            key rotation</a>, <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">imported
            key material</a>, or CMKs in <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key stores</a>.
            </para></li><li><para>
            Grants for asymmetric CMKs with a <code>KeyUsage</code> of <code>ENCRYPT_DECRYPT</code>
            cannot allow the <a>Sign</a> or <a>Verify</a> operations. Grants for asymmetric CMKs
            with a <code>KeyUsage</code> of <code>SIGN_VERIFY</code> cannot allow the <a>Encrypt</a>
            or <a>Decrypt</a> operations.
            </para></li><li><para>
            Grants for asymmetric CMKs cannot include an encryption context grant constraint.
            An encryption context is not supported on asymmetric CMKs.
            </para></li></ul><para>
            For information about symmetric and asymmetric CMKs, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
            Symmetric and Asymmetric CMKs</a> in the <i>AWS Key Management Service Developer Guide</i>.
            </para><para>
            To perform this operation on a CMK in a different AWS account, specify the key ARN
            in the value of the <code>KeyId</code> parameter. For more information about grants,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html">Grants</a>
            in the <i><i>AWS Key Management Service Developer Guide</i></i>.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet.Constraints_EncryptionContextEqual">
            <summary>
            <para>
            <para>A list of key-value pairs that must match the encryption context in the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operation</a> request. The grant allows the operation only when the encryption context
            in the request is the same as the encryption context specified in this constraint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet.Constraints_EncryptionContextSubset">
            <summary>
            <para>
            <para>A list of key-value pairs that must be included in the encryption context of the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operation</a> request. The grant allows the cryptographic operation only when the
            encryption context in the request includes the key-value pairs specified in this constraint,
            although it can include additional key-value pairs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet.GranteePrincipal">
            <summary>
            <para>
            <para>The principal that is given permission to perform the operations that the grant permits.</para><para>To specify the principal, use the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of an AWS principal. Valid AWS principals include AWS accounts
            (root), IAM users, IAM roles, federated users, and assumed role users. For examples
            of the ARN syntax to use for specifying a principal, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-iam">AWS
            Identity and Access Management (IAM)</a> in the Example ARNs section of the <i>AWS
            General Reference</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant
            Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet.KeyId">
            <summary>
            <para>
            <para>The unique identifier for the customer master key (CMK) that the grant applies to.</para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK. To specify a CMK
            in a different AWS account, you must use the key ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet.Name">
            <summary>
            <para>
            <para>A friendly name for identifying the grant. Use this value to prevent the unintended
            creation of duplicate grants when retrying this request.</para><para>When this value is absent, all <code>CreateGrant</code> requests result in a new grant
            with a unique <code>GrantId</code> even if all the supplied parameters are identical.
            This can result in unintended duplicates when you retry the <code>CreateGrant</code>
            request.</para><para>When this value is present, you can retry a <code>CreateGrant</code> request with
            identical parameters; if the grant already exists, the original <code>GrantId</code>
            is returned without creating a new grant. Note that the returned grant token is unique
            with every <code>CreateGrant</code> request, even when a duplicate <code>GrantId</code>
            is returned. All grant tokens obtained in this way can be used interchangeably.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet.Operation">
            <summary>
            <para>
            <para>A list of operations that the grant permits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet.RetiringPrincipal">
            <summary>
            <para>
            <para>The principal that is given permission to retire the grant by using <a>RetireGrant</a>
            operation.</para><para>To specify the principal, use the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of an AWS principal. Valid AWS principals include AWS accounts
            (root), IAM users, federated users, and assumed role users. For examples of the ARN
            syntax to use for specifying a principal, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-iam">AWS
            Identity and Access Management (IAM)</a> in the Example ARNs section of the <i>AWS
            General Reference</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.CreateGrantResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.CreateGrantResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet">
            <summary>
            Creates a unique customer managed <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master-keys">customer
            master key</a> (CMK) in your AWS account and Region. You cannot use this operation
            to create a CMK in a different AWS account.
            
             
            <para>
            You can use the <code>CreateKey</code> operation to create symmetric or asymmetric
            CMKs.
            </para><ul><li><para><b>Symmetric CMKs</b> contain a 256-bit symmetric key that never leaves AWS KMS unencrypted.
            To use the CMK, you must call AWS KMS. You can use a symmetric CMK to encrypt and
            decrypt small amounts of data, but they are typically used to generate <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#data-keys">data
            keys</a> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#data-key-pairs">data
            keys pairs</a>. For details, see <a>GenerateDataKey</a> and <a>GenerateDataKeyPair</a>.
            </para></li><li><para><b>Asymmetric CMKs</b> can contain an RSA key pair or an Elliptic Curve (ECC) key
            pair. The private key in an asymmetric CMK never leaves AWS KMS unencrypted. However,
            you can use the <a>GetPublicKey</a> operation to download the public key so it can
            be used outside of AWS KMS. CMKs with RSA key pairs can be used to encrypt or decrypt
            data or sign and verify messages (but not both). CMKs with ECC key pairs can be used
            only to sign and verify messages.
            </para></li></ul><para>
            For information about symmetric and asymmetric CMKs, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
            Symmetric and Asymmetric CMKs</a> in the <i>AWS Key Management Service Developer Guide</i>.
            </para><para>
            To create different types of CMKs, use the following guidance:
            </para><dl><dt>Asymmetric CMKs</dt><dd><para>
            To create an asymmetric CMK, use the <code>CustomerMasterKeySpec</code> parameter
            to specify the type of key material in the CMK. Then, use the <code>KeyUsage</code>
            parameter to determine whether the CMK will be used to encrypt and decrypt or sign
            and verify. You can't change these properties after the CMK is created.
            </para><para></para></dd><dt>Symmetric CMKs</dt><dd><para>
            When creating a symmetric CMK, you don't need to specify the <code>CustomerMasterKeySpec</code>
            or <code>KeyUsage</code> parameters. The default value for <code>CustomerMasterKeySpec</code>,
            <code>SYMMETRIC_DEFAULT</code>, and the default value for <code>KeyUsage</code>, <code>ENCRYPT_DECRYPT</code>,
            are the only valid values for symmetric CMKs. 
            </para><para></para></dd><dt>Imported Key Material</dt><dd><para>
            To import your own key material, begin by creating a symmetric CMK with no key material.
            To do this, use the <code>Origin</code> parameter of <code>CreateKey</code> with a
            value of <code>EXTERNAL</code>. Next, use <a>GetParametersForImport</a> operation
            to get a public key and import token, and use the public key to encrypt your key material.
            Then, use <a>ImportKeyMaterial</a> with your import token to import the key material.
            For step-by-step instructions, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing
            Key Material</a> in the <i><i>AWS Key Management Service Developer Guide</i></i>.
            You cannot import the key material into an asymmetric CMK.
            </para><para></para></dd><dt>Custom Key Stores</dt><dd><para>
            To create a symmetric CMK in a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a>, use the <code>CustomKeyStoreId</code> parameter to specify the custom
            key store. You must also use the <code>Origin</code> parameter with a value of <code>AWS_CLOUDHSM</code>.
            The AWS CloudHSM cluster that is associated with the custom key store must have at
            least two active HSMs in different Availability Zones in the AWS Region. 
            </para><para>
            You cannot create an asymmetric CMK in a custom key store. For information about custom
            key stores in AWS KMS see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">Using
            Custom Key Stores</a> in the <i><i>AWS Key Management Service Developer Guide</i></i>.
            </para></dd></dl>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.BypassPolicyLockoutSafetyCheck">
            <summary>
            <para>
            <para>A flag to indicate whether to bypass the key policy lockout safety check.</para><important><para>Setting this value to true increases the risk that the CMK becomes unmanageable. Do
            not set this value to true indiscriminately.</para><para>For more information, refer to the scenario in the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam">Default
            Key Policy</a> section in the <i><i>AWS Key Management Service Developer Guide</i></i>.</para></important><para>Use this parameter only when you include a policy in the request and you intend to
            prevent the principal that is making the request from making a subsequent <a>PutKeyPolicy</a>
            request on the CMK.</para><para>The default value is false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.CustomerMasterKeySpec">
            <summary>
            <para>
            <para>Specifies the type of CMK to create. The default value, <code>SYMMETRIC_DEFAULT</code>,
            creates a CMK with a 256-bit symmetric key for encryption and decryption. For help
            choosing a key spec for your CMK, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-choose.html">How
            to Choose Your CMK Configuration</a> in the <i>AWS Key Management Service Developer
            Guide</i>.</para><para>The <code>CustomerMasterKeySpec</code> determines whether the CMK contains a symmetric
            key or an asymmetric key pair. It also determines the encryption algorithms or signing
            algorithms that the CMK supports. You can't change the <code>CustomerMasterKeySpec</code>
            after the CMK is created. To further restrict the algorithms that can be used with
            the CMK, use a condition key in its key policy or IAM policy. For more information,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms-encryption-algorithm">kms:EncryptionAlgorithm</a>
            or <a href="https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms-signing-algorithm">kms:Signing
            Algorithm</a> in the <i>AWS Key Management Service Developer Guide</i>.</para><important><para><a href="http://aws.amazon.com/kms/features/#AWS_Service_Integration">AWS services
            that are integrated with AWS KMS</a> use symmetric CMKs to protect your data. These
            services do not support asymmetric CMKs. For help determining whether a CMK is symmetric
            or asymmetric, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/find-symm-asymm.html">Identifying
            Symmetric and Asymmetric CMKs</a> in the <i>AWS Key Management Service Developer Guide</i>.</para></important><para>AWS KMS supports the following key specs for CMKs:</para><ul><li><para>Symmetric key (default)</para><ul><li><para><code>SYMMETRIC_DEFAULT</code> (AES-256-GCM)</para></li></ul></li><li><para>Asymmetric RSA key pairs</para><ul><li><para><code>RSA_2048</code></para></li><li><para><code>RSA_3072</code></para></li><li><para><code>RSA_4096</code></para></li></ul></li><li><para>Asymmetric NIST-recommended elliptic curve key pairs</para><ul><li><para><code>ECC_NIST_P256</code> (secp256r1)</para></li><li><para><code>ECC_NIST_P384</code> (secp384r1)</para></li><li><para><code>ECC_NIST_P521</code> (secp521r1)</para></li></ul></li><li><para>Other asymmetric elliptic curve key pairs</para><ul><li><para><code>ECC_SECG_P256K1</code> (secp256k1), commonly used for cryptocurrencies.</para></li></ul></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.CustomKeyStoreId">
            <summary>
            <para>
            <para>Creates the CMK in the specified <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a> and the key material in its associated AWS CloudHSM cluster. To create
            a CMK in a custom key store, you must also specify the <code>Origin</code> parameter
            with a value of <code>AWS_CLOUDHSM</code>. The AWS CloudHSM cluster that is associated
            with the custom key store must have at least two active HSMs, each in a different
            Availability Zone in the Region.</para><para>This parameter is valid only for symmetric CMKs. You cannot create an asymmetric CMK
            in a custom key store.</para><para>To find the ID of a custom key store, use the <a>DescribeCustomKeyStores</a> operation.</para><para>The response includes the custom key store ID and the ID of the AWS CloudHSM cluster.</para><para>This operation is part of the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">Custom
            Key Store feature</a> feature in AWS KMS, which combines the convenience and extensive
            integration of AWS KMS with the isolation and control of a single-tenant key store.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.Description">
            <summary>
            <para>
            <para>A description of the CMK.</para><para>Use a description that helps you decide whether the CMK is appropriate for a task.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.KeyUsage">
            <summary>
            <para>
            <para>Determines the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operations</a> for which you can use the CMK. The default value is <code>ENCRYPT_DECRYPT</code>.
            This parameter is required only for asymmetric CMKs. You can't change the <code>KeyUsage</code>
            value after the CMK is created.</para><para>Select only one valid value.</para><ul><li><para>For symmetric CMKs, omit the parameter or specify <code>ENCRYPT_DECRYPT</code>.</para></li><li><para>For asymmetric CMKs with RSA key material, specify <code>ENCRYPT_DECRYPT</code> or
            <code>SIGN_VERIFY</code>.</para></li><li><para>For asymmetric CMKs with ECC key material, specify <code>SIGN_VERIFY</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.Origin">
            <summary>
            <para>
            <para>The source of the key material for the CMK. You cannot change the origin after you
            create the CMK. The default is <code>AWS_KMS</code>, which means AWS KMS creates the
            key material.</para><para>When the parameter value is <code>EXTERNAL</code>, AWS KMS creates a CMK without key
            material so that you can import key material from your existing key management infrastructure.
            For more information about importing key material into AWS KMS, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing
            Key Material</a> in the <i>AWS Key Management Service Developer Guide</i>. This value
            is valid only for symmetric CMKs.</para><para>When the parameter value is <code>AWS_CLOUDHSM</code>, AWS KMS creates the CMK in
            an AWS KMS <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a> and creates its key material in the associated AWS CloudHSM cluster.
            You must also use the <code>CustomKeyStoreId</code> parameter to identify the custom
            key store. This value is valid only for symmetric CMKs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.Policy">
            <summary>
            <para>
            <para>The key policy to attach to the CMK.</para><para>If you provide a key policy, it must meet the following criteria:</para><ul><li><para>If you don't set <code>BypassPolicyLockoutSafetyCheck</code> to true, the key policy
            must allow the principal that is making the <code>CreateKey</code> request to make
            a subsequent <a>PutKeyPolicy</a> request on the CMK. This reduces the risk that the
            CMK becomes unmanageable. For more information, refer to the scenario in the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam">Default
            Key Policy</a> section of the <i><i>AWS Key Management Service Developer Guide</i></i>.</para></li><li><para>Each statement in the key policy must contain one or more principals. The principals
            in the key policy must exist and be visible to AWS KMS. When you create a new AWS
            principal (for example, an IAM user or role), you might need to enforce a delay before
            including the new principal in a key policy because the new principal might not be
            immediately visible to AWS KMS. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency">Changes
            that I make are not always immediately visible</a> in the <i>AWS Identity and Access
            Management User Guide</i>.</para></li></ul><para>If you do not provide a key policy, AWS KMS attaches a default key policy to the CMK.
            For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default">Default
            Key Policy</a> in the <i>AWS Key Management Service Developer Guide</i>.</para><para>The key policy size quota is 32 kilobytes (32768 bytes).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.Tag">
            <summary>
            <para>
            <para>One or more tags. Each tag consists of a tag key and a tag value. Both the tag key
            and the tag value are required, but the tag value can be an empty (null) string.</para><para>When you add tags to an AWS resource, AWS generates a cost allocation report with
            usage and costs aggregated by tags. For information about adding, changing, deleting
            and listing tags for CMKs, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/tagging-keys.html">Tagging
            Keys</a>.</para><para>Use this parameter to tag the CMK when it is created. To add tags to an existing CMK,
            use the <a>TagResource</a> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'KeyMetadata'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.CreateKeyResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.CreateKeyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.NewKMSRandomCmdlet">
            <summary>
            Returns a random byte string that is cryptographically secure.
            
             
            <para>
            By default, the random byte string is generated in AWS KMS. To generate the byte string
            in the AWS CloudHSM cluster that is associated with a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a>, specify the custom key store ID.
            </para><para>
            For more information about entropy and random number generation, see the <a href="https://d0.awsstatic.com/whitepapers/KMS-Cryptographic-Details.pdf">AWS
            Key Management Service Cryptographic Details</a> whitepaper.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSRandomCmdlet.CustomKeyStoreId">
            <summary>
            <para>
            <para>Generates the random byte string in the AWS CloudHSM cluster that is associated with
            the specified <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a>. To find the ID of a custom key store, use the <a>DescribeCustomKeyStores</a>
            operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSRandomCmdlet.NumberOfBytes">
            <summary>
            <para>
            <para>The length of the byte string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSRandomCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Plaintext'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.GenerateRandomResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.GenerateRandomResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSRandomCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NumberOfBytes parameter.
            The -PassThru parameter is deprecated, use -Select '^NumberOfBytes' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSRandomCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSAliasCmdlet">
            <summary>
            Deletes the specified alias. You cannot perform this operation on an alias in a different
            AWS account. 
            
             
            <para>
            Because an alias is not a property of a CMK, you can delete and change the aliases
            of a CMK without affecting the CMK. Also, aliases do not appear in the response from
            the <a>DescribeKey</a> operation. To get the aliases of all CMKs, use the <a>ListAliases</a>
            operation. 
            </para><para>
            Each CMK can have multiple aliases. To change the alias of a CMK, use <a>DeleteAlias</a>
            to delete the current alias and <a>CreateAlias</a> to create a new alias. To associate
            an existing alias with a different customer master key (CMK), call <a>UpdateAlias</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSAliasCmdlet.AliasName">
            <summary>
            <para>
            <para>The alias to be deleted. The alias name must begin with <code>alias/</code> followed
            by the alias name, such as <code>alias/ExampleAlias</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.DeleteAliasResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AliasName parameter.
            The -PassThru parameter is deprecated, use -Select '^AliasName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSCustomKeyStoreCmdlet">
            <summary>
            Deletes a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a>. This operation does not delete the AWS CloudHSM cluster that is associated
            with the custom key store, or affect any users or keys in the cluster.
            
             
            <para>
            The custom key store that you delete cannot contain any AWS KMS <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys">customer
            master keys (CMKs)</a>. Before deleting the key store, verify that you will never
            need to use any of the CMKs in the key store for any <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operations</a>. Then, use <a>ScheduleKeyDeletion</a> to delete the AWS KMS customer
            master keys (CMKs) from the key store. When the scheduled waiting period expires,
            the <code>ScheduleKeyDeletion</code> operation deletes the CMKs. Then it makes a best
            effort to delete the key material from the associated cluster. However, you might
            need to manually <a href="https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html#fix-keystore-orphaned-key">delete
            the orphaned key material</a> from the cluster and its backups.
            </para><para>
            After all CMKs are deleted from AWS KMS, use <a>DisconnectCustomKeyStore</a> to disconnect
            the key store from AWS KMS. Then, you can delete the custom key store.
            </para><para>
            Instead of deleting the custom key store, consider using <a>DisconnectCustomKeyStore</a>
            to disconnect it from AWS KMS. While the key store is disconnected, you cannot create
            or use the CMKs in the key store. But, you do not need to delete CMKs and you can
            reconnect a disconnected custom key store at any time.
            </para><para>
            If the operation succeeds, it returns a JSON object with no properties.
            </para><para>
            This operation is part of the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">Custom
            Key Store feature</a> feature in AWS KMS, which combines the convenience and extensive
            integration of AWS KMS with the isolation and control of a single-tenant key store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSCustomKeyStoreCmdlet.CustomKeyStoreId">
            <summary>
            <para>
            <para>Enter the ID of the custom key store you want to delete. To find the ID of a custom
            key store, use the <a>DescribeCustomKeyStores</a> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSCustomKeyStoreCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.DeleteCustomKeyStoreResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSCustomKeyStoreCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CustomKeyStoreId parameter.
            The -PassThru parameter is deprecated, use -Select '^CustomKeyStoreId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSCustomKeyStoreCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSImportedKeyMaterialCmdlet">
            <summary>
            Deletes key material that you previously imported. This operation makes the specified
            customer master key (CMK) unusable. For more information about importing key material
            into AWS KMS, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing
            Key Material</a> in the <i>AWS Key Management Service Developer Guide</i>. You cannot
            perform this operation on a CMK in a different AWS account.
            
             
            <para>
            When the specified CMK is in the <code>PendingDeletion</code> state, this operation
            does not change the CMK's state. Otherwise, it changes the CMK's state to <code>PendingImport</code>.
            </para><para>
            After you delete key material, you can use <a>ImportKeyMaterial</a> to reimport the
            same key material into the CMK.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSImportedKeyMaterialCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies the CMK from which you are deleting imported key material. The <code>Origin</code>
            of the CMK must be <code>EXTERNAL</code>.</para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSImportedKeyMaterialCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.DeleteImportedKeyMaterialResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSImportedKeyMaterialCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSImportedKeyMaterialCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSResourceTagCmdlet">
            <summary>
            Removes the specified tags from the specified customer master key (CMK). You cannot
            perform this operation on a CMK in a different AWS account.
            
             
            <para>
            To remove a tag, specify the tag key. To change the tag value of an existing tag key,
            use <a>TagResource</a>.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSResourceTagCmdlet.KeyId">
            <summary>
            <para>
            <para>A unique identifier for the CMK from which you are removing tags.</para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>One or more tag keys. Specify only the tag keys, not the tag values.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.RequestKMSKeyDeletionCmdlet">
            <summary>
            Schedules the deletion of a customer master key (CMK). You may provide a waiting period,
            specified in days, before deletion occurs. If you do not provide a waiting period,
            the default period of 30 days is used. When this operation is successful, the key
            state of the CMK changes to <code>PendingDeletion</code>. Before the waiting period
            ends, you can use <a>CancelKeyDeletion</a> to cancel the deletion of the CMK. After
            the waiting period ends, AWS KMS deletes the CMK and all AWS KMS data associated with
            it, including all aliases that refer to it.
            
             <important><para>
            Deleting a CMK is a destructive and potentially dangerous operation. When a CMK is
            deleted, all data that was encrypted under the CMK is unrecoverable. To prevent the
            use of a CMK without deleting it, use <a>DisableKey</a>.
            </para></important><para>
            If you schedule deletion of a CMK from a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a>, when the waiting period expires, <code>ScheduleKeyDeletion</code> deletes
            the CMK from AWS KMS. Then AWS KMS makes a best effort to delete the key material
            from the associated AWS CloudHSM cluster. However, you might need to manually <a href="https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html#fix-keystore-orphaned-key">delete
            the orphaned key material</a> from the cluster and its backups.
            </para><para>
            You cannot perform this operation on a CMK in a different AWS account.
            </para><para>
            For more information about scheduling a CMK for deletion, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html">Deleting
            Customer Master Keys</a> in the <i>AWS Key Management Service Developer Guide</i>.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RequestKMSKeyDeletionCmdlet.KeyId">
            <summary>
            <para>
            <para>The unique identifier of the customer master key (CMK) to delete.</para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RequestKMSKeyDeletionCmdlet.PendingWindowInDay">
            <summary>
            <para>
            <para>The waiting period, specified in number of days. After the waiting period ends, AWS
            KMS deletes the customer master key (CMK).</para><para>This value is optional. If you include a value, it must be between 7 and 30, inclusive.
            If you do not include a value, it defaults to 30.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RequestKMSKeyDeletionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ScheduleKeyDeletionResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.ScheduleKeyDeletionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RequestKMSKeyDeletionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RequestKMSKeyDeletionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.RevokeKMSGrantCmdlet">
            <summary>
            Revokes the specified grant for the specified customer master key (CMK). You can revoke
            a grant to actively deny operations that depend on it.
            
             
            <para>
            To perform this operation on a CMK in a different AWS account, specify the key ARN
            in the value of the <code>KeyId</code> parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RevokeKMSGrantCmdlet.GrantId">
            <summary>
            <para>
            <para>Identifier of the grant to be revoked.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RevokeKMSGrantCmdlet.KeyId">
            <summary>
            <para>
            <para>A unique identifier for the customer master key associated with the grant.</para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK. To specify a CMK
            in a different AWS account, you must use the key ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RevokeKMSGrantCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.RevokeGrantResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RevokeKMSGrantCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RevokeKMSGrantCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.StopKMSKeyDeletionCmdlet">
            <summary>
            Cancels the deletion of a customer master key (CMK). When this operation succeeds,
            the key state of the CMK is <code>Disabled</code>. To enable the CMK, use <a>EnableKey</a>.
            You cannot perform this operation on a CMK in a different AWS account.
            
             
            <para>
            For more information about scheduling and canceling deletion of a CMK, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html">Deleting
            Customer Master Keys</a> in the <i>AWS Key Management Service Developer Guide</i>.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.StopKMSKeyDeletionCmdlet.KeyId">
            <summary>
            <para>
            <para>The unique identifier for the customer master key (CMK) for which to cancel deletion.</para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.StopKMSKeyDeletionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'KeyId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.CancelKeyDeletionResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.CancelKeyDeletionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.StopKMSKeyDeletionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.StopKMSKeyDeletionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.TestKMSSignatureCmdlet">
            <summary>
            Verifies a digital signature that was generated by the <a>Sign</a> operation. 
            
              
            <para>
            Verification confirms that an authorized user signed the message with the specified
            CMK and signing algorithm, and the message hasn't changed since it was signed. If
            the signature is verified, the value of the <code>SignatureValid</code> field in the
            response is <code>True</code>. If the signature verification fails, the <code>Verify</code>
            operation fails with an <code>KMSInvalidSignatureException</code> exception.
            </para><para>
            A digital signature is generated by using the private key in an asymmetric CMK. The
            signature is verified by using the public key in the same asymmetric CMK. For information
            about symmetric and asymmetric CMKs, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
            Symmetric and Asymmetric CMKs</a> in the <i>AWS Key Management Service Developer Guide</i>.
            </para><para>
            To verify a digital signature, you can use the <code>Verify</code> operation. Specify
            the same asymmetric CMK, message, and signing algorithm that were used to produce
            the signature.
            </para><para>
            You can also verify the digital signature by using the public key of the CMK outside
            of AWS KMS. Use the <a>GetPublicKey</a> operation to download the public key in the
            asymmetric CMK and then use the public key to verify the signature outside of AWS
            KMS. The advantage of using the <code>Verify</code> operation is that it is performed
            within AWS KMS. As a result, it's easy to call, the operation is performed within
            the FIPS boundary, it is logged in AWS CloudTrail, and you can use key policy and
            IAM policy to determine who is authorized to use the CMK to verify signatures.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSSignatureCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant
            Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSSignatureCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies the asymmetric CMK that will be used to verify the signature. This must
            be the same CMK that was used to generate the signature. If you specify a different
            CMK, the signature verification fails.</para><para>To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias
            ARN. When using an alias name, prefix it with <code>"alias/"</code>. To specify a
            CMK in a different AWS account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSSignatureCmdlet.Message">
            <summary>
            <para>
            <para>Specifies the message that was signed. You can submit a raw message of up to 4096
            bytes, or a hash digest of the message. If you submit a digest, use the <code>MessageType</code>
            parameter with a value of <code>DIGEST</code>.</para><para>If the message specified here is different from the message that was signed, the signature
            verification fails. A message and its hash digest are considered to be the same message.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSSignatureCmdlet.MessageType">
            <summary>
            <para>
            <para>Tells AWS KMS whether the value of the <code>Message</code> parameter is a message
            or message digest. The default value, RAW, indicates a message. To indicate a message
            digest, enter <code>DIGEST</code>.</para><important><para>Use the <code>DIGEST</code> value only when the value of the <code>Message</code>
            parameter is a message digest. If you use the <code>DIGEST</code> value with a raw
            message, the security of the verification operation can be compromised.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSSignatureCmdlet.Signature">
            <summary>
            <para>
            <para>The signature that the <code>Sign</code> operation generated.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSSignatureCmdlet.SigningAlgorithm">
            <summary>
            <para>
            <para>The signing algorithm that was used to sign the message. If you submit a different
            algorithm, the signature verification fails.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSSignatureCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SignatureValid'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.VerifyResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.VerifyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSSignatureCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Message parameter.
            The -PassThru parameter is deprecated, use -Select '^Message' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSAliasCmdlet">
            <summary>
            Associates an existing AWS KMS alias with a different customer master key (CMK). Each
            alias is associated with only one CMK at a time, although a CMK can have multiple
            aliases. The alias and the CMK must be in the same AWS account and region. You cannot
            perform this operation on an alias in a different AWS account. 
            
             
            <para>
            The current and new CMK must be the same type (both symmetric or both asymmetric),
            and they must have the same key usage (<code>ENCRYPT_DECRYPT</code> or <code>SIGN_VERIFY</code>).
            This restriction prevents errors in code that uses aliases. If you must assign an
            alias to a different type of CMK, use <a>DeleteAlias</a> to delete the old alias and
            <a>CreateAlias</a> to create a new alias.
            </para><para>
            You cannot use <code>UpdateAlias</code> to change an alias name. To change an alias
            name, use <a>DeleteAlias</a> to delete the old alias and <a>CreateAlias</a> to create
            a new alias.
            </para><para>
            Because an alias is not a property of a CMK, you can create, update, and delete the
            aliases of a CMK without affecting the CMK. Also, aliases do not appear in the response
            from the <a>DescribeKey</a> operation. To get the aliases of all CMKs in the account,
            use the <a>ListAliases</a> operation. 
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSAliasCmdlet.AliasName">
            <summary>
            <para>
            <para>Identifies the alias that is changing its CMK. This value must begin with <code>alias/</code>
            followed by the alias name, such as <code>alias/ExampleAlias</code>. You cannot use
            UpdateAlias to change the alias name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSAliasCmdlet.TargetKeyId">
            <summary>
            <para>
            <para>Identifies the CMK to associate with the alias. When the update operation completes,
            the alias will point to this CMK. </para><para>The CMK must be in the same AWS account and Region as the alias. Also, the new target
            CMK must be the same type as the current target CMK (both symmetric or both asymmetric)
            and they must have the same key usage. </para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para><para>To verify that the alias is mapped to the correct CMK, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.UpdateAliasResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TargetKeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^TargetKeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSCustomKeyStoreCmdlet">
            <summary>
            Changes the properties of a custom key store. Use the <code>CustomKeyStoreId</code>
            parameter to identify the custom key store you want to edit. Use the remaining parameters
            to change the properties of the custom key store.
            
             
            <para>
            You can only update a custom key store that is disconnected. To disconnect the custom
            key store, use <a>DisconnectCustomKeyStore</a>. To reconnect the custom key store
            after the update completes, use <a>ConnectCustomKeyStore</a>. To find the connection
            state of a custom key store, use the <a>DescribeCustomKeyStores</a> operation.
            </para><para>
            Use the parameters of <code>UpdateCustomKeyStore</code> to edit your keystore settings.
            </para><ul><li><para>
            Use the <b>NewCustomKeyStoreName</b> parameter to change the friendly name of the
            custom key store to the value that you specify.
            </para><para></para></li><li><para>
            Use the <b>KeyStorePassword</b> parameter tell AWS KMS the current password of the
            <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"><code>kmsuser</code> crypto user (CU)</a> in the associated AWS CloudHSM cluster.
            You can use this parameter to <a href="https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html#fix-keystore-password">fix
            connection failures</a> that occur when AWS KMS cannot log into the associated cluster
            because the <code>kmsuser</code> password has changed. This value does not change
            the password in the AWS CloudHSM cluster.
            </para><para></para></li><li><para>
            Use the <b>CloudHsmClusterId</b> parameter to associate the custom key store with
            a different, but related, AWS CloudHSM cluster. You can use this parameter to repair
            a custom key store if its AWS CloudHSM cluster becomes corrupted or is deleted, or
            when you need to create or restore a cluster from a backup. 
            </para></li></ul><para>
            If the operation succeeds, it returns a JSON object with no properties.
            </para><para>
            This operation is part of the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">Custom
            Key Store feature</a> feature in AWS KMS, which combines the convenience and extensive
            integration of AWS KMS with the isolation and control of a single-tenant key store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSCustomKeyStoreCmdlet.CloudHsmClusterId">
            <summary>
            <para>
            <para>Associates the custom key store with a related AWS CloudHSM cluster. </para><para>Enter the cluster ID of the cluster that you used to create the custom key store or
            a cluster that shares a backup history and has the same cluster certificate as the
            original cluster. You cannot use this parameter to associate a custom key store with
            an unrelated cluster. In addition, the replacement cluster must <a href="https://docs.aws.amazon.com/kms/latest/developerguide/create-keystore.html#before-keystore">fulfill
            the requirements</a> for a cluster associated with a custom key store. To view the
            cluster certificate of a cluster, use the <a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html">DescribeClusters</a>
            operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSCustomKeyStoreCmdlet.CustomKeyStoreId">
            <summary>
            <para>
            <para>Identifies the custom key store that you want to update. Enter the ID of the custom
            key store. To find the ID of a custom key store, use the <a>DescribeCustomKeyStores</a>
            operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSCustomKeyStoreCmdlet.KeyStorePassword">
            <summary>
            <para>
            <para>Enter the current password of the <code>kmsuser</code> crypto user (CU) in the AWS
            CloudHSM cluster that is associated with the custom key store.</para><para>This parameter tells AWS KMS the current password of the <code>kmsuser</code> crypto
            user (CU). It does not set or change the password of any users in the AWS CloudHSM
            cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSCustomKeyStoreCmdlet.NewCustomKeyStoreName">
            <summary>
            <para>
            <para>Changes the friendly name of the custom key store to the value that you specify. The
            custom key store name must be unique in the AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSCustomKeyStoreCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.UpdateCustomKeyStoreResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSCustomKeyStoreCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CustomKeyStoreId parameter.
            The -PassThru parameter is deprecated, use -Select '^CustomKeyStoreId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSCustomKeyStoreCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSKeyDescriptionCmdlet">
            <summary>
            Updates the description of a customer master key (CMK). To see the description of
            a CMK, use <a>DescribeKey</a>. 
            
             
            <para>
            You cannot perform this operation on a CMK in a different AWS account.
            </para><para>
            The CMK that you use for this operation must be in a compatible key state. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSKeyDescriptionCmdlet.Description">
            <summary>
            <para>
            <para>New description for the CMK.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSKeyDescriptionCmdlet.KeyId">
            <summary>
            <para>
            <para>A unique identifier for the customer master key (CMK).</para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSKeyDescriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.UpdateKeyDescriptionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSKeyDescriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSKeyDescriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.WriteKMSKeyPolicyCmdlet">
            <summary>
            Attaches a key policy to the specified customer master key (CMK). You cannot perform
            this operation on a CMK in a different AWS account.
            
             
            <para>
            For more information about key policies, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">Key
            Policies</a> in the <i>AWS Key Management Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.WriteKMSKeyPolicyCmdlet.BypassPolicyLockoutSafetyCheck">
            <summary>
            <para>
            <para>A flag to indicate whether to bypass the key policy lockout safety check.</para><important><para>Setting this value to true increases the risk that the CMK becomes unmanageable. Do
            not set this value to true indiscriminately.</para><para>For more information, refer to the scenario in the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam">Default
            Key Policy</a> section in the <i>AWS Key Management Service Developer Guide</i>.</para></important><para>Use this parameter only when you intend to prevent the principal that is making the
            request from making a subsequent <code>PutKeyPolicy</code> request on the CMK.</para><para>The default value is false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.WriteKMSKeyPolicyCmdlet.KeyId">
            <summary>
            <para>
            <para>A unique identifier for the customer master key (CMK).</para><para>Specify the key ID or the Amazon Resource Name (ARN) of the CMK.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.WriteKMSKeyPolicyCmdlet.Policy">
            <summary>
            <para>
            <para>The key policy to attach to the CMK.</para><para>The key policy must meet the following criteria:</para><ul><li><para>If you don't set <code>BypassPolicyLockoutSafetyCheck</code> to true, the key policy
            must allow the principal that is making the <code>PutKeyPolicy</code> request to make
            a subsequent <code>PutKeyPolicy</code> request on the CMK. This reduces the risk that
            the CMK becomes unmanageable. For more information, refer to the scenario in the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam">Default
            Key Policy</a> section of the <i>AWS Key Management Service Developer Guide</i>.</para></li><li><para>Each statement in the key policy must contain one or more principals. The principals
            in the key policy must exist and be visible to AWS KMS. When you create a new AWS
            principal (for example, an IAM user or role), you might need to enforce a delay before
            including the new principal in a key policy because the new principal might not be
            immediately visible to AWS KMS. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency">Changes
            that I make are not always immediately visible</a> in the <i>AWS Identity and Access
            Management User Guide</i>.</para></li></ul><para>The key policy cannot exceed 32 kilobytes (32768 bytes). For more information, see
            <a href="https://docs.aws.amazon.com/kms/latest/developerguide/resource-limits.html">Resource
            Quotas</a> in the <i>AWS Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.WriteKMSKeyPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The name of the key policy. The only valid value is <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.WriteKMSKeyPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.PutKeyPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.WriteKMSKeyPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.WriteKMSKeyPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
