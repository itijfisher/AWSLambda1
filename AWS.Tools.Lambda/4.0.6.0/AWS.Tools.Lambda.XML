<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.Lambda</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet">
            <summary>
            Creates a Lambda function. To create a function, you need a <a href="https://docs.aws.amazon.com/lambda/latest/dg/deployment-package-v2.html">deployment
            package</a> and an <a href="https://docs.aws.amazon.com/lambda/latest/dg/intro-permission-model.html#lambda-intro-execution-role">execution
            role</a>. The deployment package contains your function code. The execution role grants
            the function permission to use AWS services, such as Amazon CloudWatch Logs for log
            streaming and AWS X-Ray for request tracing.
            
             
            <para>
            When you create a function, Lambda provisions an instance of the function and its
            supporting resources. If your function connects to a VPC, this process can take a
            minute or so. During this time, you can't invoke or modify the function. The <code>State</code>,
            <code>StateReason</code>, and <code>StateReasonCode</code> fields in the response
            from <a>GetFunctionConfiguration</a> indicate when the function is ready to invoke.
            For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/functions-states.html">Function
            States</a>.
            </para><para>
            A function has an unpublished version, and can have published versions and aliases.
            The unpublished version changes when you update your function's code and configuration.
            A published version is a snapshot of your function code and configuration that can't
            be changed. An alias is a named resource that maps to a version, and can be changed
            to map to a different version. Use the <code>Publish</code> parameter to create version
            <code>1</code> of your function from its initial configuration.
            </para><para>
            The other parameters let you configure version-specific and function-level settings.
            You can modify version-specific settings later with <a>UpdateFunctionConfiguration</a>.
            Function-level settings apply to both the unpublished and published versions of the
            function, and include tags (<a>TagResource</a>) and per-function concurrency limits
            (<a>PutFunctionConcurrency</a>).
            </para><para>
            If another account or an AWS service invokes your function, use <a>AddPermission</a>
            to grant permission by creating a resource-based IAM policy. You can grant permissions
            at the function level, on a version, or on an alias.
            </para><para>
            To invoke your function directly, use <a>Invoke</a>. To invoke your function in response
            to events in other AWS services, create an event source mapping (<a>CreateEventSourceMapping</a>),
            or configure a function trigger in the other service. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-invocation.html">Invoking
            Functions</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.ZipFilename">
            <summary>
            <para>
            This parameter is obsolete and will be removed in a future version. Use 'Code_ZipFile' instead.
            The path to a zip file containing your deployment package. For more information about creating a .zip file,
            go to <a href="http://docs.aws.amazon.com/lambda/latest/dg/intro-permission-model.html#lambda-intro-execution-role.html">Execution
            Permissions</a> in the <i>AWS Lambda Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.Publish">
            <summary>
            <para>
            This parameter is obsolete. Use PublishVersion instead.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.Description">
            <summary>
            <para>
            <para>A description of the function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.CreateFunctionRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.Handler">
            <summary>
            <para>
            <para>The name of the method within your code that Lambda calls to execute your function.
            The format includes the file name. It can also include namespaces and other qualifiers,
            depending on the runtime. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/programming-model-v2.html">Programming
            Model</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.Environment_IsVariablesSet">
            <summary>
            <para>
            This property is set to true if the property <seealso cref="P:Amazon.Lambda.Model.Environment.Variables" />
            is set; false otherwise.
            This property can be used to determine if the related property
            was returned by a service response or if the related property
            should be sent to the service during a service call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.KMSKeyArn">
            <summary>
            <para>
            <para>The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your
            function's environment variables. If it's not provided, AWS Lambda uses a default
            service key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.Layer">
            <summary>
            <para>
            <para>A list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">function
            layers</a> to add to the function's execution environment. Specify each layer by its
            ARN, including the version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.MemorySize">
            <summary>
            <para>
            <para>The amount of memory that your function has access to. Increasing the function's memory
            also increases its CPU allocation. The default value is 128 MB. The value must be
            a multiple of 64 MB.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.TracingConfig_Mode">
            <summary>
            <para>
            <para>The tracing mode.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.PublishVersion">
            <summary>
            <para>
            <para>Set to true to publish the first version of the function during creation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.Role">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the function's execution role.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.Runtime">
            <summary>
            <para>
            <para>The identifier of the function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.Code_S3Bucket">
            <summary>
            <para>
            <para>An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in
            a different AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.Code_S3Key">
            <summary>
            <para>
            <para>The Amazon S3 key of the deployment package.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.Code_S3ObjectVersion">
            <summary>
            <para>
            <para>For versioned objects, the version of the deployment package object to use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.VpcConfig_SecurityGroupId">
            <summary>
            <para>
            <para>A list of VPC security groups IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.VpcConfig_SubnetId">
            <summary>
            <para>
            <para>A list of VPC subnet IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.Tag">
            <summary>
            <para>
            <para>A list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html">tags</a>
            to apply to the function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.DeadLetterConfig_TargetArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.Timeout">
            <summary>
            <para>
            <para>The amount of time that Lambda allows a function to run before stopping it. The default
            is 3 seconds. The maximum allowed value is 900 seconds.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.Environment_Variable">
            <summary>
            <para>
            <para>Environment variable key-value pairs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.Code_ZipFile">
            <summary>
            <para>
            <para>The base64-encoded contents of the deployment package. AWS SDK and AWS CLI clients
            handle the encoding for you.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.CreateFunctionResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.CreateFunctionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMFunctionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionCodeCmdlet">
            <summary>
            Updates a Lambda function's code.
            
             
            <para>
            The function's code is locked when you publish a version. You can't modify the code
            of a published version, only the unpublished version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionCodeCmdlet.ZipFilename">
            <summary>
            <para>
            This parameter is obsolete and will be removed in a future version. Use 'ZipFile' instead.
            The path to a zip file containing your deployment package. For more information about creating a .zip file,
            go to <a href="http://docs.aws.amazon.com/lambda/latest/dg/intro-permission-model.html#lambda-intro-execution-role.html">Execution
            Permissions</a> in the <i>AWS Lambda Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionCodeCmdlet.Publish">
            <summary>
            <para>
            This parameter is obsolete. Use PublishVersion instead.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionCodeCmdlet.DryRun">
            <summary>
            <para>
            <para>Set to true to validate the request parameters and access permissions without modifying
            the function code.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionCodeCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.UpdateFunctionCodeRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionCodeCmdlet.PublishVersion">
            <summary>
            <para>
            <para>Set to true to publish a new version of the function after updating the code. This
            has the same effect as calling <a>PublishVersion</a> separately.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionCodeCmdlet.RevisionId">
            <summary>
            <para>
            <para>Only update the function if the revision ID matches the ID that's specified. Use this
            option to avoid modifying a function that has changed since you last read it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionCodeCmdlet.S3Bucket">
            <summary>
            <para>
            <para>An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in
            a different AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionCodeCmdlet.S3Key">
            <summary>
            <para>
            <para>The Amazon S3 key of the deployment package.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionCodeCmdlet.S3ObjectVersion">
            <summary>
            <para>
            <para>For versioned objects, the version of the deployment package object to use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionCodeCmdlet.ZipFile">
            <summary>
            <para>
            <para>The base64-encoded contents of the deployment package. AWS SDK and AWS CLI clients
            handle the encoding for you.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionCodeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.UpdateFunctionCodeResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.UpdateFunctionCodeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionCodeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionCodeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.AddLMLayerVersionPermissionCmdlet">
            <summary>
            Adds permissions to the resource-based policy of a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS
            Lambda layer</a>. Use this action to grant layer usage permission to other accounts.
            You can grant permission to a single account, all AWS accounts, or all accounts in
            an organization.
            
             
            <para>
            To revoke permission, call <a>RemoveLayerVersionPermission</a> with the statement
            ID that you specified when you added it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMLayerVersionPermissionCmdlet.Action">
            <summary>
            <para>
            <para>The API action that grants access to the layer. For example, <code>lambda:GetLayerVersion</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMLayerVersionPermissionCmdlet.LayerName">
            <summary>
            <para>
            <para>The name or Amazon Resource Name (ARN) of the layer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMLayerVersionPermissionCmdlet.OrganizationId">
            <summary>
            <para>
            <para>With the principal set to <code>*</code>, grant permission to all accounts in the
            specified organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMLayerVersionPermissionCmdlet.Principal">
            <summary>
            <para>
            <para>An account ID, or <code>*</code> to grant permission to all AWS accounts.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMLayerVersionPermissionCmdlet.RevisionId">
            <summary>
            <para>
            <para>Only update the policy if the revision ID matches the ID specified. Use this option
            to avoid modifying a policy that has changed since you last read it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMLayerVersionPermissionCmdlet.StatementId">
            <summary>
            <para>
            <para>An identifier that distinguishes the policy from others on the same layer version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMLayerVersionPermissionCmdlet.VersionNumber">
            <summary>
            <para>
            <para>The version number.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMLayerVersionPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.AddLayerVersionPermissionResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.AddLayerVersionPermissionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMLayerVersionPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LayerName parameter.
            The -PassThru parameter is deprecated, use -Select '^LayerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMLayerVersionPermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.AddLMPermissionCmdlet">
            <summary>
            Grants an AWS service or another account permission to use a function. You can apply
            the policy at the function level, or specify a qualifier to restrict access to a single
            version or alias. If you use a qualifier, the invoker must use the full Amazon Resource
            Name (ARN) of that version or alias to invoke the function.
            
             
            <para>
            To grant permission to another account, specify the account ID as the <code>Principal</code>.
            For AWS services, the principal is a domain-style identifier defined by the service,
            like <code>s3.amazonaws.com</code> or <code>sns.amazonaws.com</code>. For AWS services,
            you can also specify the ARN of the associated resource as the <code>SourceArn</code>.
            If you grant permission to a service principal without specifying the source, other
            accounts could potentially configure resources in their account to invoke your Lambda
            function.
            </para><para>
            This action adds a statement to a resource-based permissions policy for the function.
            For more information about function policies, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html">Lambda
            Function Policies</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMPermissionCmdlet.Action">
            <summary>
            <para>
            <para>The action that the principal can use on the function. For example, <code>lambda:InvokeFunction</code>
            or <code>lambda:GetFunction</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMPermissionCmdlet.EventSourceToken">
            <summary>
            <para>
            <para>For Alexa Smart Home functions, a token that must be supplied by the invoker.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMPermissionCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.AddPermissionRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMPermissionCmdlet.Principal">
            <summary>
            <para>
            <para>The AWS service or account that invokes the function. If you specify a service, use
            <code>SourceArn</code> or <code>SourceAccount</code> to limit who can invoke the function
            through that service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMPermissionCmdlet.Qualifier">
            <summary>
            <para>
            <para>Specify a version or alias to add permissions to a published version of the function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMPermissionCmdlet.RevisionId">
            <summary>
            <para>
            <para>Only update the policy if the revision ID matches the ID that's specified. Use this
            option to avoid modifying a policy that has changed since you last read it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMPermissionCmdlet.SourceAccount">
            <summary>
            <para>
            <para>For Amazon S3, the ID of the account that owns the resource. Use this together with
            <code>SourceArn</code> to ensure that the resource is owned by the specified account.
            It is possible for an Amazon S3 bucket to be deleted by its owner and recreated by
            another account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMPermissionCmdlet.SourceArn">
            <summary>
            <para>
            <para>For AWS services, the ARN of the AWS resource that invokes the function. For example,
            an Amazon S3 bucket or Amazon SNS topic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMPermissionCmdlet.StatementId">
            <summary>
            <para>
            <para>A statement identifier that differentiates the statement from others in the same policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Statement'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.AddPermissionResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.AddPermissionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMPermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.AddLMResourceTagCmdlet">
            <summary>
            Adds <a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html">tags</a>
            to a function.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMResourceTagCmdlet.Resource">
            <summary>
            <para>
            <para>The function's Amazon Resource Name (ARN).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tags to apply to the function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Resource parameter.
            The -PassThru parameter is deprecated, use -Select '^Resource' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.AddLMResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMAccountSettingCmdlet">
            <summary>
            Retrieves details about your account's <a href="https://docs.aws.amazon.com/lambda/latest/dg/limits.html">limits</a>
            and usage in an AWS Region.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMAccountSettingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.GetAccountSettingsResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.GetAccountSettingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMAliasCmdlet">
            <summary>
            Returns details about a Lambda function <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">alias</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMAliasCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.GetAliasRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMAliasCmdlet.Name">
            <summary>
            <para>
            <para>The name of the alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.GetAliasResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.GetAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMAliasListCmdlet">
            <summary>
            Returns a list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">aliases</a>
            for a Lambda function.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMAliasListCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.ListAliasesRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMAliasListCmdlet.FunctionVersion">
            <summary>
            <para>
            <para>Specify a function version to only list aliases that invoke that version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMAliasListCmdlet.Marker">
            <summary>
            <para>
            <para>Specify the pagination token that's returned by a previous request to retrieve the
            next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMAliasListCmdlet.MaxItem">
            <summary>
            <para>
            <para>Limit the number of aliases returned.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMAliasListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Aliases'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.ListAliasesResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.ListAliasesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMAliasListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMAliasListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMEventSourceMappingCmdlet">
            <summary>
            Returns details about an event source mapping. You can get the identifier of a mapping
            from the output of <a>ListEventSourceMappings</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMEventSourceMappingCmdlet.UUID">
            <summary>
            <para>
            <para>The identifier of the event source mapping.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMEventSourceMappingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.GetEventSourceMappingResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.GetEventSourceMappingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMEventSourceMappingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UUID parameter.
            The -PassThru parameter is deprecated, use -Select '^UUID' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMEventSourceMappingListCmdlet">
            <summary>
            Lists event source mappings. Specify an <code>EventSourceArn</code> to only show event
            source mappings for a single event source.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMEventSourceMappingListCmdlet.EventSourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the event source.</para><ul><li><para><b>Amazon Kinesis</b> - The ARN of the data stream or a stream consumer.</para></li><li><para><b>Amazon DynamoDB Streams</b> - The ARN of the stream.</para></li><li><para><b>Amazon Simple Queue Service</b> - The ARN of the queue.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMEventSourceMappingListCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.ListEventSourceMappingsRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMEventSourceMappingListCmdlet.Marker">
            <summary>
            <para>
            <para>A pagination token returned by a previous call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMEventSourceMappingListCmdlet.MaxItem">
            <summary>
            <para>
            <para>The maximum number of event source mappings to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMEventSourceMappingListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventSourceMappings'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.ListEventSourceMappingsResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.ListEventSourceMappingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMEventSourceMappingListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMEventSourceMappingListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionCmdlet">
            <summary>
            Returns information about the function or function version, with a link to download
            the deployment package that's valid for 10 minutes. If you specify a function version,
            only details that are specific to that version are returned.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.GetFunctionRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionCmdlet.Qualifier">
            <summary>
            <para>
            <para>Specify a version or alias to get details about a published version of the function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.GetFunctionResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.GetFunctionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionConcurrencyCmdlet">
            <summary>
            Returns details about the reserved concurrency configuration for a function. To set
            a concurrency limit for a function, use <a>PutFunctionConcurrency</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionConcurrencyCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.GetFunctionConcurrencyRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionConcurrencyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReservedConcurrentExecutions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.GetFunctionConcurrencyResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.GetFunctionConcurrencyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionConcurrencyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionConfigurationCmdlet">
            <summary>
            Returns the version-specific settings of a Lambda function or version. The output
            includes only options that can vary between versions of a function. To modify these
            settings, use <a>UpdateFunctionConfiguration</a>.
            
             
            <para>
            To get all of a function's details, including function-level settings, use <a>GetFunction</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionConfigurationCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.GetFunctionConfigurationRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionConfigurationCmdlet.Qualifier">
            <summary>
            <para>
            <para>Specify a version or alias to get details about a published version of the function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.GetFunctionConfigurationResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.GetFunctionConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionEventInvokeConfigCmdlet">
            <summary>
            Retrieves the configuration for asynchronous invocation for a function, version, or
            alias.
            
             
            <para>
            To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionEventInvokeConfigCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.GetFunctionEventInvokeConfigRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionEventInvokeConfigCmdlet.Qualifier">
            <summary>
            <para>
            <para>A version number or alias name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionEventInvokeConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.GetFunctionEventInvokeConfigResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.GetFunctionEventInvokeConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionEventInvokeConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionEventInvokeConfigListCmdlet">
            <summary>
            Retrieves a list of configurations for asynchronous invocation for a function.
            
             
            <para>
            To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionEventInvokeConfigListCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.ListFunctionEventInvokeConfigsRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionEventInvokeConfigListCmdlet.Marker">
            <summary>
            <para>
            <para>Specify the pagination token that's returned by a previous request to retrieve the
            next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionEventInvokeConfigListCmdlet.MaxItem">
            <summary>
            <para>
            <para>The maximum number of configurations to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionEventInvokeConfigListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FunctionEventInvokeConfigs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.ListFunctionEventInvokeConfigsResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.ListFunctionEventInvokeConfigsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionEventInvokeConfigListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionEventInvokeConfigListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionListCmdlet">
            <summary>
            Returns a list of Lambda functions, with the version-specific configuration of each.
            Lambda returns up to 50 functions per call.
            
             
            <para>
            Set <code>FunctionVersion</code> to <code>ALL</code> to include all published versions
            of each function in addition to the unpublished version. To get more information about
            a function or version, use <a>GetFunction</a>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionListCmdlet.FunctionVersion">
            <summary>
            <para>
            <para>Set to <code>ALL</code> to include entries for all published versions of each function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionListCmdlet.MasterRegion">
            <summary>
            <para>
            <para>For Lambda@Edge functions, the AWS Region of the master function. For example, <code>us-east-1</code>
            filters the list of functions to only include Lambda@Edge functions replicated from
            a master function in US East (N. Virginia). If specified, you must set <code>FunctionVersion</code>
            to <code>ALL</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionListCmdlet.Marker">
            <summary>
            <para>
            <para>Specify the pagination token that's returned by a previous request to retrieve the
            next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionListCmdlet.MaxItem">
            <summary>
            <para>
            <para>The maximum number of functions to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Functions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.ListFunctionsResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.ListFunctionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMFunctionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMLayerListCmdlet">
            <summary>
            Lists <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS
            Lambda layers</a> and shows information about the latest version of each. Specify
            a <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime
            identifier</a> to list only layers that indicate that they're compatible with that
            runtime.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerListCmdlet.CompatibleRuntime">
            <summary>
            <para>
            <para>A runtime identifier. For example, <code>go1.x</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerListCmdlet.Marker">
            <summary>
            <para>
            <para>A pagination token returned by a previous call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerListCmdlet.MaxItem">
            <summary>
            <para>
            <para>The maximum number of layers to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Layers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.ListLayersResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.ListLayersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CompatibleRuntime parameter.
            The -PassThru parameter is deprecated, use -Select '^CompatibleRuntime' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMLayerVersionCmdlet">
            <summary>
            Returns information about a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS
            Lambda layer</a>, with a link to download the layer archive that's valid for 10 minutes.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerVersionCmdlet.LayerName">
            <summary>
            <para>
            <para>The name or Amazon Resource Name (ARN) of the layer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerVersionCmdlet.VersionNumber">
            <summary>
            <para>
            <para>The version number.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.GetLayerVersionResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.GetLayerVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMLayerVersionByArnCmdlet">
            <summary>
            Returns information about a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS
            Lambda layer</a>, with a link to download the layer archive that's valid for 10 minutes.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerVersionByArnCmdlet.Arn">
            <summary>
            <para>
            <para>The ARN of the layer version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerVersionByArnCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.GetLayerVersionByArnResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.GetLayerVersionByArnResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerVersionByArnCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMLayerVersionListCmdlet">
            <summary>
            Lists the versions of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS
            Lambda layer</a>. Versions that have been deleted aren't listed. Specify a <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime
            identifier</a> to list only versions that indicate that they're compatible with that
            runtime.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerVersionListCmdlet.CompatibleRuntime">
            <summary>
            <para>
            <para>A runtime identifier. For example, <code>go1.x</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerVersionListCmdlet.LayerName">
            <summary>
            <para>
            <para>The name or Amazon Resource Name (ARN) of the layer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerVersionListCmdlet.Marker">
            <summary>
            <para>
            <para>A pagination token returned by a previous call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerVersionListCmdlet.MaxItem">
            <summary>
            <para>
            <para>The maximum number of versions to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LayerVersions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.ListLayerVersionsResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.ListLayerVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMLayerVersionPolicyCmdlet">
            <summary>
            Returns the permission policy for a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS
            Lambda layer</a>. For more information, see <a>AddLayerVersionPermission</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerVersionPolicyCmdlet.LayerName">
            <summary>
            <para>
            <para>The name or Amazon Resource Name (ARN) of the layer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerVersionPolicyCmdlet.VersionNumber">
            <summary>
            <para>
            <para>The version number.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMLayerVersionPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.GetLayerVersionPolicyResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.GetLayerVersionPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMPolicyCmdlet">
            <summary>
            Returns the <a href="https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html">resource-based
            IAM policy</a> for a function, version, or alias.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMPolicyCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.GetPolicyRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMPolicyCmdlet.Qualifier">
            <summary>
            <para>
            <para>Specify a version or alias to get the policy for that resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.GetPolicyResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.GetPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMProvisionedConcurrencyConfigCmdlet">
            <summary>
            Retrieves the provisioned concurrency configuration for a function's alias or version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMProvisionedConcurrencyConfigCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.GetProvisionedConcurrencyConfigRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMProvisionedConcurrencyConfigCmdlet.Qualifier">
            <summary>
            <para>
            <para>The version number or alias name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMProvisionedConcurrencyConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.GetProvisionedConcurrencyConfigResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.GetProvisionedConcurrencyConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMProvisionedConcurrencyConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMProvisionedConcurrencyConfigListCmdlet">
            <summary>
            Retrieves a list of provisioned concurrency configurations for a function.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMProvisionedConcurrencyConfigListCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.ListProvisionedConcurrencyConfigsRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMProvisionedConcurrencyConfigListCmdlet.Marker">
            <summary>
            <para>
            <para>Specify the pagination token that's returned by a previous request to retrieve the
            next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMProvisionedConcurrencyConfigListCmdlet.MaxItem">
            <summary>
            <para>
            <para>Specify a number to limit the number of configurations returned.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMProvisionedConcurrencyConfigListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ProvisionedConcurrencyConfigs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.ListProvisionedConcurrencyConfigsResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.ListProvisionedConcurrencyConfigsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMProvisionedConcurrencyConfigListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMProvisionedConcurrencyConfigListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMResourceTagCmdlet">
            <summary>
            Returns a function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html">tags</a>.
            You can also view tags with <a>GetFunction</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMResourceTagCmdlet.Resource">
            <summary>
            <para>
            <para>The function's Amazon Resource Name (ARN).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.ListTagsResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.ListTagsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Resource parameter.
            The -PassThru parameter is deprecated, use -Select '^Resource' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.GetLMVersionsByFunctionCmdlet">
            <summary>
            Returns a list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">versions</a>,
            with the version-specific configuration of each. Lambda returns up to 50 versions
            per call.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMVersionsByFunctionCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.ListVersionsByFunctionRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMVersionsByFunctionCmdlet.Marker">
            <summary>
            <para>
            <para>Specify the pagination token that's returned by a previous request to retrieve the
            next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMVersionsByFunctionCmdlet.MaxItem">
            <summary>
            <para>
            <para>The maximum number of versions to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMVersionsByFunctionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Versions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.ListVersionsByFunctionResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.ListVersionsByFunctionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMVersionsByFunctionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.GetLMVersionsByFunctionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.InvokeLMFunctionCmdlet">
            <summary>
            Invokes a Lambda function. You can invoke a function synchronously (and wait for the
            response), or asynchronously. To invoke a function asynchronously, set <code>InvocationType</code>
            to <code>Event</code>.
            
             
            <para>
            For <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-sync.html">synchronous
            invocation</a>, details about the function response, including errors, are included
            in the response body and headers. For either invocation type, you can find more information
            in the <a href="https://docs.aws.amazon.com/lambda/latest/dg/monitoring-functions.html">execution
            log</a> and <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html">trace</a>.
            </para><para>
            When an error occurs, your function may be invoked multiple times. Retry behavior
            varies by error type, client, event source, and invocation type. For example, if you
            invoke a function asynchronously and it returns an error, Lambda executes the function
            up to two more times. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/retries-on-errors.html">Retry
            Behavior</a>.
            </para><para>
            For <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html">asynchronous
            invocation</a>, Lambda adds events to a queue before sending them to your function.
            If your function does not have enough capacity to keep up with the queue, events may
            be lost. Occasionally, your function may receive the same event multiple times, even
            if no error occurs. To retain events that were not processed, configure your function
            with a <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq">dead-letter
            queue</a>.
            </para><para>
            The status code in the API response doesn't reflect function errors. Error codes are
            reserved for errors that prevent your function from executing, such as permissions
            errors, <a href="https://docs.aws.amazon.com/lambda/latest/dg/limits.html">limit errors</a>,
            or issues with your function's code and configuration. For example, Lambda returns
            <code>TooManyRequestsException</code> if executing the function would cause you to
            exceed a concurrency limit at either the account level (<code>ConcurrentInvocationLimitExceeded</code>)
            or function level (<code>ReservedFunctionConcurrentInvocationLimitExceeded</code>).
            </para><para>
            For functions with a long timeout, your client might be disconnected during synchronous
            invocation while it waits for a response. Configure your HTTP client, SDK, firewall,
            proxy, or operating system to allow for long connections with timeout or keep-alive
            settings.
            </para><para>
            This operation requires permission for the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/list_awslambda.html">lambda:InvokeFunction</a>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.InvokeLMFunctionCmdlet.ClientContext">
            <summary>
            <para>
            When this property is set the ClientContextBase64
            property is also set with a base64-encoded string containing the contents of ClientContext.
            <para>Using the <code>ClientContext</code> you can pass client-specific information to the
            Lambda function you are invoking. You can then process the client information in your
            Lambda function as you choose through the context variable. For an example of a ClientContext
            JSON, go to <a href="http://docs.aws.amazon.com/mobileanalytics/latest/ug/PutEvents.html">PutEvents</a>
            in the <i>Amazon Mobile Analytics API Reference and User Guide</i>.</para>
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>{}</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.InvokeLMFunctionCmdlet.ClientContextBase64">
            <summary>
            <para>
            <para>Up to 3583 bytes of base64-encoded data about the invoking client to pass to the function
            in the context object.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter to Base64 before supplying to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.InvokeLMFunctionCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.InvokeRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.InvokeLMFunctionCmdlet.InvocationType">
            <summary>
            <para>
            <para>Choose from the following options.</para><ul><li><para><code>RequestResponse</code> (default) - Invoke the function synchronously. Keep
            the connection open until the function returns a response or times out. The API response
            includes the function response and additional data.</para></li><li><para><code>Event</code> - Invoke the function asynchronously. Send events that fail multiple
            times to the function's dead-letter queue (if it's configured). The API response only
            includes a status code.</para></li><li><para><code>DryRun</code> - Validate parameter values and verify that the user or role
            has permission to invoke the function.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.InvokeLMFunctionCmdlet.LogType">
            <summary>
            <para>
            <para>Set to <code>Tail</code> to include the execution log in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.InvokeLMFunctionCmdlet.Payload">
            <summary>
            <para>
            When this property is set the PayloadStream
            property is also set with a MemoryStream containing the contents of Payload.
            <para>JSON that you want to provide to your cloud function as input.</para>
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>{}</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.InvokeLMFunctionCmdlet.PayloadStream">
            <summary>
            <para>
            <para>The JSON that you want to provide to your Lambda function as input.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.InvokeLMFunctionCmdlet.Qualifier">
            <summary>
            <para>
            <para>Specify a version or alias to invoke a published version of the function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.InvokeLMFunctionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.InvokeResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.InvokeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.InvokeLMFunctionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.InvokeLMFunctionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.InvokeLMFunctionAsyncCmdlet">
            <summary>
            <important><para>
            For asynchronous function invocation, use <a>Invoke</a>.
            </para></important><para>
            Invokes a function asynchronously.
            </para><br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.InvokeLMFunctionAsyncCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.InvokeAsyncRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.InvokeLMFunctionAsyncCmdlet.InvokeArg">
            <summary>
            <para>
            When this property is set the InvokeArgsStream
            property is also set with a MemoryStream containing the contents InvokeArgs
            <para>JSON that you want to provide to your cloud function as input.</para>
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>{}</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.InvokeLMFunctionAsyncCmdlet.InvokeArgsStream">
            <summary>
            <para>
            <para>The JSON that you want to provide to your Lambda function as input.</para>
            </para>
            <para>The cmdlet accepts a parameter of type string, string[], System.IO.FileInfo or System.IO.Stream.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.InvokeLMFunctionAsyncCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Status'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.InvokeAsyncResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.InvokeAsyncResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.InvokeLMFunctionAsyncCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.InvokeLMFunctionAsyncCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.NewLMAliasCmdlet">
            <summary>
            Creates an <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">alias</a>
            for a Lambda function version. Use aliases to provide clients with a function identifier
            that you can update to invoke a different version.
            
             
            <para>
            You can also map an alias to split invocation requests between two versions. Use the
            <code>RoutingConfig</code> parameter to specify a second version and the percentage
            of invocation requests that it receives.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMAliasCmdlet.RoutingConfig_AdditionalVersionWeight">
            <summary>
            <para>
            <para>The name of the second alias, and the percentage of traffic that's routed to it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMAliasCmdlet.Description">
            <summary>
            <para>
            <para>A description of the alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMAliasCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.CreateAliasRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMAliasCmdlet.FunctionVersion">
            <summary>
            <para>
            <para>The function version that the alias invokes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMAliasCmdlet.Name">
            <summary>
            <para>
            <para>The name of the alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.CreateAliasResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.CreateAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.NewLMEventSourceMappingCmdlet">
            <summary>
            Creates a mapping between an event source and an AWS Lambda function. Lambda reads
            items from the event source and triggers the function.
            
             
            <para>
            For details about each event source type, see the following topics.
            </para><ul><li><para><a href="https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html">Using AWS Lambda
            with Amazon DynamoDB</a></para></li><li><para><a href="https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html">Using AWS
            Lambda with Amazon Kinesis</a></para></li><li><para><a href="https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html">Using AWS Lambda
            with Amazon SQS</a></para></li></ul><para>
            The following error handling options are only available for stream sources (DynamoDB
            and Kinesis):
            </para><ul><li><para><code>BisectBatchOnFunctionError</code> - If the function returns an error, split
            the batch in two and retry.
            </para></li><li><para><code>DestinationConfig</code> - Send discarded records to an Amazon SQS queue or
            Amazon SNS topic.
            </para></li><li><para><code>MaximumRecordAgeInSeconds</code> - Discard records older than the specified
            age.
            </para></li><li><para><code>MaximumRetryAttempts</code> - Discard records after the specified number of
            retries.
            </para></li><li><para><code>ParallelizationFactor</code> - Process multiple batches from each shard concurrently.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMEventSourceMappingCmdlet.BatchSize">
            <summary>
            <para>
            <para>The maximum number of items to retrieve in a single batch.</para><ul><li><para><b>Amazon Kinesis</b> - Default 100. Max 10,000.</para></li><li><para><b>Amazon DynamoDB Streams</b> - Default 100. Max 1,000.</para></li><li><para><b>Amazon Simple Queue Service</b> - Default 10. Max 10.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMEventSourceMappingCmdlet.BisectBatchOnFunctionError">
            <summary>
            <para>
            <para>(Streams) If the function returns an error, split the batch in two and retry.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMEventSourceMappingCmdlet.OnFailure_Destination">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the destination resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMEventSourceMappingCmdlet.OnSuccess_Destination">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the destination resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMEventSourceMappingCmdlet.Enabled">
            <summary>
            <para>
            <para>Disables the event source mapping to pause polling and invocation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMEventSourceMappingCmdlet.EventSourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the event source.</para><ul><li><para><b>Amazon Kinesis</b> - The ARN of the data stream or a stream consumer.</para></li><li><para><b>Amazon DynamoDB Streams</b> - The ARN of the stream.</para></li><li><para><b>Amazon Simple Queue Service</b> - The ARN of the queue.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMEventSourceMappingCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.CreateEventSourceMappingRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMEventSourceMappingCmdlet.MaximumBatchingWindowInSecond">
            <summary>
            <para>
            <para>(Streams) The maximum amount of time to gather records before invoking the function,
            in seconds.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMEventSourceMappingCmdlet.MaximumRecordAgeInSecond">
            <summary>
            <para>
            <para>(Streams) The maximum age of a record that Lambda sends to a function for processing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMEventSourceMappingCmdlet.MaximumRetryAttempt">
            <summary>
            <para>
            <para>(Streams) The maximum number of times to retry when the function returns an error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMEventSourceMappingCmdlet.ParallelizationFactor">
            <summary>
            <para>
            <para>(Streams) The number of batches to process from each shard concurrently.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMEventSourceMappingCmdlet.StartingPosition">
            <summary>
            <para>
            <para>The position in a stream from which to start reading. Required for Amazon Kinesis
            and Amazon DynamoDB Streams sources. <code>AT_TIMESTAMP</code> is only supported for
            Amazon Kinesis streams.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMEventSourceMappingCmdlet.StartingPositionTimestamp">
            <summary>
            <para>
            <para>With <code>StartingPosition</code> set to <code>AT_TIMESTAMP</code>, the time from
            which to start reading.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMEventSourceMappingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.CreateEventSourceMappingResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.CreateEventSourceMappingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMEventSourceMappingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.NewLMEventSourceMappingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.PublishLMLayerVersionCmdlet">
            <summary>
            Creates an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS
            Lambda layer</a> from a ZIP archive. Each time you call <code>PublishLayerVersion</code>
            with the same layer name, a new version is created.
            
             
            <para>
            Add layers to your function with <a>CreateFunction</a> or <a>UpdateFunctionConfiguration</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMLayerVersionCmdlet.CompatibleRuntime">
            <summary>
            <para>
            <para>A list of compatible <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">function
            runtimes</a>. Used for filtering with <a>ListLayers</a> and <a>ListLayerVersions</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMLayerVersionCmdlet.Description">
            <summary>
            <para>
            <para>The description of the version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMLayerVersionCmdlet.LayerName">
            <summary>
            <para>
            <para>The name or Amazon Resource Name (ARN) of the layer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMLayerVersionCmdlet.LicenseInfo">
            <summary>
            <para>
            <para>The layer's software license. It can be any of the following:</para><ul><li><para>An <a href="https://spdx.org/licenses/">SPDX license identifier</a>. For example,
            <code>MIT</code>.</para></li><li><para>The URL of a license hosted on the internet. For example, <code>https://opensource.org/licenses/MIT</code>.</para></li><li><para>The full text of the license.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMLayerVersionCmdlet.Content_S3Bucket">
            <summary>
            <para>
            <para>The Amazon S3 bucket of the layer archive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMLayerVersionCmdlet.Content_S3Key">
            <summary>
            <para>
            <para>The Amazon S3 key of the layer archive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMLayerVersionCmdlet.Content_S3ObjectVersion">
            <summary>
            <para>
            <para>For versioned objects, the version of the layer archive object to use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMLayerVersionCmdlet.Content_ZipFile">
            <summary>
            <para>
            <para>The base64-encoded contents of the layer archive. AWS SDK and AWS CLI clients handle
            the encoding for you.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMLayerVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.PublishLayerVersionResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.PublishLayerVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMLayerVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LayerName parameter.
            The -PassThru parameter is deprecated, use -Select '^LayerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMLayerVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.PublishLMVersionCmdlet">
            <summary>
            Creates a <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">version</a>
            from the current code and configuration of a function. Use versions to create a snapshot
            of your function code and configuration that doesn't change.
            
             
            <para>
            AWS Lambda doesn't publish a version if the function's configuration and code haven't
            changed since the last version. Use <a>UpdateFunctionCode</a> or <a>UpdateFunctionConfiguration</a>
            to update the function before publishing a version.
            </para><para>
            Clients can invoke versions directly or with an alias. To create an alias, use <a>CreateAlias</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMVersionCmdlet.CodeSha256">
            <summary>
            <para>
            <para>Only publish a version if the hash value matches the value that's specified. Use this
            option to avoid publishing a version if the function code has changed since you last
            updated it. You can get the hash for the version that you uploaded from the output
            of <a>UpdateFunctionCode</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMVersionCmdlet.Description">
            <summary>
            <para>
            <para>A description for the version to override the description in the function configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMVersionCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.PublishVersionRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMVersionCmdlet.RevisionId">
            <summary>
            <para>
            <para>Only update the function if the revision ID matches the ID that's specified. Use this
            option to avoid publishing a version if the function configuration has changed since
            you last updated it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.PublishVersionResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.PublishVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.PublishLMVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.RemoveLMAliasCmdlet">
            <summary>
            Deletes a Lambda function <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">alias</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMAliasCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.DeleteAliasRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMAliasCmdlet.Name">
            <summary>
            <para>
            <para>The name of the alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.DeleteAliasResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.RemoveLMEventSourceMappingCmdlet">
            <summary>
            Deletes an <a href="https://docs.aws.amazon.com/lambda/latest/dg/intro-invocation-modes.html">event
            source mapping</a>. You can get the identifier of a mapping from the output of <a>ListEventSourceMappings</a>.
            
             
            <para>
            When you delete an event source mapping, it enters a <code>Deleting</code> state and
            might not be completely deleted for several seconds.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMEventSourceMappingCmdlet.UUID">
            <summary>
            <para>
            <para>The identifier of the event source mapping.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMEventSourceMappingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.DeleteEventSourceMappingResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.DeleteEventSourceMappingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMEventSourceMappingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UUID parameter.
            The -PassThru parameter is deprecated, use -Select '^UUID' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMEventSourceMappingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.RemoveLMFunctionCmdlet">
            <summary>
            Deletes a Lambda function. To delete a specific function version, use the <code>Qualifier</code>
            parameter. Otherwise, all versions and aliases are deleted.
            
             
            <para>
            To delete Lambda event source mappings that invoke a function, use <a>DeleteEventSourceMapping</a>.
            For AWS services and resources that invoke your function directly, delete the trigger
            in the service where you originally configured it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMFunctionCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.DeleteFunctionRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMFunctionCmdlet.Qualifier">
            <summary>
            <para>
            <para>Specify a version to delete. You can't delete a version that's referenced by an alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMFunctionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.DeleteFunctionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMFunctionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMFunctionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.RemoveLMFunctionConcurrencyCmdlet">
            <summary>
            Removes a concurrent execution limit from a function.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMFunctionConcurrencyCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.DeleteFunctionConcurrencyRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMFunctionConcurrencyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.DeleteFunctionConcurrencyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMFunctionConcurrencyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMFunctionConcurrencyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.RemoveLMFunctionEventInvokeConfigCmdlet">
            <summary>
            Deletes the configuration for asynchronous invocation for a function, version, or
            alias.
            
             
            <para>
            To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMFunctionEventInvokeConfigCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.DeleteFunctionEventInvokeConfigRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMFunctionEventInvokeConfigCmdlet.Qualifier">
            <summary>
            <para>
            <para>A version number or alias name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMFunctionEventInvokeConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.DeleteFunctionEventInvokeConfigResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMFunctionEventInvokeConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMFunctionEventInvokeConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.RemoveLMLayerVersionCmdlet">
            <summary>
            Deletes a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS
            Lambda layer</a>. Deleted versions can no longer be viewed or added to functions.
            To avoid breaking functions, a copy of the version remains in Lambda until no functions
            refer to it.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMLayerVersionCmdlet.LayerName">
            <summary>
            <para>
            <para>The name or Amazon Resource Name (ARN) of the layer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMLayerVersionCmdlet.VersionNumber">
            <summary>
            <para>
            <para>The version number.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMLayerVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.DeleteLayerVersionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMLayerVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LayerName parameter.
            The -PassThru parameter is deprecated, use -Select '^LayerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMLayerVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.RemoveLMLayerVersionPermissionCmdlet">
            <summary>
            Removes a statement from the permissions policy for a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS
            Lambda layer</a>. For more information, see <a>AddLayerVersionPermission</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMLayerVersionPermissionCmdlet.LayerName">
            <summary>
            <para>
            <para>The name or Amazon Resource Name (ARN) of the layer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMLayerVersionPermissionCmdlet.RevisionId">
            <summary>
            <para>
            <para>Only update the policy if the revision ID matches the ID specified. Use this option
            to avoid modifying a policy that has changed since you last read it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMLayerVersionPermissionCmdlet.StatementId">
            <summary>
            <para>
            <para>The identifier that was specified when the statement was added.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMLayerVersionPermissionCmdlet.VersionNumber">
            <summary>
            <para>
            <para>The version number.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMLayerVersionPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.RemoveLayerVersionPermissionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMLayerVersionPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LayerName parameter.
            The -PassThru parameter is deprecated, use -Select '^LayerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMLayerVersionPermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.RemoveLMPermissionCmdlet">
            <summary>
            Revokes function-use permission from an AWS service or another account. You can get
            the ID of the statement from the output of <a>GetPolicy</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMPermissionCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.RemovePermissionRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMPermissionCmdlet.Qualifier">
            <summary>
            <para>
            <para>Specify a version or alias to remove permissions from a published version of the function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMPermissionCmdlet.RevisionId">
            <summary>
            <para>
            <para>Only update the policy if the revision ID matches the ID that's specified. Use this
            option to avoid modifying a policy that has changed since you last read it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMPermissionCmdlet.StatementId">
            <summary>
            <para>
            <para>Statement ID of the permission to remove.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.RemovePermissionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMPermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.RemoveLMProvisionedConcurrencyConfigCmdlet">
            <summary>
            Deletes the provisioned concurrency configuration for a function.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMProvisionedConcurrencyConfigCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.DeleteProvisionedConcurrencyConfigRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMProvisionedConcurrencyConfigCmdlet.Qualifier">
            <summary>
            <para>
            <para>The version number or alias name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMProvisionedConcurrencyConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.DeleteProvisionedConcurrencyConfigResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMProvisionedConcurrencyConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMProvisionedConcurrencyConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.RemoveLMResourceTagCmdlet">
            <summary>
            Removes <a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html">tags</a>
            from a function.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMResourceTagCmdlet.Resource">
            <summary>
            <para>
            <para>The function's Amazon Resource Name (ARN).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>A list of tag keys to remove from the function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TagKey parameter.
            The -PassThru parameter is deprecated, use -Select '^TagKey' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.RemoveLMResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.UpdateLMAliasCmdlet">
            <summary>
            Updates the configuration of a Lambda function <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">alias</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMAliasCmdlet.RoutingConfig_AdditionalVersionWeight">
            <summary>
            <para>
            <para>The name of the second alias, and the percentage of traffic that's routed to it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMAliasCmdlet.Description">
            <summary>
            <para>
            <para>A description of the alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMAliasCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.UpdateAliasRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMAliasCmdlet.FunctionVersion">
            <summary>
            <para>
            <para>The function version that the alias invokes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMAliasCmdlet.Name">
            <summary>
            <para>
            <para>The name of the alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMAliasCmdlet.RevisionId">
            <summary>
            <para>
            <para>Only update the alias if the revision ID matches the ID that's specified. Use this
            option to avoid modifying an alias that has changed since you last read it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.UpdateAliasResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.UpdateAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.UpdateLMEventSourceMappingCmdlet">
            <summary>
            Updates an event source mapping. You can change the function that AWS Lambda invokes,
            or pause invocation and resume later from the same location.
            
             
            <para>
            The following error handling options are only available for stream sources (DynamoDB
            and Kinesis):
            </para><ul><li><para><code>BisectBatchOnFunctionError</code> - If the function returns an error, split
            the batch in two and retry.
            </para></li><li><para><code>DestinationConfig</code> - Send discarded records to an Amazon SQS queue or
            Amazon SNS topic.
            </para></li><li><para><code>MaximumRecordAgeInSeconds</code> - Discard records older than the specified
            age.
            </para></li><li><para><code>MaximumRetryAttempts</code> - Discard records after the specified number of
            retries.
            </para></li><li><para><code>ParallelizationFactor</code> - Process multiple batches from each shard concurrently.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMEventSourceMappingCmdlet.BatchSize">
            <summary>
            <para>
            <para>The maximum number of items to retrieve in a single batch.</para><ul><li><para><b>Amazon Kinesis</b> - Default 100. Max 10,000.</para></li><li><para><b>Amazon DynamoDB Streams</b> - Default 100. Max 1,000.</para></li><li><para><b>Amazon Simple Queue Service</b> - Default 10. Max 10.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMEventSourceMappingCmdlet.BisectBatchOnFunctionError">
            <summary>
            <para>
            <para>(Streams) If the function returns an error, split the batch in two and retry.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMEventSourceMappingCmdlet.OnFailure_Destination">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the destination resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMEventSourceMappingCmdlet.OnSuccess_Destination">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the destination resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMEventSourceMappingCmdlet.Enabled">
            <summary>
            <para>
            <para>Disables the event source mapping to pause polling and invocation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMEventSourceMappingCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.UpdateEventSourceMappingRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMEventSourceMappingCmdlet.MaximumBatchingWindowInSecond">
            <summary>
            <para>
            <para>(Streams) The maximum amount of time to gather records before invoking the function,
            in seconds.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMEventSourceMappingCmdlet.MaximumRecordAgeInSecond">
            <summary>
            <para>
            <para>(Streams) The maximum age of a record that Lambda sends to a function for processing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMEventSourceMappingCmdlet.MaximumRetryAttempt">
            <summary>
            <para>
            <para>(Streams) The maximum number of times to retry when the function returns an error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMEventSourceMappingCmdlet.ParallelizationFactor">
            <summary>
            <para>
            <para>(Streams) The number of batches to process from each shard concurrently.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMEventSourceMappingCmdlet.UUID">
            <summary>
            <para>
            <para>The identifier of the event source mapping.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMEventSourceMappingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.UpdateEventSourceMappingResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.UpdateEventSourceMappingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMEventSourceMappingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMEventSourceMappingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet">
            <summary>
            Modify the version-specific settings of a Lambda function.
            
             
            <para>
            When you update a function, Lambda provisions an instance of the function and its
            supporting resources. If your function connects to a VPC, this process can take a
            minute. During this time, you can't modify the function, but you can still invoke
            it. The <code>LastUpdateStatus</code>, <code>LastUpdateStatusReason</code>, and <code>LastUpdateStatusReasonCode</code>
            fields in the response from <a>GetFunctionConfiguration</a> indicate when the update
            is complete and the function is processing events with the new configuration. For
            more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/functions-states.html">Function
            States</a>.
            </para><para>
            These settings can vary between versions of a function and are locked when you publish
            a version. You can't modify the configuration of a published version, only the unpublished
            version.
            </para><para>
            To configure function concurrency, use <a>PutFunctionConcurrency</a>. To grant invoke
            permissions to an account or AWS service, use <a>AddPermission</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet.Description">
            <summary>
            <para>
            <para>A description of the function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.UpdateFunctionConfigurationRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet.Handler">
            <summary>
            <para>
            <para>The name of the method within your code that Lambda calls to execute your function.
            The format includes the file name. It can also include namespaces and other qualifiers,
            depending on the runtime. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/programming-model-v2.html">Programming
            Model</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet.IsLayersSet">
            <summary>
            <para>
            This property is set to true if the property <seealso cref="P:Amazon.Lambda.Model.UpdateFunctionConfigurationRequest.Layers" />
            is set; false otherwise.
            This property can be used to determine if the related property
            was returned by a service response or if the related property
            should be sent to the service during a service call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet.Environment_IsVariablesSet">
            <summary>
            <para>
            This property is set to true if the property <seealso cref="P:Amazon.Lambda.Model.Environment.Variables" />
            is set; false otherwise.
            This property can be used to determine if the related property
            was returned by a service response or if the related property
            should be sent to the service during a service call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet.KMSKeyArn">
            <summary>
            <para>
            <para>The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your
            function's environment variables. If it's not provided, AWS Lambda uses a default
            service key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet.Layer">
            <summary>
            <para>
            <para>A list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">function
            layers</a> to add to the function's execution environment. Specify each layer by its
            ARN, including the version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet.MemorySize">
            <summary>
            <para>
            <para>The amount of memory that your function has access to. Increasing the function's memory
            also increases its CPU allocation. The default value is 128 MB. The value must be
            a multiple of 64 MB.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet.TracingConfig_Mode">
            <summary>
            <para>
            <para>The tracing mode.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet.RevisionId">
            <summary>
            <para>
            <para>Only update the function if the revision ID matches the ID that's specified. Use this
            option to avoid modifying a function that has changed since you last read it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet.Role">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the function's execution role.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet.Runtime">
            <summary>
            <para>
            <para>The identifier of the function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet.VpcConfig_SecurityGroupId">
            <summary>
            <para>
            <para>A list of VPC security groups IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet.VpcConfig_SubnetId">
            <summary>
            <para>
            <para>A list of VPC subnet IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet.DeadLetterConfig_TargetArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet.Timeout">
            <summary>
            <para>
            <para>The amount of time that Lambda allows a function to run before stopping it. The default
            is 3 seconds. The maximum allowed value is 900 seconds.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet.Environment_Variable">
            <summary>
            <para>
            <para>Environment variable key-value pairs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.UpdateFunctionConfigurationResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.UpdateFunctionConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionEventInvokeConfigCmdlet">
            <summary>
            Updates the configuration for asynchronous invocation for a function, version, or
            alias.
            
             
            <para>
            To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionEventInvokeConfigCmdlet.OnFailure_Destination">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the destination resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionEventInvokeConfigCmdlet.OnSuccess_Destination">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the destination resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionEventInvokeConfigCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.UpdateFunctionEventInvokeConfigRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionEventInvokeConfigCmdlet.MaximumEventAgeInSecond">
            <summary>
            <para>
            <para>The maximum age of a request that Lambda sends to a function for processing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionEventInvokeConfigCmdlet.MaximumRetryAttempt">
            <summary>
            <para>
            <para>The maximum number of times to retry when the function returns an error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionEventInvokeConfigCmdlet.Qualifier">
            <summary>
            <para>
            <para>A version number or alias name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionEventInvokeConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.UpdateFunctionEventInvokeConfigResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.UpdateFunctionEventInvokeConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionEventInvokeConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.UpdateLMFunctionEventInvokeConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.WriteLMFunctionConcurrencyCmdlet">
            <summary>
            Sets the maximum number of simultaneous executions for a function, and reserves capacity
            for that concurrency level.
            
             
            <para>
            Concurrency settings apply to the function as a whole, including all published versions
            and the unpublished version. Reserving concurrency both ensures that your function
            has capacity to process the specified number of events simultaneously, and prevents
            it from scaling beyond that level. Use <a>GetFunction</a> to see the current setting
            for a function.
            </para><para>
            Use <a>GetAccountSettings</a> to see your Regional concurrency limit. You can reserve
            concurrency for as many functions as you like, as long as you leave at least 100 simultaneous
            executions unreserved for functions that aren't configured with a per-function limit.
            For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html">Managing
            Concurrency</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.WriteLMFunctionConcurrencyCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.PutFunctionConcurrencyRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.WriteLMFunctionConcurrencyCmdlet.ReservedConcurrentExecution">
            <summary>
            <para>
            <para>The number of simultaneous executions to reserve for the function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.WriteLMFunctionConcurrencyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReservedConcurrentExecutions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.PutFunctionConcurrencyResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.PutFunctionConcurrencyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.WriteLMFunctionConcurrencyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.WriteLMFunctionConcurrencyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.WriteLMFunctionEventInvokeConfigCmdlet">
            <summary>
            Configures options for <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html">asynchronous
            invocation</a> on a function, version, or alias. If a configuration already exists
            for a function, version, or alias, this operation overwrites it. If you exclude any
            settings, they are removed. To set one option without affecting existing settings
            for other options, use <a>PutFunctionEventInvokeConfig</a>.
            
             
            <para>
            By default, Lambda retries an asynchronous invocation twice if the function returns
            an error. It retains events in a queue for up to six hours. When an event fails all
            processing attempts or stays in the asynchronous invocation queue for too long, Lambda
            discards it. To retain discarded events, configure a dead-letter queue with <a>UpdateFunctionConfiguration</a>.
            </para><para>
            To send an invocation record to a queue, topic, function, or event bus, specify a
            <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations">destination</a>.
            You can configure separate destinations for successful invocations (on-success) and
            events that fail all processing attempts (on-failure). You can configure destinations
            in addition to or instead of a dead-letter queue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.WriteLMFunctionEventInvokeConfigCmdlet.OnFailure_Destination">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the destination resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.WriteLMFunctionEventInvokeConfigCmdlet.OnSuccess_Destination">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the destination resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.WriteLMFunctionEventInvokeConfigCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.PutFunctionEventInvokeConfigRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.WriteLMFunctionEventInvokeConfigCmdlet.MaximumEventAgeInSecond">
            <summary>
            <para>
            <para>The maximum age of a request that Lambda sends to a function for processing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.WriteLMFunctionEventInvokeConfigCmdlet.MaximumRetryAttempt">
            <summary>
            <para>
            <para>The maximum number of times to retry when the function returns an error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.WriteLMFunctionEventInvokeConfigCmdlet.Qualifier">
            <summary>
            <para>
            <para>A version number or alias name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.WriteLMFunctionEventInvokeConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.PutFunctionEventInvokeConfigResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.PutFunctionEventInvokeConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.WriteLMFunctionEventInvokeConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.WriteLMFunctionEventInvokeConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LM.WriteLMProvisionedConcurrencyConfigCmdlet">
            <summary>
            Adds a provisioned concurrency configuration to a function's alias or version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.WriteLMProvisionedConcurrencyConfigCmdlet.FunctionName">
            <summary>
            <para>
            Amazon.Lambda.Model.PutProvisionedConcurrencyConfigRequest.FunctionName
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.WriteLMProvisionedConcurrencyConfigCmdlet.ProvisionedConcurrentExecution">
            <summary>
            <para>
            <para>The amount of provisioned concurrency to allocate for the version or alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.WriteLMProvisionedConcurrencyConfigCmdlet.Qualifier">
            <summary>
            <para>
            <para>The version number or alias name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.WriteLMProvisionedConcurrencyConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lambda.Model.PutProvisionedConcurrencyConfigResponse).
            Specifying the name of a property of type Amazon.Lambda.Model.PutProvisionedConcurrencyConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.WriteLMProvisionedConcurrencyConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LM.WriteLMProvisionedConcurrencyConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
