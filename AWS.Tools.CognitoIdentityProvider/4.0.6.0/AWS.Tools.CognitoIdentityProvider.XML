<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.CognitoIdentityProvider</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPCustomAttributeCmdlet">
            <summary>
            Adds additional user attributes to the user pool schema.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPCustomAttributeCmdlet.CustomAttribute">
            <summary>
            <para>
            <para>An array of custom attributes, such as Mutable and Name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPCustomAttributeCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool where you want to add custom attributes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPCustomAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AddCustomAttributesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPCustomAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPCustomAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPResourceTagCmdlet">
            <summary>
            Assigns a set of tags to an Amazon Cognito user pool. A tag is a label that you can
            use to categorize and manage user pools in different ways, such as by purpose, owner,
            environment, or other criteria.
            
             
            <para>
            Each tag consists of a key and value, both of which you define. A key is a general
            category for more specific values. For example, if you have two versions of a user
            pool, one for testing and another for production, you might assign an <code>Environment</code>
            tag key to both user pools. The value of this key might be <code>Test</code> for one
            user pool and <code>Production</code> for the other.
            </para><para>
            Tags are useful for cost tracking and access control. You can activate your tags so
            that they appear on the Billing and Cost Management console, where you can track the
            costs associated with your user pools. In an IAM policy, you can constrain permissions
            for user pools based on specific tags or tag values.
            </para><para>
            You can use this action up to 5 times per second, per account. A user pool can have
            as many as 50 tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the user pool to assign the tags to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to assign to the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPSoftwareTokenCmdlet">
            <summary>
            Returns a unique generated shared secret key code for the user account. The request
            takes an access token or a session string, but not both.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPSoftwareTokenCmdlet.AccessToken">
            <summary>
            <para>
            <para>The access token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPSoftwareTokenCmdlet.Session">
            <summary>
            <para>
            <para>The session which should be passed both ways in challenge-response calls to the service.
            This allows authentication of the user as part of the MFA setup process.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPSoftwareTokenCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AssociateSoftwareTokenResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.AssociateSoftwareTokenResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPSoftwareTokenCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPUserToGroupAdminCmdlet">
            <summary>
            Adds the specified user to the specified group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPUserToGroupAdminCmdlet.GroupName">
            <summary>
            <para>
            <para>The group name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPUserToGroupAdminCmdlet.Username">
            <summary>
            <para>
            <para>The username for the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPUserToGroupAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPUserToGroupAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPUserToGroupAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Username parameter.
            The -PassThru parameter is deprecated, use -Select '^Username' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.AddCGIPUserToGroupAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.ApproveCGIPDeviceCmdlet">
            <summary>
            Confirms tracking of the device. This API call is the call that begins device tracking.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ApproveCGIPDeviceCmdlet.AccessToken">
            <summary>
            <para>
            <para>The access token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ApproveCGIPDeviceCmdlet.DeviceKey">
            <summary>
            <para>
            <para>The device key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ApproveCGIPDeviceCmdlet.DeviceName">
            <summary>
            <para>
            <para>The device name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ApproveCGIPDeviceCmdlet.DeviceSecretVerifierConfig_PasswordVerifier">
            <summary>
            <para>
            <para>The password verifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ApproveCGIPDeviceCmdlet.DeviceSecretVerifierConfig_Salt">
            <summary>
            <para>
            <para>The salt.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ApproveCGIPDeviceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserConfirmationNecessary'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.ConfirmDeviceResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.ConfirmDeviceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ApproveCGIPDeviceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeviceKey parameter.
            The -PassThru parameter is deprecated, use -Select '^DeviceKey' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ApproveCGIPDeviceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPForgotPasswordCmdlet">
            <summary>
            Allows a user to enter a confirmation code to reset a forgotten password.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPForgotPasswordCmdlet.AnalyticsMetadata_AnalyticsEndpointId">
            <summary>
            <para>
            <para>The endpoint ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPForgotPasswordCmdlet.ClientId">
            <summary>
            <para>
            <para>The app client ID of the app associated with the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPForgotPasswordCmdlet.ClientMetadata">
            <summary>
            <para>
            <para>A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers. </para><para>You create custom workflows by assigning AWS Lambda functions to user pool triggers.
            When you use the ConfirmForgotPassword API action, Amazon Cognito invokes the function
            that is assigned to the <i>post confirmation</i> trigger. When Amazon Cognito invokes
            this function, it passes a JSON payload, which the function receives as input. This
            payload contains a <code>clientMetadata</code> attribute, which provides the data
            that you assigned to the ClientMetadata parameter in your ConfirmForgotPassword request.
            In your function code in AWS Lambda, you can process the <code>clientMetadata</code>
            value to enhance your workflow for your specific needs.</para><para>For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">Customizing
            User Pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.</para><note><para>Take the following limitations into consideration when you use the ClientMetadata
            parameter:</para><ul><li><para>Amazon Cognito does not store the ClientMetadata value. This data is available only
            to AWS Lambda triggers that are assigned to a user pool to support custom workflows.
            If your user pool configuration does not include triggers, the ClientMetadata parameter
            serves no purpose.</para></li><li><para>Amazon Cognito does not validate the ClientMetadata value.</para></li><li><para>Amazon Cognito does not encrypt the the ClientMetadata value, so don't use it to provide
            sensitive information.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPForgotPasswordCmdlet.ConfirmationCode">
            <summary>
            <para>
            <para>The confirmation code sent by a user's request to retrieve a forgotten password. For
            more information, see </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPForgotPasswordCmdlet.UserContextData_EncodedData">
            <summary>
            <para>
            <para>Contextual data such as the user's device fingerprint, IP address, or location used
            for evaluating the risk of an unexpected event by Amazon Cognito advanced security.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPForgotPasswordCmdlet.Password">
            <summary>
            <para>
            <para>The password sent by a user's request to retrieve a forgotten password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPForgotPasswordCmdlet.SecretHash">
            <summary>
            <para>
            <para>A keyed-hash message authentication code (HMAC) calculated using the secret key of
            a user pool client and username plus the client ID in the message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPForgotPasswordCmdlet.Username">
            <summary>
            <para>
            <para>The user name of the user for whom you want to enter a code to retrieve a forgotten
            password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPForgotPasswordCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPForgotPasswordCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Username parameter.
            The -PassThru parameter is deprecated, use -Select '^Username' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPForgotPasswordCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPUserRegistrationCmdlet">
            <summary>
            Confirms registration of a user and handles the existing alias from a previous user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPUserRegistrationCmdlet.AnalyticsMetadata_AnalyticsEndpointId">
            <summary>
            <para>
            <para>The endpoint ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPUserRegistrationCmdlet.ClientId">
            <summary>
            <para>
            <para>The ID of the app client associated with the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPUserRegistrationCmdlet.ClientMetadata">
            <summary>
            <para>
            <para>A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers. </para><para>You create custom workflows by assigning AWS Lambda functions to user pool triggers.
            When you use the ConfirmSignUp API action, Amazon Cognito invokes the function that
            is assigned to the <i>post confirmation</i> trigger. When Amazon Cognito invokes this
            function, it passes a JSON payload, which the function receives as input. This payload
            contains a <code>clientMetadata</code> attribute, which provides the data that you
            assigned to the ClientMetadata parameter in your ConfirmSignUp request. In your function
            code in AWS Lambda, you can process the <code>clientMetadata</code> value to enhance
            your workflow for your specific needs.</para><para>For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">Customizing
            User Pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.</para><note><para>Take the following limitations into consideration when you use the ClientMetadata
            parameter:</para><ul><li><para>Amazon Cognito does not store the ClientMetadata value. This data is available only
            to AWS Lambda triggers that are assigned to a user pool to support custom workflows.
            If your user pool configuration does not include triggers, the ClientMetadata parameter
            serves no purpose.</para></li><li><para>Amazon Cognito does not validate the ClientMetadata value.</para></li><li><para>Amazon Cognito does not encrypt the the ClientMetadata value, so don't use it to provide
            sensitive information.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPUserRegistrationCmdlet.ConfirmationCode">
            <summary>
            <para>
            <para>The confirmation code sent by a user's request to confirm registration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPUserRegistrationCmdlet.UserContextData_EncodedData">
            <summary>
            <para>
            <para>Contextual data such as the user's device fingerprint, IP address, or location used
            for evaluating the risk of an unexpected event by Amazon Cognito advanced security.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPUserRegistrationCmdlet.ForceAliasCreation">
            <summary>
            <para>
            <para>Boolean to be specified to force user confirmation irrespective of existing alias.
            By default set to <code>False</code>. If this parameter is set to <code>True</code>
            and the phone number/email used for sign up confirmation already exists as an alias
            with a different user, the API call will migrate the alias from the previous user
            to the newly created user being confirmed. If set to <code>False</code>, the API will
            throw an <b>AliasExistsException</b> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPUserRegistrationCmdlet.SecretHash">
            <summary>
            <para>
            <para>A keyed-hash message authentication code (HMAC) calculated using the secret key of
            a user pool client and username plus the client ID in the message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPUserRegistrationCmdlet.Username">
            <summary>
            <para>
            <para>The user name of the user whose registration you wish to confirm.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPUserRegistrationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.ConfirmSignUpResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPUserRegistrationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Username parameter.
            The -PassThru parameter is deprecated, use -Select '^Username' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPUserRegistrationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPUserRegistrationAdminCmdlet">
            <summary>
            Confirms user registration as an admin without using a confirmation code. Works on
            any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPUserRegistrationAdminCmdlet.ClientMetadata">
            <summary>
            <para>
            <para>A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers. </para><para>If your user pool configuration includes triggers, the AdminConfirmSignUp API action
            invokes the AWS Lambda function that is specified for the <i>post confirmation</i>
            trigger. When Amazon Cognito invokes this function, it passes a JSON payload, which
            the function receives as input. In this payload, the <code>clientMetadata</code> attribute
            provides the data that you assigned to the ClientMetadata parameter in your AdminConfirmSignUp
            request. In your function code in AWS Lambda, you can process the ClientMetadata value
            to enhance your workflow for your specific needs.</para><para>For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">Customizing
            User Pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.</para><note><para>Take the following limitations into consideration when you use the ClientMetadata
            parameter:</para><ul><li><para>Amazon Cognito does not store the ClientMetadata value. This data is available only
            to AWS Lambda triggers that are assigned to a user pool to support custom workflows.
            If your user pool configuration does not include triggers, the ClientMetadata parameter
            serves no purpose.</para></li><li><para>Amazon Cognito does not validate the ClientMetadata value.</para></li><li><para>Amazon Cognito does not encrypt the the ClientMetadata value, so don't use it to provide
            sensitive information.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPUserRegistrationAdminCmdlet.Username">
            <summary>
            <para>
            <para>The user name for which you want to confirm user registration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPUserRegistrationAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for which you want to confirm user registration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPUserRegistrationAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPUserRegistrationAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConfirmCGIPUserRegistrationAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.ConnectCGIPProviderForUserAdminCmdlet">
            <summary>
            Links an existing user account in a user pool (<code>DestinationUser</code>) to an
            identity from an external identity provider (<code>SourceUser</code>) based on a specified
            attribute name and value from the external identity provider. This allows you to create
            a link from the existing user account to an external federated user identity that
            has not yet been used to sign in, so that the federated user identity can be used
            to sign in as the existing user account. 
            
             
            <para>
             For example, if there is an existing user with a username and password, this API
            links that user to a federated user identity, so that when the federated user identity
            is used, the user signs in as the existing user account. 
            </para><important><para>
            Because this API allows a user with an external federated identity to sign in as an
            existing user in the user pool, it is critical that it only be used with external
            identity providers and provider attributes that have been trusted by the application
            owner.
            </para></important><para>
            See also .
            </para><para>
            This action is enabled only for admin access and requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConnectCGIPProviderForUserAdminCmdlet.DestinationUser_ProviderAttributeName">
            <summary>
            <para>
            <para>The name of the provider attribute to link to, for example, <code>NameID</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConnectCGIPProviderForUserAdminCmdlet.SourceUser_ProviderAttributeName">
            <summary>
            <para>
            <para>The name of the provider attribute to link to, for example, <code>NameID</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConnectCGIPProviderForUserAdminCmdlet.DestinationUser_ProviderAttributeValue">
            <summary>
            <para>
            <para>The value of the provider attribute to link to, for example, <code>xxxxx_account</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConnectCGIPProviderForUserAdminCmdlet.SourceUser_ProviderAttributeValue">
            <summary>
            <para>
            <para>The value of the provider attribute to link to, for example, <code>xxxxx_account</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConnectCGIPProviderForUserAdminCmdlet.DestinationUser_ProviderName">
            <summary>
            <para>
            <para>The name of the provider, for example, Facebook, Google, or Login with Amazon.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConnectCGIPProviderForUserAdminCmdlet.SourceUser_ProviderName">
            <summary>
            <para>
            <para>The name of the provider, for example, Facebook, Google, or Login with Amazon.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConnectCGIPProviderForUserAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConnectCGIPProviderForUserAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminLinkProviderForUserResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConnectCGIPProviderForUserAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ConnectCGIPProviderForUserAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.DisableCGIPProviderForUserAdminCmdlet">
            <summary>
            Disables the user from signing in with the specified external (SAML or social) identity
            provider. If the user to disable is a Cognito User Pools native username + password
            user, they are not permitted to use their password to sign-in. If the user to disable
            is a linked external IdP user, any link between that user and an existing user is
            removed. The next time the external user (no longer attached to the previously linked
            <code>DestinationUser</code>) signs in, they must create a new user account. See .
            
             
            <para>
            This action is enabled only for admin access and requires developer credentials.
            </para><para>
            The <code>ProviderName</code> must match the value specified when creating an IdP
            for the pool. 
            </para><para>
            To disable a native username + password user, the <code>ProviderName</code> value
            must be <code>Cognito</code> and the <code>ProviderAttributeName</code> must be <code>Cognito_Subject</code>,
            with the <code>ProviderAttributeValue</code> being the name that is used in the user
            pool for the user.
            </para><para>
            The <code>ProviderAttributeName</code> must always be <code>Cognito_Subject</code>
            for social identity providers. The <code>ProviderAttributeValue</code> must always
            be the exact subject that was used when the user was originally linked as a source
            user.
            </para><para>
            For de-linking a SAML identity, there are two scenarios. If the linked identity has
            not yet been used to sign-in, the <code>ProviderAttributeName</code> and <code>ProviderAttributeValue</code>
            must be the same values that were used for the <code>SourceUser</code> when the identities
            were originally linked in the call. (If the linking was done with <code>ProviderAttributeName</code>
            set to <code>Cognito_Subject</code>, the same applies here). However, if the user
            has already signed in, the <code>ProviderAttributeName</code> must be <code>Cognito_Subject</code>
            and <code>ProviderAttributeValue</code> must be the subject of the SAML assertion.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisableCGIPProviderForUserAdminCmdlet.User_ProviderAttributeName">
            <summary>
            <para>
            <para>The name of the provider attribute to link to, for example, <code>NameID</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisableCGIPProviderForUserAdminCmdlet.User_ProviderAttributeValue">
            <summary>
            <para>
            <para>The value of the provider attribute to link to, for example, <code>xxxxx_account</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisableCGIPProviderForUserAdminCmdlet.User_ProviderName">
            <summary>
            <para>
            <para>The name of the provider, for example, Facebook, Google, or Login with Amazon.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisableCGIPProviderForUserAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisableCGIPProviderForUserAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminDisableProviderForUserResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisableCGIPProviderForUserAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisableCGIPProviderForUserAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.DisableCGIPUserAdminCmdlet">
            <summary>
            Disables the specified user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisableCGIPUserAdminCmdlet.Username">
            <summary>
            <para>
            <para>The user name of the user you wish to disable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisableCGIPUserAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool where you want to disable the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisableCGIPUserAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminDisableUserResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisableCGIPUserAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisableCGIPUserAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.DisconnectCGIPDeviceGlobalCmdlet">
            <summary>
            Signs out users from all devices. It also invalidates all refresh tokens issued to
            a user. The user's current access and Id tokens remain valid until their expiry. Access
            and Id tokens expire one hour after they are issued.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisconnectCGIPDeviceGlobalCmdlet.AccessToken">
            <summary>
            <para>
            <para>The access token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisconnectCGIPDeviceGlobalCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.GlobalSignOutResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisconnectCGIPDeviceGlobalCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccessToken parameter.
            The -PassThru parameter is deprecated, use -Select '^AccessToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisconnectCGIPDeviceGlobalCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.DisconnectCGIPUserGlobalAdminCmdlet">
            <summary>
            Signs out users from all devices, as an administrator. It also invalidates all refresh
            tokens issued to a user. The user's current access and Id tokens remain valid until
            their expiry. Access and Id tokens expire one hour after they are issued.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisconnectCGIPUserGlobalAdminCmdlet.Username">
            <summary>
            <para>
            <para>The user name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisconnectCGIPUserGlobalAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisconnectCGIPUserGlobalAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisconnectCGIPUserGlobalAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Username parameter.
            The -PassThru parameter is deprecated, use -Select '^Username' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.DisconnectCGIPUserGlobalAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.EditCGIPDeviceStatusCmdlet">
            <summary>
            Updates the device status.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.EditCGIPDeviceStatusCmdlet.AccessToken">
            <summary>
            <para>
            <para>The access token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.EditCGIPDeviceStatusCmdlet.DeviceKey">
            <summary>
            <para>
            <para>The device key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.EditCGIPDeviceStatusCmdlet.DeviceRememberedStatus">
            <summary>
            <para>
            <para>The status of whether a device is remembered.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.EditCGIPDeviceStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.EditCGIPDeviceStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeviceKey parameter.
            The -PassThru parameter is deprecated, use -Select '^DeviceKey' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.EditCGIPDeviceStatusCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.EditCGIPDeviceStatusAdminCmdlet">
            <summary>
            Updates the device status as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.EditCGIPDeviceStatusAdminCmdlet.DeviceKey">
            <summary>
            <para>
            <para>The device key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.EditCGIPDeviceStatusAdminCmdlet.DeviceRememberedStatus">
            <summary>
            <para>
            <para>The status indicating whether a device has been remembered or not.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.EditCGIPDeviceStatusAdminCmdlet.Username">
            <summary>
            <para>
            <para>The user name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.EditCGIPDeviceStatusAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.EditCGIPDeviceStatusAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.EditCGIPDeviceStatusAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeviceKey parameter.
            The -PassThru parameter is deprecated, use -Select '^DeviceKey' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.EditCGIPDeviceStatusAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.EnableCGIPUserAdminCmdlet">
            <summary>
            Enables the specified user as an administrator. Works on any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.EnableCGIPUserAdminCmdlet.Username">
            <summary>
            <para>
            <para>The user name of the user you wish to enable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.EnableCGIPUserAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool where you want to enable the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.EnableCGIPUserAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminEnableUserResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.EnableCGIPUserAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.EnableCGIPUserAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPCSVHeaderCmdlet">
            <summary>
            Gets the header information for the .csv file to be used as input for the user import
            job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPCSVHeaderCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool that the users are to be imported into.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPCSVHeaderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.GetCSVHeaderResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.GetCSVHeaderResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPCSVHeaderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceCmdlet">
            <summary>
            Gets the device.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceCmdlet.AccessToken">
            <summary>
            <para>
            <para>The access token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceCmdlet.DeviceKey">
            <summary>
            <para>
            <para>The device key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Device'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.GetDeviceResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.GetDeviceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeviceKey parameter.
            The -PassThru parameter is deprecated, use -Select '^DeviceKey' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceAdminCmdlet">
            <summary>
            Gets the device, as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceAdminCmdlet.DeviceKey">
            <summary>
            <para>
            <para>The device key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceAdminCmdlet.Username">
            <summary>
            <para>
            <para>The user name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Device'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminGetDeviceResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.AdminGetDeviceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeviceKey parameter.
            The -PassThru parameter is deprecated, use -Select '^DeviceKey' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceListCmdlet">
            <summary>
            Lists the devices.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceListCmdlet.AccessToken">
            <summary>
            <para>
            <para>The access tokens for the request to list devices.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceListCmdlet.Limit">
            <summary>
            <para>
            <para>The limit of the device request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>60</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceListCmdlet.PaginationToken">
            <summary>
            <para>
            <para>The pagination token for the list request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PaginationToken $null' for the first call and '-PaginationToken $AWSHistory.LastServiceResponse.PaginationToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Devices'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.ListDevicesResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.ListDevicesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccessToken parameter.
            The -PassThru parameter is deprecated, use -Select '^AccessToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PaginationToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceListAdminCmdlet">
            <summary>
            Lists devices, as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceListAdminCmdlet.Username">
            <summary>
            <para>
            <para>The user name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceListAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceListAdminCmdlet.Limit">
            <summary>
            <para>
            <para>The limit of the devices request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>60</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceListAdminCmdlet.PaginationToken">
            <summary>
            <para>
            <para>The pagination token.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PaginationToken $null' for the first call and '-PaginationToken $AWSHistory.LastServiceResponse.PaginationToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceListAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Devices'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminListDevicesResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.AdminListDevicesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceListAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Username parameter.
            The -PassThru parameter is deprecated, use -Select '^Username' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPDeviceListAdminCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PaginationToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPGroupCmdlet">
            <summary>
            Gets a group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPGroupCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Group'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.GetGroupResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.GetGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPGroupListCmdlet">
            <summary>
            Lists the groups associated with a user pool.
            
             
            <para>
            Calling this action requires developer credentials.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPGroupListCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPGroupListCmdlet.Limit">
            <summary>
            <para>
            <para>The limit of the request to list groups.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>60</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPGroupListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPGroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Groups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.ListGroupsResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.ListGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPGroupListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPGroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPGroupsForUserAdminCmdlet">
            <summary>
            Lists the groups that the user belongs to.
            
             
            <para>
            Calling this action requires developer credentials.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPGroupsForUserAdminCmdlet.Username">
            <summary>
            <para>
            <para>The username for the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPGroupsForUserAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPGroupsForUserAdminCmdlet.Limit">
            <summary>
            <para>
            <para>The limit of the request to list groups.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>60</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPGroupsForUserAdminCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPGroupsForUserAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Groups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPGroupsForUserAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Username parameter.
            The -PassThru parameter is deprecated, use -Select '^Username' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPGroupsForUserAdminCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPIdentityProviderCmdlet">
            <summary>
            Gets information about a specific identity provider.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPIdentityProviderCmdlet.ProviderName">
            <summary>
            <para>
            <para>The identity provider name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPIdentityProviderCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPIdentityProviderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IdentityProvider'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.DescribeIdentityProviderResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.DescribeIdentityProviderResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPIdentityProviderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProviderName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProviderName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPIdentityProviderByIdentifierCmdlet">
            <summary>
            Gets the specified identity provider.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPIdentityProviderByIdentifierCmdlet.IdpIdentifier">
            <summary>
            <para>
            <para>The identity provider ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPIdentityProviderByIdentifierCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPIdentityProviderByIdentifierCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IdentityProvider'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.GetIdentityProviderByIdentifierResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.GetIdentityProviderByIdentifierResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPIdentityProviderByIdentifierCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IdpIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^IdpIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPIdentityProviderListCmdlet">
            <summary>
            Lists information about all identity providers for a user pool.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPIdentityProviderListCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPIdentityProviderListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of identity providers to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPIdentityProviderListCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPIdentityProviderListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Providers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPIdentityProviderListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPIdentityProviderListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPResourceServerCmdlet">
            <summary>
            Describes a resource server.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPResourceServerCmdlet.Identifier">
            <summary>
            <para>
            <para>The identifier for the resource server</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPResourceServerCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool that hosts the resource server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPResourceServerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourceServer'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.DescribeResourceServerResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.DescribeResourceServerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPResourceServerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Identifier parameter.
            The -PassThru parameter is deprecated, use -Select '^Identifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPResourceServerListCmdlet">
            <summary>
            Lists the resource servers for a user pool.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPResourceServerListCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPResourceServerListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of resource servers to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPResourceServerListCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPResourceServerListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourceServers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.ListResourceServersResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.ListResourceServersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPResourceServerListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPResourceServerListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPResourceTagCmdlet">
            <summary>
            Lists the tags that are assigned to an Amazon Cognito user pool.
            
             
            <para>
            A tag is a label that you can apply to user pools to categorize and manage them in
            different ways, such as by purpose, owner, environment, or other criteria.
            </para><para>
            You can use this action up to 10 times per second, per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the user pool that the tags are assigned to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPRiskConfigurationCmdlet">
            <summary>
            Describes the risk configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPRiskConfigurationCmdlet.ClientId">
            <summary>
            <para>
            <para>The app client ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPRiskConfigurationCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPRiskConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RiskConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.DescribeRiskConfigurationResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.DescribeRiskConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPRiskConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPSigningCertificateCmdlet">
            <summary>
            This method takes a user pool ID, and returns the signing certificate.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPSigningCertificateCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPSigningCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Certificate'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.GetSigningCertificateResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.GetSigningCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPSigningCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUICustomizationCmdlet">
            <summary>
            Gets the UI Customization information for a particular app client's app UI, if there
            is something set. If nothing is set for the particular client, but there is an existing
            pool level customization (app <code>clientId</code> will be <code>ALL</code>), then
            that is returned. If nothing is present, then an empty shape is returned.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUICustomizationCmdlet.ClientId">
            <summary>
            <para>
            <para>The client ID for the client app.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUICustomizationCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUICustomizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UICustomization'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.GetUICustomizationResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.GetUICustomizationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUICustomizationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserCmdlet">
            <summary>
            Gets the user attributes and metadata for a user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserCmdlet.AccessToken">
            <summary>
            <para>
            <para>The access token returned by the server response to get information about the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.GetUserResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.GetUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccessToken parameter.
            The -PassThru parameter is deprecated, use -Select '^AccessToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserAdminCmdlet">
            <summary>
            Gets the specified user by user name in a user pool as an administrator. Works on
            any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserAdminCmdlet.Username">
            <summary>
            <para>
            <para>The user name of the user you wish to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool where you want to get information about the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserAttributeVerificationCodeCmdlet">
            <summary>
            Gets the user attribute verification code for the specified attribute name.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserAttributeVerificationCodeCmdlet.AccessToken">
            <summary>
            <para>
            <para>The access token returned by the server response to get the user attribute verification
            code.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserAttributeVerificationCodeCmdlet.AttributeName">
            <summary>
            <para>
            <para>The attribute name returned by the server response to get the user attribute verification
            code.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserAttributeVerificationCodeCmdlet.ClientMetadata">
            <summary>
            <para>
            <para>A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers. </para><para>You create custom workflows by assigning AWS Lambda functions to user pool triggers.
            When you use the GetUserAttributeVerificationCode API action, Amazon Cognito invokes
            the function that is assigned to the <i>custom message</i> trigger. When Amazon Cognito
            invokes this function, it passes a JSON payload, which the function receives as input.
            This payload contains a <code>clientMetadata</code> attribute, which provides the
            data that you assigned to the ClientMetadata parameter in your GetUserAttributeVerificationCode
            request. In your function code in AWS Lambda, you can process the <code>clientMetadata</code>
            value to enhance your workflow for your specific needs.</para><para>For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">Customizing
            User Pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.</para><note><para>Take the following limitations into consideration when you use the ClientMetadata
            parameter:</para><ul><li><para>Amazon Cognito does not store the ClientMetadata value. This data is available only
            to AWS Lambda triggers that are assigned to a user pool to support custom workflows.
            If your user pool configuration does not include triggers, the ClientMetadata parameter
            serves no purpose.</para></li><li><para>Amazon Cognito does not validate the ClientMetadata value.</para></li><li><para>Amazon Cognito does not encrypt the the ClientMetadata value, so don't use it to provide
            sensitive information.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserAttributeVerificationCodeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CodeDeliveryDetails'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserAuthEventListAdminCmdlet">
            <summary>
            Lists a history of user activity and any risks detected as part of Amazon Cognito
            advanced security.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserAuthEventListAdminCmdlet.Username">
            <summary>
            <para>
            <para>The user pool username or an alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserAuthEventListAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserAuthEventListAdminCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of authentication events to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserAuthEventListAdminCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserAuthEventListAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AuthEvents'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserAuthEventListAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserAuthEventListAdminCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserImportJobCmdlet">
            <summary>
            Describes the user import job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserImportJobCmdlet.JobId">
            <summary>
            <para>
            <para>The job ID for the user import job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserImportJobCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool that the users are being imported into.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserImportJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserImportJob'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserImportJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserImportJobListCmdlet">
            <summary>
            Lists the user import jobs.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserImportJobListCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool that the users are being imported into.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserImportJobListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of import jobs you want the request to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>60</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserImportJobListCmdlet.PaginationToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to <code>ListUserImportJobs</code>,
            which can be used to return the next set of import jobs in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PaginationToken $null' for the first call and '-PaginationToken $AWSHistory.LastServiceResponse.PaginationToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserImportJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserImportJobs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.ListUserImportJobsResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.ListUserImportJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserImportJobListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserImportJobListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PaginationToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserListCmdlet">
            <summary>
            Lists the users in the Amazon Cognito user pool.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserListCmdlet.AttributesToGet">
            <summary>
            <para>
            <para>An array of strings, where each string is the name of a user attribute to be returned
            for each user in the search results. If the array is null, all attributes are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserListCmdlet.Filter">
            <summary>
            <para>
            <para>A filter string of the form "<i>AttributeName</i><i>Filter-Type</i> "<i>AttributeValue</i>"".
            Quotation marks within the filter string must be escaped using the backslash (\) character.
            For example, "<code>family_name</code> = \"Reddy\"".</para><ul><li><para><i>AttributeName</i>: The name of the attribute to search for. You can only search
            for one attribute at a time.</para></li><li><para><i>Filter-Type</i>: For an exact match, use =, for example, "<code>given_name</code>
            = \"Jon\"". For a prefix ("starts with") match, use ^=, for example, "<code>given_name</code>
            ^= \"Jon\"". </para></li><li><para><i>AttributeValue</i>: The attribute value that must be matched for each user.</para></li></ul><para>If the filter string is empty, <code>ListUsers</code> returns all users in the user
            pool.</para><para>You can only search for the following standard attributes:</para><ul><li><para><code>username</code> (case-sensitive)</para></li><li><para><code>email</code></para></li><li><para><code>phone_number</code></para></li><li><para><code>name</code></para></li><li><para><code>given_name</code></para></li><li><para><code>family_name</code></para></li><li><para><code>preferred_username</code></para></li><li><para><code>cognito:user_status</code> (called <b>Status</b> in the Console) (case-insensitive)</para></li><li><para><code>status (called <b>Enabled</b> in the Console) (case-sensitive)</code></para></li><li><para><code>sub</code></para></li></ul><para>Custom attributes are not searchable.</para><para>For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/how-to-manage-user-accounts.html#cognito-user-pools-searching-for-users-using-listusers-api">Searching
            for Users Using the ListUsers API</a> and <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/how-to-manage-user-accounts.html#cognito-user-pools-searching-for-users-listusers-api-examples">Examples
            of Using the ListUsers API</a> in the <i>Amazon Cognito Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserListCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool on which the search should be performed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserListCmdlet.Limit">
            <summary>
            <para>
            <para>Maximum number of users to be returned.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>60</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserListCmdlet.PaginationToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PaginationToken $null' for the first call and '-PaginationToken $AWSHistory.LastServiceResponse.PaginationToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Users'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.ListUsersResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.ListUsersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PaginationToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolCmdlet">
            <summary>
            Returns the configuration information and metadata of the specified user pool.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool you want to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserPool'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.DescribeUserPoolResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.DescribeUserPoolResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolClientCmdlet">
            <summary>
            Client method for returning the configuration information and metadata of the specified
            user pool app client.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolClientCmdlet.ClientId">
            <summary>
            <para>
            <para>The app client ID of the app associated with the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolClientCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool you want to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolClientCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserPoolClient'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolClientCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolClientListCmdlet">
            <summary>
            Lists the clients that have been created for the specified user pool.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolClientListCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool where you want to list user pool clients.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolClientListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results you want the request to return when listing the user
            pool clients.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolClientListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolClientListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserPoolClients'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolClientListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolClientListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolDomainCmdlet">
            <summary>
            Gets information about a domain.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolDomainCmdlet.Domain">
            <summary>
            <para>
            <para>The domain string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DomainDescription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.DescribeUserPoolDomainResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.DescribeUserPoolDomainResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Domain parameter.
            The -PassThru parameter is deprecated, use -Select '^Domain' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolListCmdlet">
            <summary>
            Lists the user pools associated with an AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results you want the request to return when listing the user
            pools.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserPools'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.ListUserPoolsResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.ListUserPoolsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolMfaConfigCmdlet">
            <summary>
            Gets the user pool multi-factor authentication (MFA) configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolMfaConfigCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolMfaConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.GetUserPoolMfaConfigResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.GetUserPoolMfaConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUserPoolMfaConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUsersInGroupCmdlet">
            <summary>
            Lists the users in the specified group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUsersInGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUsersInGroupCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUsersInGroupCmdlet.Limit">
            <summary>
            <para>
            <para>The limit of the request to list users.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>60</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUsersInGroupCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUsersInGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Users'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.ListUsersInGroupResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.ListUsersInGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUsersInGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.GetCGIPUsersInGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPGroupCmdlet">
            <summary>
            Creates a new group in the specified user pool.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPGroupCmdlet.Description">
            <summary>
            <para>
            <para>A string containing the description of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the group. Must be unique.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPGroupCmdlet.Precedence">
            <summary>
            <para>
            <para>A nonnegative integer value that specifies the precedence of this group relative to
            the other groups that a user can belong to in the user pool. Zero is the highest precedence
            value. Groups with lower <code>Precedence</code> values take precedence over groups
            with higher or null <code>Precedence</code> values. If a user belongs to two or more
            groups, it is the group with the lowest precedence value whose role ARN will be used
            in the <code>cognito:roles</code> and <code>cognito:preferred_role</code> claims in
            the user's tokens.</para><para>Two groups can have the same <code>Precedence</code> value. If this happens, neither
            group takes precedence over the other. If two groups with the same <code>Precedence</code>
            have the same role ARN, that role is used in the <code>cognito:preferred_role</code>
            claim in tokens for users in each group. If the two groups have different role ARNs,
            the <code>cognito:preferred_role</code> claim is not set in users' tokens.</para><para>The default <code>Precedence</code> value is null.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPGroupCmdlet.RoleArn">
            <summary>
            <para>
            <para>The role ARN for the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPGroupCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Group'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.CreateGroupResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.CreateGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPIdentityProviderCmdlet">
            <summary>
            Creates an identity provider for a user pool.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPIdentityProviderCmdlet.AttributeMapping">
            <summary>
            <para>
            <para>A mapping of identity provider attributes to standard and custom user pool attributes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPIdentityProviderCmdlet.IdpIdentifier">
            <summary>
            <para>
            <para>A list of identity provider identifiers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPIdentityProviderCmdlet.ProviderDetail">
            <summary>
            <para>
            <para>The identity provider details. The following list describes the provider detail keys
            for each identity provider type.</para><ul><li><para>For Google, Facebook and Login with Amazon:</para><ul><li><para>client_id</para></li><li><para>client_secret</para></li><li><para>authorize_scopes</para></li></ul></li><li><para>For Sign in with Apple:</para><ul><li><para>client_id</para></li><li><para>team_id</para></li><li><para>key_id</para></li><li><para>private_key</para></li><li><para>authorize_scopes</para></li></ul></li><li><para>For OIDC providers:</para><ul><li><para>client_id</para></li><li><para>client_secret</para></li><li><para>attributes_request_method</para></li><li><para>oidc_issuer</para></li><li><para>authorize_scopes</para></li><li><para>authorize_url <i>if not available from discovery URL specified by oidc_issuer key</i></para></li><li><para>token_url <i>if not available from discovery URL specified by oidc_issuer key</i></para></li><li><para>attributes_url <i>if not available from discovery URL specified by oidc_issuer key</i></para></li><li><para>jwks_uri <i>if not available from discovery URL specified by oidc_issuer key</i></para></li><li><para>authorize_scopes</para></li></ul></li><li><para>For SAML providers:</para><ul><li><para>MetadataFile OR MetadataURL</para></li><li><para>IDPSignout <i>optional</i></para></li></ul></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPIdentityProviderCmdlet.ProviderName">
            <summary>
            <para>
            <para>The identity provider name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPIdentityProviderCmdlet.ProviderType">
            <summary>
            <para>
            <para>The identity provider type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPIdentityProviderCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPIdentityProviderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IdentityProvider'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.CreateIdentityProviderResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.CreateIdentityProviderResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPIdentityProviderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProviderName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProviderName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPIdentityProviderCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPResourceServerCmdlet">
            <summary>
            Creates a new OAuth2.0 resource server and defines custom scopes in it.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPResourceServerCmdlet.Identifier">
            <summary>
            <para>
            <para>A unique resource server identifier for the resource server. This could be an HTTPS
            endpoint where the resource server is located. For example, <code>https://my-weather-api.example.com</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPResourceServerCmdlet.Name">
            <summary>
            <para>
            <para>A friendly name for the resource server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPResourceServerCmdlet.Scope">
            <summary>
            <para>
            <para>A list of scopes. Each scope is map, where the keys are <code>name</code> and <code>description</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPResourceServerCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPResourceServerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourceServer'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.CreateResourceServerResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.CreateResourceServerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPResourceServerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Identifier parameter.
            The -PassThru parameter is deprecated, use -Select '^Identifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPResourceServerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserAdminCmdlet">
            <summary>
            Creates a new user in the specified user pool.
            
             
            <para>
            If <code>MessageAction</code> is not set, the default is to send a welcome message
            via email or phone (SMS).
            </para><note><para>
            This message is based on a template that you configured in your call to or . This
            template includes your custom sign-up instructions and placeholders for user name
            and temporary password.
            </para></note><para>
            Alternatively, you can call AdminCreateUser with “SUPPRESS” for the <code>MessageAction</code>
            parameter, and Amazon Cognito will not send any email. 
            </para><para>
            In either case, the user will be in the <code>FORCE_CHANGE_PASSWORD</code> state until
            they sign in and change their password.
            </para><para>
            AdminCreateUser requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserAdminCmdlet.ClientMetadata">
            <summary>
            <para>
            <para>A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers. </para><para>You create custom workflows by assigning AWS Lambda functions to user pool triggers.
            When you use the AdminCreateUser API action, Amazon Cognito invokes the function that
            is assigned to the <i>pre sign-up</i> trigger. When Amazon Cognito invokes this function,
            it passes a JSON payload, which the function receives as input. This payload contains
            a <code>clientMetadata</code> attribute, which provides the data that you assigned
            to the ClientMetadata parameter in your AdminCreateUser request. In your function
            code in AWS Lambda, you can process the <code>clientMetadata</code> value to enhance
            your workflow for your specific needs.</para><para>For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">Customizing
            User Pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.</para><note><para>Take the following limitations into consideration when you use the ClientMetadata
            parameter:</para><ul><li><para>Amazon Cognito does not store the ClientMetadata value. This data is available only
            to AWS Lambda triggers that are assigned to a user pool to support custom workflows.
            If your user pool configuration does not include triggers, the ClientMetadata parameter
            serves no purpose.</para></li><li><para>Amazon Cognito does not validate the ClientMetadata value.</para></li><li><para>Amazon Cognito does not encrypt the the ClientMetadata value, so don't use it to provide
            sensitive information.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserAdminCmdlet.DesiredDeliveryMedium">
            <summary>
            <para>
            <para>Specify <code>"EMAIL"</code> if email will be used to send the welcome message. Specify
            <code>"SMS"</code> if the phone number will be used. The default value is <code>"SMS"</code>.
            More than one value can be specified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserAdminCmdlet.ForceAliasCreation">
            <summary>
            <para>
            <para>This parameter is only used if the <code>phone_number_verified</code> or <code>email_verified</code>
            attribute is set to <code>True</code>. Otherwise, it is ignored.</para><para>If this parameter is set to <code>True</code> and the phone number or email address
            specified in the UserAttributes parameter already exists as an alias with a different
            user, the API call will migrate the alias from the previous user to the newly created
            user. The previous user will no longer be able to log in using that alias.</para><para>If this parameter is set to <code>False</code>, the API throws an <code>AliasExistsException</code>
            error if the alias already exists. The default value is <code>False</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserAdminCmdlet.MessageAction">
            <summary>
            <para>
            <para>Set to <code>"RESEND"</code> to resend the invitation message to a user that already
            exists and reset the expiration limit on the user's account. Set to <code>"SUPPRESS"</code>
            to suppress sending the message. Only one value can be specified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserAdminCmdlet.TemporaryPassword">
            <summary>
            <para>
            <para>The user's temporary password. This password must conform to the password policy that
            you specified when you created the user pool.</para><para>The temporary password is valid only once. To complete the Admin Create User flow,
            the user must enter the temporary password in the sign-in page along with a new password
            to be used in all future sign-ins.</para><para>This parameter is not required. If you do not specify a value, Amazon Cognito generates
            one for you.</para><para>The temporary password can only be used until the user account expiration limit that
            you specified when you created the user pool. To reset the account after that time
            limit, you must call <code>AdminCreateUser</code> again, specifying <code>"RESEND"</code>
            for the <code>MessageAction</code> parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserAdminCmdlet.UserAttribute">
            <summary>
            <para>
            <para>An array of name-value pairs that contain user attributes and attribute values to
            be set for the user to be created. You can create a user without specifying any attributes
            other than <code>Username</code>. However, any attributes that you specify as required
            (in or in the <b>Attributes</b> tab of the console) must be supplied either by you
            (in your call to <code>AdminCreateUser</code>) or by the user (when he or she signs
            up in response to your welcome message).</para><para>For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute
            name.</para><para>To send a message inviting the user to sign up, you must specify the user's email
            address or phone number. This can be done in your call to AdminCreateUser or in the
            <b>Users</b> tab of the Amazon Cognito console for managing your user pools.</para><para>In your call to <code>AdminCreateUser</code>, you can set the <code>email_verified</code>
            attribute to <code>True</code>, and you can set the <code>phone_number_verified</code>
            attribute to <code>True</code>. (You can also do this by calling .)</para><ul><li><para><b>email</b>: The email address of the user to whom the message that contains the
            code and username will be sent. Required if the <code>email_verified</code> attribute
            is set to <code>True</code>, or if <code>"EMAIL"</code> is specified in the <code>DesiredDeliveryMediums</code>
            parameter.</para></li><li><para><b>phone_number</b>: The phone number of the user to whom the message that contains
            the code and username will be sent. Required if the <code>phone_number_verified</code>
            attribute is set to <code>True</code>, or if <code>"SMS"</code> is specified in the
            <code>DesiredDeliveryMediums</code> parameter.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserAdminCmdlet.Username">
            <summary>
            <para>
            <para>The username for the user. Must be unique within the user pool. Must be a UTF-8 string
            between 1 and 128 characters. After the user is created, the username cannot be changed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool where the user will be created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserAdminCmdlet.ValidationData">
            <summary>
            <para>
            <para>The user's validation data. This is an array of name-value pairs that contain user
            attributes and attribute values that you can use for custom validation, such as restricting
            the types of user accounts that can be registered. For example, you might choose to
            allow or disallow user sign-up based on the user's domain.</para><para>To configure custom validation, you must create a Pre Sign-up Lambda trigger for the
            user pool as described in the Amazon Cognito Developer Guide. The Lambda trigger receives
            the validation data and uses it in the validation process.</para><para>The user's validation data is not persisted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'User'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminCreateUserResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.AdminCreateUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserImportJobCmdlet">
            <summary>
            Creates the user import job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserImportJobCmdlet.CloudWatchLogsRoleArn">
            <summary>
            <para>
            <para>The role ARN for the Amazon CloudWatch Logging role for the user import job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserImportJobCmdlet.JobName">
            <summary>
            <para>
            <para>The job name for the user import job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserImportJobCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool that the users are being imported into.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserImportJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserImportJob'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.CreateUserImportJobResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.CreateUserImportJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserImportJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserImportJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet">
            <summary>
            Creates a new Amazon Cognito user pool and sets the password policy for the pool.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.UserPoolAddOns_AdvancedSecurityMode">
            <summary>
            <para>
            <para>The advanced security mode.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.AliasAttribute">
            <summary>
            <para>
            <para>Attributes supported as an alias for this user pool. Possible values: <b>phone_number</b>,
            <b>email</b>, or <b>preferred_username</b>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.AdminCreateUserConfig_AllowAdminCreateUserOnly">
            <summary>
            <para>
            <para>Set to <code>True</code> if only the administrator is allowed to create user profiles.
            Set to <code>False</code> if users can sign themselves up via an app.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.AutoVerifiedAttribute">
            <summary>
            <para>
            <para>The attributes to be auto-verified. Possible values: <b>email</b>, <b>phone_number</b>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.UsernameConfiguration_CaseSensitive">
            <summary>
            <para>
            <para>Specifies whether username case sensitivity will be applied for all users in the user
            pool through Cognito APIs.</para><para>Valid values include:</para><ul><li><para><b><code>True</code></b>: Enables case sensitivity for all username input. When
            this option is set to <code>True</code>, users must sign in using the exact capitalization
            of their given username. For example, “UserName”. This is the default value.</para></li><li><para><b><code>False</code></b>: Enables case insensitivity for all username input. For
            example, when this option is set to <code>False</code>, users will be able to sign
            in using either "username" or "Username". This option also enables both <code>preferred_username</code>
            and <code>email</code> alias to be case insensitive, in addition to the <code>username</code>
            attribute.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.DeviceConfiguration_ChallengeRequiredOnNewDevice">
            <summary>
            <para>
            <para>Indicates whether a challenge is required on a new device. Only applicable to a new
            device.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.EmailConfiguration_ConfigurationSet">
            <summary>
            <para>
            <para>The set of configuration rules that can be applied to emails sent using Amazon SES.
            A configuration set is applied to an email by including a reference to the configuration
            set in the headers of the email. Once applied, all of the rules in that configuration
            set are applied to the email. Configuration sets can be used to apply the following
            types of rules to emails: </para><ul><li><para>Event publishing – Amazon SES can track the number of send, delivery, open, click,
            bounce, and complaint events for each email sent. Use event publishing to send information
            about these events to other AWS services such as SNS and CloudWatch.</para></li><li><para>IP pool management – When leasing dedicated IP addresses with Amazon SES, you can
            create groups of IP addresses, called dedicated IP pools. You can then associate the
            dedicated IP pools with configuration sets.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.LambdaConfig_CreateAuthChallenge">
            <summary>
            <para>
            <para>Creates an authentication challenge.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.LambdaConfig_CustomMessage">
            <summary>
            <para>
            <para>A custom Message AWS Lambda trigger.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.VerificationMessageTemplate_DefaultEmailOption">
            <summary>
            <para>
            <para>The default email option.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.LambdaConfig_DefineAuthChallenge">
            <summary>
            <para>
            <para>Defines the authentication challenge.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.DeviceConfiguration_DeviceOnlyRememberedOnUserPrompt">
            <summary>
            <para>
            <para>If true, a device is only remembered on user prompt.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.InviteMessageTemplate_EmailMessage">
            <summary>
            <para>
            <para>The message template for email messages.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.VerificationMessageTemplate_EmailMessage">
            <summary>
            <para>
            <para>The email message template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.VerificationMessageTemplate_EmailMessageByLink">
            <summary>
            <para>
            <para>The email message template for sending a confirmation link to the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.EmailConfiguration_EmailSendingAccount">
            <summary>
            <para>
            <para>Specifies whether Amazon Cognito emails your users by using its built-in email functionality
            or your Amazon SES email configuration. Specify one of the following values:</para><dl><dt>COGNITO_DEFAULT</dt><dd><para>When Amazon Cognito emails your users, it uses its built-in email functionality. When
            you use the default option, Amazon Cognito allows only a limited number of emails
            each day for your user pool. For typical production environments, the default email
            limit is below the required delivery volume. To achieve a higher delivery volume,
            specify DEVELOPER to use your Amazon SES email configuration.</para><para>To look up the email delivery limit for the default option, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/limits.html">Limits
            in Amazon Cognito</a> in the <i>Amazon Cognito Developer Guide</i>.</para><para>The default FROM address is no-reply@verificationemail.com. To customize the FROM
            address, provide the ARN of an Amazon SES verified email address for the <code>SourceArn</code>
            parameter.</para></dd><dt>DEVELOPER</dt><dd><para>When Amazon Cognito emails your users, it uses your Amazon SES configuration. Amazon
            Cognito calls Amazon SES on your behalf to send email from your verified email address.
            When you use this option, the email delivery limits are the same limits that apply
            to your Amazon SES verified email address in your AWS account.</para><para>If you use this option, you must provide the ARN of an Amazon SES verified email address
            for the <code>SourceArn</code> parameter.</para><para>Before Amazon Cognito can email your users, it requires additional permissions to
            call Amazon SES on your behalf. When you update your user pool with this option, Amazon
            Cognito creates a <i>service-linked role</i>, which is a type of IAM role, in your
            AWS account. This role contains the permissions that allow Amazon Cognito to access
            Amazon SES and send email messages with your address. For more information about the
            service-linked role that Amazon Cognito creates, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/using-service-linked-roles.html">Using
            Service-Linked Roles for Amazon Cognito</a> in the <i>Amazon Cognito Developer Guide</i>.</para></dd></dl>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.InviteMessageTemplate_EmailSubject">
            <summary>
            <para>
            <para>The subject line for email messages.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.VerificationMessageTemplate_EmailSubject">
            <summary>
            <para>
            <para>The subject line for the email message template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.VerificationMessageTemplate_EmailSubjectByLink">
            <summary>
            <para>
            <para>The subject line for the email message template for sending a confirmation link to
            the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.EmailVerificationMessage">
            <summary>
            <para>
            <para>A string representing the email verification message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.EmailVerificationSubject">
            <summary>
            <para>
            <para>A string representing the email verification subject.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.SmsConfiguration_ExternalId">
            <summary>
            <para>
            <para>The external ID is a value that we recommend you use to add security to your IAM role
            which is used to call Amazon SNS to send SMS messages for your user pool. If you provide
            an <code>ExternalId</code>, the Cognito User Pool will include it when attempting
            to assume your IAM role, so that you can set your roles trust policy to require the
            <code>ExternalID</code>. If you use the Cognito Management Console to create a role
            for SMS MFA, Cognito will create a role with the required permissions and a trust
            policy that demonstrates use of the <code>ExternalId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.EmailConfiguration_From">
            <summary>
            <para>
            <para>Identifies either the sender’s email address or the sender’s name with their email
            address. For example, <code>testuser@example.com</code> or <code>Test User &lt;testuser@example.com&gt;</code>.
            This address will appear before the body of the email.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.MfaConfiguration">
            <summary>
            <para>
            <para>Specifies MFA configuration details.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.PasswordPolicy_MinimumLength">
            <summary>
            <para>
            <para>The minimum length of the password policy that you have set. Cannot be less than 6.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.PoolName">
            <summary>
            <para>
            <para>A string used to name the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.LambdaConfig_PostAuthentication">
            <summary>
            <para>
            <para>A post-authentication AWS Lambda trigger.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.LambdaConfig_PostConfirmation">
            <summary>
            <para>
            <para>A post-confirmation AWS Lambda trigger.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.LambdaConfig_PreAuthentication">
            <summary>
            <para>
            <para>A pre-authentication AWS Lambda trigger.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.LambdaConfig_PreSignUp">
            <summary>
            <para>
            <para>A pre-registration AWS Lambda trigger.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.LambdaConfig_PreTokenGeneration">
            <summary>
            <para>
            <para>A Lambda trigger that is invoked before token generation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.AccountRecoverySetting_RecoveryMechanism">
            <summary>
            <para>
            <para>The list of <code>RecoveryOptionTypes</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.EmailConfiguration_ReplyToEmailAddress">
            <summary>
            <para>
            <para>The destination to which the receiver of the email should reply to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.PasswordPolicy_RequireLowercase">
            <summary>
            <para>
            <para>In the password policy that you have set, refers to whether you have required users
            to use at least one lowercase letter in their password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.PasswordPolicy_RequireNumber">
            <summary>
            <para>
            <para>In the password policy that you have set, refers to whether you have required users
            to use at least one number in their password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.PasswordPolicy_RequireSymbol">
            <summary>
            <para>
            <para>In the password policy that you have set, refers to whether you have required users
            to use at least one symbol in their password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.PasswordPolicy_RequireUppercase">
            <summary>
            <para>
            <para>In the password policy that you have set, refers to whether you have required users
            to use at least one uppercase letter in their password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.Schema">
            <summary>
            <para>
            <para>An array of schema attributes for the new user pool. These attributes can be standard
            or custom attributes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.SmsAuthenticationMessage">
            <summary>
            <para>
            <para>A string representing the SMS authentication message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.VerificationMessageTemplate_SmsMessage">
            <summary>
            <para>
            <para>The SMS message template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.InviteMessageTemplate_SMSMessage">
            <summary>
            <para>
            <para>The message template for SMS messages.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.SmsVerificationMessage">
            <summary>
            <para>
            <para>A string representing the SMS verification message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.SmsConfiguration_SnsCallerArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) caller.
            This is the ARN of the IAM role in your AWS account which Cognito will use to send
            SMS messages.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.EmailConfiguration_SourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of a verified email address in Amazon SES. This email
            address is used in one of the following ways, depending on the value that you specify
            for the <code>EmailSendingAccount</code> parameter:</para><ul><li><para>If you specify <code>COGNITO_DEFAULT</code>, Amazon Cognito uses this address as the
            custom FROM address when it emails your users by using its built-in email account.</para></li><li><para>If you specify <code>DEVELOPER</code>, Amazon Cognito emails your users with this
            address by calling Amazon SES on your behalf.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.PasswordPolicy_TemporaryPasswordValidityDay">
            <summary>
            <para>
            <para>In the password policy you have set, refers to the number of days a temporary password
            is valid. If the user does not sign-in during this time, their password will need
            to be reset by an administrator.</para><note><para>When you set <code>TemporaryPasswordValidityDays</code> for a user pool, you will
            no longer be able to set the deprecated <code>UnusedAccountValidityDays</code> value
            for that user pool.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.AdminCreateUserConfig_UnusedAccountValidityDay">
            <summary>
            <para>
            <para>The user account expiration limit, in days, after which the account is no longer usable.
            To reset the account after that time limit, you must call <code>AdminCreateUser</code>
            again, specifying <code>"RESEND"</code> for the <code>MessageAction</code> parameter.
            The default value for this parameter is 7. </para><note><para>If you set a value for <code>TemporaryPasswordValidityDays</code> in <code>PasswordPolicy</code>,
            that value will be used and <code>UnusedAccountValidityDays</code> will be deprecated
            for that user pool. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.LambdaConfig_UserMigration">
            <summary>
            <para>
            <para>The user migration Lambda config type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.UsernameAttribute">
            <summary>
            <para>
            <para>Specifies whether email addresses or phone numbers can be specified as usernames when
            a user signs up.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.UserPoolTag">
            <summary>
            <para>
            <para>The tag keys and values to assign to the user pool. A tag is a label that you can
            use to categorize and manage user pools in different ways, such as by purpose, owner,
            environment, or other criteria.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.LambdaConfig_VerifyAuthChallengeResponse">
            <summary>
            <para>
            <para>Verifies the authentication challenge response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserPool'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.CreateUserPoolResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.CreateUserPoolResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PoolName parameter.
            The -PassThru parameter is deprecated, use -Select '^PoolName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet">
            <summary>
            Creates the user pool client.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.AllowedOAuthFlow">
            <summary>
            <para>
            <para>The allowed OAuth flows.</para><para>Set to <code>code</code> to initiate a code grant flow, which provides an authorization
            code as the response. This code can be exchanged for access tokens with the token
            endpoint.</para><para>Set to <code>implicit</code> to specify that the client should get the access token
            (and, optionally, ID token, based on scopes) directly.</para><para>Set to <code>client_credentials</code> to specify that the client should get the access
            token (and, optionally, ID token, based on scopes) from the token endpoint using a
            combination of client and client_secret.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.AllowedOAuthFlowsUserPoolClient">
            <summary>
            <para>
            <para>Set to true if the client is allowed to follow the OAuth protocol when interacting
            with Cognito user pools.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.AllowedOAuthScope">
            <summary>
            <para>
            <para>The allowed OAuth scopes. Possible values provided by OAuth are: <code>phone</code>,
            <code>email</code>, <code>openid</code>, and <code>profile</code>. Possible values
            provided by AWS are: <code>aws.cognito.signin.user.admin</code>. Custom scopes created
            in Resource Servers are also supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.AnalyticsConfiguration_ApplicationId">
            <summary>
            <para>
            <para>The application ID for an Amazon Pinpoint application.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.CallbackURLs">
            <summary>
            <para>
            <para>A list of allowed redirect (callback) URLs for the identity providers.</para><para>A redirect URI must:</para><ul><li><para>Be an absolute URI.</para></li><li><para>Be registered with the authorization server.</para></li><li><para>Not include a fragment component.</para></li></ul><para>See <a href="https://tools.ietf.org/html/rfc6749#section-3.1.2">OAuth 2.0 - Redirection
            Endpoint</a>.</para><para>Amazon Cognito requires HTTPS over HTTP except for http://localhost for testing purposes
            only.</para><para>App callback URLs such as myapp://example are also supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.ClientName">
            <summary>
            <para>
            <para>The client name for the user pool client you would like to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.DefaultRedirectURI">
            <summary>
            <para>
            <para>The default redirect URI. Must be in the <code>CallbackURLs</code> list.</para><para>A redirect URI must:</para><ul><li><para>Be an absolute URI.</para></li><li><para>Be registered with the authorization server.</para></li><li><para>Not include a fragment component.</para></li></ul><para>See <a href="https://tools.ietf.org/html/rfc6749#section-3.1.2">OAuth 2.0 - Redirection
            Endpoint</a>.</para><para>Amazon Cognito requires HTTPS over HTTP except for http://localhost for testing purposes
            only.</para><para>App callback URLs such as myapp://example are also supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.ExplicitAuthFlow">
            <summary>
            <para>
            <para>The authentication flows that are supported by the user pool clients. Flow names without
            the <code>ALLOW_</code> prefix are deprecated in favor of new names with the <code>ALLOW_</code>
            prefix. Note that values with <code>ALLOW_</code> prefix cannot be used along with
            values without <code>ALLOW_</code> prefix.</para><para>Valid values include:</para><ul><li><para><code>ALLOW_ADMIN_USER_PASSWORD_AUTH</code>: Enable admin based user password authentication
            flow <code>ADMIN_USER_PASSWORD_AUTH</code>. This setting replaces the <code>ADMIN_NO_SRP_AUTH</code>
            setting. With this authentication flow, Cognito receives the password in the request
            instead of using the SRP (Secure Remote Password protocol) protocol to verify passwords.</para></li><li><para><code>ALLOW_CUSTOM_AUTH</code>: Enable Lambda trigger based authentication.</para></li><li><para><code>ALLOW_USER_PASSWORD_AUTH</code>: Enable user password-based authentication.
            In this flow, Cognito receives the password in the request instead of using the SRP
            protocol to verify passwords.</para></li><li><para><code>ALLOW_USER_SRP_AUTH</code>: Enable SRP based authentication.</para></li><li><para><code>ALLOW_REFRESH_TOKEN_AUTH</code>: Enable authflow to refresh tokens.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.AnalyticsConfiguration_ExternalId">
            <summary>
            <para>
            <para>The external ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.GenerateSecret">
            <summary>
            <para>
            <para>Boolean to specify whether you want to generate a secret for the user pool client
            being created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.LogoutURLs">
            <summary>
            <para>
            <para>A list of allowed logout URLs for the identity providers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.PreventUserExistenceError">
            <summary>
            <para>
            <para>Use this setting to choose which errors and responses are returned by Cognito APIs
            during authentication, account confirmation, and password recovery when the user does
            not exist in the user pool. When set to <code>ENABLED</code> and the user does not
            exist, authentication returns an error indicating either the username or password
            was incorrect, and account confirmation and password recovery return a response indicating
            a code was sent to a simulated destination. When set to <code>LEGACY</code>, those
            APIs will return a <code>UserNotFoundException</code> exception if the user does not
            exist in the user pool.</para><para>Valid values include:</para><ul><li><para><code>ENABLED</code> - This prevents user existence-related errors.</para></li><li><para><code>LEGACY</code> - This represents the old behavior of Cognito where user existence
            related errors are not prevented.</para></li></ul><para>This setting affects the behavior of following APIs:</para><ul><li><para><a>AdminInitiateAuth</a></para></li><li><para><a>AdminRespondToAuthChallenge</a></para></li><li><para><a>InitiateAuth</a></para></li><li><para><a>RespondToAuthChallenge</a></para></li><li><para><a>ForgotPassword</a></para></li><li><para><a>ConfirmForgotPassword</a></para></li><li><para><a>ConfirmSignUp</a></para></li><li><para><a>ResendConfirmationCode</a></para></li></ul><note><para>After February 15th 2020, the value of <code>PreventUserExistenceErrors</code> will
            default to <code>ENABLED</code> for newly created user pool clients if no value is
            provided.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.ReadAttribute">
            <summary>
            <para>
            <para>The read attributes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.RefreshTokenValidity">
            <summary>
            <para>
            <para>The time limit, in days, after which the refresh token is no longer valid and cannot
            be used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.AnalyticsConfiguration_RoleArn">
            <summary>
            <para>
            <para>The ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon
            Pinpoint analytics.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.SupportedIdentityProvider">
            <summary>
            <para>
            <para>A list of provider names for the identity providers that are supported on this client.
            The following are supported: <code>COGNITO</code>, <code>Facebook</code>, <code>Google</code>
            and <code>LoginWithAmazon</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.AnalyticsConfiguration_UserDataShared">
            <summary>
            <para>
            <para>If <code>UserDataShared</code> is <code>true</code>, Amazon Cognito will include user
            data in the events it publishes to Amazon Pinpoint analytics.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool where you want to create a user pool client.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.WriteAttribute">
            <summary>
            <para>
            <para>The user pool attributes that the app client can write to.</para><para>If your app client allows users to sign in through an identity provider, this array
            must include all attributes that are mapped to identity provider attributes. Amazon
            Cognito updates mapped attributes when users sign in to your application through an
            identity provider. If your app client lacks write access to a mapped attribute, Amazon
            Cognito throws an error when it attempts to update the attribute. For more information,
            see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html">Specifying
            Identity Provider Attribute Mappings for Your User Pool</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserPoolClient'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolClientCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolDomainCmdlet">
            <summary>
            Creates a new domain for a user pool.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolDomainCmdlet.CustomDomainConfig_CertificateArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an AWS Certificate Manager SSL certificate. You
            use this certificate for the subdomain of your custom domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolDomainCmdlet.Domain">
            <summary>
            <para>
            <para>The domain string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolDomainCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CloudFrontDomain'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.CreateUserPoolDomainResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.CreateUserPoolDomainResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Domain parameter.
            The -PassThru parameter is deprecated, use -Select '^Domain' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.NewCGIPUserPoolDomainCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.RegisterCGIPUserInPoolCmdlet">
            <summary>
            Registers the user in the specified user pool and creates a user name, password, and
            user attributes.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RegisterCGIPUserInPoolCmdlet.AnalyticsMetadata_AnalyticsEndpointId">
            <summary>
            <para>
            <para>The endpoint ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RegisterCGIPUserInPoolCmdlet.ClientId">
            <summary>
            <para>
            <para>The ID of the client associated with the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RegisterCGIPUserInPoolCmdlet.ClientMetadata">
            <summary>
            <para>
            <para>A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers. </para><para>You create custom workflows by assigning AWS Lambda functions to user pool triggers.
            When you use the SignUp API action, Amazon Cognito invokes any functions that are
            assigned to the following triggers: <i>pre sign-up</i>, <i>custom message</i>, and
            <i>post confirmation</i>. When Amazon Cognito invokes any of these functions, it passes
            a JSON payload, which the function receives as input. This payload contains a <code>clientMetadata</code>
            attribute, which provides the data that you assigned to the ClientMetadata parameter
            in your SignUp request. In your function code in AWS Lambda, you can process the <code>clientMetadata</code>
            value to enhance your workflow for your specific needs.</para><para>For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">Customizing
            User Pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.</para><note><para>Take the following limitations into consideration when you use the ClientMetadata
            parameter:</para><ul><li><para>Amazon Cognito does not store the ClientMetadata value. This data is available only
            to AWS Lambda triggers that are assigned to a user pool to support custom workflows.
            If your user pool configuration does not include triggers, the ClientMetadata parameter
            serves no purpose.</para></li><li><para>Amazon Cognito does not validate the ClientMetadata value.</para></li><li><para>Amazon Cognito does not encrypt the the ClientMetadata value, so don't use it to provide
            sensitive information.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RegisterCGIPUserInPoolCmdlet.UserContextData_EncodedData">
            <summary>
            <para>
            <para>Contextual data such as the user's device fingerprint, IP address, or location used
            for evaluating the risk of an unexpected event by Amazon Cognito advanced security.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RegisterCGIPUserInPoolCmdlet.Password">
            <summary>
            <para>
            <para>The password of the user you wish to register.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RegisterCGIPUserInPoolCmdlet.SecretHash">
            <summary>
            <para>
            <para>A keyed-hash message authentication code (HMAC) calculated using the secret key of
            a user pool client and username plus the client ID in the message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RegisterCGIPUserInPoolCmdlet.UserAttribute">
            <summary>
            <para>
            <para>An array of name-value pairs representing user attributes.</para><para>For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute
            name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RegisterCGIPUserInPoolCmdlet.Username">
            <summary>
            <para>
            <para>The user name of the user you wish to register.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RegisterCGIPUserInPoolCmdlet.ValidationData">
            <summary>
            <para>
            <para>The validation data in the request to register a user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RegisterCGIPUserInPoolCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.SignUpResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.SignUpResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RegisterCGIPUserInPoolCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Username parameter.
            The -PassThru parameter is deprecated, use -Select '^Username' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RegisterCGIPUserInPoolCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPGroupCmdlet">
            <summary>
            Deletes a group. Currently only groups with no members can be deleted.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPGroupCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.DeleteGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPIdentityProviderCmdlet">
            <summary>
            Deletes an identity provider for a user pool.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPIdentityProviderCmdlet.ProviderName">
            <summary>
            <para>
            <para>The identity provider name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPIdentityProviderCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPIdentityProviderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.DeleteIdentityProviderResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPIdentityProviderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProviderName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProviderName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPIdentityProviderCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPResourceServerCmdlet">
            <summary>
            Deletes a resource server.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPResourceServerCmdlet.Identifier">
            <summary>
            <para>
            <para>The identifier for the resource server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPResourceServerCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool that hosts the resource server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPResourceServerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.DeleteResourceServerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPResourceServerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Identifier parameter.
            The -PassThru parameter is deprecated, use -Select '^Identifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPResourceServerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPResourceTagCmdlet">
            <summary>
            Removes the specified tags from an Amazon Cognito user pool. You can use this action
            up to 5 times per second, per account
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the user pool that the tags are assigned to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The keys of the tags to remove from the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserCmdlet">
            <summary>
            Allows a user to delete himself or herself.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserCmdlet.AccessToken">
            <summary>
            <para>
            <para>The access token from a request to delete a user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.DeleteUserResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccessToken parameter.
            The -PassThru parameter is deprecated, use -Select '^AccessToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserAdminCmdlet">
            <summary>
            Deletes a user as an administrator. Works on any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserAdminCmdlet.Username">
            <summary>
            <para>
            <para>The user name of the user you wish to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool where you want to delete the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminDeleteUserResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserAttributeCmdlet">
            <summary>
            Deletes the attributes for a user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserAttributeCmdlet.AccessToken">
            <summary>
            <para>
            <para>The access token used in the request to delete user attributes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserAttributeCmdlet.UserAttributeName">
            <summary>
            <para>
            <para>An array of strings representing the user attribute names you wish to delete.</para><para>For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute
            name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccessToken parameter.
            The -PassThru parameter is deprecated, use -Select '^AccessToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserAttributeAdminCmdlet">
            <summary>
            Deletes the user attributes in a user pool as an administrator. Works on any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserAttributeAdminCmdlet.UserAttributeName">
            <summary>
            <para>
            <para>An array of strings representing the user attribute names you wish to delete.</para><para>For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute
            name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserAttributeAdminCmdlet.Username">
            <summary>
            <para>
            <para>The user name of the user from which you would like to delete attributes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserAttributeAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool where you want to delete user attributes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserAttributeAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserAttributeAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserAttributeAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserFromGroupAdminCmdlet">
            <summary>
            Removes the specified user from the specified group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserFromGroupAdminCmdlet.GroupName">
            <summary>
            <para>
            <para>The group name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserFromGroupAdminCmdlet.Username">
            <summary>
            <para>
            <para>The username for the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserFromGroupAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserFromGroupAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserFromGroupAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Username parameter.
            The -PassThru parameter is deprecated, use -Select '^Username' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserFromGroupAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserPoolCmdlet">
            <summary>
            Deletes the specified Amazon Cognito user pool.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserPoolCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserPoolCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.DeleteUserPoolResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserPoolCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserPoolCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserPoolClientCmdlet">
            <summary>
            Allows the developer to delete the user pool client.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserPoolClientCmdlet.ClientId">
            <summary>
            <para>
            <para>The app client ID of the app associated with the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserPoolClientCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool where you want to delete the client.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserPoolClientCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserPoolClientCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClientId parameter.
            The -PassThru parameter is deprecated, use -Select '^ClientId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserPoolClientCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserPoolDomainCmdlet">
            <summary>
            Deletes a domain for a user pool.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserPoolDomainCmdlet.Domain">
            <summary>
            <para>
            <para>The domain string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserPoolDomainCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserPoolDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.DeleteUserPoolDomainResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserPoolDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Domain parameter.
            The -PassThru parameter is deprecated, use -Select '^Domain' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.RemoveCGIPUserPoolDomainCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.ResetCGIPForgottenPasswordCmdlet">
            <summary>
            Calling this API causes a message to be sent to the end user with a confirmation code
            that is required to change the user's password. For the <code>Username</code> parameter,
            you can use the username or user alias. The method used to send the confirmation code
            is sent according to the specified AccountRecoverySetting. For more information, see
            <a href="">Recovering User Accounts</a> in the <i>Amazon Cognito Developer Guide</i>.
            If neither a verified phone number nor a verified email exists, an <code>InvalidParameterException</code>
            is thrown. To use the confirmation code for resetting the password, call .
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ResetCGIPForgottenPasswordCmdlet.AnalyticsMetadata_AnalyticsEndpointId">
            <summary>
            <para>
            <para>The endpoint ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ResetCGIPForgottenPasswordCmdlet.ClientId">
            <summary>
            <para>
            <para>The ID of the client associated with the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ResetCGIPForgottenPasswordCmdlet.ClientMetadata">
            <summary>
            <para>
            <para>A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers. </para><para>You create custom workflows by assigning AWS Lambda functions to user pool triggers.
            When you use the ForgotPassword API action, Amazon Cognito invokes any functions that
            are assigned to the following triggers: <i>pre sign-up</i>, <i>custom message</i>,
            and <i>user migration</i>. When Amazon Cognito invokes any of these functions, it
            passes a JSON payload, which the function receives as input. This payload contains
            a <code>clientMetadata</code> attribute, which provides the data that you assigned
            to the ClientMetadata parameter in your ForgotPassword request. In your function code
            in AWS Lambda, you can process the <code>clientMetadata</code> value to enhance your
            workflow for your specific needs.</para><para>For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">Customizing
            User Pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.</para><note><para>Take the following limitations into consideration when you use the ClientMetadata
            parameter:</para><ul><li><para>Amazon Cognito does not store the ClientMetadata value. This data is available only
            to AWS Lambda triggers that are assigned to a user pool to support custom workflows.
            If your user pool configuration does not include triggers, the ClientMetadata parameter
            serves no purpose.</para></li><li><para>Amazon Cognito does not validate the ClientMetadata value.</para></li><li><para>Amazon Cognito does not encrypt the the ClientMetadata value, so don't use it to provide
            sensitive information.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ResetCGIPForgottenPasswordCmdlet.UserContextData_EncodedData">
            <summary>
            <para>
            <para>Contextual data such as the user's device fingerprint, IP address, or location used
            for evaluating the risk of an unexpected event by Amazon Cognito advanced security.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ResetCGIPForgottenPasswordCmdlet.SecretHash">
            <summary>
            <para>
            <para>A keyed-hash message authentication code (HMAC) calculated using the secret key of
            a user pool client and username plus the client ID in the message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ResetCGIPForgottenPasswordCmdlet.Username">
            <summary>
            <para>
            <para>The user name of the user for whom you want to enter a code to reset a forgotten password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ResetCGIPForgottenPasswordCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CodeDeliveryDetails'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.ForgotPasswordResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.ForgotPasswordResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ResetCGIPForgottenPasswordCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Username parameter.
            The -PassThru parameter is deprecated, use -Select '^Username' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ResetCGIPForgottenPasswordCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.ResetCGIPUserPasswordAdminCmdlet">
            <summary>
            Resets the specified user's password in a user pool as an administrator. Works on
            any user.
            
             
            <para>
            When a developer calls this API, the current password is invalidated, so it must be
            changed. If a user tries to sign in after the API is called, the app will get a PasswordResetRequiredException
            exception back and should direct the user down the flow to reset the password, which
            is the same as the forgot password flow. In addition, if the user pool has phone verification
            selected and a verified phone number exists for the user, or if email verification
            is selected and a verified email exists for the user, calling this API will also result
            in sending a message to the end user with the code to change their password.
            </para><para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ResetCGIPUserPasswordAdminCmdlet.ClientMetadata">
            <summary>
            <para>
            <para>A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers. </para><para>You create custom workflows by assigning AWS Lambda functions to user pool triggers.
            When you use the AdminResetUserPassword API action, Amazon Cognito invokes the function
            that is assigned to the <i>custom message</i> trigger. When Amazon Cognito invokes
            this function, it passes a JSON payload, which the function receives as input. This
            payload contains a <code>clientMetadata</code> attribute, which provides the data
            that you assigned to the ClientMetadata parameter in your AdminResetUserPassword request.
            In your function code in AWS Lambda, you can process the <code>clientMetadata</code>
            value to enhance your workflow for your specific needs.</para><para>For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">Customizing
            User Pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.</para><note><para>Take the following limitations into consideration when you use the ClientMetadata
            parameter:</para><ul><li><para>Amazon Cognito does not store the ClientMetadata value. This data is available only
            to AWS Lambda triggers that are assigned to a user pool to support custom workflows.
            If your user pool configuration does not include triggers, the ClientMetadata parameter
            serves no purpose.</para></li><li><para>Amazon Cognito does not validate the ClientMetadata value.</para></li><li><para>Amazon Cognito does not encrypt the the ClientMetadata value, so don't use it to provide
            sensitive information.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ResetCGIPUserPasswordAdminCmdlet.Username">
            <summary>
            <para>
            <para>The user name of the user whose password you wish to reset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ResetCGIPUserPasswordAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool where you want to reset the user's password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ResetCGIPUserPasswordAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ResetCGIPUserPasswordAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.ResetCGIPUserPasswordAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseCmdlet">
            <summary>
            Responds to the authentication challenge.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseCmdlet.AnalyticsMetadata_AnalyticsEndpointId">
            <summary>
            <para>
            <para>The endpoint ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseCmdlet.ChallengeName">
            <summary>
            <para>
            <para>The challenge name. For more information, see .</para><para><code>ADMIN_NO_SRP_AUTH</code> is not a valid value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseCmdlet.ChallengeResponse">
            <summary>
            <para>
            <para>The challenge responses. These are inputs corresponding to the value of <code>ChallengeName</code>,
            for example:</para><note><para><code>SECRET_HASH</code> (if app client is configured with client secret) applies
            to all inputs below (including <code>SOFTWARE_TOKEN_MFA</code>).</para></note><ul><li><para><code>SMS_MFA</code>: <code>SMS_MFA_CODE</code>, <code>USERNAME</code>.</para></li><li><para><code>PASSWORD_VERIFIER</code>: <code>PASSWORD_CLAIM_SIGNATURE</code>, <code>PASSWORD_CLAIM_SECRET_BLOCK</code>,
            <code>TIMESTAMP</code>, <code>USERNAME</code>.</para></li><li><para><code>NEW_PASSWORD_REQUIRED</code>: <code>NEW_PASSWORD</code>, any other required
            attributes, <code>USERNAME</code>. </para></li><li><para><code>SOFTWARE_TOKEN_MFA</code>: <code>USERNAME</code> and <code>SOFTWARE_TOKEN_MFA_CODE</code>
            are required attributes.</para></li><li><para><code>DEVICE_SRP_AUTH</code> requires <code>USERNAME</code>, <code>DEVICE_KEY</code>,
            <code>SRP_A</code> (and <code>SECRET_HASH</code>).</para></li><li><para><code>DEVICE_PASSWORD_VERIFIER</code> requires everything that <code>PASSWORD_VERIFIER</code>
            requires plus <code>DEVICE_KEY</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseCmdlet.ClientId">
            <summary>
            <para>
            <para>The app client ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseCmdlet.ClientMetadata">
            <summary>
            <para>
            <para>A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers. </para><para>You create custom workflows by assigning AWS Lambda functions to user pool triggers.
            When you use the RespondToAuthChallenge API action, Amazon Cognito invokes any functions
            that are assigned to the following triggers: <i>post authentication</i>, <i>pre token
            generation</i>, <i>define auth challenge</i>, <i>create auth challenge</i>, and <i>verify
            auth challenge</i>. When Amazon Cognito invokes any of these functions, it passes
            a JSON payload, which the function receives as input. This payload contains a <code>clientMetadata</code>
            attribute, which provides the data that you assigned to the ClientMetadata parameter
            in your RespondToAuthChallenge request. In your function code in AWS Lambda, you can
            process the <code>clientMetadata</code> value to enhance your workflow for your specific
            needs.</para><para>For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">Customizing
            User Pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.</para><note><para>Take the following limitations into consideration when you use the ClientMetadata
            parameter:</para><ul><li><para>Amazon Cognito does not store the ClientMetadata value. This data is available only
            to AWS Lambda triggers that are assigned to a user pool to support custom workflows.
            If your user pool configuration does not include triggers, the ClientMetadata parameter
            serves no purpose.</para></li><li><para>Amazon Cognito does not validate the ClientMetadata value.</para></li><li><para>Amazon Cognito does not encrypt the the ClientMetadata value, so don't use it to provide
            sensitive information.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseCmdlet.UserContextData_EncodedData">
            <summary>
            <para>
            <para>Contextual data such as the user's device fingerprint, IP address, or location used
            for evaluating the risk of an unexpected event by Amazon Cognito advanced security.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseCmdlet.Session">
            <summary>
            <para>
            <para>The session which should be passed both ways in challenge-response calls to the service.
            If <code>InitiateAuth</code> or <code>RespondToAuthChallenge</code> API call determines
            that the caller needs to go through another challenge, they return a session with
            other challenge parameters. This session should be passed as it is to the next <code>RespondToAuthChallenge</code>
            API call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClientId parameter.
            The -PassThru parameter is deprecated, use -Select '^ClientId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseAdminCmdlet">
            <summary>
            Responds to an authentication challenge, as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseAdminCmdlet.AnalyticsMetadata_AnalyticsEndpointId">
            <summary>
            <para>
            <para>The endpoint ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseAdminCmdlet.ChallengeName">
            <summary>
            <para>
            <para>The challenge name. For more information, see .</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseAdminCmdlet.ChallengeResponse">
            <summary>
            <para>
            <para>The challenge responses. These are inputs corresponding to the value of <code>ChallengeName</code>,
            for example:</para><ul><li><para><code>SMS_MFA</code>: <code>SMS_MFA_CODE</code>, <code>USERNAME</code>, <code>SECRET_HASH</code>
            (if app client is configured with client secret).</para></li><li><para><code>PASSWORD_VERIFIER</code>: <code>PASSWORD_CLAIM_SIGNATURE</code>, <code>PASSWORD_CLAIM_SECRET_BLOCK</code>,
            <code>TIMESTAMP</code>, <code>USERNAME</code>, <code>SECRET_HASH</code> (if app client
            is configured with client secret).</para></li><li><para><code>ADMIN_NO_SRP_AUTH</code>: <code>PASSWORD</code>, <code>USERNAME</code>, <code>SECRET_HASH</code>
            (if app client is configured with client secret). </para></li><li><para><code>NEW_PASSWORD_REQUIRED</code>: <code>NEW_PASSWORD</code>, any other required
            attributes, <code>USERNAME</code>, <code>SECRET_HASH</code> (if app client is configured
            with client secret). </para></li></ul><para>The value of the <code>USERNAME</code> attribute must be the user's actual username,
            not an alias (such as email address or phone number). To make this easier, the <code>AdminInitiateAuth</code>
            response includes the actual username value in the <code>USERNAMEUSER_ID_FOR_SRP</code>
            attribute, even if you specified an alias in your call to <code>AdminInitiateAuth</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseAdminCmdlet.ClientId">
            <summary>
            <para>
            <para>The app client ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseAdminCmdlet.ClientMetadata">
            <summary>
            <para>
            <para>A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers. </para><para>You create custom workflows by assigning AWS Lambda functions to user pool triggers.
            When you use the AdminRespondToAuthChallenge API action, Amazon Cognito invokes any
            functions that are assigned to the following triggers: <i>pre sign-up</i>, <i>custom
            message</i>, <i>post authentication</i>, <i>user migration</i>, <i>pre token generation</i>,
            <i>define auth challenge</i>, <i>create auth challenge</i>, and <i>verify auth challenge
            response</i>. When Amazon Cognito invokes any of these functions, it passes a JSON
            payload, which the function receives as input. This payload contains a <code>clientMetadata</code>
            attribute, which provides the data that you assigned to the ClientMetadata parameter
            in your AdminRespondToAuthChallenge request. In your function code in AWS Lambda,
            you can process the <code>clientMetadata</code> value to enhance your workflow for
            your specific needs.</para><para>For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">Customizing
            User Pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.</para><note><para>Take the following limitations into consideration when you use the ClientMetadata
            parameter:</para><ul><li><para>Amazon Cognito does not store the ClientMetadata value. This data is available only
            to AWS Lambda triggers that are assigned to a user pool to support custom workflows.
            If your user pool configuration does not include triggers, the ClientMetadata parameter
            serves no purpose.</para></li><li><para>Amazon Cognito does not validate the ClientMetadata value.</para></li><li><para>Amazon Cognito does not encrypt the the ClientMetadata value, so don't use it to provide
            sensitive information.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseAdminCmdlet.ContextData_EncodedData">
            <summary>
            <para>
            <para>Encoded data containing device fingerprinting details, collected using the Amazon
            Cognito context data collection library.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseAdminCmdlet.ContextData_HttpHeader">
            <summary>
            <para>
            <para>HttpHeaders received on your server in same order.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseAdminCmdlet.ContextData_IpAddress">
            <summary>
            <para>
            <para>Source IP address of your user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseAdminCmdlet.ContextData_ServerName">
            <summary>
            <para>
            <para>Your server endpoint where this API is invoked.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseAdminCmdlet.ContextData_ServerPath">
            <summary>
            <para>
            <para>Your server path where this API is invoked. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseAdminCmdlet.Session">
            <summary>
            <para>
            <para>The session which should be passed both ways in challenge-response calls to the service.
            If <code>InitiateAuth</code> or <code>RespondToAuthChallenge</code> API call determines
            that the caller needs to go through another challenge, they return a session with
            other challenge parameters. This session should be passed as it is to the next <code>RespondToAuthChallenge</code>
            API call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The ID of the Amazon Cognito user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClientId parameter.
            The -PassThru parameter is deprecated, use -Select '^ClientId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPAuthChallengeResponseAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPConfirmationCodeCmdlet">
            <summary>
            Resends the confirmation (for confirmation of registration) to a specific user in
            the user pool.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPConfirmationCodeCmdlet.AnalyticsMetadata_AnalyticsEndpointId">
            <summary>
            <para>
            <para>The endpoint ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPConfirmationCodeCmdlet.ClientId">
            <summary>
            <para>
            <para>The ID of the client associated with the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPConfirmationCodeCmdlet.ClientMetadata">
            <summary>
            <para>
            <para>A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers. </para><para>You create custom workflows by assigning AWS Lambda functions to user pool triggers.
            When you use the ResendConfirmationCode API action, Amazon Cognito invokes the function
            that is assigned to the <i>custom message</i> trigger. When Amazon Cognito invokes
            this function, it passes a JSON payload, which the function receives as input. This
            payload contains a <code>clientMetadata</code> attribute, which provides the data
            that you assigned to the ClientMetadata parameter in your ResendConfirmationCode request.
            In your function code in AWS Lambda, you can process the <code>clientMetadata</code>
            value to enhance your workflow for your specific needs.</para><para>For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">Customizing
            User Pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.</para><note><para>Take the following limitations into consideration when you use the ClientMetadata
            parameter:</para><ul><li><para>Amazon Cognito does not store the ClientMetadata value. This data is available only
            to AWS Lambda triggers that are assigned to a user pool to support custom workflows.
            If your user pool configuration does not include triggers, the ClientMetadata parameter
            serves no purpose.</para></li><li><para>Amazon Cognito does not validate the ClientMetadata value.</para></li><li><para>Amazon Cognito does not encrypt the the ClientMetadata value, so don't use it to provide
            sensitive information.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPConfirmationCodeCmdlet.UserContextData_EncodedData">
            <summary>
            <para>
            <para>Contextual data such as the user's device fingerprint, IP address, or location used
            for evaluating the risk of an unexpected event by Amazon Cognito advanced security.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPConfirmationCodeCmdlet.SecretHash">
            <summary>
            <para>
            <para>A keyed-hash message authentication code (HMAC) calculated using the secret key of
            a user pool client and username plus the client ID in the message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPConfirmationCodeCmdlet.Username">
            <summary>
            <para>
            <para>The user name of the user to whom you wish to resend a confirmation code.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPConfirmationCodeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CodeDeliveryDetails'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPConfirmationCodeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Username parameter.
            The -PassThru parameter is deprecated, use -Select '^Username' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SendCGIPConfirmationCodeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet">
            <summary>
            Configures actions on detected risks. To delete the risk configuration for <code>UserPoolId</code>
            or <code>ClientId</code>, pass null values for all four configuration types.
            
             
            <para>
            To enable Amazon Cognito advanced security features, update the user pool to include
            the <code>UserPoolAddOns</code> key<code>AdvancedSecurityMode</code>.
            </para><para>
            See .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.RiskExceptionConfiguration_BlockedIPRangeList">
            <summary>
            <para>
            <para>Overrides the risk decision to always block the pre-authentication requests. The IP
            range is in CIDR notation: a compact representation of an IP address and its associated
            routing prefix.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.ClientId">
            <summary>
            <para>
            <para>The app client ID. If <code>ClientId</code> is null, then the risk configuration is
            mapped to <code>userPoolId</code>. When the client ID is null, the same risk configuration
            is applied to all the clients in the userPool.</para><para>Otherwise, <code>ClientId</code> is mapped to the client. When the client ID is not
            null, the user pool configuration is overridden and the risk configuration for the
            client is used instead.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.HighAction_EventAction">
            <summary>
            <para>
            <para>The event action.</para><ul><li><para><code>BLOCK</code> Choosing this action will block the request.</para></li><li><para><code>MFA_IF_CONFIGURED</code> Throw MFA challenge if user has configured it, else
            allow the request.</para></li><li><para><code>MFA_REQUIRED</code> Throw MFA challenge if user has configured it, else block
            the request.</para></li><li><para><code>NO_ACTION</code> Allow the user sign-in.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.LowAction_EventAction">
            <summary>
            <para>
            <para>The event action.</para><ul><li><para><code>BLOCK</code> Choosing this action will block the request.</para></li><li><para><code>MFA_IF_CONFIGURED</code> Throw MFA challenge if user has configured it, else
            allow the request.</para></li><li><para><code>MFA_REQUIRED</code> Throw MFA challenge if user has configured it, else block
            the request.</para></li><li><para><code>NO_ACTION</code> Allow the user sign-in.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.MediumAction_EventAction">
            <summary>
            <para>
            <para>The event action.</para><ul><li><para><code>BLOCK</code> Choosing this action will block the request.</para></li><li><para><code>MFA_IF_CONFIGURED</code> Throw MFA challenge if user has configured it, else
            allow the request.</para></li><li><para><code>MFA_REQUIRED</code> Throw MFA challenge if user has configured it, else block
            the request.</para></li><li><para><code>NO_ACTION</code> Allow the user sign-in.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.Actions_EventAction">
            <summary>
            <para>
            <para>The event action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.CompromisedCredentialsRiskConfiguration_EventFilter">
            <summary>
            <para>
            <para>Perform the action for these events. The default is to perform all events if no event
            filter is specified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.NotifyConfiguration_From">
            <summary>
            <para>
            <para>The email address that is sending the email. It must be either individually verified
            with Amazon SES, or from a domain that has been verified with Amazon SES.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.BlockEmail_HtmlBody">
            <summary>
            <para>
            <para>The HTML body.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.MfaEmail_HtmlBody">
            <summary>
            <para>
            <para>The HTML body.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.NoActionEmail_HtmlBody">
            <summary>
            <para>
            <para>The HTML body.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.HighAction_Notify">
            <summary>
            <para>
            <para>Flag specifying whether to send a notification.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.LowAction_Notify">
            <summary>
            <para>
            <para>Flag specifying whether to send a notification.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.MediumAction_Notify">
            <summary>
            <para>
            <para>Flag specifying whether to send a notification.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.NotifyConfiguration_ReplyTo">
            <summary>
            <para>
            <para>The destination to which the receiver of an email should reply to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.RiskExceptionConfiguration_SkippedIPRangeList">
            <summary>
            <para>
            <para>Risk detection is not performed on the IP addresses in the range list. The IP range
            is in CIDR notation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.NotifyConfiguration_SourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the identity that is associated with the sending
            authorization policy. It permits Amazon Cognito to send for the email address specified
            in the <code>From</code> parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.BlockEmail_Subject">
            <summary>
            <para>
            <para>The subject.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.MfaEmail_Subject">
            <summary>
            <para>
            <para>The subject.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.NoActionEmail_Subject">
            <summary>
            <para>
            <para>The subject.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.BlockEmail_TextBody">
            <summary>
            <para>
            <para>The text body.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.MfaEmail_TextBody">
            <summary>
            <para>
            <para>The text body.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.NoActionEmail_TextBody">
            <summary>
            <para>
            <para>The text body.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RiskConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.SetRiskConfigurationResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.SetRiskConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPRiskConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUICustomizationCmdlet">
            <summary>
            Sets the UI customization information for a user pool's built-in app UI.
            
             
            <para>
            You can specify app UI customization settings for a single client (with a specific
            <code>clientId</code>) or for all clients (by setting the <code>clientId</code> to
            <code>ALL</code>). If you specify <code>ALL</code>, the default configuration will
            be used for every client that has no UI customization set previously. If you specify
            UI customization settings for a particular client, it will no longer fall back to
            the <code>ALL</code> configuration. 
            </para><note><para>
            To use this API, your user pool must have a domain associated with it. Otherwise,
            there is no place to host the app's pages, and the service will throw an error.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUICustomizationCmdlet.ClientId">
            <summary>
            <para>
            <para>The client ID for the client app.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUICustomizationCmdlet.CSS">
            <summary>
            <para>
            <para>The CSS values in the UI customization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUICustomizationCmdlet.ImageFile">
            <summary>
            <para>
            <para>The uploaded logo image for the UI customization.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUICustomizationCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUICustomizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UICustomization'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.SetUICustomizationResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.SetUICustomizationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUICustomizationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUICustomizationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserMFAPreferenceCmdlet">
            <summary>
            Set the user's multi-factor authentication (MFA) method preference, including which
            MFA factors are enabled and if any are preferred. Only one factor can be set as preferred.
            The preferred MFA factor will be used to authenticate a user if multiple factors are
            enabled. If multiple options are enabled and no preference is set, a challenge to
            choose an MFA option will be returned during sign in.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserMFAPreferenceCmdlet.AccessToken">
            <summary>
            <para>
            <para>The access token for the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserMFAPreferenceCmdlet.SMSMfaSetting">
            <summary>
            <para>
            <para>The SMS text message multi-factor authentication (MFA) settings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserMFAPreferenceCmdlet.SoftwareTokenMfaSetting">
            <summary>
            <para>
            <para>The time-based one-time password software token MFA settings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserMFAPreferenceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.SetUserMFAPreferenceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserMFAPreferenceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserMFAPreferenceAdminCmdlet">
            <summary>
            Sets the user's multi-factor authentication (MFA) preference, including which MFA
            options are enabled and if any are preferred. Only one factor can be set as preferred.
            The preferred MFA factor will be used to authenticate a user if multiple factors are
            enabled. If multiple options are enabled and no preference is set, a challenge to
            choose an MFA option will be returned during sign in.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserMFAPreferenceAdminCmdlet.SMSMfaSetting">
            <summary>
            <para>
            <para>The SMS text message MFA settings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserMFAPreferenceAdminCmdlet.SoftwareTokenMfaSetting">
            <summary>
            <para>
            <para>The time-based one-time password software token MFA settings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserMFAPreferenceAdminCmdlet.Username">
            <summary>
            <para>
            <para>The user pool username or alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserMFAPreferenceAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserMFAPreferenceAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminSetUserMFAPreferenceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserMFAPreferenceAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserMFAPreferenceAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserPasswordAdminCmdlet">
            <summary>
            Sets the specified user's password in a user pool as an administrator. Works on any
            user. 
            
             
            <para>
            The password can be temporary or permanent. If it is temporary, the user status will
            be placed into the <code>FORCE_CHANGE_PASSWORD</code> state. When the user next tries
            to sign in, the InitiateAuth/AdminInitiateAuth response will contain the <code>NEW_PASSWORD_REQUIRED</code>
            challenge. If the user does not sign in before it expires, the user will not be able
            to sign in and their password will need to be reset by an administrator. 
            </para><para>
            Once the user has set a new password, or the password is permanent, the user status
            will be set to <code>Confirmed</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserPasswordAdminCmdlet.Password">
            <summary>
            <para>
            <para>The password for the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserPasswordAdminCmdlet.Permanent">
            <summary>
            <para>
            <para><code>True</code> if the password is permanent, <code>False</code> if it is temporary.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserPasswordAdminCmdlet.Username">
            <summary>
            <para>
            <para>The user name of the user whose password you wish to set.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserPasswordAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool where you want to set the user's password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserPasswordAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminSetUserPasswordResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserPasswordAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Username parameter.
            The -PassThru parameter is deprecated, use -Select '^Username' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserPasswordAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserPoolMfaConfigCmdlet">
            <summary>
            Set the user pool multi-factor authentication (MFA) configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserPoolMfaConfigCmdlet.MfaConfiguration">
            <summary>
            <para>
            <para>The MFA configuration. Valid values include:</para><ul><li><para><code>OFF</code> MFA will not be used for any users.</para></li><li><para><code>ON</code> MFA is required for all users to sign in.</para></li><li><para><code>OPTIONAL</code> MFA will be required only for individual users who have an
            MFA factor enabled.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserPoolMfaConfigCmdlet.SmsMfaConfiguration">
            <summary>
            <para>
            <para>The SMS text message MFA configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserPoolMfaConfigCmdlet.SoftwareTokenMfaConfiguration">
            <summary>
            <para>
            <para>The software token MFA configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserPoolMfaConfigCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserPoolMfaConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.SetUserPoolMfaConfigResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.SetUserPoolMfaConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserPoolMfaConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserPoolMfaConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserSettingCmdlet">
            <summary>
            <i>This action is no longer supported.</i> You can use it to configure only SMS MFA.
            You can't use it to configure TOTP software token MFA. To configure either type of
            MFA, use the <a>SetUserMFAPreference</a> action instead.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserSettingCmdlet.AccessToken">
            <summary>
            <para>
            <para>The access token for the set user settings request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserSettingCmdlet.MFAOption">
            <summary>
            <para>
            <para>You can use this parameter only to set an SMS configuration that uses SMS for delivery.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserSettingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.SetUserSettingsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserSettingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccessToken parameter.
            The -PassThru parameter is deprecated, use -Select '^AccessToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserSettingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserSettingAdminCmdlet">
            <summary>
            <i>This action is no longer supported.</i> You can use it to configure only SMS MFA.
            You can't use it to configure TOTP software token MFA. To configure either type of
            MFA, use the <a>AdminSetUserMFAPreference</a> action instead.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserSettingAdminCmdlet.MFAOption">
            <summary>
            <para>
            <para>You can use this parameter only to set an SMS configuration that uses SMS for delivery.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserSettingAdminCmdlet.Username">
            <summary>
            <para>
            <para>The user name of the user that you are setting options for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserSettingAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The ID of the user pool that contains the user that you are setting options for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserSettingAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserSettingAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.SetCGIPUserSettingAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthCmdlet">
            <summary>
            Initiates the authentication flow.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthCmdlet.AnalyticsMetadata_AnalyticsEndpointId">
            <summary>
            <para>
            <para>The endpoint ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthCmdlet.AuthFlow">
            <summary>
            <para>
            <para>The authentication flow for this call to execute. The API action will depend on this
            value. For example: </para><ul><li><para><code>REFRESH_TOKEN_AUTH</code> will take in a valid refresh token and return new
            tokens.</para></li><li><para><code>USER_SRP_AUTH</code> will take in <code>USERNAME</code> and <code>SRP_A</code>
            and return the SRP variables to be used for next challenge execution.</para></li><li><para><code>USER_PASSWORD_AUTH</code> will take in <code>USERNAME</code> and <code>PASSWORD</code>
            and return the next challenge or tokens.</para></li></ul><para>Valid values include:</para><ul><li><para><code>USER_SRP_AUTH</code>: Authentication flow for the Secure Remote Password (SRP)
            protocol.</para></li><li><para><code>REFRESH_TOKEN_AUTH</code>/<code>REFRESH_TOKEN</code>: Authentication flow for
            refreshing the access token and ID token by supplying a valid refresh token.</para></li><li><para><code>CUSTOM_AUTH</code>: Custom authentication flow.</para></li><li><para><code>USER_PASSWORD_AUTH</code>: Non-SRP authentication flow; USERNAME and PASSWORD
            are passed directly. If a user migration Lambda trigger is set, this flow will invoke
            the user migration Lambda if the USERNAME is not found in the user pool. </para></li><li><para><code>ADMIN_USER_PASSWORD_AUTH</code>: Admin-based user password authentication.
            This replaces the <code>ADMIN_NO_SRP_AUTH</code> authentication flow. In this flow,
            Cognito receives the password in the request instead of using the SRP process to verify
            passwords.</para></li></ul><para><code>ADMIN_NO_SRP_AUTH</code> is not a valid value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthCmdlet.AuthParameter">
            <summary>
            <para>
            <para>The authentication parameters. These are inputs corresponding to the <code>AuthFlow</code>
            that you are invoking. The required values depend on the value of <code>AuthFlow</code>:</para><ul><li><para>For <code>USER_SRP_AUTH</code>: <code>USERNAME</code> (required), <code>SRP_A</code>
            (required), <code>SECRET_HASH</code> (required if the app client is configured with
            a client secret), <code>DEVICE_KEY</code></para></li><li><para>For <code>REFRESH_TOKEN_AUTH/REFRESH_TOKEN</code>: <code>REFRESH_TOKEN</code> (required),
            <code>SECRET_HASH</code> (required if the app client is configured with a client secret),
            <code>DEVICE_KEY</code></para></li><li><para>For <code>CUSTOM_AUTH</code>: <code>USERNAME</code> (required), <code>SECRET_HASH</code>
            (if app client is configured with client secret), <code>DEVICE_KEY</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthCmdlet.ClientId">
            <summary>
            <para>
            <para>The app client ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthCmdlet.ClientMetadata">
            <summary>
            <para>
            <para>A map of custom key-value pairs that you can provide as input for certain custom workflows
            that this action triggers.</para><para>You create custom workflows by assigning AWS Lambda functions to user pool triggers.
            When you use the InitiateAuth API action, Amazon Cognito invokes the AWS Lambda functions
            that are specified for various triggers. The ClientMetadata value is passed as input
            to the functions for only the following triggers:</para><ul><li><para>Pre signup</para></li><li><para>Pre authentication</para></li><li><para>User migration</para></li></ul><para>When Amazon Cognito invokes the functions for these triggers, it passes a JSON payload,
            which the function receives as input. This payload contains a <code>validationData</code>
            attribute, which provides the data that you assigned to the ClientMetadata parameter
            in your InitiateAuth request. In your function code in AWS Lambda, you can process
            the <code>validationData</code> value to enhance your workflow for your specific needs.</para><para>When you use the InitiateAuth API action, Amazon Cognito also invokes the functions
            for the following triggers, but it does not provide the ClientMetadata value as input:</para><ul><li><para>Post authentication</para></li><li><para>Custom message</para></li><li><para>Pre token generation</para></li><li><para>Create auth challenge</para></li><li><para>Define auth challenge</para></li><li><para>Verify auth challenge</para></li></ul><para>For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">Customizing
            User Pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.</para><note><para>Take the following limitations into consideration when you use the ClientMetadata
            parameter:</para><ul><li><para>Amazon Cognito does not store the ClientMetadata value. This data is available only
            to AWS Lambda triggers that are assigned to a user pool to support custom workflows.
            If your user pool configuration does not include triggers, the ClientMetadata parameter
            serves no purpose.</para></li><li><para>Amazon Cognito does not validate the ClientMetadata value.</para></li><li><para>Amazon Cognito does not encrypt the the ClientMetadata value, so don't use it to provide
            sensitive information.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthCmdlet.UserContextData_EncodedData">
            <summary>
            <para>
            <para>Contextual data such as the user's device fingerprint, IP address, or location used
            for evaluating the risk of an unexpected event by Amazon Cognito advanced security.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.InitiateAuthResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.InitiateAuthResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClientId parameter.
            The -PassThru parameter is deprecated, use -Select '^ClientId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthAdminCmdlet">
            <summary>
            Initiates the authentication flow, as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthAdminCmdlet.AnalyticsMetadata_AnalyticsEndpointId">
            <summary>
            <para>
            <para>The endpoint ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthAdminCmdlet.AuthFlow">
            <summary>
            <para>
            <para>The authentication flow for this call to execute. The API action will depend on this
            value. For example:</para><ul><li><para><code>REFRESH_TOKEN_AUTH</code> will take in a valid refresh token and return new
            tokens.</para></li><li><para><code>USER_SRP_AUTH</code> will take in <code>USERNAME</code> and <code>SRP_A</code>
            and return the SRP variables to be used for next challenge execution.</para></li><li><para><code>USER_PASSWORD_AUTH</code> will take in <code>USERNAME</code> and <code>PASSWORD</code>
            and return the next challenge or tokens.</para></li></ul><para>Valid values include:</para><ul><li><para><code>USER_SRP_AUTH</code>: Authentication flow for the Secure Remote Password (SRP)
            protocol.</para></li><li><para><code>REFRESH_TOKEN_AUTH</code>/<code>REFRESH_TOKEN</code>: Authentication flow for
            refreshing the access token and ID token by supplying a valid refresh token.</para></li><li><para><code>CUSTOM_AUTH</code>: Custom authentication flow.</para></li><li><para><code>ADMIN_NO_SRP_AUTH</code>: Non-SRP authentication flow; you can pass in the
            USERNAME and PASSWORD directly if the flow is enabled for calling the app client.</para></li><li><para><code>USER_PASSWORD_AUTH</code>: Non-SRP authentication flow; USERNAME and PASSWORD
            are passed directly. If a user migration Lambda trigger is set, this flow will invoke
            the user migration Lambda if the USERNAME is not found in the user pool. </para></li><li><para><code>ADMIN_USER_PASSWORD_AUTH</code>: Admin-based user password authentication.
            This replaces the <code>ADMIN_NO_SRP_AUTH</code> authentication flow. In this flow,
            Cognito receives the password in the request instead of using the SRP process to verify
            passwords.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthAdminCmdlet.AuthParameter">
            <summary>
            <para>
            <para>The authentication parameters. These are inputs corresponding to the <code>AuthFlow</code>
            that you are invoking. The required values depend on the value of <code>AuthFlow</code>:</para><ul><li><para>For <code>USER_SRP_AUTH</code>: <code>USERNAME</code> (required), <code>SRP_A</code>
            (required), <code>SECRET_HASH</code> (required if the app client is configured with
            a client secret), <code>DEVICE_KEY</code></para></li><li><para>For <code>REFRESH_TOKEN_AUTH/REFRESH_TOKEN</code>: <code>REFRESH_TOKEN</code> (required),
            <code>SECRET_HASH</code> (required if the app client is configured with a client secret),
            <code>DEVICE_KEY</code></para></li><li><para>For <code>ADMIN_NO_SRP_AUTH</code>: <code>USERNAME</code> (required), <code>SECRET_HASH</code>
            (if app client is configured with client secret), <code>PASSWORD</code> (required),
            <code>DEVICE_KEY</code></para></li><li><para>For <code>CUSTOM_AUTH</code>: <code>USERNAME</code> (required), <code>SECRET_HASH</code>
            (if app client is configured with client secret), <code>DEVICE_KEY</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthAdminCmdlet.ClientId">
            <summary>
            <para>
            <para>The app client ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthAdminCmdlet.ClientMetadata">
            <summary>
            <para>
            <para>A map of custom key-value pairs that you can provide as input for certain custom workflows
            that this action triggers.</para><para>You create custom workflows by assigning AWS Lambda functions to user pool triggers.
            When you use the AdminInitiateAuth API action, Amazon Cognito invokes the AWS Lambda
            functions that are specified for various triggers. The ClientMetadata value is passed
            as input to the functions for only the following triggers:</para><ul><li><para>Pre signup</para></li><li><para>Pre authentication</para></li><li><para>User migration</para></li></ul><para>When Amazon Cognito invokes the functions for these triggers, it passes a JSON payload,
            which the function receives as input. This payload contains a <code>validationData</code>
            attribute, which provides the data that you assigned to the ClientMetadata parameter
            in your AdminInitiateAuth request. In your function code in AWS Lambda, you can process
            the <code>validationData</code> value to enhance your workflow for your specific needs.</para><para>When you use the AdminInitiateAuth API action, Amazon Cognito also invokes the functions
            for the following triggers, but it does not provide the ClientMetadata value as input:</para><ul><li><para>Post authentication</para></li><li><para>Custom message</para></li><li><para>Pre token generation</para></li><li><para>Create auth challenge</para></li><li><para>Define auth challenge</para></li><li><para>Verify auth challenge</para></li></ul><para>For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">Customizing
            User Pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.</para><note><para>Take the following limitations into consideration when you use the ClientMetadata
            parameter:</para><ul><li><para>Amazon Cognito does not store the ClientMetadata value. This data is available only
            to AWS Lambda triggers that are assigned to a user pool to support custom workflows.
            If your user pool configuration does not include triggers, the ClientMetadata parameter
            serves no purpose.</para></li><li><para>Amazon Cognito does not validate the ClientMetadata value.</para></li><li><para>Amazon Cognito does not encrypt the the ClientMetadata value, so don't use it to provide
            sensitive information.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthAdminCmdlet.ContextData_EncodedData">
            <summary>
            <para>
            <para>Encoded data containing device fingerprinting details, collected using the Amazon
            Cognito context data collection library.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthAdminCmdlet.ContextData_HttpHeader">
            <summary>
            <para>
            <para>HttpHeaders received on your server in same order.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthAdminCmdlet.ContextData_IpAddress">
            <summary>
            <para>
            <para>Source IP address of your user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthAdminCmdlet.ContextData_ServerName">
            <summary>
            <para>
            <para>Your server endpoint where this API is invoked.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthAdminCmdlet.ContextData_ServerPath">
            <summary>
            <para>
            <para>Your server path where this API is invoked. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The ID of the Amazon Cognito user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClientId parameter.
            The -PassThru parameter is deprecated, use -Select '^ClientId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPAuthAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPUserImportJobCmdlet">
            <summary>
            Starts the user import.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPUserImportJobCmdlet.JobId">
            <summary>
            <para>
            <para>The job ID for the user import job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPUserImportJobCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool that the users are being imported into.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPUserImportJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserImportJob'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.StartUserImportJobResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.StartUserImportJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPUserImportJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StartCGIPUserImportJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.StopCGIPDeviceTrackingCmdlet">
            <summary>
            Forgets the specified device.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StopCGIPDeviceTrackingCmdlet.AccessToken">
            <summary>
            <para>
            <para>The access token for the forgotten device request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StopCGIPDeviceTrackingCmdlet.DeviceKey">
            <summary>
            <para>
            <para>The device key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StopCGIPDeviceTrackingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.ForgetDeviceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StopCGIPDeviceTrackingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeviceKey parameter.
            The -PassThru parameter is deprecated, use -Select '^DeviceKey' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StopCGIPDeviceTrackingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.StopCGIPDeviceTrackingAdminCmdlet">
            <summary>
            Forgets the device, as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StopCGIPDeviceTrackingAdminCmdlet.DeviceKey">
            <summary>
            <para>
            <para>The device key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StopCGIPDeviceTrackingAdminCmdlet.Username">
            <summary>
            <para>
            <para>The user name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StopCGIPDeviceTrackingAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StopCGIPDeviceTrackingAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StopCGIPDeviceTrackingAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeviceKey parameter.
            The -PassThru parameter is deprecated, use -Select '^DeviceKey' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StopCGIPDeviceTrackingAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.StopCGIPUserImportJobCmdlet">
            <summary>
            Stops the user import job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StopCGIPUserImportJobCmdlet.JobId">
            <summary>
            <para>
            <para>The job ID for the user import job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StopCGIPUserImportJobCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool that the users are being imported into.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StopCGIPUserImportJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserImportJob'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.StopUserImportJobResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.StopUserImportJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StopCGIPUserImportJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.StopCGIPUserImportJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.TestCGIPSoftwareTokenCmdlet">
            <summary>
            Use this API to register a user's entered TOTP code and mark the user's software token
            MFA status as "verified" if successful. The request takes an access token or a session
            string, but not both.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.TestCGIPSoftwareTokenCmdlet.AccessToken">
            <summary>
            <para>
            <para>The access token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.TestCGIPSoftwareTokenCmdlet.FriendlyDeviceName">
            <summary>
            <para>
            <para>The friendly device name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.TestCGIPSoftwareTokenCmdlet.Session">
            <summary>
            <para>
            <para>The session which should be passed both ways in challenge-response calls to the service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.TestCGIPSoftwareTokenCmdlet.UserCode">
            <summary>
            <para>
            <para>The one time password computed using the secret code returned by </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.TestCGIPSoftwareTokenCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.VerifySoftwareTokenResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.VerifySoftwareTokenResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.TestCGIPSoftwareTokenCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserCode parameter.
            The -PassThru parameter is deprecated, use -Select '^UserCode' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.TestCGIPUserAttributeCmdlet">
            <summary>
            Verifies the specified user attributes in the user pool.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.TestCGIPUserAttributeCmdlet.AccessToken">
            <summary>
            <para>
            <para>Represents the access token of the request to verify user attributes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.TestCGIPUserAttributeCmdlet.AttributeName">
            <summary>
            <para>
            <para>The attribute name in the request to verify user attributes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.TestCGIPUserAttributeCmdlet.Code">
            <summary>
            <para>
            <para>The verification code in the request to verify user attributes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.TestCGIPUserAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.TestCGIPUserAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccessToken parameter.
            The -PassThru parameter is deprecated, use -Select '^AccessToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPAuthEventFeedbackCmdlet">
            <summary>
            Provides the feedback for an authentication event whether it was from a valid user
            or not. This feedback is used for improving the risk evaluation decision for the user
            pool as part of Amazon Cognito advanced security.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPAuthEventFeedbackCmdlet.EventId">
            <summary>
            <para>
            <para>The event ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPAuthEventFeedbackCmdlet.FeedbackToken">
            <summary>
            <para>
            <para>The feedback token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPAuthEventFeedbackCmdlet.FeedbackValue">
            <summary>
            <para>
            <para>The authentication event feedback value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPAuthEventFeedbackCmdlet.Username">
            <summary>
            <para>
            <para>The user pool username.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPAuthEventFeedbackCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPAuthEventFeedbackCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.UpdateAuthEventFeedbackResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPAuthEventFeedbackCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPAuthEventFeedbackCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPAuthEventFeedbackAdminCmdlet">
            <summary>
            Provides feedback for an authentication event as to whether it was from a valid user.
            This feedback is used for improving the risk evaluation decision for the user pool
            as part of Amazon Cognito advanced security.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPAuthEventFeedbackAdminCmdlet.EventId">
            <summary>
            <para>
            <para>The authentication event ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPAuthEventFeedbackAdminCmdlet.FeedbackValue">
            <summary>
            <para>
            <para>The authentication event feedback value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPAuthEventFeedbackAdminCmdlet.Username">
            <summary>
            <para>
            <para>The user pool username.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPAuthEventFeedbackAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPAuthEventFeedbackAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminUpdateAuthEventFeedbackResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPAuthEventFeedbackAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPAuthEventFeedbackAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPGroupCmdlet">
            <summary>
            Updates the specified group with the specified attributes.
            
             
            <para>
            Calling this action requires developer credentials.
            </para><important><para>
            If you don't provide a value for an attribute, it will be set to the default value.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPGroupCmdlet.Description">
            <summary>
            <para>
            <para>A string containing the new description of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPGroupCmdlet.Precedence">
            <summary>
            <para>
            <para>The new precedence value for the group. For more information about this parameter,
            see .</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPGroupCmdlet.RoleArn">
            <summary>
            <para>
            <para>The new role ARN for the group. This is used for setting the <code>cognito:roles</code>
            and <code>cognito:preferred_role</code> claims in the token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPGroupCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Group'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.UpdateGroupResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.UpdateGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPIdentityProviderCmdlet">
            <summary>
            Updates identity provider information for a user pool.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPIdentityProviderCmdlet.AttributeMapping">
            <summary>
            <para>
            <para>The identity provider attribute mapping to be changed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPIdentityProviderCmdlet.IdpIdentifier">
            <summary>
            <para>
            <para>A list of identity provider identifiers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPIdentityProviderCmdlet.ProviderDetail">
            <summary>
            <para>
            <para>The identity provider details to be updated, such as <code>MetadataURL</code> and
            <code>MetadataFile</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPIdentityProviderCmdlet.ProviderName">
            <summary>
            <para>
            <para>The identity provider name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPIdentityProviderCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPIdentityProviderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IdentityProvider'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.UpdateIdentityProviderResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.UpdateIdentityProviderResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPIdentityProviderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProviderName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProviderName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPIdentityProviderCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPPasswordCmdlet">
            <summary>
            Changes the password for a specified user in a user pool.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPPasswordCmdlet.AccessToken">
            <summary>
            <para>
            <para>The access token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPPasswordCmdlet.PreviousPassword">
            <summary>
            <para>
            <para>The old password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPPasswordCmdlet.ProposedPassword">
            <summary>
            <para>
            <para>The new password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPPasswordCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.ChangePasswordResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPPasswordCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccessToken parameter.
            The -PassThru parameter is deprecated, use -Select '^AccessToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPPasswordCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPResourceServerCmdlet">
            <summary>
            Updates the name and scopes of resource server. All other fields are read-only.
            
             <important><para>
            If you don't provide a value for an attribute, it will be set to the default value.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPResourceServerCmdlet.Identifier">
            <summary>
            <para>
            <para>The identifier for the resource server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPResourceServerCmdlet.Name">
            <summary>
            <para>
            <para>The name of the resource server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPResourceServerCmdlet.Scope">
            <summary>
            <para>
            <para>The scope values to be set for the resource server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPResourceServerCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPResourceServerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourceServer'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.UpdateResourceServerResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.UpdateResourceServerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPResourceServerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Identifier parameter.
            The -PassThru parameter is deprecated, use -Select '^Identifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPResourceServerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserAttributeCmdlet">
            <summary>
            Allows a user to update a specific attribute (one at a time).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserAttributeCmdlet.AccessToken">
            <summary>
            <para>
            <para>The access token for the request to update user attributes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserAttributeCmdlet.ClientMetadata">
            <summary>
            <para>
            <para>A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers. </para><para>You create custom workflows by assigning AWS Lambda functions to user pool triggers.
            When you use the UpdateUserAttributes API action, Amazon Cognito invokes the function
            that is assigned to the <i>custom message</i> trigger. When Amazon Cognito invokes
            this function, it passes a JSON payload, which the function receives as input. This
            payload contains a <code>clientMetadata</code> attribute, which provides the data
            that you assigned to the ClientMetadata parameter in your UpdateUserAttributes request.
            In your function code in AWS Lambda, you can process the <code>clientMetadata</code>
            value to enhance your workflow for your specific needs.</para><para>For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">Customizing
            User Pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.</para><note><para>Take the following limitations into consideration when you use the ClientMetadata
            parameter:</para><ul><li><para>Amazon Cognito does not store the ClientMetadata value. This data is available only
            to AWS Lambda triggers that are assigned to a user pool to support custom workflows.
            If your user pool configuration does not include triggers, the ClientMetadata parameter
            serves no purpose.</para></li><li><para>Amazon Cognito does not validate the ClientMetadata value.</para></li><li><para>Amazon Cognito does not encrypt the the ClientMetadata value, so don't use it to provide
            sensitive information.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserAttributeCmdlet.UserAttribute">
            <summary>
            <para>
            <para>An array of name-value pairs representing user attributes.</para><para>For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute
            name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CodeDeliveryDetailsList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccessToken parameter.
            The -PassThru parameter is deprecated, use -Select '^AccessToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserAttributeAdminCmdlet">
            <summary>
            Updates the specified user's attributes, including developer attributes, as an administrator.
            Works on any user.
            
             
            <para>
            For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute
            name.
            </para><para>
            In addition to updating user attributes, this API can also be used to mark phone and
            email as verified.
            </para><para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserAttributeAdminCmdlet.ClientMetadata">
            <summary>
            <para>
            <para>A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers. </para><para>You create custom workflows by assigning AWS Lambda functions to user pool triggers.
            When you use the AdminUpdateUserAttributes API action, Amazon Cognito invokes the
            function that is assigned to the <i>custom message</i> trigger. When Amazon Cognito
            invokes this function, it passes a JSON payload, which the function receives as input.
            This payload contains a <code>clientMetadata</code> attribute, which provides the
            data that you assigned to the ClientMetadata parameter in your AdminUpdateUserAttributes
            request. In your function code in AWS Lambda, you can process the <code>clientMetadata</code>
            value to enhance your workflow for your specific needs.</para><para>For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">Customizing
            User Pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.</para><note><para>Take the following limitations into consideration when you use the ClientMetadata
            parameter:</para><ul><li><para>Amazon Cognito does not store the ClientMetadata value. This data is available only
            to AWS Lambda triggers that are assigned to a user pool to support custom workflows.
            If your user pool configuration does not include triggers, the ClientMetadata parameter
            serves no purpose.</para></li><li><para>Amazon Cognito does not validate the ClientMetadata value.</para></li><li><para>Amazon Cognito does not encrypt the the ClientMetadata value, so don't use it to provide
            sensitive information.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserAttributeAdminCmdlet.UserAttribute">
            <summary>
            <para>
            <para>An array of name-value pairs representing user attributes.</para><para>For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute
            name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserAttributeAdminCmdlet.Username">
            <summary>
            <para>
            <para>The user name of the user for whom you want to update user attributes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserAttributeAdminCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool where you want to update user attributes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserAttributeAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserAttributeAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserAttributeAdminCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet">
            <summary>
            Updates the specified user pool with the specified attributes. You can get a list
            of the current user pool settings with .
            
             <important><para>
            If you don't provide a value for an attribute, it will be set to the default value.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.UserPoolAddOns_AdvancedSecurityMode">
            <summary>
            <para>
            <para>The advanced security mode.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.AdminCreateUserConfig_AllowAdminCreateUserOnly">
            <summary>
            <para>
            <para>Set to <code>True</code> if only the administrator is allowed to create user profiles.
            Set to <code>False</code> if users can sign themselves up via an app.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.AutoVerifiedAttribute">
            <summary>
            <para>
            <para>The attributes that are automatically verified when the Amazon Cognito service makes
            a request to update user pools.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.DeviceConfiguration_ChallengeRequiredOnNewDevice">
            <summary>
            <para>
            <para>Indicates whether a challenge is required on a new device. Only applicable to a new
            device.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.EmailConfiguration_ConfigurationSet">
            <summary>
            <para>
            <para>The set of configuration rules that can be applied to emails sent using Amazon SES.
            A configuration set is applied to an email by including a reference to the configuration
            set in the headers of the email. Once applied, all of the rules in that configuration
            set are applied to the email. Configuration sets can be used to apply the following
            types of rules to emails: </para><ul><li><para>Event publishing – Amazon SES can track the number of send, delivery, open, click,
            bounce, and complaint events for each email sent. Use event publishing to send information
            about these events to other AWS services such as SNS and CloudWatch.</para></li><li><para>IP pool management – When leasing dedicated IP addresses with Amazon SES, you can
            create groups of IP addresses, called dedicated IP pools. You can then associate the
            dedicated IP pools with configuration sets.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.LambdaConfig_CreateAuthChallenge">
            <summary>
            <para>
            <para>Creates an authentication challenge.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.LambdaConfig_CustomMessage">
            <summary>
            <para>
            <para>A custom Message AWS Lambda trigger.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.VerificationMessageTemplate_DefaultEmailOption">
            <summary>
            <para>
            <para>The default email option.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.LambdaConfig_DefineAuthChallenge">
            <summary>
            <para>
            <para>Defines the authentication challenge.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.DeviceConfiguration_DeviceOnlyRememberedOnUserPrompt">
            <summary>
            <para>
            <para>If true, a device is only remembered on user prompt.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.InviteMessageTemplate_EmailMessage">
            <summary>
            <para>
            <para>The message template for email messages.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.VerificationMessageTemplate_EmailMessage">
            <summary>
            <para>
            <para>The email message template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.VerificationMessageTemplate_EmailMessageByLink">
            <summary>
            <para>
            <para>The email message template for sending a confirmation link to the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.EmailConfiguration_EmailSendingAccount">
            <summary>
            <para>
            <para>Specifies whether Amazon Cognito emails your users by using its built-in email functionality
            or your Amazon SES email configuration. Specify one of the following values:</para><dl><dt>COGNITO_DEFAULT</dt><dd><para>When Amazon Cognito emails your users, it uses its built-in email functionality. When
            you use the default option, Amazon Cognito allows only a limited number of emails
            each day for your user pool. For typical production environments, the default email
            limit is below the required delivery volume. To achieve a higher delivery volume,
            specify DEVELOPER to use your Amazon SES email configuration.</para><para>To look up the email delivery limit for the default option, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/limits.html">Limits
            in Amazon Cognito</a> in the <i>Amazon Cognito Developer Guide</i>.</para><para>The default FROM address is no-reply@verificationemail.com. To customize the FROM
            address, provide the ARN of an Amazon SES verified email address for the <code>SourceArn</code>
            parameter.</para></dd><dt>DEVELOPER</dt><dd><para>When Amazon Cognito emails your users, it uses your Amazon SES configuration. Amazon
            Cognito calls Amazon SES on your behalf to send email from your verified email address.
            When you use this option, the email delivery limits are the same limits that apply
            to your Amazon SES verified email address in your AWS account.</para><para>If you use this option, you must provide the ARN of an Amazon SES verified email address
            for the <code>SourceArn</code> parameter.</para><para>Before Amazon Cognito can email your users, it requires additional permissions to
            call Amazon SES on your behalf. When you update your user pool with this option, Amazon
            Cognito creates a <i>service-linked role</i>, which is a type of IAM role, in your
            AWS account. This role contains the permissions that allow Amazon Cognito to access
            Amazon SES and send email messages with your address. For more information about the
            service-linked role that Amazon Cognito creates, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/using-service-linked-roles.html">Using
            Service-Linked Roles for Amazon Cognito</a> in the <i>Amazon Cognito Developer Guide</i>.</para></dd></dl>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.InviteMessageTemplate_EmailSubject">
            <summary>
            <para>
            <para>The subject line for email messages.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.VerificationMessageTemplate_EmailSubject">
            <summary>
            <para>
            <para>The subject line for the email message template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.VerificationMessageTemplate_EmailSubjectByLink">
            <summary>
            <para>
            <para>The subject line for the email message template for sending a confirmation link to
            the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.EmailVerificationMessage">
            <summary>
            <para>
            <para>The contents of the email verification message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.EmailVerificationSubject">
            <summary>
            <para>
            <para>The subject of the email verification message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.SmsConfiguration_ExternalId">
            <summary>
            <para>
            <para>The external ID is a value that we recommend you use to add security to your IAM role
            which is used to call Amazon SNS to send SMS messages for your user pool. If you provide
            an <code>ExternalId</code>, the Cognito User Pool will include it when attempting
            to assume your IAM role, so that you can set your roles trust policy to require the
            <code>ExternalID</code>. If you use the Cognito Management Console to create a role
            for SMS MFA, Cognito will create a role with the required permissions and a trust
            policy that demonstrates use of the <code>ExternalId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.EmailConfiguration_From">
            <summary>
            <para>
            <para>Identifies either the sender’s email address or the sender’s name with their email
            address. For example, <code>testuser@example.com</code> or <code>Test User &lt;testuser@example.com&gt;</code>.
            This address will appear before the body of the email.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.MfaConfiguration">
            <summary>
            <para>
            <para>Can be one of the following values:</para><ul><li><para><code>OFF</code> - MFA tokens are not required and cannot be specified during user
            registration.</para></li><li><para><code>ON</code> - MFA tokens are required for all user registrations. You can only
            specify required when you are initially creating a user pool.</para></li><li><para><code>OPTIONAL</code> - Users have the option when registering to create an MFA token.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.PasswordPolicy_MinimumLength">
            <summary>
            <para>
            <para>The minimum length of the password policy that you have set. Cannot be less than 6.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.LambdaConfig_PostAuthentication">
            <summary>
            <para>
            <para>A post-authentication AWS Lambda trigger.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.LambdaConfig_PostConfirmation">
            <summary>
            <para>
            <para>A post-confirmation AWS Lambda trigger.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.LambdaConfig_PreAuthentication">
            <summary>
            <para>
            <para>A pre-authentication AWS Lambda trigger.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.LambdaConfig_PreSignUp">
            <summary>
            <para>
            <para>A pre-registration AWS Lambda trigger.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.LambdaConfig_PreTokenGeneration">
            <summary>
            <para>
            <para>A Lambda trigger that is invoked before token generation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.AccountRecoverySetting_RecoveryMechanism">
            <summary>
            <para>
            <para>The list of <code>RecoveryOptionTypes</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.EmailConfiguration_ReplyToEmailAddress">
            <summary>
            <para>
            <para>The destination to which the receiver of the email should reply to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.PasswordPolicy_RequireLowercase">
            <summary>
            <para>
            <para>In the password policy that you have set, refers to whether you have required users
            to use at least one lowercase letter in their password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.PasswordPolicy_RequireNumber">
            <summary>
            <para>
            <para>In the password policy that you have set, refers to whether you have required users
            to use at least one number in their password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.PasswordPolicy_RequireSymbol">
            <summary>
            <para>
            <para>In the password policy that you have set, refers to whether you have required users
            to use at least one symbol in their password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.PasswordPolicy_RequireUppercase">
            <summary>
            <para>
            <para>In the password policy that you have set, refers to whether you have required users
            to use at least one uppercase letter in their password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.SmsAuthenticationMessage">
            <summary>
            <para>
            <para>The contents of the SMS authentication message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.VerificationMessageTemplate_SmsMessage">
            <summary>
            <para>
            <para>The SMS message template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.InviteMessageTemplate_SMSMessage">
            <summary>
            <para>
            <para>The message template for SMS messages.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.SmsVerificationMessage">
            <summary>
            <para>
            <para>A container with information about the SMS verification message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.SmsConfiguration_SnsCallerArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) caller.
            This is the ARN of the IAM role in your AWS account which Cognito will use to send
            SMS messages.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.EmailConfiguration_SourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of a verified email address in Amazon SES. This email
            address is used in one of the following ways, depending on the value that you specify
            for the <code>EmailSendingAccount</code> parameter:</para><ul><li><para>If you specify <code>COGNITO_DEFAULT</code>, Amazon Cognito uses this address as the
            custom FROM address when it emails your users by using its built-in email account.</para></li><li><para>If you specify <code>DEVELOPER</code>, Amazon Cognito emails your users with this
            address by calling Amazon SES on your behalf.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.PasswordPolicy_TemporaryPasswordValidityDay">
            <summary>
            <para>
            <para>In the password policy you have set, refers to the number of days a temporary password
            is valid. If the user does not sign-in during this time, their password will need
            to be reset by an administrator.</para><note><para>When you set <code>TemporaryPasswordValidityDays</code> for a user pool, you will
            no longer be able to set the deprecated <code>UnusedAccountValidityDays</code> value
            for that user pool.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.AdminCreateUserConfig_UnusedAccountValidityDay">
            <summary>
            <para>
            <para>The user account expiration limit, in days, after which the account is no longer usable.
            To reset the account after that time limit, you must call <code>AdminCreateUser</code>
            again, specifying <code>"RESEND"</code> for the <code>MessageAction</code> parameter.
            The default value for this parameter is 7. </para><note><para>If you set a value for <code>TemporaryPasswordValidityDays</code> in <code>PasswordPolicy</code>,
            that value will be used and <code>UnusedAccountValidityDays</code> will be deprecated
            for that user pool. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.LambdaConfig_UserMigration">
            <summary>
            <para>
            <para>The user migration Lambda config type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.UserPoolTag">
            <summary>
            <para>
            <para>The tag keys and values to assign to the user pool. A tag is a label that you can
            use to categorize and manage user pools in different ways, such as by purpose, owner,
            environment, or other criteria.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.LambdaConfig_VerifyAuthChallengeResponse">
            <summary>
            <para>
            <para>Verifies the authentication challenge response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.UpdateUserPoolResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet">
            <summary>
            Updates the specified user pool app client with the specified attributes. You can
            get a list of the current user pool app client settings with .
            
             <important><para>
            If you don't provide a value for an attribute, it will be set to the default value.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.AllowedOAuthFlow">
            <summary>
            <para>
            <para>The allowed OAuth flows.</para><para>Set to <code>code</code> to initiate a code grant flow, which provides an authorization
            code as the response. This code can be exchanged for access tokens with the token
            endpoint.</para><para>Set to <code>implicit</code> to specify that the client should get the access token
            (and, optionally, ID token, based on scopes) directly.</para><para>Set to <code>client_credentials</code> to specify that the client should get the access
            token (and, optionally, ID token, based on scopes) from the token endpoint using a
            combination of client and client_secret.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.AllowedOAuthFlowsUserPoolClient">
            <summary>
            <para>
            <para>Set to true if the client is allowed to follow the OAuth protocol when interacting
            with Cognito user pools.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.AllowedOAuthScope">
            <summary>
            <para>
            <para>The allowed OAuth scopes. Possible values provided by OAuth are: <code>phone</code>,
            <code>email</code>, <code>openid</code>, and <code>profile</code>. Possible values
            provided by AWS are: <code>aws.cognito.signin.user.admin</code>. Custom scopes created
            in Resource Servers are also supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.AnalyticsConfiguration_ApplicationId">
            <summary>
            <para>
            <para>The application ID for an Amazon Pinpoint application.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.CallbackURLs">
            <summary>
            <para>
            <para>A list of allowed redirect (callback) URLs for the identity providers.</para><para>A redirect URI must:</para><ul><li><para>Be an absolute URI.</para></li><li><para>Be registered with the authorization server.</para></li><li><para>Not include a fragment component.</para></li></ul><para>See <a href="https://tools.ietf.org/html/rfc6749#section-3.1.2">OAuth 2.0 - Redirection
            Endpoint</a>.</para><para>Amazon Cognito requires HTTPS over HTTP except for http://localhost for testing purposes
            only.</para><para>App callback URLs such as myapp://example are also supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.ClientId">
            <summary>
            <para>
            <para>The ID of the client associated with the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.ClientName">
            <summary>
            <para>
            <para>The client name from the update user pool client request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.DefaultRedirectURI">
            <summary>
            <para>
            <para>The default redirect URI. Must be in the <code>CallbackURLs</code> list.</para><para>A redirect URI must:</para><ul><li><para>Be an absolute URI.</para></li><li><para>Be registered with the authorization server.</para></li><li><para>Not include a fragment component.</para></li></ul><para>See <a href="https://tools.ietf.org/html/rfc6749#section-3.1.2">OAuth 2.0 - Redirection
            Endpoint</a>.</para><para>Amazon Cognito requires HTTPS over HTTP except for http://localhost for testing purposes
            only.</para><para>App callback URLs such as myapp://example are also supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.ExplicitAuthFlow">
            <summary>
            <para>
            <para>The authentication flows that are supported by the user pool clients. Flow names without
            the <code>ALLOW_</code> prefix are deprecated in favor of new names with the <code>ALLOW_</code>
            prefix. Note that values with <code>ALLOW_</code> prefix cannot be used along with
            values without <code>ALLOW_</code> prefix.</para><para>Valid values include:</para><ul><li><para><code>ALLOW_ADMIN_USER_PASSWORD_AUTH</code>: Enable admin based user password authentication
            flow <code>ADMIN_USER_PASSWORD_AUTH</code>. This setting replaces the <code>ADMIN_NO_SRP_AUTH</code>
            setting. With this authentication flow, Cognito receives the password in the request
            instead of using the SRP (Secure Remote Password protocol) protocol to verify passwords.</para></li><li><para><code>ALLOW_CUSTOM_AUTH</code>: Enable Lambda trigger based authentication.</para></li><li><para><code>ALLOW_USER_PASSWORD_AUTH</code>: Enable user password-based authentication.
            In this flow, Cognito receives the password in the request instead of using the SRP
            protocol to verify passwords.</para></li><li><para><code>ALLOW_USER_SRP_AUTH</code>: Enable SRP based authentication.</para></li><li><para><code>ALLOW_REFRESH_TOKEN_AUTH</code>: Enable authflow to refresh tokens.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.AnalyticsConfiguration_ExternalId">
            <summary>
            <para>
            <para>The external ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.LogoutURLs">
            <summary>
            <para>
            <para>A list of allowed logout URLs for the identity providers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.PreventUserExistenceError">
            <summary>
            <para>
            <para>Use this setting to choose which errors and responses are returned by Cognito APIs
            during authentication, account confirmation, and password recovery when the user does
            not exist in the user pool. When set to <code>ENABLED</code> and the user does not
            exist, authentication returns an error indicating either the username or password
            was incorrect, and account confirmation and password recovery return a response indicating
            a code was sent to a simulated destination. When set to <code>LEGACY</code>, those
            APIs will return a <code>UserNotFoundException</code> exception if the user does not
            exist in the user pool.</para><para>Valid values include:</para><ul><li><para><code>ENABLED</code> - This prevents user existence-related errors.</para></li><li><para><code>LEGACY</code> - This represents the old behavior of Cognito where user existence
            related errors are not prevented.</para></li></ul><para>This setting affects the behavior of following APIs:</para><ul><li><para><a>AdminInitiateAuth</a></para></li><li><para><a>AdminRespondToAuthChallenge</a></para></li><li><para><a>InitiateAuth</a></para></li><li><para><a>RespondToAuthChallenge</a></para></li><li><para><a>ForgotPassword</a></para></li><li><para><a>ConfirmForgotPassword</a></para></li><li><para><a>ConfirmSignUp</a></para></li><li><para><a>ResendConfirmationCode</a></para></li></ul><note><para>After February 15th 2020, the value of <code>PreventUserExistenceErrors</code> will
            default to <code>ENABLED</code> for newly created user pool clients if no value is
            provided.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.ReadAttribute">
            <summary>
            <para>
            <para>The read-only attributes of the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.RefreshTokenValidity">
            <summary>
            <para>
            <para>The time limit, in days, after which the refresh token is no longer valid and cannot
            be used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.AnalyticsConfiguration_RoleArn">
            <summary>
            <para>
            <para>The ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon
            Pinpoint analytics.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.SupportedIdentityProvider">
            <summary>
            <para>
            <para>A list of provider names for the identity providers that are supported on this client.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.AnalyticsConfiguration_UserDataShared">
            <summary>
            <para>
            <para>If <code>UserDataShared</code> is <code>true</code>, Amazon Cognito will include user
            data in the events it publishes to Amazon Pinpoint analytics.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The user pool ID for the user pool where you want to update the user pool client.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.WriteAttribute">
            <summary>
            <para>
            <para>The writeable attributes of the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserPoolClient'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolClientCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolDomainCmdlet">
            <summary>
            Updates the Secure Sockets Layer (SSL) certificate for the custom domain for your
            user pool.
            
             
            <para>
            You can use this operation to provide the Amazon Resource Name (ARN) of a new certificate
            to Amazon Cognito. You cannot use it to change the domain for a user pool.
            </para><para>
            A custom domain is used to host the Amazon Cognito hosted UI, which provides sign-up
            and sign-in pages for your application. When you set up a custom domain, you provide
            a certificate that you manage with AWS Certificate Manager (ACM). When necessary,
            you can use this operation to change the certificate that you applied to your custom
            domain.
            </para><para>
            Usually, this is unnecessary following routine certificate renewal with ACM. When
            you renew your existing certificate in ACM, the ARN for your certificate remains the
            same, and your custom domain uses the new certificate automatically.
            </para><para>
            However, if you replace your existing certificate with a new one, ACM gives the new
            certificate a new ARN. To apply the new certificate to your custom domain, you must
            provide this ARN to Amazon Cognito.
            </para><para>
            When you add your new certificate in ACM, you must choose US East (N. Virginia) as
            the AWS Region.
            </para><para>
            After you submit your request, Amazon Cognito requires up to 1 hour to distribute
            your new certificate to your custom domain.
            </para><para>
            For more information about adding a custom domain to your user pool, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html">Using
            Your Own Domain for the Hosted UI</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolDomainCmdlet.CustomDomainConfig_CertificateArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an AWS Certificate Manager SSL certificate. You
            use this certificate for the subdomain of your custom domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolDomainCmdlet.Domain">
            <summary>
            <para>
            <para>The domain name for the custom domain that hosts the sign-up and sign-in pages for
            your application. For example: <code>auth.example.com</code>. </para><para>This string can include only lowercase letters, numbers, and hyphens. Do not use a
            hyphen for the first or last character. Use periods to separate subdomain names.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolDomainCmdlet.UserPoolId">
            <summary>
            <para>
            <para>The ID of the user pool that is associated with the custom domain that you are updating
            the certificate for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CloudFrontDomain'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentityProvider.Model.UpdateUserPoolDomainResponse).
            Specifying the name of a property of type Amazon.CognitoIdentityProvider.Model.UpdateUserPoolDomainResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGIP.UpdateCGIPUserPoolDomainCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
