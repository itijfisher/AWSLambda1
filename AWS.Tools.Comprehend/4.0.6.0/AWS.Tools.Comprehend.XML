<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.Comprehend</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.AddCOMPResourceTagCmdlet">
            <summary>
            Associates a specific tag with an Amazon Comprehend resource. A tag is a key-value
            pair that adds as a metadata to a resource used by Amazon Comprehend. For example,
            a tag with "Sales" as the key might be added to a resource to indicate its use by
            the sales department.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.AddCOMPResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the given Amazon Comprehend resource to which you
            want to associate the tags. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.AddCOMPResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>Tags being associated with a specific Amazon Comprehend resource. There can be a maximum
            of 50 tags (both existing and pending) associated with a specific resource. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.AddCOMPResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.AddCOMPResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.AddCOMPResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.FindCOMPDominantLanguageCmdlet">
            <summary>
            Determines the dominant language of the input text. For a list of languages that Amazon
            Comprehend can detect, see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/how-languages.html">Amazon
            Comprehend Supported Languages</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPDominantLanguageCmdlet.Text">
            <summary>
            <para>
            <para>A UTF-8 text string. Each string should contain at least 20 characters and must contain
            fewer that 5,000 bytes of UTF-8 encoded characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPDominantLanguageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Languages'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.DetectDominantLanguageResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.DetectDominantLanguageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPDominantLanguageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Text parameter.
            The -PassThru parameter is deprecated, use -Select '^Text' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.FindCOMPDominantLanguageBatchCmdlet">
            <summary>
            Determines the dominant language of the input text for a batch of documents. For a
            list of languages that Amazon Comprehend can detect, see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/how-languages.html">Amazon
            Comprehend Supported Languages</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPDominantLanguageBatchCmdlet.TextList">
            <summary>
            <para>
            <para>A list containing the text of the input documents. The list can contain a maximum
            of 25 documents. Each document should contain at least 20 characters and must contain
            fewer than 5,000 bytes of UTF-8 encoded characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPDominantLanguageBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.BatchDetectDominantLanguageResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.BatchDetectDominantLanguageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.FindCOMPEntityCmdlet">
            <summary>
            Inspects text for named entities, and returns information about them. For more information,
            about named entities, see <a>how-entities</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPEntityCmdlet.LanguageCode">
            <summary>
            <para>
            <para>The language of the input documents. You can specify any of the primary languages
            supported by Amazon Comprehend. All documents must be in the same language.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPEntityCmdlet.Text">
            <summary>
            <para>
            <para>A UTF-8 text string. Each string must contain fewer that 5,000 bytes of UTF-8 encoded
            characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPEntityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Entities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.DetectEntitiesResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.DetectEntitiesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPEntityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Text parameter.
            The -PassThru parameter is deprecated, use -Select '^Text' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.FindCOMPEntityBatchCmdlet">
            <summary>
            Inspects the text of a batch of documents for named entities and returns information
            about them. For more information about named entities, see <a>how-entities</a>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPEntityBatchCmdlet.LanguageCode">
            <summary>
            <para>
            <para>The language of the input documents. You can specify any of the primary languages
            supported by Amazon Comprehend. All documents must be in the same language.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPEntityBatchCmdlet.TextList">
            <summary>
            <para>
            <para>A list containing the text of the input documents. The list can contain a maximum
            of 25 documents. Each document must contain fewer than 5,000 bytes of UTF-8 encoded
            characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPEntityBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.BatchDetectEntitiesResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.BatchDetectEntitiesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.FindCOMPKeyPhraseCmdlet">
            <summary>
            Detects the key noun phrases found in the text.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPKeyPhraseCmdlet.LanguageCode">
            <summary>
            <para>
            <para>The language of the input documents. You can specify any of the primary languages
            supported by Amazon Comprehend. All documents must be in the same language.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPKeyPhraseCmdlet.Text">
            <summary>
            <para>
            <para>A UTF-8 text string. Each string must contain fewer that 5,000 bytes of UTF-8 encoded
            characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPKeyPhraseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'KeyPhrases'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.DetectKeyPhrasesResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.DetectKeyPhrasesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPKeyPhraseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Text parameter.
            The -PassThru parameter is deprecated, use -Select '^Text' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.FindCOMPKeyPhrasesBatchCmdlet">
            <summary>
            Detects the key noun phrases found in a batch of documents.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPKeyPhrasesBatchCmdlet.LanguageCode">
            <summary>
            <para>
            <para>The language of the input documents. You can specify any of the primary languages
            supported by Amazon Comprehend. All documents must be in the same language.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPKeyPhrasesBatchCmdlet.TextList">
            <summary>
            <para>
            <para>A list containing the text of the input documents. The list can contain a maximum
            of 25 documents. Each document must contain fewer that 5,000 bytes of UTF-8 encoded
            characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPKeyPhrasesBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.BatchDetectKeyPhrasesResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.BatchDetectKeyPhrasesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.FindCOMPSentimentCmdlet">
            <summary>
            Inspects text and returns an inference of the prevailing sentiment (<code>POSITIVE</code>,
            <code>NEUTRAL</code>, <code>MIXED</code>, or <code>NEGATIVE</code>).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPSentimentCmdlet.LanguageCode">
            <summary>
            <para>
            <para>The language of the input documents. You can specify any of the primary languages
            supported by Amazon Comprehend. All documents must be in the same language.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPSentimentCmdlet.Text">
            <summary>
            <para>
            <para>A UTF-8 text string. Each string must contain fewer that 5,000 bytes of UTF-8 encoded
            characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPSentimentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.DetectSentimentResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.DetectSentimentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPSentimentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Text parameter.
            The -PassThru parameter is deprecated, use -Select '^Text' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.FindCOMPSentimentBatchCmdlet">
            <summary>
            Inspects a batch of documents and returns an inference of the prevailing sentiment,
            <code>POSITIVE</code>, <code>NEUTRAL</code>, <code>MIXED</code>, or <code>NEGATIVE</code>,
            in each one.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPSentimentBatchCmdlet.LanguageCode">
            <summary>
            <para>
            <para>The language of the input documents. You can specify any of the primary languages
            supported by Amazon Comprehend. All documents must be in the same language.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPSentimentBatchCmdlet.TextList">
            <summary>
            <para>
            <para>A list containing the text of the input documents. The list can contain a maximum
            of 25 documents. Each document must contain fewer that 5,000 bytes of UTF-8 encoded
            characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPSentimentBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.BatchDetectSentimentResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.BatchDetectSentimentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.FindCOMPSyntaxCmdlet">
            <summary>
            Inspects text for syntax and the part of speech of words in the document. For more
            information, <a>how-syntax</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPSyntaxCmdlet.LanguageCode">
            <summary>
            <para>
            <para>The language code of the input documents. You can specify any of the following languages
            supported by Amazon Comprehend: German ("de"), English ("en"), Spanish ("es"), French
            ("fr"), Italian ("it"), or Portuguese ("pt").</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPSyntaxCmdlet.Text">
            <summary>
            <para>
            <para>A UTF-8 string. Each string must contain fewer that 5,000 bytes of UTF encoded characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPSyntaxCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SyntaxTokens'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.DetectSyntaxResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.DetectSyntaxResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPSyntaxCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Text parameter.
            The -PassThru parameter is deprecated, use -Select '^Text' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.FindCOMPSyntaxBatchCmdlet">
            <summary>
            Inspects the text of a batch of documents for the syntax and part of speech of the
            words in the document and returns information about them. For more information, see
            <a>how-syntax</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPSyntaxBatchCmdlet.LanguageCode">
            <summary>
            <para>
            <para>The language of the input documents. You can specify any of the following languages
            supported by Amazon Comprehend: German ("de"), English ("en"), Spanish ("es"), French
            ("fr"), Italian ("it"), or Portuguese ("pt"). All documents must be in the same language.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPSyntaxBatchCmdlet.TextList">
            <summary>
            <para>
            <para>A list containing the text of the input documents. The list can contain a maximum
            of 25 documents. Each document must contain fewer that 5,000 bytes of UTF-8 encoded
            characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.FindCOMPSyntaxBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.BatchDetectSyntaxResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.BatchDetectSyntaxResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassificationJobCmdlet">
            <summary>
            Gets the properties associated with a document classification job. Use this operation
            to get the status of a classification job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassificationJobCmdlet.JobId">
            <summary>
            <para>
            <para>The identifier that Amazon Comprehend generated for the job. The operation returns
            this identifier in its response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassificationJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DocumentClassificationJobProperties'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.DescribeDocumentClassificationJobResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.DescribeDocumentClassificationJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassificationJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassificationJobListCmdlet">
            <summary>
            Gets a list of the documentation classification jobs that you have submitted.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassificationJobListCmdlet.Filter_JobName">
            <summary>
            <para>
            <para>Filters on the name of the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassificationJobListCmdlet.Filter_JobStatus">
            <summary>
            <para>
            <para>Filters the list based on job status. Returns only jobs with the specified status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassificationJobListCmdlet.Filter_SubmitTimeAfter">
            <summary>
            <para>
            <para>Filters the list of jobs based on the time that the job was submitted for processing.
            Returns only jobs submitted before the specified time. Jobs are returned in descending
            order, newest to oldest.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassificationJobListCmdlet.Filter_SubmitTimeBefore">
            <summary>
            <para>
            <para>Filters the list of jobs based on the time that the job was submitted for processing.
            Returns only jobs submitted after the specified time. Jobs are returned in ascending
            order, oldest to newest.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassificationJobListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in each page. The default is 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>500</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassificationJobListCmdlet.NextToken">
            <summary>
            <para>
            <para>Identifies the next page of results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassificationJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DocumentClassificationJobPropertiesList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.ListDocumentClassificationJobsResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.ListDocumentClassificationJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassificationJobListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Filter_JobName parameter.
            The -PassThru parameter is deprecated, use -Select '^Filter_JobName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassificationJobListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassifierCmdlet">
            <summary>
            Gets the properties associated with a document classifier.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassifierCmdlet.DocumentClassifierArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that identifies the document classifier. The operation
            returns this identifier in its response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassifierCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DocumentClassifierProperties'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.DescribeDocumentClassifierResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.DescribeDocumentClassifierResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassifierCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DocumentClassifierArn parameter.
            The -PassThru parameter is deprecated, use -Select '^DocumentClassifierArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassifierListCmdlet">
            <summary>
            Gets a list of the document classifiers that you have created.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassifierListCmdlet.Filter_Status">
            <summary>
            <para>
            <para>Filters the list of classifiers based on status. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassifierListCmdlet.Filter_SubmitTimeAfter">
            <summary>
            <para>
            <para>Filters the list of classifiers based on the time that the classifier was submitted
            for processing. Returns only classifiers submitted after the specified time. Classifiers
            are returned in descending order, newest to oldest.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassifierListCmdlet.Filter_SubmitTimeBefore">
            <summary>
            <para>
            <para>Filters the list of classifiers based on the time that the classifier was submitted
            for processing. Returns only classifiers submitted before the specified time. Classifiers
            are returned in ascending order, oldest to newest.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassifierListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in each page. The default is 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>500</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassifierListCmdlet.NextToken">
            <summary>
            <para>
            <para>Identifies the next page of results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassifierListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DocumentClassifierPropertiesList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.ListDocumentClassifiersResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.ListDocumentClassifiersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDocumentClassifierListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDominantLanguageDetectionJobCmdlet">
            <summary>
            Gets the properties associated with a dominant language detection job. Use this operation
            to get the status of a detection job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDominantLanguageDetectionJobCmdlet.JobId">
            <summary>
            <para>
            <para>The identifier that Amazon Comprehend generated for the job. The operation returns
            this identifier in its response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDominantLanguageDetectionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DominantLanguageDetectionJobProperties'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.DescribeDominantLanguageDetectionJobResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.DescribeDominantLanguageDetectionJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDominantLanguageDetectionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDominantLanguageDetectionJobListCmdlet">
            <summary>
            Gets a list of the dominant language detection jobs that you have submitted.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDominantLanguageDetectionJobListCmdlet.Filter">
            <summary>
            <para>
            <para>Filters that jobs that are returned. You can filter jobs on their name, status, or
            the date and time that they were submitted. You can only set one filter at a time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDominantLanguageDetectionJobListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in each page. The default is 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>500</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDominantLanguageDetectionJobListCmdlet.NextToken">
            <summary>
            <para>
            <para>Identifies the next page of results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDominantLanguageDetectionJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DominantLanguageDetectionJobPropertiesList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.ListDominantLanguageDetectionJobsResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.ListDominantLanguageDetectionJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDominantLanguageDetectionJobListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Filter parameter.
            The -PassThru parameter is deprecated, use -Select '^Filter' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPDominantLanguageDetectionJobListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEndpointCmdlet">
            <summary>
            Gets the properties associated with a specific endpoint. Use this operation to get
            the status of an endpoint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEndpointCmdlet.EndpointArn">
            <summary>
            <para>
            <para>The Amazon Resource Number (ARN) of the endpoint being described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EndpointProperties'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.DescribeEndpointResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.DescribeEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EndpointArn parameter.
            The -PassThru parameter is deprecated, use -Select '^EndpointArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEndpointListCmdlet">
            <summary>
            Gets a list of all existing endpoints that you've created.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEndpointListCmdlet.Filter_CreationTimeAfter">
            <summary>
            <para>
            <para>Specifies a date after which the returned endpoint or endpoints were created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEndpointListCmdlet.Filter_CreationTimeBefore">
            <summary>
            <para>
            <para>Specifies a date before which the returned endpoint or endpoints were created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEndpointListCmdlet.Filter_ModelArn">
            <summary>
            <para>
            <para>The Amazon Resource Number (ARN) of the model to which the endpoint is attached.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEndpointListCmdlet.Filter_Status">
            <summary>
            <para>
            <para>Specifies the status of the endpoint being returned. Possible values are: Creating,
            Ready, Updating, Deleting, Failed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEndpointListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in each page. The default is 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>500</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEndpointListCmdlet.NextToken">
            <summary>
            <para>
            <para>Identifies the next page of results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEndpointListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EndpointPropertiesList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.ListEndpointsResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.ListEndpointsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEndpointListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntitiesDetectionJobCmdlet">
            <summary>
            Gets the properties associated with an entities detection job. Use this operation
            to get the status of a detection job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntitiesDetectionJobCmdlet.JobId">
            <summary>
            <para>
            <para>The identifier that Amazon Comprehend generated for the job. The operation returns
            this identifier in its response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntitiesDetectionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EntitiesDetectionJobProperties'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.DescribeEntitiesDetectionJobResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.DescribeEntitiesDetectionJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntitiesDetectionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntitiesDetectionJobListCmdlet">
            <summary>
            Gets a list of the entity detection jobs that you have submitted.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntitiesDetectionJobListCmdlet.Filter">
            <summary>
            <para>
            <para>Filters the jobs that are returned. You can filter jobs on their name, status, or
            the date and time that they were submitted. You can only set one filter at a time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntitiesDetectionJobListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in each page. The default is 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>500</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntitiesDetectionJobListCmdlet.NextToken">
            <summary>
            <para>
            <para>Identifies the next page of results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntitiesDetectionJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EntitiesDetectionJobPropertiesList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.ListEntitiesDetectionJobsResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.ListEntitiesDetectionJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntitiesDetectionJobListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Filter parameter.
            The -PassThru parameter is deprecated, use -Select '^Filter' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntitiesDetectionJobListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntityRecognizerCmdlet">
            <summary>
            Provides details about an entity recognizer including status, S3 buckets containing
            training data, recognizer metadata, metrics, and so on.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntityRecognizerCmdlet.EntityRecognizerArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that identifies the entity recognizer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntityRecognizerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EntityRecognizerProperties'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.DescribeEntityRecognizerResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.DescribeEntityRecognizerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntityRecognizerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EntityRecognizerArn parameter.
            The -PassThru parameter is deprecated, use -Select '^EntityRecognizerArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntityRecognizerListCmdlet">
            <summary>
            Gets a list of the properties of all entity recognizers that you created, including
            recognizers currently in training. Allows you to filter the list of recognizers based
            on criteria such as status and submission time. This call returns up to 500 entity
            recognizers in the list, with a default number of 100 recognizers in the list.
            
             
            <para>
            The results of this list are not in any particular order. Please get the list and
            sort locally if needed.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntityRecognizerListCmdlet.Filter_Status">
            <summary>
            <para>
            <para>The status of an entity recognizer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntityRecognizerListCmdlet.Filter_SubmitTimeAfter">
            <summary>
            <para>
            <para>Filters the list of entities based on the time that the list was submitted for processing.
            Returns only jobs submitted after the specified time. Jobs are returned in ascending
            order, oldest to newest.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntityRecognizerListCmdlet.Filter_SubmitTimeBefore">
            <summary>
            <para>
            <para>Filters the list of entities based on the time that the list was submitted for processing.
            Returns only jobs submitted before the specified time. Jobs are returned in descending
            order, newest to oldest.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntityRecognizerListCmdlet.MaxResult">
            <summary>
            <para>
            <para> The maximum number of results to return on each page. The default is 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>500</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntityRecognizerListCmdlet.NextToken">
            <summary>
            <para>
            <para>Identifies the next page of results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntityRecognizerListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EntityRecognizerPropertiesList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.ListEntityRecognizersResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.ListEntityRecognizersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntityRecognizerListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Filter_Status parameter.
            The -PassThru parameter is deprecated, use -Select '^Filter_Status' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPEntityRecognizerListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.GetCOMPKeyPhrasesDetectionJobCmdlet">
            <summary>
            Gets the properties associated with a key phrases detection job. Use this operation
            to get the status of a detection job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPKeyPhrasesDetectionJobCmdlet.JobId">
            <summary>
            <para>
            <para>The identifier that Amazon Comprehend generated for the job. The operation returns
            this identifier in its response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPKeyPhrasesDetectionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'KeyPhrasesDetectionJobProperties'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.DescribeKeyPhrasesDetectionJobResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.DescribeKeyPhrasesDetectionJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPKeyPhrasesDetectionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.GetCOMPKeyPhrasesDetectionJobListCmdlet">
            <summary>
            Get a list of key phrase detection jobs that you have submitted.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPKeyPhrasesDetectionJobListCmdlet.Filter">
            <summary>
            <para>
            <para>Filters the jobs that are returned. You can filter jobs on their name, status, or
            the date and time that they were submitted. You can only set one filter at a time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPKeyPhrasesDetectionJobListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in each page. The default is 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>500</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPKeyPhrasesDetectionJobListCmdlet.NextToken">
            <summary>
            <para>
            <para>Identifies the next page of results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPKeyPhrasesDetectionJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'KeyPhrasesDetectionJobPropertiesList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.ListKeyPhrasesDetectionJobsResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.ListKeyPhrasesDetectionJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPKeyPhrasesDetectionJobListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Filter parameter.
            The -PassThru parameter is deprecated, use -Select '^Filter' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPKeyPhrasesDetectionJobListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.GetCOMPResourceTagCmdlet">
            <summary>
            Lists all tags associated with a given Amazon Comprehend resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the given Amazon Comprehend resource you are querying.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.GetCOMPSentimentDetectionJobCmdlet">
            <summary>
            Gets the properties associated with a sentiment detection job. Use this operation
            to get the status of a detection job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPSentimentDetectionJobCmdlet.JobId">
            <summary>
            <para>
            <para>The identifier that Amazon Comprehend generated for the job. The operation returns
            this identifier in its response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPSentimentDetectionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SentimentDetectionJobProperties'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.DescribeSentimentDetectionJobResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.DescribeSentimentDetectionJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPSentimentDetectionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.GetCOMPSentimentDetectionJobListCmdlet">
            <summary>
            Gets a list of sentiment detection jobs that you have submitted.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPSentimentDetectionJobListCmdlet.Filter">
            <summary>
            <para>
            <para>Filters the jobs that are returned. You can filter jobs on their name, status, or
            the date and time that they were submitted. You can only set one filter at a time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPSentimentDetectionJobListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in each page. The default is 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>500</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPSentimentDetectionJobListCmdlet.NextToken">
            <summary>
            <para>
            <para>Identifies the next page of results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPSentimentDetectionJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SentimentDetectionJobPropertiesList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.ListSentimentDetectionJobsResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.ListSentimentDetectionJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPSentimentDetectionJobListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Filter parameter.
            The -PassThru parameter is deprecated, use -Select '^Filter' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPSentimentDetectionJobListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.GetCOMPTopicsDetectionJobCmdlet">
            <summary>
            Gets the properties associated with a topic detection job. Use this operation to get
            the status of a detection job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPTopicsDetectionJobCmdlet.JobId">
            <summary>
            <para>
            <para>The identifier assigned by the user to the detection job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPTopicsDetectionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TopicsDetectionJobProperties'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.DescribeTopicsDetectionJobResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.DescribeTopicsDetectionJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPTopicsDetectionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.GetCOMPTopicsDetectionJobListCmdlet">
            <summary>
            Gets a list of the topic detection jobs that you have submitted.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPTopicsDetectionJobListCmdlet.Filter">
            <summary>
            <para>
            <para>Filters the jobs that are returned. Jobs can be filtered on their name, status, or
            the date and time that they were submitted. You can set only one filter at a time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPTopicsDetectionJobListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in each page. The default is 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>500</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPTopicsDetectionJobListCmdlet.NextToken">
            <summary>
            <para>
            <para>Identifies the next page of results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPTopicsDetectionJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TopicsDetectionJobPropertiesList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.ListTopicsDetectionJobsResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.ListTopicsDetectionJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPTopicsDetectionJobListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Filter parameter.
            The -PassThru parameter is deprecated, use -Select '^Filter' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.GetCOMPTopicsDetectionJobListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.InvokeCOMPDocumentClassificationCmdlet">
            <summary>
            Creates a new document classification request to analyze a single document in real-time,
            using a previously created and trained custom model and an endpoint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.InvokeCOMPDocumentClassificationCmdlet.EndpointArn">
            <summary>
            <para>
            <para>The Amazon Resource Number (ARN) of the endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.InvokeCOMPDocumentClassificationCmdlet.Text">
            <summary>
            <para>
            <para>The document text to be analyzed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.InvokeCOMPDocumentClassificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Classes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.ClassifyDocumentResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.ClassifyDocumentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.InvokeCOMPDocumentClassificationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Text parameter.
            The -PassThru parameter is deprecated, use -Select '^Text' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.InvokeCOMPDocumentClassificationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.NewCOMPDocumentClassifierCmdlet">
            <summary>
            Creates a new document classifier that you can use to categorize documents. To create
            a classifier you provide a set of training documents that labeled with the categories
            that you want to use. After the classifier is trained you can use it to categorize
            a set of labeled documents into the categories. For more information, see <a>how-document-classification</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPDocumentClassifierCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique identifier for the request. If you don't set the client request token, Amazon
            Comprehend generates one.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPDocumentClassifierCmdlet.DataAccessRoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the AWS Identity and Management (IAM) role that
            grants Amazon Comprehend read access to your input data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPDocumentClassifierCmdlet.DocumentClassifierName">
            <summary>
            <para>
            <para>The name of the document classifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPDocumentClassifierCmdlet.OutputDataConfig_KmsKeyId">
            <summary>
            <para>
            <para>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt
            the output results from an analysis job. The KmsKeyId can be one of the following
            formats:</para><ul><li><para>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code></para></li><li><para>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code></para></li><li><para>KMS Key Alias: <code>"alias/ExampleAlias"</code></para></li><li><para>ARN of a KMS Key Alias: <code>"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias"</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPDocumentClassifierCmdlet.InputDataConfig_LabelDelimiter">
            <summary>
            <para>
            <para>Indicates the delimiter used to separate each label for training a multi-label classifier.
            The default delimiter between labels is a pipe (|). You can use a different character
            as a delimiter (if it's an allowed character) by specifying it under Delimiter for
            labels. If the training documents use a delimiter other than the default or the delimiter
            you specify, the labels on that line will be combined to make a single unique label,
            such as LABELLABELLABEL.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPDocumentClassifierCmdlet.LanguageCode">
            <summary>
            <para>
            <para>The language of the input documents. You can specify any of the following languages
            supported by Amazon Comprehend: German ("de"), English ("en"), Spanish ("es"), French
            ("fr"), Italian ("it"), or Portuguese ("pt"). All documents must be in the same language.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPDocumentClassifierCmdlet.Mode">
            <summary>
            <para>
            <para>Indicates the mode in which the classifier will be trained. The classifier can be
            trained in multi-class mode, which identifies one and only one class for each document,
            or multi-label mode, which identifies one or more labels for each document. In multi-label
            mode, multiple labels for an individual document are separated by a delimiter. The
            default delimiter between labels is a pipe (|).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPDocumentClassifierCmdlet.InputDataConfig_S3Uri">
            <summary>
            <para>
            <para>The Amazon S3 URI for the input data. The S3 bucket must be in the same region as
            the API endpoint that you are calling. The URI can point to a single input file or
            it can provide the prefix for a collection of input files.</para><para>For example, if you use the URI <code>S3://bucketName/prefix</code>, if the prefix
            is a single file, Amazon Comprehend uses that file as input. If more than one file
            begins with the prefix, Amazon Comprehend uses all of them as input.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPDocumentClassifierCmdlet.OutputDataConfig_S3Uri">
            <summary>
            <para>
            <para>When you use the <code>OutputDataConfig</code> object while creating a custom classifier,
            you specify the Amazon S3 location where you want to write the confusion matrix. The
            URI must be in the same region as the API endpoint that you are calling. The location
            is used as the prefix for the actual location of this output file.</para><para>When the custom classifier job is finished, the service creates the output file in
            a directory specific to the job. The <code>S3Uri</code> field contains the location
            of the output file, called <code>output.tar.gz</code>. It is a compressed archive
            that contains the confusion matrix.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPDocumentClassifierCmdlet.VpcConfig_SecurityGroupId">
            <summary>
            <para>
            <para>The ID number for a security group on an instance of your private VPC. Security groups
            on your VPC function serve as a virtual firewall to control inbound and outbound traffic
            and provides security for the resources that you’ll be accessing on the VPC. This
            ID number is preceded by "sg-", for instance: "sg-03b388029b0a285ea". For more information,
            see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html">Security
            Groups for your VPC</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPDocumentClassifierCmdlet.VpcConfig_Subnet">
            <summary>
            <para>
            <para>The ID for each subnet being used in your private VPC. This subnet is a subset of
            the a range of IPv4 addresses used by the VPC and is specific to a given availability
            zone in the VPC’s region. This ID number is preceded by "subnet-", for instance: "subnet-04ccf456919e69055".
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">VPCs
            and Subnets</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPDocumentClassifierCmdlet.Tag">
            <summary>
            <para>
            <para>Tags to be associated with the document classifier being created. A tag is a key-value
            pair that adds as a metadata to a resource used by Amazon Comprehend. For example,
            a tag with "Sales" as the key might be added to a resource to indicate its use by
            the sales department. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPDocumentClassifierCmdlet.VolumeKmsKeyId">
            <summary>
            <para>
            <para>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt
            data on the storage volume attached to the ML compute instance(s) that process the
            analysis job. The VolumeKmsKeyId can be either of the following formats:</para><ul><li><para>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code></para></li><li><para>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPDocumentClassifierCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DocumentClassifierArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.CreateDocumentClassifierResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.CreateDocumentClassifierResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPDocumentClassifierCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DocumentClassifierName parameter.
            The -PassThru parameter is deprecated, use -Select '^DocumentClassifierName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPDocumentClassifierCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEndpointCmdlet">
            <summary>
            Creates a model-specific endpoint for synchronous inference for a previously trained
            custom model
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEndpointCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>An idempotency token provided by the customer. If this token matches a previous endpoint
            creation request, Amazon Comprehend will not return a <code>ResourceInUseException</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEndpointCmdlet.DesiredInferenceUnit">
            <summary>
            <para>
            <para> The desired number of inference units to be used by the model using this endpoint.
            Each inference unit represents of a throughput of 100 characters per second.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEndpointCmdlet.EndpointName">
            <summary>
            <para>
            <para>This is the descriptive suffix that becomes part of the <code>EndpointArn</code> used
            for all subsequent requests to this resource. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEndpointCmdlet.ModelArn">
            <summary>
            <para>
            <para>The Amazon Resource Number (ARN) of the model to which the endpoint will be attached.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEndpointCmdlet.Tag">
            <summary>
            <para>
            <para>Tags associated with the endpoint being created. A tag is a key-value pair that adds
            metadata to the endpoint. For example, a tag with "Sales" as the key might be added
            to an endpoint to indicate its use by the sales department. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EndpointArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.CreateEndpointResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.CreateEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EndpointName parameter.
            The -PassThru parameter is deprecated, use -Select '^EndpointName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEntityRecognizerCmdlet">
            <summary>
            Creates an entity recognizer using submitted files. After your <code>CreateEntityRecognizer</code>
            request is submitted, you can check job status using the API.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEntityRecognizerCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para> A unique identifier for the request. If you don't set the client request token, Amazon
            Comprehend generates one.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEntityRecognizerCmdlet.DataAccessRoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the AWS Identity and Management (IAM) role that
            grants Amazon Comprehend read access to your input data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEntityRecognizerCmdlet.InputDataConfig_EntityType">
            <summary>
            <para>
            <para>The entity types in the input data for an entity recognizer. A maximum of 12 entity
            types can be used at one time to train an entity recognizer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEntityRecognizerCmdlet.LanguageCode">
            <summary>
            <para>
            <para> The language of the input documents. All documents must be in the same language.
            Only English ("en") is currently supported. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEntityRecognizerCmdlet.RecognizerName">
            <summary>
            <para>
            <para>The name given to the newly created recognizer. Recognizer names can be a maximum
            of 256 characters. Alphanumeric characters, hyphens (-) and underscores (_) are allowed.
            The name must be unique in the account/region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEntityRecognizerCmdlet.Annotations_S3Uri">
            <summary>
            <para>
            <para> Specifies the Amazon S3 location where the annotations for an entity recognizer are
            located. The URI must be in the same region as the API endpoint that you are calling.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEntityRecognizerCmdlet.Documents_S3Uri">
            <summary>
            <para>
            <para> Specifies the Amazon S3 location where the training documents for an entity recognizer
            are located. The URI must be in the same region as the API endpoint that you are calling.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEntityRecognizerCmdlet.EntityList_S3Uri">
            <summary>
            <para>
            <para>Specifies the Amazon S3 location where the entity list is located. The URI must be
            in the same region as the API endpoint that you are calling.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEntityRecognizerCmdlet.VpcConfig_SecurityGroupId">
            <summary>
            <para>
            <para>The ID number for a security group on an instance of your private VPC. Security groups
            on your VPC function serve as a virtual firewall to control inbound and outbound traffic
            and provides security for the resources that you’ll be accessing on the VPC. This
            ID number is preceded by "sg-", for instance: "sg-03b388029b0a285ea". For more information,
            see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html">Security
            Groups for your VPC</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEntityRecognizerCmdlet.VpcConfig_Subnet">
            <summary>
            <para>
            <para>The ID for each subnet being used in your private VPC. This subnet is a subset of
            the a range of IPv4 addresses used by the VPC and is specific to a given availability
            zone in the VPC’s region. This ID number is preceded by "subnet-", for instance: "subnet-04ccf456919e69055".
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">VPCs
            and Subnets</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEntityRecognizerCmdlet.Tag">
            <summary>
            <para>
            <para>Tags to be associated with the entity recognizer being created. A tag is a key-value
            pair that adds as a metadata to a resource used by Amazon Comprehend. For example,
            a tag with "Sales" as the key might be added to a resource to indicate its use by
            the sales department. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEntityRecognizerCmdlet.VolumeKmsKeyId">
            <summary>
            <para>
            <para>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt
            data on the storage volume attached to the ML compute instance(s) that process the
            analysis job. The VolumeKmsKeyId can be either of the following formats:</para><ul><li><para>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code></para></li><li><para>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEntityRecognizerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EntityRecognizerArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.CreateEntityRecognizerResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.CreateEntityRecognizerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEntityRecognizerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RecognizerName parameter.
            The -PassThru parameter is deprecated, use -Select '^RecognizerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.NewCOMPEntityRecognizerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPDocumentClassifierCmdlet">
            <summary>
            Deletes a previously created document classifier
            
             
            <para>
            Only those classifiers that are in terminated states (IN_ERROR, TRAINED) will be deleted.
            If an active inference job is using the model, a <code>ResourceInUseException</code>
            will be returned.
            </para><para>
            This is an asynchronous action that puts the classifier into a DELETING state, and
            it is then removed by a background job. Once removed, the classifier disappears from
            your account and is no longer available for use. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPDocumentClassifierCmdlet.DocumentClassifierArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that identifies the document classifier. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPDocumentClassifierCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.DeleteDocumentClassifierResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPDocumentClassifierCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DocumentClassifierArn parameter.
            The -PassThru parameter is deprecated, use -Select '^DocumentClassifierArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPDocumentClassifierCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPEndpointCmdlet">
            <summary>
            Deletes a model-specific endpoint for a previously-trained custom model. All endpoints
            must be deleted in order for the model to be deleted.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPEndpointCmdlet.EndpointArn">
            <summary>
            <para>
            <para>The Amazon Resource Number (ARN) of the endpoint being deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.DeleteEndpointResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EndpointArn parameter.
            The -PassThru parameter is deprecated, use -Select '^EndpointArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPEntityRecognizerCmdlet">
            <summary>
            Deletes an entity recognizer.
            
             
            <para>
            Only those recognizers that are in terminated states (IN_ERROR, TRAINED) will be deleted.
            If an active inference job is using the model, a <code>ResourceInUseException</code>
            will be returned.
            </para><para>
            This is an asynchronous action that puts the recognizer into a DELETING state, and
            it is then removed by a background job. Once removed, the recognizer disappears from
            your account and is no longer available for use. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPEntityRecognizerCmdlet.EntityRecognizerArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that identifies the entity recognizer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPEntityRecognizerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.DeleteEntityRecognizerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPEntityRecognizerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EntityRecognizerArn parameter.
            The -PassThru parameter is deprecated, use -Select '^EntityRecognizerArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPEntityRecognizerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPResourceTagCmdlet">
            <summary>
            Removes a specific tag associated with an Amazon Comprehend resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para> The Amazon Resource Name (ARN) of the given Amazon Comprehend resource from which
            you want to remove the tags. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The initial part of a key-value pair that forms a tag being removed from a given resource.
            For example, a tag with "Sales" as the key might be added to a resource to indicate
            its use by the sales department. Keys must be unique and cannot be duplicated for
            a particular resource. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.RemoveCOMPResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDocumentClassificationJobCmdlet">
            <summary>
            Starts an asynchronous document classification job. Use the operation to track the
            progress of the job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDocumentClassificationJobCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique identifier for the request. If you do not set the client request token, Amazon
            Comprehend generates one.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDocumentClassificationJobCmdlet.DataAccessRoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role
            that grants Amazon Comprehend read access to your input data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDocumentClassificationJobCmdlet.DocumentClassifierArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the document classifier to use to process the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDocumentClassificationJobCmdlet.InputDataConfig">
            <summary>
            <para>
            <para>Specifies the format and location of the input data for the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDocumentClassificationJobCmdlet.JobName">
            <summary>
            <para>
            <para>The identifier of the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDocumentClassificationJobCmdlet.OutputDataConfig">
            <summary>
            <para>
            <para>Specifies where to send the output files.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDocumentClassificationJobCmdlet.VpcConfig_SecurityGroupId">
            <summary>
            <para>
            <para>The ID number for a security group on an instance of your private VPC. Security groups
            on your VPC function serve as a virtual firewall to control inbound and outbound traffic
            and provides security for the resources that you’ll be accessing on the VPC. This
            ID number is preceded by "sg-", for instance: "sg-03b388029b0a285ea". For more information,
            see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html">Security
            Groups for your VPC</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDocumentClassificationJobCmdlet.VpcConfig_Subnet">
            <summary>
            <para>
            <para>The ID for each subnet being used in your private VPC. This subnet is a subset of
            the a range of IPv4 addresses used by the VPC and is specific to a given availability
            zone in the VPC’s region. This ID number is preceded by "subnet-", for instance: "subnet-04ccf456919e69055".
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">VPCs
            and Subnets</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDocumentClassificationJobCmdlet.VolumeKmsKeyId">
            <summary>
            <para>
            <para>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt
            data on the storage volume attached to the ML compute instance(s) that process the
            analysis job. The VolumeKmsKeyId can be either of the following formats:</para><ul><li><para>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code></para></li><li><para>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDocumentClassificationJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.StartDocumentClassificationJobResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.StartDocumentClassificationJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDocumentClassificationJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DocumentClassifierArn parameter.
            The -PassThru parameter is deprecated, use -Select '^DocumentClassifierArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDocumentClassificationJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDominantLanguageDetectionJobCmdlet">
            <summary>
            Starts an asynchronous dominant language detection job for a collection of documents.
            Use the operation to track the status of a job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDominantLanguageDetectionJobCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique identifier for the request. If you do not set the client request token, Amazon
            Comprehend generates one.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDominantLanguageDetectionJobCmdlet.DataAccessRoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role
            that grants Amazon Comprehend read access to your input data. For more information,
            see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions">https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDominantLanguageDetectionJobCmdlet.InputDataConfig">
            <summary>
            <para>
            <para>Specifies the format and location of the input data for the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDominantLanguageDetectionJobCmdlet.JobName">
            <summary>
            <para>
            <para>An identifier for the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDominantLanguageDetectionJobCmdlet.OutputDataConfig">
            <summary>
            <para>
            <para>Specifies where to send the output files.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDominantLanguageDetectionJobCmdlet.VpcConfig_SecurityGroupId">
            <summary>
            <para>
            <para>The ID number for a security group on an instance of your private VPC. Security groups
            on your VPC function serve as a virtual firewall to control inbound and outbound traffic
            and provides security for the resources that you’ll be accessing on the VPC. This
            ID number is preceded by "sg-", for instance: "sg-03b388029b0a285ea". For more information,
            see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html">Security
            Groups for your VPC</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDominantLanguageDetectionJobCmdlet.VpcConfig_Subnet">
            <summary>
            <para>
            <para>The ID for each subnet being used in your private VPC. This subnet is a subset of
            the a range of IPv4 addresses used by the VPC and is specific to a given availability
            zone in the VPC’s region. This ID number is preceded by "subnet-", for instance: "subnet-04ccf456919e69055".
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">VPCs
            and Subnets</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDominantLanguageDetectionJobCmdlet.VolumeKmsKeyId">
            <summary>
            <para>
            <para>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt
            data on the storage volume attached to the ML compute instance(s) that process the
            analysis job. The VolumeKmsKeyId can be either of the following formats:</para><ul><li><para>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code></para></li><li><para>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDominantLanguageDetectionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.StartDominantLanguageDetectionJobResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.StartDominantLanguageDetectionJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDominantLanguageDetectionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InputDataConfig parameter.
            The -PassThru parameter is deprecated, use -Select '^InputDataConfig' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPDominantLanguageDetectionJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.StartCOMPEntitiesDetectionJobCmdlet">
            <summary>
            Starts an asynchronous entity detection job for a collection of documents. Use the
            operation to track the status of a job.
            
             
            <para>
            This API can be used for either standard entity detection or custom entity recognition.
            In order to be used for custom entity recognition, the optional <code>EntityRecognizerArn</code>
            must be used in order to provide access to the recognizer being used to detect the
            custom entity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPEntitiesDetectionJobCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique identifier for the request. If you don't set the client request token, Amazon
            Comprehend generates one.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPEntitiesDetectionJobCmdlet.DataAccessRoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role
            that grants Amazon Comprehend read access to your input data. For more information,
            see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions">https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPEntitiesDetectionJobCmdlet.EntityRecognizerArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that identifies the specific entity recognizer to be
            used by the <code>StartEntitiesDetectionJob</code>. This ARN is optional and is only
            used for a custom entity recognition job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPEntitiesDetectionJobCmdlet.InputDataConfig">
            <summary>
            <para>
            <para>Specifies the format and location of the input data for the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPEntitiesDetectionJobCmdlet.JobName">
            <summary>
            <para>
            <para>The identifier of the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPEntitiesDetectionJobCmdlet.LanguageCode">
            <summary>
            <para>
            <para>The language of the input documents. All documents must be in the same language. You
            can specify any of the languages supported by Amazon Comprehend. If custom entities
            recognition is used, this parameter is ignored and the language used for training
            the model is used instead.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPEntitiesDetectionJobCmdlet.OutputDataConfig">
            <summary>
            <para>
            <para>Specifies where to send the output files.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPEntitiesDetectionJobCmdlet.VpcConfig_SecurityGroupId">
            <summary>
            <para>
            <para>The ID number for a security group on an instance of your private VPC. Security groups
            on your VPC function serve as a virtual firewall to control inbound and outbound traffic
            and provides security for the resources that you’ll be accessing on the VPC. This
            ID number is preceded by "sg-", for instance: "sg-03b388029b0a285ea". For more information,
            see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html">Security
            Groups for your VPC</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPEntitiesDetectionJobCmdlet.VpcConfig_Subnet">
            <summary>
            <para>
            <para>The ID for each subnet being used in your private VPC. This subnet is a subset of
            the a range of IPv4 addresses used by the VPC and is specific to a given availability
            zone in the VPC’s region. This ID number is preceded by "subnet-", for instance: "subnet-04ccf456919e69055".
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">VPCs
            and Subnets</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPEntitiesDetectionJobCmdlet.VolumeKmsKeyId">
            <summary>
            <para>
            <para>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt
            data on the storage volume attached to the ML compute instance(s) that process the
            analysis job. The VolumeKmsKeyId can be either of the following formats:</para><ul><li><para>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code></para></li><li><para>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPEntitiesDetectionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.StartEntitiesDetectionJobResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.StartEntitiesDetectionJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPEntitiesDetectionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InputDataConfig parameter.
            The -PassThru parameter is deprecated, use -Select '^InputDataConfig' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPEntitiesDetectionJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.StartCOMPKeyPhrasesDetectionJobCmdlet">
            <summary>
            Starts an asynchronous key phrase detection job for a collection of documents. Use
            the operation to track the status of a job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPKeyPhrasesDetectionJobCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique identifier for the request. If you don't set the client request token, Amazon
            Comprehend generates one.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPKeyPhrasesDetectionJobCmdlet.DataAccessRoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role
            that grants Amazon Comprehend read access to your input data. For more information,
            see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions">https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPKeyPhrasesDetectionJobCmdlet.InputDataConfig">
            <summary>
            <para>
            <para>Specifies the format and location of the input data for the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPKeyPhrasesDetectionJobCmdlet.JobName">
            <summary>
            <para>
            <para>The identifier of the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPKeyPhrasesDetectionJobCmdlet.LanguageCode">
            <summary>
            <para>
            <para>The language of the input documents. You can specify any of the primary languages
            supported by Amazon Comprehend. All documents must be in the same language.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPKeyPhrasesDetectionJobCmdlet.OutputDataConfig">
            <summary>
            <para>
            <para>Specifies where to send the output files.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPKeyPhrasesDetectionJobCmdlet.VpcConfig_SecurityGroupId">
            <summary>
            <para>
            <para>The ID number for a security group on an instance of your private VPC. Security groups
            on your VPC function serve as a virtual firewall to control inbound and outbound traffic
            and provides security for the resources that you’ll be accessing on the VPC. This
            ID number is preceded by "sg-", for instance: "sg-03b388029b0a285ea". For more information,
            see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html">Security
            Groups for your VPC</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPKeyPhrasesDetectionJobCmdlet.VpcConfig_Subnet">
            <summary>
            <para>
            <para>The ID for each subnet being used in your private VPC. This subnet is a subset of
            the a range of IPv4 addresses used by the VPC and is specific to a given availability
            zone in the VPC’s region. This ID number is preceded by "subnet-", for instance: "subnet-04ccf456919e69055".
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">VPCs
            and Subnets</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPKeyPhrasesDetectionJobCmdlet.VolumeKmsKeyId">
            <summary>
            <para>
            <para>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt
            data on the storage volume attached to the ML compute instance(s) that process the
            analysis job. The VolumeKmsKeyId can be either of the following formats:</para><ul><li><para>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code></para></li><li><para>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPKeyPhrasesDetectionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.StartKeyPhrasesDetectionJobResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.StartKeyPhrasesDetectionJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPKeyPhrasesDetectionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InputDataConfig parameter.
            The -PassThru parameter is deprecated, use -Select '^InputDataConfig' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPKeyPhrasesDetectionJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.StartCOMPSentimentDetectionJobCmdlet">
            <summary>
            Starts an asynchronous sentiment detection job for a collection of documents. use
            the operation to track the status of a job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPSentimentDetectionJobCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique identifier for the request. If you don't set the client request token, Amazon
            Comprehend generates one.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPSentimentDetectionJobCmdlet.DataAccessRoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role
            that grants Amazon Comprehend read access to your input data. For more information,
            see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions">https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPSentimentDetectionJobCmdlet.InputDataConfig">
            <summary>
            <para>
            <para>Specifies the format and location of the input data for the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPSentimentDetectionJobCmdlet.JobName">
            <summary>
            <para>
            <para>The identifier of the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPSentimentDetectionJobCmdlet.LanguageCode">
            <summary>
            <para>
            <para>The language of the input documents. You can specify any of the primary languages
            supported by Amazon Comprehend. All documents must be in the same language.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPSentimentDetectionJobCmdlet.OutputDataConfig">
            <summary>
            <para>
            <para>Specifies where to send the output files. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPSentimentDetectionJobCmdlet.VpcConfig_SecurityGroupId">
            <summary>
            <para>
            <para>The ID number for a security group on an instance of your private VPC. Security groups
            on your VPC function serve as a virtual firewall to control inbound and outbound traffic
            and provides security for the resources that you’ll be accessing on the VPC. This
            ID number is preceded by "sg-", for instance: "sg-03b388029b0a285ea". For more information,
            see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html">Security
            Groups for your VPC</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPSentimentDetectionJobCmdlet.VpcConfig_Subnet">
            <summary>
            <para>
            <para>The ID for each subnet being used in your private VPC. This subnet is a subset of
            the a range of IPv4 addresses used by the VPC and is specific to a given availability
            zone in the VPC’s region. This ID number is preceded by "subnet-", for instance: "subnet-04ccf456919e69055".
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">VPCs
            and Subnets</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPSentimentDetectionJobCmdlet.VolumeKmsKeyId">
            <summary>
            <para>
            <para>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt
            data on the storage volume attached to the ML compute instance(s) that process the
            analysis job. The VolumeKmsKeyId can be either of the following formats:</para><ul><li><para>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code></para></li><li><para>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPSentimentDetectionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.StartSentimentDetectionJobResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.StartSentimentDetectionJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPSentimentDetectionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InputDataConfig parameter.
            The -PassThru parameter is deprecated, use -Select '^InputDataConfig' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPSentimentDetectionJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.StartCOMPTopicsDetectionJobCmdlet">
            <summary>
            Starts an asynchronous topic detection job. Use the <code>DescribeTopicDetectionJob</code>
            operation to track the status of a job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPTopicsDetectionJobCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique identifier for the request. If you do not set the client request token, Amazon
            Comprehend generates one.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPTopicsDetectionJobCmdlet.DataAccessRoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role
            that grants Amazon Comprehend read access to your input data. For more information,
            see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions">https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPTopicsDetectionJobCmdlet.InputDataConfig">
            <summary>
            <para>
            <para>Specifies the format and location of the input data for the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPTopicsDetectionJobCmdlet.JobName">
            <summary>
            <para>
            <para>The identifier of the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPTopicsDetectionJobCmdlet.NumberOfTopic">
            <summary>
            <para>
            <para>The number of topics to detect.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPTopicsDetectionJobCmdlet.OutputDataConfig">
            <summary>
            <para>
            <para>Specifies where to send the output files. The output is a compressed archive with
            two files, <code>topic-terms.csv</code> that lists the terms associated with each
            topic, and <code>doc-topics.csv</code> that lists the documents associated with each
            topic</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPTopicsDetectionJobCmdlet.VpcConfig_SecurityGroupId">
            <summary>
            <para>
            <para>The ID number for a security group on an instance of your private VPC. Security groups
            on your VPC function serve as a virtual firewall to control inbound and outbound traffic
            and provides security for the resources that you’ll be accessing on the VPC. This
            ID number is preceded by "sg-", for instance: "sg-03b388029b0a285ea". For more information,
            see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html">Security
            Groups for your VPC</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPTopicsDetectionJobCmdlet.VpcConfig_Subnet">
            <summary>
            <para>
            <para>The ID for each subnet being used in your private VPC. This subnet is a subset of
            the a range of IPv4 addresses used by the VPC and is specific to a given availability
            zone in the VPC’s region. This ID number is preceded by "subnet-", for instance: "subnet-04ccf456919e69055".
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">VPCs
            and Subnets</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPTopicsDetectionJobCmdlet.VolumeKmsKeyId">
            <summary>
            <para>
            <para>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt
            data on the storage volume attached to the ML compute instance(s) that process the
            analysis job. The VolumeKmsKeyId can be either of the following formats:</para><ul><li><para>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code></para></li><li><para>Amazon Resource Name (ARN) of a KMS Key: <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPTopicsDetectionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.StartTopicsDetectionJobResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.StartTopicsDetectionJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPTopicsDetectionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InputDataConfig parameter.
            The -PassThru parameter is deprecated, use -Select '^InputDataConfig' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StartCOMPTopicsDetectionJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.StopCOMPDominantLanguageDetectionJobCmdlet">
            <summary>
            Stops a dominant language detection job in progress.
            
             
            <para>
            If the job state is <code>IN_PROGRESS</code> the job is marked for termination and
            put into the <code>STOP_REQUESTED</code> state. If the job completes before it can
            be stopped, it is put into the <code>COMPLETED</code> state; otherwise the job is
            stopped and put into the <code>STOPPED</code> state.
            </para><para>
            If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you
            call the <code>StopDominantLanguageDetectionJob</code> operation, the operation returns
            a 400 Internal Request Exception. 
            </para><para>
            When a job is stopped, any documents already processed are written to the output location.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPDominantLanguageDetectionJobCmdlet.JobId">
            <summary>
            <para>
            <para>The identifier of the dominant language detection job to stop.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPDominantLanguageDetectionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.StopDominantLanguageDetectionJobResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.StopDominantLanguageDetectionJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPDominantLanguageDetectionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPDominantLanguageDetectionJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.StopCOMPEntitiesDetectionJobCmdlet">
            <summary>
            Stops an entities detection job in progress.
            
             
            <para>
            If the job state is <code>IN_PROGRESS</code> the job is marked for termination and
            put into the <code>STOP_REQUESTED</code> state. If the job completes before it can
            be stopped, it is put into the <code>COMPLETED</code> state; otherwise the job is
            stopped and put into the <code>STOPPED</code> state.
            </para><para>
            If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you
            call the <code>StopDominantLanguageDetectionJob</code> operation, the operation returns
            a 400 Internal Request Exception. 
            </para><para>
            When a job is stopped, any documents already processed are written to the output location.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPEntitiesDetectionJobCmdlet.JobId">
            <summary>
            <para>
            <para>The identifier of the entities detection job to stop.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPEntitiesDetectionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.StopEntitiesDetectionJobResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.StopEntitiesDetectionJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPEntitiesDetectionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPEntitiesDetectionJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.StopCOMPKeyPhrasesDetectionJobCmdlet">
            <summary>
            Stops a key phrases detection job in progress.
            
             
            <para>
            If the job state is <code>IN_PROGRESS</code> the job is marked for termination and
            put into the <code>STOP_REQUESTED</code> state. If the job completes before it can
            be stopped, it is put into the <code>COMPLETED</code> state; otherwise the job is
            stopped and put into the <code>STOPPED</code> state.
            </para><para>
            If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you
            call the <code>StopDominantLanguageDetectionJob</code> operation, the operation returns
            a 400 Internal Request Exception. 
            </para><para>
            When a job is stopped, any documents already processed are written to the output location.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPKeyPhrasesDetectionJobCmdlet.JobId">
            <summary>
            <para>
            <para>The identifier of the key phrases detection job to stop.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPKeyPhrasesDetectionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.StopKeyPhrasesDetectionJobResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.StopKeyPhrasesDetectionJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPKeyPhrasesDetectionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPKeyPhrasesDetectionJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.StopCOMPSentimentDetectionJobCmdlet">
            <summary>
            Stops a sentiment detection job in progress.
            
             
            <para>
            If the job state is <code>IN_PROGRESS</code> the job is marked for termination and
            put into the <code>STOP_REQUESTED</code> state. If the job completes before it can
            be stopped, it is put into the <code>COMPLETED</code> state; otherwise the job is
            be stopped and put into the <code>STOPPED</code> state.
            </para><para>
            If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you
            call the <code>StopDominantLanguageDetectionJob</code> operation, the operation returns
            a 400 Internal Request Exception. 
            </para><para>
            When a job is stopped, any documents already processed are written to the output location.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPSentimentDetectionJobCmdlet.JobId">
            <summary>
            <para>
            <para>The identifier of the sentiment detection job to stop.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPSentimentDetectionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.StopSentimentDetectionJobResponse).
            Specifying the name of a property of type Amazon.Comprehend.Model.StopSentimentDetectionJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPSentimentDetectionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPSentimentDetectionJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.StopCOMPTrainingDocumentClassifierCmdlet">
            <summary>
            Stops a document classifier training job while in progress.
            
             
            <para>
            If the training job state is <code>TRAINING</code>, the job is marked for termination
            and put into the <code>STOP_REQUESTED</code> state. If the training job completes
            before it can be stopped, it is put into the <code>TRAINED</code>; otherwise the training
            job is stopped and put into the <code>STOPPED</code> state and the service sends back
            an HTTP 200 response with an empty HTTP body. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPTrainingDocumentClassifierCmdlet.DocumentClassifierArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that identifies the document classifier currently being
            trained.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPTrainingDocumentClassifierCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.StopTrainingDocumentClassifierResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPTrainingDocumentClassifierCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DocumentClassifierArn parameter.
            The -PassThru parameter is deprecated, use -Select '^DocumentClassifierArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPTrainingDocumentClassifierCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.StopCOMPTrainingEntityRecognizerCmdlet">
            <summary>
            Stops an entity recognizer training job while in progress.
            
             
            <para>
            If the training job state is <code>TRAINING</code>, the job is marked for termination
            and put into the <code>STOP_REQUESTED</code> state. If the training job completes
            before it can be stopped, it is put into the <code>TRAINED</code>; otherwise the training
            job is stopped and putted into the <code>STOPPED</code> state and the service sends
            back an HTTP 200 response with an empty HTTP body.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPTrainingEntityRecognizerCmdlet.EntityRecognizerArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that identifies the entity recognizer currently being
            trained.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPTrainingEntityRecognizerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.StopTrainingEntityRecognizerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPTrainingEntityRecognizerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EntityRecognizerArn parameter.
            The -PassThru parameter is deprecated, use -Select '^EntityRecognizerArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.StopCOMPTrainingEntityRecognizerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.COMP.UpdateCOMPEndpointCmdlet">
            <summary>
            Updates information about the specified endpoint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.UpdateCOMPEndpointCmdlet.DesiredInferenceUnit">
            <summary>
            <para>
            <para> The desired number of inference units to be used by the model using this endpoint.
            Each inference unit represents of a throughput of 100 characters per second.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.UpdateCOMPEndpointCmdlet.EndpointArn">
            <summary>
            <para>
            <para>The Amazon Resource Number (ARN) of the endpoint being updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.UpdateCOMPEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Comprehend.Model.UpdateEndpointResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.UpdateCOMPEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EndpointArn parameter.
            The -PassThru parameter is deprecated, use -Select '^EndpointArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.COMP.UpdateCOMPEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
