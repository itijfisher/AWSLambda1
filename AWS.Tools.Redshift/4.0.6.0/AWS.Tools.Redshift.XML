<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.Redshift</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.ApproveRSClusterSecurityGroupIngressCmdlet">
            <summary>
            Adds an inbound (ingress) rule to an Amazon Redshift security group. Depending on
            whether the application accessing your cluster is running on the Internet or an Amazon
            EC2 instance, you can authorize inbound access to either a Classless Interdomain Routing
            (CIDR)/Internet Protocol (IP) range or to an Amazon EC2 security group. You can add
            as many as 20 ingress rules to an Amazon Redshift security group.
            
             
            <para>
            If you authorize access to an Amazon EC2 security group, specify <i>EC2SecurityGroupName</i>
            and <i>EC2SecurityGroupOwnerId</i>. The Amazon EC2 security group and Amazon Redshift
            cluster must be in the same AWS Region. 
            </para><para>
            If you authorize access to a CIDR/IP address range, specify <i>CIDRIP</i>. For an
            overview of CIDR blocks, see the Wikipedia article on <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Classless
            Inter-Domain Routing</a>. 
            </para><para>
            You must also associate the security group with a cluster so that clients running
            on these IP addresses or the EC2 instance are authorized to connect to the cluster.
            For information about managing security groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Working
            with Security Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.ApproveRSClusterSecurityGroupIngressCmdlet.CIDRIP">
            <summary>
            <para>
            <para>The IP range to be added the Amazon Redshift security group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.ApproveRSClusterSecurityGroupIngressCmdlet.ClusterSecurityGroupName">
            <summary>
            <para>
            <para>The name of the security group to which the ingress rule is added.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.ApproveRSClusterSecurityGroupIngressCmdlet.EC2SecurityGroupName">
            <summary>
            <para>
            <para>The EC2 security group to be added the Amazon Redshift security group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.ApproveRSClusterSecurityGroupIngressCmdlet.EC2SecurityGroupOwnerId">
            <summary>
            <para>
            <para>The AWS account number of the owner of the security group specified by the <i>EC2SecurityGroupName</i>
            parameter. The AWS Access Key ID is not an acceptable value. </para><para>Example: <code>111122223333</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.ApproveRSClusterSecurityGroupIngressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ClusterSecurityGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.AuthorizeClusterSecurityGroupIngressResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.AuthorizeClusterSecurityGroupIngressResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.ApproveRSClusterSecurityGroupIngressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterSecurityGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterSecurityGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.ApproveRSClusterSecurityGroupIngressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.ApproveRSSnapshotAccessCmdlet">
            <summary>
            Authorizes the specified AWS customer account to restore the specified snapshot.
            
             
            <para>
             For more information about working with snapshots, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon
            Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.ApproveRSSnapshotAccessCmdlet.AccountWithRestoreAccess">
            <summary>
            <para>
            <para>The identifier of the AWS customer account authorized to restore the specified snapshot.</para><para>To share a snapshot with AWS support, specify amazon-redshift-support.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.ApproveRSSnapshotAccessCmdlet.SnapshotClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster the snapshot was created from. This parameter is required
            if your IAM user has a policy containing a snapshot resource element that specifies
            anything other than * for the cluster name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.ApproveRSSnapshotAccessCmdlet.SnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier of the snapshot the account is authorized to restore.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.ApproveRSSnapshotAccessCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Snapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.AuthorizeSnapshotAccessResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.AuthorizeSnapshotAccessResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.ApproveRSSnapshotAccessCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.ApproveRSSnapshotAccessCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.CopyRSClusterSnapshotCmdlet">
            <summary>
            Copies the specified automated cluster snapshot to a new manual cluster snapshot.
            The source must be an automated snapshot and it must be in the available state.
            
             
            <para>
            When you delete a cluster, Amazon Redshift deletes any automated snapshots of the
            cluster. Also, when the retention period of the snapshot expires, Amazon Redshift
            automatically deletes it. If you want to keep an automated snapshot for a longer period,
            you can make a manual copy of the snapshot. Manual snapshots are retained until you
            delete them.
            </para><para>
             For more information about working with snapshots, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon
            Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.CopyRSClusterSnapshotCmdlet.ManualSnapshotRetentionPeriod">
            <summary>
            <para>
            <para>The number of days that a manual snapshot is retained. If the value is -1, the manual
            snapshot is retained indefinitely. </para><para>The value must be either -1 or an integer between 1 and 3,653.</para><para>The default value is -1.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.CopyRSClusterSnapshotCmdlet.SourceSnapshotClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster the source snapshot was created from. This parameter
            is required if your IAM user has a policy containing a snapshot resource element that
            specifies anything other than * for the cluster name.</para><para>Constraints:</para><ul><li><para>Must be the identifier for a valid cluster.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.CopyRSClusterSnapshotCmdlet.SourceSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier for the source snapshot.</para><para>Constraints:</para><ul><li><para>Must be the identifier for a valid automated snapshot whose state is <code>available</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.CopyRSClusterSnapshotCmdlet.TargetSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier given to the new manual snapshot.</para><para>Constraints:</para><ul><li><para>Cannot be null, empty, or blank.</para></li><li><para>Must contain from 1 to 255 alphanumeric characters or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li><li><para>Must be unique for the AWS account that is making the request.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.CopyRSClusterSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Snapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.CopyClusterSnapshotResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.CopyClusterSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.CopyRSClusterSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceSnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceSnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.CopyRSClusterSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.DisableRSLoggingCmdlet">
            <summary>
            Stops logging information, such as queries and connection attempts, for the specified
            Amazon Redshift cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.DisableRSLoggingCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster on which logging is to be stopped.</para><para>Example: <code>examplecluster</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.DisableRSLoggingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DisableLoggingResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DisableLoggingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.DisableRSLoggingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.DisableRSLoggingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.DisableRSSnapshotCopyCmdlet">
            <summary>
            Disables the automatic copying of snapshots from one region to another region for
            a specified cluster.
            
             
            <para>
            If your cluster and its snapshots are encrypted using a customer master key (CMK)
            from AWS KMS, use <a>DeleteSnapshotCopyGrant</a> to delete the grant that grants Amazon
            Redshift permission to the CMK in the destination region. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.DisableRSSnapshotCopyCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The unique identifier of the source cluster that you want to disable copying of snapshots
            to a destination region.</para><para>Constraints: Must be the valid name of an existing cluster that has cross-region snapshot
            copy enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.DisableRSSnapshotCopyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DisableSnapshotCopyResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DisableSnapshotCopyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.DisableRSSnapshotCopyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.DisableRSSnapshotCopyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet">
            <summary>
            Modifies the settings for a cluster.
            
             
            <para>
            You can also change node type and the number of nodes to scale up or down the cluster.
            When resizing a cluster, you must specify both the number of nodes and the node type
            even if one of the parameters does not change.
            </para><para>
            You can add another security or parameter group, or change the master user password.
            Resetting a cluster password or modifying the security groups associated with a cluster
            do not need a reboot. However, modifying a parameter group requires a reboot for parameters
            to take effect. For more information about managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
            Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.AllowVersionUpgrade">
            <summary>
            <para>
            <para>If <code>true</code>, major version upgrades will be applied automatically to the
            cluster during the maintenance window. </para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.AutomatedSnapshotRetentionPeriod">
            <summary>
            <para>
            <para>The number of days that automated snapshots are retained. If the value is 0, automated
            snapshots are disabled. Even if automated snapshots are disabled, you can still create
            manual snapshots when you want with <a>CreateClusterSnapshot</a>. </para><para>If you decrease the automated snapshot retention period from its current value, existing
            automated snapshots that fall outside of the new retention period will be immediately
            deleted.</para><para>Default: Uses existing setting.</para><para>Constraints: Must be a value from 0 to 35.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The unique identifier of the cluster to be modified.</para><para>Example: <code>examplecluster</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.ClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the cluster parameter group to apply to this cluster. This change is applied
            only after the cluster is rebooted. To reboot a cluster use <a>RebootCluster</a>.
            </para><para>Default: Uses existing setting.</para><para>Constraints: The cluster parameter group must be in the same parameter group family
            that matches the cluster version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.ClusterSecurityGroup">
            <summary>
            <para>
            <para>A list of cluster security groups to be authorized on this cluster. This change is
            asynchronously applied as soon as possible.</para><para>Security groups currently associated with the cluster, and not in the list of groups
            to apply, will be revoked from the cluster.</para><para>Constraints:</para><ul><li><para>Must be 1 to 255 alphanumeric characters or hyphens</para></li><li><para>First character must be a letter</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.ClusterType">
            <summary>
            <para>
            <para>The new cluster type.</para><para>When you submit your cluster resize request, your existing cluster goes into a read-only
            mode. After Amazon Redshift provisions a new cluster based on your resize requirements,
            there will be outage for a period while the old cluster is deleted and your connection
            is switched to the new cluster. You can use <a>DescribeResize</a> to track the progress
            of the resize request. </para><para>Valid Values: <code> multi-node | single-node </code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.ClusterVersion">
            <summary>
            <para>
            <para>The new version number of the Amazon Redshift engine to upgrade to.</para><para>For major version upgrades, if a non-default cluster parameter group is currently
            in use, a new cluster parameter group in the cluster parameter group family for the
            new version must be specified. The new cluster parameter group can be the default
            for that cluster parameter group family. For more information about parameters and
            parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon
            Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</para><para>Example: <code>1.0</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.ElasticIp">
            <summary>
            <para>
            <para>The Elastic IP (EIP) address for the cluster.</para><para>Constraints: The cluster must be provisioned in EC2-VPC and publicly-accessible through
            an Internet gateway. For more information about provisioning clusters in EC2-VPC,
            go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#cluster-platforms">Supported
            Platforms to Launch Your Cluster</a> in the Amazon Redshift Cluster Management Guide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.Encrypted">
            <summary>
            <para>
            <para>Indicates whether the cluster is encrypted. If the value is encrypted (true) and you
            provide a value for the <code>KmsKeyId</code> parameter, we encrypt the cluster with
            the provided <code>KmsKeyId</code>. If you don't provide a <code>KmsKeyId</code>,
            we encrypt with the default key. In the China region we use legacy encryption if you
            specify that the cluster is encrypted.</para><para>If the value is not encrypted (false), then the cluster is decrypted. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.EnhancedVpcRouting">
            <summary>
            <para>
            <para>An option that specifies whether to create the cluster with enhanced VPC routing enabled.
            To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC.
            For more information, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html">Enhanced
            VPC Routing</a> in the Amazon Redshift Cluster Management Guide.</para><para>If this option is <code>true</code>, enhanced VPC routing is enabled. </para><para>Default: false</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.HsmClientCertificateIdentifier">
            <summary>
            <para>
            <para>Specifies the name of the HSM client certificate the Amazon Redshift cluster uses
            to retrieve the data encryption keys stored in an HSM.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.HsmConfigurationIdentifier">
            <summary>
            <para>
            <para>Specifies the name of the HSM configuration that contains the information the Amazon
            Redshift cluster can use to retrieve and store keys in an HSM.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS Key Management Service (KMS) key ID of the encryption key that you want to
            use to encrypt data in the cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.MaintenanceTrackName">
            <summary>
            <para>
            <para>The name for the maintenance track that you want to assign for the cluster. This name
            change is asynchronous. The new track name stays in the <code>PendingModifiedValues</code>
            for the cluster until the next maintenance window. When the maintenance track changes,
            the cluster is switched to the latest cluster release available for the maintenance
            track. At this point, the maintenance track name is applied.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.ManualSnapshotRetentionPeriod">
            <summary>
            <para>
            <para>The default for number of days that a newly created manual snapshot is retained. If
            the value is -1, the manual snapshot is retained indefinitely. This value doesn't
            retroactively change the retention periods of existing manual snapshots.</para><para>The value must be either -1 or an integer between 1 and 3,653.</para><para>The default value is -1.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.MasterUserPassword">
            <summary>
            <para>
            <para>The new password for the cluster master user. This change is asynchronously applied
            as soon as possible. Between the time of the request and the completion of the request,
            the <code>MasterUserPassword</code> element exists in the <code>PendingModifiedValues</code>
            element of the operation response. </para><note><para>Operations never return the password, so this operation provides a way to regain access
            to the master user account for a cluster if the password is lost.</para></note><para>Default: Uses existing setting.</para><para>Constraints:</para><ul><li><para>Must be between 8 and 64 characters in length.</para></li><li><para>Must contain at least one uppercase letter.</para></li><li><para>Must contain at least one lowercase letter.</para></li><li><para>Must contain one number.</para></li><li><para>Can be any printable ASCII character (ASCII code 33 to 126) except ' (single quote),
            " (double quote), \, /, @, or space.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.NewClusterIdentifier">
            <summary>
            <para>
            <para>The new identifier for the cluster.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 alphanumeric characters or hyphens.</para></li><li><para>Alphabetic characters must be lowercase.</para></li><li><para>First character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li><li><para>Must be unique for all clusters within an AWS account.</para></li></ul><para>Example: <code>examplecluster</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.NodeType">
            <summary>
            <para>
            <para>The new node type of the cluster. If you specify a new node type, you must also specify
            the number of nodes parameter.</para><para> For more information about resizing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/rs-resize-tutorial.html">Resizing
            Clusters in Amazon Redshift</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</para><para>Valid Values: <code>ds2.xlarge</code> | <code>ds2.8xlarge</code> | <code>dc1.large</code>
            | <code>dc1.8xlarge</code> | <code>dc2.large</code> | <code>dc2.8xlarge</code> | <code>ra3.4xlarge</code>
            | <code>ra3.16xlarge</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.NumberOfNodes">
            <summary>
            <para>
            <para>The new number of nodes of the cluster. If you specify a new number of nodes, you
            must also specify the node type parameter.</para><para> For more information about resizing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/rs-resize-tutorial.html">Resizing
            Clusters in Amazon Redshift</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</para><para>Valid Values: Integer greater than <code>0</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>The weekly time range (in UTC) during which system maintenance can occur, if necessary.
            If system maintenance is necessary during the window, it may result in an outage.</para><para>This maintenance window change is made immediately. If the new maintenance window
            indicates the current time, there must be at least 120 minutes between the current
            time and end of the window in order to ensure that pending changes are applied.</para><para>Default: Uses existing setting.</para><para>Format: ddd:hh24:mi-ddd:hh24:mi, for example <code>wed:07:30-wed:08:00</code>.</para><para>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</para><para>Constraints: Must be at least 30 minutes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.PubliclyAccessible">
            <summary>
            <para>
            <para>If <code>true</code>, the cluster can be accessed from a public network. Only clusters
            in VPCs can be set to be publicly available.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of virtual private cloud (VPC) security groups to be associated with the cluster.
            This change is asynchronously applied as soon as possible.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.ModifyClusterResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.ModifyClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.EditRSClusterDbRevisionCmdlet">
            <summary>
            Modifies the database revision of a cluster. The database revision is a unique revision
            of the database running in a cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterDbRevisionCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The unique identifier of a cluster whose database revision you want to modify. </para><para>Example: <code>examplecluster</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterDbRevisionCmdlet.RevisionTarget">
            <summary>
            <para>
            <para>The identifier of the database revision. You can retrieve this value from the response
            to the <a>DescribeClusterDbRevisions</a> request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterDbRevisionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.ModifyClusterDbRevisionResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.ModifyClusterDbRevisionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterDbRevisionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterDbRevisionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.EditRSClusterIamRoleCmdlet">
            <summary>
            Modifies the list of AWS Identity and Access Management (IAM) roles that can be used
            by the cluster to access other AWS services.
            
             
            <para>
            A cluster can have up to 10 IAM roles associated at any time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterIamRoleCmdlet.AddIamRole">
            <summary>
            <para>
            <para>Zero or more IAM roles to associate with the cluster. The roles must be in their Amazon
            Resource Name (ARN) format. You can associate up to 10 IAM roles with a single cluster
            in a single request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterIamRoleCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The unique identifier of the cluster for which you want to associate or disassociate
            IAM roles.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterIamRoleCmdlet.RemoveIamRole">
            <summary>
            <para>
            <para>Zero or more IAM roles in ARN format to disassociate from the cluster. You can disassociate
            up to 10 IAM roles from a single cluster in a single request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterIamRoleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.ModifyClusterIamRolesResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.ModifyClusterIamRolesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterIamRoleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterIamRoleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.EditRSClusterMaintenanceCmdlet">
            <summary>
            Modifies the maintenance settings of a cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterMaintenanceCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>A unique identifier for the cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterMaintenanceCmdlet.DeferMaintenance">
            <summary>
            <para>
            <para>A boolean indicating whether to enable the deferred maintenance window. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterMaintenanceCmdlet.DeferMaintenanceDuration">
            <summary>
            <para>
            <para>An integer indicating the duration of the maintenance window in days. If you specify
            a duration, you can't specify an end time. The duration must be 45 days or less.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterMaintenanceCmdlet.DeferMaintenanceEndTime">
            <summary>
            <para>
            <para>A timestamp indicating end time for the deferred maintenance window. If you specify
            an end time, you can't specify a duration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterMaintenanceCmdlet.DeferMaintenanceIdentifier">
            <summary>
            <para>
            <para>A unique identifier for the deferred maintenance window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterMaintenanceCmdlet.DeferMaintenanceStartTime">
            <summary>
            <para>
            <para>A timestamp indicating the start time for the deferred maintenance window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterMaintenanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.ModifyClusterMaintenanceResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.ModifyClusterMaintenanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterMaintenanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterMaintenanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.EditRSClusterParameterGroupCmdlet">
            <summary>
            Modifies the parameters of a parameter group.
            
             
            <para>
             For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon
            Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterParameterGroupCmdlet.ParameterGroupName">
            <summary>
            <para>
            <para>The name of the parameter group to be modified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterParameterGroupCmdlet.Parameter">
            <summary>
            <para>
            <para>An array of parameters to be modified. A maximum of 20 parameters can be modified
            in a single request.</para><para>For each parameter to be modified, you must supply at least the parameter name and
            parameter value; other name-value pairs of the parameter are optional.</para><para>For the workload management (WLM) configuration, you must supply all the name-value
            pairs in the wlm_json_configuration parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.ModifyClusterParameterGroupResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.ModifyClusterParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSnapshotCmdlet">
            <summary>
            Modifies the settings for a snapshot.
            
             
            <para>
            This exanmple modifies the manual retention period setting for a cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSnapshotCmdlet.Enforce">
            <summary>
            <para>
            <para>A Boolean option to override an exception if the retention period has already passed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSnapshotCmdlet.ManualSnapshotRetentionPeriod">
            <summary>
            <para>
            <para>The number of days that a manual snapshot is retained. If the value is -1, the manual
            snapshot is retained indefinitely.</para><para>If the manual snapshot falls outside of the new retention period, you can specify
            the force option to immediately delete the snapshot.</para><para>The value must be either -1 or an integer between 1 and 3,653.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSnapshotCmdlet.SnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier of the snapshot whose setting you want to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Snapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.ModifyClusterSnapshotResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.ModifyClusterSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSnapshotBatchCmdlet">
            <summary>
            Modifies the settings for a set of cluster snapshots.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSnapshotBatchCmdlet.Enforce">
            <summary>
            <para>
            <para>A boolean value indicating whether to override an exception if the retention period
            has passed. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSnapshotBatchCmdlet.ManualSnapshotRetentionPeriod">
            <summary>
            <para>
            <para>The number of days that a manual snapshot is retained. If you specify the value -1,
            the manual snapshot is retained indefinitely.</para><para>The number must be either -1 or an integer between 1 and 3,653.</para><para>If you decrease the manual snapshot retention period from its current value, existing
            manual snapshots that fall outside of the new retention period will return an error.
            If you want to suppress the errors and delete the snapshots, use the force option.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSnapshotBatchCmdlet.SnapshotIdentifierList">
            <summary>
            <para>
            <para>A list of snapshot identifiers you want to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSnapshotBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.BatchModifyClusterSnapshotsResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.BatchModifyClusterSnapshotsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSnapshotBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSnapshotScheduleCmdlet">
            <summary>
            Modifies a snapshot schedule for a cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSnapshotScheduleCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>A unique identifier for the cluster whose snapshot schedule you want to modify. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSnapshotScheduleCmdlet.DisassociateSchedule">
            <summary>
            <para>
            <para>A boolean to indicate whether to remove the assoiciation between the cluster and the
            schedule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSnapshotScheduleCmdlet.ScheduleIdentifier">
            <summary>
            <para>
            <para>A unique alphanumeric identifier for the schedule that you want to associate with
            the cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSnapshotScheduleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.ModifyClusterSnapshotScheduleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSnapshotScheduleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScheduleIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ScheduleIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSnapshotScheduleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSubnetGroupCmdlet">
            <summary>
            Modifies a cluster subnet group to include the specified list of VPC subnets. The
            operation replaces the existing list of subnets with the new list of subnets.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSubnetGroupCmdlet.ClusterSubnetGroupName">
            <summary>
            <para>
            <para>The name of the subnet group to be modified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSubnetGroupCmdlet.Description">
            <summary>
            <para>
            <para>A text description of the subnet group to be modified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSubnetGroupCmdlet.SubnetId">
            <summary>
            <para>
            <para>An array of VPC subnet IDs. A maximum of 20 subnets can be modified in a single request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSubnetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ClusterSubnetGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.ModifyClusterSubnetGroupResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.ModifyClusterSubnetGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSubnetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterSubnetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterSubnetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSClusterSubnetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.EditRSEventSubscriptionCmdlet">
            <summary>
            Modifies an existing Amazon Redshift event notification subscription.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSEventSubscriptionCmdlet.Enabled">
            <summary>
            <para>
            <para>A Boolean value indicating if the subscription is enabled. <code>true</code> indicates
            the subscription is enabled </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSEventSubscriptionCmdlet.EventCategory">
            <summary>
            <para>
            <para>Specifies the Amazon Redshift event categories to be published by the event notification
            subscription.</para><para>Values: configuration, management, monitoring, security</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSEventSubscriptionCmdlet.Severity">
            <summary>
            <para>
            <para>Specifies the Amazon Redshift event severity to be published by the event notification
            subscription.</para><para>Values: ERROR, INFO</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSEventSubscriptionCmdlet.SnsTopicArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the SNS topic to be used by the event notification
            subscription.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSEventSubscriptionCmdlet.SourceId">
            <summary>
            <para>
            <para>A list of one or more identifiers of Amazon Redshift source objects. All of the objects
            must be of the same type as was specified in the source type parameter. The event
            subscription will return only events generated by the specified objects. If not specified,
            then events are returned for all objects within the source type specified.</para><para>Example: my-cluster-1, my-cluster-2</para><para>Example: my-snapshot-20131010</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSEventSubscriptionCmdlet.SourceType">
            <summary>
            <para>
            <para>The type of source that will be generating the events. For example, if you want to
            be notified of events generated by a cluster, you would set this parameter to cluster.
            If this value is not specified, events are returned for all Amazon Redshift objects
            in your AWS account. You must specify a source type in order to specify source IDs.</para><para>Valid values: cluster, cluster-parameter-group, cluster-security-group, cluster-snapshot,
            and scheduled-action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSEventSubscriptionCmdlet.SubscriptionName">
            <summary>
            <para>
            <para>The name of the modified Amazon Redshift event notification subscription.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSEventSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventSubscription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.ModifyEventSubscriptionResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.ModifyEventSubscriptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSEventSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubscriptionName parameter.
            The -PassThru parameter is deprecated, use -Select '^SubscriptionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSEventSubscriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.EditRSScheduledActionCmdlet">
            <summary>
            Modifies a scheduled action.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSScheduledActionCmdlet.ResizeCluster_Classic">
            <summary>
            <para>
            <para>A boolean value indicating whether the resize operation is using the classic resize
            process. If you don't provide this parameter or set the value to <code>false</code>,
            the resize type is elastic. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSScheduledActionCmdlet.PauseCluster_ClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster to be paused.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSScheduledActionCmdlet.ResizeCluster_ClusterIdentifier">
            <summary>
            <para>
            <para>The unique identifier for the cluster to resize.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSScheduledActionCmdlet.ResumeCluster_ClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster to be resumed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSScheduledActionCmdlet.ResizeCluster_ClusterType">
            <summary>
            <para>
            <para>The new cluster type for the specified cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSScheduledActionCmdlet.Enable">
            <summary>
            <para>
            <para>A modified enable flag of the scheduled action. If true, the scheduled action is active.
            If false, the scheduled action is disabled. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSScheduledActionCmdlet.EndTime">
            <summary>
            <para>
            <para>A modified end time of the scheduled action. For more information about this parameter,
            see <a>ScheduledAction</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSScheduledActionCmdlet.IamRole">
            <summary>
            <para>
            <para>A different IAM role to assume to run the target action. For more information about
            this parameter, see <a>ScheduledAction</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSScheduledActionCmdlet.ResizeCluster_NodeType">
            <summary>
            <para>
            <para>The new node type for the nodes you are adding. If not specified, the cluster's current
            node type is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSScheduledActionCmdlet.ResizeCluster_NumberOfNode">
            <summary>
            <para>
            <para>The new number of nodes for the cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSScheduledActionCmdlet.Schedule">
            <summary>
            <para>
            <para>A modified schedule in either <code>at( )</code> or <code>cron( )</code> format. For
            more information about this parameter, see <a>ScheduledAction</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSScheduledActionCmdlet.ScheduledActionDescription">
            <summary>
            <para>
            <para>A modified description of the scheduled action. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSScheduledActionCmdlet.ScheduledActionName">
            <summary>
            <para>
            <para>The name of the scheduled action to modify. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSScheduledActionCmdlet.StartTime">
            <summary>
            <para>
            <para>A modified start time of the scheduled action. For more information about this parameter,
            see <a>ScheduledAction</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSScheduledActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.ModifyScheduledActionResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.ModifyScheduledActionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSScheduledActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScheduledActionName parameter.
            The -PassThru parameter is deprecated, use -Select '^ScheduledActionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSScheduledActionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.EditRSSnapshotCopyRetentionPeriodCmdlet">
            <summary>
            Modifies the number of days to retain snapshots in the destination AWS Region after
            they are copied from the source AWS Region. By default, this operation only changes
            the retention period of copied automated snapshots. The retention periods for both
            new and existing copied automated snapshots are updated with the new retention period.
            You can set the manual option to change only the retention periods of copied manual
            snapshots. If you set this option, only newly copied manual snapshots have the new
            retention period.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSSnapshotCopyRetentionPeriodCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The unique identifier of the cluster for which you want to change the retention period
            for either automated or manual snapshots that are copied to a destination AWS Region.</para><para>Constraints: Must be the valid name of an existing cluster that has cross-region snapshot
            copy enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSSnapshotCopyRetentionPeriodCmdlet.Manual">
            <summary>
            <para>
            <para>Indicates whether to apply the snapshot retention period to newly copied manual snapshots
            instead of automated snapshots.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSSnapshotCopyRetentionPeriodCmdlet.RetentionPeriod">
            <summary>
            <para>
            <para>The number of days to retain automated snapshots in the destination AWS Region after
            they are copied from the source AWS Region.</para><para>By default, this only changes the retention period of copied automated snapshots.
            </para><para>If you decrease the retention period for automated snapshots that are copied to a
            destination AWS Region, Amazon Redshift deletes any existing automated snapshots that
            were copied to the destination AWS Region and that fall outside of the new retention
            period.</para><para>Constraints: Must be at least 1 and no more than 35 for automated snapshots. </para><para>If you specify the <code>manual</code> option, only newly copied manual snapshots
            will have the new retention period. </para><para>If you specify the value of -1 newly copied manual snapshots are retained indefinitely.</para><para>Constraints: The number of days must be either -1 or an integer between 1 and 3,653
            for manual snapshots.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSSnapshotCopyRetentionPeriodCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.ModifySnapshotCopyRetentionPeriodResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.ModifySnapshotCopyRetentionPeriodResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSSnapshotCopyRetentionPeriodCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSSnapshotCopyRetentionPeriodCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.EditRSSnapshotScheduleCmdlet">
            <summary>
            Modifies a snapshot schedule. Any schedule associated with a cluster is modified asynchronously.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSSnapshotScheduleCmdlet.ScheduleDefinition">
            <summary>
            <para>
            <para>An updated list of schedule definitions. A schedule definition is made up of schedule
            expressions, for example, "cron(30 12 *)" or "rate(12 hours)".</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSSnapshotScheduleCmdlet.ScheduleIdentifier">
            <summary>
            <para>
            <para>A unique alphanumeric identifier of the schedule to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSSnapshotScheduleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.ModifySnapshotScheduleResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.ModifySnapshotScheduleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSSnapshotScheduleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScheduleIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ScheduleIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSSnapshotScheduleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.EditRSUsageLimitCmdlet">
            <summary>
            Modifies a usage limit in a cluster. You can't modify the feature type or period of
            a usage limit.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSUsageLimitCmdlet.Amount">
            <summary>
            <para>
            <para>The new limit amount. For more information about this parameter, see <a>UsageLimit</a>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSUsageLimitCmdlet.BreachAction">
            <summary>
            <para>
            <para>The new action that Amazon Redshift takes when the limit is reached. For more information
            about this parameter, see <a>UsageLimit</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSUsageLimitCmdlet.UsageLimitId">
            <summary>
            <para>
            <para>The identifier of the usage limit to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSUsageLimitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.ModifyUsageLimitResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.ModifyUsageLimitResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSUsageLimitCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UsageLimitId parameter.
            The -PassThru parameter is deprecated, use -Select '^UsageLimitId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EditRSUsageLimitCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.EnableRSLoggingCmdlet">
            <summary>
            Starts logging information, such as queries and connection attempts, for the specified
            Amazon Redshift cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EnableRSLoggingCmdlet.BucketName">
            <summary>
            <para>
            <para>The name of an existing S3 bucket where the log files are to be stored.</para><para>Constraints:</para><ul><li><para>Must be in the same region as the cluster</para></li><li><para>The cluster must have read bucket and put object permissions</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EnableRSLoggingCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster on which logging is to be started.</para><para>Example: <code>examplecluster</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EnableRSLoggingCmdlet.S3KeyPrefix">
            <summary>
            <para>
            <para>The prefix applied to the log file names.</para><para>Constraints:</para><ul><li><para>Cannot exceed 512 characters</para></li><li><para>Cannot contain spaces( ), double quotes ("), single quotes ('), a backslash (\), or
            control characters. The hexadecimal codes for invalid characters are: </para><ul><li><para>x00 to x20</para></li><li><para>x22</para></li><li><para>x27</para></li><li><para>x5c</para></li><li><para>x7f or larger</para></li></ul></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EnableRSLoggingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.EnableLoggingResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.EnableLoggingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EnableRSLoggingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EnableRSLoggingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.EnableRSSnapshotCopyCmdlet">
            <summary>
            Enables the automatic copy of snapshots from one region to another region for a specified
            cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EnableRSSnapshotCopyCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The unique identifier of the source cluster to copy snapshots from.</para><para>Constraints: Must be the valid name of an existing cluster that does not already have
            cross-region snapshot copy enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EnableRSSnapshotCopyCmdlet.DestinationRegion">
            <summary>
            <para>
            <para>The destination AWS Region that you want to copy snapshots to.</para><para>Constraints: Must be the name of a valid AWS Region. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#redshift_region">Regions
            and Endpoints</a> in the Amazon Web Services General Reference. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EnableRSSnapshotCopyCmdlet.ManualSnapshotRetentionPeriod">
            <summary>
            <para>
            <para>The number of days to retain newly copied snapshots in the destination AWS Region
            after they are copied from the source AWS Region. If the value is -1, the manual snapshot
            is retained indefinitely. </para><para>The value must be either -1 or an integer between 1 and 3,653.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EnableRSSnapshotCopyCmdlet.RetentionPeriod">
            <summary>
            <para>
            <para>The number of days to retain automated snapshots in the destination region after they
            are copied from the source region.</para><para>Default: 7.</para><para>Constraints: Must be at least 1 and no more than 35.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EnableRSSnapshotCopyCmdlet.SnapshotCopyGrantName">
            <summary>
            <para>
            <para>The name of the snapshot copy grant to use when snapshots of an AWS KMS-encrypted
            cluster are copied to the destination region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EnableRSSnapshotCopyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.EnableSnapshotCopyResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.EnableSnapshotCopyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EnableRSSnapshotCopyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.EnableRSSnapshotCopyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSAccountAttributeCmdlet">
            <summary>
            Returns a list of attributes attached to an account
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSAccountAttributeCmdlet.AttributeName">
            <summary>
            <para>
            <para>A list of attribute names.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSAccountAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AccountAttributes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeAccountAttributesResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeAccountAttributesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSAccountAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AttributeName parameter.
            The -PassThru parameter is deprecated, use -Select '^AttributeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSClusterCmdlet">
            <summary>
            Returns properties of provisioned clusters including general cluster properties, cluster
            database properties, maintenance and backup properties, and security and access properties.
            This operation supports pagination. For more information about managing clusters,
            go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
            Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            
             
            <para>
            If you specify both tag keys and tag values in the same request, Amazon Redshift returns
            all clusters that match any combination of the specified keys and values. For example,
            if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code>
            and <code>test</code> for tag values, all clusters that have any combination of those
            values are returned.
            </para><para>
            If both tag keys and values are omitted from the request, clusters are returned regardless
            of whether they have tag keys or values associated with them.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The unique identifier of a cluster whose properties you are requesting. This parameter
            is case sensitive.</para><para>The default is that all clusters defined for an account are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterCmdlet.TagKey">
            <summary>
            <para>
            <para>A tag key or keys for which you want to return all matching clusters that are associated
            with the specified key or keys. For example, suppose that you have clusters that are
            tagged with keys called <code>owner</code> and <code>environment</code>. If you specify
            both of these tag keys in the request, Amazon Redshift returns a response with the
            clusters that have either or both of these tag keys associated with them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterCmdlet.TagValue">
            <summary>
            <para>
            <para>A tag value or values for which you want to return all matching clusters that are
            associated with the specified tag value or values. For example, suppose that you have
            clusters that are tagged with values called <code>admin</code> and <code>test</code>.
            If you specify both of these tag values in the request, Amazon Redshift returns a
            response with the clusters that have either or both of these tag values associated
            with them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point to return a set of response
            records. When the results of a <a>DescribeClusters</a> request exceed the value specified
            in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code> field of
            the response. You can retrieve the next set of response records by providing the returned
            marker value in the <code>Marker</code> parameter and retrying the request. </para><para>Constraints: You can specify either the <b>ClusterIdentifier</b> parameter or the
            <b>Marker</b> parameter, but not both. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned marker value. </para><para>Default: <code>100</code></para><para>Constraints: minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Clusters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeClustersResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeClustersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSClusterCredentialCmdlet">
            <summary>
            Returns a database user name and temporary password with temporary authorization to
            log on to an Amazon Redshift database. The action returns the database user name prefixed
            with <code>IAM:</code> if <code>AutoCreate</code> is <code>False</code> or <code>IAMA:</code>
            if <code>AutoCreate</code> is <code>True</code>. You can optionally specify one or
            more database user groups that the user will join at log on. By default, the temporary
            credentials expire in 900 seconds. You can optionally specify a duration between 900
            seconds (15 minutes) and 3600 seconds (60 minutes). For more information, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/generating-user-credentials.html">Using
            IAM Authentication to Generate Database User Credentials</a> in the Amazon Redshift
            Cluster Management Guide.
            
             
            <para>
            The AWS Identity and Access Management (IAM)user or role that executes GetClusterCredentials
            must have an IAM policy attached that allows access to all necessary actions and resources.
            For more information about permissions, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-identity-based.html#redshift-policy-resources.getclustercredentials-resources">Resource
            Policies for GetClusterCredentials</a> in the Amazon Redshift Cluster Management Guide.
            </para><para>
            If the <code>DbGroups</code> parameter is specified, the IAM policy must allow the
            <code>redshift:JoinGroup</code> action with access to the listed <code>dbgroups</code>.
            
            </para><para>
            In addition, if the <code>AutoCreate</code> parameter is set to <code>True</code>,
            then the policy must include the <code>redshift:CreateClusterUser</code> privilege.
            </para><para>
            If the <code>DbName</code> parameter is specified, the IAM policy must allow access
            to the resource <code>dbname</code> for the specified database name. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterCredentialCmdlet.AutoCreate">
            <summary>
            <para>
            <para>Create a database user with the name specified for the user named in <code>DbUser</code>
            if one does not exist.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterCredentialCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The unique identifier of the cluster that contains the database for which your are
            requesting credentials. This parameter is case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterCredentialCmdlet.DbGroup">
            <summary>
            <para>
            <para>A list of the names of existing database groups that the user named in <code>DbUser</code>
            will join for the current session, in addition to any group memberships for an existing
            user. If not specified, a new user is added only to PUBLIC.</para><para>Database group name constraints</para><ul><li><para>Must be 1 to 64 alphanumeric characters or hyphens</para></li><li><para>Must contain only lowercase letters, numbers, underscore, plus sign, period (dot),
            at symbol (@), or hyphen.</para></li><li><para>First character must be a letter.</para></li><li><para>Must not contain a colon ( : ) or slash ( / ). </para></li><li><para>Cannot be a reserved word. A list of reserved words can be found in <a href="http://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved
            Words</a> in the Amazon Redshift Database Developer Guide.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterCredentialCmdlet.DbName">
            <summary>
            <para>
            <para>The name of a database that <code>DbUser</code> is authorized to log on to. If <code>DbName</code>
            is not specified, <code>DbUser</code> can log on to any existing database.</para><para>Constraints:</para><ul><li><para>Must be 1 to 64 alphanumeric characters or hyphens</para></li><li><para>Must contain only lowercase letters, numbers, underscore, plus sign, period (dot),
            at symbol (@), or hyphen.</para></li><li><para>First character must be a letter.</para></li><li><para>Must not contain a colon ( : ) or slash ( / ). </para></li><li><para>Cannot be a reserved word. A list of reserved words can be found in <a href="http://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved
            Words</a> in the Amazon Redshift Database Developer Guide.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterCredentialCmdlet.DbUser">
            <summary>
            <para>
            <para>The name of a database user. If a user name matching <code>DbUser</code> exists in
            the database, the temporary user credentials have the same permissions as the existing
            user. If <code>DbUser</code> doesn't exist in the database and <code>Autocreate</code>
            is <code>True</code>, a new user is created using the value for <code>DbUser</code>
            with PUBLIC permissions. If a database user matching the value for <code>DbUser</code>
            doesn't exist and <code>Autocreate</code> is <code>False</code>, then the command
            succeeds but the connection attempt will fail because the user doesn't exist in the
            database.</para><para>For more information, see <a href="https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_USER.html">CREATE
            USER</a> in the Amazon Redshift Database Developer Guide. </para><para>Constraints:</para><ul><li><para>Must be 1 to 64 alphanumeric characters or hyphens. The user name can't be <code>PUBLIC</code>.</para></li><li><para>Must contain only lowercase letters, numbers, underscore, plus sign, period (dot),
            at symbol (@), or hyphen.</para></li><li><para>First character must be a letter.</para></li><li><para>Must not contain a colon ( : ) or slash ( / ). </para></li><li><para>Cannot be a reserved word. A list of reserved words can be found in <a href="http://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved
            Words</a> in the Amazon Redshift Database Developer Guide.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterCredentialCmdlet.DurationSecond">
            <summary>
            <para>
            <para>The number of seconds until the returned temporary password expires.</para><para>Constraint: minimum 900, maximum 3600.</para><para>Default: 900</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterCredentialCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.GetClusterCredentialsResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.GetClusterCredentialsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterCredentialCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSClusterDbRevisionCmdlet">
            <summary>
            Returns an array of <code>ClusterDbRevision</code> objects.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterDbRevisionCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>A unique identifier for a cluster whose <code>ClusterDbRevisions</code> you are requesting.
            This parameter is case sensitive. All clusters defined for an account are returned
            by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterDbRevisionCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point for returning a set of response
            records. When the results of a <code>DescribeClusterDbRevisions</code> request exceed
            the value specified in <code>MaxRecords</code>, Amazon Redshift returns a value in
            the <code>marker</code> field of the response. You can retrieve the next set of response
            records by providing the returned <code>marker</code> value in the <code>marker</code>
            parameter and retrying the request. </para><para>Constraints: You can specify either the <code>ClusterIdentifier</code> parameter,
            or the <code>marker</code> parameter, but not both.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterDbRevisionCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of response records to return in each call. If the number of remaining
            response records exceeds the specified MaxRecords value, a value is returned in the
            <code>marker</code> field of the response. You can retrieve the next set of response
            records by providing the returned <code>marker</code> value in the <code>marker</code>
            parameter and retrying the request. </para><para>Default: 100</para><para>Constraints: minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterDbRevisionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ClusterDbRevisions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeClusterDbRevisionsResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeClusterDbRevisionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterDbRevisionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterDbRevisionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSClusterParameterCmdlet">
            <summary>
            Returns a detailed list of parameters contained within the specified Amazon Redshift
            parameter group. For each parameter the response includes information such as parameter
            name, description, data type, value, whether the parameter value is modifiable, and
            so on.
            
             
            <para>
            You can specify <i>source</i> filter to retrieve parameters of only specific type.
            For example, to retrieve parameters that were modified by a user action such as from
            <a>ModifyClusterParameterGroup</a>, you can specify <i>source</i> equal to <i>user</i>.
            </para><para>
             For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon
            Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterParameterCmdlet.ParameterGroupName">
            <summary>
            <para>
            <para>The name of a cluster parameter group for which to return details.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterParameterCmdlet.Source">
            <summary>
            <para>
            <para>The parameter types to return. Specify <code>user</code> to show parameters that are
            different form the default. Similarly, specify <code>engine-default</code> to show
            parameters that are the same as the default parameter group. </para><para>Default: All parameter types returned.</para><para>Valid Values: <code>user</code> | <code>engine-default</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterParameterCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point to return a set of response
            records. When the results of a <a>DescribeClusterParameters</a> request exceed the
            value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code>
            field of the response. You can retrieve the next set of response records by providing
            the returned marker value in the <code>Marker</code> parameter and retrying the request.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterParameterCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned marker value. </para><para>Default: <code>100</code></para><para>Constraints: minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Parameters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeClusterParametersResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeClusterParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterParameterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterParameterCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSClusterParameterGroupCmdlet">
            <summary>
            Returns a list of Amazon Redshift parameter groups, including parameter groups you
            created and the default parameter group. For each parameter group, the response includes
            the parameter group name, description, and parameter group family name. You can optionally
            specify a name to retrieve the description of a specific parameter group.
            
             
            <para>
             For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon
            Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </para><para>
            If you specify both tag keys and tag values in the same request, Amazon Redshift returns
            all parameter groups that match any combination of the specified keys and values.
            For example, if you have <code>owner</code> and <code>environment</code> for tag keys,
            and <code>admin</code> and <code>test</code> for tag values, all parameter groups
            that have any combination of those values are returned.
            </para><para>
            If both tag keys and values are omitted from the request, parameter groups are returned
            regardless of whether they have tag keys or values associated with them.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterParameterGroupCmdlet.ParameterGroupName">
            <summary>
            <para>
            <para>The name of a specific parameter group for which to return details. By default, details
            about all parameter groups and the default parameter group are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterParameterGroupCmdlet.TagKey">
            <summary>
            <para>
            <para>A tag key or keys for which you want to return all matching cluster parameter groups
            that are associated with the specified key or keys. For example, suppose that you
            have parameter groups that are tagged with keys called <code>owner</code> and <code>environment</code>.
            If you specify both of these tag keys in the request, Amazon Redshift returns a response
            with the parameter groups that have either or both of these tag keys associated with
            them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterParameterGroupCmdlet.TagValue">
            <summary>
            <para>
            <para>A tag value or values for which you want to return all matching cluster parameter
            groups that are associated with the specified tag value or values. For example, suppose
            that you have parameter groups that are tagged with values called <code>admin</code>
            and <code>test</code>. If you specify both of these tag values in the request, Amazon
            Redshift returns a response with the parameter groups that have either or both of
            these tag values associated with them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterParameterGroupCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point to return a set of response
            records. When the results of a <a>DescribeClusterParameterGroups</a> request exceed
            the value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code>
            field of the response. You can retrieve the next set of response records by providing
            the returned marker value in the <code>Marker</code> parameter and retrying the request.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterParameterGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned marker value. </para><para>Default: <code>100</code></para><para>Constraints: minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ParameterGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeClusterParameterGroupsResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeClusterParameterGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterParameterGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSecurityGroupCmdlet">
            <summary>
            Returns information about Amazon Redshift security groups. If the name of a security
            group is specified, the response will contain only information about only that security
            group.
            
             
            <para>
             For information about managing security groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon
            Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster Management
            Guide</i>.
            </para><para>
            If you specify both tag keys and tag values in the same request, Amazon Redshift returns
            all security groups that match any combination of the specified keys and values. For
            example, if you have <code>owner</code> and <code>environment</code> for tag keys,
            and <code>admin</code> and <code>test</code> for tag values, all security groups that
            have any combination of those values are returned.
            </para><para>
            If both tag keys and values are omitted from the request, security groups are returned
            regardless of whether they have tag keys or values associated with them.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSecurityGroupCmdlet.ClusterSecurityGroupName">
            <summary>
            <para>
            <para>The name of a cluster security group for which you are requesting details. You can
            specify either the <b>Marker</b> parameter or a <b>ClusterSecurityGroupName</b> parameter,
            but not both. </para><para> Example: <code>securitygroup1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSecurityGroupCmdlet.TagKey">
            <summary>
            <para>
            <para>A tag key or keys for which you want to return all matching cluster security groups
            that are associated with the specified key or keys. For example, suppose that you
            have security groups that are tagged with keys called <code>owner</code> and <code>environment</code>.
            If you specify both of these tag keys in the request, Amazon Redshift returns a response
            with the security groups that have either or both of these tag keys associated with
            them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSecurityGroupCmdlet.TagValue">
            <summary>
            <para>
            <para>A tag value or values for which you want to return all matching cluster security groups
            that are associated with the specified tag value or values. For example, suppose that
            you have security groups that are tagged with values called <code>admin</code> and
            <code>test</code>. If you specify both of these tag values in the request, Amazon
            Redshift returns a response with the security groups that have either or both of these
            tag values associated with them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSecurityGroupCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point to return a set of response
            records. When the results of a <a>DescribeClusterSecurityGroups</a> request exceed
            the value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code>
            field of the response. You can retrieve the next set of response records by providing
            the returned marker value in the <code>Marker</code> parameter and retrying the request.
            </para><para>Constraints: You can specify either the <b>ClusterSecurityGroupName</b> parameter
            or the <b>Marker</b> parameter, but not both. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSecurityGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned marker value. </para><para>Default: <code>100</code></para><para>Constraints: minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSecurityGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ClusterSecurityGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeClusterSecurityGroupsResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeClusterSecurityGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSecurityGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterSecurityGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterSecurityGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSecurityGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSnapshotCmdlet">
            <summary>
            Returns one or more snapshot objects, which contain metadata about your cluster snapshots.
            By default, this operation returns information about all snapshots of all clusters
            that are owned by you AWS customer account. No information is returned for snapshots
            owned by inactive AWS customer accounts.
            
             
            <para>
            If you specify both tag keys and tag values in the same request, Amazon Redshift returns
            all snapshots that match any combination of the specified keys and values. For example,
            if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code>
            and <code>test</code> for tag values, all snapshots that have any combination of those
            values are returned. Only snapshots that you own are returned in the response; shared
            snapshots are not returned with the tag key and tag value request parameters.
            </para><para>
            If both tag keys and values are omitted from the request, snapshots are returned regardless
            of whether they have tag keys or values associated with them.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSnapshotCmdlet.ClusterExist">
            <summary>
            <para>
            <para>A value that indicates whether to return snapshots only for an existing cluster. You
            can perform table-level restore only by using a snapshot of an existing cluster, that
            is, a cluster that has not been deleted. Values for this parameter work as follows:
            </para><ul><li><para>If <code>ClusterExists</code> is set to <code>true</code>, <code>ClusterIdentifier</code>
            is required.</para></li><li><para>If <code>ClusterExists</code> is set to <code>false</code> and <code>ClusterIdentifier</code>
            isn't specified, all snapshots associated with deleted clusters (orphaned snapshots)
            are returned. </para></li><li><para>If <code>ClusterExists</code> is set to <code>false</code> and <code>ClusterIdentifier</code>
            is specified for a deleted cluster, snapshots associated with that cluster are returned.</para></li><li><para>If <code>ClusterExists</code> is set to <code>false</code> and <code>ClusterIdentifier</code>
            is specified for an existing cluster, no snapshots are returned. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSnapshotCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster which generated the requested snapshots.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSnapshotCmdlet.UtcEndTime">
            <summary>
            <para>
            <para>A time value that requests only snapshots created at or before the specified time.
            The time value is specified in ISO 8601 format. For more information about ISO 8601,
            go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a></para><para>Example: <code>2012-07-16T18:00:00Z</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSnapshotCmdlet.OwnerAccount">
            <summary>
            <para>
            <para>The AWS customer account used to create or copy the snapshot. Use this field to filter
            the results to snapshots owned by a particular account. To describe snapshots you
            own, either specify your AWS customer account, or do not specify the parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSnapshotCmdlet.SnapshotIdentifier">
            <summary>
            <para>
            <para>The snapshot identifier of the snapshot about which to return information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSnapshotCmdlet.SnapshotType">
            <summary>
            <para>
            <para>The type of snapshots for which you are requesting information. By default, snapshots
            of all types are returned.</para><para>Valid Values: <code>automated</code> | <code>manual</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSnapshotCmdlet.SortingEntity">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSnapshotCmdlet.UtcStartTime">
            <summary>
            <para>
            <para>A value that requests only snapshots created at or after the specified time. The time
            value is specified in ISO 8601 format. For more information about ISO 8601, go to
            the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a></para><para>Example: <code>2012-07-16T18:00:00Z</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSnapshotCmdlet.TagKey">
            <summary>
            <para>
            <para>A tag key or keys for which you want to return all matching cluster snapshots that
            are associated with the specified key or keys. For example, suppose that you have
            snapshots that are tagged with keys called <code>owner</code> and <code>environment</code>.
            If you specify both of these tag keys in the request, Amazon Redshift returns a response
            with the snapshots that have either or both of these tag keys associated with them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSnapshotCmdlet.TagValue">
            <summary>
            <para>
            <para>A tag value or values for which you want to return all matching cluster snapshots
            that are associated with the specified tag value or values. For example, suppose that
            you have snapshots that are tagged with values called <code>admin</code> and <code>test</code>.
            If you specify both of these tag values in the request, Amazon Redshift returns a
            response with the snapshots that have either or both of these tag values associated
            with them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSnapshotCmdlet.EndTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc
            results in both EndTime and EndTimeUtc being assigned, the latest assignment to either
            one of the two property is reflected in the value of both. EndTime is provided for
            backwards compatibility only and assigning a non-Utc DateTime to it results in the
            wrong timestamp being passed to the service.</para><para>A time value that requests only snapshots created at or before the specified time.
            The time value is specified in ISO 8601 format. For more information about ISO 8601,
            go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a></para><para>Example: <code>2012-07-16T18:00:00Z</code></para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSnapshotCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point to return a set of response
            records. When the results of a <a>DescribeClusterSnapshots</a> request exceed the
            value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code>
            field of the response. You can retrieve the next set of response records by providing
            the returned marker value in the <code>Marker</code> parameter and retrying the request.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSnapshotCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned marker value. </para><para>Default: <code>100</code></para><para>Constraints: minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSnapshotCmdlet.StartTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or
            StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. StartTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>A value that requests only snapshots created at or after the specified time. The time
            value is specified in ISO 8601 format. For more information about ISO 8601, go to
            the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a></para><para>Example: <code>2012-07-16T18:00:00Z</code></para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Snapshots'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeClusterSnapshotsResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeClusterSnapshotsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSnapshotCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSubnetGroupCmdlet">
            <summary>
            Returns one or more cluster subnet group objects, which contain metadata about your
            cluster subnet groups. By default, this operation returns information about all cluster
            subnet groups that are defined in you AWS account.
            
             
            <para>
            If you specify both tag keys and tag values in the same request, Amazon Redshift returns
            all subnet groups that match any combination of the specified keys and values. For
            example, if you have <code>owner</code> and <code>environment</code> for tag keys,
            and <code>admin</code> and <code>test</code> for tag values, all subnet groups that
            have any combination of those values are returned.
            </para><para>
            If both tag keys and values are omitted from the request, subnet groups are returned
            regardless of whether they have tag keys or values associated with them.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSubnetGroupCmdlet.ClusterSubnetGroupName">
            <summary>
            <para>
            <para>The name of the cluster subnet group for which information is requested.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSubnetGroupCmdlet.TagKey">
            <summary>
            <para>
            <para>A tag key or keys for which you want to return all matching cluster subnet groups
            that are associated with the specified key or keys. For example, suppose that you
            have subnet groups that are tagged with keys called <code>owner</code> and <code>environment</code>.
            If you specify both of these tag keys in the request, Amazon Redshift returns a response
            with the subnet groups that have either or both of these tag keys associated with
            them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSubnetGroupCmdlet.TagValue">
            <summary>
            <para>
            <para>A tag value or values for which you want to return all matching cluster subnet groups
            that are associated with the specified tag value or values. For example, suppose that
            you have subnet groups that are tagged with values called <code>admin</code> and <code>test</code>.
            If you specify both of these tag values in the request, Amazon Redshift returns a
            response with the subnet groups that have either or both of these tag values associated
            with them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSubnetGroupCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point to return a set of response
            records. When the results of a <a>DescribeClusterSubnetGroups</a> request exceed the
            value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code>
            field of the response. You can retrieve the next set of response records by providing
            the returned marker value in the <code>Marker</code> parameter and retrying the request.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSubnetGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned marker value. </para><para>Default: <code>100</code></para><para>Constraints: minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSubnetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ClusterSubnetGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeClusterSubnetGroupsResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeClusterSubnetGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSubnetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterSubnetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterSubnetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterSubnetGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSClusterTrackCmdlet">
            <summary>
            Returns a list of all the available maintenance tracks.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterTrackCmdlet.MaintenanceTrackName">
            <summary>
            <para>
            <para>The name of the maintenance track. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterTrackCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point to return a set of response
            records. When the results of a <code>DescribeClusterTracks</code> request exceed the
            value specified in <code>MaxRecords</code>, Amazon Redshift returns a value in the
            <code>Marker</code> field of the response. You can retrieve the next set of response
            records by providing the returned marker value in the <code>Marker</code> parameter
            and retrying the request. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterTrackCmdlet.MaxRecord">
            <summary>
            <para>
            <para>An integer value for the maximum number of maintenance tracks to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterTrackCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MaintenanceTracks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeClusterTracksResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeClusterTracksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterTrackCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MaintenanceTrackName parameter.
            The -PassThru parameter is deprecated, use -Select '^MaintenanceTrackName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterTrackCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSClusterVersionCmdlet">
            <summary>
            Returns descriptions of the available Amazon Redshift cluster versions. You can call
            this operation even before creating any clusters to learn more about the Amazon Redshift
            versions. For more information about managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
            Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterVersionCmdlet.ClusterParameterGroupFamily">
            <summary>
            <para>
            <para>The name of a specific cluster parameter group family to return details for.</para><para>Constraints:</para><ul><li><para>Must be 1 to 255 alphanumeric characters</para></li><li><para>First character must be a letter</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterVersionCmdlet.ClusterVersion">
            <summary>
            <para>
            <para>The specific cluster version to return.</para><para>Example: <code>1.0</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterVersionCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point to return a set of response
            records. When the results of a <a>DescribeClusterVersions</a> request exceed the value
            specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code>
            field of the response. You can retrieve the next set of response records by providing
            the returned marker value in the <code>Marker</code> parameter and retrying the request.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterVersionCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned marker value. </para><para>Default: <code>100</code></para><para>Constraints: minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ClusterVersions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeClusterVersionsResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeClusterVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterVersion parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterVersion' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSClusterVersionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSDefaultClusterParameterCmdlet">
            <summary>
            Returns a list of parameter settings for the specified parameter group family.
            
             
            <para>
             For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon
            Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSDefaultClusterParameterCmdlet.ParameterGroupFamily">
            <summary>
            <para>
            <para>The name of the cluster parameter group family.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSDefaultClusterParameterCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point to return a set of response
            records. When the results of a <a>DescribeDefaultClusterParameters</a> request exceed
            the value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code>
            field of the response. You can retrieve the next set of response records by providing
            the returned marker value in the <code>Marker</code> parameter and retrying the request.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSDefaultClusterParameterCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned marker value. </para><para>Default: <code>100</code></para><para>Constraints: minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSDefaultClusterParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DefaultClusterParameters.Parameters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeDefaultClusterParametersResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeDefaultClusterParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSDefaultClusterParameterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ParameterGroupFamily parameter.
            The -PassThru parameter is deprecated, use -Select '^ParameterGroupFamily' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSDefaultClusterParameterCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSEventCmdlet">
            <summary>
            Returns events related to clusters, security groups, snapshots, and parameter groups
            for the past 14 days. Events specific to a particular cluster, security group, snapshot
            or parameter group can be obtained by providing the name as a parameter. By default,
            the past hour of events are returned.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventCmdlet.Duration">
            <summary>
            <para>
            <para>The number of minutes prior to the time of the request for which to retrieve events.
            For example, if the request is sent at 18:00 and you specify a duration of 60, then
            only events which have occurred after 17:00 will be returned.</para><para>Default: <code>60</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventCmdlet.UtcEndTime">
            <summary>
            <para>
            <para>The end of the time interval for which to retrieve events, specified in ISO 8601 format.
            For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a></para><para>Example: <code>2009-07-08T18:00Z</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventCmdlet.SourceIdentifier">
            <summary>
            <para>
            <para>The identifier of the event source for which events will be returned. If this parameter
            is not specified, then all sources are included in the response.</para><para>Constraints:</para><para>If <i>SourceIdentifier</i> is supplied, <i>SourceType</i> must also be provided.</para><ul><li><para>Specify a cluster identifier when <i>SourceType</i> is <code>cluster</code>.</para></li><li><para>Specify a cluster security group name when <i>SourceType</i> is <code>cluster-security-group</code>.</para></li><li><para>Specify a cluster parameter group name when <i>SourceType</i> is <code>cluster-parameter-group</code>.</para></li><li><para>Specify a cluster snapshot identifier when <i>SourceType</i> is <code>cluster-snapshot</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventCmdlet.SourceType">
            <summary>
            <para>
            <para>The event source to retrieve events for. If no value is specified, all events are
            returned.</para><para>Constraints:</para><para>If <i>SourceType</i> is supplied, <i>SourceIdentifier</i> must also be provided.</para><ul><li><para>Specify <code>cluster</code> when <i>SourceIdentifier</i> is a cluster identifier.</para></li><li><para>Specify <code>cluster-security-group</code> when <i>SourceIdentifier</i> is a cluster
            security group name.</para></li><li><para>Specify <code>cluster-parameter-group</code> when <i>SourceIdentifier</i> is a cluster
            parameter group name.</para></li><li><para>Specify <code>cluster-snapshot</code> when <i>SourceIdentifier</i> is a cluster snapshot
            identifier.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventCmdlet.UtcStartTime">
            <summary>
            <para>
            <para>The beginning of the time interval to retrieve events for, specified in ISO 8601 format.
            For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a></para><para>Example: <code>2009-07-08T18:00Z</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventCmdlet.EndTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc
            results in both EndTime and EndTimeUtc being assigned, the latest assignment to either
            one of the two property is reflected in the value of both. EndTime is provided for
            backwards compatibility only and assigning a non-Utc DateTime to it results in the
            wrong timestamp being passed to the service.</para><para>The end of the time interval for which to retrieve events, specified in ISO 8601 format.
            For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a></para><para>Example: <code>2009-07-08T18:00Z</code></para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point to return a set of response
            records. When the results of a <a>DescribeEvents</a> request exceed the value specified
            in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code> field of
            the response. You can retrieve the next set of response records by providing the returned
            marker value in the <code>Marker</code> parameter and retrying the request. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned marker value. </para><para>Default: <code>100</code></para><para>Constraints: minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventCmdlet.StartTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or
            StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. StartTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The beginning of the time interval to retrieve events for, specified in ISO 8601 format.
            For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a></para><para>Example: <code>2009-07-08T18:00Z</code></para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Events'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeEventsResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeEventsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSEventCategoryCmdlet">
            <summary>
            Displays a list of event categories for all event source types, or for a specified
            source type. For a list of the event categories and source types, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-event-notifications.html">Amazon
            Redshift Event Notifications</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventCategoryCmdlet.SourceType">
            <summary>
            <para>
            <para>The source type, such as cluster or parameter group, to which the described event
            categories apply.</para><para>Valid values: cluster, cluster-snapshot, cluster-parameter-group, cluster-security-group,
            and scheduled-action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventCategoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventCategoriesMapList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeEventCategoriesResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeEventCategoriesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventCategoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceType parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSEventSubscriptionCmdlet">
            <summary>
            Lists descriptions of all the Amazon Redshift event notification subscriptions for
            a customer account. If you specify a subscription name, lists the description for
            that subscription.
            
             
            <para>
            If you specify both tag keys and tag values in the same request, Amazon Redshift returns
            all event notification subscriptions that match any combination of the specified keys
            and values. For example, if you have <code>owner</code> and <code>environment</code>
            for tag keys, and <code>admin</code> and <code>test</code> for tag values, all subscriptions
            that have any combination of those values are returned.
            </para><para>
            If both tag keys and values are omitted from the request, subscriptions are returned
            regardless of whether they have tag keys or values associated with them.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventSubscriptionCmdlet.SubscriptionName">
            <summary>
            <para>
            <para>The name of the Amazon Redshift event notification subscription to be described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventSubscriptionCmdlet.TagKey">
            <summary>
            <para>
            <para>A tag key or keys for which you want to return all matching event notification subscriptions
            that are associated with the specified key or keys. For example, suppose that you
            have subscriptions that are tagged with keys called <code>owner</code> and <code>environment</code>.
            If you specify both of these tag keys in the request, Amazon Redshift returns a response
            with the subscriptions that have either or both of these tag keys associated with
            them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventSubscriptionCmdlet.TagValue">
            <summary>
            <para>
            <para>A tag value or values for which you want to return all matching event notification
            subscriptions that are associated with the specified tag value or values. For example,
            suppose that you have subscriptions that are tagged with values called <code>admin</code>
            and <code>test</code>. If you specify both of these tag values in the request, Amazon
            Redshift returns a response with the subscriptions that have either or both of these
            tag values associated with them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventSubscriptionCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point to return a set of response
            records. When the results of a DescribeEventSubscriptions request exceed the value
            specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code>
            field of the response. You can retrieve the next set of response records by providing
            the returned marker value in the <code>Marker</code> parameter and retrying the request.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventSubscriptionCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned marker value. </para><para>Default: <code>100</code></para><para>Constraints: minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventSubscriptionsList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeEventSubscriptionsResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeEventSubscriptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSEventSubscriptionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSHsmClientCertificateCmdlet">
            <summary>
            Returns information about the specified HSM client certificate. If no certificate
            ID is specified, returns information about all the HSM certificates owned by your
            AWS customer account.
            
             
            <para>
            If you specify both tag keys and tag values in the same request, Amazon Redshift returns
            all HSM client certificates that match any combination of the specified keys and values.
            For example, if you have <code>owner</code> and <code>environment</code> for tag keys,
            and <code>admin</code> and <code>test</code> for tag values, all HSM client certificates
            that have any combination of those values are returned.
            </para><para>
            If both tag keys and values are omitted from the request, HSM client certificates
            are returned regardless of whether they have tag keys or values associated with them.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSHsmClientCertificateCmdlet.HsmClientCertificateIdentifier">
            <summary>
            <para>
            <para>The identifier of a specific HSM client certificate for which you want information.
            If no identifier is specified, information is returned for all HSM client certificates
            owned by your AWS customer account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSHsmClientCertificateCmdlet.TagKey">
            <summary>
            <para>
            <para>A tag key or keys for which you want to return all matching HSM client certificates
            that are associated with the specified key or keys. For example, suppose that you
            have HSM client certificates that are tagged with keys called <code>owner</code> and
            <code>environment</code>. If you specify both of these tag keys in the request, Amazon
            Redshift returns a response with the HSM client certificates that have either or both
            of these tag keys associated with them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSHsmClientCertificateCmdlet.TagValue">
            <summary>
            <para>
            <para>A tag value or values for which you want to return all matching HSM client certificates
            that are associated with the specified tag value or values. For example, suppose that
            you have HSM client certificates that are tagged with values called <code>admin</code>
            and <code>test</code>. If you specify both of these tag values in the request, Amazon
            Redshift returns a response with the HSM client certificates that have either or both
            of these tag values associated with them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSHsmClientCertificateCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point to return a set of response
            records. When the results of a <a>DescribeHsmClientCertificates</a> request exceed
            the value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code>
            field of the response. You can retrieve the next set of response records by providing
            the returned marker value in the <code>Marker</code> parameter and retrying the request.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSHsmClientCertificateCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned marker value. </para><para>Default: <code>100</code></para><para>Constraints: minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSHsmClientCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HsmClientCertificates'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeHsmClientCertificatesResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeHsmClientCertificatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSHsmClientCertificateCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSHsmConfigurationCmdlet">
            <summary>
            Returns information about the specified Amazon Redshift HSM configuration. If no configuration
            ID is specified, returns information about all the HSM configurations owned by your
            AWS customer account.
            
             
            <para>
            If you specify both tag keys and tag values in the same request, Amazon Redshift returns
            all HSM connections that match any combination of the specified keys and values. For
            example, if you have <code>owner</code> and <code>environment</code> for tag keys,
            and <code>admin</code> and <code>test</code> for tag values, all HSM connections that
            have any combination of those values are returned.
            </para><para>
            If both tag keys and values are omitted from the request, HSM connections are returned
            regardless of whether they have tag keys or values associated with them.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSHsmConfigurationCmdlet.HsmConfigurationIdentifier">
            <summary>
            <para>
            <para>The identifier of a specific Amazon Redshift HSM configuration to be described. If
            no identifier is specified, information is returned for all HSM configurations owned
            by your AWS customer account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSHsmConfigurationCmdlet.TagKey">
            <summary>
            <para>
            <para>A tag key or keys for which you want to return all matching HSM configurations that
            are associated with the specified key or keys. For example, suppose that you have
            HSM configurations that are tagged with keys called <code>owner</code> and <code>environment</code>.
            If you specify both of these tag keys in the request, Amazon Redshift returns a response
            with the HSM configurations that have either or both of these tag keys associated
            with them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSHsmConfigurationCmdlet.TagValue">
            <summary>
            <para>
            <para>A tag value or values for which you want to return all matching HSM configurations
            that are associated with the specified tag value or values. For example, suppose that
            you have HSM configurations that are tagged with values called <code>admin</code>
            and <code>test</code>. If you specify both of these tag values in the request, Amazon
            Redshift returns a response with the HSM configurations that have either or both of
            these tag values associated with them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSHsmConfigurationCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point to return a set of response
            records. When the results of a <a>DescribeHsmConfigurations</a> request exceed the
            value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code>
            field of the response. You can retrieve the next set of response records by providing
            the returned marker value in the <code>Marker</code> parameter and retrying the request.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSHsmConfigurationCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned marker value. </para><para>Default: <code>100</code></para><para>Constraints: minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSHsmConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HsmConfigurations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeHsmConfigurationsResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeHsmConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSHsmConfigurationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSLoggingStatusCmdlet">
            <summary>
            Describes whether information, such as queries and connection attempts, is being logged
            for the specified Amazon Redshift cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSLoggingStatusCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster from which to get the logging status.</para><para>Example: <code>examplecluster</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSLoggingStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeLoggingStatusResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeLoggingStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSLoggingStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSNodeConfigurationOptionCmdlet">
            <summary>
            Returns properties of possible node configurations such as node type, number of nodes,
            and disk usage for the specified action type.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSNodeConfigurationOptionCmdlet.ActionType">
            <summary>
            <para>
            <para>The action type to evaluate for possible node configurations. Specify "restore-cluster"
            to get configuration combinations based on an existing snapshot. Specify "recommend-node-config"
            to get configuration recommendations based on an existing cluster or snapshot. Specify
            "resize-cluster" to get configuration combinations for elastic resize based on an
            existing cluster. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSNodeConfigurationOptionCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster to evaluate for possible node configurations.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSNodeConfigurationOptionCmdlet.Filter">
            <summary>
            <para>
            <para>A set of name, operator, and value items to filter the results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSNodeConfigurationOptionCmdlet.OwnerAccount">
            <summary>
            <para>
            <para>The AWS customer account used to create or copy the snapshot. Required if you are
            restoring a snapshot you do not own, optional if you own the snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSNodeConfigurationOptionCmdlet.SnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier of the snapshot to evaluate for possible node configurations.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSNodeConfigurationOptionCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point to return a set of response
            records. When the results of a <a>DescribeNodeConfigurationOptions</a> request exceed
            the value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code>
            field of the response. You can retrieve the next set of response records by providing
            the returned marker value in the <code>Marker</code> parameter and retrying the request.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSNodeConfigurationOptionCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned marker value. </para><para>Default: <code>500</code></para><para>Constraints: minimum 100, maximum 500.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSNodeConfigurationOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NodeConfigurationOptionList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeNodeConfigurationOptionsResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeNodeConfigurationOptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSNodeConfigurationOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ActionType parameter.
            The -PassThru parameter is deprecated, use -Select '^ActionType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSNodeConfigurationOptionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSOrderableClusterOptionCmdlet">
            <summary>
            Returns a list of orderable cluster options. Before you create a new cluster you can
            use this operation to find what options are available, such as the EC2 Availability
            Zones (AZ) in the specific AWS Region that you can specify, and the node types you
            can request. The node types differ by available storage, memory, CPU and price. With
            the cost involved you might want to obtain a list of cluster options in the specific
            region and specify values when creating a cluster. For more information about managing
            clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
            Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSOrderableClusterOptionCmdlet.ClusterVersion">
            <summary>
            <para>
            <para>The version filter value. Specify this parameter to show only the available offerings
            matching the specified version.</para><para>Default: All versions.</para><para>Constraints: Must be one of the version returned from <a>DescribeClusterVersions</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSOrderableClusterOptionCmdlet.NodeType">
            <summary>
            <para>
            <para>The node type filter value. Specify this parameter to show only the available offerings
            matching the specified node type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSOrderableClusterOptionCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point to return a set of response
            records. When the results of a <a>DescribeOrderableClusterOptions</a> request exceed
            the value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code>
            field of the response. You can retrieve the next set of response records by providing
            the returned marker value in the <code>Marker</code> parameter and retrying the request.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSOrderableClusterOptionCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned marker value. </para><para>Default: <code>100</code></para><para>Constraints: minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSOrderableClusterOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OrderableClusterOptions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeOrderableClusterOptionsResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeOrderableClusterOptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSOrderableClusterOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterVersion parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterVersion' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSOrderableClusterOptionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeCmdlet">
            <summary>
            Returns the descriptions of the reserved nodes.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeCmdlet.ReservedNodeId">
            <summary>
            <para>
            <para>Identifier for the node reservation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point to return a set of response
            records. When the results of a <a>DescribeReservedNodes</a> request exceed the value
            specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code>
            field of the response. You can retrieve the next set of response records by providing
            the returned marker value in the <code>Marker</code> parameter and retrying the request.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned marker value. </para><para>Default: <code>100</code></para><para>Constraints: minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReservedNodes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeReservedNodesResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeReservedNodesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedNodeId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedNodeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeExchangeOfferingCmdlet">
            <summary>
            Returns an array of DC2 ReservedNodeOfferings that matches the payment type, term,
            and usage price of the given DC1 reserved node.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeExchangeOfferingCmdlet.ReservedNodeId">
            <summary>
            <para>
            <para>A string representing the node identifier for the DC1 Reserved Node to be exchanged.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeExchangeOfferingCmdlet.Marker">
            <summary>
            <para>
            <para>A value that indicates the starting point for the next set of ReservedNodeOfferings.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeExchangeOfferingCmdlet.MaxRecord">
            <summary>
            <para>
            <para>An integer setting the maximum number of ReservedNodeOfferings to retrieve.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeExchangeOfferingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReservedNodeOfferings'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.GetReservedNodeExchangeOfferingsResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.GetReservedNodeExchangeOfferingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeExchangeOfferingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedNodeId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedNodeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeExchangeOfferingCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeOfferingCmdlet">
            <summary>
            Returns a list of the available reserved node offerings by Amazon Redshift with their
            descriptions including the node type, the fixed and recurring costs of reserving the
            node and duration the node will be reserved for you. These descriptions help you determine
            which reserve node offering you want to purchase. You then use the unique offering
            ID in you call to <a>PurchaseReservedNodeOffering</a> to reserve one or more nodes
            for your Amazon Redshift cluster. 
            
             
            <para>
             For more information about reserved node offerings, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/purchase-reserved-node-instance.html">Purchasing
            Reserved Nodes</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeOfferingCmdlet.ReservedNodeOfferingId">
            <summary>
            <para>
            <para>The unique identifier for the offering.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeOfferingCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point to return a set of response
            records. When the results of a <a>DescribeReservedNodeOfferings</a> request exceed
            the value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code>
            field of the response. You can retrieve the next set of response records by providing
            the returned marker value in the <code>Marker</code> parameter and retrying the request.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeOfferingCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned marker value. </para><para>Default: <code>100</code></para><para>Constraints: minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeOfferingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReservedNodeOfferings'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeReservedNodeOfferingsResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeReservedNodeOfferingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeOfferingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedNodeOfferingId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedNodeOfferingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSReservedNodeOfferingCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSResizeCmdlet">
            <summary>
            Returns information about the last resize operation for the specified cluster. If
            no resize operation has ever been initiated for the specified cluster, a <code>HTTP
            404</code> error is returned. If a resize operation was initiated and completed, the
            status of the resize remains as <code>SUCCEEDED</code> until the next resize. 
            
             
            <para>
            A resize operation can be requested using <a>ModifyCluster</a> and specifying a different
            number or type of nodes for the cluster. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSResizeCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The unique identifier of a cluster whose resize progress you are requesting. This
            parameter is case-sensitive.</para><para>By default, resize operations for all clusters defined for an AWS account are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSResizeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeResizeResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeResizeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSResizeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSResourceTagCmdlet">
            <summary>
            Returns a list of tags. You can return tags from a specific resource by specifying
            an ARN, or you can return all tags for a given type of resource, such as clusters,
            snapshots, and so on.
            
             
            <para>
            The following are limitations for <code>DescribeTags</code>: 
            </para><ul><li><para>
            You cannot specify an ARN and a resource-type value together in the same request.
            </para></li><li><para>
            You cannot use the <code>MaxRecords</code> and <code>Marker</code> parameters together
            with the ARN parameter.
            </para></li><li><para>
            The <code>MaxRecords</code> parameter can be a range from 10 to 50 results to return
            in a request.
            </para></li></ul><para>
            If you specify both tag keys and tag values in the same request, Amazon Redshift returns
            all resources that match any combination of the specified keys and values. For example,
            if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code>
            and <code>test</code> for tag values, all resources that have any combination of those
            values are returned.
            </para><para>
            If both tag keys and values are omitted from the request, resources are returned regardless
            of whether they have tag keys or values associated with them.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSResourceTagCmdlet.ResourceName">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for which you want to describe the tag or tags. For
            example, <code>arn:aws:redshift:us-east-2:123456789:cluster:t1</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSResourceTagCmdlet.ResourceType">
            <summary>
            <para>
            <para>The type of resource with which you want to view tags. Valid resource types are: </para><ul><li><para>Cluster</para></li><li><para>CIDR/IP</para></li><li><para>EC2 security group</para></li><li><para>Snapshot</para></li><li><para>Cluster security group</para></li><li><para>Subnet group</para></li><li><para>HSM connection</para></li><li><para>HSM certificate</para></li><li><para>Parameter group</para></li><li><para>Snapshot copy grant</para></li></ul><para>For more information about Amazon Redshift resource types and constructing ARNs, go
            to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-overview.html#redshift-iam-access-control-specify-actions">Specifying
            Policy Elements: Actions, Effects, Resources, and Principals</a> in the Amazon Redshift
            Cluster Management Guide. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>A tag key or keys for which you want to return all matching resources that are associated
            with the specified key or keys. For example, suppose that you have resources tagged
            with keys called <code>owner</code> and <code>environment</code>. If you specify both
            of these tag keys in the request, Amazon Redshift returns a response with all resources
            that have either or both of these tag keys associated with them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSResourceTagCmdlet.TagValue">
            <summary>
            <para>
            <para>A tag value or values for which you want to return all matching resources that are
            associated with the specified value or values. For example, suppose that you have
            resources tagged with values called <code>admin</code> and <code>test</code>. If you
            specify both of these tag values in the request, Amazon Redshift returns a response
            with all resources that have either or both of these tag values associated with them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSResourceTagCmdlet.Marker">
            <summary>
            <para>
            <para>A value that indicates the starting point for the next set of response records in
            a subsequent request. If a value is returned in a response, you can retrieve the next
            set of records by providing this returned marker value in the <code>marker</code>
            parameter and retrying the command. If the <code>marker</code> field is empty, all
            response records have been retrieved for the request. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSResourceTagCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number or response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned <code>marker</code> value. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TaggedResources'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeTagsResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeTagsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSResourceTagCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSScheduledActionCmdlet">
            <summary>
            Describes properties of scheduled actions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSScheduledActionCmdlet.Active">
            <summary>
            <para>
            <para>If true, retrieve only active scheduled actions. If false, retrieve only disabled
            scheduled actions. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSScheduledActionCmdlet.EndTime">
            <summary>
            <para>
            <para>The end time in UTC of the scheduled action to retrieve. Only active scheduled actions
            that have invocations before this time are retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSScheduledActionCmdlet.Filter">
            <summary>
            <para>
            <para>List of scheduled action filters. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSScheduledActionCmdlet.ScheduledActionName">
            <summary>
            <para>
            <para>The name of the scheduled action to retrieve. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSScheduledActionCmdlet.StartTime">
            <summary>
            <para>
            <para>The start time in UTC of the scheduled actions to retrieve. Only active scheduled
            actions that have invocations after this time are retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSScheduledActionCmdlet.TargetActionType">
            <summary>
            <para>
            <para>The type of the scheduled actions to retrieve. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSScheduledActionCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point to return a set of response
            records. When the results of a <a>DescribeScheduledActions</a> request exceed the
            value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code>
            field of the response. You can retrieve the next set of response records by providing
            the returned marker value in the <code>Marker</code> parameter and retrying the request.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSScheduledActionCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned marker value. </para><para>Default: <code>100</code></para><para>Constraints: minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSScheduledActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ScheduledActions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeScheduledActionsResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeScheduledActionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSScheduledActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScheduledActionName parameter.
            The -PassThru parameter is deprecated, use -Select '^ScheduledActionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSScheduledActionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSSnapshotCopyGrantCmdlet">
            <summary>
            Returns a list of snapshot copy grants owned by the AWS account in the destination
            region.
            
             
            <para>
             For more information about managing snapshot copy grants, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html">Amazon
            Redshift Database Encryption</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSSnapshotCopyGrantCmdlet.SnapshotCopyGrantName">
            <summary>
            <para>
            <para>The name of the snapshot copy grant.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSSnapshotCopyGrantCmdlet.TagKey">
            <summary>
            <para>
            <para>A tag key or keys for which you want to return all matching resources that are associated
            with the specified key or keys. For example, suppose that you have resources tagged
            with keys called <code>owner</code> and <code>environment</code>. If you specify both
            of these tag keys in the request, Amazon Redshift returns a response with all resources
            that have either or both of these tag keys associated with them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSSnapshotCopyGrantCmdlet.TagValue">
            <summary>
            <para>
            <para>A tag value or values for which you want to return all matching resources that are
            associated with the specified value or values. For example, suppose that you have
            resources tagged with values called <code>admin</code> and <code>test</code>. If you
            specify both of these tag values in the request, Amazon Redshift returns a response
            with all resources that have either or both of these tag values associated with them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSSnapshotCopyGrantCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point to return a set of response
            records. When the results of a <code>DescribeSnapshotCopyGrant</code> request exceed
            the value specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code>
            field of the response. You can retrieve the next set of response records by providing
            the returned marker value in the <code>Marker</code> parameter and retrying the request.
            </para><para>Constraints: You can specify either the <b>SnapshotCopyGrantName</b> parameter or
            the <b>Marker</b> parameter, but not both. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSSnapshotCopyGrantCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned marker value. </para><para>Default: <code>100</code></para><para>Constraints: minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSSnapshotCopyGrantCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SnapshotCopyGrants'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeSnapshotCopyGrantsResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeSnapshotCopyGrantsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSSnapshotCopyGrantCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSSnapshotScheduleCmdlet">
            <summary>
            Returns a list of snapshot schedules.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSSnapshotScheduleCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The unique identifier for the cluster whose snapshot schedules you want to view.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSSnapshotScheduleCmdlet.ScheduleIdentifier">
            <summary>
            <para>
            <para>A unique identifier for a snapshot schedule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSSnapshotScheduleCmdlet.TagKey">
            <summary>
            <para>
            <para>The key value for a snapshot schedule tag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSSnapshotScheduleCmdlet.TagValue">
            <summary>
            <para>
            <para>The value corresponding to the key of the snapshot schedule tag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSSnapshotScheduleCmdlet.Marker">
            <summary>
            <para>
            <para>A value that indicates the starting point for the next set of response records in
            a subsequent request. If a value is returned in a response, you can retrieve the next
            set of records by providing this returned marker value in the <code>marker</code>
            parameter and retrying the command. If the <code>marker</code> field is empty, all
            response records have been retrieved for the request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSSnapshotScheduleCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number or response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned <code>marker</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSSnapshotScheduleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SnapshotSchedules'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeSnapshotSchedulesResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeSnapshotSchedulesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSSnapshotScheduleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSSnapshotScheduleCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSStorageCmdlet">
            <summary>
            Returns account level backups storage size and provisional storage.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSStorageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeStorageResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeStorageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSTableRestoreStatusCmdlet">
            <summary>
            Lists the status of one or more table restore requests made using the <a>RestoreTableFromClusterSnapshot</a>
            API action. If you don't specify a value for the <code>TableRestoreRequestId</code>
            parameter, then <code>DescribeTableRestoreStatus</code> returns the status of all
            table restore requests ordered by the date and time of the request in ascending order.
            Otherwise <code>DescribeTableRestoreStatus</code> returns the status of the table
            specified by <code>TableRestoreRequestId</code>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSTableRestoreStatusCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The Amazon Redshift cluster that the table is being restored to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSTableRestoreStatusCmdlet.TableRestoreRequestId">
            <summary>
            <para>
            <para>The identifier of the table restore request to return status for. If you don't specify
            a <code>TableRestoreRequestId</code> value, then <code>DescribeTableRestoreStatus</code>
            returns the status of all in-progress table restore requests.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSTableRestoreStatusCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous <code>DescribeTableRestoreStatus</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by the <code>MaxRecords</code> parameter.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSTableRestoreStatusCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSTableRestoreStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TableRestoreStatusDetails'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeTableRestoreStatusResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeTableRestoreStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSTableRestoreStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSTableRestoreStatusCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.GetRSUsageLimitCmdlet">
            <summary>
            Shows usage limits on a cluster. Results are filtered based on the combination of
            input usage limit identifier, cluster identifier, and feature type parameters:
            
             <ul><li><para>
            If usage limit identifier, cluster identifier, and feature type are not provided,
            then all usage limit objects for the current account in the current region are returned.
            </para></li><li><para>
            If usage limit identifier is provided, then the corresponding usage limit object is
            returned.
            </para></li><li><para>
            If cluster identifier is provided, then all usage limit objects for the specified
            cluster are returned.
            </para></li><li><para>
            If cluster identifier and feature type are provided, then all usage limit objects
            for the combination of cluster and feature are returned.
            </para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSUsageLimitCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster for which you want to describe usage limits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSUsageLimitCmdlet.FeatureType">
            <summary>
            <para>
            <para>The feature type for which you want to describe usage limits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSUsageLimitCmdlet.TagKey">
            <summary>
            <para>
            <para>A tag key or keys for which you want to return all matching usage limit objects that
            are associated with the specified key or keys. For example, suppose that you have
            parameter groups that are tagged with keys called <code>owner</code> and <code>environment</code>.
            If you specify both of these tag keys in the request, Amazon Redshift returns a response
            with the usage limit objects have either or both of these tag keys associated with
            them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSUsageLimitCmdlet.TagValue">
            <summary>
            <para>
            <para>A tag value or values for which you want to return all matching usage limit objects
            that are associated with the specified tag value or values. For example, suppose that
            you have parameter groups that are tagged with values called <code>admin</code> and
            <code>test</code>. If you specify both of these tag values in the request, Amazon
            Redshift returns a response with the usage limit objects that have either or both
            of these tag values associated with them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSUsageLimitCmdlet.UsageLimitId">
            <summary>
            <para>
            <para>The identifier of the usage limit to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSUsageLimitCmdlet.Marker">
            <summary>
            <para>
            <para>An optional parameter that specifies the starting point to return a set of response
            records. When the results of a <a>DescribeUsageLimits</a> request exceed the value
            specified in <code>MaxRecords</code>, AWS returns a value in the <code>Marker</code>
            field of the response. You can retrieve the next set of response records by providing
            the returned marker value in the <code>Marker</code> parameter and retrying the request.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSUsageLimitCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of response records to return in each call. If the number of remaining
            response records exceeds the specified <code>MaxRecords</code> value, a value is returned
            in a <code>marker</code> field of the response. You can retrieve the next set of records
            by retrying the command with the returned marker value. </para><para>Default: <code>100</code></para><para>Constraints: minimum 20, maximum 100.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSUsageLimitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UsageLimits'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DescribeUsageLimitsResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DescribeUsageLimitsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSUsageLimitCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.GetRSUsageLimitCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet">
            <summary>
            Creates a new cluster with the specified parameters.
            
             
            <para>
            To create a cluster in Virtual Private Cloud (VPC), you must provide a cluster subnet
            group name. The cluster subnet group identifies the subnets of your VPC that Amazon
            Redshift uses when creating the cluster. For more information about managing clusters,
            go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
            Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.AdditionalInfo">
            <summary>
            <para>
            <para>Reserved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.AllowVersionUpgrade">
            <summary>
            <para>
            <para>If <code>true</code>, major version upgrades can be applied during the maintenance
            window to the Amazon Redshift engine that is running on the cluster.</para><para>When a new major version of the Amazon Redshift engine is released, you can request
            that the service automatically apply upgrades during the maintenance window to the
            Amazon Redshift engine that is running on your cluster.</para><para>Default: <code>true</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.AutomatedSnapshotRetentionPeriod">
            <summary>
            <para>
            <para>The number of days that automated snapshots are retained. If the value is 0, automated
            snapshots are disabled. Even if automated snapshots are disabled, you can still create
            manual snapshots when you want with <a>CreateClusterSnapshot</a>. </para><para>Default: <code>1</code></para><para>Constraints: Must be a value from 0 to 35.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the
            cluster. For example, if you have several EC2 instances running in a specific Availability
            Zone, then you might want the cluster to be provisioned in the same zone in order
            to decrease network latency.</para><para>Default: A random, system-chosen Availability Zone in the region that is specified
            by the endpoint.</para><para>Example: <code>us-east-2d</code></para><para>Constraint: The specified Availability Zone must be in the same region as the current
            endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>A unique identifier for the cluster. You use this identifier to refer to the cluster
            for any subsequent cluster operations such as deleting or modifying. The identifier
            also appears in the Amazon Redshift console.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 alphanumeric characters or hyphens.</para></li><li><para>Alphabetic characters must be lowercase.</para></li><li><para>First character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li><li><para>Must be unique for all clusters within an AWS account.</para></li></ul><para>Example: <code>myexamplecluster</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.ClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the parameter group to be associated with this cluster.</para><para>Default: The default Amazon Redshift cluster parameter group. For information about
            the default parameter group, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Working
            with Amazon Redshift Parameter Groups</a></para><para>Constraints:</para><ul><li><para>Must be 1 to 255 alphanumeric characters or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.ClusterSecurityGroup">
            <summary>
            <para>
            <para>A list of security groups to be associated with this cluster.</para><para>Default: The default cluster security group for Amazon Redshift.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.ClusterSubnetGroupName">
            <summary>
            <para>
            <para>The name of a cluster subnet group to be associated with this cluster.</para><para>If this parameter is not provided the resulting cluster will be deployed outside virtual
            private cloud (VPC).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.ClusterType">
            <summary>
            <para>
            <para>The type of the cluster. When cluster type is specified as</para><ul><li><para><code>single-node</code>, the <b>NumberOfNodes</b> parameter is not required.</para></li><li><para><code>multi-node</code>, the <b>NumberOfNodes</b> parameter is required.</para></li></ul><para>Valid Values: <code>multi-node</code> | <code>single-node</code></para><para>Default: <code>multi-node</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.ClusterVersion">
            <summary>
            <para>
            <para>The version of the Amazon Redshift engine software that you want to deploy on the
            cluster.</para><para>The version selected runs on all the nodes in the cluster.</para><para>Constraints: Only version 1.0 is currently available.</para><para>Example: <code>1.0</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.DBName">
            <summary>
            <para>
            <para>The name of the first database to be created when the cluster is created.</para><para>To create additional databases after the cluster is created, connect to the cluster
            with a SQL client and use SQL commands to create a database. For more information,
            go to <a href="https://docs.aws.amazon.com/redshift/latest/dg/t_creating_database.html">Create
            a Database</a> in the Amazon Redshift Database Developer Guide. </para><para>Default: <code>dev</code></para><para>Constraints:</para><ul><li><para>Must contain 1 to 64 alphanumeric characters.</para></li><li><para>Must contain only lowercase letters.</para></li><li><para>Cannot be a word that is reserved by the service. A list of reserved words can be
            found in <a href="https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved
            Words</a> in the Amazon Redshift Database Developer Guide. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.ElasticIp">
            <summary>
            <para>
            <para>The Elastic IP (EIP) address for the cluster.</para><para>Constraints: The cluster must be provisioned in EC2-VPC and publicly-accessible through
            an Internet gateway. For more information about provisioning clusters in EC2-VPC,
            go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#cluster-platforms">Supported
            Platforms to Launch Your Cluster</a> in the Amazon Redshift Cluster Management Guide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.Encrypted">
            <summary>
            <para>
            <para>If <code>true</code>, the data in the cluster is encrypted at rest. </para><para>Default: false</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.EnhancedVpcRouting">
            <summary>
            <para>
            <para>An option that specifies whether to create the cluster with enhanced VPC routing enabled.
            To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC.
            For more information, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html">Enhanced
            VPC Routing</a> in the Amazon Redshift Cluster Management Guide.</para><para>If this option is <code>true</code>, enhanced VPC routing is enabled. </para><para>Default: false</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.HsmClientCertificateIdentifier">
            <summary>
            <para>
            <para>Specifies the name of the HSM client certificate the Amazon Redshift cluster uses
            to retrieve the data encryption keys stored in an HSM.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.HsmConfigurationIdentifier">
            <summary>
            <para>
            <para>Specifies the name of the HSM configuration that contains the information the Amazon
            Redshift cluster can use to retrieve and store keys in an HSM.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.IamRole">
            <summary>
            <para>
            <para>A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster
            to access other AWS services. You must supply the IAM roles in their Amazon Resource
            Name (ARN) format. You can supply up to 10 IAM roles in a single request.</para><para>A cluster can have up to 10 IAM roles associated with it at any time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS Key Management Service (KMS) key ID of the encryption key that you want to
            use to encrypt data in the cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.MaintenanceTrackName">
            <summary>
            <para>
            <para>An optional parameter for the name of the maintenance track for the cluster. If you
            don't provide a maintenance track name, the cluster is assigned to the <code>current</code>
            track.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.ManualSnapshotRetentionPeriod">
            <summary>
            <para>
            <para>The default number of days to retain a manual snapshot. If the value is -1, the snapshot
            is retained indefinitely. This setting doesn't change the retention period of existing
            snapshots.</para><para>The value must be either -1 or an integer between 1 and 3,653.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.MasterUsername">
            <summary>
            <para>
            <para>The user name associated with the master user account for the cluster that is being
            created.</para><para>Constraints:</para><ul><li><para>Must be 1 - 128 alphanumeric characters. The user name can't be <code>PUBLIC</code>.</para></li><li><para>First character must be a letter.</para></li><li><para>Cannot be a reserved word. A list of reserved words can be found in <a href="https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved
            Words</a> in the Amazon Redshift Database Developer Guide. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.MasterUserPassword">
            <summary>
            <para>
            <para>The password associated with the master user account for the cluster that is being
            created.</para><para>Constraints:</para><ul><li><para>Must be between 8 and 64 characters in length.</para></li><li><para>Must contain at least one uppercase letter.</para></li><li><para>Must contain at least one lowercase letter.</para></li><li><para>Must contain one number.</para></li><li><para>Can be any printable ASCII character (ASCII code 33 to 126) except ' (single quote),
            " (double quote), \, /, @, or space.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.NodeType">
            <summary>
            <para>
            <para>The node type to be provisioned for the cluster. For information about node types,
            go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#how-many-nodes">
            Working with Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </para><para>Valid Values: <code>ds2.xlarge</code> | <code>ds2.8xlarge</code> | <code>dc1.large</code>
            | <code>dc1.8xlarge</code> | <code>dc2.large</code> | <code>dc2.8xlarge</code> | <code>ra3.4xlarge</code>
            | <code>ra3.16xlarge</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.NumberOfNodes">
            <summary>
            <para>
            <para>The number of compute nodes in the cluster. This parameter is required when the <b>ClusterType</b>
            parameter is specified as <code>multi-node</code>. </para><para>For information about determining how many nodes you need, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#how-many-nodes">
            Working with Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </para><para>If you don't specify this parameter, you get a single-node cluster. When requesting
            a multi-node cluster, you must specify the number of nodes that you want in the cluster.</para><para>Default: <code>1</code></para><para>Constraints: Value must be at least 1 and no more than 100.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.Port">
            <summary>
            <para>
            <para>The port number on which the cluster accepts incoming connections.</para><para>The cluster is accessible only via the JDBC and ODBC connection strings. Part of the
            connection string requires the port on which the cluster will listen for incoming
            connections.</para><para>Default: <code>5439</code></para><para>Valid Values: <code>1150-65535</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>The weekly time range (in UTC) during which automated cluster maintenance can occur.</para><para> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code></para><para> Default: A 30-minute window selected at random from an 8-hour block of time per region,
            occurring on a random day of the week. For more information about the time blocks
            for each region, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-maintenance-windows">Maintenance
            Windows</a> in Amazon Redshift Cluster Management Guide.</para><para>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</para><para>Constraints: Minimum 30-minute window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.PubliclyAccessible">
            <summary>
            <para>
            <para>If <code>true</code>, the cluster can be accessed from a public network. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.SnapshotScheduleIdentifier">
            <summary>
            <para>
            <para>A unique identifier for the snapshot schedule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tag instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.</para><para>Default: The default VPC security group is associated with the cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.CreateClusterResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.CreateClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.NewRSClusterParameterGroupCmdlet">
            <summary>
            Creates an Amazon Redshift parameter group.
            
             
            <para>
            Creating parameter groups is independent of creating clusters. You can associate a
            cluster with a parameter group when you create the cluster. You can also associate
            an existing cluster with a parameter group after the cluster is created by using <a>ModifyCluster</a>.
            
            </para><para>
            Parameters in the parameter group define specific behavior that applies to the databases
            you create on the cluster. For more information about parameters and parameter groups,
            go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon
            Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterParameterGroupCmdlet.Description">
            <summary>
            <para>
            <para>A description of the parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterParameterGroupCmdlet.ParameterGroupFamily">
            <summary>
            <para>
            <para>The Amazon Redshift engine version to which the cluster parameter group applies. The
            cluster engine version determines the set of parameters.</para><para>To get a list of valid parameter group family names, you can call <a>DescribeClusterParameterGroups</a>.
            By default, Amazon Redshift returns a list of all the parameter groups that are owned
            by your AWS account, including the default parameter groups for each Amazon Redshift
            engine version. The parameter group family names associated with the default parameter
            groups provide you the valid values. For example, a valid family name is "redshift-1.0".
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterParameterGroupCmdlet.ParameterGroupName">
            <summary>
            <para>
            <para>The name of the cluster parameter group.</para><para>Constraints:</para><ul><li><para>Must be 1 to 255 alphanumeric characters or hyphens</para></li><li><para>First character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li><li><para>Must be unique withing your AWS account.</para></li></ul><note><para>This value is stored as a lower-case string.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterParameterGroupCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tag instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ClusterParameterGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.CreateClusterParameterGroupResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.CreateClusterParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSecurityGroupCmdlet">
            <summary>
            Creates a new Amazon Redshift security group. You use security groups to control access
            to non-VPC clusters.
            
             
            <para>
             For information about managing security groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon
            Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster Management
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSecurityGroupCmdlet.ClusterSecurityGroupName">
            <summary>
            <para>
            <para>The name for the security group. Amazon Redshift stores the value as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must contain no more than 255 alphanumeric characters or hyphens.</para></li><li><para>Must not be "Default".</para></li><li><para>Must be unique for all security groups that are created by your AWS account.</para></li></ul><para>Example: <code>examplesecuritygroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSecurityGroupCmdlet.Description">
            <summary>
            <para>
            <para>A description for the security group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSecurityGroupCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tag instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSecurityGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ClusterSecurityGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.CreateClusterSecurityGroupResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.CreateClusterSecurityGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSecurityGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterSecurityGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterSecurityGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSecurityGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSnapshotCmdlet">
            <summary>
            Creates a manual snapshot of the specified cluster. The cluster must be in the <code>available</code>
            state. 
            
             
            <para>
             For more information about working with snapshots, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon
            Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSnapshotCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The cluster identifier for which you want a snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSnapshotCmdlet.ManualSnapshotRetentionPeriod">
            <summary>
            <para>
            <para>The number of days that a manual snapshot is retained. If the value is -1, the manual
            snapshot is retained indefinitely. </para><para>The value must be either -1 or an integer between 1 and 3,653.</para><para>The default value is -1.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSnapshotCmdlet.SnapshotIdentifier">
            <summary>
            <para>
            <para>A unique identifier for the snapshot that you are requesting. This identifier must
            be unique for all snapshots within the AWS account.</para><para>Constraints:</para><ul><li><para>Cannot be null, empty, or blank</para></li><li><para>Must contain from 1 to 255 alphanumeric characters or hyphens</para></li><li><para>First character must be a letter</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens</para></li></ul><para>Example: <code>my-snapshot-id</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSnapshotCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tag instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Snapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.CreateClusterSnapshotResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.CreateClusterSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSubnetGroupCmdlet">
            <summary>
            Creates a new Amazon Redshift subnet group. You must provide a list of one or more
            subnets in your existing Amazon Virtual Private Cloud (Amazon VPC) when creating Amazon
            Redshift subnet group.
            
             
            <para>
             For information about subnet groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-cluster-subnet-groups.html">Amazon
            Redshift Cluster Subnet Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSubnetGroupCmdlet.ClusterSubnetGroupName">
            <summary>
            <para>
            <para>The name for the subnet group. Amazon Redshift stores the value as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must contain no more than 255 alphanumeric characters or hyphens.</para></li><li><para>Must not be "Default".</para></li><li><para>Must be unique for all subnet groups that are created by your AWS account.</para></li></ul><para>Example: <code>examplesubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSubnetGroupCmdlet.Description">
            <summary>
            <para>
            <para>A description for the subnet group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSubnetGroupCmdlet.SubnetId">
            <summary>
            <para>
            <para>An array of VPC subnet IDs. A maximum of 20 subnets can be modified in a single request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSubnetGroupCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tag instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSubnetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ClusterSubnetGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.CreateClusterSubnetGroupResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.CreateClusterSubnetGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSubnetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterSubnetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterSubnetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSClusterSubnetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.NewRSEventSubscriptionCmdlet">
            <summary>
            Creates an Amazon Redshift event notification subscription. This action requires an
            ARN (Amazon Resource Name) of an Amazon SNS topic created by either the Amazon Redshift
            console, the Amazon SNS console, or the Amazon SNS API. To obtain an ARN with Amazon
            SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is
            displayed in the SNS console.
            
             
            <para>
            You can specify the source type, and lists of Amazon Redshift source IDs, event categories,
            and event severities. Notifications will be sent for all events you want that match
            those criteria. For example, you can specify source type = cluster, source ID = my-cluster-1
            and mycluster2, event categories = Availability, Backup, and severity = ERROR. The
            subscription will only send notifications for those ERROR events in the Availability
            and Backup categories for the specified clusters.
            </para><para>
            If you specify both the source type and source IDs, such as source type = cluster
            and source identifier = my-cluster-1, notifications will be sent for all the cluster
            events for my-cluster-1. If you specify a source type but do not specify a source
            identifier, you will receive notice of the events for the objects of that type in
            your AWS account. If you do not specify either the SourceType nor the SourceIdentifier,
            you will be notified of events generated from all Amazon Redshift sources belonging
            to your AWS account. You must specify a source type if you specify a source ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSEventSubscriptionCmdlet.Enabled">
            <summary>
            <para>
            <para>A boolean value; set to <code>true</code> to activate the subscription, and set to
            <code>false</code> to create the subscription but not activate it. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSEventSubscriptionCmdlet.EventCategory">
            <summary>
            <para>
            <para>Specifies the Amazon Redshift event categories to be published by the event notification
            subscription.</para><para>Values: configuration, management, monitoring, security</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSEventSubscriptionCmdlet.Severity">
            <summary>
            <para>
            <para>Specifies the Amazon Redshift event severity to be published by the event notification
            subscription.</para><para>Values: ERROR, INFO</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSEventSubscriptionCmdlet.SnsTopicArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Amazon SNS topic used to transmit the event
            notifications. The ARN is created by Amazon SNS when you create a topic and subscribe
            to it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSEventSubscriptionCmdlet.SourceId">
            <summary>
            <para>
            <para>A list of one or more identifiers of Amazon Redshift source objects. All of the objects
            must be of the same type as was specified in the source type parameter. The event
            subscription will return only events generated by the specified objects. If not specified,
            then events are returned for all objects within the source type specified.</para><para>Example: my-cluster-1, my-cluster-2</para><para>Example: my-snapshot-20131010</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSEventSubscriptionCmdlet.SourceType">
            <summary>
            <para>
            <para>The type of source that will be generating the events. For example, if you want to
            be notified of events generated by a cluster, you would set this parameter to cluster.
            If this value is not specified, events are returned for all Amazon Redshift objects
            in your AWS account. You must specify a source type in order to specify source IDs.</para><para>Valid values: cluster, cluster-parameter-group, cluster-security-group, cluster-snapshot,
            and scheduled-action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSEventSubscriptionCmdlet.SubscriptionName">
            <summary>
            <para>
            <para>The name of the event subscription to be created.</para><para>Constraints:</para><ul><li><para>Cannot be null, empty, or blank.</para></li><li><para>Must contain from 1 to 255 alphanumeric characters or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSEventSubscriptionCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tag instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSEventSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventSubscription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.CreateEventSubscriptionResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.CreateEventSubscriptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSEventSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubscriptionName parameter.
            The -PassThru parameter is deprecated, use -Select '^SubscriptionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSEventSubscriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.NewRSHsmClientCertificateCmdlet">
            <summary>
            Creates an HSM client certificate that an Amazon Redshift cluster will use to connect
            to the client's HSM in order to store and retrieve the keys used to encrypt the cluster
            databases.
            
             
            <para>
            The command returns a public key, which you must store in the HSM. In addition to
            creating the HSM certificate, you must create an Amazon Redshift HSM configuration
            that provides a cluster the information needed to store and use encryption keys in
            the HSM. For more information, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-HSM.html">Hardware
            Security Modules</a> in the Amazon Redshift Cluster Management Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSHsmClientCertificateCmdlet.HsmClientCertificateIdentifier">
            <summary>
            <para>
            <para>The identifier to be assigned to the new HSM client certificate that the cluster will
            use to connect to the HSM to use the database encryption keys.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSHsmClientCertificateCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tag instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSHsmClientCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HsmClientCertificate'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.CreateHsmClientCertificateResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.CreateHsmClientCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSHsmClientCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HsmClientCertificateIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^HsmClientCertificateIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSHsmClientCertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.NewRSHsmConfigurationCmdlet">
            <summary>
            Creates an HSM configuration that contains the information required by an Amazon Redshift
            cluster to store and use database encryption keys in a Hardware Security Module (HSM).
            After creating the HSM configuration, you can specify it as a parameter when creating
            a cluster. The cluster will then store its encryption keys in the HSM.
            
             
            <para>
            In addition to creating an HSM configuration, you must also create an HSM client certificate.
            For more information, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-HSM.html">Hardware
            Security Modules</a> in the Amazon Redshift Cluster Management Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSHsmConfigurationCmdlet.Description">
            <summary>
            <para>
            <para>A text description of the HSM configuration to be created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSHsmConfigurationCmdlet.HsmConfigurationIdentifier">
            <summary>
            <para>
            <para>The identifier to be assigned to the new Amazon Redshift HSM configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSHsmConfigurationCmdlet.HsmIpAddress">
            <summary>
            <para>
            <para>The IP address that the Amazon Redshift cluster must use to access the HSM.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSHsmConfigurationCmdlet.HsmPartitionName">
            <summary>
            <para>
            <para>The name of the partition in the HSM where the Amazon Redshift clusters will store
            their database encryption keys.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSHsmConfigurationCmdlet.HsmPartitionPassword">
            <summary>
            <para>
            <para>The password required to access the HSM partition.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSHsmConfigurationCmdlet.HsmServerPublicCertificate">
            <summary>
            <para>
            <para>The HSMs public certificate file. When using Cloud HSM, the file name is server.pem.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSHsmConfigurationCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tag instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSHsmConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HsmConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.CreateHsmConfigurationResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.CreateHsmConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSHsmConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HsmPartitionName parameter.
            The -PassThru parameter is deprecated, use -Select '^HsmPartitionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSHsmConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.NewRSResourceTagCmdlet">
            <summary>
            Adds tags to a cluster.
            
             
            <para>
            A resource can have up to 50 tags. If you try to create more than 50 tags for a resource,
            you will receive an error and the attempt will fail.
            </para><para>
            If you specify a key that already exists for the resource, the value for that key
            will be updated with the new value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSResourceTagCmdlet.ResourceName">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) to which you want to add the tag or tags. For example,
            <code>arn:aws:redshift:us-east-2:123456789:cluster:t1</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>One or more name/value pairs to add as tags to the specified resource. Each tag name
            is passed in with the parameter <code>Key</code> and the corresponding value is passed
            in with the parameter <code>Value</code>. The <code>Key</code> and <code>Value</code>
            parameters are separated by a comma (,). Separate multiple tags with a space. For
            example, <code>--tags "Key"="owner","Value"="admin" "Key"="environment","Value"="test"
            "Key"="version","Value"="1.0"</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.CreateTagsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceName parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.NewRSScheduledActionCmdlet">
            <summary>
            Creates a scheduled action. A scheduled action contains a schedule and an Amazon Redshift
            API action. For example, you can create a schedule of when to run the <code>ResizeCluster</code>
            API operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSScheduledActionCmdlet.ResizeCluster_Classic">
            <summary>
            <para>
            <para>A boolean value indicating whether the resize operation is using the classic resize
            process. If you don't provide this parameter or set the value to <code>false</code>,
            the resize type is elastic. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSScheduledActionCmdlet.PauseCluster_ClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster to be paused.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSScheduledActionCmdlet.ResizeCluster_ClusterIdentifier">
            <summary>
            <para>
            <para>The unique identifier for the cluster to resize.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSScheduledActionCmdlet.ResumeCluster_ClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster to be resumed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSScheduledActionCmdlet.ResizeCluster_ClusterType">
            <summary>
            <para>
            <para>The new cluster type for the specified cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSScheduledActionCmdlet.Enable">
            <summary>
            <para>
            <para>If true, the schedule is enabled. If false, the scheduled action does not trigger.
            For more information about <code>state</code> of the scheduled action, see <a>ScheduledAction</a>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSScheduledActionCmdlet.EndTime">
            <summary>
            <para>
            <para>The end time in UTC of the scheduled action. After this time, the scheduled action
            does not trigger. For more information about this parameter, see <a>ScheduledAction</a>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSScheduledActionCmdlet.IamRole">
            <summary>
            <para>
            <para>The IAM role to assume to run the target action. For more information about this parameter,
            see <a>ScheduledAction</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSScheduledActionCmdlet.ResizeCluster_NodeType">
            <summary>
            <para>
            <para>The new node type for the nodes you are adding. If not specified, the cluster's current
            node type is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSScheduledActionCmdlet.ResizeCluster_NumberOfNode">
            <summary>
            <para>
            <para>The new number of nodes for the cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSScheduledActionCmdlet.Schedule">
            <summary>
            <para>
            <para>The schedule in <code>at( )</code> or <code>cron( )</code> format. For more information
            about this parameter, see <a>ScheduledAction</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSScheduledActionCmdlet.ScheduledActionDescription">
            <summary>
            <para>
            <para>The description of the scheduled action. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSScheduledActionCmdlet.ScheduledActionName">
            <summary>
            <para>
            <para>The name of the scheduled action. The name must be unique within an account. For more
            information about this parameter, see <a>ScheduledAction</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSScheduledActionCmdlet.StartTime">
            <summary>
            <para>
            <para>The start time in UTC of the scheduled action. Before this time, the scheduled action
            does not trigger. For more information about this parameter, see <a>ScheduledAction</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSScheduledActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.CreateScheduledActionResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.CreateScheduledActionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSScheduledActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScheduledActionName parameter.
            The -PassThru parameter is deprecated, use -Select '^ScheduledActionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSScheduledActionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.NewRSSnapshotCopyGrantCmdlet">
            <summary>
            Creates a snapshot copy grant that permits Amazon Redshift to use a customer master
            key (CMK) from AWS Key Management Service (AWS KMS) to encrypt copied snapshots in
            a destination region.
            
             
            <para>
             For more information about managing snapshot copy grants, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html">Amazon
            Redshift Database Encryption</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSSnapshotCopyGrantCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The unique identifier of the customer master key (CMK) to which to grant Amazon Redshift
            permission. If no key is specified, the default key is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSSnapshotCopyGrantCmdlet.SnapshotCopyGrantName">
            <summary>
            <para>
            <para>The name of the snapshot copy grant. This name must be unique in the region for the
            AWS account.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 alphanumeric characters or hyphens.</para></li><li><para>Alphabetic characters must be lowercase.</para></li><li><para>First character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li><li><para>Must be unique for all clusters within an AWS account.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSSnapshotCopyGrantCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tag instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSSnapshotCopyGrantCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SnapshotCopyGrant'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.CreateSnapshotCopyGrantResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.CreateSnapshotCopyGrantResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSSnapshotCopyGrantCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Tag parameter.
            The -PassThru parameter is deprecated, use -Select '^Tag' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSSnapshotCopyGrantCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.NewRSSnapshotScheduleCmdlet">
            <summary>
            Create a snapshot schedule that can be associated to a cluster and which overrides
            the default system backup schedule.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSSnapshotScheduleCmdlet.DryRun">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSSnapshotScheduleCmdlet.NextInvocation">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSSnapshotScheduleCmdlet.ScheduleDefinition">
            <summary>
            <para>
            <para>The definition of the snapshot schedule. The definition is made up of schedule expressions,
            for example "cron(30 12 *)" or "rate(12 hours)". </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSSnapshotScheduleCmdlet.ScheduleDescription">
            <summary>
            <para>
            <para>The description of the snapshot schedule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSSnapshotScheduleCmdlet.ScheduleIdentifier">
            <summary>
            <para>
            <para>A unique identifier for a snapshot schedule. Only alphanumeric characters are allowed
            for the identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSSnapshotScheduleCmdlet.Tag">
            <summary>
            <para>
            <para>An optional set of tags you can use to search for the schedule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSSnapshotScheduleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.CreateSnapshotScheduleResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.CreateSnapshotScheduleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSSnapshotScheduleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScheduleIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ScheduleIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSSnapshotScheduleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.NewRSUsageLimitCmdlet">
            <summary>
            Creates a usage limit for a specified Amazon Redshift feature on a cluster. The usage
            limit is identified by the returned usage limit identifier.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSUsageLimitCmdlet.Amount">
            <summary>
            <para>
            <para>The limit amount. If time-based, this amount is in minutes. If data-based, this amount
            is in terabytes (TB). The value must be a positive number. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSUsageLimitCmdlet.BreachAction">
            <summary>
            <para>
            <para>The action that Amazon Redshift takes when the limit is reached. The default is log.
            For more information about this parameter, see <a>UsageLimit</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSUsageLimitCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster that you want to limit usage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSUsageLimitCmdlet.FeatureType">
            <summary>
            <para>
            <para>The Amazon Redshift feature that you want to limit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSUsageLimitCmdlet.LimitType">
            <summary>
            <para>
            <para>The type of limit. Depending on the feature type, this can be based on a time duration
            or data size. If <code>FeatureType</code> is <code>spectrum</code>, then <code>LimitType</code>
            must be <code>data-scanned</code>. If <code>FeatureType</code> is <code>concurrency-scaling</code>,
            then <code>LimitType</code> must be <code>time</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSUsageLimitCmdlet.Period">
            <summary>
            <para>
            <para>The time period that the amount applies to. A <code>weekly</code> period begins on
            Sunday. The default is <code>monthly</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSUsageLimitCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tag instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSUsageLimitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.CreateUsageLimitResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.CreateUsageLimitResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSUsageLimitCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.NewRSUsageLimitCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterCmdlet">
            <summary>
            Deletes a previously provisioned cluster without its final snapshot being created.
            A successful response from the web service indicates that the request was received
            correctly. Use <a>DescribeClusters</a> to monitor the status of the deletion. The
            delete operation cannot be canceled or reverted once submitted. For more information
            about managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
            Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            
             
            <para>
            If you want to shut down the cluster and retain it for future use, set <i>SkipFinalClusterSnapshot</i>
            to <code>false</code> and specify a name for <i>FinalClusterSnapshotIdentifier</i>.
            You can later restore this snapshot to resume using the cluster. If a final cluster
            snapshot is requested, the status of the cluster will be "final-snapshot" while the
            snapshot is being taken, then it's "deleting" once Amazon Redshift begins deleting
            the cluster. 
            </para><para>
             For more information about managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
            Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster to be deleted.</para><para>Constraints:</para><ul><li><para>Must contain lowercase characters.</para></li><li><para>Must contain from 1 to 63 alphanumeric characters or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterCmdlet.FinalClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier of the final snapshot that is to be created immediately before deleting
            the cluster. If this parameter is provided, <i>SkipFinalClusterSnapshot</i> must be
            <code>false</code>. </para><para>Constraints:</para><ul><li><para>Must be 1 to 255 alphanumeric characters.</para></li><li><para>First character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterCmdlet.FinalClusterSnapshotRetentionPeriod">
            <summary>
            <para>
            <para>The number of days that a manual snapshot is retained. If the value is -1, the manual
            snapshot is retained indefinitely.</para><para>The value must be either -1 or an integer between 1 and 3,653.</para><para>The default value is -1.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterCmdlet.SkipFinalClusterSnapshot">
            <summary>
            <para>
            <para>Determines whether a final snapshot of the cluster is created before Amazon Redshift
            deletes the cluster. If <code>true</code>, a final cluster snapshot is not created.
            If <code>false</code>, a final cluster snapshot is created before the cluster is deleted.
            </para><note><para>The <i>FinalClusterSnapshotIdentifier</i> parameter must be specified if <i>SkipFinalClusterSnapshot</i>
            is <code>false</code>.</para></note><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DeleteClusterResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DeleteClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterParameterGroupCmdlet">
            <summary>
            Deletes a specified Amazon Redshift parameter group.
            
             <note><para>
            You cannot delete a parameter group if it is associated with a cluster.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterParameterGroupCmdlet.ParameterGroupName">
            <summary>
            <para>
            <para>The name of the parameter group to be deleted.</para><para>Constraints:</para><ul><li><para>Must be the name of an existing cluster parameter group.</para></li><li><para>Cannot delete a default cluster parameter group.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DeleteClusterParameterGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSecurityGroupCmdlet">
            <summary>
            Deletes an Amazon Redshift security group.
            
             <note><para>
            You cannot delete a security group that is associated with any clusters. You cannot
            delete the default security group.
            </para></note><para>
             For information about managing security groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon
            Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster Management
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSecurityGroupCmdlet.ClusterSecurityGroupName">
            <summary>
            <para>
            <para>The name of the cluster security group to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSecurityGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DeleteClusterSecurityGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSecurityGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterSecurityGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterSecurityGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSecurityGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSnapshotCmdlet">
            <summary>
            Deletes the specified manual snapshot. The snapshot must be in the <code>available</code>
            state, with no other users authorized to access the snapshot. 
            
             
            <para>
            Unlike automated snapshots, manual snapshots are retained even after you delete your
            cluster. Amazon Redshift does not delete your manual snapshots. You must delete manual
            snapshot explicitly to avoid getting charged. If other accounts are authorized to
            access the snapshot, you must revoke all of the authorizations before you can delete
            the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSnapshotCmdlet.SnapshotClusterIdentifier">
            <summary>
            <para>
            <para>The unique identifier of the cluster the snapshot was created from. This parameter
            is required if your IAM user has a policy containing a snapshot resource element that
            specifies anything other than * for the cluster name.</para><para>Constraints: Must be the name of valid cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSnapshotCmdlet.SnapshotIdentifier">
            <summary>
            <para>
            <para>The unique identifier of the manual snapshot to be deleted.</para><para>Constraints: Must be the name of an existing snapshot that is in the <code>available</code>,
            <code>failed</code>, or <code>cancelled</code> state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Snapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DeleteClusterSnapshotResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.DeleteClusterSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSnapshotBatchCmdlet">
            <summary>
            Deletes a set of cluster snapshots.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSnapshotBatchCmdlet.Identifier">
            <summary>
            <para>
            <para>A list of identifiers for the snapshots that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSnapshotBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.BatchDeleteClusterSnapshotsResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.BatchDeleteClusterSnapshotsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSnapshotBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Identifier parameter.
            The -PassThru parameter is deprecated, use -Select '^Identifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSnapshotBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSubnetGroupCmdlet">
            <summary>
            Deletes the specified cluster subnet group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSubnetGroupCmdlet.ClusterSubnetGroupName">
            <summary>
            <para>
            <para>The name of the cluster subnet group name to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSubnetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DeleteClusterSubnetGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSubnetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterSubnetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterSubnetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSClusterSubnetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.RemoveRSEventSubscriptionCmdlet">
            <summary>
            Deletes an Amazon Redshift event notification subscription.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSEventSubscriptionCmdlet.SubscriptionName">
            <summary>
            <para>
            <para>The name of the Amazon Redshift event notification subscription to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSEventSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DeleteEventSubscriptionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSEventSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubscriptionName parameter.
            The -PassThru parameter is deprecated, use -Select '^SubscriptionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSEventSubscriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.RemoveRSHsmClientCertificateCmdlet">
            <summary>
            Deletes the specified HSM client certificate.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSHsmClientCertificateCmdlet.HsmClientCertificateIdentifier">
            <summary>
            <para>
            <para>The identifier of the HSM client certificate to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSHsmClientCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DeleteHsmClientCertificateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSHsmClientCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HsmClientCertificateIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^HsmClientCertificateIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSHsmClientCertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.RemoveRSHsmConfigurationCmdlet">
            <summary>
            Deletes the specified Amazon Redshift HSM configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSHsmConfigurationCmdlet.HsmConfigurationIdentifier">
            <summary>
            <para>
            <para>The identifier of the Amazon Redshift HSM configuration to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSHsmConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DeleteHsmConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSHsmConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HsmConfigurationIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^HsmConfigurationIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSHsmConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.RemoveRSResourceTagCmdlet">
            <summary>
            Deletes tags from a resource. You must provide the ARN of the resource from which
            you want to delete the tag or tags.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSResourceTagCmdlet.ResourceName">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) from which you want to remove the tag or tags. For
            example, <code>arn:aws:redshift:us-east-2:123456789:cluster:t1</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The tag key that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DeleteTagsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TagKey parameter.
            The -PassThru parameter is deprecated, use -Select '^TagKey' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.RemoveRSScheduledActionCmdlet">
            <summary>
            Deletes a scheduled action.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSScheduledActionCmdlet.ScheduledActionName">
            <summary>
            <para>
            <para>The name of the scheduled action to delete. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSScheduledActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DeleteScheduledActionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSScheduledActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScheduledActionName parameter.
            The -PassThru parameter is deprecated, use -Select '^ScheduledActionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSScheduledActionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.RemoveRSSnapshotCopyGrantCmdlet">
            <summary>
            Deletes the specified snapshot copy grant.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSSnapshotCopyGrantCmdlet.SnapshotCopyGrantName">
            <summary>
            <para>
            <para>The name of the snapshot copy grant to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSSnapshotCopyGrantCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DeleteSnapshotCopyGrantResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSSnapshotCopyGrantCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotCopyGrantName parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotCopyGrantName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSSnapshotCopyGrantCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.RemoveRSSnapshotScheduleCmdlet">
            <summary>
            Deletes a snapshot schedule.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSSnapshotScheduleCmdlet.ScheduleIdentifier">
            <summary>
            <para>
            <para>A unique identifier of the snapshot schedule to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSSnapshotScheduleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DeleteSnapshotScheduleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSSnapshotScheduleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScheduleIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ScheduleIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSSnapshotScheduleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.RemoveRSUsageLimitCmdlet">
            <summary>
            Deletes a usage limit from a cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSUsageLimitCmdlet.UsageLimitId">
            <summary>
            <para>
            <para>The identifier of the usage limit to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSUsageLimitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.DeleteUsageLimitResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSUsageLimitCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UsageLimitId parameter.
            The -PassThru parameter is deprecated, use -Select '^UsageLimitId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RemoveRSUsageLimitCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.RequestRSReservedNodeOfferingCmdlet">
            <summary>
            Allows you to purchase reserved nodes. Amazon Redshift offers a predefined set of
            reserved node offerings. You can purchase one or more of the offerings. You can call
            the <a>DescribeReservedNodeOfferings</a> API to obtain the available reserved node
            offerings. You can call this API by providing a specific reserved node offering and
            the number of nodes you want to reserve. 
            
             
            <para>
             For more information about reserved node offerings, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/purchase-reserved-node-instance.html">Purchasing
            Reserved Nodes</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RequestRSReservedNodeOfferingCmdlet.NodeCount">
            <summary>
            <para>
            <para>The number of reserved nodes that you want to purchase.</para><para>Default: <code>1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RequestRSReservedNodeOfferingCmdlet.ReservedNodeOfferingId">
            <summary>
            <para>
            <para>The unique identifier of the reserved node offering you want to purchase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RequestRSReservedNodeOfferingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReservedNode'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.PurchaseReservedNodeOfferingResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.PurchaseReservedNodeOfferingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RequestRSReservedNodeOfferingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedNodeOfferingId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedNodeOfferingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RequestRSReservedNodeOfferingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.ResetRSClusterParameterGroupCmdlet">
            <summary>
            Sets one or more parameters of the specified parameter group to their default values
            and sets the source values of the parameters to "engine-default". To reset the entire
            parameter group specify the <i>ResetAllParameters</i> parameter. For parameter changes
            to take effect you must reboot any associated clusters.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.ResetRSClusterParameterGroupCmdlet.ParameterGroupName">
            <summary>
            <para>
            <para>The name of the cluster parameter group to be reset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.ResetRSClusterParameterGroupCmdlet.Parameter">
            <summary>
            <para>
            <para>An array of names of parameters to be reset. If <i>ResetAllParameters</i> option is
            not used, then at least one parameter name must be supplied. </para><para>Constraints: A maximum of 20 parameters can be reset in a single request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.ResetRSClusterParameterGroupCmdlet.ResetAllParameter">
            <summary>
            <para>
            <para>If <code>true</code>, all parameters in the specified parameter group will be reset
            to their default values. </para><para>Default: <code>true</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.ResetRSClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.ResetClusterParameterGroupResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.ResetClusterParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.ResetRSClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.ResetRSClusterParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.RestartRSClusterCmdlet">
            <summary>
            Reboots a cluster. This action is taken as soon as possible. It results in a momentary
            outage to the cluster, during which the cluster status is set to <code>rebooting</code>.
            A cluster event is created when the reboot is completed. Any pending cluster modifications
            (see <a>ModifyCluster</a>) are applied at this reboot. For more information about
            managing clusters, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
            Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestartRSClusterCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The cluster identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestartRSClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.RebootClusterResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.RebootClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestartRSClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestartRSClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet">
            <summary>
            Creates a new cluster from a snapshot. By default, Amazon Redshift creates the resulting
            cluster with the same configuration as the original cluster from which the snapshot
            was created, except that the new cluster is created with the default cluster security
            and parameter groups. After Amazon Redshift creates the cluster, you can use the <a>ModifyCluster</a>
            API to associate a different security group and different parameter group with the
            restored cluster. If you are using a DS node type, you can also choose to change to
            another DS node type of the same size during restore.
            
             
            <para>
            If you restore a cluster into a VPC, you must provide a cluster subnet group where
            you want the cluster restored.
            </para><para>
             For more information about working with snapshots, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon
            Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.AdditionalInfo">
            <summary>
            <para>
            <para>Reserved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.AllowVersionUpgrade">
            <summary>
            <para>
            <para>If <code>true</code>, major version upgrades can be applied during the maintenance
            window to the Amazon Redshift engine that is running on the cluster. </para><para>Default: <code>true</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.AutomatedSnapshotRetentionPeriod">
            <summary>
            <para>
            <para>The number of days that automated snapshots are retained. If the value is 0, automated
            snapshots are disabled. Even if automated snapshots are disabled, you can still create
            manual snapshots when you want with <a>CreateClusterSnapshot</a>. </para><para>Default: The value selected for the cluster from which the snapshot was taken.</para><para>Constraints: Must be a value from 0 to 35.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>The Amazon EC2 Availability Zone in which to restore the cluster.</para><para>Default: A random, system-chosen Availability Zone.</para><para>Example: <code>us-east-2a</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster that will be created from restoring the snapshot.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 alphanumeric characters or hyphens.</para></li><li><para>Alphabetic characters must be lowercase.</para></li><li><para>First character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li><li><para>Must be unique for all clusters within an AWS account.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.ClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the parameter group to be associated with this cluster.</para><para>Default: The default Amazon Redshift cluster parameter group. For information about
            the default parameter group, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Working
            with Amazon Redshift Parameter Groups</a>.</para><para>Constraints:</para><ul><li><para>Must be 1 to 255 alphanumeric characters or hyphens.</para></li><li><para>First character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.ClusterSecurityGroup">
            <summary>
            <para>
            <para>A list of security groups to be associated with this cluster.</para><para>Default: The default cluster security group for Amazon Redshift.</para><para>Cluster security groups only apply to clusters outside of VPCs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.ClusterSubnetGroupName">
            <summary>
            <para>
            <para>The name of the subnet group where you want to cluster restored.</para><para>A snapshot of cluster in VPC can be restored only in VPC. Therefore, you must provide
            subnet group name where you want the cluster restored.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.ElasticIp">
            <summary>
            <para>
            <para>The elastic IP (EIP) address for the cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.EnhancedVpcRouting">
            <summary>
            <para>
            <para>An option that specifies whether to create the cluster with enhanced VPC routing enabled.
            To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC.
            For more information, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html">Enhanced
            VPC Routing</a> in the Amazon Redshift Cluster Management Guide.</para><para>If this option is <code>true</code>, enhanced VPC routing is enabled. </para><para>Default: false</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.HsmClientCertificateIdentifier">
            <summary>
            <para>
            <para>Specifies the name of the HSM client certificate the Amazon Redshift cluster uses
            to retrieve the data encryption keys stored in an HSM.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.HsmConfigurationIdentifier">
            <summary>
            <para>
            <para>Specifies the name of the HSM configuration that contains the information the Amazon
            Redshift cluster can use to retrieve and store keys in an HSM.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.IamRole">
            <summary>
            <para>
            <para>A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster
            to access other AWS services. You must supply the IAM roles in their Amazon Resource
            Name (ARN) format. You can supply up to 10 IAM roles in a single request.</para><para>A cluster can have up to 10 IAM roles associated at any time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS Key Management Service (KMS) key ID of the encryption key that you want to
            use to encrypt data in the cluster that you restore from a shared snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.MaintenanceTrackName">
            <summary>
            <para>
            <para>The name of the maintenance track for the restored cluster. When you take a snapshot,
            the snapshot inherits the <code>MaintenanceTrack</code> value from the cluster. The
            snapshot might be on a different track than the cluster that was the source for the
            snapshot. For example, suppose that you take a snapshot of a cluster that is on the
            current track and then change the cluster to be on the trailing track. In this case,
            the snapshot and the source cluster are on different tracks.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.ManualSnapshotRetentionPeriod">
            <summary>
            <para>
            <para>The default number of days to retain a manual snapshot. If the value is -1, the snapshot
            is retained indefinitely. This setting doesn't change the retention period of existing
            snapshots.</para><para>The value must be either -1 or an integer between 1 and 3,653.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.NodeType">
            <summary>
            <para>
            <para>The node type that the restored cluster will be provisioned with.</para><para>Default: The node type of the cluster from which the snapshot was taken. You can modify
            this if you are using any DS node type. In that case, you can choose to restore into
            another DS node type of the same size. For example, you can restore ds1.8xlarge into
            ds2.8xlarge, or ds1.xlarge into ds2.xlarge. If you have a DC instance type, you must
            restore into that same instance type and size. In other words, you can only restore
            a dc1.large instance type into another dc1.large instance type or dc2.large instance
            type. You can't restore dc1.8xlarge to dc2.8xlarge. First restore to a dc1.8xlarge
            cluster, then resize to a dc2.8large cluster. For more information about node types,
            see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-about-clusters-and-nodes">
            About Clusters and Nodes</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.NumberOfNode">
            <summary>
            <para>
            <para>The number of nodes specified when provisioning the restored cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.OwnerAccount">
            <summary>
            <para>
            <para>The AWS customer account used to create or copy the snapshot. Required if you are
            restoring a snapshot you do not own, optional if you own the snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.Port">
            <summary>
            <para>
            <para>The port number on which the cluster accepts connections.</para><para>Default: The same port as the original cluster.</para><para>Constraints: Must be between <code>1115</code> and <code>65535</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>The weekly time range (in UTC) during which automated cluster maintenance can occur.</para><para> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code></para><para> Default: The value selected for the cluster from which the snapshot was taken. For
            more information about the time blocks for each region, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-maintenance-windows">Maintenance
            Windows</a> in Amazon Redshift Cluster Management Guide. </para><para>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</para><para>Constraints: Minimum 30-minute window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.PubliclyAccessible">
            <summary>
            <para>
            <para>If <code>true</code>, the cluster can be accessed from a public network. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.SnapshotClusterIdentifier">
            <summary>
            <para>
            <para>The name of the cluster the source snapshot was created from. This parameter is required
            if your IAM user has a policy containing a snapshot resource element that specifies
            anything other than * for the cluster name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.SnapshotIdentifier">
            <summary>
            <para>
            <para>The name of the snapshot from which to create the new cluster. This parameter isn't
            case sensitive.</para><para>Example: <code>my-snapshot-id</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.SnapshotScheduleIdentifier">
            <summary>
            <para>
            <para>A unique identifier for the snapshot schedule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.</para><para>Default: The default VPC security group is associated with the cluster.</para><para>VPC security groups only apply to clusters in VPCs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.RestoreFromClusterSnapshotResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.RestoreFromClusterSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSFromClusterSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.RestoreRSTableFromClusterSnapshotCmdlet">
            <summary>
            Creates a new table from a table in an Amazon Redshift cluster snapshot. You must
            create the new table within the Amazon Redshift cluster that the snapshot was taken
            from.
            
             
            <para>
            You cannot use <code>RestoreTableFromClusterSnapshot</code> to restore a table with
            the same name as an existing table in an Amazon Redshift cluster. That is, you cannot
            overwrite an existing table in a cluster with a restored table. If you want to replace
            your original table with a new, restored table, then rename or drop your original
            table before you call <code>RestoreTableFromClusterSnapshot</code>. When you have
            renamed your original table, then you can pass the original name of the table as the
            <code>NewTableName</code> parameter value in the call to <code>RestoreTableFromClusterSnapshot</code>.
            This way, you can replace the original table with the table created from the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSTableFromClusterSnapshotCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the Amazon Redshift cluster to restore the table to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSTableFromClusterSnapshotCmdlet.NewTableName">
            <summary>
            <para>
            <para>The name of the table to create as a result of the current request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSTableFromClusterSnapshotCmdlet.SnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier of the snapshot to restore the table from. This snapshot must have
            been created from the Amazon Redshift cluster specified by the <code>ClusterIdentifier</code>
            parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSTableFromClusterSnapshotCmdlet.SourceDatabaseName">
            <summary>
            <para>
            <para>The name of the source database that contains the table to restore from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSTableFromClusterSnapshotCmdlet.SourceSchemaName">
            <summary>
            <para>
            <para>The name of the source schema that contains the table to restore from. If you do not
            specify a <code>SourceSchemaName</code> value, the default is <code>public</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSTableFromClusterSnapshotCmdlet.SourceTableName">
            <summary>
            <para>
            <para>The name of the source table to restore from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSTableFromClusterSnapshotCmdlet.TargetDatabaseName">
            <summary>
            <para>
            <para>The name of the database to restore the table to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSTableFromClusterSnapshotCmdlet.TargetSchemaName">
            <summary>
            <para>
            <para>The name of the schema to restore the table to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSTableFromClusterSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TableRestoreStatus'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.RestoreTableFromClusterSnapshotResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.RestoreTableFromClusterSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSTableFromClusterSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RestoreRSTableFromClusterSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.RevokeRSClusterSecurityGroupIngressCmdlet">
            <summary>
            Revokes an ingress rule in an Amazon Redshift security group for a previously authorized
            IP range or Amazon EC2 security group. To add an ingress rule, see <a>AuthorizeClusterSecurityGroupIngress</a>.
            For information about managing security groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon
            Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster Management
            Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RevokeRSClusterSecurityGroupIngressCmdlet.CIDRIP">
            <summary>
            <para>
            <para>The IP range for which to revoke access. This range must be a valid Classless Inter-Domain
            Routing (CIDR) block of IP addresses. If <code>CIDRIP</code> is specified, <code>EC2SecurityGroupName</code>
            and <code>EC2SecurityGroupOwnerId</code> cannot be provided. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RevokeRSClusterSecurityGroupIngressCmdlet.ClusterSecurityGroupName">
            <summary>
            <para>
            <para>The name of the security Group from which to revoke the ingress rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RevokeRSClusterSecurityGroupIngressCmdlet.EC2SecurityGroupName">
            <summary>
            <para>
            <para>The name of the EC2 Security Group whose access is to be revoked. If <code>EC2SecurityGroupName</code>
            is specified, <code>EC2SecurityGroupOwnerId</code> must also be provided and <code>CIDRIP</code>
            cannot be provided. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RevokeRSClusterSecurityGroupIngressCmdlet.EC2SecurityGroupOwnerId">
            <summary>
            <para>
            <para>The AWS account number of the owner of the security group specified in the <code>EC2SecurityGroupName</code>
            parameter. The AWS access key ID is not an acceptable value. If <code>EC2SecurityGroupOwnerId</code>
            is specified, <code>EC2SecurityGroupName</code> must also be provided. and <code>CIDRIP</code>
            cannot be provided. </para><para>Example: <code>111122223333</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RevokeRSClusterSecurityGroupIngressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ClusterSecurityGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.RevokeClusterSecurityGroupIngressResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.RevokeClusterSecurityGroupIngressResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RevokeRSClusterSecurityGroupIngressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterSecurityGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterSecurityGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RevokeRSClusterSecurityGroupIngressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.RevokeRSSnapshotAccessCmdlet">
            <summary>
            Removes the ability of the specified AWS customer account to restore the specified
            snapshot. If the account is currently restoring the snapshot, the restore will run
            to completion.
            
             
            <para>
             For more information about working with snapshots, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon
            Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RevokeRSSnapshotAccessCmdlet.AccountWithRestoreAccess">
            <summary>
            <para>
            <para>The identifier of the AWS customer account that can no longer restore the specified
            snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RevokeRSSnapshotAccessCmdlet.SnapshotClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster the snapshot was created from. This parameter is required
            if your IAM user has a policy containing a snapshot resource element that specifies
            anything other than * for the cluster name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RevokeRSSnapshotAccessCmdlet.SnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier of the snapshot that the account can no longer access.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RevokeRSSnapshotAccessCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Snapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.RevokeSnapshotAccessResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.RevokeSnapshotAccessResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RevokeRSSnapshotAccessCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.RevokeRSSnapshotAccessCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.SetRSClusterSizeCmdlet">
            <summary>
            Changes the size of the cluster. You can change the cluster's type, or change the
            number or type of nodes. The default behavior is to use the elastic resize method.
            With an elastic resize, your cluster is available for read and write operations more
            quickly than with the classic resize method. 
            
             
            <para>
            Elastic resize operations have the following restrictions:
            </para><ul><li><para>
            You can only resize clusters of the following types:
            </para><ul><li><para>
            dc2.large
            </para></li><li><para>
            dc2.8xlarge
            </para></li><li><para>
            ds2.xlarge
            </para></li><li><para>
            ds2.8xlarge
            </para></li><li><para>
            ra3.4xlarge
            </para></li><li><para>
            ra3.16xlarge
            </para></li></ul></li><li><para>
            The type of nodes that you add must match the node type for the cluster.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.SetRSClusterSizeCmdlet.Classic">
            <summary>
            <para>
            <para>A boolean value indicating whether the resize operation is using the classic resize
            process. If you don't provide this parameter or set the value to <code>false</code>,
            the resize type is elastic. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.SetRSClusterSizeCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The unique identifier for the cluster to resize.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.SetRSClusterSizeCmdlet.ClusterType">
            <summary>
            <para>
            <para>The new cluster type for the specified cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.SetRSClusterSizeCmdlet.NodeType">
            <summary>
            <para>
            <para>The new node type for the nodes you are adding. If not specified, the cluster's current
            node type is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.SetRSClusterSizeCmdlet.NumberOfNode">
            <summary>
            <para>
            <para>The new number of nodes for the cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.SetRSClusterSizeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.ResizeClusterResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.ResizeClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.SetRSClusterSizeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.SetRSClusterSizeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.StartRSClusterCmdlet">
            <summary>
            Resumes a paused cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.StartRSClusterCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster to be resumed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.StartRSClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.ResumeClusterResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.ResumeClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.StartRSClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.StartRSClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.StopRSClusterCmdlet">
            <summary>
            Pauses a cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.StopRSClusterCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster to be paused.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.StopRSClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.PauseClusterResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.PauseClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.StopRSClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.StopRSClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.StopRSResizeCmdlet">
            <summary>
            Cancels a resize operation for a cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.StopRSResizeCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The unique identifier for the cluster that you want to cancel a resize operation for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.StopRSResizeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.CancelResizeResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.CancelResizeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.StopRSResizeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.StopRSResizeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.SwitchRSEncryptionKeyCmdlet">
            <summary>
            Rotates the encryption keys for a cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.SwitchRSEncryptionKeyCmdlet.ClusterIdentifier">
            <summary>
            <para>
            <para>The unique identifier of the cluster that you want to rotate the encryption keys for.</para><para>Constraints: Must be the name of valid cluster that has encryption enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.SwitchRSEncryptionKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.RotateEncryptionKeyResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.RotateEncryptionKeyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.SwitchRSEncryptionKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.SwitchRSEncryptionKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.RS.SwitchRSReservedNodeCmdlet">
            <summary>
            Exchanges a DC1 Reserved Node for a DC2 Reserved Node with no changes to the configuration
            (term, payment type, or number of nodes) and no additional costs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.SwitchRSReservedNodeCmdlet.ReservedNodeId">
            <summary>
            <para>
            <para>A string representing the node identifier of the DC1 Reserved Node to be exchanged.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.SwitchRSReservedNodeCmdlet.TargetReservedNodeOfferingId">
            <summary>
            <para>
            <para>The unique identifier of the DC2 Reserved Node offering to be used for the exchange.
            You can obtain the value for the parameter by calling <a>GetReservedNodeExchangeOfferings</a></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.SwitchRSReservedNodeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ExchangedReservedNode'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Redshift.Model.AcceptReservedNodeExchangeResponse).
            Specifying the name of a property of type Amazon.Redshift.Model.AcceptReservedNodeExchangeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.SwitchRSReservedNodeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedNodeId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedNodeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.RS.SwitchRSReservedNodeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
