<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.DirectoryService</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.AddDSIpRouteCmdlet">
            <summary>
            If the DNS server for your on-premises domain uses a publicly addressable IP address,
            you must add a CIDR address block to correctly route traffic to and from your Microsoft
            AD on Amazon Web Services. <i>AddIpRoutes</i> adds this address block. You can also
            use <i>AddIpRoutes</i> to facilitate routing traffic that uses public IP ranges from
            your Microsoft AD on AWS to a peer VPC. 
            
             
            <para>
            Before you call <i>AddIpRoutes</i>, ensure that all of the required permissions have
            been explicitly granted through a policy. For details about what permissions are required
            to run the <i>AddIpRoutes</i> operation, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">AWS
            Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.AddDSIpRouteCmdlet.DirectoryId">
            <summary>
            <para>
            <para>Identifier (ID) of the directory to which to add the address block.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.AddDSIpRouteCmdlet.IpRoute">
            <summary>
            <para>
            <para>IP address blocks, using CIDR format, of the traffic to route. This is often the IP
            address block of the DNS server used for your on-premises domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.AddDSIpRouteCmdlet.UpdateSecurityGroupForDirectoryController">
            <summary>
            <para>
            <para>If set to true, updates the inbound and outbound rules of the security group that
            has the description: "AWS created security group for <i>directory ID</i> directory
            controllers." Following are the new rules: </para><para>Inbound:</para><ul><li><para>Type: Custom UDP Rule, Protocol: UDP, Range: 88, Source: 0.0.0.0/0</para></li><li><para>Type: Custom UDP Rule, Protocol: UDP, Range: 123, Source: 0.0.0.0/0</para></li><li><para>Type: Custom UDP Rule, Protocol: UDP, Range: 138, Source: 0.0.0.0/0</para></li><li><para>Type: Custom UDP Rule, Protocol: UDP, Range: 389, Source: 0.0.0.0/0</para></li><li><para>Type: Custom UDP Rule, Protocol: UDP, Range: 464, Source: 0.0.0.0/0</para></li><li><para>Type: Custom UDP Rule, Protocol: UDP, Range: 445, Source: 0.0.0.0/0</para></li><li><para>Type: Custom TCP Rule, Protocol: TCP, Range: 88, Source: 0.0.0.0/0</para></li><li><para>Type: Custom TCP Rule, Protocol: TCP, Range: 135, Source: 0.0.0.0/0</para></li><li><para>Type: Custom TCP Rule, Protocol: TCP, Range: 445, Source: 0.0.0.0/0</para></li><li><para>Type: Custom TCP Rule, Protocol: TCP, Range: 464, Source: 0.0.0.0/0</para></li><li><para>Type: Custom TCP Rule, Protocol: TCP, Range: 636, Source: 0.0.0.0/0</para></li><li><para>Type: Custom TCP Rule, Protocol: TCP, Range: 1024-65535, Source: 0.0.0.0/0</para></li><li><para>Type: Custom TCP Rule, Protocol: TCP, Range: 3268-33269, Source: 0.0.0.0/0</para></li><li><para>Type: DNS (UDP), Protocol: UDP, Range: 53, Source: 0.0.0.0/0</para></li><li><para>Type: DNS (TCP), Protocol: TCP, Range: 53, Source: 0.0.0.0/0</para></li><li><para>Type: LDAP, Protocol: TCP, Range: 389, Source: 0.0.0.0/0</para></li><li><para>Type: All ICMP, Protocol: All, Range: N/A, Source: 0.0.0.0/0</para></li></ul><para>Outbound:</para><ul><li><para>Type: All traffic, Protocol: All, Range: All, Destination: 0.0.0.0/0</para></li></ul><para>These security rules impact an internal network interface that is not exposed publicly.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.AddDSIpRouteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.AddIpRoutesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.AddDSIpRouteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.AddDSIpRouteCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.AddDSResourceTagCmdlet">
            <summary>
            Adds or overwrites one or more tags for the specified directory. Each directory can
            have a maximum of 50 tags. Each tag consists of a key and optional value. Tag keys
            must be unique to each resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.AddDSResourceTagCmdlet.ResourceId">
            <summary>
            <para>
            <para>Identifier (ID) for the directory to which to add the tag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.AddDSResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.AddDSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.AddTagsToResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.AddDSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.AddDSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.ApproveDSTrustCmdlet">
            <summary>
            AWS Directory Service for Microsoft Active Directory allows you to configure and verify
            trust relationships.
            
             
            <para>
            This action verifies a trust relationship between your AWS Managed Microsoft AD directory
            and an external domain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ApproveDSTrustCmdlet.TrustId">
            <summary>
            <para>
            <para>The unique Trust ID of the trust relationship to verify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ApproveDSTrustCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrustId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.VerifyTrustResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.VerifyTrustResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ApproveDSTrustCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrustId parameter.
            The -PassThru parameter is deprecated, use -Select '^TrustId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ApproveDSTrustCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.ConfirmDSSharedDirectoryCmdlet">
            <summary>
            Accepts a directory sharing request that was sent from the directory owner account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ConfirmDSSharedDirectoryCmdlet.SharedDirectoryId">
            <summary>
            <para>
            <para>Identifier of the shared directory in the directory consumer account. This identifier
            is different for each directory owner account. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ConfirmDSSharedDirectoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SharedDirectory'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.AcceptSharedDirectoryResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.AcceptSharedDirectoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ConfirmDSSharedDirectoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SharedDirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^SharedDirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ConfirmDSSharedDirectoryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.ConnectDSDirectoryCmdlet">
            <summary>
            Creates an AD Connector to connect to an on-premises directory.
            
             
            <para>
            Before you call <code>ConnectDirectory</code>, ensure that all of the required permissions
            have been explicitly granted through a policy. For details about what permissions
            are required to run the <code>ConnectDirectory</code> operation, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">AWS
            Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ConnectDSDirectoryCmdlet.ConnectSettings_CustomerDnsIp">
            <summary>
            <para>
            <para>A list of one or more IP addresses of DNS servers or domain controllers in the on-premises
            directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ConnectDSDirectoryCmdlet.ConnectSettings_CustomerUserName">
            <summary>
            <para>
            <para>The user name of an account in the on-premises directory that is used to connect to
            the directory. This account must have the following permissions:</para><ul><li><para>Read users and groups</para></li><li><para>Create computer objects</para></li><li><para>Join computers to the domain</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ConnectDSDirectoryCmdlet.Description">
            <summary>
            <para>
            <para>A description for the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ConnectDSDirectoryCmdlet.Name">
            <summary>
            <para>
            <para>The fully qualified name of the on-premises directory, such as <code>corp.example.com</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ConnectDSDirectoryCmdlet.Password">
            <summary>
            <para>
            <para>The password for the on-premises user account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ConnectDSDirectoryCmdlet.ShortName">
            <summary>
            <para>
            <para>The NetBIOS name of the on-premises directory, such as <code>CORP</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ConnectDSDirectoryCmdlet.Size">
            <summary>
            <para>
            <para>The size of the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ConnectDSDirectoryCmdlet.ConnectSettings_SubnetId">
            <summary>
            <para>
            <para>A list of subnet identifiers in the VPC in which the AD Connector is created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ConnectDSDirectoryCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to AD Connector.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ConnectDSDirectoryCmdlet.ConnectSettings_VpcId">
            <summary>
            <para>
            <para>The identifier of the VPC in which the AD Connector is created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ConnectDSDirectoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DirectoryId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.ConnectDirectoryResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.ConnectDirectoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ConnectDSDirectoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ConnectDSDirectoryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.DenyDSSharedDirectoryCmdlet">
            <summary>
            Rejects a directory sharing request that was sent from the directory owner account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DenyDSSharedDirectoryCmdlet.SharedDirectoryId">
            <summary>
            <para>
            <para>Identifier of the shared directory in the directory consumer account. This identifier
            is different for each directory owner account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DenyDSSharedDirectoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SharedDirectoryId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.RejectSharedDirectoryResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.RejectSharedDirectoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DenyDSSharedDirectoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SharedDirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^SharedDirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DenyDSSharedDirectoryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.DisableDSDirectoryShareCmdlet">
            <summary>
            Stops the directory sharing between the directory owner and consumer accounts.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSDirectoryShareCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the AWS Managed Microsoft AD directory that you want to stop sharing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSDirectoryShareCmdlet.UnshareTarget_Id">
            <summary>
            <para>
            <para>Identifier of the directory consumer account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSDirectoryShareCmdlet.UnshareTarget_Type">
            <summary>
            <para>
            <para>Type of identifier to be used in the <i>Id</i> field.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSDirectoryShareCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SharedDirectoryId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.UnshareDirectoryResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.UnshareDirectoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSDirectoryShareCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSDirectoryShareCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.DisableDSLDAPSCmdlet">
            <summary>
            Deactivates LDAP secure calls for the specified directory.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSLDAPSCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSLDAPSCmdlet.Type">
            <summary>
            <para>
            <para>The type of LDAP security to enable. Currently only the value <code>Client</code>
            is supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSLDAPSCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.DisableLDAPSResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSLDAPSCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSLDAPSCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.DisableDSRadiusCmdlet">
            <summary>
            Disables multi-factor authentication (MFA) with the Remote Authentication Dial In
            User Service (RADIUS) server for an AD Connector or Microsoft AD directory.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSRadiusCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory for which to disable MFA.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSRadiusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.DisableRadiusResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSRadiusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSRadiusCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.DisableDSSsoCmdlet">
            <summary>
            Disables single-sign on for a directory.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSSsoCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory for which to disable single-sign on.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSSsoCmdlet.Password">
            <summary>
            <para>
            <para>The password of an alternate account to use to disable single-sign on. This is only
            used for AD Connector directories. For more information, see the <i>UserName</i> parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSSsoCmdlet.UserName">
            <summary>
            <para>
            <para>The username of an alternate account to use to disable single-sign on. This is only
            used for AD Connector directories. This account must have privileges to remove a service
            principal name.</para><para>If the AD Connector service account does not have privileges to remove a service principal
            name, you can specify an alternate account with the <i>UserName</i> and <i>Password</i>
            parameters. These credentials are only used to disable single sign-on and are not
            stored by the service. The AD Connector service account is not changed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSSsoCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.DisableSsoResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSSsoCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.DisableDSSsoCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.EnableDSDirectoryShareCmdlet">
            <summary>
            Shares a specified directory (<code>DirectoryId</code>) in your AWS account (directory
            owner) with another AWS account (directory consumer). With this operation you can
            use your directory from any AWS account and from any Amazon VPC within an AWS Region.
            
             
            <para>
            When you share your AWS Managed Microsoft AD directory, AWS Directory Service creates
            a shared directory in the directory consumer account. This shared directory contains
            the metadata to provide access to the directory within the directory owner account.
            The shared directory is visible in all VPCs in the directory consumer account.
            </para><para>
            The <code>ShareMethod</code> parameter determines whether the specified directory
            can be shared between AWS accounts inside the same AWS organization (<code>ORGANIZATIONS</code>).
            It also determines whether you can share the directory with any other AWS account
            either inside or outside of the organization (<code>HANDSHAKE</code>).
            </para><para>
            The <code>ShareNotes</code> parameter is only used when <code>HANDSHAKE</code> is
            called, which sends a directory sharing request to the directory consumer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSDirectoryShareCmdlet.DirectoryId">
            <summary>
            <para>
            <para>Identifier of the AWS Managed Microsoft AD directory that you want to share with other
            AWS accounts.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSDirectoryShareCmdlet.ShareTarget_Id">
            <summary>
            <para>
            <para>Identifier of the directory consumer account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSDirectoryShareCmdlet.ShareMethod">
            <summary>
            <para>
            <para>The method used when sharing a directory to determine whether the directory should
            be shared within your AWS organization (<code>ORGANIZATIONS</code>) or with any AWS
            account by sending a directory sharing request (<code>HANDSHAKE</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSDirectoryShareCmdlet.ShareNote">
            <summary>
            <para>
            <para>A directory share request that is sent by the directory owner to the directory consumer.
            The request includes a typed message to help the directory consumer administrator
            determine whether to approve or reject the share invitation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSDirectoryShareCmdlet.ShareTarget_Type">
            <summary>
            <para>
            <para>Type of identifier to be used in the <code>Id</code> field.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSDirectoryShareCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SharedDirectoryId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.ShareDirectoryResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.ShareDirectoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSDirectoryShareCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSDirectoryShareCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.EnableDSLDAPSCmdlet">
            <summary>
            Activates the switch for the specific directory to always use LDAP secure calls.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSLDAPSCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSLDAPSCmdlet.Type">
            <summary>
            <para>
            <para>The type of LDAP security to enable. Currently only the value <code>Client</code>
            is supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSLDAPSCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.EnableLDAPSResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSLDAPSCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSLDAPSCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.EnableDSRadiusCmdlet">
            <summary>
            Enables multi-factor authentication (MFA) with the Remote Authentication Dial In User
            Service (RADIUS) server for an AD Connector or Microsoft AD directory.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSRadiusCmdlet.RadiusSettings_AuthenticationProtocol">
            <summary>
            <para>
            <para>The protocol specified for your RADIUS endpoints.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSRadiusCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory for which to enable MFA.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSRadiusCmdlet.RadiusSettings_DisplayLabel">
            <summary>
            <para>
            <para>Not currently used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSRadiusCmdlet.RadiusSettings_RadiusPort">
            <summary>
            <para>
            <para>The port that your RADIUS server is using for communications. Your on-premises network
            must allow inbound traffic over this port from the AWS Directory Service servers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSRadiusCmdlet.RadiusSettings_RadiusRetry">
            <summary>
            <para>
            <para>The maximum number of times that communication with the RADIUS server is attempted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSRadiusCmdlet.RadiusSettings_RadiusServer">
            <summary>
            <para>
            <para>An array of strings that contains the IP addresses of the RADIUS server endpoints,
            or the IP addresses of your RADIUS server load balancer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSRadiusCmdlet.RadiusSettings_RadiusTimeout">
            <summary>
            <para>
            <para>The amount of time, in seconds, to wait for the RADIUS server to respond.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSRadiusCmdlet.RadiusSettings_SharedSecret">
            <summary>
            <para>
            <para>Required for enabling RADIUS on the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSRadiusCmdlet.RadiusSettings_UseSameUsername">
            <summary>
            <para>
            <para>Not currently used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSRadiusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.EnableRadiusResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSRadiusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSRadiusCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.EnableDSSsoCmdlet">
            <summary>
            Enables single sign-on for a directory. Single sign-on allows users in your directory
            to access certain AWS services from a computer joined to the directory without having
            to enter their credentials separately.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSSsoCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory for which to enable single-sign on.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSSsoCmdlet.Password">
            <summary>
            <para>
            <para>The password of an alternate account to use to enable single-sign on. This is only
            used for AD Connector directories. For more information, see the <i>UserName</i> parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSSsoCmdlet.UserName">
            <summary>
            <para>
            <para>The username of an alternate account to use to enable single-sign on. This is only
            used for AD Connector directories. This account must have privileges to add a service
            principal name.</para><para>If the AD Connector service account does not have privileges to add a service principal
            name, you can specify an alternate account with the <i>UserName</i> and <i>Password</i>
            parameters. These credentials are only used to enable single sign-on and are not stored
            by the service. The AD Connector service account is not changed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSSsoCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.EnableSsoResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSSsoCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.EnableDSSsoCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.GetDSCertificateCmdlet">
            <summary>
            Displays information about the certificate registered for a secured LDAP connection.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSCertificateCmdlet.CertificateId">
            <summary>
            <para>
            <para>The identifier of the certificate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSCertificateCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Certificate'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.DescribeCertificateResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.DescribeCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateId parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.GetDSCertificateListCmdlet">
            <summary>
            For the specified directory, lists all the certificates registered for a secured LDAP
            connection.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSCertificateListCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSCertificateListCmdlet.Limit">
            <summary>
            <para>
            <para>The number of items that should show up on one page</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSCertificateListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token for requesting another page of certificates if the <code>NextToken</code>
            response element indicates that more certificates are available. Use the value of
            the returned <code>NextToken</code> element in your request until the token comes
            back as <code>null</code>. Pass <code>null</code> if this is the first call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSCertificateListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CertificatesInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.ListCertificatesResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.ListCertificatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSCertificateListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSCertificateListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.GetDSConditionalForwarderCmdlet">
            <summary>
            Obtains information about the conditional forwarders for this account.
            
             
            <para>
            If no input parameters are provided for RemoteDomainNames, this request describes
            all conditional forwarders for the specified directory ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSConditionalForwarderCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The directory ID for which to get the list of associated conditional forwarders.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSConditionalForwarderCmdlet.RemoteDomainName">
            <summary>
            <para>
            <para>The fully qualified domain names (FQDN) of the remote domains for which to get the
            list of associated conditional forwarders. If this member is null, all conditional
            forwarders are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSConditionalForwarderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ConditionalForwarders'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.DescribeConditionalForwardersResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.DescribeConditionalForwardersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSConditionalForwarderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.GetDSDirectoryCmdlet">
            <summary>
            Obtains information about the directories that belong to this account.
            
             
            <para>
            You can retrieve information about specific directories by passing the directory identifiers
            in the <code>DirectoryIds</code> parameter. Otherwise, all directories that belong
            to the current account are returned.
            </para><para>
            This operation supports pagination with the use of the <code>NextToken</code> request
            and response parameters. If more results are available, the <code>DescribeDirectoriesResult.NextToken</code>
            member contains a token that you pass in the next call to <a>DescribeDirectories</a>
            to retrieve the next set of items.
            </para><para>
            You can also specify a maximum number of return results with the <code>Limit</code>
            parameter.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSDirectoryCmdlet.DirectoryId">
            <summary>
            <para>
            <para>A list of identifiers of the directories for which to obtain the information. If this
            member is null, all directories that belong to the current account are returned.</para><para>An empty list results in an <code>InvalidParameterException</code> being thrown.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSDirectoryCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of items to return. If this value is zero, the maximum number of
            items is specified by the limitations of the operation.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSDirectoryCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>DescribeDirectoriesResult.NextToken</code> value from a previous call to
            <a>DescribeDirectories</a>. Pass null if this is the first call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSDirectoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DirectoryDescriptions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.DescribeDirectoriesResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.DescribeDirectoriesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSDirectoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSDirectoryCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.GetDSDirectoryLimitCmdlet">
            <summary>
            Obtains directory limit information for the current Region.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSDirectoryLimitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DirectoryLimits'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.GetDirectoryLimitsResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.GetDirectoryLimitsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.GetDSDomainControllerListCmdlet">
            <summary>
            Provides information about any domain controllers in your directory.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSDomainControllerListCmdlet.DirectoryId">
            <summary>
            <para>
            <para>Identifier of the directory for which to retrieve the domain controller information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSDomainControllerListCmdlet.DomainControllerId">
            <summary>
            <para>
            <para>A list of identifiers for the domain controllers whose information will be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSDomainControllerListCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of items to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSDomainControllerListCmdlet.NextToken">
            <summary>
            <para>
            <para>The <i>DescribeDomainControllers.NextToken</i> value from a previous call to <a>DescribeDomainControllers</a>.
            Pass null if this is the first call. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSDomainControllerListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DomainControllers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.DescribeDomainControllersResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.DescribeDomainControllersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSDomainControllerListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSDomainControllerListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.GetDSEventTopicCmdlet">
            <summary>
            Obtains information about which SNS topics receive status messages from the specified
            directory.
            
             
            <para>
            If no input parameters are provided, such as DirectoryId or TopicName, this request
            describes all of the associations in the account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSEventTopicCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The Directory ID for which to get the list of associated SNS topics. If this member
            is null, associations for all Directory IDs are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSEventTopicCmdlet.TopicName">
            <summary>
            <para>
            <para>A list of SNS topic names for which to obtain the information. If this member is null,
            all associations for the specified Directory ID are returned.</para><para>An empty list results in an <code>InvalidParameterException</code> being thrown.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSEventTopicCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventTopics'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.DescribeEventTopicsResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.DescribeEventTopicsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSEventTopicCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TopicName parameter.
            The -PassThru parameter is deprecated, use -Select '^TopicName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.GetDSIpRouteListCmdlet">
            <summary>
            Lists the address blocks that you have added to a directory.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSIpRouteListCmdlet.DirectoryId">
            <summary>
            <para>
            <para>Identifier (ID) of the directory for which you want to retrieve the IP addresses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSIpRouteListCmdlet.Limit">
            <summary>
            <para>
            <para>Maximum number of items to return. If this value is zero, the maximum number of items
            is specified by the limitations of the operation.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSIpRouteListCmdlet.NextToken">
            <summary>
            <para>
            <para>The <i>ListIpRoutes.NextToken</i> value from a previous call to <a>ListIpRoutes</a>.
            Pass null if this is the first call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSIpRouteListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IpRoutesInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.ListIpRoutesResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.ListIpRoutesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSIpRouteListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSIpRouteListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.GetDSLDAPSSettingCmdlet">
            <summary>
            Describes the status of LDAP security for the specified directory.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSLDAPSSettingCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSLDAPSSettingCmdlet.Type">
            <summary>
            <para>
            <para>The type of LDAP security to enable. Currently only the value <code>Client</code>
            is supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSLDAPSSettingCmdlet.Limit">
            <summary>
            <para>
            <para>Specifies the number of items that should be displayed on one page.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSLDAPSSettingCmdlet.NextToken">
            <summary>
            <para>
            <para>The type of next token used for pagination.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSLDAPSSettingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LDAPSSettingsInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.DescribeLDAPSSettingsResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.DescribeLDAPSSettingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSLDAPSSettingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSLDAPSSettingCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.GetDSLogSubscriptionListCmdlet">
            <summary>
            Lists the active log subscriptions for the AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSLogSubscriptionListCmdlet.DirectoryId">
            <summary>
            <para>
            <para>If a <i>DirectoryID</i> is provided, lists only the log subscription associated with
            that directory. If no <i>DirectoryId</i> is provided, lists all log subscriptions
            associated with your AWS account. If there are no log subscriptions for the AWS account
            or the directory, an empty list will be returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSLogSubscriptionListCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of items returned.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSLogSubscriptionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSLogSubscriptionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LogSubscriptions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.ListLogSubscriptionsResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.ListLogSubscriptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSLogSubscriptionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSLogSubscriptionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.GetDSResourceTagCmdlet">
            <summary>
            Lists all tags on a directory.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSResourceTagCmdlet.ResourceId">
            <summary>
            <para>
            <para>Identifier (ID) of the directory for which you want to retrieve tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSResourceTagCmdlet.Limit">
            <summary>
            <para>
            <para>Reserved for future use.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSResourceTagCmdlet.NextToken">
            <summary>
            <para>
            <para>Reserved for future use.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSResourceTagCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.GetDSSchemaExtensionCmdlet">
            <summary>
            Lists all schema extensions applied to a Microsoft AD Directory.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSchemaExtensionCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory from which to retrieve the schema extension information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSchemaExtensionCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of items to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSchemaExtensionCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>ListSchemaExtensions.NextToken</code> value from a previous call to <code>ListSchemaExtensions</code>.
            Pass null if this is the first call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSchemaExtensionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SchemaExtensionsInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.ListSchemaExtensionsResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.ListSchemaExtensionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSchemaExtensionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSchemaExtensionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.GetDSSharedDirectoryCmdlet">
            <summary>
            Returns the shared directories in your account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSharedDirectoryCmdlet.OwnerDirectoryId">
            <summary>
            <para>
            <para>Returns the identifier of the directory in the directory owner account. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSharedDirectoryCmdlet.SharedDirectoryId">
            <summary>
            <para>
            <para>A list of identifiers of all shared directories in your account. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSharedDirectoryCmdlet.Limit">
            <summary>
            <para>
            <para>The number of shared directories to return in the response object.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSharedDirectoryCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>DescribeSharedDirectoriesResult.NextToken</code> value from a previous call
            to <a>DescribeSharedDirectories</a>. Pass null if this is the first call. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSharedDirectoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SharedDirectories'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.DescribeSharedDirectoriesResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.DescribeSharedDirectoriesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSharedDirectoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OwnerDirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^OwnerDirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSharedDirectoryCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.GetDSSnapshotCmdlet">
            <summary>
            Obtains information about the directory snapshots that belong to this account.
            
             
            <para>
            This operation supports pagination with the use of the <i>NextToken</i> request and
            response parameters. If more results are available, the <i>DescribeSnapshots.NextToken</i>
            member contains a token that you pass in the next call to <a>DescribeSnapshots</a>
            to retrieve the next set of items.
            </para><para>
            You can also specify a maximum number of return results with the <i>Limit</i> parameter.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSnapshotCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory for which to retrieve snapshot information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSnapshotCmdlet.SnapshotId">
            <summary>
            <para>
            <para>A list of identifiers of the snapshots to obtain the information for. If this member
            is null or empty, all snapshots are returned using the <i>Limit</i> and <i>NextToken</i>
            members.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSnapshotCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of objects to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSnapshotCmdlet.NextToken">
            <summary>
            <para>
            <para>The <i>DescribeSnapshotsResult.NextToken</i> value from a previous call to <a>DescribeSnapshots</a>.
            Pass null if this is the first call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Snapshots'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.DescribeSnapshotsResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.DescribeSnapshotsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSnapshotCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.GetDSSnapshotLimitCmdlet">
            <summary>
            Obtains the manual snapshot limits for a directory.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSnapshotLimitCmdlet.DirectoryId">
            <summary>
            <para>
            <para>Contains the identifier of the directory to obtain the limits for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSnapshotLimitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SnapshotLimits'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.GetSnapshotLimitsResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.GetSnapshotLimitsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSSnapshotLimitCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.GetDSTrustCmdlet">
            <summary>
            Obtains information about the trust relationships for this account.
            
             
            <para>
            If no input parameters are provided, such as DirectoryId or TrustIds, this request
            describes all the trust relationships belonging to the account.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSTrustCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The Directory ID of the AWS directory that is a part of the requested trust relationship.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSTrustCmdlet.TrustId">
            <summary>
            <para>
            <para>A list of identifiers of the trust relationships for which to obtain the information.
            If this member is null, all trust relationships that belong to the current account
            are returned.</para><para>An empty list results in an <code>InvalidParameterException</code> being thrown.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSTrustCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of objects to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSTrustCmdlet.NextToken">
            <summary>
            <para>
            <para>The <i>DescribeTrustsResult.NextToken</i> value from a previous call to <a>DescribeTrusts</a>.
            Pass null if this is the first call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSTrustCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Trusts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.DescribeTrustsResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.DescribeTrustsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSTrustCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.GetDSTrustCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.NewDSAliasCmdlet">
            <summary>
            Creates an alias for a directory and assigns the alias to the directory. The alias
            is used to construct the access URL for the directory, such as <code>http://&lt;alias&gt;.awsapps.com</code>.
            
             <important><para>
            After an alias has been created, it cannot be deleted or reused, so this operation
            should only be used when absolutely necessary.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSAliasCmdlet.Alias">
            <summary>
            <para>
            <para>The requested alias.</para><para>The alias must be unique amongst all aliases in AWS. This operation throws an <code>EntityAlreadyExistsException</code>
            error if the alias already exists.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSAliasCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory for which to create the alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.CreateAliasResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.CreateAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.NewDSComputerCmdlet">
            <summary>
            Creates a computer account in the specified directory, and joins the computer to the
            directory.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSComputerCmdlet.ComputerAttribute">
            <summary>
            <para>
            <para>An array of <a>Attribute</a> objects that contain any LDAP attributes to apply to
            the computer account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSComputerCmdlet.ComputerName">
            <summary>
            <para>
            <para>The name of the computer account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSComputerCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory in which to create the computer account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSComputerCmdlet.OrganizationalUnitDistinguishedName">
            <summary>
            <para>
            <para>The fully-qualified distinguished name of the organizational unit to place the computer
            account in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSComputerCmdlet.Password">
            <summary>
            <para>
            <para>A one-time password that is used to join the computer to the directory. You should
            generate a random, strong password to use for this parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSComputerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Computer'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.CreateComputerResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.CreateComputerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSComputerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSComputerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.NewDSConditionalForwarderCmdlet">
            <summary>
            Creates a conditional forwarder associated with your AWS directory. Conditional forwarders
            are required in order to set up a trust relationship with another domain. The conditional
            forwarder points to the trusted domain.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSConditionalForwarderCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The directory ID of the AWS directory for which you are creating the conditional forwarder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSConditionalForwarderCmdlet.DnsIpAddr">
            <summary>
            <para>
            <para>The IP addresses of the remote DNS server associated with RemoteDomainName.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSConditionalForwarderCmdlet.RemoteDomainName">
            <summary>
            <para>
            <para>The fully qualified domain name (FQDN) of the remote domain with which you will set
            up a trust relationship.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSConditionalForwarderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.CreateConditionalForwarderResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSConditionalForwarderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSConditionalForwarderCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.NewDSDirectoryCmdlet">
            <summary>
            Creates a Simple AD directory. For more information, see <a href="https://docs.aws.amazon.com/directoryservice/latest/admin-guide/directory_simple_ad.html">Simple
            Active Directory</a> in the <i>AWS Directory Service Admin Guide</i>.
            
             
            <para>
            Before you call <code>CreateDirectory</code>, ensure that all of the required permissions
            have been explicitly granted through a policy. For details about what permissions
            are required to run the <code>CreateDirectory</code> operation, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">AWS
            Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSDirectoryCmdlet.Description">
            <summary>
            <para>
            <para>A description for the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSDirectoryCmdlet.Name">
            <summary>
            <para>
            <para>The fully qualified name for the directory, such as <code>corp.example.com</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSDirectoryCmdlet.Password">
            <summary>
            <para>
            <para>The password for the directory administrator. The directory creation process creates
            a directory administrator account with the user name <code>Administrator</code> and
            this password.</para><para>If you need to change the password for the administrator account, you can use the
            <a>ResetUserPassword</a> API call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSDirectoryCmdlet.ShortName">
            <summary>
            <para>
            <para>The NetBIOS name of the directory, such as <code>CORP</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSDirectoryCmdlet.Size">
            <summary>
            <para>
            <para>The size of the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSDirectoryCmdlet.VpcSettings_SubnetId">
            <summary>
            <para>
            <para>The identifiers of the subnets for the directory servers. The two subnets must be
            in different Availability Zones. AWS Directory Service creates a directory server
            and a DNS server in each of these subnets.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSDirectoryCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the Simple AD directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSDirectoryCmdlet.VpcSettings_VpcId">
            <summary>
            <para>
            <para>The identifier of the VPC in which to create the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSDirectoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DirectoryId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.CreateDirectoryResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.CreateDirectoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSDirectoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSDirectoryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.NewDSLogSubscriptionCmdlet">
            <summary>
            Creates a subscription to forward real-time Directory Service domain controller security
            logs to the specified Amazon CloudWatch log group in your AWS account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSLogSubscriptionCmdlet.DirectoryId">
            <summary>
            <para>
            <para>Identifier of the directory to which you want to subscribe and receive real-time logs
            to your specified CloudWatch log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSLogSubscriptionCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the CloudWatch log group where the real-time domain controller logs are
            forwarded.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSLogSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.CreateLogSubscriptionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSLogSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSLogSubscriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.NewDSMicrosoftADCmdlet">
            <summary>
            Creates a Microsoft AD directory in the AWS Cloud. For more information, see <a href="https://docs.aws.amazon.com/directoryservice/latest/admin-guide/directory_microsoft_ad.html">AWS
            Managed Microsoft AD</a> in the <i>AWS Directory Service Admin Guide</i>.
            
             
            <para>
            Before you call <i>CreateMicrosoftAD</i>, ensure that all of the required permissions
            have been explicitly granted through a policy. For details about what permissions
            are required to run the <i>CreateMicrosoftAD</i> operation, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">AWS
            Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSMicrosoftADCmdlet.Description">
            <summary>
            <para>
            <para>A description for the directory. This label will appear on the AWS console <code>Directory
            Details</code> page after the directory is created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSMicrosoftADCmdlet.Edition">
            <summary>
            <para>
            <para>AWS Managed Microsoft AD is available in two editions: <code>Standard</code> and <code>Enterprise</code>.
            <code>Enterprise</code> is the default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSMicrosoftADCmdlet.Name">
            <summary>
            <para>
            <para>The fully qualified domain name for the AWS Managed Microsoft AD directory, such as
            <code>corp.example.com</code>. This name will resolve inside your VPC only. It does
            not need to be publicly resolvable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSMicrosoftADCmdlet.Password">
            <summary>
            <para>
            <para>The password for the default administrative user named <code>Admin</code>.</para><para>If you need to change the password for the administrator account, you can use the
            <a>ResetUserPassword</a> API call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSMicrosoftADCmdlet.ShortName">
            <summary>
            <para>
            <para>The NetBIOS name for your domain, such as <code>CORP</code>. If you don't specify
            a NetBIOS name, it will default to the first part of your directory DNS. For example,
            <code>CORP</code> for the directory DNS <code>corp.example.com</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSMicrosoftADCmdlet.VpcSettings_SubnetId">
            <summary>
            <para>
            <para>The identifiers of the subnets for the directory servers. The two subnets must be
            in different Availability Zones. AWS Directory Service creates a directory server
            and a DNS server in each of these subnets.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSMicrosoftADCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the AWS Managed Microsoft AD directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSMicrosoftADCmdlet.VpcSettings_VpcId">
            <summary>
            <para>
            <para>The identifier of the VPC in which to create the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSMicrosoftADCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DirectoryId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.CreateMicrosoftADResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.CreateMicrosoftADResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSMicrosoftADCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSMicrosoftADCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.NewDSSnapshotCmdlet">
            <summary>
            Creates a snapshot of a Simple AD or Microsoft AD directory in the AWS cloud.
            
             <note><para>
            You cannot take snapshots of AD Connector directories.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSSnapshotCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory of which to take a snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSSnapshotCmdlet.Name">
            <summary>
            <para>
            <para>The descriptive name to apply to the snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SnapshotId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.CreateSnapshotResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.CreateSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.NewDSTrustCmdlet">
            <summary>
            AWS Directory Service for Microsoft Active Directory allows you to configure trust
            relationships. For example, you can establish a trust between your AWS Managed Microsoft
            AD directory, and your existing on-premises Microsoft Active Directory. This would
            allow you to provide users and groups access to resources in either domain, with a
            single set of credentials.
            
             
            <para>
            This action initiates the creation of the AWS side of a trust relationship between
            an AWS Managed Microsoft AD directory and an external domain. You can create either
            a forest trust or an external trust.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSTrustCmdlet.ConditionalForwarderIpAddr">
            <summary>
            <para>
            <para>The IP addresses of the remote DNS server associated with RemoteDomainName.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSTrustCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The Directory ID of the AWS Managed Microsoft AD directory for which to establish
            the trust relationship.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSTrustCmdlet.RemoteDomainName">
            <summary>
            <para>
            <para>The Fully Qualified Domain Name (FQDN) of the external domain for which to create
            the trust relationship.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSTrustCmdlet.SelectiveAuth">
            <summary>
            <para>
            <para>Optional parameter to enable selective authentication for the trust.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSTrustCmdlet.TrustDirection">
            <summary>
            <para>
            <para>The direction of the trust relationship.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSTrustCmdlet.TrustPassword">
            <summary>
            <para>
            <para>The trust password. The must be the same password that was used when creating the
            trust relationship on the external domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSTrustCmdlet.TrustType">
            <summary>
            <para>
            <para>The trust relationship type. <code>Forest</code> is the default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSTrustCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrustId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.CreateTrustResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.CreateTrustResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSTrustCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.NewDSTrustCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.RegisterDSCertificateCmdlet">
            <summary>
            Registers a certificate for secured LDAP connection.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RegisterDSCertificateCmdlet.CertificateData">
            <summary>
            <para>
            <para>The certificate PEM string that needs to be registered.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RegisterDSCertificateCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RegisterDSCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CertificateId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.RegisterCertificateResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.RegisterCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RegisterDSCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateData parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateData' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RegisterDSCertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.RegisterDSEventTopicCmdlet">
            <summary>
            Associates a directory with an SNS topic. This establishes the directory as a publisher
            to the specified SNS topic. You can then receive email or text (SMS) messages when
            the status of your directory changes. You get notified if your directory goes from
            an Active status to an Impaired or Inoperable status. You also receive a notification
            when the directory returns to an Active status.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RegisterDSEventTopicCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The Directory ID that will publish status messages to the SNS topic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RegisterDSEventTopicCmdlet.TopicName">
            <summary>
            <para>
            <para>The SNS topic name to which the directory will publish status messages. This SNS topic
            must be in the same region as the specified Directory ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RegisterDSEventTopicCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.RegisterEventTopicResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RegisterDSEventTopicCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TopicName parameter.
            The -PassThru parameter is deprecated, use -Select '^TopicName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RegisterDSEventTopicCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.RemoveDSConditionalForwarderCmdlet">
            <summary>
            Deletes a conditional forwarder that has been set up for your AWS directory.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSConditionalForwarderCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The directory ID for which you are deleting the conditional forwarder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSConditionalForwarderCmdlet.RemoteDomainName">
            <summary>
            <para>
            <para>The fully qualified domain name (FQDN) of the remote domain with which you are deleting
            the conditional forwarder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSConditionalForwarderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.DeleteConditionalForwarderResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSConditionalForwarderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSConditionalForwarderCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.RemoveDSDirectoryCmdlet">
            <summary>
            Deletes an AWS Directory Service directory.
            
             
            <para>
            Before you call <code>DeleteDirectory</code>, ensure that all of the required permissions
            have been explicitly granted through a policy. For details about what permissions
            are required to run the <code>DeleteDirectory</code> operation, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">AWS
            Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSDirectoryCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSDirectoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DirectoryId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.DeleteDirectoryResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.DeleteDirectoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSDirectoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSDirectoryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.RemoveDSIpRouteCmdlet">
            <summary>
            Removes IP address blocks from a directory.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSIpRouteCmdlet.CidrIp">
            <summary>
            <para>
            <para>IP address blocks that you want to remove.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSIpRouteCmdlet.DirectoryId">
            <summary>
            <para>
            <para>Identifier (ID) of the directory from which you want to remove the IP addresses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSIpRouteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.RemoveIpRoutesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSIpRouteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSIpRouteCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.RemoveDSLogSubscriptionCmdlet">
            <summary>
            Deletes the specified log subscription.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSLogSubscriptionCmdlet.DirectoryId">
            <summary>
            <para>
            <para>Identifier of the directory whose log subscription you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSLogSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.DeleteLogSubscriptionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSLogSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSLogSubscriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.RemoveDSResourceTagCmdlet">
            <summary>
            Removes tags from a directory.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSResourceTagCmdlet.ResourceId">
            <summary>
            <para>
            <para>Identifier (ID) of the directory from which to remove the tag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The tag key (name) of the tag to be removed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.RemoveTagsFromResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.RemoveDSSnapshotCmdlet">
            <summary>
            Deletes a directory snapshot.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSSnapshotCmdlet.SnapshotId">
            <summary>
            <para>
            <para>The identifier of the directory snapshot to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SnapshotId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.DeleteSnapshotResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.DeleteSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotId parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.RemoveDSTrustCmdlet">
            <summary>
            Deletes an existing trust relationship between your AWS Managed Microsoft AD directory
            and an external domain.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSTrustCmdlet.DeleteAssociatedConditionalForwarder">
            <summary>
            <para>
            <para>Delete a conditional forwarder as part of a DeleteTrustRequest.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSTrustCmdlet.TrustId">
            <summary>
            <para>
            <para>The Trust ID of the trust relationship to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSTrustCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TrustId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.DeleteTrustResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.DeleteTrustResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSTrustCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrustId parameter.
            The -PassThru parameter is deprecated, use -Select '^TrustId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RemoveDSTrustCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.ResetDSUserPasswordCmdlet">
            <summary>
            Resets the password for any user in your AWS Managed Microsoft AD or Simple AD directory.
            
             
            <para>
            You can reset the password for any user in your directory with the following exceptions:
            </para><ul><li><para>
            For Simple AD, you cannot reset the password for any user that is a member of either
            the <b>Domain Admins</b> or <b>Enterprise Admins</b> group except for the administrator
            user.
            </para></li><li><para>
            For AWS Managed Microsoft AD, you can only reset the password for a user that is in
            an OU based off of the NetBIOS name that you typed when you created your directory.
            For example, you cannot reset the password for a user in the <b>AWS Reserved</b> OU.
            For more information about the OU structure for an AWS Managed Microsoft AD directory,
            see <a href="https://docs.aws.amazon.com/directoryservice/latest/admin-guide/ms_ad_getting_started_what_gets_created.html">What
            Gets Created</a> in the <i>AWS Directory Service Administration Guide</i>.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ResetDSUserPasswordCmdlet.DirectoryId">
            <summary>
            <para>
            <para>Identifier of the AWS Managed Microsoft AD or Simple AD directory in which the user
            resides.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ResetDSUserPasswordCmdlet.NewPassword">
            <summary>
            <para>
            <para>The new password that will be reset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ResetDSUserPasswordCmdlet.UserName">
            <summary>
            <para>
            <para>The user name of the user whose password will be reset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ResetDSUserPasswordCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.ResetUserPasswordResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ResetDSUserPasswordCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserName parameter.
            The -PassThru parameter is deprecated, use -Select '^UserName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.ResetDSUserPasswordCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.RestoreDSFromSnapshotCmdlet">
            <summary>
            Restores a directory using an existing directory snapshot.
            
             
            <para>
            When you restore a directory from a snapshot, any changes made to the directory after
            the snapshot date are overwritten.
            </para><para>
            This action returns as soon as the restore operation is initiated. You can monitor
            the progress of the restore operation by calling the <a>DescribeDirectories</a> operation
            with the directory identifier. When the <b>DirectoryDescription.Stage</b> value changes
            to <code>Active</code>, the restore operation is complete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RestoreDSFromSnapshotCmdlet.SnapshotId">
            <summary>
            <para>
            <para>The identifier of the snapshot to restore from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RestoreDSFromSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.RestoreFromSnapshotResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RestoreDSFromSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotId parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.RestoreDSFromSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.SetDSDomainControllerCountCmdlet">
            <summary>
            Adds or removes domain controllers to or from the directory. Based on the difference
            between current value and new value (provided through this API call), domain controllers
            will be added or removed. It may take up to 45 minutes for any new domain controllers
            to become fully active once the requested number of domain controllers is updated.
            During this time, you cannot make another update request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.SetDSDomainControllerCountCmdlet.DesiredNumber">
            <summary>
            <para>
            <para>The number of domain controllers desired in the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.SetDSDomainControllerCountCmdlet.DirectoryId">
            <summary>
            <para>
            <para>Identifier of the directory to which the domain controllers will be added or removed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.SetDSDomainControllerCountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.UpdateNumberOfDomainControllersResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.SetDSDomainControllerCountCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DesiredNumber parameter.
            The -PassThru parameter is deprecated, use -Select '^DesiredNumber' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.SetDSDomainControllerCountCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.StartDSSchemaExtensionCmdlet">
            <summary>
            Applies a schema extension to a Microsoft AD directory.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.StartDSSchemaExtensionCmdlet.CreateSnapshotBeforeSchemaExtension">
            <summary>
            <para>
            <para>If true, creates a snapshot of the directory before applying the schema extension.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.StartDSSchemaExtensionCmdlet.Description">
            <summary>
            <para>
            <para>A description of the schema extension.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.StartDSSchemaExtensionCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory for which the schema extension will be applied to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.StartDSSchemaExtensionCmdlet.LdifContent">
            <summary>
            <para>
            <para>The LDIF file represented as a string. To construct the LdifContent string, precede
            each line as it would be formatted in an ldif file with \n. See the example request
            below for more details. The file size can be no larger than 1MB.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.StartDSSchemaExtensionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SchemaExtensionId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.StartSchemaExtensionResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.StartSchemaExtensionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.StartDSSchemaExtensionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.StartDSSchemaExtensionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.StopDSSchemaExtensionCmdlet">
            <summary>
            Cancels an in-progress schema extension to a Microsoft AD directory. Once a schema
            extension has started replicating to all domain controllers, the task can no longer
            be canceled. A schema extension can be canceled during any of the following states;
            <code>Initializing</code>, <code>CreatingSnapshot</code>, and <code>UpdatingSchema</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.StopDSSchemaExtensionCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory whose schema extension will be canceled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.StopDSSchemaExtensionCmdlet.SchemaExtensionId">
            <summary>
            <para>
            <para>The identifier of the schema extension that will be canceled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.StopDSSchemaExtensionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.CancelSchemaExtensionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.StopDSSchemaExtensionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.StopDSSchemaExtensionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.UnregisterDSCertificateCmdlet">
            <summary>
            Deletes from the system the certificate that was registered for a secured LDAP connection.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UnregisterDSCertificateCmdlet.CertificateId">
            <summary>
            <para>
            <para>The identifier of the certificate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UnregisterDSCertificateCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UnregisterDSCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.DeregisterCertificateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UnregisterDSCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateId parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UnregisterDSCertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.UnregisterDSEventTopicCmdlet">
            <summary>
            Removes the specified directory as a publisher to the specified SNS topic.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UnregisterDSEventTopicCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The Directory ID to remove as a publisher. This directory will no longer send messages
            to the specified SNS topic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UnregisterDSEventTopicCmdlet.TopicName">
            <summary>
            <para>
            <para>The name of the SNS topic from which to remove the directory as a publisher.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UnregisterDSEventTopicCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.DeregisterEventTopicResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UnregisterDSEventTopicCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UnregisterDSEventTopicCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.UpdateDSConditionalForwarderCmdlet">
            <summary>
            Updates a conditional forwarder that has been set up for your AWS directory.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSConditionalForwarderCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The directory ID of the AWS directory for which to update the conditional forwarder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSConditionalForwarderCmdlet.DnsIpAddr">
            <summary>
            <para>
            <para>The updated IP addresses of the remote DNS server associated with the conditional
            forwarder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSConditionalForwarderCmdlet.RemoteDomainName">
            <summary>
            <para>
            <para>The fully qualified domain name (FQDN) of the remote domain with which you will set
            up a trust relationship.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSConditionalForwarderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.UpdateConditionalForwarderResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSConditionalForwarderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSConditionalForwarderCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.UpdateDSRadiusCmdlet">
            <summary>
            Updates the Remote Authentication Dial In User Service (RADIUS) server information
            for an AD Connector or Microsoft AD directory.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSRadiusCmdlet.RadiusSettings_AuthenticationProtocol">
            <summary>
            <para>
            <para>The protocol specified for your RADIUS endpoints.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSRadiusCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory for which to update the RADIUS server information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSRadiusCmdlet.RadiusSettings_DisplayLabel">
            <summary>
            <para>
            <para>Not currently used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSRadiusCmdlet.RadiusSettings_RadiusPort">
            <summary>
            <para>
            <para>The port that your RADIUS server is using for communications. Your on-premises network
            must allow inbound traffic over this port from the AWS Directory Service servers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSRadiusCmdlet.RadiusSettings_RadiusRetry">
            <summary>
            <para>
            <para>The maximum number of times that communication with the RADIUS server is attempted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSRadiusCmdlet.RadiusSettings_RadiusServer">
            <summary>
            <para>
            <para>An array of strings that contains the IP addresses of the RADIUS server endpoints,
            or the IP addresses of your RADIUS server load balancer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSRadiusCmdlet.RadiusSettings_RadiusTimeout">
            <summary>
            <para>
            <para>The amount of time, in seconds, to wait for the RADIUS server to respond.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSRadiusCmdlet.RadiusSettings_SharedSecret">
            <summary>
            <para>
            <para>Required for enabling RADIUS on the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSRadiusCmdlet.RadiusSettings_UseSameUsername">
            <summary>
            <para>
            <para>Not currently used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSRadiusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.UpdateRadiusResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSRadiusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSRadiusCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DS.UpdateDSTrustCmdlet">
            <summary>
            Updates the trust that has been set up between your AWS Managed Microsoft AD directory
            and an on-premises Active Directory.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSTrustCmdlet.SelectiveAuth">
            <summary>
            <para>
            <para>Updates selective authentication for the trust.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSTrustCmdlet.TrustId">
            <summary>
            <para>
            <para>Identifier of the trust relationship.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSTrustCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectoryService.Model.UpdateTrustResponse).
            Specifying the name of a property of type Amazon.DirectoryService.Model.UpdateTrustResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSTrustCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrustId parameter.
            The -PassThru parameter is deprecated, use -Select '^TrustId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DS.UpdateDSTrustCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
