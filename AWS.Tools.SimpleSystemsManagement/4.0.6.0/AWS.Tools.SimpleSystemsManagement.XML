<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.SimpleSystemsManagement</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMLatestEC2ImageCmdlet">
            <summary>
            Retrieves the latest EC2 AMIs (Amazon Machine Images) from AWS Systems Manger parameters by calling Get-SSMParametersByPath or Get-SSMParameterValue.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMLatestEC2ImageCmdlet.Path">
            <summary>
            <para>
            The partial hierarchy for the parameter under the /aws/service/ prefix representing the type of images to list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMLatestEC2ImageCmdlet.ImageName">
            <summary>
            <para>
            The name of the parameter containing the image information. Wildcard characters '*' and '?' can be used to filter multiple AMIs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMParametersByPathCmdlet">
            <summary>
            Retrieve information about one or more parameters in a specific hierarchy. 
            
             <note><para>
            Request results are returned on a best-effort basis. If you specify <code>MaxResults</code>
            in the request, the response includes information up to the limit specified. The number
            of items returned, however, can be between zero and the value of <code>MaxResults</code>.
            If the service reaches an internal limit while processing the results, it stops the
            operation and returns the matching values up to that point and a <code>NextToken</code>.
            You can specify the <code>NextToken</code> in a subsequent call to get the next set
            of results.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParametersByPathCmdlet.ParameterFilter">
            <summary>
            <para>
            <para>Filters to limit the request results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParametersByPathCmdlet.Path">
            <summary>
            <para>
            <para>The hierarchy for the parameter. Hierarchies start with a forward slash (/) and end
            with the parameter name. A parameter name hierarchy can have a maximum of 15 levels.
            Here is an example of a hierarchy: <code>/Finance/Prod/IAD/WinServ2016/license33</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParametersByPathCmdlet.Recursive">
            <summary>
            <para>
            <para>Retrieve all parameters within a hierarchy.</para><important><para>If a user has access to a path, then the user can access all levels of that path.
            For example, if a user has permission to access path <code>/a</code>, then the user
            can also access <code>/a/b</code>. Even if a user has explicitly been denied access
            in IAM for parameter <code>/a/b</code>, they can still call the GetParametersByPath
            API action recursively for <code>/a</code> and view <code>/a/b</code>.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParametersByPathCmdlet.WithDecryption">
            <summary>
            <para>
            <para>Retrieve all parameters in a hierarchy with their value decrypted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParametersByPathCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>10</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParametersByPathCmdlet.NextToken">
            <summary>
            <para>
            <para>A token to start the list. Use this token to get the next set of results. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParametersByPathCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Parameters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetParametersByPathResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetParametersByPathResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParametersByPathCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Path parameter.
            The -PassThru parameter is deprecated, use -Select '^Path' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParametersByPathCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.AddSSMResourceTagCmdlet">
            <summary>
            Adds or overwrites one or more tags for the specified resource. Tags are metadata
            that you can assign to your documents, managed instances, maintenance windows, Parameter
            Store parameters, and patch baselines. Tags enable you to categorize your resources
            in different ways, for example, by purpose, owner, or environment. Each tag consists
            of a key and an optional value, both of which you define. For example, you could define
            a set of tags for your account's managed instances that helps you track each instance's
            owner and stack level. For example: Key=Owner and Value=DbAdmin, SysAdmin, or Dev.
            Or Key=Stack and Value=Production, Pre-Production, or Test.
            
             
            <para>
            Each resource can have a maximum of 50 tags. 
            </para><para>
            We recommend that you devise a set of tag keys that meets your needs for each resource
            type. Using a consistent set of tag keys makes it easier for you to manage your resources.
            You can search and filter the resources based on the tags you add. Tags don't have
            any semantic meaning to and are interpreted strictly as a string of characters. 
            </para><para>
            For more information about using tags with EC2 instances, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            your Amazon EC2 resources</a> in the <i>Amazon EC2 User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.AddSSMResourceTagCmdlet.ResourceId">
            <summary>
            <para>
            <para>The resource ID you want to tag.</para><para>Use the ID of the resource. Here are some examples:</para><para>ManagedInstance: mi-012345abcde</para><para>MaintenanceWindow: mw-012345abcde</para><para>PatchBaseline: pb-012345abcde</para><para>For the Document and Parameter values, use the name of the resource.</para><note><para>The ManagedInstance type for this API action is only for on-premises managed instances.
            You must specify the name of the managed instance in the following format: mi-ID_number.
            For example, mi-1a2b3c4d5e6f.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.AddSSMResourceTagCmdlet.ResourceType">
            <summary>
            <para>
            <para>Specifies the type of resource you are tagging.</para><note><para>The ManagedInstance type for this API action is for on-premises managed instances.
            You must specify the name of the managed instance in the following format: mi-ID_number.
            For example, mi-1a2b3c4d5e6f.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.AddSSMResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para> One or more tags. The value parameter is required, but if you don't want the tag
            to have a value, specify the parameter with no value, and we set the value to an empty
            string. </para><important><para>Do not enter personally identifiable information in this field.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.AddSSMResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.AddTagsToResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.AddSSMResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.AddSSMResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.EditSSMDocumentPermissionCmdlet">
            <summary>
            Shares a Systems Manager document publicly or privately. If you share a document privately,
            you must specify the AWS user account IDs for those people who can use the document.
            If you share a document publicly, you must specify <i>All</i> as the account ID.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.EditSSMDocumentPermissionCmdlet.AccountIdsToAdd">
            <summary>
            <para>
            <para>The AWS user accounts that should have access to the document. The account IDs can
            either be a group of account IDs or <i>All</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.EditSSMDocumentPermissionCmdlet.AccountIdsToRemove">
            <summary>
            <para>
            <para>The AWS user accounts that should no longer have access to the document. The AWS user
            account can either be a group of account IDs or <i>All</i>. This action has a higher
            priority than <i>AccountIdsToAdd</i>. If you specify an account ID to add and the
            same ID to remove, the system removes access to the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.EditSSMDocumentPermissionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the document that you want to share.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.EditSSMDocumentPermissionCmdlet.PermissionType">
            <summary>
            <para>
            <para>The permission type for the document. The permission type can be <i>Share</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.EditSSMDocumentPermissionCmdlet.SharedDocumentVersion">
            <summary>
            <para>
            <para>(Optional) The version of the document to share. If it's not specified, the system
            choose the <code>Default</code> version to share.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.EditSSMDocumentPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.ModifyDocumentPermissionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.EditSSMDocumentPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.EditSSMDocumentPermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMActivationCmdlet">
            <summary>
            Describes details about the activation, such as the date and time the activation was
            created, its expiration date, the IAM role assigned to the instances in the activation,
            and the number of instances registered by using this activation.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMActivationCmdlet.Filter">
            <summary>
            <para>
            <para>A filter to view information about your activations.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMActivationCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMActivationCmdlet.NextToken">
            <summary>
            <para>
            <para>A token to start the list. Use this token to get the next set of results. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMActivationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ActivationList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeActivationsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeActivationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMActivationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationCmdlet">
            <summary>
            Describes the association for the specified target or instance. If you created the
            association by using the <code>Targets</code> parameter, then you must retrieve the
            association by using the association ID. If you created the association by specifying
            an instance ID and a Systems Manager document, then you retrieve the association by
            specifying the document name and the instance ID.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationCmdlet.AssociationId">
            <summary>
            <para>
            <para>The association ID for which you want information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationCmdlet.AssociationVersion">
            <summary>
            <para>
            <para>Specify the association version to retrieve. To view the latest version, either specify
            <code>$LATEST</code> for this parameter, or omit this parameter. To view a list of
            all associations for an instance, use <a>ListAssociations</a>. To get a list of versions
            for a specific association, use <a>ListAssociationVersions</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationCmdlet.InstanceId">
            <summary>
            <para>
            <para>The instance ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationCmdlet.Name">
            <summary>
            <para>
            <para>The name of the Systems Manager document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AssociationDescription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeAssociationResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeAssociationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationExecutionCmdlet">
            <summary>
            Use this API action to view all executions for a specific association ID.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationExecutionCmdlet.AssociationId">
            <summary>
            <para>
            <para>The association ID for which you want to view execution history details.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationExecutionCmdlet.Filter">
            <summary>
            <para>
            <para>Filters for the request. You can specify the following filters and values.</para><para>ExecutionId (EQUAL)</para><para>Status (EQUAL)</para><para>CreatedTime (EQUAL, GREATER_THAN, LESS_THAN)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationExecutionCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationExecutionCmdlet.NextToken">
            <summary>
            <para>
            <para>A token to start the list. Use this token to get the next set of results. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AssociationExecutions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeAssociationExecutionsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeAssociationExecutionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationExecutionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationExecutionTargetCmdlet">
            <summary>
            Use this API action to view information about a specific execution of a specific association.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationExecutionTargetCmdlet.AssociationId">
            <summary>
            <para>
            <para>The association ID that includes the execution for which you want to view details.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationExecutionTargetCmdlet.ExecutionId">
            <summary>
            <para>
            <para>The execution ID for which you want to view details.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationExecutionTargetCmdlet.Filter">
            <summary>
            <para>
            <para>Filters for the request. You can specify the following filters and values.</para><para>Status (EQUAL)</para><para>ResourceId (EQUAL)</para><para>ResourceType (EQUAL)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationExecutionTargetCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationExecutionTargetCmdlet.NextToken">
            <summary>
            <para>
            <para>A token to start the list. Use this token to get the next set of results. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationExecutionTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AssociationExecutionTargets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeAssociationExecutionTargetsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeAssociationExecutionTargetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationExecutionTargetCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationListCmdlet">
            <summary>
            Returns all State Manager associations in the current AWS account and Region. You
            can limit the results to a specific State Manager association document or instance
            by specifying a filter.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationListCmdlet.AssociationFilterList">
            <summary>
            <para>
            <para>One or more filters. Use a filter to return a more specific list of results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Associations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.ListAssociationsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.ListAssociationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssociationFilterList parameter.
            The -PassThru parameter is deprecated, use -Select '^AssociationFilterList' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationVersionListCmdlet">
            <summary>
            Retrieves all versions of an association for a specific association ID.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationVersionListCmdlet.AssociationId">
            <summary>
            <para>
            <para>The association ID for which you want to view all versions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationVersionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationVersionListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token to start the list. Use this token to get the next set of results. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AssociationVersions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.ListAssociationVersionsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.ListAssociationVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssociationId parameter.
            The -PassThru parameter is deprecated, use -Select '^AssociationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAssociationVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMAutomationExecutionCmdlet">
            <summary>
            Get detailed information about a particular Automation execution.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAutomationExecutionCmdlet.AutomationExecutionId">
            <summary>
            <para>
            <para>The unique identifier for an existing automation execution to examine. The execution
            ID is returned by StartAutomationExecution when the execution of an Automation document
            is initiated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAutomationExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AutomationExecution'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetAutomationExecutionResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetAutomationExecutionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAutomationExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutomationExecutionId parameter.
            The -PassThru parameter is deprecated, use -Select '^AutomationExecutionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMAutomationExecutionListCmdlet">
            <summary>
            Provides details about all active and terminated Automation executions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAutomationExecutionListCmdlet.Filter">
            <summary>
            <para>
            <para>Filters used to limit the scope of executions that are requested.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAutomationExecutionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAutomationExecutionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAutomationExecutionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AutomationExecutionMetadataList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeAutomationExecutionsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeAutomationExecutionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAutomationExecutionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMAutomationStepExecutionCmdlet">
            <summary>
            Information about all active and terminated step executions in an Automation workflow.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAutomationStepExecutionCmdlet.AutomationExecutionId">
            <summary>
            <para>
            <para>The Automation execution ID for which you want step execution descriptions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAutomationStepExecutionCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters to limit the number of step executions returned by the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAutomationStepExecutionCmdlet.ReverseOrder">
            <summary>
            <para>
            <para>A boolean that indicates whether to list step executions in reverse order by start
            time. The default value is false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAutomationStepExecutionCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAutomationStepExecutionCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAutomationStepExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StepExecutions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeAutomationStepExecutionsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeAutomationStepExecutionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAutomationStepExecutionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMAvailablePatchCmdlet">
            <summary>
            Lists all patches eligible to be included in a patch baseline.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAvailablePatchCmdlet.Filter">
            <summary>
            <para>
            <para>Filters used to scope down the returned patches.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAvailablePatchCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of patches to return (per page).</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAvailablePatchCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAvailablePatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Patches'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeAvailablePatchesResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeAvailablePatchesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMAvailablePatchCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMCalendarStateCmdlet">
            <summary>
            Gets the state of the AWS Systems Manager Change Calendar at an optional, specified
            time. If you specify a time, <code>GetCalendarState</code> returns the state of the
            calendar at a specific time, and returns the next time that the Change Calendar state
            will transition. If you do not specify a time, <code>GetCalendarState</code> assumes
            the current time. Change Calendar entries have two possible states: <code>OPEN</code>
            or <code>CLOSED</code>. For more information about Systems Manager Change Calendar,
            see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-change-calendar.html">AWS
            Systems Manager Change Calendar</a> in the <i>AWS Systems Manager User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCalendarStateCmdlet.AtTime">
            <summary>
            <para>
            <para>(Optional) The specific time for which you want to get calendar state information,
            in <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> format. If you do
            not add <code>AtTime</code>, the current time is assumed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCalendarStateCmdlet.CalendarName">
            <summary>
            <para>
            <para>The names or Amazon Resource Names (ARNs) of the Systems Manager documents that represent
            the calendar entries for which you want to get the state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCalendarStateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetCalendarStateResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetCalendarStateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCalendarStateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AtTime parameter.
            The -PassThru parameter is deprecated, use -Select '^AtTime' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandCmdlet">
            <summary>
            Lists the commands requested by users of the AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandCmdlet.CommandId">
            <summary>
            <para>
            <para>(Optional) If provided, lists only the specified command.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandCmdlet.Filter">
            <summary>
            <para>
            <para>(Optional) One or more filters. Use a filter to return a more specific list of results.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandCmdlet.InstanceId">
            <summary>
            <para>
            <para>(Optional) Lists commands issued against this instance ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandCmdlet.MaxResult">
            <summary>
            <para>
            <para>(Optional) The maximum number of items to return for this call. The call also returns
            a token that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandCmdlet.NextToken">
            <summary>
            <para>
            <para>(Optional) The token for the next set of items to return. (You received this token
            from a previous call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Commands'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.ListCommandsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.ListCommandsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandInvocationCmdlet">
            <summary>
            An invocation is copy of a command sent to a specific instance. A command can apply
            to one or more instances. A command invocation applies to one instance. For example,
            if a user runs SendCommand against three instances, then a command invocation is created
            for each requested instance ID. ListCommandInvocations provide status about command
            execution.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandInvocationCmdlet.CommandId">
            <summary>
            <para>
            <para>(Optional) The invocations for a specific command ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandInvocationCmdlet.Detail">
            <summary>
            <para>
            <para>(Optional) If set this returns the response of the command executions and any command
            output. By default this is set to False. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandInvocationCmdlet.Filter">
            <summary>
            <para>
            <para>(Optional) One or more filters. Use a filter to return a more specific list of results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandInvocationCmdlet.InstanceId">
            <summary>
            <para>
            <para>(Optional) The command execution details for a specific instance ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandInvocationCmdlet.MaxResult">
            <summary>
            <para>
            <para>(Optional) The maximum number of items to return for this call. The call also returns
            a token that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandInvocationCmdlet.NextToken">
            <summary>
            <para>
            <para>(Optional) The token for the next set of items to return. (You received this token
            from a previous call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandInvocationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CommandInvocations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.ListCommandInvocationsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.ListCommandInvocationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandInvocationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandInvocationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandInvocationDetailCmdlet">
            <summary>
            Returns detailed information about command execution for an invocation or plugin.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandInvocationDetailCmdlet.CommandId">
            <summary>
            <para>
            <para>(Required) The parent command ID of the invocation plugin.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandInvocationDetailCmdlet.InstanceId">
            <summary>
            <para>
            <para>(Required) The ID of the managed instance targeted by the command. A managed instance
            can be an EC2 instance or an instance in your hybrid environment that is configured
            for Systems Manager.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandInvocationDetailCmdlet.PluginName">
            <summary>
            <para>
            <para>(Optional) The name of the plugin for which you want detailed results. If the document
            contains only one plugin, the name can be omitted and the details will be returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandInvocationDetailCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetCommandInvocationResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetCommandInvocationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMCommandInvocationDetailCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMComplianceItemListCmdlet">
            <summary>
            For a specified resource ID, this API action returns a list of compliance statuses
            for different resource types. Currently, you can only specify one resource ID per
            call. List results depend on the criteria specified in the filter.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMComplianceItemListCmdlet.Filter">
            <summary>
            <para>
            <para>One or more compliance filters. Use a filter to return a more specific list of results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMComplianceItemListCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID for the resources from which to get compliance information. Currently, you
            can only specify one resource ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMComplianceItemListCmdlet.ResourceType">
            <summary>
            <para>
            <para>The type of resource from which to get compliance information. Currently, the only
            supported resource type is <code>ManagedInstance</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMComplianceItemListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMComplianceItemListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token to start the list. Use this token to get the next set of results. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMComplianceItemListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ComplianceItems'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.ListComplianceItemsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.ListComplianceItemsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMComplianceItemListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMComplianceSummaryListCmdlet">
            <summary>
            Returns a summary count of compliant and non-compliant resources for a compliance
            type. For example, this call can return State Manager associations, patches, or custom
            compliance types according to the filter criteria that you specify.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMComplianceSummaryListCmdlet.Filter">
            <summary>
            <para>
            <para>One or more compliance or inventory filters. Use a filter to return a more specific
            list of results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMComplianceSummaryListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. Currently, you can specify null
            or 50. The call also returns a token that you can specify in a subsequent call to
            get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMComplianceSummaryListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token to start the list. Use this token to get the next set of results. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMComplianceSummaryListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ComplianceSummaryItems'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.ListComplianceSummariesResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.ListComplianceSummariesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMComplianceSummaryListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMConnectionStatusCmdlet">
            <summary>
            Retrieves the Session Manager connection status for an instance to determine whether
            it is running and ready to receive Session Manager connections.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMConnectionStatusCmdlet.Target">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMConnectionStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetConnectionStatusResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetConnectionStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMConnectionStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Target parameter.
            The -PassThru parameter is deprecated, use -Select '^Target' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMDefaultPatchBaselineCmdlet">
            <summary>
            Retrieves the default patch baseline. Note that Systems Manager supports creating
            multiple default patch baselines. For example, you can create a default patch baseline
            for each operating system.
            
             
            <para>
            If you do not specify an operating system value, the default patch baseline for Windows
            is returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDefaultPatchBaselineCmdlet.OperatingSystem">
            <summary>
            <para>
            <para>Returns the default patch baseline for the specified operating system.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDefaultPatchBaselineCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetDefaultPatchBaselineResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetDefaultPatchBaselineResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDefaultPatchBaselineCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OperatingSystem parameter.
            The -PassThru parameter is deprecated, use -Select '^OperatingSystem' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMDeployablePatchSnapshotForInstanceCmdlet">
            <summary>
            Retrieves the current snapshot for the patch baseline the instance uses. This API
            is primarily used by the AWS-RunPatchBaseline Systems Manager document.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDeployablePatchSnapshotForInstanceCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance for which the appropriate patch snapshot should be retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDeployablePatchSnapshotForInstanceCmdlet.SnapshotId">
            <summary>
            <para>
            <para>The user-defined snapshot ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDeployablePatchSnapshotForInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetDeployablePatchSnapshotForInstanceResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetDeployablePatchSnapshotForInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDeployablePatchSnapshotForInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotId parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentCmdlet">
            <summary>
            Gets the contents of the specified Systems Manager document.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentCmdlet.DocumentFormat">
            <summary>
            <para>
            <para>Returns the document in the specified format. The document format can be either JSON
            or YAML. JSON is the default format.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentCmdlet.DocumentVersion">
            <summary>
            <para>
            <para>The document version for which you want information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentCmdlet.Name">
            <summary>
            <para>
            <para>The name of the Systems Manager document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentCmdlet.VersionName">
            <summary>
            <para>
            <para>An optional field specifying the version of the artifact associated with the document.
            For example, "Release 12, Update 6". This value is unique across all versions of a
            document and can't be changed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetDocumentResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetDocumentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentDescriptionCmdlet">
            <summary>
            Describes the specified Systems Manager document.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentDescriptionCmdlet.DocumentVersion">
            <summary>
            <para>
            <para>The document version for which you want information. Can be a specific version or
            the default version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentDescriptionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the Systems Manager document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentDescriptionCmdlet.VersionName">
            <summary>
            <para>
            <para>An optional field specifying the version of the artifact associated with the document.
            For example, "Release 12, Update 6". This value is unique across all versions of a
            document, and cannot be changed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentDescriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Document'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeDocumentResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeDocumentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentListCmdlet">
            <summary>
            Returns all Systems Manager (SSM) documents in the current AWS account and Region.
            You can limit the results of this request by using a filter.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentListCmdlet.DocumentFilterList">
            <summary>
            <para>
            <para>This data type is deprecated. Instead, use <code>Filters</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentListCmdlet.Filter">
            <summary>
            <para>
            <para>One or more DocumentKeyValuesFilter objects. Use a filter to return a more specific
            list of results. For keys, you can specify one or more key-value pair tags that have
            been applied to a document. Other valid keys include <code>Owner</code>, <code>Name</code>,
            <code>PlatformTypes</code>, <code>DocumentType</code>, and <code>TargetType</code>.
            For example, to return documents you own use <code>Key=Owner,Values=Self</code>. To
            specify a custom key-value pair, use the format <code>Key=tag:tagName,Values=valueName</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DocumentIdentifiers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.ListDocumentsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.ListDocumentsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentPermissionCmdlet">
            <summary>
            Describes the permissions for a Systems Manager document. If you created the document,
            you are the owner. If a document is shared, it can either be shared privately (by
            specifying a user's AWS account ID) or publicly (<i>All</i>).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentPermissionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the document for which you are the owner.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentPermissionCmdlet.PermissionType">
            <summary>
            <para>
            <para>The permission type for the document. The permission type can be <i>Share</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AccountIds'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeDocumentPermissionResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeDocumentPermissionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentVersionListCmdlet">
            <summary>
            List all versions for a document.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentVersionListCmdlet.Name">
            <summary>
            <para>
            <para>The name of the document. You can specify an Amazon Resource Name (ARN).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentVersionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentVersionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DocumentVersions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.ListDocumentVersionsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.ListDocumentVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMDocumentVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMEffectiveInstanceAssociationListCmdlet">
            <summary>
            All associations for the instance(s).<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMEffectiveInstanceAssociationListCmdlet.InstanceId">
            <summary>
            <para>
            <para>The instance ID for which you want to view all associations.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMEffectiveInstanceAssociationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>5</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMEffectiveInstanceAssociationListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMEffectiveInstanceAssociationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Associations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeEffectiveInstanceAssociationsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeEffectiveInstanceAssociationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMEffectiveInstanceAssociationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMEffectiveInstanceAssociationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMEffectivePatchesForPatchBaselineCmdlet">
            <summary>
            Retrieves the current effective patches (the patch and the approval state) for the
            specified patch baseline. Note that this API applies only to Windows patch baselines.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMEffectivePatchesForPatchBaselineCmdlet.BaselineId">
            <summary>
            <para>
            <para>The ID of the patch baseline to retrieve the effective patches for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMEffectivePatchesForPatchBaselineCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of patches to return (per page).</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMEffectivePatchesForPatchBaselineCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMEffectivePatchesForPatchBaselineCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EffectivePatches'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeEffectivePatchesForPatchBaselineResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeEffectivePatchesForPatchBaselineResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMEffectivePatchesForPatchBaselineCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BaselineId parameter.
            The -PassThru parameter is deprecated, use -Select '^BaselineId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMEffectivePatchesForPatchBaselineCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstanceAssociationsStatusCmdlet">
            <summary>
            The status of the associations for the instance(s).<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstanceAssociationsStatusCmdlet.InstanceId">
            <summary>
            <para>
            <para>The instance IDs for which you want association status information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstanceAssociationsStatusCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstanceAssociationsStatusCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstanceAssociationsStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceAssociationStatusInfos'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeInstanceAssociationsStatusResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeInstanceAssociationsStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstanceAssociationsStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstanceAssociationsStatusCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstanceInformationCmdlet">
            <summary>
            Describes one or more of your instances, including information about the operating
            system platform, the version of SSM Agent installed on the instance, instance status,
            and so on.
            
             
            <para>
            If you specify one or more instance IDs, it returns information for those instances.
            If you do not specify instance IDs, it returns information for all your instances.
            If you specify an instance ID that is not valid or an instance that you do not own,
            you receive an error.
            </para><note><para>
            The IamRole field for this API action is the Amazon Identity and Access Management
            (IAM) role assigned to on-premises instances. This call does not return the IAM role
            for EC2 instances.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstanceInformationCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. Use a filter to return a more specific list of instances. You
            can filter based on tags applied to EC2 instances. Use this <code>Filters</code> data
            type instead of <code>InstanceInformationFilterList</code>, which is deprecated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstanceInformationCmdlet.InstanceInformationFilterList">
            <summary>
            <para>
            <para>This is a legacy method. We recommend that you don't use this method. Instead, use
            the <code>Filters</code> data type. <code>Filters</code> enables you to return instance
            information by filtering based on tags applied to managed instances.</para><note><para>Attempting to use <code>InstanceInformationFilterList</code> and <code>Filters</code>
            leads to an exception error. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstanceInformationCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstanceInformationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstanceInformationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceInformationList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeInstanceInformationResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeInstanceInformationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstanceInformationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchCmdlet">
            <summary>
            Retrieves information about the patches on the specified instance and their state
            relative to the patch baseline being used for the instance.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchCmdlet.Filter">
            <summary>
            <para>
            <para>An array of structures. Each entry in the array is a structure containing a Key, Value
            combination. Valid values for Key are <code>Classification</code> | <code>KBId</code>
            | <code>Severity</code> | <code>State</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance whose patch state information should be retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of patches to return (per page).</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Patches'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchesResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchStateCmdlet">
            <summary>
            Retrieves the high-level patch state of one or more instances.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchStateCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance whose patch state information should be retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchStateCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of instances to return (per page).</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchStateCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchStateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstancePatchStates'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchStatesResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchStatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchStateCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchStatesForPatchGroupCmdlet">
            <summary>
            Retrieves the high-level patch state for the instances in the specified patch group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchStatesForPatchGroupCmdlet.Filter">
            <summary>
            <para>
            <para>Each entry in the array is a structure containing:</para><para>Key (string between 1 and 200 characters)</para><para> Values (array containing a single string)</para><para> Type (string "Equal", "NotEqual", "LessThan", "GreaterThan")</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchStatesForPatchGroupCmdlet.PatchGroup">
            <summary>
            <para>
            <para>The name of the patch group for which the patch state information should be retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchStatesForPatchGroupCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of patches to return (per page).</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchStatesForPatchGroupCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchStatesForPatchGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstancePatchStates'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchStatesForPatchGroupResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchStatesForPatchGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchStatesForPatchGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PatchGroup parameter.
            The -PassThru parameter is deprecated, use -Select '^PatchGroup' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInstancePatchStatesForPatchGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryCmdlet">
            <summary>
            Query inventory information.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryCmdlet.Aggregator">
            <summary>
            <para>
            <para>Returns counts of inventory types based on one or more expressions. For example, if
            you aggregate by using an expression that uses the <code>AWS:InstanceInformation.PlatformType</code>
            type, you can see a count of how many Windows and Linux instances exist in your inventoried
            fleet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. Use a filter to return a more specific list of results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryCmdlet.ResultAttribute">
            <summary>
            <para>
            <para>The list of inventory item types to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Entities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetInventoryResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetInventoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryDeletionListCmdlet">
            <summary>
            Describes a specific delete inventory operation.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryDeletionListCmdlet.DeletionId">
            <summary>
            <para>
            <para>Specify the delete inventory ID for which you want information. This ID was returned
            by the <code>DeleteInventory</code> action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryDeletionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryDeletionListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token to start the list. Use this token to get the next set of results. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryDeletionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InventoryDeletions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeInventoryDeletionsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeInventoryDeletionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryDeletionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeletionId parameter.
            The -PassThru parameter is deprecated, use -Select '^DeletionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryDeletionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryEntryListCmdlet">
            <summary>
            A list of inventory items returned by the request.<br/><br/>In the AWS.Tools.SimpleSystemsManagement module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryEntryListCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. Use a filter to return a more specific list of results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryEntryListCmdlet.InstanceId">
            <summary>
            <para>
            <para>The instance ID for which you want inventory information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryEntryListCmdlet.TypeName">
            <summary>
            <para>
            <para>The type of inventory item for which you want information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryEntryListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryEntryListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.SimpleSystemsManagement module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryEntryListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.ListInventoryEntriesResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.ListInventoryEntriesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryEntryListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventoryEntryListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventorySchemaCmdlet">
            <summary>
            Return a list of inventory type names for the account, or return a list of attribute
            names for a specific Inventory item type.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventorySchemaCmdlet.Aggregator">
            <summary>
            <para>
            <para>Returns inventory schemas that support aggregation. For example, this call returns
            the <code>AWS:InstanceInformation</code> type, because it supports aggregation based
            on the <code>PlatformName</code>, <code>PlatformType</code>, and <code>PlatformVersion</code>
            attributes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventorySchemaCmdlet.SubType">
            <summary>
            <para>
            <para>Returns the sub-type schema for a specified inventory type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventorySchemaCmdlet.TypeName">
            <summary>
            <para>
            <para>The type of inventory item to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventorySchemaCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>200</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventorySchemaCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventorySchemaCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Schemas'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetInventorySchemaResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetInventorySchemaResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventorySchemaCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TypeName parameter.
            The -PassThru parameter is deprecated, use -Select '^TypeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMInventorySchemaCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowCmdlet">
            <summary>
            Retrieves a maintenance window.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowCmdlet.WindowId">
            <summary>
            <para>
            <para>The ID of the maintenance window for which you want to retrieve information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetMaintenanceWindowResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetMaintenanceWindowResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WindowId parameter.
            The -PassThru parameter is deprecated, use -Select '^WindowId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionCmdlet">
            <summary>
            Retrieves details about a specific a maintenance window execution.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionCmdlet.WindowExecutionId">
            <summary>
            <para>
            <para>The ID of the maintenance window execution that includes the task.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetMaintenanceWindowExecutionResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetMaintenanceWindowExecutionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WindowExecutionId parameter.
            The -PassThru parameter is deprecated, use -Select '^WindowExecutionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionListCmdlet">
            <summary>
            Lists the executions of a maintenance window. This includes information about when
            the maintenance window was scheduled to be active, and information about tasks registered
            and run with the maintenance window.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionListCmdlet.Filter">
            <summary>
            <para>
            <para>Each entry in the array is a structure containing:</para><para>Key (string, between 1 and 128 characters)</para><para>Values (array of strings, each string is between 1 and 256 characters)</para><para>The supported Keys are ExecutedBefore and ExecutedAfter with the value being a date/time
            string such as 2016-11-04T05:00:00Z.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionListCmdlet.WindowId">
            <summary>
            <para>
            <para>The ID of the maintenance window whose executions should be retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WindowExecutions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WindowId parameter.
            The -PassThru parameter is deprecated, use -Select '^WindowId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskCmdlet">
            <summary>
            Retrieves the details about a specific task run as part of a maintenance window execution.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskCmdlet.TaskId">
            <summary>
            <para>
            <para>The ID of the specific task execution in the maintenance window task that should be
            retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskCmdlet.WindowExecutionId">
            <summary>
            <para>
            <para>The ID of the maintenance window execution that includes the task.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetMaintenanceWindowExecutionTaskResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetMaintenanceWindowExecutionTaskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^TaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskInvocationCmdlet">
            <summary>
            Retrieves information about a specific task running on a specific target.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskInvocationCmdlet.InvocationId">
            <summary>
            <para>
            <para>The invocation ID to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskInvocationCmdlet.TaskId">
            <summary>
            <para>
            <para>The ID of the specific task in the maintenance window task that should be retrieved.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskInvocationCmdlet.WindowExecutionId">
            <summary>
            <para>
            <para>The ID of the maintenance window execution for which the task is a part.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskInvocationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetMaintenanceWindowExecutionTaskInvocationResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetMaintenanceWindowExecutionTaskInvocationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskInvocationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^TaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskInvocationListCmdlet">
            <summary>
            Retrieves the individual task executions (one per target) for a particular task run
            as part of a maintenance window execution.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskInvocationListCmdlet.Filter">
            <summary>
            <para>
            <para>Optional filters used to scope down the returned task invocations. The supported filter
            key is STATUS with the corresponding values PENDING, IN_PROGRESS, SUCCESS, FAILED,
            TIMED_OUT, CANCELLING, and CANCELLED.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskInvocationListCmdlet.TaskId">
            <summary>
            <para>
            <para>The ID of the specific task in the maintenance window task that should be retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskInvocationListCmdlet.WindowExecutionId">
            <summary>
            <para>
            <para>The ID of the maintenance window execution the task is part of.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskInvocationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskInvocationListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskInvocationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WindowExecutionTaskInvocationIdentities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionTaskInvocationsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionTaskInvocationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskInvocationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WindowExecutionId parameter.
            The -PassThru parameter is deprecated, use -Select '^WindowExecutionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskInvocationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskListCmdlet">
            <summary>
            For a given maintenance window execution, lists the tasks that were run.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskListCmdlet.Filter">
            <summary>
            <para>
            <para>Optional filters used to scope down the returned tasks. The supported filter key is
            STATUS with the corresponding values PENDING, IN_PROGRESS, SUCCESS, FAILED, TIMED_OUT,
            CANCELLING, and CANCELLED. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskListCmdlet.WindowExecutionId">
            <summary>
            <para>
            <para>The ID of the maintenance window execution whose task executions should be retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WindowExecutionTaskIdentities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionTasksResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionTasksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WindowExecutionId parameter.
            The -PassThru parameter is deprecated, use -Select '^WindowExecutionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowExecutionTaskListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowListCmdlet">
            <summary>
            Retrieves the maintenance windows in an AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowListCmdlet.Filter">
            <summary>
            <para>
            <para>Optional filters used to narrow down the scope of the returned maintenance windows.
            Supported filter keys are <b>Name</b> and <b>Enabled</b>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WindowIdentities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Filter parameter.
            The -PassThru parameter is deprecated, use -Select '^Filter' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowScheduleCmdlet">
            <summary>
            Retrieves information about upcoming executions of a maintenance window.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowScheduleCmdlet.Filter">
            <summary>
            <para>
            <para>Filters used to limit the range of results. For example, you can limit maintenance
            window executions to only those scheduled before or after a certain date and time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowScheduleCmdlet.ResourceType">
            <summary>
            <para>
            <para>The type of resource you want to retrieve information about. For example, "INSTANCE".</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowScheduleCmdlet.Target">
            <summary>
            <para>
            <para>The instance ID or key/value pair to retrieve information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowScheduleCmdlet.WindowId">
            <summary>
            <para>
            <para>The ID of the maintenance window to retrieve information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowScheduleCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowScheduleCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowScheduleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ScheduledWindowExecutions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowScheduleResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowScheduleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowScheduleCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowsForTargetCmdlet">
            <summary>
            Retrieves information about the maintenance window targets or tasks that an instance
            is associated with.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowsForTargetCmdlet.ResourceType">
            <summary>
            <para>
            <para>The type of resource you want to retrieve information about. For example, "INSTANCE".</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowsForTargetCmdlet.Target">
            <summary>
            <para>
            <para>The instance ID or key/value pair to retrieve information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowsForTargetCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowsForTargetCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowsForTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WindowIdentities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowsForTargetResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowsForTargetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowsForTargetCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowTargetCmdlet">
            <summary>
            Lists the targets registered with the maintenance window.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowTargetCmdlet.Filter">
            <summary>
            <para>
            <para>Optional filters that can be used to narrow down the scope of the returned window
            targets. The supported filter keys are Type, WindowTargetId and OwnerInformation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowTargetCmdlet.WindowId">
            <summary>
            <para>
            <para>The ID of the maintenance window whose targets should be retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowTargetCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowTargetCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Targets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowTargetsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowTargetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowTargetCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowTaskCmdlet">
            <summary>
            Lists the tasks in a maintenance window.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowTaskCmdlet.WindowId">
            <summary>
            <para>
            <para>The maintenance window ID that includes the task to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowTaskCmdlet.WindowTaskId">
            <summary>
            <para>
            <para>The maintenance window task ID to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetMaintenanceWindowTaskResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetMaintenanceWindowTaskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WindowTaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^WindowTaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowTaskListCmdlet">
            <summary>
            Lists the tasks in a maintenance window.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowTaskListCmdlet.Filter">
            <summary>
            <para>
            <para>Optional filters used to narrow down the scope of the returned tasks. The supported
            filter keys are WindowTaskId, TaskArn, Priority, and TaskType.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowTaskListCmdlet.WindowId">
            <summary>
            <para>
            <para>The ID of the maintenance window whose tasks should be retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowTaskListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowTaskListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowTaskListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tasks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowTasksResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowTasksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowTaskListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WindowId parameter.
            The -PassThru parameter is deprecated, use -Select '^WindowId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMMaintenanceWindowTaskListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsItemCmdlet">
            <summary>
            Get information about an OpsItem by using the ID. You must have permission in AWS
            Identity and Access Management (IAM) to view information about an OpsItem. For more
            information, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html">Getting
            started with OpsCenter</a> in the <i>AWS Systems Manager User Guide</i>.
            
             
            <para>
            Operations engineers and IT professionals use OpsCenter to view, investigate, and
            remediate operational issues impacting the performance and health of their AWS resources.
            For more information, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html">AWS
            Systems Manager OpsCenter</a> in the <i>AWS Systems Manager User Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsItemCmdlet.OpsItemId">
            <summary>
            <para>
            <para>The ID of the OpsItem that you want to get.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsItemCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OpsItem'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetOpsItemResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetOpsItemResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsItemCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OpsItemId parameter.
            The -PassThru parameter is deprecated, use -Select '^OpsItemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsItemSummaryCmdlet">
            <summary>
            Query a set of OpsItems. You must have permission in AWS Identity and Access Management
            (IAM) to query a list of OpsItems. For more information, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html">Getting
            started with OpsCenter</a> in the <i>AWS Systems Manager User Guide</i>.
            
             
            <para>
            Operations engineers and IT professionals use OpsCenter to view, investigate, and
            remediate operational issues impacting the performance and health of their AWS resources.
            For more information, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html">AWS
            Systems Manager OpsCenter</a> in the <i>AWS Systems Manager User Guide</i>. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsItemSummaryCmdlet.OpsItemFilter">
            <summary>
            <para>
            <para>One or more filters to limit the response.</para><ul><li><para>Key: CreatedTime</para><para>Operations: GreaterThan, LessThan</para></li><li><para>Key: LastModifiedBy</para><para>Operations: Contains, Equals</para></li><li><para>Key: LastModifiedTime</para><para>Operations: GreaterThan, LessThan</para></li><li><para>Key: Priority</para><para>Operations: Equals</para></li><li><para>Key: Source</para><para>Operations: Contains, Equals</para></li><li><para>Key: Status</para><para>Operations: Equals</para></li><li><para>Key: Title</para><para>Operations: Contains</para></li><li><para>Key: OperationalData*</para><para>Operations: Equals</para></li><li><para>Key: OperationalDataKey</para><para>Operations: Equals</para></li><li><para>Key: OperationalDataValue</para><para>Operations: Equals, Contains</para></li><li><para>Key: OpsItemId</para><para>Operations: Equals</para></li><li><para>Key: ResourceId</para><para>Operations: Contains</para></li><li><para>Key: AutomationId</para><para>Operations: Equals</para></li></ul><para>*If you filter the response by using the OperationalData operator, specify a key-value
            pair by using the following JSON format: {"key":"key_name","value":"a_value"}</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsItemSummaryCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsItemSummaryCmdlet.NextToken">
            <summary>
            <para>
            <para>A token to start the list. Use this token to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsItemSummaryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OpsItemSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeOpsItemsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeOpsItemsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsItemSummaryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OpsItemFilter parameter.
            The -PassThru parameter is deprecated, use -Select '^OpsItemFilter' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsItemSummaryCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsSummaryCmdlet">
            <summary>
            View a summary of OpsItems based on specified filters and aggregators.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsSummaryCmdlet.Aggregator">
            <summary>
            <para>
            <para>Optional aggregators that return counts of OpsItems based on one or more expressions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsSummaryCmdlet.Filter">
            <summary>
            <para>
            <para>Optional filters used to scope down the returned OpsItems. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsSummaryCmdlet.ResultAttribute">
            <summary>
            <para>
            <para>The OpsItem data type to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsSummaryCmdlet.SyncName">
            <summary>
            <para>
            <para>Specify the name of a resource data sync to get.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsSummaryCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsSummaryCmdlet.NextToken">
            <summary>
            <para>
            <para>A token to start the list. Use this token to get the next set of results. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsSummaryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Entities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetOpsSummaryResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetOpsSummaryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsSummaryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Aggregator parameter.
            The -PassThru parameter is deprecated, use -Select '^Aggregator' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMOpsSummaryCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterCmdlet">
            <summary>
            Get information about a parameter by using the parameter name. Don't confuse this
            API action with the <a>GetParameters</a> API action.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterCmdlet.Name">
            <summary>
            <para>
            <para>The name of the parameter you want to query.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterCmdlet.WithDecryption">
            <summary>
            <para>
            <para>Return decrypted values for secure string parameters. This flag is ignored for String
            and StringList parameter types.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Parameter'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetParameterResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetParameterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterHistoryCmdlet">
            <summary>
            Query a list of all parameters used by the AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterHistoryCmdlet.Name">
            <summary>
            <para>
            <para>The name of a parameter you want to query.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterHistoryCmdlet.WithDecryption">
            <summary>
            <para>
            <para>Return decrypted values for secure string parameters. This flag is ignored for String
            and StringList parameter types.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterHistoryCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterHistoryCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterHistoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Parameters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetParameterHistoryResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetParameterHistoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterHistoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterHistoryCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterListCmdlet">
            <summary>
            Get information about a parameter.
            
             <note><para>
            Request results are returned on a best-effort basis. If you specify <code>MaxResults</code>
            in the request, the response includes information up to the limit specified. The number
            of items returned, however, can be between zero and the value of <code>MaxResults</code>.
            If the service reaches an internal limit while processing the results, it stops the
            operation and returns the matching values up to that point and a <code>NextToken</code>.
            You can specify the <code>NextToken</code> in a subsequent call to get the next set
            of results.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterListCmdlet.Filter">
            <summary>
            <para>
            <para>This data type is deprecated. Instead, use <code>ParameterFilters</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterListCmdlet.ParameterFilter">
            <summary>
            <para>
            <para>Filters to limit the request results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Parameters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeParametersResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterValueCmdlet">
            <summary>
            Get details of a parameter. Don't confuse this API action with the <a>GetParameter</a>
            API action.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterValueCmdlet.Name">
            <summary>
            <para>
            <para>Names of the parameters for which you want to query information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterValueCmdlet.WithDecryption">
            <summary>
            <para>
            <para>Return decrypted secure string value. Return decrypted values for secure string parameters.
            This flag is ignored for String and StringList parameter types.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMParameterValueCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetParametersResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchBaselineCmdlet">
            <summary>
            Lists the patch baselines in your AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchBaselineCmdlet.Filter">
            <summary>
            <para>
            <para>Each element in the array is a structure containing: </para><para>Key: (string, "NAME_PREFIX" or "OWNER")</para><para>Value: (array of strings, exactly 1 entry, between 1 and 255 characters)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchBaselineCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of patch baselines to return (per page).</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchBaselineCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchBaselineCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BaselineIdentities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribePatchBaselinesResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribePatchBaselinesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchBaselineCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchBaselineDetailCmdlet">
            <summary>
            Retrieves information about a patch baseline.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchBaselineDetailCmdlet.BaselineId">
            <summary>
            <para>
            <para>The ID of the patch baseline to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchBaselineDetailCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetPatchBaselineResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetPatchBaselineResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchBaselineDetailCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BaselineId parameter.
            The -PassThru parameter is deprecated, use -Select '^BaselineId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchBaselineForPatchGroupCmdlet">
            <summary>
            Retrieves the patch baseline that should be used for the specified patch group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchBaselineForPatchGroupCmdlet.OperatingSystem">
            <summary>
            <para>
            <para>Returns he operating system rule specified for patch groups using the patch baseline.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchBaselineForPatchGroupCmdlet.PatchGroup">
            <summary>
            <para>
            <para>The name of the patch group whose patch baseline should be retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchBaselineForPatchGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetPatchBaselineForPatchGroupResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetPatchBaselineForPatchGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchGroupCmdlet">
            <summary>
            Lists all patch groups that have been registered with patch baselines.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchGroupCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. Use a filter to return a more specific list of results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchGroupCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of patch groups to return (per page).</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchGroupCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Mappings'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribePatchGroupsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribePatchGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Filter parameter.
            The -PassThru parameter is deprecated, use -Select '^Filter' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchGroupStateCmdlet">
            <summary>
            Returns high-level aggregated patch compliance state for a patch group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchGroupStateCmdlet.PatchGroup">
            <summary>
            <para>
            <para>The name of the patch group whose patch snapshot should be retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchGroupStateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribePatchGroupStateResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribePatchGroupStateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchGroupStateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PatchGroup parameter.
            The -PassThru parameter is deprecated, use -Select '^PatchGroup' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchPropertyCmdlet">
            <summary>
            Lists the properties of available patches organized by product, product family, classification,
            severity, and other properties of available patches. You can use the reported properties
            in the filters you specify in requests for actions such as <a>CreatePatchBaseline</a>,
            <a>UpdatePatchBaseline</a>, <a>DescribeAvailablePatches</a>, and <a>DescribePatchBaselines</a>.
            
             
            <para>
            The following section lists the properties that can be used in filters for each major
            operating system type:
            </para><dl><dt>WINDOWS</dt><dd><para>
            Valid properties: PRODUCT, PRODUCT_FAMILY, CLASSIFICATION, MSRC_SEVERITY
            </para></dd><dt>AMAZON_LINUX</dt><dd><para>
            Valid properties: PRODUCT, CLASSIFICATION, SEVERITY
            </para></dd><dt>AMAZON_LINUX_2</dt><dd><para>
            Valid properties: PRODUCT, CLASSIFICATION, SEVERITY
            </para></dd><dt>UBUNTU </dt><dd><para>
            Valid properties: PRODUCT, PRIORITY
            </para></dd><dt>REDHAT_ENTERPRISE_LINUX</dt><dd><para>
            Valid properties: PRODUCT, CLASSIFICATION, SEVERITY
            </para></dd><dt>SUSE</dt><dd><para>
            Valid properties: PRODUCT, CLASSIFICATION, SEVERITY
            </para></dd><dt>CENTOS</dt><dd><para>
            Valid properties: PRODUCT, CLASSIFICATION, SEVERITY
            </para></dd></dl><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchPropertyCmdlet.OperatingSystem">
            <summary>
            <para>
            <para>The operating system type for which to list patches.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchPropertyCmdlet.PatchSet">
            <summary>
            <para>
            <para>Indicates whether to list patches for the Windows operating system or for Microsoft
            applications. Not applicable for Linux operating systems.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchPropertyCmdlet.Property">
            <summary>
            <para>
            <para>The patch property for which you want to view patch details. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchPropertyCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchPropertyCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchPropertyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Properties'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribePatchPropertiesResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribePatchPropertiesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchPropertyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Property parameter.
            The -PassThru parameter is deprecated, use -Select '^Property' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMPatchPropertyCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMResourceComplianceSummaryListCmdlet">
            <summary>
            Returns a resource-level summary count. The summary includes information about compliant
            and non-compliant statuses and detailed compliance-item severity counts, according
            to the filter criteria you specify.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMResourceComplianceSummaryListCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters. Use a filter to return a more specific list of results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMResourceComplianceSummaryListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMResourceComplianceSummaryListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token to start the list. Use this token to get the next set of results. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMResourceComplianceSummaryListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourceComplianceSummaryItems'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.ListResourceComplianceSummariesResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.ListResourceComplianceSummariesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMResourceComplianceSummaryListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMResourceDataSyncCmdlet">
            <summary>
            Lists your resource data sync configurations. Includes information about the last
            time a sync attempted to start, the last sync status, and the last time a sync successfully
            completed.
            
             
            <para>
            The number of sync configurations might be too large to return using a single call
            to <code>ListResourceDataSync</code>. You can limit the number of sync configurations
            returned by using the <code>MaxResults</code> parameter. To determine whether there
            are more sync configurations to list, check the value of <code>NextToken</code> in
            the output. If there are more sync configurations to list, you can request them by
            specifying the <code>NextToken</code> returned in the call to the parameter of a subsequent
            call. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMResourceDataSyncCmdlet.SyncType">
            <summary>
            <para>
            <para>View a list of resource data syncs according to the sync type. Specify <code>SyncToDestination</code>
            to view resource data syncs that synchronize data to an Amazon S3 buckets. Specify
            <code>SyncFromSource</code> to view resource data syncs from AWS Organizations or
            from multiple AWS Regions. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMResourceDataSyncCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMResourceDataSyncCmdlet.NextToken">
            <summary>
            <para>
            <para>A token to start the list. Use this token to get the next set of results. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMResourceDataSyncCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourceDataSyncItems'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.ListResourceDataSyncResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.ListResourceDataSyncResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMResourceDataSyncCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SyncType parameter.
            The -PassThru parameter is deprecated, use -Select '^SyncType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMResourceDataSyncCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMResourceTagCmdlet">
            <summary>
            Returns a list of the tags assigned to the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMResourceTagCmdlet.ResourceId">
            <summary>
            <para>
            <para>The resource ID for which you want to see a list of tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMResourceTagCmdlet.ResourceType">
            <summary>
            <para>
            <para>Returns a list of tags for a specific resource type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TagList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMServiceSettingCmdlet">
            <summary>
            <code>ServiceSetting</code> is an account-level setting for an AWS service. This
            setting defines how a user interacts with or uses a service or a feature of a service.
            For example, if an AWS service charges money to the account based on feature or service
            usage, then the AWS service team might create a default setting of "false". This means
            the user can't use this feature unless they change the setting to "true" and intentionally
            opt in for a paid feature.
            
             
            <para>
            Services map a <code>SettingId</code> object to a setting value. AWS services teams
            define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>,
            but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code>
            permission for the setting. Use the <a>UpdateServiceSetting</a> API action to change
            the default setting. Or use the <a>ResetServiceSetting</a> to change the value back
            to the original value defined by the AWS service team.
            </para><para>
            Query the current service setting for the account. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMServiceSettingCmdlet.SettingId">
            <summary>
            <para>
            <para>The ID of the service setting to get. The setting ID can be <code>/ssm/parameter-store/default-parameter-tier</code>,
            <code>/ssm/parameter-store/high-throughput-enabled</code>, or <code>/ssm/managed-instance/activation-tier</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMServiceSettingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ServiceSetting'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.GetServiceSettingResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.GetServiceSettingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMServiceSettingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SettingId parameter.
            The -PassThru parameter is deprecated, use -Select '^SettingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.GetSSMSessionCmdlet">
            <summary>
            Retrieves a list of all active sessions (both connected and disconnected) or terminated
            sessions from the past 30 days.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMSessionCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters to limit the type of sessions returned by the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMSessionCmdlet.State">
            <summary>
            <para>
            <para>The session status to retrieve a list of sessions for. For example, "Active".</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMSessionCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMSessionCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMSessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Sessions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DescribeSessionsResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DescribeSessionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.GetSSMSessionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.NewSSMActivationCmdlet">
            <summary>
            Generates an activation code and activation ID you can use to register your on-premises
            server or virtual machine (VM) with Systems Manager. Registering these machines with
            Systems Manager makes it possible to manage them using Systems Manager capabilities.
            You use the activation code and ID when installing SSM Agent on machines in your hybrid
            environment. For more information about requirements for managing on-premises instances
            and VMs using Systems Manager, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-managedinstances.html">Setting
            up AWS Systems Manager for hybrid environments</a> in the <i>AWS Systems Manager User
            Guide</i>. 
            
             <note><para>
            On-premises servers or VMs that are registered with Systems Manager and EC2 instances
            that you manage with Systems Manager are all called <i>managed instances</i>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMActivationCmdlet.DefaultInstanceName">
            <summary>
            <para>
            <para>The name of the registered, managed instance as it will appear in the Systems Manager
            console or when you use the AWS command line tools to list Systems Manager resources.</para><important><para>Do not enter personally identifiable information in this field.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMActivationCmdlet.Description">
            <summary>
            <para>
            <para>A user-defined description of the resource that you want to register with Systems
            Manager. </para><important><para>Do not enter personally identifiable information in this field.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMActivationCmdlet.ExpirationDate">
            <summary>
            <para>
            <para>The date by which this activation request should expire. The default value is 24 hours.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMActivationCmdlet.IamRole">
            <summary>
            <para>
            <para>The Amazon Identity and Access Management (IAM) role that you want to assign to the
            managed instance. This IAM role must provide AssumeRole permissions for the Systems
            Manager service principal <code>ssm.amazonaws.com</code>. For more information, see
            <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-service-role.html">Create
            an IAM service role for a hybrid environment</a> in the <i>AWS Systems Manager User
            Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMActivationCmdlet.RegistrationLimit">
            <summary>
            <para>
            <para>Specify the maximum number of managed instances you want to register. The default
            value is 1 instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMActivationCmdlet.Tag">
            <summary>
            <para>
            <para>Optional metadata that you assign to a resource. Tags enable you to categorize a resource
            in different ways, such as by purpose, owner, or environment. For example, you might
            want to tag an activation to identify which servers or virtual machines (VMs) in your
            on-premises environment you intend to activate. In this case, you could specify the
            following key name/value pairs:</para><ul><li><para><code>Key=OS,Value=Windows</code></para></li><li><para><code>Key=Environment,Value=Production</code></para></li></ul><important><para>When you install SSM Agent on your on-premises servers and VMs, you specify an activation
            ID and code. When you specify the activation ID and code, tags assigned to the activation
            are automatically applied to the on-premises servers or VMs.</para></important><para>You can't add tags to or delete tags from an existing activation. You can tag your
            on-premises servers and VMs after they connect to Systems Manager for the first time
            and are assigned a managed instance ID. This means they are listed in the AWS Systems
            Manager console with an ID that is prefixed with "mi-". For information about how
            to add tags to your managed instances, see <a>AddTagsToResource</a>. For information
            about how to remove tags from your managed instances, see <a>RemoveTagsFromResource</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMActivationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.CreateActivationResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.CreateActivationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMActivationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationCmdlet">
            <summary>
            Associates the specified Systems Manager document with the specified instances or
            targets.
            
             
            <para>
            When you associate a document with one or more instances, SSM Agent running on the
            instance processes the document and configures the instance as specified. If you associate
            a document with an instance that already has an associated document, the system returns
            the <code>AssociationAlreadyExists</code> exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationCmdlet.ApplyOnlyAtCronInterval">
            <summary>
            <para>
            <para>By default, when you create a new associations, the system runs it immediately after
            it is created and then according to the schedule you specified. Specify this option
            if you don't want an association to run immediately after you create it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationCmdlet.AssociationName">
            <summary>
            <para>
            <para>Specify a descriptive name for the association.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationCmdlet.AutomationTargetParameterName">
            <summary>
            <para>
            <para>Specify the target for the association. This target is required for associations that
            use an Automation document and target resources by using rate controls.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationCmdlet.ComplianceSeverity">
            <summary>
            <para>
            <para>The severity level to assign to the association.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationCmdlet.DocumentVersion">
            <summary>
            <para>
            <para>The document version you want to associate with the target(s). Can be a specific version
            or the default version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationCmdlet.InstanceId">
            <summary>
            <para>
            <para>The instance ID.</para><note><para><code>InstanceId</code> has been deprecated. To specify an instance ID for an association,
            use the <code>Targets</code> parameter. Requests that include the parameter <code>InstanceID</code>
            with SSM documents that use schema version 2.0 or later will fail. In addition, if
            you use the parameter <code>InstanceId</code>, you cannot use the parameters <code>AssociationName</code>,
            <code>DocumentVersion</code>, <code>MaxErrors</code>, <code>MaxConcurrency</code>,
            <code>OutputLocation</code>, or <code>ScheduleExpression</code>. To use these parameters,
            you must use the <code>Targets</code> parameter.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationCmdlet.MaxConcurrency">
            <summary>
            <para>
            <para>The maximum number of targets allowed to run the association at the same time. You
            can specify a number, for example 10, or a percentage of the target set, for example
            10%. The default value is 100%, which means all targets run the association at the
            same time.</para><para>If a new instance starts and attempts to run an association while Systems Manager
            is running MaxConcurrency associations, the association is allowed to run. During
            the next association interval, the new instance will process its association within
            the limit specified for MaxConcurrency.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationCmdlet.MaxError">
            <summary>
            <para>
            <para>The number of errors that are allowed before the system stops sending requests to
            run the association on additional targets. You can specify either an absolute number
            of errors, for example 10, or a percentage of the target set, for example 10%. If
            you specify 3, for example, the system stops sending requests when the fourth error
            is received. If you specify 0, then the system stops sending requests after the first
            error is returned. If you run an association on 50 instances and set MaxError to 10%,
            then the system stops sending the request when the sixth error is received.</para><para>Executions that are already running an association when MaxErrors is reached are allowed
            to complete, but some of these executions may fail as well. If you need to ensure
            that there won't be more than max-errors failed executions, set MaxConcurrency to
            1 so that executions proceed one at a time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationCmdlet.Name">
            <summary>
            <para>
            <para>The name of the SSM document that contains the configuration information for the instance.
            You can specify Command or Automation documents.</para><para>You can specify AWS-predefined documents, documents you created, or a document that
            is shared with you from another account.</para><para>For SSM documents that are shared with you from other AWS accounts, you must specify
            the complete SSM document ARN, in the following format:</para><para><code>arn:<i>partition</i>:ssm:<i>region</i>:<i>account-id</i>:document/<i>document-name</i></code></para><para>For example:</para><para><code>arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document</code></para><para>For AWS-predefined documents and SSM documents you created in your account, you only
            need to specify the document name. For example, <code>AWS-ApplyPatchBaseline</code>
            or <code>My-Document</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationCmdlet.S3Location_OutputS3BucketName">
            <summary>
            <para>
            <para>The name of the S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationCmdlet.S3Location_OutputS3KeyPrefix">
            <summary>
            <para>
            <para>The S3 bucket subfolder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationCmdlet.S3Location_OutputS3Region">
            <summary>
            <para>
            <para>(Deprecated) You can no longer specify this parameter. The system ignores it. Instead,
            Systems Manager automatically determines the Region of the S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationCmdlet.Parameter">
            <summary>
            <para>
            <para>The parameters for the runtime configuration of the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationCmdlet.ScheduleExpression">
            <summary>
            <para>
            <para>A cron expression when the association will be applied to the target(s).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationCmdlet.SyncCompliance">
            <summary>
            <para>
            <para>The mode for generating association compliance. You can specify <code>AUTO</code>
            or <code>MANUAL</code>. In <code>AUTO</code> mode, the system uses the status of the
            association execution to determine the compliance status. If the association execution
            runs successfully, then the association is <code>COMPLIANT</code>. If the association
            execution doesn't run successfully, the association is <code>NON-COMPLIANT</code>.</para><para>In <code>MANUAL</code> mode, you must specify the <code>AssociationId</code> as a
            parameter for the <a>PutComplianceItems</a> API action. In this case, compliance data
            is not managed by State Manager. It is managed by your direct call to the <a>PutComplianceItems</a>
            API action.</para><para>By default, all associations use <code>AUTO</code> mode.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationCmdlet.Target">
            <summary>
            <para>
            <para>The targets for the association. You can target instances by using tags, AWS Resource
            Groups, all instances in an AWS account, or individual instance IDs. For more information
            about choosing targets for an association, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-state-manager-targets-and-rate-controls.html">Using
            targets and rate controls with State Manager associations</a> in the <i>AWS Systems
            Manager User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AssociationDescription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.CreateAssociationResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.CreateAssociationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationFromBatchCmdlet">
            <summary>
            Associates the specified Systems Manager document with the specified instances or
            targets.
            
             
            <para>
            When you associate a document with one or more instances using instance IDs or tags,
            SSM Agent running on the instance processes the document and configures the instance
            as specified.
            </para><para>
            If you associate a document with an instance that already has an associated document,
            the system returns the AssociationAlreadyExists exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationFromBatchCmdlet.Entry">
            <summary>
            <para>
            <para>One or more associations.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationFromBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.CreateAssociationBatchResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.CreateAssociationBatchResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationFromBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Entry parameter.
            The -PassThru parameter is deprecated, use -Select '^Entry' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMAssociationFromBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.NewSSMDocumentCmdlet">
            <summary>
            Creates a Systems Manager (SSM) document. An SSM document defines the actions that
            Systems Manager performs on your managed instances. For more information about SSM
            documents, including information about supported schemas, features, and syntax, see
            <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-ssm-docs.html">AWS
            Systems Manager Documents</a> in the <i>AWS Systems Manager User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMDocumentCmdlet.Attachment">
            <summary>
            <para>
            <para>A list of key and value pairs that describe attachments to a version of a document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMDocumentCmdlet.Content">
            <summary>
            <para>
            <para>The content for the new SSM document in JSON or YAML format. We recommend storing
            the contents for your new document in an external JSON or YAML file and referencing
            the file in a command.</para><para>For examples, see the following topics in the <i>AWS Systems Manager User Guide</i>.</para><ul><li><para><a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/create-ssm-document-api.html">Create
            an SSM document (AWS API)</a></para></li><li><para><a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/create-ssm-document-cli.html">Create
            an SSM document (AWS CLI)</a></para></li><li><para><a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/create-ssm-document-api.html">Create
            an SSM document (API)</a></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMDocumentCmdlet.DocumentFormat">
            <summary>
            <para>
            <para>Specify the document format for the request. The document format can be JSON, YAML,
            or TEXT. JSON is the default format.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMDocumentCmdlet.DocumentType">
            <summary>
            <para>
            <para>The type of document to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMDocumentCmdlet.Name">
            <summary>
            <para>
            <para>A name for the Systems Manager document.</para><important><para>You can't use the following strings as document name prefixes. These are reserved
            by AWS for use as document name prefixes:</para><ul><li><para><code>aws-</code></para></li><li><para><code>amazon</code></para></li><li><para><code>amzn</code></para></li></ul></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMDocumentCmdlet.Require">
            <summary>
            <para>
            <para>A list of SSM documents required by a document. This parameter is used exclusively
            by AWS AppConfig. When a user creates an AppConfig configuration in an SSM document,
            the user must also specify a required document for validation purposes. In this case,
            an <code>ApplicationConfiguration</code> document requires an <code>ApplicationConfigurationSchema</code>
            document for validation purposes. For more information, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/appconfig.html">AWS
            AppConfig</a> in the <i>AWS Systems Manager User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMDocumentCmdlet.Tag">
            <summary>
            <para>
            <para>Optional metadata that you assign to a resource. Tags enable you to categorize a resource
            in different ways, such as by purpose, owner, or environment. For example, you might
            want to tag an SSM document to identify the types of targets or the environment where
            it will run. In this case, you could specify the following key name/value pairs:</para><ul><li><para><code>Key=OS,Value=Windows</code></para></li><li><para><code>Key=Environment,Value=Production</code></para></li></ul><note><para>To add tags to an existing SSM document, use the <a>AddTagsToResource</a> action.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMDocumentCmdlet.TargetType">
            <summary>
            <para>
            <para>Specify a target type to define the kinds of resources the document can run on. For
            example, to run a document on EC2 instances, specify the following value: /AWS::EC2::Instance.
            If you specify a value of '/' the document can run on all types of resources. If you
            don't specify a value, the document can't run on any resources. For a list of valid
            resource types, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html">AWS
            resource and property types reference</a> in the <i>AWS CloudFormation User Guide</i>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMDocumentCmdlet.VersionName">
            <summary>
            <para>
            <para>An optional field specifying the version of the artifact you are creating with the
            document. For example, "Release 12, Update 6". This value is unique across all versions
            of a document, and cannot be changed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMDocumentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DocumentDescription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.CreateDocumentResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.CreateDocumentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMDocumentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Content parameter.
            The -PassThru parameter is deprecated, use -Select '^Content' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMDocumentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.NewSSMMaintenanceWindowCmdlet">
            <summary>
            Creates a new maintenance window.
            
             <note><para>
            The value you specify for <code>Duration</code> determines the specific end time for
            the maintenance window based on the time it begins. No maintenance window tasks are
            permitted to start after the resulting endtime minus the number of hours you specify
            for <code>Cutoff</code>. For example, if the maintenance window starts at 3 PM, the
            duration is three hours, and the value you specify for <code>Cutoff</code> is one
            hour, no maintenance window tasks can start after 5 PM.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMMaintenanceWindowCmdlet.AllowUnassociatedTarget">
            <summary>
            <para>
            <para>Enables a maintenance window task to run on managed instances, even if you have not
            registered those instances as targets. If enabled, then you must specify the unregistered
            instances (by instance ID) when you register a task with the maintenance window.</para><para>If you don't enable this option, then you must specify previously-registered targets
            when you register a task with the maintenance window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMMaintenanceWindowCmdlet.Cutoff">
            <summary>
            <para>
            <para>The number of hours before the end of the maintenance window that Systems Manager
            stops scheduling new tasks for execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMMaintenanceWindowCmdlet.Description">
            <summary>
            <para>
            <para>An optional description for the maintenance window. We recommend specifying a description
            to help you organize your maintenance windows. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMMaintenanceWindowCmdlet.Duration">
            <summary>
            <para>
            <para>The duration of the maintenance window in hours.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMMaintenanceWindowCmdlet.EndDate">
            <summary>
            <para>
            <para>The date and time, in ISO-8601 Extended format, for when you want the maintenance
            window to become inactive. EndDate allows you to set a date and time in the future
            when the maintenance window will no longer run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMMaintenanceWindowCmdlet.Name">
            <summary>
            <para>
            <para>The name of the maintenance window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMMaintenanceWindowCmdlet.Schedule">
            <summary>
            <para>
            <para>The schedule of the maintenance window in the form of a cron or rate expression.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMMaintenanceWindowCmdlet.ScheduleTimezone">
            <summary>
            <para>
            <para>The time zone that the scheduled maintenance window executions are based on, in Internet
            Assigned Numbers Authority (IANA) format. For example: "America/Los_Angeles", "etc/UTC",
            or "Asia/Seoul". For more information, see the <a href="https://www.iana.org/time-zones">Time
            Zone Database</a> on the IANA website.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMMaintenanceWindowCmdlet.StartDate">
            <summary>
            <para>
            <para>The date and time, in ISO-8601 Extended format, for when you want the maintenance
            window to become active. StartDate allows you to delay activation of the maintenance
            window until the specified future date.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMMaintenanceWindowCmdlet.Tag">
            <summary>
            <para>
            <para>Optional metadata that you assign to a resource. Tags enable you to categorize a resource
            in different ways, such as by purpose, owner, or environment. For example, you might
            want to tag a maintenance window to identify the type of tasks it will run, the types
            of targets, and the environment it will run in. In this case, you could specify the
            following key name/value pairs:</para><ul><li><para><code>Key=TaskType,Value=AgentUpdate</code></para></li><li><para><code>Key=OS,Value=Windows</code></para></li><li><para><code>Key=Environment,Value=Production</code></para></li></ul><note><para>To add tags to an existing maintenance window, use the <a>AddTagsToResource</a> action.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMMaintenanceWindowCmdlet.ClientToken">
            <summary>
            <para>
            <para>User-provided idempotency token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMMaintenanceWindowCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WindowId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.CreateMaintenanceWindowResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.CreateMaintenanceWindowResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMMaintenanceWindowCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMMaintenanceWindowCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.NewSSMOpsItemCmdlet">
            <summary>
            Creates a new OpsItem. You must have permission in AWS Identity and Access Management
            (IAM) to create a new OpsItem. For more information, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html">Getting
            started with OpsCenter</a> in the <i>AWS Systems Manager User Guide</i>.
            
             
            <para>
            Operations engineers and IT professionals use OpsCenter to view, investigate, and
            remediate operational issues impacting the performance and health of their AWS resources.
            For more information, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html">AWS
            Systems Manager OpsCenter</a> in the <i>AWS Systems Manager User Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMOpsItemCmdlet.Category">
            <summary>
            <para>
            <para>Specify a category to assign to an OpsItem. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMOpsItemCmdlet.Description">
            <summary>
            <para>
            <para>Information about the OpsItem. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMOpsItemCmdlet.Notification">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an SNS topic where notifications are sent when this
            OpsItem is edited or changed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMOpsItemCmdlet.OperationalData">
            <summary>
            <para>
            <para>Operational data is custom data that provides useful reference details about the OpsItem.
            For example, you can specify log files, error strings, license keys, troubleshooting
            tips, or other relevant data. You enter operational data as key-value pairs. The key
            has a maximum length of 128 characters. The value has a maximum size of 20 KB.</para><important><para>Operational data keys <i>can't</i> begin with the following: amazon, aws, amzn, ssm,
            /amazon, /aws, /amzn, /ssm.</para></important><para>You can choose to make the data searchable by other users in the account or you can
            restrict search access. Searchable data means that all users with access to the OpsItem
            Overview page (as provided by the <a>DescribeOpsItems</a> API action) can view and
            search on the specified data. Operational data that is not searchable is only viewable
            by users who have access to the OpsItem (as provided by the <a>GetOpsItem</a> API
            action).</para><para>Use the <code>/aws/resources</code> key in OperationalData to specify a related resource
            in the request. Use the <code>/aws/automations</code> key in OperationalData to associate
            an Automation runbook with the OpsItem. To view AWS CLI example commands that use
            these keys, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-creating-OpsItems.html#OpsCenter-manually-create-OpsItems">Creating
            OpsItems manually</a> in the <i>AWS Systems Manager User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMOpsItemCmdlet.Priority">
            <summary>
            <para>
            <para>The importance of this OpsItem in relation to other OpsItems in the system.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMOpsItemCmdlet.RelatedOpsItem">
            <summary>
            <para>
            <para>One or more OpsItems that share something in common with the current OpsItems. For
            example, related OpsItems can include OpsItems with similar error messages, impacted
            resources, or statuses for the impacted resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMOpsItemCmdlet.Severity">
            <summary>
            <para>
            <para>Specify a severity to assign to an OpsItem.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMOpsItemCmdlet.Source">
            <summary>
            <para>
            <para>The origin of the OpsItem, such as Amazon EC2 or Systems Manager.</para><note><para>The source name can't contain the following strings: aws, amazon, and amzn. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMOpsItemCmdlet.Tag">
            <summary>
            <para>
            <para>Optional metadata that you assign to a resource. You can restrict access to OpsItems
            by using an inline IAM policy that specifies tags. For more information, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html#OpsCenter-getting-started-user-permissions">Getting
            started with OpsCenter</a> in the <i>AWS Systems Manager User Guide</i>.</para><para>Tags use a key-value pair. For example:</para><para><code>Key=Department,Value=Finance</code></para><note><para>To add tags to an existing OpsItem, use the <a>AddTagsToResource</a> action.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMOpsItemCmdlet.Title">
            <summary>
            <para>
            <para>A short heading that describes the nature of the OpsItem and the impacted resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMOpsItemCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OpsItemId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.CreateOpsItemResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.CreateOpsItemResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMOpsItemCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Title parameter.
            The -PassThru parameter is deprecated, use -Select '^Title' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMOpsItemCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.NewSSMPatchBaselineCmdlet">
            <summary>
            Creates a patch baseline.
            
             <note><para>
            For information about valid key and value pairs in <code>PatchFilters</code> for each
            supported operating system type, see <a href="http://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html">PatchFilter</a>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMPatchBaselineCmdlet.ApprovedPatch">
            <summary>
            <para>
            <para>A list of explicitly approved patches for the baseline.</para><para>For information about accepted formats for lists of approved patches and rejected
            patches, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html">About
            package name formats for approved and rejected patch lists</a> in the <i>AWS Systems
            Manager User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMPatchBaselineCmdlet.ApprovedPatchesComplianceLevel">
            <summary>
            <para>
            <para>Defines the compliance level for approved patches. This means that if an approved
            patch is reported as missing, this is the severity of the compliance violation. The
            default value is UNSPECIFIED.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMPatchBaselineCmdlet.ApprovedPatchesEnableNonSecurity">
            <summary>
            <para>
            <para>Indicates whether the list of approved patches includes non-security updates that
            should be applied to the instances. The default value is 'false'. Applies to Linux
            instances only.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMPatchBaselineCmdlet.Description">
            <summary>
            <para>
            <para>A description of the patch baseline.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMPatchBaselineCmdlet.Name">
            <summary>
            <para>
            <para>The name of the patch baseline.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMPatchBaselineCmdlet.OperatingSystem">
            <summary>
            <para>
            <para>Defines the operating system the patch baseline applies to. The Default value is WINDOWS.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMPatchBaselineCmdlet.GlobalFilters_PatchFilter">
            <summary>
            <para>
            <para>The set of patch filters that make up the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMPatchBaselineCmdlet.ApprovalRules_PatchRule">
            <summary>
            <para>
            <para>The rules that make up the rule group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMPatchBaselineCmdlet.RejectedPatch">
            <summary>
            <para>
            <para>A list of explicitly rejected patches for the baseline.</para><para>For information about accepted formats for lists of approved patches and rejected
            patches, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html">About
            package name formats for approved and rejected patch lists</a> in the <i>AWS Systems
            Manager User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMPatchBaselineCmdlet.RejectedPatchesAction">
            <summary>
            <para>
            <para>The action for Patch Manager to take on patches included in the RejectedPackages list.</para><ul><li><para><b>ALLOW_AS_DEPENDENCY</b>: A package in the Rejected patches list is installed only
            if it is a dependency of another package. It is considered compliant with the patch
            baseline, and its status is reported as <i>InstalledOther</i>. This is the default
            action if no option is specified.</para></li><li><para><b>BLOCK</b>: Packages in the RejectedPatches list, and packages that include them
            as dependencies, are not installed under any circumstances. If a package was installed
            before it was added to the Rejected patches list, it is considered non-compliant with
            the patch baseline, and its status is reported as <i>InstalledRejected</i>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMPatchBaselineCmdlet.Source">
            <summary>
            <para>
            <para>Information about the patches to use to update the instances, including target operating
            systems and source repositories. Applies to Linux instances only.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMPatchBaselineCmdlet.Tag">
            <summary>
            <para>
            <para>Optional metadata that you assign to a resource. Tags enable you to categorize a resource
            in different ways, such as by purpose, owner, or environment. For example, you might
            want to tag a patch baseline to identify the severity level of patches it specifies
            and the operating system family it applies to. In this case, you could specify the
            following key name/value pairs:</para><ul><li><para><code>Key=PatchSeverity,Value=Critical</code></para></li><li><para><code>Key=OS,Value=Windows</code></para></li></ul><note><para>To add tags to an existing patch baseline, use the <a>AddTagsToResource</a> action.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMPatchBaselineCmdlet.ClientToken">
            <summary>
            <para>
            <para>User-provided idempotency token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMPatchBaselineCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BaselineId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.CreatePatchBaselineResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.CreatePatchBaselineResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMPatchBaselineCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.NewSSMResourceDataSyncCmdlet">
            <summary>
            A resource data sync helps you view data from multiple sources in a single location.
            Systems Manager offers two types of resource data sync: <code>SyncToDestination</code>
            and <code>SyncFromSource</code>.
            
             
            <para>
            You can configure Systems Manager Inventory to use the <code>SyncToDestination</code>
            type to synchronize Inventory data from multiple AWS Regions to a single S3 bucket.
            For more information, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-datasync.html">Configuring
            Resource Data Sync for Inventory</a> in the <i>AWS Systems Manager User Guide</i>.
            </para><para>
            You can configure Systems Manager Explorer to use the <code>SyncFromSource</code>
            type to synchronize operational work items (OpsItems) and operational data (OpsData)
            from multiple AWS Regions to a single S3 bucket. This type can synchronize OpsItems
            and OpsData from multiple AWS accounts and Regions or <code>EntireOrganization</code>
            by using AWS Organizations. For more information, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/Explorer-resource-data-sync.html">Setting
            up Systems Manager Explorer to display data from multiple accounts and Regions</a>
            in the <i>AWS Systems Manager User Guide</i>.
            </para><para>
            A resource data sync is an asynchronous operation that returns immediately. After
            a successful initial sync is completed, the system continuously syncs data. To check
            the status of a sync, use the <a>ListResourceDataSync</a>.
            </para><note><para>
            By default, data is not encrypted in Amazon S3. We strongly recommend that you enable
            encryption in Amazon S3 to ensure secure data storage. We also recommend that you
            secure access to the Amazon S3 bucket by creating a restrictive bucket policy. 
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMResourceDataSyncCmdlet.S3Destination_AWSKMSKeyARN">
            <summary>
            <para>
            <para>The ARN of an encryption key for a destination in Amazon S3. Must belong to the same
            Region as the destination S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMResourceDataSyncCmdlet.S3Destination_BucketName">
            <summary>
            <para>
            <para>The name of the S3 bucket where the aggregated data is stored.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMResourceDataSyncCmdlet.DestinationDataSharing_DestinationDataSharingType">
            <summary>
            <para>
            <para>The sharing data type. Only <code>Organization</code> is supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMResourceDataSyncCmdlet.SyncSource_IncludeFutureRegion">
            <summary>
            <para>
            <para>Whether to automatically synchronize and aggregate data from new AWS Regions when
            those Regions come online.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMResourceDataSyncCmdlet.AwsOrganizationsSource_OrganizationalUnit">
            <summary>
            <para>
            <para>The AWS Organizations organization units included in the sync.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMResourceDataSyncCmdlet.AwsOrganizationsSource_OrganizationSourceType">
            <summary>
            <para>
            <para>If an AWS Organization is present, this is either <code>OrganizationalUnits</code>
            or <code>EntireOrganization</code>. For <code>OrganizationalUnits</code>, the data
            is aggregated from a set of organization units. For <code>EntireOrganization</code>,
            the data is aggregated from the entire AWS Organization. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMResourceDataSyncCmdlet.S3Destination_Prefix">
            <summary>
            <para>
            <para>An Amazon S3 prefix for the bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMResourceDataSyncCmdlet.S3Destination_Region">
            <summary>
            <para>
            <para>The AWS Region with the S3 bucket targeted by the Resource Data Sync.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMResourceDataSyncCmdlet.SyncSource_SourceRegion">
            <summary>
            <para>
            <para>The <code>SyncSource</code> AWS Regions included in the resource data sync.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMResourceDataSyncCmdlet.SyncSource_SourceType">
            <summary>
            <para>
            <para>The type of data source for the resource data sync. <code>SourceType</code> is either
            <code>AwsOrganizations</code> (if an organization is present in AWS Organizations)
            or <code>singleAccountMultiRegions</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMResourceDataSyncCmdlet.S3Destination_SyncFormat">
            <summary>
            <para>
            <para>A supported sync format. The following format is currently supported: JsonSerDe</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMResourceDataSyncCmdlet.SyncName">
            <summary>
            <para>
            <para>A name for the configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMResourceDataSyncCmdlet.SyncType">
            <summary>
            <para>
            <para>Specify <code>SyncToDestination</code> to create a resource data sync that synchronizes
            data to an S3 bucket for Inventory. If you specify <code>SyncToDestination</code>,
            you must provide a value for <code>S3Destination</code>. Specify <code>SyncFromSource</code>
            to synchronize data from a single account and multiple Regions, or multiple AWS accounts
            and Regions, as listed in AWS Organizations for Explorer. If you specify <code>SyncFromSource</code>,
            you must provide a value for <code>SyncSource</code>. The default value is <code>SyncToDestination</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMResourceDataSyncCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.CreateResourceDataSyncResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMResourceDataSyncCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SyncName parameter.
            The -PassThru parameter is deprecated, use -Select '^SyncName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.NewSSMResourceDataSyncCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMDefaultPatchBaselineCmdlet">
            <summary>
            Defines the default patch baseline for the relevant operating system.
            
             
            <para>
            To reset the AWS predefined patch baseline as the default, specify the full patch
            baseline ARN as the baseline ID value. For example, for CentOS, specify <code>arn:aws:ssm:us-east-2:733109147000:patchbaseline/pb-0574b43a65ea646ed</code>
            instead of <code>pb-0574b43a65ea646ed</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMDefaultPatchBaselineCmdlet.BaselineId">
            <summary>
            <para>
            <para>The ID of the patch baseline that should be the default patch baseline.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMDefaultPatchBaselineCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BaselineId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.RegisterDefaultPatchBaselineResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.RegisterDefaultPatchBaselineResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMDefaultPatchBaselineCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BaselineId parameter.
            The -PassThru parameter is deprecated, use -Select '^BaselineId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMDefaultPatchBaselineCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMPatchBaselineForPatchGroupCmdlet">
            <summary>
            Registers a patch baseline for a patch group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMPatchBaselineForPatchGroupCmdlet.BaselineId">
            <summary>
            <para>
            <para>The ID of the patch baseline to register the patch group with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMPatchBaselineForPatchGroupCmdlet.PatchGroup">
            <summary>
            <para>
            <para>The name of the patch group that should be registered with the patch baseline.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMPatchBaselineForPatchGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.RegisterPatchBaselineForPatchGroupResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.RegisterPatchBaselineForPatchGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMPatchBaselineForPatchGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BaselineId parameter.
            The -PassThru parameter is deprecated, use -Select '^BaselineId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMPatchBaselineForPatchGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTargetWithMaintenanceWindowCmdlet">
            <summary>
            Registers a target with a maintenance window.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTargetWithMaintenanceWindowCmdlet.Description">
            <summary>
            <para>
            <para>An optional description for the target.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTargetWithMaintenanceWindowCmdlet.Name">
            <summary>
            <para>
            <para>An optional name for the target.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTargetWithMaintenanceWindowCmdlet.OwnerInformation">
            <summary>
            <para>
            <para>User-provided value that will be included in any CloudWatch events raised while running
            tasks for these targets in this maintenance window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTargetWithMaintenanceWindowCmdlet.ResourceType">
            <summary>
            <para>
            <para>The type of target being registered with the maintenance window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTargetWithMaintenanceWindowCmdlet.Target">
            <summary>
            <para>
            <para>The targets to register with the maintenance window. In other words, the instances
            to run commands on when the maintenance window runs.</para><para>You can specify targets using instance IDs, resource group names, or tags that have
            been applied to instances.</para><para><b>Example 1</b>: Specify instance IDs</para><para><code>Key=InstanceIds,Values=<i>instance-id-1</i>,<i>instance-id-2</i>,<i>instance-id-3</i></code></para><para><b>Example 2</b>: Use tag key-pairs applied to instances</para><para><code>Key=tag:<i>my-tag-key</i>,Values=<i>my-tag-value-1</i>,<i>my-tag-value-2</i></code></para><para><b>Example 3</b>: Use tag-keys applied to instances</para><para><code>Key=tag-key,Values=<i>my-tag-key-1</i>,<i>my-tag-key-2</i></code></para><para><b>Example 4</b>: Use resource group names</para><para><code>Key=resource-groups:Name,Values=<i>resource-group-name</i></code></para><para><b>Example 5</b>: Use filters for resource group types</para><para><code>Key=resource-groups:ResourceTypeFilters,Values=<i>resource-type-1</i>,<i>resource-type-2</i></code></para><note><para>For <code>Key=resource-groups:ResourceTypeFilters</code>, specify resource types in
            the following format</para><para><code>Key=resource-groups:ResourceTypeFilters,Values=<i>AWS::EC2::INSTANCE</i>,<i>AWS::EC2::VPC</i></code></para></note><para>For more information about these examples formats, including the best use case for
            each one, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/mw-cli-tutorial-targets-examples.html">Examples:
            Register targets with a maintenance window</a> in the <i>AWS Systems Manager User
            Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTargetWithMaintenanceWindowCmdlet.WindowId">
            <summary>
            <para>
            <para>The ID of the maintenance window the target should be registered with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTargetWithMaintenanceWindowCmdlet.ClientToken">
            <summary>
            <para>
            <para>User-provided idempotency token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTargetWithMaintenanceWindowCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WindowTargetId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.RegisterTargetWithMaintenanceWindowResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.RegisterTargetWithMaintenanceWindowResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTargetWithMaintenanceWindowCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WindowId parameter.
            The -PassThru parameter is deprecated, use -Select '^WindowId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTargetWithMaintenanceWindowCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet">
            <summary>
            Adds a new task to a maintenance window.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.Lambda_ClientContext">
            <summary>
            <para>
            <para>Pass client-specific information to the Lambda function that you are invoking. You
            can then process the client information in your Lambda function as you choose through
            the context variable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.CloudWatchOutputConfig_CloudWatchLogGroupName">
            <summary>
            <para>
            <para>The name of the CloudWatch log group where you want to send command output. If you
            don't specify a group name, Systems Manager automatically creates a log group for
            you. The log group uses the following naming format: aws/ssm/<i>SystemsManagerDocumentName</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.CloudWatchOutputConfig_CloudWatchOutputEnabled">
            <summary>
            <para>
            <para>Enables Systems Manager to send command output to CloudWatch Logs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.RunCommand_Comment">
            <summary>
            <para>
            <para>Information about the commands to run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.Description">
            <summary>
            <para>
            <para>An optional description for the task.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.RunCommand_DocumentHash">
            <summary>
            <para>
            <para>The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1
            hashes have been deprecated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.RunCommand_DocumentHashType">
            <summary>
            <para>
            <para>SHA-256 or SHA-1. SHA-1 hashes have been deprecated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.Automation_DocumentVersion">
            <summary>
            <para>
            <para>The version of an Automation document to use during task execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.RunCommand_DocumentVersion">
            <summary>
            <para>
            <para>The SSM document version to use in the request. You can specify $DEFAULT, $LATEST,
            or a specific version number. If you run commands by using the AWS CLI, then you must
            escape the first two options by using a backslash. If you specify a version number,
            then you don't need to use the backslash. For example:</para><para>--document-version "\$DEFAULT"</para><para>--document-version "\$LATEST"</para><para>--document-version "3"</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.StepFunctions_Input">
            <summary>
            <para>
            <para>The inputs for the STEP_FUNCTIONS task.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.MaxConcurrency">
            <summary>
            <para>
            <para>The maximum number of targets this task can be run for in parallel.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.MaxError">
            <summary>
            <para>
            <para>The maximum number of errors allowed before this task stops being scheduled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.Name">
            <summary>
            <para>
            <para>An optional name for the task.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.StepFunctions_Name">
            <summary>
            <para>
            <para>The name of the STEP_FUNCTIONS task.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.NotificationConfig_NotificationArn">
            <summary>
            <para>
            <para>An Amazon Resource Name (ARN) for an Amazon Simple Notification Service (Amazon SNS)
            topic. Run Command pushes notifications about command status changes to this topic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.NotificationConfig_NotificationEvent">
            <summary>
            <para>
            <para>The different events for which you can receive notifications. These events include
            the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To
            learn more about these events, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/monitoring-sns-notifications.html">Monitoring
            Systems Manager status changes using Amazon SNS notifications</a> in the <i>AWS Systems
            Manager User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.NotificationConfig_NotificationType">
            <summary>
            <para>
            <para>Command: Receive notification when the status of a command changes. Invocation: For
            commands sent to multiple instances, receive notification on a per-instance basis
            when the status of a command changes. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.RunCommand_OutputS3BucketName">
            <summary>
            <para>
            <para>The name of the S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.RunCommand_OutputS3KeyPrefix">
            <summary>
            <para>
            <para>The S3 bucket subfolder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.Automation_Parameter">
            <summary>
            <para>
            <para>The parameters for the AUTOMATION task.</para><para>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a>
            and <a>UpdateMaintenanceWindowTask</a>.</para><note><para><code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain
            logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code>
            options in the <code>TaskInvocationParameters</code> structure. For information about
            how Systems Manager handles these options for the supported maintenance window task
            types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</para><para><code>TaskParameters</code> has been deprecated. To specify parameters to pass to
            a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code>
            structure. For information about how Systems Manager handles these options for the
            supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</para><para>For AUTOMATION task types, Systems Manager ignores any values specified for these
            parameters.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.RunCommand_Parameter">
            <summary>
            <para>
            <para>The parameters for the RUN_COMMAND task execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.Lambda_Payload">
            <summary>
            <para>
            <para>JSON to provide to your Lambda function as input.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.Priority">
            <summary>
            <para>
            <para>The priority of the task in the maintenance window, the lower the number the higher
            the priority. Tasks in a maintenance window are scheduled in priority order with tasks
            that have the same priority scheduled in parallel.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.Lambda_Qualifier">
            <summary>
            <para>
            <para>(Optional) Specify a Lambda function version or alias name. If you specify a function
            version, the action uses the qualified function ARN to invoke a specific Lambda function.
            If you specify an alias name, the action uses the alias ARN to invoke the Lambda function
            version to which the alias points.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.LoggingInfo_S3BucketName">
            <summary>
            <para>
            <para>The name of an S3 bucket where execution logs are stored .</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.LoggingInfo_S3KeyPrefix">
            <summary>
            <para>
            <para>(Optional) The S3 bucket subfolder. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.LoggingInfo_S3Region">
            <summary>
            <para>
            <para>The Region where the S3 bucket is located.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.ServiceRoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM service role for Systems Manager to assume when running a maintenance
            window task. If you do not specify a service role ARN, Systems Manager uses your account's
            service-linked role. If no service-linked role for Systems Manager exists in your
            account, it is created when you run <code>RegisterTaskWithMaintenanceWindow</code>.</para><para>For more information, see the following topics in the in the <i>AWS Systems Manager
            User Guide</i>:</para><ul><li><para><a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/using-service-linked-roles.html#slr-permissions">Using
            service-linked roles for Systems Manager</a></para></li><li><para><a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-maintenance-permissions.html#maintenance-window-tasks-service-role">Should
            I use a service-linked role or a custom service role to run maintenance window tasks?
            </a></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.RunCommand_ServiceRoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM service role to use to publish Amazon Simple Notification Service
            (Amazon SNS) notifications for maintenance window Run Command tasks.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.Target">
            <summary>
            <para>
            <para>The targets (either instances or maintenance window targets).</para><para>Specify instances using the following format: </para><para><code>Key=InstanceIds,Values=&lt;instance-id-1&gt;,&lt;instance-id-2&gt;</code></para><para>Specify maintenance window targets using the following format:</para><para><code>Key=WindowTargetIds;,Values=&lt;window-target-id-1&gt;,&lt;window-target-id-2&gt;</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.TaskArn">
            <summary>
            <para>
            <para>The ARN of the task to run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.TaskParameter">
            <summary>
            <para>
            <para>The parameters that should be passed to the task when it is run.</para><note><para><code>TaskParameters</code> has been deprecated. To specify parameters to pass to
            a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code>
            structure. For information about how Systems Manager handles these options for the
            supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.TaskType">
            <summary>
            <para>
            <para>The type of task being registered.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.RunCommand_TimeoutSecond">
            <summary>
            <para>
            <para>If this time is reached and the command has not already started running, it doesn't
            run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.WindowId">
            <summary>
            <para>
            <para>The ID of the maintenance window the task should be added to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.ClientToken">
            <summary>
            <para>
            <para>User-provided idempotency token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WindowTaskId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.RegisterTaskWithMaintenanceWindowResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.RegisterTaskWithMaintenanceWindowResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TaskArn parameter.
            The -PassThru parameter is deprecated, use -Select '^TaskArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RegisterSSMTaskWithMaintenanceWindowCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMActivationCmdlet">
            <summary>
            Deletes an activation. You are not required to delete an activation. If you delete
            an activation, you can no longer use it to register additional managed instances.
            Deleting an activation does not de-register managed instances. You must manually de-register
            managed instances.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMActivationCmdlet.ActivationId">
            <summary>
            <para>
            <para>The ID of the activation that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMActivationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DeleteActivationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMActivationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ActivationId parameter.
            The -PassThru parameter is deprecated, use -Select '^ActivationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMActivationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMAssociationCmdlet">
            <summary>
            Disassociates the specified Systems Manager document from the specified instance.
            
             
            <para>
            When you disassociate a document from an instance, it does not change the configuration
            of the instance. To change the configuration state of an instance after you disassociate
            a document, you must create a new document with the desired configuration and associate
            it with the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMAssociationCmdlet.AssociationId">
            <summary>
            <para>
            <para>The association ID that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMAssociationCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMAssociationCmdlet.Name">
            <summary>
            <para>
            <para>The name of the Systems Manager document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DeleteAssociationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMDocumentCmdlet">
            <summary>
            Deletes the Systems Manager document and all instance associations to the document.
            
             
            <para>
            Before you delete the document, we recommend that you use <a>DeleteAssociation</a>
            to disassociate all instances that are associated with the document.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMDocumentCmdlet.DocumentVersion">
            <summary>
            <para>
            <para>The version of the document that you want to delete. If not provided, all versions
            of the document are deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMDocumentCmdlet.Enforce">
            <summary>
            <para>
            <para>Some SSM document types require that you specify a <code>Force</code> flag before
            you can delete the document. For example, you must specify a <code>Force</code> flag
            to delete a document of type <code>ApplicationConfigurationSchema</code>. You can
            restrict access to the <code>Force</code> flag in an AWS Identity and Access Management
            (IAM) policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMDocumentCmdlet.Name">
            <summary>
            <para>
            <para>The name of the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMDocumentCmdlet.VersionName">
            <summary>
            <para>
            <para>The version name of the document that you want to delete. If not provided, all versions
            of the document are deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMDocumentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DeleteDocumentResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMDocumentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMDocumentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMInventoryCmdlet">
            <summary>
            Delete a custom inventory type, or the data associated with a custom Inventory type.
            Deleting a custom inventory type is also referred to as deleting a custom inventory
            schema.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMInventoryCmdlet.DryRun">
            <summary>
            <para>
            <para>Use this option to view a summary of the deletion request without deleting any data
            or the data type. This option is useful when you only want to understand what will
            be deleted. Once you validate that the data to be deleted is what you intend to delete,
            you can run the same command without specifying the <code>DryRun</code> option.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMInventoryCmdlet.SchemaDeleteOption">
            <summary>
            <para>
            <para>Use the <code>SchemaDeleteOption</code> to delete a custom inventory type (schema).
            If you don't choose this option, the system only deletes existing inventory data associated
            with the custom inventory type. Choose one of the following options:</para><para>DisableSchema: If you choose this option, the system ignores all inventory data for
            the specified version, and any earlier versions. To enable this schema again, you
            must call the <code>PutInventory</code> action for a version greater than the disabled
            version.</para><para>DeleteSchema: This option deletes the specified custom type from the Inventory service.
            You can recreate the schema later, if you want.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMInventoryCmdlet.TypeName">
            <summary>
            <para>
            <para>The name of the custom inventory type for which you want to delete either all previously
            collected data, or the inventory type itself. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMInventoryCmdlet.ClientToken">
            <summary>
            <para>
            <para>User-provided idempotency token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMInventoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DeleteInventoryResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DeleteInventoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMInventoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TypeName parameter.
            The -PassThru parameter is deprecated, use -Select '^TypeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMInventoryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMMaintenanceWindowCmdlet">
            <summary>
            Deletes a maintenance window.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMMaintenanceWindowCmdlet.WindowId">
            <summary>
            <para>
            <para>The ID of the maintenance window to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMMaintenanceWindowCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WindowId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DeleteMaintenanceWindowResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DeleteMaintenanceWindowResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMMaintenanceWindowCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WindowId parameter.
            The -PassThru parameter is deprecated, use -Select '^WindowId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMMaintenanceWindowCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMParameterCmdlet">
            <summary>
            Delete a parameter from the system.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMParameterCmdlet.Name">
            <summary>
            <para>
            <para>The name of the parameter to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DeleteParameterResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMParameterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMParameterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMParameterCollectionCmdlet">
            <summary>
            Delete a list of parameters.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMParameterCollectionCmdlet.Name">
            <summary>
            <para>
            <para>The names of the parameters to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMParameterCollectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DeleteParametersResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DeleteParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMParameterCollectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMParameterCollectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMPatchBaselineCmdlet">
            <summary>
            Deletes a patch baseline.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMPatchBaselineCmdlet.BaselineId">
            <summary>
            <para>
            <para>The ID of the patch baseline to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMPatchBaselineCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BaselineId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DeletePatchBaselineResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DeletePatchBaselineResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMPatchBaselineCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BaselineId parameter.
            The -PassThru parameter is deprecated, use -Select '^BaselineId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMPatchBaselineCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMResourceDataSyncCmdlet">
            <summary>
            Deletes a Resource Data Sync configuration. After the configuration is deleted, changes
            to data on managed instances are no longer synced to or from the target. Deleting
            a sync configuration does not delete data.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMResourceDataSyncCmdlet.SyncName">
            <summary>
            <para>
            <para>The name of the configuration to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMResourceDataSyncCmdlet.SyncType">
            <summary>
            <para>
            <para>Specify the type of resource data sync to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMResourceDataSyncCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DeleteResourceDataSyncResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMResourceDataSyncCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SyncName parameter.
            The -PassThru parameter is deprecated, use -Select '^SyncName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMResourceDataSyncCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMResourceTagCmdlet">
            <summary>
            Removes tag keys from the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMResourceTagCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of the resource from which you want to remove tags. For example:</para><para>ManagedInstance: mi-012345abcde</para><para>MaintenanceWindow: mw-012345abcde</para><para>PatchBaseline: pb-012345abcde</para><para>For the Document and Parameter values, use the name of the resource.</para><note><para>The ManagedInstance type for this API action is only for on-premises managed instances.
            Specify the name of the managed instance in the following format: mi-ID_number. For
            example, mi-1a2b3c4d5e6f.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMResourceTagCmdlet.ResourceType">
            <summary>
            <para>
            <para>The type of resource from which you want to remove a tag.</para><note><para>The ManagedInstance type for this API action is only for on-premises managed instances.
            Specify the name of the managed instance in the following format: mi-ID_number. For
            example, mi-1a2b3c4d5e6f.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>Tag keys that you want to remove from the specified resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.RemoveTagsFromResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.RemoveSSMResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.ResetSSMServiceSettingCmdlet">
            <summary>
            <code>ServiceSetting</code> is an account-level setting for an AWS service. This
            setting defines how a user interacts with or uses a service or a feature of a service.
            For example, if an AWS service charges money to the account based on feature or service
            usage, then the AWS service team might create a default setting of "false". This means
            the user can't use this feature unless they change the setting to "true" and intentionally
            opt in for a paid feature.
            
             
            <para>
            Services map a <code>SettingId</code> object to a setting value. AWS services teams
            define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>,
            but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code>
            permission for the setting. Use the <a>GetServiceSetting</a> API action to view the
            current value. Use the <a>UpdateServiceSetting</a> API action to change the default
            setting. 
            </para><para>
            Reset the service setting for the account to the default value as provisioned by the
            AWS service team. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.ResetSSMServiceSettingCmdlet.SettingId">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the service setting to reset. The setting ID can
            be <code>/ssm/parameter-store/default-parameter-tier</code>, <code>/ssm/parameter-store/high-throughput-enabled</code>,
            or <code>/ssm/managed-instance/activation-tier</code>. For example, <code>arn:aws:ssm:us-east-1:111122223333:servicesetting/ssm/parameter-store/high-throughput-enabled</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.ResetSSMServiceSettingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ServiceSetting'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.ResetServiceSettingResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.ResetServiceSettingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.ResetSSMServiceSettingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SettingId parameter.
            The -PassThru parameter is deprecated, use -Select '^SettingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.ResetSSMServiceSettingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.ResumeSSMSessionCmdlet">
            <summary>
            Reconnects a session to an instance after it has been disconnected. Connections can
            be resumed for disconnected sessions, but not terminated sessions.
            
             <note><para>
            This command is primarily for use by client machines to automatically reconnect during
            intermittent network issues. It is not intended for any other use.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.ResumeSSMSessionCmdlet.SessionId">
            <summary>
            <para>
            <para>The ID of the disconnected session to resume.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.ResumeSSMSessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.ResumeSessionResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.ResumeSessionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.ResumeSSMSessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SessionId parameter.
            The -PassThru parameter is deprecated, use -Select '^SessionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.ResumeSSMSessionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.SendSSMAutomationSignalCmdlet">
            <summary>
            Sends a signal to an Automation execution to change the current behavior or status
            of the execution.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMAutomationSignalCmdlet.AutomationExecutionId">
            <summary>
            <para>
            <para>The unique identifier for an existing Automation execution that you want to send the
            signal to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMAutomationSignalCmdlet.Payload">
            <summary>
            <para>
            <para>The data sent with the signal. The data schema depends on the type of signal used
            in the request.</para><para>For <code>Approve</code> and <code>Reject</code> signal types, the payload is an optional
            comment that you can send with the signal type. For example:</para><para><code>Comment="Looks good"</code></para><para>For <code>StartStep</code> and <code>Resume</code> signal types, you must send the
            name of the Automation step to start or resume as the payload. For example:</para><para><code>StepName="step1"</code></para><para>For the <code>StopStep</code> signal type, you must send the step execution ID as
            the payload. For example:</para><para><code>StepExecutionId="97fff367-fc5a-4299-aed8-0123456789ab"</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMAutomationSignalCmdlet.SignalType">
            <summary>
            <para>
            <para>The type of signal to send to an Automation execution. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMAutomationSignalCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.SendAutomationSignalResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMAutomationSignalCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutomationExecutionId parameter.
            The -PassThru parameter is deprecated, use -Select '^AutomationExecutionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMAutomationSignalCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet">
            <summary>
            Runs commands on one or more managed instances.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.CloudWatchOutputConfig_CloudWatchLogGroupName">
            <summary>
            <para>
            <para>The name of the CloudWatch log group where you want to send command output. If you
            don't specify a group name, Systems Manager automatically creates a log group for
            you. The log group uses the following naming format: aws/ssm/<i>SystemsManagerDocumentName</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.CloudWatchOutputConfig_CloudWatchOutputEnabled">
            <summary>
            <para>
            <para>Enables Systems Manager to send command output to CloudWatch Logs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.Comment">
            <summary>
            <para>
            <para>User-specified information about the command, such as a brief description of what
            the command should do.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.DocumentHash">
            <summary>
            <para>
            <para>The Sha256 or Sha1 hash created by the system when the document was created. </para><note><para>Sha1 hashes have been deprecated.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.DocumentHashType">
            <summary>
            <para>
            <para>Sha256 or Sha1.</para><note><para>Sha1 hashes have been deprecated.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.DocumentName">
            <summary>
            <para>
            <para>Required. The name of the Systems Manager document to run. This can be a public document
            or a custom document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.DocumentVersion">
            <summary>
            <para>
            <para>The SSM document version to use in the request. You can specify $DEFAULT, $LATEST,
            or a specific version number. If you run commands by using the AWS CLI, then you must
            escape the first two options by using a backslash. If you specify a version number,
            then you don't need to use the backslash. For example:</para><para>--document-version "\$DEFAULT"</para><para>--document-version "\$LATEST"</para><para>--document-version "3"</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.InstanceId">
            <summary>
            <para>
            <para>The instance IDs where the command should run. You can specify a maximum of 50 IDs.
            If you prefer not to list individual instance IDs, you can instead send commands to
            a fleet of instances using the Targets parameter, which accepts EC2 tags. For more
            information about how to use targets, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html">Using
            targets and rate controls to send commands to a fleet</a> in the <i>AWS Systems Manager
            User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.MaxConcurrency">
            <summary>
            <para>
            <para>(Optional) The maximum number of instances that are allowed to run the command at
            the same time. You can specify a number such as 10 or a percentage such as 10%. The
            default value is 50. For more information about how to use MaxConcurrency, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-velocity">Using
            concurrency controls</a> in the <i>AWS Systems Manager User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.MaxError">
            <summary>
            <para>
            <para>The maximum number of errors allowed without the command failing. When the command
            fails one more time beyond the value of MaxErrors, the systems stops sending the command
            to additional targets. You can specify a number like 10 or a percentage like 10%.
            The default value is 0. For more information about how to use MaxErrors, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-maxerrors">Using
            error controls</a> in the <i>AWS Systems Manager User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.NotificationConfig_NotificationArn">
            <summary>
            <para>
            <para>An Amazon Resource Name (ARN) for an Amazon Simple Notification Service (Amazon SNS)
            topic. Run Command pushes notifications about command status changes to this topic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.NotificationConfig_NotificationEvent">
            <summary>
            <para>
            <para>The different events for which you can receive notifications. These events include
            the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To
            learn more about these events, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/monitoring-sns-notifications.html">Monitoring
            Systems Manager status changes using Amazon SNS notifications</a> in the <i>AWS Systems
            Manager User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.NotificationConfig_NotificationType">
            <summary>
            <para>
            <para>Command: Receive notification when the status of a command changes. Invocation: For
            commands sent to multiple instances, receive notification on a per-instance basis
            when the status of a command changes. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.OutputS3BucketName">
            <summary>
            <para>
            <para>The name of the S3 bucket where command execution responses should be stored.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.OutputS3KeyPrefix">
            <summary>
            <para>
            <para>The directory structure within the S3 bucket where the responses should be stored.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.OutputS3Region">
            <summary>
            <para>
            <para>(Deprecated) You can no longer specify this parameter. The system ignores it. Instead,
            Systems Manager automatically determines the Region of the S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.Parameter">
            <summary>
            <para>
            <para>The required and optional parameters specified in the document being run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.ServiceRoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM service role to use to publish Amazon Simple Notification Service
            (Amazon SNS) notifications for Run Command commands.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.Target">
            <summary>
            <para>
            <para>(Optional) An array of search criteria that targets instances using a Key,Value combination
            that you specify. Targets is required if you don't provide one or more instance IDs
            in the call. For more information about how to use targets, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html">Sending
            commands to a fleet</a> in the <i>AWS Systems Manager User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.TimeoutSecond">
            <summary>
            <para>
            <para>If this time is reached and the command has not already started running, it will not
            run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Command'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.SendCommandResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.SendCommandResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SendSSMCommandCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.SetSSMParameterVersionLabelCmdlet">
            <summary>
            A parameter label is a user-defined alias to help you manage different versions of
            a parameter. When you modify a parameter, Systems Manager automatically saves a new
            version and increments the version number by one. A label can help you remember the
            purpose of a parameter when there are multiple versions. 
            
             
            <para>
            Parameter labels have the following requirements and restrictions.
            </para><ul><li><para>
            A version of a parameter can have a maximum of 10 labels.
            </para></li><li><para>
            You can't attach the same label to different versions of the same parameter. For example,
            if version 1 has the label Production, then you can't attach Production to version
            2.
            </para></li><li><para>
            You can move a label from one version of a parameter to another.
            </para></li><li><para>
            You can't create a label when you create a new parameter. You must attach a label
            to a specific version of a parameter.
            </para></li><li><para>
            You can't delete a parameter label. If you no longer want to use a parameter label,
            then you must move it to a different version of a parameter.
            </para></li><li><para>
            A label can have a maximum of 100 characters.
            </para></li><li><para>
            Labels can contain letters (case sensitive), numbers, periods (.), hyphens (-), or
            underscores (_).
            </para></li><li><para>
            Labels can't begin with a number, "aws," or "ssm" (not case sensitive). If a label
            fails to meet these requirements, then the label is not associated with a parameter
            and the system displays it in the list of InvalidLabels.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SetSSMParameterVersionLabelCmdlet.Label">
            <summary>
            <para>
            <para>One or more labels to attach to the specified parameter version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SetSSMParameterVersionLabelCmdlet.Name">
            <summary>
            <para>
            <para>The parameter name on which you want to attach one or more labels.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SetSSMParameterVersionLabelCmdlet.ParameterVersion">
            <summary>
            <para>
            <para>The specific version of the parameter on which you want to attach one or more labels.
            If no version is specified, the system attaches the label to the latest version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SetSSMParameterVersionLabelCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InvalidLabels'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.LabelParameterVersionResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.LabelParameterVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SetSSMParameterVersionLabelCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.SetSSMParameterVersionLabelCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.StartSSMAssociationsOnceCmdlet">
            <summary>
            Use this API action to run an association immediately and only one time. This action
            can be helpful when troubleshooting associations.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMAssociationsOnceCmdlet.AssociationId">
            <summary>
            <para>
            <para>The association IDs that you want to run immediately and only one time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMAssociationsOnceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.StartAssociationsOnceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMAssociationsOnceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssociationId parameter.
            The -PassThru parameter is deprecated, use -Select '^AssociationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMAssociationsOnceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.StartSSMAutomationExecutionCmdlet">
            <summary>
            Initiates execution of an Automation document.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMAutomationExecutionCmdlet.DocumentName">
            <summary>
            <para>
            <para>The name of the Automation document to use for this execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMAutomationExecutionCmdlet.DocumentVersion">
            <summary>
            <para>
            <para>The version of the Automation document to use for this execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMAutomationExecutionCmdlet.MaxConcurrency">
            <summary>
            <para>
            <para>The maximum number of targets allowed to run this task in parallel. You can specify
            a number, such as 10, or a percentage, such as 10%. The default value is 10.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMAutomationExecutionCmdlet.MaxError">
            <summary>
            <para>
            <para>The number of errors that are allowed before the system stops running the automation
            on additional targets. You can specify either an absolute number of errors, for example
            10, or a percentage of the target set, for example 10%. If you specify 3, for example,
            the system stops running the automation when the fourth error is received. If you
            specify 0, then the system stops running the automation on additional targets after
            the first error result is returned. If you run an automation on 50 resources and set
            max-errors to 10%, then the system stops running the automation on additional targets
            when the sixth error is received.</para><para>Executions that are already running an automation when max-errors is reached are allowed
            to complete, but some of these executions may fail as well. If you need to ensure
            that there won't be more than max-errors failed executions, set max-concurrency to
            1 so the executions proceed one at a time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMAutomationExecutionCmdlet.Mode">
            <summary>
            <para>
            <para>The execution mode of the automation. Valid modes include the following: Auto and
            Interactive. The default mode is Auto.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMAutomationExecutionCmdlet.Parameter">
            <summary>
            <para>
            <para>A key-value map of execution parameters, which match the declared parameters in the
            Automation document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMAutomationExecutionCmdlet.Tag">
            <summary>
            <para>
            <para>Optional metadata that you assign to a resource. You can specify a maximum of five
            tags for an automation. Tags enable you to categorize a resource in different ways,
            such as by purpose, owner, or environment. For example, you might want to tag an automation
            to identify an environment or operating system. In this case, you could specify the
            following key name/value pairs:</para><ul><li><para><code>Key=environment,Value=test</code></para></li><li><para><code>Key=OS,Value=Windows</code></para></li></ul><note><para>To add tags to an existing patch baseline, use the <a>AddTagsToResource</a> action.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMAutomationExecutionCmdlet.TargetLocation">
            <summary>
            <para>
            <para>A location is a combination of AWS Regions and/or AWS accounts where you want to run
            the Automation. Use this action to start an Automation in multiple Regions and multiple
            accounts. For more information, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-automation-multiple-accounts-and-regions.html">Running
            Automation workflows in multiple AWS Regions and accounts</a> in the <i>AWS Systems
            Manager User Guide</i>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMAutomationExecutionCmdlet.TargetMap">
            <summary>
            <para>
            <para>A key-value mapping of document parameters to target resources. Both Targets and TargetMaps
            cannot be specified together.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMAutomationExecutionCmdlet.TargetParameterName">
            <summary>
            <para>
            <para>The name of the parameter used as the target resource for the rate-controlled execution.
            Required if you specify targets.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMAutomationExecutionCmdlet.Target">
            <summary>
            <para>
            <para>A key-value mapping to target resources. Required if you specify TargetParameterName.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMAutomationExecutionCmdlet.ClientToken">
            <summary>
            <para>
            <para>User-provided idempotency token. The token must be unique, is case insensitive, enforces
            the UUID format, and can't be reused.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMAutomationExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AutomationExecutionId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.StartAutomationExecutionResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.StartAutomationExecutionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMAutomationExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DocumentName parameter.
            The -PassThru parameter is deprecated, use -Select '^DocumentName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMAutomationExecutionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.StartSSMSessionCmdlet">
            <summary>
            Initiates a connection to a target (for example, an instance) for a Session Manager
            session. Returns a URL and token that can be used to open a WebSocket connection for
            sending input and receiving outputs.
            
             <note><para>
            AWS CLI usage: <code>start-session</code> is an interactive command that requires
            the Session Manager plugin to be installed on the client machine making the call.
            For information, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html">Install
            the Session Manager plugin for the AWS CLI</a> in the <i>AWS Systems Manager User
            Guide</i>.
            </para><para>
            AWS Tools for PowerShell usage: Start-SSMSession is not currently supported by AWS
            Tools for PowerShell on Windows local machines.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMSessionCmdlet.DocumentName">
            <summary>
            <para>
            <para>The name of the SSM document to define the parameters and plugin settings for the
            session. For example, <code>SSM-SessionManagerRunShell</code>. If no document name
            is provided, a shell to the instance is launched by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMSessionCmdlet.Parameter">
            <summary>
            <para>
            <para>Reserved for future use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMSessionCmdlet.Target">
            <summary>
            <para>
            <para>The instance to connect to for the session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMSessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.StartSessionResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.StartSessionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMSessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DocumentName parameter.
            The -PassThru parameter is deprecated, use -Select '^DocumentName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StartSSMSessionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.StopSSMAutomationExecutionCmdlet">
            <summary>
            Stop an Automation that is currently running.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StopSSMAutomationExecutionCmdlet.AutomationExecutionId">
            <summary>
            <para>
            <para>The execution ID of the Automation to stop.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StopSSMAutomationExecutionCmdlet.Type">
            <summary>
            <para>
            <para>The stop request type. Valid types include the following: Cancel and Complete. The
            default type is Cancel.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StopSSMAutomationExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.StopAutomationExecutionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StopSSMAutomationExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutomationExecutionId parameter.
            The -PassThru parameter is deprecated, use -Select '^AutomationExecutionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StopSSMAutomationExecutionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.StopSSMCommandCmdlet">
            <summary>
            Attempts to cancel the command specified by the Command ID. There is no guarantee
            that the command will be terminated and the underlying process stopped.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StopSSMCommandCmdlet.CommandId">
            <summary>
            <para>
            <para>The ID of the command you want to cancel.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StopSSMCommandCmdlet.InstanceId">
            <summary>
            <para>
            <para>(Optional) A list of instance IDs on which you want to cancel the command. If not
            provided, the command is canceled on every instance on which it was requested.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StopSSMCommandCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.CancelCommandResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StopSSMCommandCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StopSSMCommandCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.StopSSMMaintenanceWindowExecutionCmdlet">
            <summary>
            Stops a maintenance window execution that is already in progress and cancels any tasks
            in the window that have not already starting running. (Tasks already in progress will
            continue to completion.)
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StopSSMMaintenanceWindowExecutionCmdlet.WindowExecutionId">
            <summary>
            <para>
            <para>The ID of the maintenance window execution to stop.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StopSSMMaintenanceWindowExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WindowExecutionId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.CancelMaintenanceWindowExecutionResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.CancelMaintenanceWindowExecutionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StopSSMMaintenanceWindowExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WindowExecutionId parameter.
            The -PassThru parameter is deprecated, use -Select '^WindowExecutionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StopSSMMaintenanceWindowExecutionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.StopSSMSessionCmdlet">
            <summary>
            Permanently ends a session and closes the data connection between the Session Manager
            client and SSM Agent on the instance. A terminated session cannot be resumed.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StopSSMSessionCmdlet.SessionId">
            <summary>
            <para>
            <para>The ID of the session to terminate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StopSSMSessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SessionId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.TerminateSessionResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.TerminateSessionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StopSSMSessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SessionId parameter.
            The -PassThru parameter is deprecated, use -Select '^SessionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.StopSSMSessionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMManagedInstanceCmdlet">
            <summary>
            Removes the server or virtual machine from the list of registered servers. You can
            reregister the instance again at any time. If you don't plan to use Run Command on
            the server, we suggest uninstalling SSM Agent first.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMManagedInstanceCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID assigned to the managed instance when you registered it using the activation
            process. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMManagedInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DeregisterManagedInstanceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMManagedInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMManagedInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMPatchBaselineForPatchGroupCmdlet">
            <summary>
            Removes a patch group from a patch baseline.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMPatchBaselineForPatchGroupCmdlet.BaselineId">
            <summary>
            <para>
            <para>The ID of the patch baseline to deregister the patch group from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMPatchBaselineForPatchGroupCmdlet.PatchGroup">
            <summary>
            <para>
            <para>The name of the patch group that should be deregistered from the patch baseline.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMPatchBaselineForPatchGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DeregisterPatchBaselineForPatchGroupResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DeregisterPatchBaselineForPatchGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMPatchBaselineForPatchGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PatchGroup parameter.
            The -PassThru parameter is deprecated, use -Select '^PatchGroup' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMPatchBaselineForPatchGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMTargetFromMaintenanceWindowCmdlet">
            <summary>
            Removes a target from a maintenance window.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMTargetFromMaintenanceWindowCmdlet.Safe">
            <summary>
            <para>
            <para>The system checks if the target is being referenced by a task. If the target is being
            referenced, the system returns an error and does not deregister the target from the
            maintenance window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMTargetFromMaintenanceWindowCmdlet.WindowId">
            <summary>
            <para>
            <para>The ID of the maintenance window the target should be removed from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMTargetFromMaintenanceWindowCmdlet.WindowTargetId">
            <summary>
            <para>
            <para>The ID of the target definition to remove.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMTargetFromMaintenanceWindowCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DeregisterTargetFromMaintenanceWindowResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DeregisterTargetFromMaintenanceWindowResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMTargetFromMaintenanceWindowCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WindowTargetId parameter.
            The -PassThru parameter is deprecated, use -Select '^WindowTargetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMTargetFromMaintenanceWindowCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMTaskFromMaintenanceWindowCmdlet">
            <summary>
            Removes a task from a maintenance window.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMTaskFromMaintenanceWindowCmdlet.WindowId">
            <summary>
            <para>
            <para>The ID of the maintenance window the task should be removed from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMTaskFromMaintenanceWindowCmdlet.WindowTaskId">
            <summary>
            <para>
            <para>The ID of the task to remove from the maintenance window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMTaskFromMaintenanceWindowCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.DeregisterTaskFromMaintenanceWindowResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.DeregisterTaskFromMaintenanceWindowResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMTaskFromMaintenanceWindowCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WindowTaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^WindowTaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UnregisterSSMTaskFromMaintenanceWindowCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet">
            <summary>
            Updates an association. You can update the association name and version, the document
            version, schedule, parameters, and Amazon S3 output. 
            
             
            <para>
            In order to call this API action, your IAM user account, group, or role must be configured
            with permission to call the <a>DescribeAssociation</a> API action. If you don't have
            permission to call DescribeAssociation, then you receive the following error: <code>An
            error occurred (AccessDeniedException) when calling the UpdateAssociation operation:
            User: &lt;user_arn&gt; is not authorized to perform: ssm:DescribeAssociation on resource:
            &lt;resource_arn&gt;</code></para><important><para>
            When you update an association, the association immediately runs against the specified
            targets.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet.ApplyOnlyAtCronInterval">
            <summary>
            <para>
            <para>By default, when you update an association, the system runs it immediately after it
            is updated and then according to the schedule you specified. Specify this option if
            you don't want an association to run immediately after you update it.</para><para>Also, if you specified this option when you created the association, you can reset
            it. To do so, specify the <code>no-apply-only-at-cron-interval</code> parameter when
            you update the association from the command line. This parameter forces the association
            to run immediately after updating it and according to the interval specified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet.AssociationId">
            <summary>
            <para>
            <para>The ID of the association you want to update. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet.AssociationName">
            <summary>
            <para>
            <para>The name of the association that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet.AssociationVersion">
            <summary>
            <para>
            <para>This parameter is provided for concurrency control purposes. You must specify the
            latest association version in the service. If you want to ensure that this request
            succeeds, either specify <code>$LATEST</code>, or omit this parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet.AutomationTargetParameterName">
            <summary>
            <para>
            <para>Specify the target for the association. This target is required for associations that
            use an Automation document and target resources by using rate controls.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet.ComplianceSeverity">
            <summary>
            <para>
            <para>The severity level to assign to the association.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet.DocumentVersion">
            <summary>
            <para>
            <para>The document version you want update for the association. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet.MaxConcurrency">
            <summary>
            <para>
            <para>The maximum number of targets allowed to run the association at the same time. You
            can specify a number, for example 10, or a percentage of the target set, for example
            10%. The default value is 100%, which means all targets run the association at the
            same time.</para><para>If a new instance starts and attempts to run an association while Systems Manager
            is running MaxConcurrency associations, the association is allowed to run. During
            the next association interval, the new instance will process its association within
            the limit specified for MaxConcurrency.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet.MaxError">
            <summary>
            <para>
            <para>The number of errors that are allowed before the system stops sending requests to
            run the association on additional targets. You can specify either an absolute number
            of errors, for example 10, or a percentage of the target set, for example 10%. If
            you specify 3, for example, the system stops sending requests when the fourth error
            is received. If you specify 0, then the system stops sending requests after the first
            error is returned. If you run an association on 50 instances and set MaxError to 10%,
            then the system stops sending the request when the sixth error is received.</para><para>Executions that are already running an association when MaxErrors is reached are allowed
            to complete, but some of these executions may fail as well. If you need to ensure
            that there won't be more than max-errors failed executions, set MaxConcurrency to
            1 so that executions proceed one at a time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet.Name">
            <summary>
            <para>
            <para>The name of the SSM document that contains the configuration information for the instance.
            You can specify Command or Automation documents.</para><para>You can specify AWS-predefined documents, documents you created, or a document that
            is shared with you from another account.</para><para>For SSM documents that are shared with you from other AWS accounts, you must specify
            the complete SSM document ARN, in the following format:</para><para><code>arn:aws:ssm:<i>region</i>:<i>account-id</i>:document/<i>document-name</i></code></para><para>For example:</para><para><code>arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document</code></para><para>For AWS-predefined documents and SSM documents you created in your account, you only
            need to specify the document name. For example, <code>AWS-ApplyPatchBaseline</code>
            or <code>My-Document</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet.S3Location_OutputS3BucketName">
            <summary>
            <para>
            <para>The name of the S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet.S3Location_OutputS3KeyPrefix">
            <summary>
            <para>
            <para>The S3 bucket subfolder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet.S3Location_OutputS3Region">
            <summary>
            <para>
            <para>(Deprecated) You can no longer specify this parameter. The system ignores it. Instead,
            Systems Manager automatically determines the Region of the S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet.Parameter">
            <summary>
            <para>
            <para>The parameters you want to update for the association. If you create a parameter using
            Parameter Store, you can reference the parameter using {{ssm:parameter-name}}</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet.ScheduleExpression">
            <summary>
            <para>
            <para>The cron expression used to schedule the association that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet.SyncCompliance">
            <summary>
            <para>
            <para>The mode for generating association compliance. You can specify <code>AUTO</code>
            or <code>MANUAL</code>. In <code>AUTO</code> mode, the system uses the status of the
            association execution to determine the compliance status. If the association execution
            runs successfully, then the association is <code>COMPLIANT</code>. If the association
            execution doesn't run successfully, the association is <code>NON-COMPLIANT</code>.</para><para>In <code>MANUAL</code> mode, you must specify the <code>AssociationId</code> as a
            parameter for the <a>PutComplianceItems</a> API action. In this case, compliance data
            is not managed by State Manager. It is managed by your direct call to the <a>PutComplianceItems</a>
            API action.</para><para>By default, all associations use <code>AUTO</code> mode.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet.Target">
            <summary>
            <para>
            <para>The targets of the association.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AssociationDescription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.UpdateAssociationResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.UpdateAssociationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssociationId parameter.
            The -PassThru parameter is deprecated, use -Select '^AssociationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationStatusCmdlet">
            <summary>
            Updates the status of the Systems Manager document associated with the specified instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationStatusCmdlet.AssociationStatus_AdditionalInfo">
            <summary>
            <para>
            <para>A user-defined string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationStatusCmdlet.AssociationStatus_Date">
            <summary>
            <para>
            <para>The date when the status changed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationStatusCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationStatusCmdlet.AssociationStatus_Message">
            <summary>
            <para>
            <para>The reason for the status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationStatusCmdlet.AssociationStatus_Name">
            <summary>
            <para>
            <para>The status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationStatusCmdlet.Name">
            <summary>
            <para>
            <para>The name of the Systems Manager document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AssociationDescription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.UpdateAssociationStatusResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.UpdateAssociationStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMAssociationStatusCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMDocumentCmdlet">
            <summary>
            Updates one or more values for an SSM document.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMDocumentCmdlet.Attachment">
            <summary>
            <para>
            <para>A list of key and value pairs that describe attachments to a version of a document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMDocumentCmdlet.Content">
            <summary>
            <para>
            <para>A valid JSON or YAML string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMDocumentCmdlet.DocumentFormat">
            <summary>
            <para>
            <para>Specify the document format for the new document version. Systems Manager supports
            JSON and YAML documents. JSON is the default format.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMDocumentCmdlet.DocumentVersion">
            <summary>
            <para>
            <para>(Required) The latest version of the document that you want to update. The latest
            document version can be specified using the $LATEST variable or by the version number.
            Updating a previous version of a document is not supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMDocumentCmdlet.Name">
            <summary>
            <para>
            <para>The name of the document that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMDocumentCmdlet.TargetType">
            <summary>
            <para>
            <para>Specify a new target type for the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMDocumentCmdlet.VersionName">
            <summary>
            <para>
            <para>An optional field specifying the version of the artifact you are updating with the
            document. For example, "Release 12, Update 6". This value is unique across all versions
            of a document, and cannot be changed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMDocumentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DocumentDescription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.UpdateDocumentResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.UpdateDocumentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMDocumentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Content parameter.
            The -PassThru parameter is deprecated, use -Select '^Content' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMDocumentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMDocumentDefaultVersionCmdlet">
            <summary>
            Set the default version of a document.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMDocumentDefaultVersionCmdlet.DocumentVersion">
            <summary>
            <para>
            <para>The version of a custom document that you want to set as the default version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMDocumentDefaultVersionCmdlet.Name">
            <summary>
            <para>
            <para>The name of a custom document that you want to set as the default version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMDocumentDefaultVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Description'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.UpdateDocumentDefaultVersionResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.UpdateDocumentDefaultVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMDocumentDefaultVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMDocumentDefaultVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowCmdlet">
            <summary>
            Updates an existing maintenance window. Only specified parameters are modified.
            
             <note><para>
            The value you specify for <code>Duration</code> determines the specific end time for
            the maintenance window based on the time it begins. No maintenance window tasks are
            permitted to start after the resulting endtime minus the number of hours you specify
            for <code>Cutoff</code>. For example, if the maintenance window starts at 3 PM, the
            duration is three hours, and the value you specify for <code>Cutoff</code> is one
            hour, no maintenance window tasks can start after 5 PM.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowCmdlet.AllowUnassociatedTarget">
            <summary>
            <para>
            <para>Whether targets must be registered with the maintenance window before tasks can be
            defined for those targets.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowCmdlet.Cutoff">
            <summary>
            <para>
            <para>The number of hours before the end of the maintenance window that Systems Manager
            stops scheduling new tasks for execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowCmdlet.Description">
            <summary>
            <para>
            <para>An optional description for the update request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowCmdlet.Duration">
            <summary>
            <para>
            <para>The duration of the maintenance window in hours.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowCmdlet.Enabled">
            <summary>
            <para>
            <para>Whether the maintenance window is enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowCmdlet.EndDate">
            <summary>
            <para>
            <para>The date and time, in ISO-8601 Extended format, for when you want the maintenance
            window to become inactive. EndDate allows you to set a date and time in the future
            when the maintenance window will no longer run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowCmdlet.Name">
            <summary>
            <para>
            <para>The name of the maintenance window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowCmdlet.Replace">
            <summary>
            <para>
            <para>If True, then all fields that are required by the CreateMaintenanceWindow action are
            also required for this API request. Optional fields that are not specified are set
            to null. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowCmdlet.Schedule">
            <summary>
            <para>
            <para>The schedule of the maintenance window in the form of a cron or rate expression.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowCmdlet.ScheduleTimezone">
            <summary>
            <para>
            <para>The time zone that the scheduled maintenance window executions are based on, in Internet
            Assigned Numbers Authority (IANA) format. For example: "America/Los_Angeles", "etc/UTC",
            or "Asia/Seoul". For more information, see the <a href="https://www.iana.org/time-zones">Time
            Zone Database</a> on the IANA website.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowCmdlet.StartDate">
            <summary>
            <para>
            <para>The time zone that the scheduled maintenance window executions are based on, in Internet
            Assigned Numbers Authority (IANA) format. For example: "America/Los_Angeles", "etc/UTC",
            or "Asia/Seoul". For more information, see the <a href="https://www.iana.org/time-zones">Time
            Zone Database</a> on the IANA website.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowCmdlet.WindowId">
            <summary>
            <para>
            <para>The ID of the maintenance window to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.UpdateMaintenanceWindowResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.UpdateMaintenanceWindowResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WindowId parameter.
            The -PassThru parameter is deprecated, use -Select '^WindowId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTargetCmdlet">
            <summary>
            Modifies the target of an existing maintenance window. You can change the following:
            
             <ul><li><para>
            Name
            </para></li><li><para>
            Description
            </para></li><li><para>
            Owner
            </para></li><li><para>
            IDs for an ID target
            </para></li><li><para>
            Tags for a Tag target
            </para></li><li><para>
            From any supported tag type to another. The three supported tag types are ID target,
            Tag target, and resource group. For more information, see <a>Target</a>.
            </para></li></ul><note><para>
            If a parameter is null, then the corresponding field is not modified.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTargetCmdlet.Description">
            <summary>
            <para>
            <para>An optional description for the update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTargetCmdlet.Name">
            <summary>
            <para>
            <para>A name for the update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTargetCmdlet.OwnerInformation">
            <summary>
            <para>
            <para>User-provided value that will be included in any CloudWatch events raised while running
            tasks for these targets in this maintenance window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTargetCmdlet.Replace">
            <summary>
            <para>
            <para>If True, then all fields that are required by the RegisterTargetWithMaintenanceWindow
            action are also required for this API request. Optional fields that are not specified
            are set to null.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTargetCmdlet.Target">
            <summary>
            <para>
            <para>The targets to add or replace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTargetCmdlet.WindowId">
            <summary>
            <para>
            <para>The maintenance window ID with which to modify the target.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTargetCmdlet.WindowTargetId">
            <summary>
            <para>
            <para>The target ID to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.UpdateMaintenanceWindowTargetResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.UpdateMaintenanceWindowTargetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTargetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WindowTargetId parameter.
            The -PassThru parameter is deprecated, use -Select '^WindowTargetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTargetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet">
            <summary>
            Modifies a task assigned to a maintenance window. You can't change the task type,
            but you can change the following values:
            
             <ul><li><para>
            TaskARN. For example, you can change a RUN_COMMAND task from AWS-RunPowerShellScript
            to AWS-RunShellScript.
            </para></li><li><para>
            ServiceRoleArn
            </para></li><li><para>
            TaskInvocationParameters
            </para></li><li><para>
            Priority
            </para></li><li><para>
            MaxConcurrency
            </para></li><li><para>
            MaxErrors
            </para></li></ul><para>
            If a parameter is null, then the corresponding field is not modified. Also, if you
            set Replace to true, then all fields required by the <a>RegisterTaskWithMaintenanceWindow</a>
            action are required for this request. Optional fields that aren't specified are set
            to null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.Lambda_ClientContext">
            <summary>
            <para>
            <para>Pass client-specific information to the Lambda function that you are invoking. You
            can then process the client information in your Lambda function as you choose through
            the context variable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.CloudWatchOutputConfig_CloudWatchLogGroupName">
            <summary>
            <para>
            <para>The name of the CloudWatch log group where you want to send command output. If you
            don't specify a group name, Systems Manager automatically creates a log group for
            you. The log group uses the following naming format: aws/ssm/<i>SystemsManagerDocumentName</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.CloudWatchOutputConfig_CloudWatchOutputEnabled">
            <summary>
            <para>
            <para>Enables Systems Manager to send command output to CloudWatch Logs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.RunCommand_Comment">
            <summary>
            <para>
            <para>Information about the commands to run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.Description">
            <summary>
            <para>
            <para>The new task description to specify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.RunCommand_DocumentHash">
            <summary>
            <para>
            <para>The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1
            hashes have been deprecated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.RunCommand_DocumentHashType">
            <summary>
            <para>
            <para>SHA-256 or SHA-1. SHA-1 hashes have been deprecated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.Automation_DocumentVersion">
            <summary>
            <para>
            <para>The version of an Automation document to use during task execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.RunCommand_DocumentVersion">
            <summary>
            <para>
            <para>The SSM document version to use in the request. You can specify $DEFAULT, $LATEST,
            or a specific version number. If you run commands by using the AWS CLI, then you must
            escape the first two options by using a backslash. If you specify a version number,
            then you don't need to use the backslash. For example:</para><para>--document-version "\$DEFAULT"</para><para>--document-version "\$LATEST"</para><para>--document-version "3"</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.StepFunctions_Input">
            <summary>
            <para>
            <para>The inputs for the STEP_FUNCTIONS task.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.MaxConcurrency">
            <summary>
            <para>
            <para>The new <code>MaxConcurrency</code> value you want to specify. <code>MaxConcurrency</code>
            is the number of targets that are allowed to run this task in parallel.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.MaxError">
            <summary>
            <para>
            <para>The new <code>MaxErrors</code> value to specify. <code>MaxErrors</code> is the maximum
            number of errors that are allowed before the task stops being scheduled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.Name">
            <summary>
            <para>
            <para>The new task name to specify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.StepFunctions_Name">
            <summary>
            <para>
            <para>The name of the STEP_FUNCTIONS task.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.NotificationConfig_NotificationArn">
            <summary>
            <para>
            <para>An Amazon Resource Name (ARN) for an Amazon Simple Notification Service (Amazon SNS)
            topic. Run Command pushes notifications about command status changes to this topic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.NotificationConfig_NotificationEvent">
            <summary>
            <para>
            <para>The different events for which you can receive notifications. These events include
            the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To
            learn more about these events, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/monitoring-sns-notifications.html">Monitoring
            Systems Manager status changes using Amazon SNS notifications</a> in the <i>AWS Systems
            Manager User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.NotificationConfig_NotificationType">
            <summary>
            <para>
            <para>Command: Receive notification when the status of a command changes. Invocation: For
            commands sent to multiple instances, receive notification on a per-instance basis
            when the status of a command changes. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.RunCommand_OutputS3BucketName">
            <summary>
            <para>
            <para>The name of the S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.RunCommand_OutputS3KeyPrefix">
            <summary>
            <para>
            <para>The S3 bucket subfolder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.Automation_Parameter">
            <summary>
            <para>
            <para>The parameters for the AUTOMATION task.</para><para>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a>
            and <a>UpdateMaintenanceWindowTask</a>.</para><note><para><code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain
            logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code>
            options in the <code>TaskInvocationParameters</code> structure. For information about
            how Systems Manager handles these options for the supported maintenance window task
            types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</para><para><code>TaskParameters</code> has been deprecated. To specify parameters to pass to
            a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code>
            structure. For information about how Systems Manager handles these options for the
            supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</para><para>For AUTOMATION task types, Systems Manager ignores any values specified for these
            parameters.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.RunCommand_Parameter">
            <summary>
            <para>
            <para>The parameters for the RUN_COMMAND task execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.Lambda_Payload">
            <summary>
            <para>
            <para>JSON to provide to your Lambda function as input.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.Priority">
            <summary>
            <para>
            <para>The new task priority to specify. The lower the number, the higher the priority. Tasks
            that have the same priority are scheduled in parallel.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.Lambda_Qualifier">
            <summary>
            <para>
            <para>(Optional) Specify a Lambda function version or alias name. If you specify a function
            version, the action uses the qualified function ARN to invoke a specific Lambda function.
            If you specify an alias name, the action uses the alias ARN to invoke the Lambda function
            version to which the alias points.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.Replace">
            <summary>
            <para>
            <para>If True, then all fields that are required by the RegisterTaskWithMaintenanceWndow
            action are also required for this API request. Optional fields that are not specified
            are set to null.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.LoggingInfo_S3BucketName">
            <summary>
            <para>
            <para>The name of an S3 bucket where execution logs are stored .</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.LoggingInfo_S3KeyPrefix">
            <summary>
            <para>
            <para>(Optional) The S3 bucket subfolder. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.LoggingInfo_S3Region">
            <summary>
            <para>
            <para>The Region where the S3 bucket is located.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.ServiceRoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM service role for Systems Manager to assume when running a maintenance
            window task. If you do not specify a service role ARN, Systems Manager uses your account's
            service-linked role. If no service-linked role for Systems Manager exists in your
            account, it is created when you run <code>RegisterTaskWithMaintenanceWindow</code>.</para><para>For more information, see the following topics in the in the <i>AWS Systems Manager
            User Guide</i>:</para><ul><li><para><a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/using-service-linked-roles.html#slr-permissions">Using
            service-linked roles for Systems Manager</a></para></li><li><para><a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-maintenance-permissions.html#maintenance-window-tasks-service-role">Should
            I use a service-linked role or a custom service role to run maintenance window tasks?
            </a></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.RunCommand_ServiceRoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM service role to use to publish Amazon Simple Notification Service
            (Amazon SNS) notifications for maintenance window Run Command tasks.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.Target">
            <summary>
            <para>
            <para>The targets (either instances or tags) to modify. Instances are specified using Key=instanceids,Values=instanceID_1,instanceID_2.
            Tags are specified using Key=tag_name,Values=tag_value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.TaskArn">
            <summary>
            <para>
            <para>The task ARN to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.TaskParameter">
            <summary>
            <para>
            <para>The parameters to modify.</para><note><para><code>TaskParameters</code> has been deprecated. To specify parameters to pass to
            a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code>
            structure. For information about how Systems Manager handles these options for the
            supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</para></note><para>The map has the following format:</para><para>Key: string, between 1 and 255 characters</para><para>Value: an array of strings, each string is between 1 and 255 characters</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.RunCommand_TimeoutSecond">
            <summary>
            <para>
            <para>If this time is reached and the command has not already started running, it doesn't
            run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.WindowId">
            <summary>
            <para>
            <para>The maintenance window ID that contains the task to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.WindowTaskId">
            <summary>
            <para>
            <para>The task ID to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.UpdateMaintenanceWindowTaskResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.UpdateMaintenanceWindowTaskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WindowTaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^WindowTaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMMaintenanceWindowTaskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMManagedInstanceRoleCmdlet">
            <summary>
            Changes the Amazon Identity and Access Management (IAM) role that is assigned to the
            on-premises instance or virtual machines (VM). IAM roles are first assigned to these
            hybrid instances during the activation process. For more information, see <a>CreateActivation</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMManagedInstanceRoleCmdlet.IamRole">
            <summary>
            <para>
            <para>The IAM role you want to assign or change.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMManagedInstanceRoleCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the managed instance where you want to update the role.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMManagedInstanceRoleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.UpdateManagedInstanceRoleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMManagedInstanceRoleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMManagedInstanceRoleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMOpsItemCmdlet">
            <summary>
            Edit or change an OpsItem. You must have permission in AWS Identity and Access Management
            (IAM) to update an OpsItem. For more information, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html">Getting
            started with OpsCenter</a> in the <i>AWS Systems Manager User Guide</i>.
            
             
            <para>
            Operations engineers and IT professionals use OpsCenter to view, investigate, and
            remediate operational issues impacting the performance and health of their AWS resources.
            For more information, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html">AWS
            Systems Manager OpsCenter</a> in the <i>AWS Systems Manager User Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMOpsItemCmdlet.Category">
            <summary>
            <para>
            <para>Specify a new category for an OpsItem.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMOpsItemCmdlet.Description">
            <summary>
            <para>
            <para>Update the information about the OpsItem. Provide enough information so that users
            reading this OpsItem for the first time understand the issue. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMOpsItemCmdlet.Notification">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an SNS topic where notifications are sent when this
            OpsItem is edited or changed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMOpsItemCmdlet.OperationalData">
            <summary>
            <para>
            <para>Add new keys or edit existing key-value pairs of the OperationalData map in the OpsItem
            object.</para><para>Operational data is custom data that provides useful reference details about the OpsItem.
            For example, you can specify log files, error strings, license keys, troubleshooting
            tips, or other relevant data. You enter operational data as key-value pairs. The key
            has a maximum length of 128 characters. The value has a maximum size of 20 KB.</para><important><para>Operational data keys <i>can't</i> begin with the following: amazon, aws, amzn, ssm,
            /amazon, /aws, /amzn, /ssm.</para></important><para>You can choose to make the data searchable by other users in the account or you can
            restrict search access. Searchable data means that all users with access to the OpsItem
            Overview page (as provided by the <a>DescribeOpsItems</a> API action) can view and
            search on the specified data. Operational data that is not searchable is only viewable
            by users who have access to the OpsItem (as provided by the <a>GetOpsItem</a> API
            action).</para><para>Use the <code>/aws/resources</code> key in OperationalData to specify a related resource
            in the request. Use the <code>/aws/automations</code> key in OperationalData to associate
            an Automation runbook with the OpsItem. To view AWS CLI example commands that use
            these keys, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-creating-OpsItems.html#OpsCenter-manually-create-OpsItems">Creating
            OpsItems manually</a> in the <i>AWS Systems Manager User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMOpsItemCmdlet.OperationalDataToDelete">
            <summary>
            <para>
            <para>Keys that you want to remove from the OperationalData map.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMOpsItemCmdlet.OpsItemId">
            <summary>
            <para>
            <para>The ID of the OpsItem.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMOpsItemCmdlet.Priority">
            <summary>
            <para>
            <para>The importance of this OpsItem in relation to other OpsItems in the system.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMOpsItemCmdlet.RelatedOpsItem">
            <summary>
            <para>
            <para>One or more OpsItems that share something in common with the current OpsItems. For
            example, related OpsItems can include OpsItems with similar error messages, impacted
            resources, or statuses for the impacted resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMOpsItemCmdlet.Severity">
            <summary>
            <para>
            <para>Specify a new severity for an OpsItem.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMOpsItemCmdlet.Status">
            <summary>
            <para>
            <para>The OpsItem status. Status can be <code>Open</code>, <code>In Progress</code>, or
            <code>Resolved</code>. For more information, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-working-with-OpsItems.html#OpsCenter-working-with-OpsItems-editing-details">Editing
            OpsItem details</a> in the <i>AWS Systems Manager User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMOpsItemCmdlet.Title">
            <summary>
            <para>
            <para>A short heading that describes the nature of the OpsItem and the impacted resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMOpsItemCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.UpdateOpsItemResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMOpsItemCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OpsItemId parameter.
            The -PassThru parameter is deprecated, use -Select '^OpsItemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMOpsItemCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMPatchBaselineCmdlet">
            <summary>
            Modifies an existing patch baseline. Fields not specified in the request are left
            unchanged.
            
             <note><para>
            For information about valid key and value pairs in <code>PatchFilters</code> for each
            supported operating system type, see <a href="http://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html">PatchFilter</a>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMPatchBaselineCmdlet.ApprovedPatch">
            <summary>
            <para>
            <para>A list of explicitly approved patches for the baseline.</para><para>For information about accepted formats for lists of approved patches and rejected
            patches, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html">About
            package name formats for approved and rejected patch lists</a> in the <i>AWS Systems
            Manager User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMPatchBaselineCmdlet.ApprovedPatchesComplianceLevel">
            <summary>
            <para>
            <para>Assigns a new compliance severity level to an existing patch baseline.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMPatchBaselineCmdlet.ApprovedPatchesEnableNonSecurity">
            <summary>
            <para>
            <para>Indicates whether the list of approved patches includes non-security updates that
            should be applied to the instances. The default value is 'false'. Applies to Linux
            instances only.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMPatchBaselineCmdlet.BaselineId">
            <summary>
            <para>
            <para>The ID of the patch baseline to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMPatchBaselineCmdlet.Description">
            <summary>
            <para>
            <para>A description of the patch baseline.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMPatchBaselineCmdlet.Name">
            <summary>
            <para>
            <para>The name of the patch baseline.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMPatchBaselineCmdlet.GlobalFilters_PatchFilter">
            <summary>
            <para>
            <para>The set of patch filters that make up the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMPatchBaselineCmdlet.ApprovalRules_PatchRule">
            <summary>
            <para>
            <para>The rules that make up the rule group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMPatchBaselineCmdlet.RejectedPatch">
            <summary>
            <para>
            <para>A list of explicitly rejected patches for the baseline.</para><para>For information about accepted formats for lists of approved patches and rejected
            patches, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html">About
            package name formats for approved and rejected patch lists</a> in the <i>AWS Systems
            Manager User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMPatchBaselineCmdlet.RejectedPatchesAction">
            <summary>
            <para>
            <para>The action for Patch Manager to take on patches included in the RejectedPackages list.</para><ul><li><para><b>ALLOW_AS_DEPENDENCY</b>: A package in the Rejected patches list is installed only
            if it is a dependency of another package. It is considered compliant with the patch
            baseline, and its status is reported as <i>InstalledOther</i>. This is the default
            action if no option is specified.</para></li><li><para><b>BLOCK</b>: Packages in the RejectedPatches list, and packages that include them
            as dependencies, are not installed under any circumstances. If a package was installed
            before it was added to the Rejected patches list, it is considered non-compliant with
            the patch baseline, and its status is reported as <i>InstalledRejected</i>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMPatchBaselineCmdlet.Replace">
            <summary>
            <para>
            <para>If True, then all fields that are required by the CreatePatchBaseline action are also
            required for this API request. Optional fields that are not specified are set to null.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMPatchBaselineCmdlet.Source">
            <summary>
            <para>
            <para>Information about the patches to use to update the instances, including target operating
            systems and source repositories. Applies to Linux instances only.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMPatchBaselineCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.UpdatePatchBaselineResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.UpdatePatchBaselineResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMPatchBaselineCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BaselineId parameter.
            The -PassThru parameter is deprecated, use -Select '^BaselineId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMPatchBaselineCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMResourceDataSyncCmdlet">
            <summary>
            Update a resource data sync. After you create a resource data sync for a Region, you
            can't change the account options for that sync. For example, if you create a sync
            in the us-east-2 (Ohio) Region and you choose the Include only the current account
            option, you can't edit that sync later and choose the Include all accounts from my
            AWS Organizations configuration option. Instead, you must delete the first resource
            data sync, and create a new one.
            
             <note><para>
            This API action only supports a resource data sync that was created with a SyncFromSource
            <code>SyncType</code>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMResourceDataSyncCmdlet.SyncSource_IncludeFutureRegion">
            <summary>
            <para>
            <para>Whether to automatically synchronize and aggregate data from new AWS Regions when
            those Regions come online.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMResourceDataSyncCmdlet.AwsOrganizationsSource_OrganizationalUnit">
            <summary>
            <para>
            <para>The AWS Organizations organization units included in the sync.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMResourceDataSyncCmdlet.AwsOrganizationsSource_OrganizationSourceType">
            <summary>
            <para>
            <para>If an AWS Organization is present, this is either <code>OrganizationalUnits</code>
            or <code>EntireOrganization</code>. For <code>OrganizationalUnits</code>, the data
            is aggregated from a set of organization units. For <code>EntireOrganization</code>,
            the data is aggregated from the entire AWS Organization. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMResourceDataSyncCmdlet.SyncSource_SourceRegion">
            <summary>
            <para>
            <para>The <code>SyncSource</code> AWS Regions included in the resource data sync.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMResourceDataSyncCmdlet.SyncSource_SourceType">
            <summary>
            <para>
            <para>The type of data source for the resource data sync. <code>SourceType</code> is either
            <code>AwsOrganizations</code> (if an organization is present in AWS Organizations)
            or <code>singleAccountMultiRegions</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMResourceDataSyncCmdlet.SyncName">
            <summary>
            <para>
            <para>The name of the resource data sync you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMResourceDataSyncCmdlet.SyncType">
            <summary>
            <para>
            <para>The type of resource data sync. The supported <code>SyncType</code> is SyncFromSource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMResourceDataSyncCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.UpdateResourceDataSyncResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMResourceDataSyncCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SyncName parameter.
            The -PassThru parameter is deprecated, use -Select '^SyncName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMResourceDataSyncCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMServiceSettingCmdlet">
            <summary>
            <code>ServiceSetting</code> is an account-level setting for an AWS service. This
            setting defines how a user interacts with or uses a service or a feature of a service.
            For example, if an AWS service charges money to the account based on feature or service
            usage, then the AWS service team might create a default setting of "false". This means
            the user can't use this feature unless they change the setting to "true" and intentionally
            opt in for a paid feature.
            
             
            <para>
            Services map a <code>SettingId</code> object to a setting value. AWS services teams
            define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>,
            but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code>
            permission for the setting. Use the <a>GetServiceSetting</a> API action to view the
            current value. Or, use the <a>ResetServiceSetting</a> to change the value back to
            the original value defined by the AWS service team.
            </para><para>
            Update the service setting for the account. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMServiceSettingCmdlet.SettingId">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the service setting to reset. For example, <code>arn:aws:ssm:us-east-1:111122223333:servicesetting/ssm/parameter-store/high-throughput-enabled</code>.
            The setting ID can be one of the following.</para><ul><li><para><code>/ssm/parameter-store/default-parameter-tier</code></para></li><li><para><code>/ssm/parameter-store/high-throughput-enabled</code></para></li><li><para><code>/ssm/managed-instance/activation-tier</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMServiceSettingCmdlet.SettingValue">
            <summary>
            <para>
            <para>The new value to specify for the service setting. For the <code>/ssm/parameter-store/default-parameter-tier</code>
            setting ID, the setting value can be one of the following.</para><ul><li><para>Standard</para></li><li><para>Advanced</para></li><li><para>Intelligent-Tiering</para></li></ul><para>For the <code>/ssm/parameter-store/high-throughput-enabled</code>, and <code>/ssm/managed-instance/activation-tier</code>
            setting IDs, the setting value can be true or false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMServiceSettingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.UpdateServiceSettingResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMServiceSettingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SettingId parameter.
            The -PassThru parameter is deprecated, use -Select '^SettingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.UpdateSSMServiceSettingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.WriteSSMComplianceItemCmdlet">
            <summary>
            Registers a compliance type and other compliance details on a designated resource.
            This action lets you register custom compliance details with a resource. This call
            overwrites existing compliance information on the resource, so you must provide a
            full list of compliance items each time that you send the request.
            
             
            <para>
            ComplianceType can be one of the following:
            </para><ul><li><para>
            ExecutionId: The execution ID when the patch, association, or custom compliance item
            was applied.
            </para></li><li><para>
            ExecutionType: Specify patch, association, or Custom:<code>string</code>.
            </para></li><li><para>
            ExecutionTime. The time the patch, association, or custom compliance item was applied
            to the instance.
            </para></li><li><para>
            Id: The patch, association, or custom compliance ID.
            </para></li><li><para>
            Title: A title.
            </para></li><li><para>
            Status: The status of the compliance item. For example, <code>approved</code> for
            patches, or <code>Failed</code> for associations.
            </para></li><li><para>
            Severity: A patch severity. For example, <code>critical</code>.
            </para></li><li><para>
            DocumentName: A SSM document name. For example, AWS-RunPatchBaseline.
            </para></li><li><para>
            DocumentVersion: An SSM document version number. For example, 4.
            </para></li><li><para>
            Classification: A patch classification. For example, <code>security updates</code>.
            </para></li><li><para>
            PatchBaselineId: A patch baseline ID.
            </para></li><li><para>
            PatchSeverity: A patch severity. For example, <code>Critical</code>.
            </para></li><li><para>
            PatchState: A patch state. For example, <code>InstancesWithFailedPatches</code>.
            </para></li><li><para>
            PatchGroup: The name of a patch group.
            </para></li><li><para>
            InstalledTime: The time the association, patch, or custom compliance item was applied
            to the resource. Specify the time by using the following format: yyyy-MM-dd'T'HH:mm:ss'Z'
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMComplianceItemCmdlet.ComplianceType">
            <summary>
            <para>
            <para>Specify the compliance type. For example, specify Association (for a State Manager
            association), Patch, or Custom:<code>string</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMComplianceItemCmdlet.ExecutionSummary_ExecutionId">
            <summary>
            <para>
            <para>An ID created by the system when <code>PutComplianceItems</code> was called. For example,
            <code>CommandID</code> is a valid execution ID. You can use this ID in subsequent
            calls.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMComplianceItemCmdlet.ExecutionSummary_ExecutionTime">
            <summary>
            <para>
            <para>The time the execution ran as a datetime object that is saved in the following format:
            yyyy-MM-dd'T'HH:mm:ss'Z'.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMComplianceItemCmdlet.ExecutionSummary_ExecutionType">
            <summary>
            <para>
            <para>The type of execution. For example, <code>Command</code> is a valid execution type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMComplianceItemCmdlet.ItemContentHash">
            <summary>
            <para>
            <para>MD5 or SHA-256 content hash. The content hash is used to determine if existing information
            should be overwritten or ignored. If the content hashes match, the request to put
            compliance information is ignored.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMComplianceItemCmdlet.Item">
            <summary>
            <para>
            <para>Information about the compliance as defined by the resource type. For example, for
            a patch compliance type, <code>Items</code> includes information about the PatchSeverity,
            Classification, and so on.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMComplianceItemCmdlet.ResourceId">
            <summary>
            <para>
            <para>Specify an ID for this resource. For a managed instance, this is the instance ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMComplianceItemCmdlet.ResourceType">
            <summary>
            <para>
            <para>Specify the type of resource. <code>ManagedInstance</code> is currently the only supported
            resource type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMComplianceItemCmdlet.UploadType">
            <summary>
            <para>
            <para>The mode for uploading compliance items. You can specify <code>COMPLETE</code> or
            <code>PARTIAL</code>. In <code>COMPLETE</code> mode, the system overwrites all existing
            compliance information for the resource. You must provide a full list of compliance
            items each time you send the request.</para><para>In <code>PARTIAL</code> mode, the system overwrites compliance information for a specific
            association. The association must be configured with <code>SyncCompliance</code> set
            to <code>MANUAL</code>. By default, all requests use <code>COMPLETE</code> mode.</para><note><para>This attribute is only valid for association compliance.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMComplianceItemCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.PutComplianceItemsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMComplianceItemCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMComplianceItemCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.WriteSSMInventoryCmdlet">
            <summary>
            Bulk update custom inventory items on one more instance. The request adds an inventory
            item, if it doesn't already exist, or updates an inventory item, if it does exist.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMInventoryCmdlet.InstanceId">
            <summary>
            <para>
            <para>An instance ID where you want to add or update inventory items.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMInventoryCmdlet.Item">
            <summary>
            <para>
            <para>The inventory items that you want to add or update on instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMInventoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Message'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.PutInventoryResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.PutInventoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMInventoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMInventoryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SSM.WriteSSMParameterCmdlet">
            <summary>
            Add a parameter to the system.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMParameterCmdlet.AllowedPattern">
            <summary>
            <para>
            <para>A regular expression used to validate the parameter value. For example, for String
            types with values restricted to numbers, you can specify the following: AllowedPattern=^\d+$
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMParameterCmdlet.DataType">
            <summary>
            <para>
            <para>The data type for a <code>String</code> parameter. Supported data types include plain
            text and Amazon Machine Image IDs.</para><para><b>The following data type values are supported.</b></para><ul><li><para><code>text</code></para></li><li><para><code>aws:ec2:image</code></para></li></ul><para>When you create a <code>String</code> parameter and specify <code>aws:ec2:image</code>,
            Systems Manager validates the parameter value is in the required format, such as <code>ami-12345abcdeEXAMPLE</code>,
            and that the specified AMI is available in your AWS account. For more information,
            see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-ec2-aliases.html">Native
            parameter support for Amazon Machine Image IDs</a> in the <i>AWS Systems Manager User
            Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMParameterCmdlet.Description">
            <summary>
            <para>
            <para>Information about the parameter that you want to add to the system. Optional but recommended.</para><important><para>Do not enter personally identifiable information in this field.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMParameterCmdlet.KeyId">
            <summary>
            <para>
            <para>The KMS Key ID that you want to use to encrypt a parameter. Either the default AWS
            Key Management Service (AWS KMS) key automatically assigned to your AWS account or
            a custom key. Required for parameters that use the <code>SecureString</code> data
            type.</para><para>If you don't specify a key ID, the system uses the default key associated with your
            AWS account.</para><ul><li><para>To use your default AWS KMS key, choose the <code>SecureString</code> data type, and
            do <i>not</i> specify the <code>Key ID</code> when you create the parameter. The system
            automatically populates <code>Key ID</code> with your default KMS key.</para></li><li><para>To use a custom KMS key, choose the <code>SecureString</code> data type with the <code>Key
            ID</code> parameter.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMParameterCmdlet.Name">
            <summary>
            <para>
            <para>The fully qualified name of the parameter that you want to add to the system. The
            fully qualified name includes the complete hierarchy of the parameter path and name.
            For parameters in a hierarchy, you must include a leading forward slash character
            (/) when you create or reference a parameter. For example: <code>/Dev/DBServer/MySQL/db-string13</code></para><para>Naming Constraints:</para><ul><li><para>Parameter names are case sensitive.</para></li><li><para>A parameter name must be unique within an AWS Region</para></li><li><para>A parameter name can't be prefixed with "aws" or "ssm" (case-insensitive).</para></li><li><para>Parameter names can include only the following symbols and letters: <code>a-zA-Z0-9_.-/</code></para></li><li><para>A parameter name can't include spaces.</para></li><li><para>Parameter hierarchies are limited to a maximum depth of fifteen levels.</para></li></ul><para>For additional information about valid values for parameter names, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-parameter-name-constraints.html">About
            requirements and constraints for parameter names</a> in the <i>AWS Systems Manager
            User Guide</i>.</para><note><para>The maximum length constraint listed below includes capacity for additional system
            attributes that are not part of the name. The maximum length for a parameter name,
            including the full length of the parameter ARN, is 1011 characters. For example, the
            length of the following parameter name is 65 characters, not 20 characters:</para><para><code>arn:aws:ssm:us-east-2:111122223333:parameter/ExampleParameterName</code></para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMParameterCmdlet.Overwrite">
            <summary>
            <para>
            <para>Overwrite an existing parameter. If not specified, will default to "false".</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMParameterCmdlet.Policy">
            <summary>
            <para>
            <para>One or more policies to apply to a parameter. This action takes a JSON array. Parameter
            Store supports the following policy types:</para><para>Expiration: This policy deletes the parameter after it expires. When you create the
            policy, you specify the expiration date. You can update the expiration date and time
            by updating the policy. Updating the <i>parameter</i> does not affect the expiration
            date and time. When the expiration time is reached, Parameter Store deletes the parameter.</para><para>ExpirationNotification: This policy triggers an event in Amazon CloudWatch Events
            that notifies you about the expiration. By using this policy, you can receive notification
            before or after the expiration time is reached, in units of days or hours.</para><para>NoChangeNotification: This policy triggers a CloudWatch event if a parameter has not
            been modified for a specified period of time. This policy type is useful when, for
            example, a secret needs to be changed within a period of time, but it has not been
            changed.</para><para>All existing policies are preserved until you send new policies or an empty policy.
            For more information about parameter policies, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-policies.html">Assigning
            parameter policies</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMParameterCmdlet.Tag">
            <summary>
            <para>
            <para>Optional metadata that you assign to a resource. Tags enable you to categorize a resource
            in different ways, such as by purpose, owner, or environment. For example, you might
            want to tag a Systems Manager parameter to identify the type of resource to which
            it applies, the environment, or the type of configuration data referenced by the parameter.
            In this case, you could specify the following key name/value pairs:</para><ul><li><para><code>Key=Resource,Value=S3bucket</code></para></li><li><para><code>Key=OS,Value=Windows</code></para></li><li><para><code>Key=ParameterType,Value=LicenseKey</code></para></li></ul><note><para>To add tags to an existing Systems Manager parameter, use the <a>AddTagsToResource</a>
            action.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMParameterCmdlet.Tier">
            <summary>
            <para>
            <para>The parameter tier to assign to a parameter.</para><para>Parameter Store offers a standard tier and an advanced tier for parameters. Standard
            parameters have a content size limit of 4 KB and can't be configured to use parameter
            policies. You can create a maximum of 10,000 standard parameters for each Region in
            an AWS account. Standard parameters are offered at no additional cost. </para><para>Advanced parameters have a content size limit of 8 KB and can be configured to use
            parameter policies. You can create a maximum of 100,000 advanced parameters for each
            Region in an AWS account. Advanced parameters incur a charge. For more information,
            see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-advanced-parameters.html">Standard
            and advanced parameter tiers</a> in the <i>AWS Systems Manager User Guide</i>.</para><para>You can change a standard parameter to an advanced parameter any time. But you can't
            revert an advanced parameter to a standard parameter. Reverting an advanced parameter
            to a standard parameter would result in data loss because the system would truncate
            the size of the parameter from 8 KB to 4 KB. Reverting would also remove any policies
            attached to the parameter. Lastly, advanced parameters use a different form of encryption
            than standard parameters. </para><para>If you no longer need an advanced parameter, or if you no longer want to incur charges
            for an advanced parameter, you must delete it and recreate it as a new standard parameter.
            </para><para><b>Using the Default Tier Configuration</b></para><para>In <code>PutParameter</code> requests, you can specify the tier to create the parameter
            in. Whenever you specify a tier in the request, Parameter Store creates or updates
            the parameter according to that request. However, if you do not specify a tier in
            a request, Parameter Store assigns the tier based on the current Parameter Store default
            tier configuration.</para><para>The default tier when you begin using Parameter Store is the standard-parameter tier.
            If you use the advanced-parameter tier, you can specify one of the following as the
            default:</para><ul><li><para><b>Advanced</b>: With this option, Parameter Store evaluates all requests as advanced
            parameters. </para></li><li><para><b>Intelligent-Tiering</b>: With this option, Parameter Store evaluates each request
            to determine if the parameter is standard or advanced. </para><para>If the request doesn't include any options that require an advanced parameter, the
            parameter is created in the standard-parameter tier. If one or more options requiring
            an advanced parameter are included in the request, Parameter Store create a parameter
            in the advanced-parameter tier.</para><para>This approach helps control your parameter-related costs by always creating standard
            parameters unless an advanced parameter is necessary. </para></li></ul><para>Options that require an advanced parameter include the following:</para><ul><li><para>The content size of the parameter is more than 4 KB.</para></li><li><para>The parameter uses a parameter policy.</para></li><li><para>More than 10,000 parameters already exist in your AWS account in the current Region.</para></li></ul><para>For more information about configuring the default tier option, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/ps-default-tier.html">Specifying
            a default parameter tier</a> in the <i>AWS Systems Manager User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMParameterCmdlet.Type">
            <summary>
            <para>
            <para>The type of parameter that you want to add to the system.</para><para>Items in a <code>StringList</code> must be separated by a comma (,). You can't use
            other punctuation or special character to escape items in the list. If you have a
            parameter value that requires a comma, then use the <code>String</code> data type.</para><note><para><code>SecureString</code> is not currently supported for AWS CloudFormation templates
            or in the China Regions.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMParameterCmdlet.Value">
            <summary>
            <para>
            <para>The parameter value that you want to add to the system. Standard parameters have a
            value limit of 4 KB. Advanced parameters have a value limit of 8 KB.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Version'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleSystemsManagement.Model.PutParameterResponse).
            Specifying the name of a property of type Amazon.SimpleSystemsManagement.Model.PutParameterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMParameterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SSM.WriteSSMParameterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
