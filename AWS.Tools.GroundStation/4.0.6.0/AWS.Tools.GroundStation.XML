<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.GroundStation</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.AddGSReservedContactCmdlet">
            <summary>
            Reserves a contact using specified parameters.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.AddGSReservedContactCmdlet.EndTime">
            <summary>
            <para>
            <para>End time of a contact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.AddGSReservedContactCmdlet.GroundStation">
            <summary>
            <para>
            <para>Name of a ground station.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.AddGSReservedContactCmdlet.MissionProfileArn">
            <summary>
            <para>
            <para>ARN of a mission profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.AddGSReservedContactCmdlet.SatelliteArn">
            <summary>
            <para>
            <para>ARN of a satellite</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.AddGSReservedContactCmdlet.StartTime">
            <summary>
            <para>
            <para>Start time of a contact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.AddGSReservedContactCmdlet.Tag">
            <summary>
            <para>
            <para>Tags assigned to a contact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.AddGSReservedContactCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ContactId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.ReserveContactResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.ReserveContactResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.AddGSReservedContactCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.AddGSResourceTagCmdlet">
            <summary>
            Assigns a tag to a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.AddGSResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>ARN of a resource tag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.AddGSResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>Tags assigned to a resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.AddGSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.AddGSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.AddGSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.GetGSConfigCmdlet">
            <summary>
            Returns <code>Config</code> information.
            
             
            <para>
            Only one <code>Config</code> response can be returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSConfigCmdlet.ConfigId">
            <summary>
            <para>
            <para>UUID of a <code>Config</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSConfigCmdlet.ConfigType">
            <summary>
            <para>
            <para>Type of a <code>Config</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.GetConfigResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.GetConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConfigId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConfigId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.GetGSConfigListCmdlet">
            <summary>
            Returns a list of <code>Config</code> objects.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSConfigListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of <code>Configs</code> returned.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSConfigListCmdlet.NextToken">
            <summary>
            <para>
            <para>Next token returned in the request of a previous <code>ListConfigs</code> call. Used
            to get the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSConfigListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ConfigList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.ListConfigsResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.ListConfigsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSConfigListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.GetGSContactCmdlet">
            <summary>
            Describes an existing contact.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSContactCmdlet.ContactId">
            <summary>
            <para>
            <para>UUID of a contact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSContactCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.DescribeContactResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.DescribeContactResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSContactCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ContactId parameter.
            The -PassThru parameter is deprecated, use -Select '^ContactId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.GetGSContactListCmdlet">
            <summary>
            Returns a list of contacts.
            
             
            <para>
            If <code>statusList</code> contains AVAILABLE, the request must include <code>groundStation</code>,
            <code>missionprofileArn</code>, and <code>satelliteArn</code>. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSContactListCmdlet.EndTime">
            <summary>
            <para>
            <para>End time of a contact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSContactListCmdlet.GroundStation">
            <summary>
            <para>
            <para>Name of a ground station.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSContactListCmdlet.MissionProfileArn">
            <summary>
            <para>
            <para>ARN of a mission profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSContactListCmdlet.SatelliteArn">
            <summary>
            <para>
            <para>ARN of a satellite.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSContactListCmdlet.StartTime">
            <summary>
            <para>
            <para>Start time of a contact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSContactListCmdlet.StatusList">
            <summary>
            <para>
            <para>Status of a contact reservation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSContactListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of contacts returned.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSContactListCmdlet.NextToken">
            <summary>
            <para>
            <para>Next token returned in the request of a previous <code>ListContacts</code> call. Used
            to get the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSContactListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ContactList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.ListContactsResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.ListContactsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSContactListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.GetGSDataflowEndpointGroupCmdlet">
            <summary>
            Returns the dataflow endpoint group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSDataflowEndpointGroupCmdlet.DataflowEndpointGroupId">
            <summary>
            <para>
            <para>UUID of a dataflow endpoint group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSDataflowEndpointGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.GetDataflowEndpointGroupResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.GetDataflowEndpointGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSDataflowEndpointGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataflowEndpointGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataflowEndpointGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.GetGSDataflowEndpointGroupListCmdlet">
            <summary>
            Returns a list of <code>DataflowEndpoint</code> groups.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSDataflowEndpointGroupListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of dataflow endpoint groups returned.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSDataflowEndpointGroupListCmdlet.NextToken">
            <summary>
            <para>
            <para>Next token returned in the request of a previous <code>ListDataflowEndpointGroups</code>
            call. Used to get the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSDataflowEndpointGroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DataflowEndpointGroupList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.ListDataflowEndpointGroupsResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.ListDataflowEndpointGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSDataflowEndpointGroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.GetGSGroundStationListCmdlet">
            <summary>
            Returns a list of ground stations.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSGroundStationListCmdlet.SatelliteId">
            <summary>
            <para>
            <para>Satellite ID to retrieve on-boarded ground stations.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSGroundStationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of ground stations returned.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSGroundStationListCmdlet.NextToken">
            <summary>
            <para>
            <para>Next token that can be supplied in the next call to get the next page of ground stations.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSGroundStationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GroundStationList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.ListGroundStationsResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.ListGroundStationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSGroundStationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SatelliteId parameter.
            The -PassThru parameter is deprecated, use -Select '^SatelliteId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSGroundStationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.GetGSMinuteUsageCmdlet">
            <summary>
            Returns the number of minutes used by account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSMinuteUsageCmdlet.Month">
            <summary>
            <para>
            <para>The month being requested, with a value of 1-12.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSMinuteUsageCmdlet.Year">
            <summary>
            <para>
            <para>The year being requested, in the format of YYYY.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSMinuteUsageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.GetMinuteUsageResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.GetMinuteUsageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.GetGSMissionProfileCmdlet">
            <summary>
            Returns a mission profile.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSMissionProfileCmdlet.MissionProfileId">
            <summary>
            <para>
            <para>UUID of a mission profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSMissionProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.GetMissionProfileResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.GetMissionProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSMissionProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MissionProfileId parameter.
            The -PassThru parameter is deprecated, use -Select '^MissionProfileId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.GetGSMissionProfileListCmdlet">
            <summary>
            Returns a list of mission profiles.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSMissionProfileListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of mission profiles returned.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSMissionProfileListCmdlet.NextToken">
            <summary>
            <para>
            <para>Next token returned in the request of a previous <code>ListMissionProfiles</code>
            call. Used to get the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSMissionProfileListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MissionProfileList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.ListMissionProfilesResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.ListMissionProfilesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSMissionProfileListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.GetGSResourceTagCmdlet">
            <summary>
            Returns a list of tags for a specified resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>ARN of a resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.GetGSSatelliteCmdlet">
            <summary>
            Returns a satellite.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSSatelliteCmdlet.SatelliteId">
            <summary>
            <para>
            <para>UUID of a satellite.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSSatelliteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.GetSatelliteResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.GetSatelliteResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSSatelliteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SatelliteId parameter.
            The -PassThru parameter is deprecated, use -Select '^SatelliteId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.GetGSSatelliteListCmdlet">
            <summary>
            Returns a list of satellites.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSSatelliteListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of satellites returned.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSSatelliteListCmdlet.NextToken">
            <summary>
            <para>
            <para>Next token that can be supplied in the next call to get the next page of satellites.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSSatelliteListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Satellites'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.ListSatellitesResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.ListSatellitesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.GetGSSatelliteListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.NewGSConfigCmdlet">
            <summary>
            Creates a <code>Config</code> with the specified <code>configData</code> parameters.
            
             
            <para>
            Only one type of <code>configData</code> can be specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSConfigCmdlet.ConfigData_AntennaDownlinkConfig">
            <summary>
            <para>
            <para>Information about how AWS Ground Station should configure an antenna for downlink
            during a contact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSConfigCmdlet.ConfigData_AntennaDownlinkDemodDecodeConfig">
            <summary>
            <para>
            <para>Information about how AWS Ground Station should conﬁgure an antenna for downlink demod
            decode during a contact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSConfigCmdlet.ConfigData_AntennaUplinkConfig">
            <summary>
            <para>
            <para>Information about how AWS Ground Station should conﬁgure an antenna for uplink during
            a contact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSConfigCmdlet.ConfigData_DataflowEndpointConfig">
            <summary>
            <para>
            <para>Information about the dataflow endpoint <code>Config</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSConfigCmdlet.Name">
            <summary>
            <para>
            <para>Name of a <code>Config</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSConfigCmdlet.Tag">
            <summary>
            <para>
            <para>Tags assigned to a <code>Config</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSConfigCmdlet.ConfigData_TrackingConfig">
            <summary>
            <para>
            <para>Object that determines whether tracking should be used during a contact executed with
            this <code>Config</code> in the mission profile. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSConfigCmdlet.ConfigData_UplinkEchoConfig">
            <summary>
            <para>
            <para>Information about an uplink echo <code>Config</code>.</para><para>Parameters from the <code>AntennaUplinkConfig</code>, corresponding to the specified
            <code>AntennaUplinkConfigArn</code>, are used when this <code>UplinkEchoConfig</code>
            is used in a contact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.CreateConfigResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.CreateConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.NewGSDataflowEndpointGroupCmdlet">
            <summary>
            Creates a <code>DataflowEndpoint</code> group containing the specified list of <code>DataflowEndpoint</code>
            objects.
            
             
            <para>
            The <code>name</code> field in each endpoint is used in your mission profile <code>DataflowEndpointConfig</code>
            to specify which endpoints to use during a contact.
            </para><para>
            When a contact uses multiple <code>DataflowEndpointConfig</code> objects, each <code>Config</code>
            must match a <code>DataflowEndpoint</code> in the same group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSDataflowEndpointGroupCmdlet.EndpointDetail">
            <summary>
            <para>
            <para>Endpoint details of each endpoint in the dataflow endpoint group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSDataflowEndpointGroupCmdlet.Tag">
            <summary>
            <para>
            <para>Tags of a dataflow endpoint group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSDataflowEndpointGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DataflowEndpointGroupId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.CreateDataflowEndpointGroupResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.CreateDataflowEndpointGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSDataflowEndpointGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EndpointDetail parameter.
            The -PassThru parameter is deprecated, use -Select '^EndpointDetail' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSDataflowEndpointGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.NewGSMissionProfileCmdlet">
            <summary>
            Creates a mission profile.
            
             
            <para><code>dataflowEdges</code> is a list of lists of strings. Each lower level list of
            strings has two elements: a <i>from</i> ARN and a <i>to</i> ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSMissionProfileCmdlet.ContactPostPassDurationSecond">
            <summary>
            <para>
            <para>Amount of time after a contact ends that you’d like to receive a CloudWatch event
            indicating the pass has finished.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSMissionProfileCmdlet.ContactPrePassDurationSecond">
            <summary>
            <para>
            <para>Amount of time prior to contact start you’d like to receive a CloudWatch event indicating
            an upcoming pass.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSMissionProfileCmdlet.DataflowEdge">
            <summary>
            <para>
            <para>A list of lists of ARNs. Each list of ARNs is an edge, with a <i>from</i><code>Config</code>
            and a <i>to</i><code>Config</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSMissionProfileCmdlet.MinimumViableContactDurationSecond">
            <summary>
            <para>
            <para>Smallest amount of time in seconds that you’d like to see for an available contact.
            AWS Ground Station will not present you with contacts shorter than this duration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSMissionProfileCmdlet.Name">
            <summary>
            <para>
            <para>Name of a mission profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSMissionProfileCmdlet.Tag">
            <summary>
            <para>
            <para>Tags assigned to a mission profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSMissionProfileCmdlet.TrackingConfigArn">
            <summary>
            <para>
            <para>ARN of a tracking <code>Config</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSMissionProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MissionProfileId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.CreateMissionProfileResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.CreateMissionProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSMissionProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.NewGSMissionProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.RemoveGSConfigCmdlet">
            <summary>
            Deletes a <code>Config</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.RemoveGSConfigCmdlet.ConfigId">
            <summary>
            <para>
            <para>UUID of a <code>Config</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.RemoveGSConfigCmdlet.ConfigType">
            <summary>
            <para>
            <para>Type of a <code>Config</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.RemoveGSConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.DeleteConfigResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.DeleteConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.RemoveGSConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConfigId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConfigId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.RemoveGSConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.RemoveGSDataflowEndpointGroupCmdlet">
            <summary>
            Deletes a dataflow endpoint group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.RemoveGSDataflowEndpointGroupCmdlet.DataflowEndpointGroupId">
            <summary>
            <para>
            <para>UUID of a dataflow endpoint group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.RemoveGSDataflowEndpointGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DataflowEndpointGroupId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.DeleteDataflowEndpointGroupResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.DeleteDataflowEndpointGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.RemoveGSDataflowEndpointGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataflowEndpointGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataflowEndpointGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.RemoveGSDataflowEndpointGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.RemoveGSMissionProfileCmdlet">
            <summary>
            Deletes a mission profile.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.RemoveGSMissionProfileCmdlet.MissionProfileId">
            <summary>
            <para>
            <para>UUID of a mission profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.RemoveGSMissionProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MissionProfileId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.DeleteMissionProfileResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.DeleteMissionProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.RemoveGSMissionProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MissionProfileId parameter.
            The -PassThru parameter is deprecated, use -Select '^MissionProfileId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.RemoveGSMissionProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.RemoveGSResourceTagCmdlet">
            <summary>
            Deassigns a resource tag.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.RemoveGSResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>ARN of a resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.RemoveGSResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>Keys of a resource tag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.RemoveGSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.RemoveGSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.RemoveGSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.StopGSContactCmdlet">
            <summary>
            Cancels a contact with a specified contact ID.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.StopGSContactCmdlet.ContactId">
            <summary>
            <para>
            <para>UUID of a contact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.StopGSContactCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ContactId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.CancelContactResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.CancelContactResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.StopGSContactCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ContactId parameter.
            The -PassThru parameter is deprecated, use -Select '^ContactId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.StopGSContactCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.UpdateGSConfigCmdlet">
            <summary>
            Updates the <code>Config</code> used when scheduling contacts.
            
             
            <para>
            Updating a <code>Config</code> will not update the execution parameters for existing
            future contacts scheduled with this <code>Config</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSConfigCmdlet.ConfigData_AntennaDownlinkConfig">
            <summary>
            <para>
            <para>Information about how AWS Ground Station should configure an antenna for downlink
            during a contact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSConfigCmdlet.ConfigData_AntennaDownlinkDemodDecodeConfig">
            <summary>
            <para>
            <para>Information about how AWS Ground Station should conﬁgure an antenna for downlink demod
            decode during a contact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSConfigCmdlet.ConfigData_AntennaUplinkConfig">
            <summary>
            <para>
            <para>Information about how AWS Ground Station should conﬁgure an antenna for uplink during
            a contact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSConfigCmdlet.ConfigId">
            <summary>
            <para>
            <para>UUID of a <code>Config</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSConfigCmdlet.ConfigType">
            <summary>
            <para>
            <para>Type of a <code>Config</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSConfigCmdlet.ConfigData_DataflowEndpointConfig">
            <summary>
            <para>
            <para>Information about the dataflow endpoint <code>Config</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSConfigCmdlet.Name">
            <summary>
            <para>
            <para>Name of a <code>Config</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSConfigCmdlet.ConfigData_TrackingConfig">
            <summary>
            <para>
            <para>Object that determines whether tracking should be used during a contact executed with
            this <code>Config</code> in the mission profile. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSConfigCmdlet.ConfigData_UplinkEchoConfig">
            <summary>
            <para>
            <para>Information about an uplink echo <code>Config</code>.</para><para>Parameters from the <code>AntennaUplinkConfig</code>, corresponding to the specified
            <code>AntennaUplinkConfigArn</code>, are used when this <code>UplinkEchoConfig</code>
            is used in a contact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.UpdateConfigResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.UpdateConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConfigId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConfigId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GS.UpdateGSMissionProfileCmdlet">
            <summary>
            Updates a mission profile.
            
             
            <para>
            Updating a mission profile will not update the execution parameters for existing future
            contacts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSMissionProfileCmdlet.ContactPostPassDurationSecond">
            <summary>
            <para>
            <para>Amount of time after a contact ends that you’d like to receive a CloudWatch event
            indicating the pass has finished.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSMissionProfileCmdlet.ContactPrePassDurationSecond">
            <summary>
            <para>
            <para>Amount of time after a contact ends that you’d like to receive a CloudWatch event
            indicating the pass has finished.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSMissionProfileCmdlet.DataflowEdge">
            <summary>
            <para>
            <para>A list of lists of ARNs. Each list of ARNs is an edge, with a <i>from</i><code>Config</code>
            and a <i>to</i><code>Config</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSMissionProfileCmdlet.MinimumViableContactDurationSecond">
            <summary>
            <para>
            <para>Smallest amount of time in seconds that you’d like to see for an available contact.
            AWS Ground Station will not present you with contacts shorter than this duration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSMissionProfileCmdlet.MissionProfileId">
            <summary>
            <para>
            <para>UUID of a mission profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSMissionProfileCmdlet.Name">
            <summary>
            <para>
            <para>Name of a mission profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSMissionProfileCmdlet.TrackingConfigArn">
            <summary>
            <para>
            <para>ARN of a tracking <code>Config</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSMissionProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MissionProfileId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GroundStation.Model.UpdateMissionProfileResponse).
            Specifying the name of a property of type Amazon.GroundStation.Model.UpdateMissionProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSMissionProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MissionProfileId parameter.
            The -PassThru parameter is deprecated, use -Select '^MissionProfileId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GS.UpdateGSMissionProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
