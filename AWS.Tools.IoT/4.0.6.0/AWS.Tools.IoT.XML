<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.IoT</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.AddIOTPolicyCmdlet">
            <summary>
            Attaches a policy to the specified target.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The name of the policy to attach.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTPolicyCmdlet.Target">
            <summary>
            <para>
            <para>The <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-security-identity.html">identity</a>
            to which the policy is attached.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.AttachPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyName parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.AddIOTPrincipalPolicyCmdlet">
            <summary>
            Attaches the specified policy to the specified principal (certificate or other credential).
            
             
            <para><b>Note:</b> This API is deprecated. Please use <a>AttachPolicy</a> instead.
            </para><br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTPrincipalPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The policy name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTPrincipalPolicyCmdlet.Principal">
            <summary>
            <para>
            <para>The principal, which can be a certificate ARN (as returned from the CreateCertificate
            operation) or an Amazon Cognito ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTPrincipalPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.AttachPrincipalPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTPrincipalPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Principal parameter.
            The -PassThru parameter is deprecated, use -Select '^Principal' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTPrincipalPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.AddIOTResourceTagCmdlet">
            <summary>
            Adds to or modifies the tags of the given resource. Tags are metadata which can be
            used to manage a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The ARN of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The new or modified tags for the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.AddIOTTargetsWithJobCmdlet">
            <summary>
            Associates a group with a continuous job. The following criteria must be met: 
            
             <ul><li><para>
            The job must have been created with the <code>targetSelection</code> field set to
            "CONTINUOUS".
            </para></li><li><para>
            The job status must currently be "IN_PROGRESS".
            </para></li><li><para>
            The total number of targets associated with a job must not exceed 100.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTTargetsWithJobCmdlet.Comment">
            <summary>
            <para>
            <para>An optional comment string describing why the job was associated with the targets.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTTargetsWithJobCmdlet.JobId">
            <summary>
            <para>
            <para>The unique identifier you assigned to this job when it was created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTTargetsWithJobCmdlet.Target">
            <summary>
            <para>
            <para>A list of thing group ARNs that define the targets of the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTTargetsWithJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.AssociateTargetsWithJobResponse).
            Specifying the name of a property of type Amazon.IoT.Model.AssociateTargetsWithJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTTargetsWithJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTTargetsWithJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingPrincipalCmdlet">
            <summary>
            Attaches the specified principal to the specified thing. A principal can be X.509
            certificates, IAM users, groups, and roles, Amazon Cognito identities or federated
            identities.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingPrincipalCmdlet.Principal">
            <summary>
            <para>
            <para>The principal, which can be a certificate ARN (as returned from the CreateCertificate
            operation) or an Amazon Cognito ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingPrincipalCmdlet.ThingName">
            <summary>
            <para>
            <para>The name of the thing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingPrincipalCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.AttachThingPrincipalResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingPrincipalCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingPrincipalCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingToBillingGroupCmdlet">
            <summary>
            Adds a thing to a billing group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingToBillingGroupCmdlet.BillingGroupArn">
            <summary>
            <para>
            <para>The ARN of the billing group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingToBillingGroupCmdlet.BillingGroupName">
            <summary>
            <para>
            <para>The name of the billing group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingToBillingGroupCmdlet.ThingArn">
            <summary>
            <para>
            <para>The ARN of the thing to be added to the billing group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingToBillingGroupCmdlet.ThingName">
            <summary>
            <para>
            <para>The name of the thing to be added to the billing group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingToBillingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.AddThingToBillingGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingToBillingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingToBillingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingToThingGroupCmdlet">
            <summary>
            Adds a thing to a thing group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingToThingGroupCmdlet.OverrideDynamicGroup">
            <summary>
            <para>
            <para>Override dynamic thing groups with static thing groups when 10-group limit is reached.
            If a thing belongs to 10 thing groups, and one or more of those groups are dynamic
            thing groups, adding a thing to a static group removes the thing from the last dynamic
            group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingToThingGroupCmdlet.ThingArn">
            <summary>
            <para>
            <para>The ARN of the thing to add to a group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingToThingGroupCmdlet.ThingGroupArn">
            <summary>
            <para>
            <para>The ARN of the group to which you are adding a thing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingToThingGroupCmdlet.ThingGroupName">
            <summary>
            <para>
            <para>The name of the group to which you are adding a thing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingToThingGroupCmdlet.ThingName">
            <summary>
            <para>
            <para>The name of the thing to add to a group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingToThingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.AddThingToThingGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingToThingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.AddIOTThingToThingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.ClearIOTDefaultAuthorizerCmdlet">
            <summary>
            Clears the default authorizer.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.ClearIOTDefaultAuthorizerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ClearDefaultAuthorizerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.ClearIOTDefaultAuthorizerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.ConfirmIOTCertificateTransferCmdlet">
            <summary>
            Accepts a pending certificate transfer. The default state of the certificate is INACTIVE.
            
             
            <para>
            To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate
            your certificates.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.ConfirmIOTCertificateTransferCmdlet.CertificateId">
            <summary>
            <para>
            <para>The ID of the certificate. (The last part of the certificate ARN contains the certificate
            ID.)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.ConfirmIOTCertificateTransferCmdlet.SetAsActive">
            <summary>
            <para>
            <para>Specifies whether the certificate is active.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.ConfirmIOTCertificateTransferCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.AcceptCertificateTransferResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.ConfirmIOTCertificateTransferCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateId parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.ConfirmIOTCertificateTransferCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.ConfirmIOTTopicRuleDestinationCmdlet">
            <summary>
            Confirms a topic rule destination. When you create a rule requiring a destination,
            AWS IoT sends a confirmation message to the endpoint or base address you specify.
            The message includes a token which you pass back when calling <code>ConfirmTopicRuleDestination</code>
            to confirm that you own or have access to the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.ConfirmIOTTopicRuleDestinationCmdlet.ConfirmationToken">
            <summary>
            <para>
            <para>The token used to confirm ownership or access to the topic rule confirmation URL.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.ConfirmIOTTopicRuleDestinationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ConfirmTopicRuleDestinationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.ConfirmIOTTopicRuleDestinationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConfirmationToken parameter.
            The -PassThru parameter is deprecated, use -Select '^ConfirmationToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.ConfirmIOTTopicRuleDestinationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.DenyIOTCertificateTransferCmdlet">
            <summary>
            Rejects a pending certificate transfer. After AWS IoT rejects a certificate transfer,
            the certificate status changes from <b>PENDING_TRANSFER</b> to <b>INACTIVE</b>.
            
             
            <para>
            To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate
            your certificates.
            </para><para>
            This operation can only be called by the transfer destination. After it is called,
            the certificate will be returned to the source's account in the INACTIVE state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.DenyIOTCertificateTransferCmdlet.CertificateId">
            <summary>
            <para>
            <para>The ID of the certificate. (The last part of the certificate ARN contains the certificate
            ID.)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.DenyIOTCertificateTransferCmdlet.RejectReason">
            <summary>
            <para>
            <para>The reason the certificate transfer was rejected.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.DenyIOTCertificateTransferCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.RejectCertificateTransferResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.DenyIOTCertificateTransferCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateId parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.DenyIOTCertificateTransferCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.DisableIOTTopicRuleCmdlet">
            <summary>
            Disables the rule.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.DisableIOTTopicRuleCmdlet.RuleName">
            <summary>
            <para>
            <para>The name of the rule to disable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.DisableIOTTopicRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DisableTopicRuleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.DisableIOTTopicRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RuleName parameter.
            The -PassThru parameter is deprecated, use -Select '^RuleName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.DisableIOTTopicRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.DismountIOTPolicyCmdlet">
            <summary>
            Detaches a policy from the specified target.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.DismountIOTPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The policy to detach.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.DismountIOTPolicyCmdlet.Target">
            <summary>
            <para>
            <para>The target from which the policy will be detached.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.DismountIOTPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DetachPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.DismountIOTPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Target parameter.
            The -PassThru parameter is deprecated, use -Select '^Target' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.DismountIOTPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.DismountIOTSecurityProfileCmdlet">
            <summary>
            Disassociates a Device Defender security profile from a thing group or from this account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.DismountIOTSecurityProfileCmdlet.SecurityProfileName">
            <summary>
            <para>
            <para>The security profile that is detached.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.DismountIOTSecurityProfileCmdlet.SecurityProfileTargetArn">
            <summary>
            <para>
            <para>The ARN of the thing group from which the security profile is detached.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.DismountIOTSecurityProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DetachSecurityProfileResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.DismountIOTSecurityProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecurityProfileName parameter.
            The -PassThru parameter is deprecated, use -Select '^SecurityProfileName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.DismountIOTSecurityProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.EnableIOTTopicRuleCmdlet">
            <summary>
            Enables the rule.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.EnableIOTTopicRuleCmdlet.RuleName">
            <summary>
            <para>
            <para>The name of the topic rule to enable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.EnableIOTTopicRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.EnableTopicRuleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.EnableIOTTopicRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RuleName parameter.
            The -PassThru parameter is deprecated, use -Select '^RuleName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.EnableIOTTopicRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTAccountAuditConfigurationCmdlet">
            <summary>
            Gets information about the Device Defender audit settings for this account. Settings
            include how audit notifications are sent and which audit checks are enabled or disabled.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAccountAuditConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeAccountAuditConfigurationResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeAccountAuditConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTActiveViolationListCmdlet">
            <summary>
            Lists the active violations for a given Device Defender security profile.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTActiveViolationListCmdlet.SecurityProfileName">
            <summary>
            <para>
            <para>The name of the Device Defender security profile for which violations are listed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTActiveViolationListCmdlet.ThingName">
            <summary>
            <para>
            <para>The name of the thing whose active violations are listed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTActiveViolationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTActiveViolationListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTActiveViolationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ActiveViolations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListActiveViolationsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListActiveViolationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTActiveViolationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecurityProfileName parameter.
            The -PassThru parameter is deprecated, use -Select '^SecurityProfileName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTActiveViolationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTAttachedPolicyListCmdlet">
            <summary>
            Lists the policies attached to the specified thing group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAttachedPolicyListCmdlet.Recursive">
            <summary>
            <para>
            <para>When true, recursively list attached policies.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAttachedPolicyListCmdlet.Target">
            <summary>
            <para>
            <para>The group or principal for which the policies will be listed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAttachedPolicyListCmdlet.Marker">
            <summary>
            <para>
            <para>The token to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAttachedPolicyListCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAttachedPolicyListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Policies'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListAttachedPoliciesResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListAttachedPoliciesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAttachedPolicyListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Target parameter.
            The -PassThru parameter is deprecated, use -Select '^Target' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAttachedPolicyListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingCmdlet">
            <summary>
            Gets information about a single audit finding. Properties include the reason for noncompliance,
            the severity of the issue, and when the audit that returned the finding was started.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingCmdlet.FindingId">
            <summary>
            <para>
            <para>A unique identifier for a single audit finding. You can use this identifier to apply
            mitigation actions to the finding.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Finding'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeAuditFindingResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeAuditFindingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FindingId parameter.
            The -PassThru parameter is deprecated, use -Select '^FindingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingListCmdlet">
            <summary>
            Lists the findings (results) of a Device Defender audit or of the audits performed
            during a specified time period. (Findings are retained for 180 days.)<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingListCmdlet.ResourceIdentifier_Account">
            <summary>
            <para>
            <para>The account with which the resource is associated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingListCmdlet.ResourceIdentifier_CaCertificateId">
            <summary>
            <para>
            <para>The ID of the CA certificate used to authorize the certificate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingListCmdlet.CheckName">
            <summary>
            <para>
            <para>A filter to limit results to the findings for the specified audit check.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingListCmdlet.ResourceIdentifier_ClientId">
            <summary>
            <para>
            <para>The client ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingListCmdlet.ResourceIdentifier_CognitoIdentityPoolId">
            <summary>
            <para>
            <para>The ID of the Amazon Cognito identity pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingListCmdlet.ResourceIdentifier_DeviceCertificateId">
            <summary>
            <para>
            <para>The ID of the certificate attached to the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingListCmdlet.EndTime">
            <summary>
            <para>
            <para>A filter to limit results to those found before the specified time. You must specify
            either the startTime and endTime or the taskId, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingListCmdlet.ResourceIdentifier_IamRoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that has overly permissive actions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingListCmdlet.PolicyVersionIdentifier_PolicyName">
            <summary>
            <para>
            <para>The name of the policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingListCmdlet.PolicyVersionIdentifier_PolicyVersionId">
            <summary>
            <para>
            <para>The ID of the version of the policy associated with the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingListCmdlet.ResourceIdentifier_RoleAliasArn">
            <summary>
            <para>
            <para>The ARN of the role alias that has overly permissive actions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingListCmdlet.StartTime">
            <summary>
            <para>
            <para>A filter to limit results to those found after the specified time. You must specify
            either the startTime and endTime or the taskId, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingListCmdlet.TaskId">
            <summary>
            <para>
            <para>A filter to limit results to the audit with the specified ID. You must specify either
            the taskId or the startTime and endTime, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time. The default is 25.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Findings'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListAuditFindingsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListAuditFindingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditFindingListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsExecutionListCmdlet">
            <summary>
            Gets the status of audit mitigation action tasks that were executed.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsExecutionListCmdlet.ActionStatus">
            <summary>
            <para>
            <para>Specify this filter to limit results to those with a specific status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsExecutionListCmdlet.FindingId">
            <summary>
            <para>
            <para>Specify this filter to limit results to those that were applied to a specific audit
            finding.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsExecutionListCmdlet.TaskId">
            <summary>
            <para>
            <para>Specify this filter to limit results to actions for a specific audit mitigation actions
            task.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsExecutionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time. The default is 25.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsExecutionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsExecutionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ActionsExecutions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListAuditMitigationActionsExecutionsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListAuditMitigationActionsExecutionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsExecutionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FindingId parameter.
            The -PassThru parameter is deprecated, use -Select '^FindingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsTaskCmdlet">
            <summary>
            Gets information about an audit mitigation task that is used to apply mitigation actions
            to a set of audit findings. Properties include the actions being applied, the audit
            checks to which they're being applied, the task status, and aggregated task statistics.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsTaskCmdlet.TaskId">
            <summary>
            <para>
            <para>The unique identifier for the audit mitigation task.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeAuditMitigationActionsTaskResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeAuditMitigationActionsTaskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^TaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsTaskListCmdlet">
            <summary>
            Gets a list of audit mitigation action tasks that match the specified filters.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsTaskListCmdlet.AuditTaskId">
            <summary>
            <para>
            <para>Specify this filter to limit results to tasks that were applied to results for a specific
            audit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsTaskListCmdlet.EndTime">
            <summary>
            <para>
            <para>Specify this filter to limit results to tasks that were completed or canceled on or
            before a specific date and time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsTaskListCmdlet.FindingId">
            <summary>
            <para>
            <para>Specify this filter to limit results to tasks that were applied to a specific audit
            finding.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsTaskListCmdlet.StartTime">
            <summary>
            <para>
            <para>Specify this filter to limit results to tasks that began on or after a specific date
            and time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsTaskListCmdlet.TaskStatus">
            <summary>
            <para>
            <para>Specify this filter to limit results to tasks that are in a specific state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsTaskListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time. The default is 25.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsTaskListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsTaskListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tasks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListAuditMitigationActionsTasksResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListAuditMitigationActionsTasksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditMitigationActionsTaskListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FindingId parameter.
            The -PassThru parameter is deprecated, use -Select '^FindingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditTaskCmdlet">
            <summary>
            Gets information about a Device Defender audit.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditTaskCmdlet.TaskId">
            <summary>
            <para>
            <para>The ID of the audit whose information you want to get.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeAuditTaskResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeAuditTaskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuditTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^TaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuthorizerCmdlet">
            <summary>
            Describes an authorizer.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuthorizerCmdlet.AuthorizerName">
            <summary>
            <para>
            <para>The name of the authorizer to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuthorizerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AuthorizerDescription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeAuthorizerResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeAuthorizerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuthorizerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AuthorizerName parameter.
            The -PassThru parameter is deprecated, use -Select '^AuthorizerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuthorizerListCmdlet">
            <summary>
            Lists the authorizers registered in your account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuthorizerListCmdlet.Status">
            <summary>
            <para>
            <para>The status of the list authorizers request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuthorizerListCmdlet.AscendingOrder">
            <summary>
            <para>
            <para>Return the list of authorizers in ascending alphabetical order.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuthorizerListCmdlet.Marker">
            <summary>
            <para>
            <para>A marker used to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuthorizerListCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of results to return at one time.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuthorizerListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Authorizers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListAuthorizersResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListAuthorizersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTAuthorizerListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTBillingGroupCmdlet">
            <summary>
            Returns information about a billing group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTBillingGroupCmdlet.BillingGroupName">
            <summary>
            <para>
            <para>The name of the billing group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTBillingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeBillingGroupResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeBillingGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTBillingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BillingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^BillingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTBillingGroupListCmdlet">
            <summary>
            Lists the billing groups you have created.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTBillingGroupListCmdlet.NamePrefixFilter">
            <summary>
            <para>
            <para>Limit the results to billing groups whose names have the given prefix.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTBillingGroupListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTBillingGroupListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTBillingGroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BillingGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListBillingGroupsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListBillingGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTBillingGroupListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NamePrefixFilter parameter.
            The -PassThru parameter is deprecated, use -Select '^NamePrefixFilter' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTBillingGroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTCACertificateCmdlet">
            <summary>
            Describes a registered CA certificate.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCACertificateCmdlet.CertificateId">
            <summary>
            <para>
            <para>The CA certificate identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCACertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeCACertificateResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeCACertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCACertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateId parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTCACertificateListCmdlet">
            <summary>
            Lists the CA certificates registered for your AWS account.
            
             
            <para>
            The results are paginated with a default page size of 25. You can use the returned
            marker to retrieve additional results.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCACertificateListCmdlet.AscendingOrder">
            <summary>
            <para>
            <para>Determines the order of the results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCACertificateListCmdlet.Marker">
            <summary>
            <para>
            <para>The marker for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCACertificateListCmdlet.PageSize">
            <summary>
            <para>
            <para>The result page size.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCACertificateListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Certificates'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListCACertificatesResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListCACertificatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCACertificateListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTCardinalityCmdlet">
            <summary>
            Returns the approximate count of unique values that match the query.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCardinalityCmdlet.AggregationField">
            <summary>
            <para>
            <para>The field to aggregate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCardinalityCmdlet.IndexName">
            <summary>
            <para>
            <para>The name of the index to search.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCardinalityCmdlet.QueryString">
            <summary>
            <para>
            <para>The search query.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCardinalityCmdlet.QueryVersion">
            <summary>
            <para>
            <para>The query version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCardinalityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cardinality'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.GetCardinalityResponse).
            Specifying the name of a property of type Amazon.IoT.Model.GetCardinalityResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCardinalityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QueryString parameter.
            The -PassThru parameter is deprecated, use -Select '^QueryString' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTCertificateCmdlet">
            <summary>
            Gets information about the specified certificate.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCertificateCmdlet.CertificateId">
            <summary>
            <para>
            <para>The ID of the certificate. (The last part of the certificate ARN contains the certificate
            ID.)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CertificateDescription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeCertificateResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateId parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTCertificateListCmdlet">
            <summary>
            Lists the certificates registered in your AWS account.
            
             
            <para>
            The results are paginated with a default page size of 25. You can use the returned
            marker to retrieve additional results.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCertificateListCmdlet.AscendingOrder">
            <summary>
            <para>
            <para>Specifies the order for results. If True, the results are returned in ascending order,
            based on the creation date.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCertificateListCmdlet.Marker">
            <summary>
            <para>
            <para>The marker for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCertificateListCmdlet.PageSize">
            <summary>
            <para>
            <para>The result page size.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCertificateListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Certificates'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListCertificatesResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListCertificatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCertificateListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTCertificateListByCACmdlet">
            <summary>
            List the device certificates signed by the specified CA certificate.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCertificateListByCACmdlet.CaCertificateId">
            <summary>
            <para>
            <para>The ID of the CA certificate. This operation will list all registered device certificate
            that were signed by this CA certificate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCertificateListByCACmdlet.AscendingOrder">
            <summary>
            <para>
            <para>Specifies the order for results. If True, the results are returned in ascending order,
            based on the creation date.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCertificateListByCACmdlet.Marker">
            <summary>
            <para>
            <para>The marker for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCertificateListByCACmdlet.PageSize">
            <summary>
            <para>
            <para>The result page size.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCertificateListByCACmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Certificates'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListCertificatesByCAResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListCertificatesByCAResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTCertificateListByCACmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTDefaultAuthorizerCmdlet">
            <summary>
            Describes the default authorizer.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTDefaultAuthorizerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AuthorizerDescription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeDefaultAuthorizerResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeDefaultAuthorizerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTDimensionCmdlet">
            <summary>
            Provides details about a dimension that is defined in your AWS account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTDimensionCmdlet.Name">
            <summary>
            <para>
            <para>The unique identifier for the dimension.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTDimensionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeDimensionResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeDimensionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTDimensionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTDimensionListCmdlet">
            <summary>
            List the set of dimensions that are defined for your AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTDimensionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to retrieve at one time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTDimensionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTDimensionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DimensionNames'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListDimensionsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListDimensionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTDimensionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTDomainConfigurationCmdlet">
            <summary>
            Gets summary information about a domain configuration.
            
             <note><para>
            The domain configuration feature is in public preview and is subject to change.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTDomainConfigurationCmdlet.DomainConfigurationName">
            <summary>
            <para>
            <para>The name of the domain configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTDomainConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeDomainConfigurationResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeDomainConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTDomainConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DomainConfigurationName parameter.
            The -PassThru parameter is deprecated, use -Select '^DomainConfigurationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTDomainConfigurationListCmdlet">
            <summary>
            Gets a list of domain configurations for the user. This list is sorted alphabetically
            by domain configuration name.
            
             <note><para>
            The domain configuration feature is in public preview and is subject to change.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTDomainConfigurationListCmdlet.ServiceType">
            <summary>
            <para>
            <para>The type of service delivered by the endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTDomainConfigurationListCmdlet.Marker">
            <summary>
            <para>
            <para>The marker for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTDomainConfigurationListCmdlet.PageSize">
            <summary>
            <para>
            <para>The result page size.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTDomainConfigurationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DomainConfigurations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListDomainConfigurationsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListDomainConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTDomainConfigurationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTEffectivePolicyCmdlet">
            <summary>
            Gets a list of the policies that have an effect on the authorization behavior of the
            specified device when it connects to the AWS IoT device gateway.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTEffectivePolicyCmdlet.CognitoIdentityPoolId">
            <summary>
            <para>
            <para>The Cognito identity pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTEffectivePolicyCmdlet.Principal">
            <summary>
            <para>
            <para>The principal.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTEffectivePolicyCmdlet.ThingName">
            <summary>
            <para>
            <para>The thing name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTEffectivePolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EffectivePolicies'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.GetEffectivePoliciesResponse).
            Specifying the name of a property of type Amazon.IoT.Model.GetEffectivePoliciesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTEndpointCmdlet">
            <summary>
            Returns a unique endpoint specific to the AWS account making the call.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTEndpointCmdlet.EndpointType">
            <summary>
            <para>
            <para>The endpoint type. Valid endpoint types include:</para><ul><li><para><code>iot:Data</code> - Returns a VeriSign signed data endpoint.</para></li></ul><ul><li><para><code>iot:Data-ATS</code> - Returns an ATS signed data endpoint.</para></li></ul><ul><li><para><code>iot:CredentialProvider</code> - Returns an AWS IoT credentials provider API
            endpoint.</para></li></ul><ul><li><para><code>iot:Jobs</code> - Returns an AWS IoT device management Jobs API endpoint.</para></li></ul><para>We strongly recommend that customers use the newer <code>iot:Data-ATS</code> endpoint
            type to avoid issues related to the widespread distrust of Symantec certificate authorities.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EndpointAddress'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeEndpointResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EndpointType parameter.
            The -PassThru parameter is deprecated, use -Select '^EndpointType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTEventConfigurationCmdlet">
            <summary>
            Describes event configurations.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTEventConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeEventConfigurationsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeEventConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTIndexCmdlet">
            <summary>
            Describes a search index.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTIndexCmdlet.IndexName">
            <summary>
            <para>
            <para>The index name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTIndexCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeIndexResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeIndexResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTIndexCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IndexName parameter.
            The -PassThru parameter is deprecated, use -Select '^IndexName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTIndexingConfigurationCmdlet">
            <summary>
            Gets the indexing configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTIndexingConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.GetIndexingConfigurationResponse).
            Specifying the name of a property of type Amazon.IoT.Model.GetIndexingConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTIndexListCmdlet">
            <summary>
            Lists the search indices.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTIndexListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTIndexListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token used to get the next set of results, or <code>null</code> if there are no
            additional results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTIndexListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IndexNames'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListIndicesResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListIndicesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTIndexListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobCmdlet">
            <summary>
            Describes a job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobCmdlet.JobId">
            <summary>
            <para>
            <para>The unique identifier you assigned to this job when it was created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeJobResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobDocumentCmdlet">
            <summary>
            Gets a job document.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobDocumentCmdlet.JobId">
            <summary>
            <para>
            <para>The unique identifier you assigned to this job when it was created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobDocumentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Document'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.GetJobDocumentResponse).
            Specifying the name of a property of type Amazon.IoT.Model.GetJobDocumentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobDocumentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionCmdlet">
            <summary>
            Describes a job execution.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionCmdlet.ExecutionNumber">
            <summary>
            <para>
            <para>A string (consisting of the digits "0" through "9" which is used to specify a particular
            job execution on a particular device.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionCmdlet.JobId">
            <summary>
            <para>
            <para>The unique identifier you assigned to this job when it was created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionCmdlet.ThingName">
            <summary>
            <para>
            <para>The name of the thing on which the job execution is running.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Execution'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeJobExecutionResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeJobExecutionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionsForJobListCmdlet">
            <summary>
            Lists the job executions for a job.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionsForJobListCmdlet.JobId">
            <summary>
            <para>
            <para>The unique identifier you assigned to this job when it was created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionsForJobListCmdlet.Status">
            <summary>
            <para>
            <para>The status of the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionsForJobListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionsForJobListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionsForJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ExecutionSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListJobExecutionsForJobResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListJobExecutionsForJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionsForJobListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionsForJobListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionsForThingListCmdlet">
            <summary>
            Lists the job executions for the specified thing.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionsForThingListCmdlet.Status">
            <summary>
            <para>
            <para>An optional filter that lets you search for jobs that have the specified status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionsForThingListCmdlet.ThingName">
            <summary>
            <para>
            <para>The thing name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionsForThingListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionsForThingListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionsForThingListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ExecutionSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListJobExecutionsForThingResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListJobExecutionsForThingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionsForThingListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobExecutionsForThingListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobListCmdlet">
            <summary>
            Lists jobs.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobListCmdlet.Status">
            <summary>
            <para>
            <para>An optional filter that lets you search for jobs that have the specified status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobListCmdlet.TargetSelection">
            <summary>
            <para>
            <para>Specifies whether the job will continue to run (CONTINUOUS), or will be complete after
            all those things specified as targets have completed the job (SNAPSHOT). If continuous,
            the job may also be run on a thing when a change is detected in a target. For example,
            a job will run on a thing when the thing is added to a target group, even after the
            job was completed by all things originally in the group. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobListCmdlet.ThingGroupId">
            <summary>
            <para>
            <para>A filter that limits the returned jobs to those for the specified group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobListCmdlet.ThingGroupName">
            <summary>
            <para>
            <para>A filter that limits the returned jobs to those for the specified group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Jobs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListJobsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTJobListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTLoggingOptionCmdlet">
            <summary>
            Gets the logging options.
            
             
            <para>
            NOTE: use of this command is not recommended. Use <code>GetV2LoggingOptions</code>
            instead.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTLoggingOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.GetLoggingOptionsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.GetLoggingOptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTMitigationActionCmdlet">
            <summary>
            Gets information about a mitigation action.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTMitigationActionCmdlet.ActionName">
            <summary>
            <para>
            <para>The friendly name that uniquely identifies the mitigation action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTMitigationActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeMitigationActionResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeMitigationActionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTMitigationActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ActionName parameter.
            The -PassThru parameter is deprecated, use -Select '^ActionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTMitigationActionListCmdlet">
            <summary>
            Gets a list of all mitigation actions that match the specified filter criteria.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTMitigationActionListCmdlet.ActionType">
            <summary>
            <para>
            <para>Specify a value to limit the result to mitigation actions with a specific action type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTMitigationActionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time. The default is 25.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTMitigationActionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTMitigationActionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ActionIdentifiers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListMitigationActionsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListMitigationActionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTMitigationActionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ActionType parameter.
            The -PassThru parameter is deprecated, use -Select '^ActionType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTOTAUpdateCmdlet">
            <summary>
            Gets an OTA update.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTOTAUpdateCmdlet.OtaUpdateId">
            <summary>
            <para>
            <para>The OTA update ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTOTAUpdateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OtaUpdateInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.GetOTAUpdateResponse).
            Specifying the name of a property of type Amazon.IoT.Model.GetOTAUpdateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTOTAUpdateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OtaUpdateId parameter.
            The -PassThru parameter is deprecated, use -Select '^OtaUpdateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTOTAUpdateListCmdlet">
            <summary>
            Lists OTA updates.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTOTAUpdateListCmdlet.OtaUpdateStatus">
            <summary>
            <para>
            <para>The OTA update job status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTOTAUpdateListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTOTAUpdateListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token used to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTOTAUpdateListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OtaUpdates'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListOTAUpdatesResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListOTAUpdatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTOTAUpdateListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTOutgoingCertificateCmdlet">
            <summary>
            Lists certificates that are being transferred but not yet accepted.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTOutgoingCertificateCmdlet.AscendingOrder">
            <summary>
            <para>
            <para>Specifies the order for results. If True, the results are returned in ascending order,
            based on the creation date.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTOutgoingCertificateCmdlet.Marker">
            <summary>
            <para>
            <para>The marker for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTOutgoingCertificateCmdlet.PageSize">
            <summary>
            <para>
            <para>The result page size.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTOutgoingCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OutgoingCertificates'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListOutgoingCertificatesResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListOutgoingCertificatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTOutgoingCertificateCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTPercentileCmdlet">
            <summary>
            Groups the aggregated values that match the query into percentile groupings. The default
            percentile groupings are: 1,5,25,50,75,95,99, although you can specify your own when
            you call <code>GetPercentiles</code>. This function returns a value for each percentile
            group specified (or the default percentile groupings). The percentile group "1" contains
            the aggregated field value that occurs in approximately one percent of the values
            that match the query. The percentile group "5" contains the aggregated field value
            that occurs in approximately five percent of the values that match the query, and
            so on. The result is an approximation, the more values that match the query, the more
            accurate the percentile values.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPercentileCmdlet.AggregationField">
            <summary>
            <para>
            <para>The field to aggregate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPercentileCmdlet.IndexName">
            <summary>
            <para>
            <para>The name of the index to search.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPercentileCmdlet.Percent">
            <summary>
            <para>
            <para>The percentile groups returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPercentileCmdlet.QueryString">
            <summary>
            <para>
            <para>The query string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPercentileCmdlet.QueryVersion">
            <summary>
            <para>
            <para>The query version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPercentileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Percentiles'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.GetPercentilesResponse).
            Specifying the name of a property of type Amazon.IoT.Model.GetPercentilesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPercentileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QueryString parameter.
            The -PassThru parameter is deprecated, use -Select '^QueryString' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyCmdlet">
            <summary>
            Gets information about the specified policy with the policy document of the default
            version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The name of the policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.GetPolicyResponse).
            Specifying the name of a property of type Amazon.IoT.Model.GetPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyName parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyListCmdlet">
            <summary>
            Lists your policies.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyListCmdlet.AscendingOrder">
            <summary>
            <para>
            <para>Specifies the order for results. If true, the results are returned in ascending creation
            order.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyListCmdlet.Marker">
            <summary>
            <para>
            <para>The marker for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyListCmdlet.PageSize">
            <summary>
            <para>
            <para>The result page size.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Policies'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListPoliciesResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListPoliciesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyPrincipalListCmdlet">
            <summary>
            Lists the principals associated with the specified policy.
            
             
            <para><b>Note:</b> This API is deprecated. Please use <a>ListTargetsForPolicy</a> instead.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.<br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyPrincipalListCmdlet.PolicyName">
            <summary>
            <para>
            <para>The policy name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyPrincipalListCmdlet.AscendingOrder">
            <summary>
            <para>
            <para>Specifies the order for results. If true, the results are returned in ascending creation
            order.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyPrincipalListCmdlet.Marker">
            <summary>
            <para>
            <para>The marker for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyPrincipalListCmdlet.PageSize">
            <summary>
            <para>
            <para>The result page size.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyPrincipalListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Principals'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListPolicyPrincipalsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListPolicyPrincipalsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyPrincipalListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyName parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyPrincipalListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyVersionCmdlet">
            <summary>
            Gets information about the specified policy version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyVersionCmdlet.PolicyName">
            <summary>
            <para>
            <para>The name of the policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyVersionCmdlet.PolicyVersionId">
            <summary>
            <para>
            <para>The policy version ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.GetPolicyVersionResponse).
            Specifying the name of a property of type Amazon.IoT.Model.GetPolicyVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyName parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyVersionListCmdlet">
            <summary>
            Lists the versions of the specified policy and identifies the default version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyVersionListCmdlet.PolicyName">
            <summary>
            <para>
            <para>The policy name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PolicyVersions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListPolicyVersionsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListPolicyVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPolicyVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyName parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTPrincipalPolicyListCmdlet">
            <summary>
            Lists the policies attached to the specified principal. If you use an Cognito identity,
            the ID must be in <a href="https://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html#API_GetCredentialsForIdentity_RequestSyntax">AmazonCognito
            Identity format</a>.
            
             
            <para><b>Note:</b> This API is deprecated. Please use <a>ListAttachedPolicies</a> instead.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.<br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPrincipalPolicyListCmdlet.Principal">
            <summary>
            <para>
            <para>The principal.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPrincipalPolicyListCmdlet.AscendingOrder">
            <summary>
            <para>
            <para>Specifies the order for results. If true, results are returned in ascending creation
            order.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPrincipalPolicyListCmdlet.Marker">
            <summary>
            <para>
            <para>The marker for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPrincipalPolicyListCmdlet.PageSize">
            <summary>
            <para>
            <para>The result page size.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPrincipalPolicyListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Policies'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListPrincipalPoliciesResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListPrincipalPoliciesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPrincipalPolicyListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Principal parameter.
            The -PassThru parameter is deprecated, use -Select '^Principal' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPrincipalPolicyListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTPrincipalThingListCmdlet">
            <summary>
            Lists the things associated with the specified principal. A principal can be X.509
            certificates, IAM users, groups, and roles, Amazon Cognito identities or federated
            identities.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPrincipalThingListCmdlet.Principal">
            <summary>
            <para>
            <para>The principal.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPrincipalThingListCmdlet.Marker">
            <summary>
            <para>
            <para>The token to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPrincipalThingListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in this operation.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPrincipalThingListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Things'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListPrincipalThingsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListPrincipalThingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPrincipalThingListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Principal parameter.
            The -PassThru parameter is deprecated, use -Select '^Principal' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTPrincipalThingListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateCmdlet">
            <summary>
            Returns information about a fleet provisioning template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateCmdlet.TemplateName">
            <summary>
            <para>
            <para>The name of the fleet provisioning template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeProvisioningTemplateResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeProvisioningTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateName parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateListCmdlet">
            <summary>
            Lists the fleet provisioning templates in your AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Templates'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListProvisioningTemplatesResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListProvisioningTemplatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateVersionCmdlet">
            <summary>
            Returns information about a fleet provisioning template version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateVersionCmdlet.TemplateName">
            <summary>
            <para>
            <para>The template name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateVersionCmdlet.VersionId">
            <summary>
            <para>
            <para>The fleet provisioning template version ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeProvisioningTemplateVersionResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeProvisioningTemplateVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VersionId parameter.
            The -PassThru parameter is deprecated, use -Select '^VersionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateVersionListCmdlet">
            <summary>
            A list of fleet provisioning template versions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateVersionListCmdlet.TemplateName">
            <summary>
            <para>
            <para>The name of the fleet provisioning template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateVersionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateVersionListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Versions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListProvisioningTemplateVersionsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListProvisioningTemplateVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateName parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTProvisioningTemplateVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTRegistrationCodeCmdlet">
            <summary>
            Gets a registration code used to register a CA certificate with AWS IoT.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTRegistrationCodeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RegistrationCode'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.GetRegistrationCodeResponse).
            Specifying the name of a property of type Amazon.IoT.Model.GetRegistrationCodeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTRoleAliasCmdlet">
            <summary>
            Describes a role alias.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTRoleAliasCmdlet.RoleAlias">
            <summary>
            <para>
            <para>The role alias to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTRoleAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RoleAliasDescription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeRoleAliasResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeRoleAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTRoleAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RoleAlias parameter.
            The -PassThru parameter is deprecated, use -Select '^RoleAlias' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTRoleAliasListCmdlet">
            <summary>
            Lists the role aliases registered in your account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTRoleAliasListCmdlet.AscendingOrder">
            <summary>
            <para>
            <para>Return the list of role aliases in ascending alphabetical order.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTRoleAliasListCmdlet.Marker">
            <summary>
            <para>
            <para>A marker used to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTRoleAliasListCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of results to return at one time.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTRoleAliasListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RoleAliases'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListRoleAliasesResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListRoleAliasesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTRoleAliasListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTScheduledAuditCmdlet">
            <summary>
            Gets information about a scheduled audit.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTScheduledAuditCmdlet.ScheduledAuditName">
            <summary>
            <para>
            <para>The name of the scheduled audit whose information you want to get.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTScheduledAuditCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeScheduledAuditResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeScheduledAuditResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTScheduledAuditCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScheduledAuditName parameter.
            The -PassThru parameter is deprecated, use -Select '^ScheduledAuditName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTScheduledAuditListCmdlet">
            <summary>
            Lists all of your scheduled audits.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTScheduledAuditListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time. The default is 25.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTScheduledAuditListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTScheduledAuditListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ScheduledAudits'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListScheduledAuditsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListScheduledAuditsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTScheduledAuditListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NextToken parameter.
            The -PassThru parameter is deprecated, use -Select '^NextToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTScheduledAuditListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTSecurityProfileCmdlet">
            <summary>
            Gets information about a Device Defender security profile.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTSecurityProfileCmdlet.SecurityProfileName">
            <summary>
            <para>
            <para>The name of the security profile whose information you want to get.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTSecurityProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeSecurityProfileResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeSecurityProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTSecurityProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecurityProfileName parameter.
            The -PassThru parameter is deprecated, use -Select '^SecurityProfileName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTSecurityProfileListCmdlet">
            <summary>
            Lists the Device Defender security profiles you have created. You can use filters
            to list only those security profiles associated with a thing group or only those associated
            with your account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTSecurityProfileListCmdlet.DimensionName">
            <summary>
            <para>
            <para>A filter to limit results to the security profiles that use the defined dimension.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTSecurityProfileListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTSecurityProfileListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTSecurityProfileListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SecurityProfileIdentifiers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListSecurityProfilesResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListSecurityProfilesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTSecurityProfileListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTSecurityProfilesForTargetListCmdlet">
            <summary>
            Lists the Device Defender security profiles attached to a target (thing group).<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTSecurityProfilesForTargetListCmdlet.Recursive">
            <summary>
            <para>
            <para>If true, return child groups too.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTSecurityProfilesForTargetListCmdlet.SecurityProfileTargetArn">
            <summary>
            <para>
            <para>The ARN of the target (thing group) whose attached security profiles you want to get.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTSecurityProfilesForTargetListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTSecurityProfilesForTargetListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTSecurityProfilesForTargetListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SecurityProfileTargetMappings'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListSecurityProfilesForTargetResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListSecurityProfilesForTargetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTSecurityProfilesForTargetListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecurityProfileTargetArn parameter.
            The -PassThru parameter is deprecated, use -Select '^SecurityProfileTargetArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTSecurityProfilesForTargetListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTStatisticCmdlet">
            <summary>
            Returns the count, average, sum, minimum, maximum, sum of squares, variance, and standard
            deviation for the specified aggregated field. If the aggregation field is of type
            <code>String</code>, only the count statistic is returned.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTStatisticCmdlet.AggregationField">
            <summary>
            <para>
            <para>The aggregation field name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTStatisticCmdlet.IndexName">
            <summary>
            <para>
            <para>The name of the index to search. The default value is <code>AWS_Things</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTStatisticCmdlet.QueryString">
            <summary>
            <para>
            <para>The query used to search. You can specify "*" for the query string to get the count
            of all indexed things in your AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTStatisticCmdlet.QueryVersion">
            <summary>
            <para>
            <para>The version of the query used to search.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTStatisticCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Statistics'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.GetStatisticsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.GetStatisticsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTStatisticCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QueryString parameter.
            The -PassThru parameter is deprecated, use -Select '^QueryString' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTStreamCmdlet">
            <summary>
            Gets information about a stream.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTStreamCmdlet.StreamId">
            <summary>
            <para>
            <para>The stream ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTStreamCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StreamInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeStreamResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeStreamResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTStreamCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamId parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTStreamListCmdlet">
            <summary>
            Lists all of the streams in your AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTStreamListCmdlet.AscendingOrder">
            <summary>
            <para>
            <para>Set to true to return the list of streams in ascending order.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTStreamListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at a time.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTStreamListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token used to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTStreamListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Streams'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListStreamsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListStreamsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTStreamListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTTagListForResourceCmdlet">
            <summary>
            Lists the tags (metadata) you have assigned to the resource.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTagListForResourceCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The ARN of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTagListForResourceCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTagListForResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTagListForResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTagListForResourceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTTargetsForPolicyListCmdlet">
            <summary>
            List targets for the specified policy.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTargetsForPolicyListCmdlet.PolicyName">
            <summary>
            <para>
            <para>The policy name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTargetsForPolicyListCmdlet.Marker">
            <summary>
            <para>
            <para>A marker used to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTargetsForPolicyListCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of results to return at one time.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTargetsForPolicyListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Targets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListTargetsForPolicyResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListTargetsForPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTargetsForPolicyListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTTargetsForSecurityProfileListCmdlet">
            <summary>
            Lists the targets (thing groups) associated with a given Device Defender security
            profile.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTargetsForSecurityProfileListCmdlet.SecurityProfileName">
            <summary>
            <para>
            <para>The security profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTargetsForSecurityProfileListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTargetsForSecurityProfileListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTargetsForSecurityProfileListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SecurityProfileTargets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListTargetsForSecurityProfileResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListTargetsForSecurityProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTargetsForSecurityProfileListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecurityProfileName parameter.
            The -PassThru parameter is deprecated, use -Select '^SecurityProfileName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTargetsForSecurityProfileListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTTaskListCmdlet">
            <summary>
            Lists the Device Defender audits that have been performed during a given time period.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTaskListCmdlet.UtcEndTime">
            <summary>
            <para>
            <para>The end of the time period.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTaskListCmdlet.UtcStartTime">
            <summary>
            <para>
            <para>The beginning of the time period. Audit information is retained for a limited time
            (180 days). Requesting a start time prior to what is retained results in an "InvalidRequestException".</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTaskListCmdlet.TaskStatus">
            <summary>
            <para>
            <para>A filter to limit the output to audits with the specified completion status: can be
            one of "IN_PROGRESS", "COMPLETED", "FAILED", or "CANCELED".</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTaskListCmdlet.TaskType">
            <summary>
            <para>
            <para>A filter to limit the output to the specified type of audit: can be one of "ON_DEMAND_AUDIT_TASK"
            or "SCHEDULED__AUDIT_TASK".</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTaskListCmdlet.EndTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc
            results in both EndTime and EndTimeUtc being assigned, the latest assignment to either
            one of the two property is reflected in the value of both. EndTime is provided for
            backwards compatibility only and assigning a non-Utc DateTime to it results in the
            wrong timestamp being passed to the service.</para><para>The end of the time period.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTaskListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time. The default is 25.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTaskListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTaskListCmdlet.StartTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or
            StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. StartTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The beginning of the time period. Audit information is retained for a limited time
            (180 days). Requesting a start time prior to what is retained results in an "InvalidRequestException".</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTaskListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tasks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListAuditTasksResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListAuditTasksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTaskListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingCmdlet">
            <summary>
            Gets information about the specified thing.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingCmdlet.ThingName">
            <summary>
            <para>
            <para>The name of the thing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeThingResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeThingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingGroupCmdlet">
            <summary>
            Describe a thing group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingGroupCmdlet.ThingGroupName">
            <summary>
            <para>
            <para>The name of the thing group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeThingGroupResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeThingGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingGroupListCmdlet">
            <summary>
            List the thing groups in your account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingGroupListCmdlet.NamePrefixFilter">
            <summary>
            <para>
            <para>A filter that limits the results to those with the specified name prefix.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingGroupListCmdlet.ParentGroup">
            <summary>
            <para>
            <para>A filter that limits the results to those with the specified parent group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingGroupListCmdlet.Recursive">
            <summary>
            <para>
            <para>If true, return child groups as well.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingGroupListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingGroupListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingGroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ThingGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListThingGroupsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListThingGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingGroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingGroupsForThingListCmdlet">
            <summary>
            List the thing groups to which the specified thing belongs.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingGroupsForThingListCmdlet.ThingName">
            <summary>
            <para>
            <para>The thing name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingGroupsForThingListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingGroupsForThingListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingGroupsForThingListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ThingGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListThingGroupsForThingResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListThingGroupsForThingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingGroupsForThingListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingListCmdlet">
            <summary>
            Lists your things. Use the <b>attributeName</b> and <b>attributeValue</b> parameters
            to filter your things. For example, calling <code>ListThings</code> with attributeName=Color
            and attributeValue=Red retrieves all things in the registry that contain an attribute
            <b>Color</b> with the value <b>Red</b>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingListCmdlet.AttributeName">
            <summary>
            <para>
            <para>The attribute name used to search for things.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingListCmdlet.AttributeValue">
            <summary>
            <para>
            <para>The attribute value used to search for things.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingListCmdlet.ThingTypeName">
            <summary>
            <para>
            <para>The name of the thing type used to search for things.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingListCmdlet.Marker">
            <summary>
            <para>
            <para>The token to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in this operation.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Things'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListThingsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListThingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingPrincipalListCmdlet">
            <summary>
            Lists the principals associated with the specified thing. A principal can be X.509
            certificates, IAM users, groups, and roles, Amazon Cognito identities or federated
            identities.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingPrincipalListCmdlet.ThingName">
            <summary>
            <para>
            <para>The name of the thing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingPrincipalListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Principals'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListThingPrincipalsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListThingPrincipalsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingPrincipalListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingRegistrationTaskCmdlet">
            <summary>
            Describes a bulk thing provisioning task.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingRegistrationTaskCmdlet.TaskId">
            <summary>
            <para>
            <para>The task ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingRegistrationTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeThingRegistrationTaskResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeThingRegistrationTaskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingRegistrationTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^TaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingRegistrationTaskListCmdlet">
            <summary>
            List bulk thing provisioning tasks.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingRegistrationTaskListCmdlet.Status">
            <summary>
            <para>
            <para>The status of the bulk thing provisioning task.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingRegistrationTaskListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingRegistrationTaskListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingRegistrationTaskListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TaskIds'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListThingRegistrationTasksResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListThingRegistrationTasksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingRegistrationTaskListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingRegistrationTaskReportListCmdlet">
            <summary>
            Information about the thing registration tasks.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingRegistrationTaskReportListCmdlet.ReportType">
            <summary>
            <para>
            <para>The type of task report.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingRegistrationTaskReportListCmdlet.TaskId">
            <summary>
            <para>
            <para>The id of the task.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingRegistrationTaskReportListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingRegistrationTaskReportListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingRegistrationTaskReportListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourceLinks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListThingRegistrationTaskReportsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListThingRegistrationTaskReportsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingRegistrationTaskReportListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingsInBillingGroupListCmdlet">
            <summary>
            Lists the things you have added to the given billing group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingsInBillingGroupListCmdlet.BillingGroupName">
            <summary>
            <para>
            <para>The name of the billing group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingsInBillingGroupListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingsInBillingGroupListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingsInBillingGroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Things'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListThingsInBillingGroupResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListThingsInBillingGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingsInBillingGroupListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BillingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^BillingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingsInBillingGroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingsInThingGroupListCmdlet">
            <summary>
            Lists the things in the specified group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingsInThingGroupListCmdlet.Recursive">
            <summary>
            <para>
            <para>When true, list things in this thing group and in all child groups as well.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingsInThingGroupListCmdlet.ThingGroupName">
            <summary>
            <para>
            <para>The thing group name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingsInThingGroupListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingsInThingGroupListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingsInThingGroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Things'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListThingsInThingGroupResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListThingsInThingGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingsInThingGroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingTypeCmdlet">
            <summary>
            Gets information about the specified thing type.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingTypeCmdlet.ThingTypeName">
            <summary>
            <para>
            <para>The name of the thing type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DescribeThingTypeResponse).
            Specifying the name of a property of type Amazon.IoT.Model.DescribeThingTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingTypeName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingTypeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingTypeListCmdlet">
            <summary>
            Lists the existing thing types.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingTypeListCmdlet.ThingTypeName">
            <summary>
            <para>
            <para>The name of the thing type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingTypeListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in this operation.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingTypeListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingTypeListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ThingTypes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListThingTypesResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListThingTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingTypeListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingTypeName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingTypeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTThingTypeListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleCmdlet">
            <summary>
            Gets information about the rule.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleCmdlet.RuleName">
            <summary>
            <para>
            <para>The name of the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.GetTopicRuleResponse).
            Specifying the name of a property of type Amazon.IoT.Model.GetTopicRuleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RuleName parameter.
            The -PassThru parameter is deprecated, use -Select '^RuleName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleDestinationCmdlet">
            <summary>
            Gets information about a topic rule destination.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleDestinationCmdlet.Arn">
            <summary>
            <para>
            <para>The ARN of the topic rule destination.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleDestinationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TopicRuleDestination'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.GetTopicRuleDestinationResponse).
            Specifying the name of a property of type Amazon.IoT.Model.GetTopicRuleDestinationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleDestinationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleDestinationListCmdlet">
            <summary>
            Lists all the topic rule destinations in your AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleDestinationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleDestinationListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleDestinationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DestinationSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListTopicRuleDestinationsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListTopicRuleDestinationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleDestinationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleListCmdlet">
            <summary>
            Lists the rules for the specific topic.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleListCmdlet.RuleDisabled">
            <summary>
            <para>
            <para>Specifies whether the rule is disabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleListCmdlet.Topic">
            <summary>
            <para>
            <para>The topic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleListCmdlet.Marker">
            <summary>
            <para>
            <para>A token used to retrieve the next value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Rules'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListTopicRulesResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListTopicRulesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Topic parameter.
            The -PassThru parameter is deprecated, use -Select '^Topic' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTTopicRuleListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTV2LoggingLevelListCmdlet">
            <summary>
            Lists logging levels.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTV2LoggingLevelListCmdlet.TargetType">
            <summary>
            <para>
            <para>The type of resource for which you are configuring logging. Must be <code>THING_Group</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTV2LoggingLevelListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTV2LoggingLevelListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token used to get the next set of results, or <b>null</b> if there are no additional
            results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTV2LoggingLevelListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LogTargetConfigurations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListV2LoggingLevelsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListV2LoggingLevelsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTV2LoggingLevelListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTV2LoggingOptionCmdlet">
            <summary>
            Gets the fine grained logging options.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTV2LoggingOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.GetV2LoggingOptionsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.GetV2LoggingOptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.GetIOTViolationEventListCmdlet">
            <summary>
            Lists the Device Defender security profile violations discovered during the given
            time period. You can use filters to limit the results to those alerts issued for a
            particular security profile, behavior, or thing (device).<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTViolationEventListCmdlet.UtcEndTime">
            <summary>
            <para>
            <para>The end time for the alerts to be listed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTViolationEventListCmdlet.SecurityProfileName">
            <summary>
            <para>
            <para>A filter to limit results to those alerts generated by the specified security profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTViolationEventListCmdlet.UtcStartTime">
            <summary>
            <para>
            <para>The start time for the alerts to be listed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTViolationEventListCmdlet.ThingName">
            <summary>
            <para>
            <para>A filter to limit results to those alerts caused by the specified thing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTViolationEventListCmdlet.EndTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc
            results in both EndTime and EndTimeUtc being assigned, the latest assignment to either
            one of the two property is reflected in the value of both. EndTime is provided for
            backwards compatibility only and assigning a non-Utc DateTime to it results in the
            wrong timestamp being passed to the service.</para><para>The end time for the alerts to be listed.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTViolationEventListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTViolationEventListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTViolationEventListCmdlet.StartTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or
            StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. StartTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The start time for the alerts to be listed.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTViolationEventListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ViolationEvents'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ListViolationEventsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ListViolationEventsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.GetIOTViolationEventListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.MountIOTSecurityProfileCmdlet">
            <summary>
            Associates a Device Defender security profile with a thing group or this account.
            Each thing group or account can have up to five security profiles associated with
            it.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.MountIOTSecurityProfileCmdlet.SecurityProfileName">
            <summary>
            <para>
            <para>The security profile that is attached.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.MountIOTSecurityProfileCmdlet.SecurityProfileTargetArn">
            <summary>
            <para>
            <para>The ARN of the target (thing group) to which the security profile is attached.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.MountIOTSecurityProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.AttachSecurityProfileResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.MountIOTSecurityProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecurityProfileName parameter.
            The -PassThru parameter is deprecated, use -Select '^SecurityProfileName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.MountIOTSecurityProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTAuthorizerCmdlet">
            <summary>
            Creates an authorizer.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTAuthorizerCmdlet.AuthorizerFunctionArn">
            <summary>
            <para>
            <para>The ARN of the authorizer's Lambda function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTAuthorizerCmdlet.AuthorizerName">
            <summary>
            <para>
            <para>The authorizer name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTAuthorizerCmdlet.SigningDisabled">
            <summary>
            <para>
            <para>Specifies whether AWS IoT validates the token signature in an authorization request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTAuthorizerCmdlet.Status">
            <summary>
            <para>
            <para>The status of the create authorizer request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTAuthorizerCmdlet.Tag">
            <summary>
            <para>
            <para>Metadata which can be used to manage the custom authorizer.</para><note><para>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</para><para>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</para><para>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTAuthorizerCmdlet.TokenKeyName">
            <summary>
            <para>
            <para>The name of the token key used to extract the token from the HTTP headers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTAuthorizerCmdlet.TokenSigningPublicKey">
            <summary>
            <para>
            <para>The public keys used to verify the digital signature returned by your custom authentication
            service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTAuthorizerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateAuthorizerResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateAuthorizerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTAuthorizerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AuthorizerName parameter.
            The -PassThru parameter is deprecated, use -Select '^AuthorizerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTAuthorizerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTBillingGroupCmdlet">
            <summary>
            Creates a billing group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTBillingGroupCmdlet.BillingGroupProperties_BillingGroupDescription">
            <summary>
            <para>
            <para>The description of the billing group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTBillingGroupCmdlet.BillingGroupName">
            <summary>
            <para>
            <para>The name you wish to give to the billing group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTBillingGroupCmdlet.Tag">
            <summary>
            <para>
            <para>Metadata which can be used to manage the billing group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTBillingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateBillingGroupResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateBillingGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTBillingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BillingGroupProperties_BillingGroupDescription parameter.
            The -PassThru parameter is deprecated, use -Select '^BillingGroupProperties_BillingGroupDescription' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTBillingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTCertificateFromCsrCmdlet">
            <summary>
            Creates an X.509 certificate using the specified certificate signing request.
            
             
            <para><b>Note:</b> The CSR must include a public key that is either an RSA key with a length
            of at least 2048 bits or an ECC key from NIST P-256 or NIST P-384 curves. 
            </para><para><b>Note:</b> Reusing the same certificate signing request (CSR) results in a distinct
            certificate.
            </para><para>
            You can create multiple certificates in a batch by creating a directory, copying multiple
            .csr files into that directory, and then specifying that directory on the command
            line. The following commands show how to create a batch of certificates given a batch
            of CSRs.
            </para><para>
            Assuming a set of CSRs are located inside of the directory my-csr-directory:
            </para><para>
            On Linux and OS X, the command is:
            </para><para>
            $ ls my-csr-directory/ | xargs -I {} aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/{}
            </para><para>
            This command lists all of the CSRs in my-csr-directory and pipes each CSR file name
            to the aws iot create-certificate-from-csr AWS CLI command to create a certificate
            for the corresponding CSR.
            </para><para>
            The aws iot create-certificate-from-csr part of the command can also be run in parallel
            to speed up the certificate creation process:
            </para><para>
            $ ls my-csr-directory/ | xargs -P 10 -I {} aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/{}
            </para><para>
            On Windows PowerShell, the command to create certificates for all CSRs in my-csr-directory
            is:
            </para><para>
            &gt; ls -Name my-csr-directory | %{aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/$_}
            </para><para>
            On a Windows command prompt, the command to create certificates for all CSRs in my-csr-directory
            is:
            </para><para>
            &gt; forfiles /p my-csr-directory /c "cmd /c aws iot create-certificate-from-csr --certificate-signing-request
            file://@path"
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTCertificateFromCsrCmdlet.CertificateSigningRequest">
            <summary>
            <para>
            <para>The certificate signing request (CSR).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTCertificateFromCsrCmdlet.SetAsActive">
            <summary>
            <para>
            <para>Specifies whether the certificate is active.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTCertificateFromCsrCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateCertificateFromCsrResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateCertificateFromCsrResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTDimensionCmdlet">
            <summary>
            Create a dimension that you can use to limit the scope of a metric used in a security
            profile for AWS IoT Device Defender. For example, using a <code>TOPIC_FILTER</code>
            dimension, you can narrow down the scope of the metric only to MQTT topics whose name
            match the pattern specified in the dimension.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDimensionCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Each dimension must have a unique client request token. If you try to create a new
            dimension with the same token as a dimension that already exists, an exception occurs.
            If you omit this value, AWS SDKs will automatically generate a unique client request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDimensionCmdlet.Name">
            <summary>
            <para>
            <para>A unique identifier for the dimension. Choose something that describes the type and
            value to make it easy to remember what it does.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDimensionCmdlet.StringValue">
            <summary>
            <para>
            <para>Specifies the value or list of values for the dimension. For <code>TOPIC_FILTER</code>
            dimensions, this is a pattern used to match the MQTT topic (for example, "admin/#").</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDimensionCmdlet.Tag">
            <summary>
            <para>
            <para>Metadata that can be used to manage the dimension.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDimensionCmdlet.Type">
            <summary>
            <para>
            <para>Specifies the type of dimension. Supported types: <code>TOPIC_FILTER.</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDimensionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateDimensionResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateDimensionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDimensionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTDomainConfigurationCmdlet">
            <summary>
            Creates a domain configuration.
            
             <note><para>
            The domain configuration feature is in public preview and is subject to change.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDomainConfigurationCmdlet.AuthorizerConfig_AllowAuthorizerOverride">
            <summary>
            <para>
            <para>A Boolean that specifies whether the domain configuration's authorization service
            can be overridden.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDomainConfigurationCmdlet.AuthorizerConfig_DefaultAuthorizerName">
            <summary>
            <para>
            <para>The name of the authorization service for a domain configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDomainConfigurationCmdlet.DomainConfigurationName">
            <summary>
            <para>
            <para>The name of the domain configuration. This value must be unique to a region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDomainConfigurationCmdlet.DomainName">
            <summary>
            <para>
            <para>The name of the domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDomainConfigurationCmdlet.ServerCertificateArn">
            <summary>
            <para>
            <para>The ARNs of the certificates that AWS IoT passes to the device during the TLS handshake.
            Currently you can specify only one certificate ARN. This value is not required for
            AWS-managed domains.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDomainConfigurationCmdlet.ServiceType">
            <summary>
            <para>
            <para>The type of service delivered by the endpoint.</para><note><para>AWS IoT Core currently supports only the <code>DATA</code> service type.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDomainConfigurationCmdlet.Tag">
            <summary>
            <para>
            <para>Metadata which can be used to manage the domain configuration.</para><note><para>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</para><para>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</para><para>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDomainConfigurationCmdlet.ValidationCertificateArn">
            <summary>
            <para>
            <para>The certificate used to validate the server certificate and prove domain name ownership.
            This certificate must be signed by a public certificate authority. This value is not
            required for AWS-managed domains.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDomainConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateDomainConfigurationResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateDomainConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDomainConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DomainConfigurationName parameter.
            The -PassThru parameter is deprecated, use -Select '^DomainConfigurationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDomainConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTDynamicThingGroupCmdlet">
            <summary>
            Creates a dynamic thing group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDynamicThingGroupCmdlet.ThingGroupProperties_AttributePayload">
            <summary>
            <para>
            <para>The thing group attributes in JSON format.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDynamicThingGroupCmdlet.IndexName">
            <summary>
            <para>
            <para>The dynamic thing group index name.</para><note><para>Currently one index is supported: "AWS_Things".</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDynamicThingGroupCmdlet.QueryString">
            <summary>
            <para>
            <para>The dynamic thing group search query string.</para><para>See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/query-syntax.html">Query
            Syntax</a> for information about query string syntax.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDynamicThingGroupCmdlet.QueryVersion">
            <summary>
            <para>
            <para>The dynamic thing group query version.</para><note><para>Currently one query version is supported: "2017-09-30". If not specified, the query
            version defaults to this value.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDynamicThingGroupCmdlet.Tag">
            <summary>
            <para>
            <para>Metadata which can be used to manage the dynamic thing group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDynamicThingGroupCmdlet.ThingGroupProperties_ThingGroupDescription">
            <summary>
            <para>
            <para>The thing group description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDynamicThingGroupCmdlet.ThingGroupName">
            <summary>
            <para>
            <para>The dynamic thing group name to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDynamicThingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateDynamicThingGroupResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateDynamicThingGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDynamicThingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTDynamicThingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTJobCmdlet">
            <summary>
            Creates a job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTJobCmdlet.AbortConfig_CriteriaList">
            <summary>
            <para>
            <para>The list of abort criteria to define rules to abort the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTJobCmdlet.Description">
            <summary>
            <para>
            <para>A short text description of the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTJobCmdlet.Document">
            <summary>
            <para>
            <para>The job document.</para><note><para>If the job document resides in an S3 bucket, you must use a placeholder link when
            specifying the document.</para><para>The placeholder link is of the following form:</para><para><code>${aws:iot:s3-presigned-url:https://s3.amazonaws.com/<i>bucket</i>/<i>key</i>}</code></para><para>where <i>bucket</i> is your bucket name and <i>key</i> is the object in the bucket
            to which you are linking.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTJobCmdlet.DocumentSource">
            <summary>
            <para>
            <para>An S3 link to the job document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTJobCmdlet.PresignedUrlConfig_ExpiresInSec">
            <summary>
            <para>
            <para>How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default
            value is 3600 seconds. Pre-signed URLs are generated when Jobs receives an MQTT request
            for the job document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTJobCmdlet.JobExecutionsRolloutConfig_ExponentialRate">
            <summary>
            <para>
            <para>The rate of increase for a job rollout. This parameter allows you to define an exponential
            rate for a job rollout.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTJobCmdlet.TimeoutConfig_InProgressTimeoutInMinute">
            <summary>
            <para>
            <para>Specifies the amount of time, in minutes, this device has to finish execution of this
            job. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080
            minutes). The in progress timer can't be updated and will apply to all job executions
            for the job. Whenever a job execution remains in the IN_PROGRESS status for longer
            than this interval, the job execution will fail and switch to the terminal <code>TIMED_OUT</code>
            status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTJobCmdlet.JobId">
            <summary>
            <para>
            <para>A job identifier which must be unique for your AWS account. We recommend using a UUID.
            Alpha-numeric characters, "-" and "_" are valid for use here.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTJobCmdlet.JobExecutionsRolloutConfig_MaximumPerMinute">
            <summary>
            <para>
            <para>The maximum number of things that will be notified of a pending job, per minute. This
            parameter allows you to create a staged rollout.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTJobCmdlet.PresignedUrlConfig_RoleArn">
            <summary>
            <para>
            <para>The ARN of an IAM role that grants grants permission to download files from the S3
            bucket where the job data/updates are stored. The role must also grant permission
            for IoT to download the files.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTJobCmdlet.Tag">
            <summary>
            <para>
            <para>Metadata which can be used to manage the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTJobCmdlet.Target">
            <summary>
            <para>
            <para>A list of things and thing groups to which the job should be sent.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTJobCmdlet.TargetSelection">
            <summary>
            <para>
            <para>Specifies whether the job will continue to run (CONTINUOUS), or will be complete after
            all those things specified as targets have completed the job (SNAPSHOT). If continuous,
            the job may also be run on a thing when a change is detected in a target. For example,
            a job will run on a thing when the thing is added to a target group, even after the
            job was completed by all things originally in the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateJobResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTKeysAndCertificateCmdlet">
            <summary>
            Creates a 2048-bit RSA key pair and issues an X.509 certificate using the issued public
            key. You can also call <code>CreateKeysAndCertificate</code> over MQTT from a device,
            for more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/provision-wo-cert.html#provision-mqtt-api">Provisioning
            MQTT API</a>.
            
             
            <para><b>Note</b> This is the only time AWS IoT issues the private key for this certificate,
            so it is important to keep it in a secure location.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTKeysAndCertificateCmdlet.SetAsActive">
            <summary>
            <para>
            <para>Specifies whether the certificate is active.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTKeysAndCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateKeysAndCertificateResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateKeysAndCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTKeysAndCertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTMitigationActionCmdlet">
            <summary>
            Defines an action that can be applied to audit findings by using StartAuditMitigationActionsTask.
            Each mitigation action can apply only one type of change.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTMitigationActionCmdlet.UpdateCACertificateParams_Action">
            <summary>
            <para>
            <para>The action that you want to apply to the CA cerrtificate. The only supported value
            is <code>DEACTIVATE</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTMitigationActionCmdlet.UpdateDeviceCertificateParams_Action">
            <summary>
            <para>
            <para>The action that you want to apply to the device cerrtificate. The only supported value
            is <code>DEACTIVATE</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTMitigationActionCmdlet.ActionName">
            <summary>
            <para>
            <para>A friendly name for the action. Choose a friendly name that accurately describes the
            action (for example, <code>EnableLoggingAction</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTMitigationActionCmdlet.EnableIoTLoggingParams_LogLevel">
            <summary>
            <para>
            <para>Specifies the types of information to be logged.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTMitigationActionCmdlet.AddThingsToThingGroupParams_OverrideDynamicGroup">
            <summary>
            <para>
            <para>Specifies if this mitigation action can move the things that triggered the mitigation
            action even if they are part of one or more dynamic things groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTMitigationActionCmdlet.RoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that is used to apply the mitigation action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTMitigationActionCmdlet.EnableIoTLoggingParams_RoleArnForLogging">
            <summary>
            <para>
            <para>The ARN of the IAM role used for logging.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTMitigationActionCmdlet.Tag">
            <summary>
            <para>
            <para>Metadata that can be used to manage the mitigation action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTMitigationActionCmdlet.ReplaceDefaultPolicyVersionParams_TemplateName">
            <summary>
            <para>
            <para>The name of the template to be applied. The only supported value is <code>BLANK_POLICY</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTMitigationActionCmdlet.AddThingsToThingGroupParams_ThingGroupName">
            <summary>
            <para>
            <para>The list of groups to which you want to add the things that triggered the mitigation
            action. You can add a thing to a maximum of 10 groups, but you cannot add a thing
            to more than one group in the same hierarchy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTMitigationActionCmdlet.PublishFindingToSnsParams_TopicArn">
            <summary>
            <para>
            <para>The ARN of the topic to which you want to publish the findings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTMitigationActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateMitigationActionResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateMitigationActionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTMitigationActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ActionName parameter.
            The -PassThru parameter is deprecated, use -Select '^ActionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTMitigationActionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTOTAUpdateCmdlet">
            <summary>
            Creates an AWS IoT OTAUpdate on a target group of things or groups.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTOTAUpdateCmdlet.AdditionalParameter">
            <summary>
            <para>
            <para>A list of additional OTA update parameters which are name-value pairs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTOTAUpdateCmdlet.Description">
            <summary>
            <para>
            <para>The description of the OTA update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTOTAUpdateCmdlet.AwsJobPresignedUrlConfig_ExpiresInSec">
            <summary>
            <para>
            <para>How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default
            value is 1800 seconds. Pre-signed URLs are generated when a request for the job document
            is received.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTOTAUpdateCmdlet.File">
            <summary>
            <para>
            <para>The files to be streamed by the OTA update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTOTAUpdateCmdlet.AwsJobExecutionsRolloutConfig_MaximumPerMinute">
            <summary>
            <para>
            <para>The maximum number of OTA update job executions started per minute.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTOTAUpdateCmdlet.OtaUpdateId">
            <summary>
            <para>
            <para>The ID of the OTA update to be created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTOTAUpdateCmdlet.Protocol">
            <summary>
            <para>
            <para>The protocol used to transfer the OTA update image. Valid values are [HTTP], [MQTT],
            [HTTP, MQTT]. When both HTTP and MQTT are specified, the target device can choose
            the protocol.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTOTAUpdateCmdlet.RoleArn">
            <summary>
            <para>
            <para>The IAM role that allows access to the AWS IoT Jobs service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTOTAUpdateCmdlet.Tag">
            <summary>
            <para>
            <para>Metadata which can be used to manage updates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTOTAUpdateCmdlet.Target">
            <summary>
            <para>
            <para>The targeted devices to receive OTA updates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTOTAUpdateCmdlet.TargetSelection">
            <summary>
            <para>
            <para>Specifies whether the update will continue to run (CONTINUOUS), or will be complete
            after all the things specified as targets have completed the update (SNAPSHOT). If
            continuous, the update may also be run on a thing when a change is detected in a target.
            For example, an update will run on a thing when the thing is added to a target group,
            even after the update was completed by all things originally in the group. Valid values:
            CONTINUOUS | SNAPSHOT.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTOTAUpdateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateOTAUpdateResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateOTAUpdateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTOTAUpdateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OtaUpdateId parameter.
            The -PassThru parameter is deprecated, use -Select '^OtaUpdateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTOTAUpdateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTPolicyCmdlet">
            <summary>
            Creates an AWS IoT policy.
            
             
            <para>
            The created policy is the default version for the policy. This operation creates a
            policy version with a version identifier of <b>1</b> and sets <b>1</b> as the policy's
            default version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTPolicyCmdlet.PolicyDocument">
            <summary>
            <para>
            <para>The JSON document that describes the policy. <b>policyDocument</b> must have a minimum
            length of 1, with a maximum length of 2048, excluding whitespace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The policy name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTPolicyCmdlet.Tag">
            <summary>
            <para>
            <para>Metadata which can be used to manage the policy.</para><note><para>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</para><para>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</para><para>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreatePolicyResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreatePolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTPolicyVersionCmdlet">
            <summary>
            Creates a new version of the specified AWS IoT policy. To update a policy, create
            a new policy version. A managed policy can have up to five versions. If the policy
            has five versions, you must use <a>DeletePolicyVersion</a> to delete an existing version
            before you create a new one.
            
             
            <para>
            Optionally, you can set the new version as the policy's default version. The default
            version is the operative version (that is, the version that is in effect for the certificates
            to which the policy is attached).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTPolicyVersionCmdlet.PolicyDocument">
            <summary>
            <para>
            <para>The JSON document that describes the policy. Minimum length of 1. Maximum length of
            2048, excluding whitespace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTPolicyVersionCmdlet.PolicyName">
            <summary>
            <para>
            <para>The policy name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTPolicyVersionCmdlet.SetAsDefault">
            <summary>
            <para>
            <para>Specifies whether the policy version is set as the default. When this parameter is
            true, the new policy version becomes the operative version (that is, the version that
            is in effect for the certificates to which the policy is attached).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTPolicyVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreatePolicyVersionResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreatePolicyVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTPolicyVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyName parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTPolicyVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningClaimCmdlet">
            <summary>
            Creates a provisioning claim.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningClaimCmdlet.TemplateName">
            <summary>
            <para>
            <para>The name of the provisioning template to use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningClaimCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateProvisioningClaimResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateProvisioningClaimResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningClaimCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateName parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningClaimCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningTemplateCmdlet">
            <summary>
            Creates a fleet provisioning template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningTemplateCmdlet.Description">
            <summary>
            <para>
            <para>The description of the fleet provisioning template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningTemplateCmdlet.Enabled">
            <summary>
            <para>
            <para>True to enable the fleet provisioning template, otherwise false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningTemplateCmdlet.PreProvisioningHook_PayloadVersion">
            <summary>
            <para>
            <para>The payload that was sent to the target function.</para><para><i>Note:</i> Only Lambda functions are currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningTemplateCmdlet.ProvisioningRoleArn">
            <summary>
            <para>
            <para>The role ARN for the role associated with the fleet provisioning template. This IoT
            role grants permission to provision a device.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningTemplateCmdlet.Tag">
            <summary>
            <para>
            <para>Metadata which can be used to manage the fleet provisioning template.</para><note><para>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</para><para>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</para><para>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningTemplateCmdlet.PreProvisioningHook_TargetArn">
            <summary>
            <para>
            <para>The ARN of the target function.</para><para><i>Note:</i> Only Lambda functions are currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningTemplateCmdlet.TemplateBody">
            <summary>
            <para>
            <para>The JSON formatted contents of the fleet provisioning template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningTemplateCmdlet.TemplateName">
            <summary>
            <para>
            <para>The name of the fleet provisioning template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateProvisioningTemplateResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateProvisioningTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateBody parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateBody' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningTemplateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningTemplateVersionCmdlet">
            <summary>
            Creates a new version of a fleet provisioning template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningTemplateVersionCmdlet.SetAsDefault">
            <summary>
            <para>
            <para>Sets a fleet provision template version as the default version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningTemplateVersionCmdlet.TemplateBody">
            <summary>
            <para>
            <para>The JSON formatted contents of the fleet provisioning template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningTemplateVersionCmdlet.TemplateName">
            <summary>
            <para>
            <para>The name of the fleet provisioning template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningTemplateVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateProvisioningTemplateVersionResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateProvisioningTemplateVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningTemplateVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateBody parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateBody' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTProvisioningTemplateVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTRoleAliasCmdlet">
            <summary>
            Creates a role alias.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTRoleAliasCmdlet.CredentialDurationSecond">
            <summary>
            <para>
            <para>How long (in seconds) the credentials will be valid.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTRoleAliasCmdlet.RoleAlias">
            <summary>
            <para>
            <para>The role alias that points to a role ARN. This allows you to change the role without
            having to update the device.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTRoleAliasCmdlet.RoleArn">
            <summary>
            <para>
            <para>The role ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTRoleAliasCmdlet.Tag">
            <summary>
            <para>
            <para>Metadata which can be used to manage the role alias.</para><note><para>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</para><para>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</para><para>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTRoleAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateRoleAliasResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateRoleAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTRoleAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RoleArn parameter.
            The -PassThru parameter is deprecated, use -Select '^RoleArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTRoleAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTScheduledAuditCmdlet">
            <summary>
            Creates a scheduled audit that is run at a specified time interval.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTScheduledAuditCmdlet.DayOfMonth">
            <summary>
            <para>
            <para>The day of the month on which the scheduled audit takes place. Can be "1" through
            "31" or "LAST". This field is required if the "frequency" parameter is set to "MONTHLY".
            If days 29-31 are specified, and the month does not have that many days, the audit
            takes place on the "LAST" day of the month.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTScheduledAuditCmdlet.DayOfWeek">
            <summary>
            <para>
            <para>The day of the week on which the scheduled audit takes place. Can be one of "SUN",
            "MON", "TUE", "WED", "THU", "FRI", or "SAT". This field is required if the "frequency"
            parameter is set to "WEEKLY" or "BIWEEKLY".</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTScheduledAuditCmdlet.Frequency">
            <summary>
            <para>
            <para>How often the scheduled audit takes place. Can be one of "DAILY", "WEEKLY", "BIWEEKLY"
            or "MONTHLY". The start time of each audit is determined by the system.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTScheduledAuditCmdlet.ScheduledAuditName">
            <summary>
            <para>
            <para>The name you want to give to the scheduled audit. (Max. 128 chars)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTScheduledAuditCmdlet.Tag">
            <summary>
            <para>
            <para>Metadata that can be used to manage the scheduled audit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTScheduledAuditCmdlet.TargetCheckName">
            <summary>
            <para>
            <para>Which checks are performed during the scheduled audit. Checks must be enabled for
            your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list
            of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code>
            to select which checks are enabled.)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTScheduledAuditCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ScheduledAuditArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateScheduledAuditResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateScheduledAuditResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTScheduledAuditCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTSecurityProfileCmdlet">
            <summary>
            Creates a Device Defender security profile.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTSecurityProfileCmdlet.AdditionalMetricsToRetainV2">
            <summary>
            <para>
            <para>A list of metrics whose data is retained (stored). By default, data is retained for
            any metric used in the profile's <code>behaviors</code>, but it is also retained for
            any metric specified here.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTSecurityProfileCmdlet.AlertTarget">
            <summary>
            <para>
            <para>Specifies the destinations to which alerts are sent. (Alerts are always sent to the
            console.) Alerts are generated when a device (thing) violates a behavior.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTSecurityProfileCmdlet.Behavior">
            <summary>
            <para>
            <para>Specifies the behaviors that, when violated by a device (thing), cause an alert.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTSecurityProfileCmdlet.SecurityProfileDescription">
            <summary>
            <para>
            <para>A description of the security profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTSecurityProfileCmdlet.SecurityProfileName">
            <summary>
            <para>
            <para>The name you are giving to the security profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTSecurityProfileCmdlet.Tag">
            <summary>
            <para>
            <para>Metadata that can be used to manage the security profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTSecurityProfileCmdlet.AdditionalMetricsToRetain">
            <summary>
            <para>
            <para>A list of metrics whose data is retained (stored). By default, data is retained for
            any metric used in the profile's <code>behaviors</code>, but it is also retained for
            any metric specified here.</para><para><b>Note:</b> This API field is deprecated. Please use <a>CreateSecurityProfileRequest$additionalMetricsToRetainV2</a>
            instead.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTSecurityProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateSecurityProfileResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateSecurityProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTSecurityProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTStreamCmdlet">
            <summary>
            Creates a stream for delivering one or more large files in chunks over MQTT. A stream
            transports data bytes in chunks or blocks packaged as MQTT messages from a source
            like S3. You can have one or more files associated with a stream.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTStreamCmdlet.Description">
            <summary>
            <para>
            <para>A description of the stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTStreamCmdlet.File">
            <summary>
            <para>
            <para>The files to stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTStreamCmdlet.RoleArn">
            <summary>
            <para>
            <para>An IAM role that allows the IoT service principal assumes to access your S3 files.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTStreamCmdlet.StreamId">
            <summary>
            <para>
            <para>The stream ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTStreamCmdlet.Tag">
            <summary>
            <para>
            <para>Metadata which can be used to manage streams.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTStreamCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateStreamResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateStreamResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTStreamCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamId parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTStreamCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingCmdlet">
            <summary>
            Creates a thing record in the registry. If this call is made multiple times using
            the same thing name and configuration, the call will succeed. If this call is made
            with the same thing name but different configuration a <code>ResourceAlreadyExistsException</code>
            is thrown.
            
             <note><para>
            This is a control plane operation. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-authorization.html">Authorization</a>
            for information about authorizing control plane actions.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingCmdlet.AttributePayload">
            <summary>
            <para>
            <para>The attribute payload, which consists of up to three name/value pairs in a JSON document.
            For example:</para><para><code>{\"attributes\":{\"string1\":\"string2\"}}</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingCmdlet.BillingGroupName">
            <summary>
            <para>
            <para>The name of the billing group the thing will be added to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingCmdlet.ThingName">
            <summary>
            <para>
            <para>The name of the thing to create.</para><para>You can't change a thing's name after you create it. To change a thing's name, you
            must create a new thing, give it the new name, and then delete the old thing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingCmdlet.ThingTypeName">
            <summary>
            <para>
            <para>The name of the thing type associated with the new thing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateThingResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateThingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingGroupCmdlet">
            <summary>
            Create a thing group.
            
             <note><para>
            This is a control plane operation. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-authorization.html">Authorization</a>
            for information about authorizing control plane actions.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingGroupCmdlet.ThingGroupProperties_AttributePayload">
            <summary>
            <para>
            <para>The thing group attributes in JSON format.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingGroupCmdlet.ParentGroupName">
            <summary>
            <para>
            <para>The name of the parent thing group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingGroupCmdlet.Tag">
            <summary>
            <para>
            <para>Metadata which can be used to manage the thing group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingGroupCmdlet.ThingGroupProperties_ThingGroupDescription">
            <summary>
            <para>
            <para>The thing group description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingGroupCmdlet.ThingGroupName">
            <summary>
            <para>
            <para>The thing group name to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateThingGroupResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateThingGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingTypeCmdlet">
            <summary>
            Creates a new thing type.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingTypeCmdlet.ThingTypeProperties_SearchableAttribute">
            <summary>
            <para>
            <para>A list of searchable thing attribute names.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingTypeCmdlet.Tag">
            <summary>
            <para>
            <para>Metadata which can be used to manage the thing type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingTypeCmdlet.ThingTypeProperties_ThingTypeDescription">
            <summary>
            <para>
            <para>The description of the thing type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingTypeCmdlet.ThingTypeName">
            <summary>
            <para>
            <para>The name of the thing type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateThingTypeResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateThingTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingTypeName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingTypeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTThingTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet">
            <summary>
            Creates a rule. Creating rules is an administrator-level action. Any user who has
            permission to create rules will be able to access data processed by the rule.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.TopicRulePayload_Action">
            <summary>
            <para>
            <para>The actions associated with the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.CloudwatchAlarm_AlarmName">
            <summary>
            <para>
            <para>The CloudWatch alarm name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.TopicRulePayload_AwsIotSqlVersion">
            <summary>
            <para>
            <para>The version of the SQL rules engine to use when evaluating the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.S3_BucketName">
            <summary>
            <para>
            <para>The Amazon S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.S3_CannedAcl">
            <summary>
            <para>
            <para>The Amazon S3 canned ACL that controls access to the object identified by the object
            key. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl">S3
            canned ACLs</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.IotAnalytics_ChannelArn">
            <summary>
            <para>
            <para>(deprecated) The ARN of the IoT Analytics channel to which message data will be sent.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.IotAnalytics_ChannelName">
            <summary>
            <para>
            <para>The name of the IoT Analytics channel to which message data will be sent.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Http_ConfirmationUrl">
            <summary>
            <para>
            <para>The URL to which AWS IoT sends a confirmation message. The value of the confirmation
            URL must be a prefix of the endpoint URL. If you do not specify a confirmation URL
            AWS IoT uses the endpoint URL as the confirmation URL. If you use substitution templates
            in the confirmationUrl, you must create and enable topic rule destinations that match
            each possible value of the substitution template before traffic is allowed to your
            endpoint URL.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Firehose_DeliveryStreamName">
            <summary>
            <para>
            <para>The delivery stream name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.TopicRulePayload_Description">
            <summary>
            <para>
            <para>The description of the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Elasticsearch_Endpoint">
            <summary>
            <para>
            <para>The endpoint of your Elasticsearch domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.StepFunctions_ExecutionNamePrefix">
            <summary>
            <para>
            <para>(Optional) A name will be given to the state machine execution consisting of this
            prefix followed by a UUID. Step Functions automatically creates a unique name for
            each state machine execution if one is not provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Lambda_FunctionArn">
            <summary>
            <para>
            <para>The ARN of the Lambda function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.DynamoDB_HashKeyField">
            <summary>
            <para>
            <para>The hash key name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.DynamoDB_HashKeyType">
            <summary>
            <para>
            <para>The hash key type. Valid values are "STRING" or "NUMBER"</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.DynamoDB_HashKeyValue">
            <summary>
            <para>
            <para>The hash key value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Http_Header">
            <summary>
            <para>
            <para>The HTTP headers to send with the message data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Elasticsearch_Id">
            <summary>
            <para>
            <para>The unique identifier for the document you are storing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Elasticsearch_Index">
            <summary>
            <para>
            <para>The Elasticsearch index where you want to store your data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.IotEvents_InputName">
            <summary>
            <para>
            <para>The name of the AWS IoT Events input.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.S3_Key">
            <summary>
            <para>
            <para>The object key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.CloudwatchLogs_LogGroupName">
            <summary>
            <para>
            <para>The CloudWatch log group to which the action sends data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Sns_MessageFormat">
            <summary>
            <para>
            <para>(Optional) The message format of the message to publish. Accepted values are "JSON"
            and "RAW". The default value of the attribute is "RAW". SNS uses this setting to determine
            if the payload should be parsed and relevant platform-specific bits of the payload
            should be extracted. To read more about SNS message formats, see <a href="https://docs.aws.amazon.com/sns/latest/dg/json-formats.html">https://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a>
            refer to their official documentation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.IotEvents_MessageId">
            <summary>
            <para>
            <para>[Optional] Use this to ensure that only one input (message) with a given messageId
            will be processed by an AWS IoT Events detector.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.CloudwatchMetric_MetricName">
            <summary>
            <para>
            <para>The CloudWatch metric name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.CloudwatchMetric_MetricNamespace">
            <summary>
            <para>
            <para>The CloudWatch metric namespace name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.CloudwatchMetric_MetricTimestamp">
            <summary>
            <para>
            <para>An optional <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp">Unix
            timestamp</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.CloudwatchMetric_MetricUnit">
            <summary>
            <para>
            <para>The <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit">metric
            unit</a> supported by CloudWatch.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.CloudwatchMetric_MetricValue">
            <summary>
            <para>
            <para>The CloudWatch metric value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.DynamoDB_Operation">
            <summary>
            <para>
            <para>The type of operation to be performed. This follows the substitution template, so
            it can be <code>${operation}</code>, but the substitution must result in one of the
            following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Kinesis_PartitionKey">
            <summary>
            <para>
            <para>The partition key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.DynamoDB_PayloadField">
            <summary>
            <para>
            <para>The action payload. This name can be customized.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.IotSiteWise_PutAssetPropertyValueEntry">
            <summary>
            <para>
            <para>A list of asset property value entries.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Republish_Qo">
            <summary>
            <para>
            <para>The Quality of Service (QoS) level to use when republishing messages. The default
            value is 0.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Sqs_QueueUrl">
            <summary>
            <para>
            <para>The URL of the Amazon SQS queue.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.DynamoDB_RangeKeyField">
            <summary>
            <para>
            <para>The range key name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.DynamoDB_RangeKeyType">
            <summary>
            <para>
            <para>The range key type. Valid values are "STRING" or "NUMBER"</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.DynamoDB_RangeKeyValue">
            <summary>
            <para>
            <para>The range key value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.CloudwatchAlarm_RoleArn">
            <summary>
            <para>
            <para>The IAM role that allows access to the CloudWatch alarm.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.CloudwatchLogs_RoleArn">
            <summary>
            <para>
            <para>The IAM role that allows access to the CloudWatch log.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.CloudwatchMetric_RoleArn">
            <summary>
            <para>
            <para>The IAM role that allows access to the CloudWatch metric.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.DynamoDB_RoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that grants access to the DynamoDB table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.DynamoDBv2_RoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that grants access to the DynamoDB table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Elasticsearch_RoleArn">
            <summary>
            <para>
            <para>The IAM role ARN that has access to Elasticsearch.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Firehose_RoleArn">
            <summary>
            <para>
            <para>The IAM role that grants access to the Amazon Kinesis Firehose stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Sigv4_RoleArn">
            <summary>
            <para>
            <para>The ARN of the signing role.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.IotAnalytics_RoleArn">
            <summary>
            <para>
            <para>The ARN of the role which has a policy that grants IoT Analytics permission to send
            message data via IoT Analytics (iotanalytics:BatchPutMessage).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.IotEvents_RoleArn">
            <summary>
            <para>
            <para>The ARN of the role that grants AWS IoT permission to send an input to an AWS IoT
            Events detector. ("Action":"iotevents:BatchPutMessage").</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.IotSiteWise_RoleArn">
            <summary>
            <para>
            <para>The ARN of the role that grants AWS IoT permission to send an asset property value
            to AWS IoTSiteWise. (<code>"Action": "iotsitewise:BatchPutAssetPropertyValue"</code>).
            The trust policy can restrict access to specific asset hierarchy paths.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Kinesis_RoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Republish_RoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that grants access.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.S3_RoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that grants access.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Sns_RoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that grants access.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Sqs_RoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that grants access.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.StepFunctions_RoleArn">
            <summary>
            <para>
            <para>The ARN of the role that grants IoT permission to start execution of a state machine
            ("Action":"states:StartExecution").</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.TopicRulePayload_RuleDisabled">
            <summary>
            <para>
            <para>Specifies whether the rule is disabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.RuleName">
            <summary>
            <para>
            <para>The name of the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Firehose_Separator">
            <summary>
            <para>
            <para>A character separator that will be used to separate records written to the Firehose
            stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ','
            (comma).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Sigv4_ServiceName">
            <summary>
            <para>
            <para>The service name to use while signing with Sig V4.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Sigv4_SigningRegion">
            <summary>
            <para>
            <para>The signing region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.TopicRulePayload_Sql">
            <summary>
            <para>
            <para>The SQL statement used to query the topic. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference">AWS
            IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.StepFunctions_StateMachineName">
            <summary>
            <para>
            <para>The name of the Step Functions state machine whose execution will be started.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.CloudwatchAlarm_StateReason">
            <summary>
            <para>
            <para>The reason for the alarm change.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.CloudwatchAlarm_StateValue">
            <summary>
            <para>
            <para>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Kinesis_StreamName">
            <summary>
            <para>
            <para>The name of the Amazon Kinesis stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.DynamoDB_TableName">
            <summary>
            <para>
            <para>The name of the DynamoDB table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.PutItem_TableName">
            <summary>
            <para>
            <para>The table where the message data will be written.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Tag">
            <summary>
            <para>
            <para>Metadata which can be used to manage the topic rule.</para><note><para>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</para><para>For the CLI command-line parameter use format: --tags "key1=value1&amp;key2=value2..."</para><para>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Sns_TargetArn">
            <summary>
            <para>
            <para>The ARN of the SNS topic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Salesforce_Token">
            <summary>
            <para>
            <para>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The
            token is available from the Salesforce IoT Cloud platform after creation of the Input
            Stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Republish_Topic">
            <summary>
            <para>
            <para>The name of the MQTT topic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Elasticsearch_Type">
            <summary>
            <para>
            <para>The type of document you are storing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Http_Url">
            <summary>
            <para>
            <para>The endpoint URL. If substitution templates are used in the URL, you must also specify
            a <code>confirmationUrl</code>. If this is a new destination, a new <code>TopicRuleDestination</code>
            is created if possible.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Salesforce_Url">
            <summary>
            <para>
            <para>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from
            the Salesforce IoT Cloud platform after creation of the Input Stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Sqs_UseBase64">
            <summary>
            <para>
            <para>Specifies whether to use Base64 encoding.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateTopicRuleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleDestinationCmdlet">
            <summary>
            Creates a topic rule destination. The destination must be confirmed prior to use.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleDestinationCmdlet.HttpUrlConfiguration_ConfirmationUrl">
            <summary>
            <para>
            <para>The URL AWS IoT uses to confirm ownership of or access to the topic rule destination
            URL.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleDestinationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TopicRuleDestination'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CreateTopicRuleDestinationResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CreateTopicRuleDestinationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleDestinationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HttpUrlConfiguration_ConfirmationUrl parameter.
            The -PassThru parameter is deprecated, use -Select '^HttpUrlConfiguration_ConfirmationUrl' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.NewIOTTopicRuleDestinationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCACertificateCmdlet">
            <summary>
            Registers a CA certificate with AWS IoT. This CA certificate can then be used to sign
            device certificates, which can be then registered with AWS IoT. You can register up
            to 10 CA certificates per AWS account that have the same subject field. This enables
            you to have up to 10 certificate authorities sign your device certificates. If you
            have more than one CA certificate registered, make sure you pass the CA certificate
            when you register your device certificates with the RegisterCertificate API.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCACertificateCmdlet.AllowAutoRegistration">
            <summary>
            <para>
            <para>Allows this CA certificate to be used for auto registration of device certificates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCACertificateCmdlet.CaCertificate">
            <summary>
            <para>
            <para>The CA certificate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCACertificateCmdlet.RegistrationConfig_RoleArn">
            <summary>
            <para>
            <para>The ARN of the role.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCACertificateCmdlet.SetAsActive">
            <summary>
            <para>
            <para>A boolean value that specifies if the CA certificate is set to active.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCACertificateCmdlet.Tag">
            <summary>
            <para>
            <para>Metadata which can be used to manage the CA certificate.</para><note><para>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</para><para>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</para><para>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCACertificateCmdlet.RegistrationConfig_TemplateBody">
            <summary>
            <para>
            <para>The template body.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCACertificateCmdlet.VerificationCertificate">
            <summary>
            <para>
            <para>The private key verification certificate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCACertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.RegisterCACertificateResponse).
            Specifying the name of a property of type Amazon.IoT.Model.RegisterCACertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCertificateCmdlet">
            <summary>
            Registers a device certificate with AWS IoT. If you have more than one CA certificate
            that has the same subject field, you must specify the CA certificate that was used
            to sign the device certificate being registered.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCertificateCmdlet.CaCertificatePem">
            <summary>
            <para>
            <para>The CA certificate used to sign the device certificate being registered.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCertificateCmdlet.CertificatePem">
            <summary>
            <para>
            <para>The certificate data, in PEM format.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCertificateCmdlet.Status">
            <summary>
            <para>
            <para>The status of the register certificate request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCertificateCmdlet.SetAsActive">
            <summary>
            <para>
            <para>A boolean value that specifies if the certificate is set to active.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.RegisterCertificateResponse).
            Specifying the name of a property of type Amazon.IoT.Model.RegisterCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCertificateWithoutCACmdlet">
            <summary>
            Register a certificate that does not have a certificate authority (CA).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCertificateWithoutCACmdlet.CertificatePem">
            <summary>
            <para>
            <para>The certificate data, in PEM format.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCertificateWithoutCACmdlet.Status">
            <summary>
            <para>
            <para>The status of the register certificate request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCertificateWithoutCACmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.RegisterCertificateWithoutCAResponse).
            Specifying the name of a property of type Amazon.IoT.Model.RegisterCertificateWithoutCAResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCertificateWithoutCACmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificatePem parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificatePem' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTCertificateWithoutCACmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTThingCmdlet">
            <summary>
            Provisions a thing in the device registry. RegisterThing calls other AWS IoT control
            plane APIs. These calls might exceed your account level <a href="https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_iot">
            AWS IoT Throttling Limits</a> and cause throttle errors. Please contact <a href="https://console.aws.amazon.com/support/home">AWS
            Customer Support</a> to raise your throttling limits if necessary.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTThingCmdlet.Parameter">
            <summary>
            <para>
            <para>The parameters for provisioning a thing. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/provision-template.html">Provisioning
            Templates</a> for more information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTThingCmdlet.TemplateBody">
            <summary>
            <para>
            <para>The provisioning template. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/provision-w-cert.html">Provisioning
            Devices That Have Device Certificates</a> for more information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTThingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.RegisterThingResponse).
            Specifying the name of a property of type Amazon.IoT.Model.RegisterThingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTThingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateBody parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateBody' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RegisterIOTThingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTAccountAuditConfigurationCmdlet">
            <summary>
            Restores the default settings for Device Defender audits for this account. Any configuration
            data you entered is deleted and all audit checks are reset to disabled.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTAccountAuditConfigurationCmdlet.DeleteScheduledAudit">
            <summary>
            <para>
            <para>If true, all scheduled audits are deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTAccountAuditConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteAccountAuditConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTAccountAuditConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeleteScheduledAudit parameter.
            The -PassThru parameter is deprecated, use -Select '^DeleteScheduledAudit' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTAccountAuditConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTAuthorizerCmdlet">
            <summary>
            Deletes an authorizer.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTAuthorizerCmdlet.AuthorizerName">
            <summary>
            <para>
            <para>The name of the authorizer to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTAuthorizerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteAuthorizerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTAuthorizerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AuthorizerName parameter.
            The -PassThru parameter is deprecated, use -Select '^AuthorizerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTAuthorizerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTBillingGroupCmdlet">
            <summary>
            Deletes the billing group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTBillingGroupCmdlet.BillingGroupName">
            <summary>
            <para>
            <para>The name of the billing group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTBillingGroupCmdlet.ExpectedVersion">
            <summary>
            <para>
            <para>The expected version of the billing group. If the version of the billing group does
            not match the expected version specified in the request, the <code>DeleteBillingGroup</code>
            request is rejected with a <code>VersionConflictException</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTBillingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteBillingGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTBillingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BillingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^BillingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTBillingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTCACertificateCmdlet">
            <summary>
            Deletes a registered CA certificate.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTCACertificateCmdlet.CertificateId">
            <summary>
            <para>
            <para>The ID of the certificate to delete. (The last part of the certificate ARN contains
            the certificate ID.)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTCACertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteCACertificateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTCACertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateId parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTCACertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTCertificateCmdlet">
            <summary>
            Deletes the specified certificate.
            
             
            <para>
            A certificate cannot be deleted if it has a policy or IoT thing attached to it or
            if its status is set to ACTIVE. To delete a certificate, first use the <a>DetachPrincipalPolicy</a>
            API to detach all policies. Next, use the <a>UpdateCertificate</a> API to set the
            certificate to the INACTIVE status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTCertificateCmdlet.CertificateId">
            <summary>
            <para>
            <para>The ID of the certificate. (The last part of the certificate ARN contains the certificate
            ID.)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTCertificateCmdlet.DeleteWithForce">
            <summary>
            <para>
            <para>Forces the deletion of a certificate if it is inactive and is not attached to an IoT
            thing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteCertificateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateId parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTCertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTDimensionCmdlet">
            <summary>
            Removes the specified dimension from your AWS account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTDimensionCmdlet.Name">
            <summary>
            <para>
            <para>The unique identifier for the dimension that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTDimensionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteDimensionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTDimensionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTDimensionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTDomainConfigurationCmdlet">
            <summary>
            Deletes the specified domain configuration.
            
             <note><para>
            The domain configuration feature is in public preview and is subject to change.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTDomainConfigurationCmdlet.DomainConfigurationName">
            <summary>
            <para>
            <para>The name of the domain configuration to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTDomainConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteDomainConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTDomainConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DomainConfigurationName parameter.
            The -PassThru parameter is deprecated, use -Select '^DomainConfigurationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTDomainConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTDynamicThingGroupCmdlet">
            <summary>
            Deletes a dynamic thing group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTDynamicThingGroupCmdlet.ExpectedVersion">
            <summary>
            <para>
            <para>The expected version of the dynamic thing group to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTDynamicThingGroupCmdlet.ThingGroupName">
            <summary>
            <para>
            <para>The name of the dynamic thing group to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTDynamicThingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteDynamicThingGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTDynamicThingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTDynamicThingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTJobCmdlet">
            <summary>
            Deletes a job and its related job executions.
            
             
            <para>
            Deleting a job may take time, depending on the number of job executions created for
            the job and various other factors. While the job is being deleted, the status of the
            job will be shown as "DELETION_IN_PROGRESS". Attempting to delete or cancel a job
            whose status is already "DELETION_IN_PROGRESS" will result in an error.
            </para><para>
            Only 10 jobs may have status "DELETION_IN_PROGRESS" at the same time, or a LimitExceededException
            will occur.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTJobCmdlet.Enforce">
            <summary>
            <para>
            <para>(Optional) When true, you can delete a job which is "IN_PROGRESS". Otherwise, you
            can only delete a job which is in a terminal state ("COMPLETED" or "CANCELED") or
            an exception will occur. The default is false.</para><note><para>Deleting a job which is "IN_PROGRESS", will cause a device which is executing the
            job to be unable to access job information or update the job execution status. Use
            caution and ensure that each device executing a job which is deleted is able to recover
            to a valid state.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTJobCmdlet.JobId">
            <summary>
            <para>
            <para>The ID of the job to be deleted.</para><para>After a job deletion is completed, you may reuse this jobId when you create a new
            job. However, this is not recommended, and you must ensure that your devices are not
            using the jobId to refer to the deleted job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteJobResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTJobExecutionCmdlet">
            <summary>
            Deletes a job execution.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTJobExecutionCmdlet.ExecutionNumber">
            <summary>
            <para>
            <para>The ID of the job execution to be deleted. The <code>executionNumber</code> refers
            to the execution of a particular job on a particular device.</para><para>Note that once a job execution is deleted, the <code>executionNumber</code> may be
            reused by IoT, so be sure you get and use the correct value here.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTJobExecutionCmdlet.Enforce">
            <summary>
            <para>
            <para>(Optional) When true, you can delete a job execution which is "IN_PROGRESS". Otherwise,
            you can only delete a job execution which is in a terminal state ("SUCCEEDED", "FAILED",
            "REJECTED", "REMOVED" or "CANCELED") or an exception will occur. The default is false.</para><note><para>Deleting a job execution which is "IN_PROGRESS", will cause the device to be unable
            to access job information or update the job execution status. Use caution and ensure
            that the device is able to recover to a valid state.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTJobExecutionCmdlet.JobId">
            <summary>
            <para>
            <para>The ID of the job whose execution on a particular device will be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTJobExecutionCmdlet.ThingName">
            <summary>
            <para>
            <para>The name of the thing whose job execution will be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTJobExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteJobExecutionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTJobExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExecutionNumber parameter.
            The -PassThru parameter is deprecated, use -Select '^ExecutionNumber' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTJobExecutionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTMitigationActionCmdlet">
            <summary>
            Deletes a defined mitigation action from your AWS account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTMitigationActionCmdlet.ActionName">
            <summary>
            <para>
            <para>The name of the mitigation action that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTMitigationActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteMitigationActionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTMitigationActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ActionName parameter.
            The -PassThru parameter is deprecated, use -Select '^ActionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTMitigationActionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTOTAUpdateCmdlet">
            <summary>
            Delete an OTA update.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTOTAUpdateCmdlet.DeleteStream">
            <summary>
            <para>
            <para>Specifies if the stream associated with an OTA update should be deleted when the OTA
            update is deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTOTAUpdateCmdlet.ForceDeleteAWSJob">
            <summary>
            <para>
            <para>Specifies if the AWS Job associated with the OTA update should be deleted with the
            OTA update is deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTOTAUpdateCmdlet.OtaUpdateId">
            <summary>
            <para>
            <para>The OTA update ID to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTOTAUpdateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteOTAUpdateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTOTAUpdateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OtaUpdateId parameter.
            The -PassThru parameter is deprecated, use -Select '^OtaUpdateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTOTAUpdateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTPolicyCmdlet">
            <summary>
            Deletes the specified policy.
            
             
            <para>
            A policy cannot be deleted if it has non-default versions or it is attached to any
            certificate.
            </para><para>
            To delete a policy, use the DeletePolicyVersion API to delete all non-default versions
            of the policy; use the DetachPrincipalPolicy API to detach the policy from any certificate;
            and then use the DeletePolicy API to delete the policy.
            </para><para>
            When a policy is deleted using DeletePolicy, its default version is deleted with it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The name of the policy to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeletePolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyName parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTPolicyVersionCmdlet">
            <summary>
            Deletes the specified version of the specified policy. You cannot delete the default
            version of a policy using this API. To delete the default version of a policy, use
            <a>DeletePolicy</a>. To find out which version of a policy is marked as the default
            version, use ListPolicyVersions.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTPolicyVersionCmdlet.PolicyName">
            <summary>
            <para>
            <para>The name of the policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTPolicyVersionCmdlet.PolicyVersionId">
            <summary>
            <para>
            <para>The policy version ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTPolicyVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeletePolicyVersionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTPolicyVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyName parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTPolicyVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTPrincipalPolicyCmdlet">
            <summary>
            Removes the specified policy from the specified certificate.
            
             
            <para><b>Note:</b> This API is deprecated. Please use <a>DetachPolicy</a> instead.
            </para><br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTPrincipalPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The name of the policy to detach.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTPrincipalPolicyCmdlet.Principal">
            <summary>
            <para>
            <para>The principal.</para><para>If the principal is a certificate, specify the certificate ARN. If the principal is
            an Amazon Cognito identity, specify the identity ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTPrincipalPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DetachPrincipalPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTPrincipalPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyName parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTPrincipalPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTProvisioningTemplateCmdlet">
            <summary>
            Deletes a fleet provisioning template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTProvisioningTemplateCmdlet.TemplateName">
            <summary>
            <para>
            <para>The name of the fleet provision template to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTProvisioningTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteProvisioningTemplateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTProvisioningTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateName parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTProvisioningTemplateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTProvisioningTemplateVersionCmdlet">
            <summary>
            Deletes a fleet provisioning template version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTProvisioningTemplateVersionCmdlet.TemplateName">
            <summary>
            <para>
            <para>The name of the fleet provisioning template version to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTProvisioningTemplateVersionCmdlet.VersionId">
            <summary>
            <para>
            <para>The fleet provisioning template version ID to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTProvisioningTemplateVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteProvisioningTemplateVersionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTProvisioningTemplateVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VersionId parameter.
            The -PassThru parameter is deprecated, use -Select '^VersionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTProvisioningTemplateVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTRegistrationCodeCmdlet">
            <summary>
            Deletes a CA certificate registration code.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTRegistrationCodeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteRegistrationCodeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTResourceTagCmdlet">
            <summary>
            Removes the given tags (metadata) from the resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The ARN of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>A list of the keys of the tags to be removed from the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTRoleAliasCmdlet">
            <summary>
            Deletes a role alias
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTRoleAliasCmdlet.RoleAlias">
            <summary>
            <para>
            <para>The role alias to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTRoleAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteRoleAliasResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTRoleAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RoleAlias parameter.
            The -PassThru parameter is deprecated, use -Select '^RoleAlias' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTRoleAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTScheduledAuditCmdlet">
            <summary>
            Deletes a scheduled audit.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTScheduledAuditCmdlet.ScheduledAuditName">
            <summary>
            <para>
            <para>The name of the scheduled audit you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTScheduledAuditCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteScheduledAuditResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTScheduledAuditCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScheduledAuditName parameter.
            The -PassThru parameter is deprecated, use -Select '^ScheduledAuditName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTScheduledAuditCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTSecurityProfileCmdlet">
            <summary>
            Deletes a Device Defender security profile.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTSecurityProfileCmdlet.ExpectedVersion">
            <summary>
            <para>
            <para>The expected version of the security profile. A new version is generated whenever
            the security profile is updated. If you specify a value that is different from the
            actual version, a <code>VersionConflictException</code> is thrown.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTSecurityProfileCmdlet.SecurityProfileName">
            <summary>
            <para>
            <para>The name of the security profile to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTSecurityProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteSecurityProfileResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTSecurityProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecurityProfileName parameter.
            The -PassThru parameter is deprecated, use -Select '^SecurityProfileName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTSecurityProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTStreamCmdlet">
            <summary>
            Deletes a stream.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTStreamCmdlet.StreamId">
            <summary>
            <para>
            <para>The stream ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTStreamCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteStreamResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTStreamCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamId parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTStreamCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingCmdlet">
            <summary>
            Deletes the specified thing. Returns successfully with no error if the deletion is
            successful or you specify a thing that doesn't exist.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingCmdlet.ExpectedVersion">
            <summary>
            <para>
            <para>The expected version of the thing record in the registry. If the version of the record
            in the registry does not match the expected version specified in the request, the
            <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingCmdlet.ThingName">
            <summary>
            <para>
            <para>The name of the thing to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteThingResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingFromBillingGroupCmdlet">
            <summary>
            Removes the given thing from the billing group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingFromBillingGroupCmdlet.BillingGroupArn">
            <summary>
            <para>
            <para>The ARN of the billing group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingFromBillingGroupCmdlet.BillingGroupName">
            <summary>
            <para>
            <para>The name of the billing group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingFromBillingGroupCmdlet.ThingArn">
            <summary>
            <para>
            <para>The ARN of the thing to be removed from the billing group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingFromBillingGroupCmdlet.ThingName">
            <summary>
            <para>
            <para>The name of the thing to be removed from the billing group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingFromBillingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.RemoveThingFromBillingGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingFromBillingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingFromBillingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingFromThingGroupCmdlet">
            <summary>
            Remove the specified thing from the specified group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingFromThingGroupCmdlet.ThingArn">
            <summary>
            <para>
            <para>The ARN of the thing to remove from the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingFromThingGroupCmdlet.ThingGroupArn">
            <summary>
            <para>
            <para>The group ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingFromThingGroupCmdlet.ThingGroupName">
            <summary>
            <para>
            <para>The group name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingFromThingGroupCmdlet.ThingName">
            <summary>
            <para>
            <para>The name of the thing to remove from the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingFromThingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.RemoveThingFromThingGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingFromThingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingFromThingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingGroupCmdlet">
            <summary>
            Deletes a thing group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingGroupCmdlet.ExpectedVersion">
            <summary>
            <para>
            <para>The expected version of the thing group to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingGroupCmdlet.ThingGroupName">
            <summary>
            <para>
            <para>The name of the thing group to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteThingGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingPrincipalCmdlet">
            <summary>
            Detaches the specified principal from the specified thing. A principal can be X.509
            certificates, IAM users, groups, and roles, Amazon Cognito identities or federated
            identities.
            
             <note><para>
            This call is asynchronous. It might take several seconds for the detachment to propagate.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingPrincipalCmdlet.Principal">
            <summary>
            <para>
            <para>If the principal is a certificate, this value must be ARN of the certificate. If the
            principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito
            identity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingPrincipalCmdlet.ThingName">
            <summary>
            <para>
            <para>The name of the thing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingPrincipalCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DetachThingPrincipalResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingPrincipalCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingPrincipalCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingTypeCmdlet">
            <summary>
            Deletes the specified thing type. You cannot delete a thing type if it has things
            associated with it. To delete a thing type, first mark it as deprecated by calling
            <a>DeprecateThingType</a>, then remove any associated things by calling <a>UpdateThing</a>
            to change the thing type on any associated thing, and finally use <a>DeleteThingType</a>
            to delete the thing type.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingTypeCmdlet.ThingTypeName">
            <summary>
            <para>
            <para>The name of the thing type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteThingTypeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingTypeName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingTypeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTThingTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTTopicRuleCmdlet">
            <summary>
            Deletes the rule.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTTopicRuleCmdlet.RuleName">
            <summary>
            <para>
            <para>The name of the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTTopicRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteTopicRuleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTTopicRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RuleName parameter.
            The -PassThru parameter is deprecated, use -Select '^RuleName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTTopicRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTTopicRuleDestinationCmdlet">
            <summary>
            Deletes a topic rule destination.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTTopicRuleDestinationCmdlet.Arn">
            <summary>
            <para>
            <para>The ARN of the topic rule destination to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTTopicRuleDestinationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteTopicRuleDestinationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTTopicRuleDestinationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTTopicRuleDestinationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTV2LoggingLevelCmdlet">
            <summary>
            Deletes a logging level.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTV2LoggingLevelCmdlet.TargetName">
            <summary>
            <para>
            <para>The name of the resource for which you are configuring logging.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTV2LoggingLevelCmdlet.TargetType">
            <summary>
            <para>
            <para>The type of resource for which you are configuring logging. Must be <code>THING_Group</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTV2LoggingLevelCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeleteV2LoggingLevelResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTV2LoggingLevelCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TargetName parameter.
            The -PassThru parameter is deprecated, use -Select '^TargetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RemoveIOTV2LoggingLevelCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.RequestIOTCertificateTransferCmdlet">
            <summary>
            Transfers the specified certificate to the specified AWS account.
            
             
            <para>
            You can cancel the transfer until it is acknowledged by the recipient.
            </para><para>
            No notification is sent to the transfer destination's account. It is up to the caller
            to notify the transfer target.
            </para><para>
            The certificate being transferred must not be in the ACTIVE state. You can use the
            UpdateCertificate API to deactivate it.
            </para><para>
            The certificate must not have any policies attached to it. You can use the DetachPrincipalPolicy
            API to detach them.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RequestIOTCertificateTransferCmdlet.CertificateId">
            <summary>
            <para>
            <para>The ID of the certificate. (The last part of the certificate ARN contains the certificate
            ID.)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RequestIOTCertificateTransferCmdlet.TargetAwsAccount">
            <summary>
            <para>
            <para>The AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RequestIOTCertificateTransferCmdlet.TransferMessage">
            <summary>
            <para>
            <para>The transfer message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RequestIOTCertificateTransferCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransferredCertificateArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.TransferCertificateResponse).
            Specifying the name of a property of type Amazon.IoT.Model.TransferCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RequestIOTCertificateTransferCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateId parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.RequestIOTCertificateTransferCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.SearchIOTIndexCmdlet">
            <summary>
            The query search index.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SearchIOTIndexCmdlet.IndexName">
            <summary>
            <para>
            <para>The search index name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SearchIOTIndexCmdlet.QueryString">
            <summary>
            <para>
            <para>The search query string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SearchIOTIndexCmdlet.QueryVersion">
            <summary>
            <para>
            <para>The query version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SearchIOTIndexCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return at one time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SearchIOTIndexCmdlet.NextToken">
            <summary>
            <para>
            <para>The token used to get the next set of results, or <code>null</code> if there are no
            additional results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SearchIOTIndexCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.SearchIndexResponse).
            Specifying the name of a property of type Amazon.IoT.Model.SearchIndexResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SearchIOTIndexCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QueryString parameter.
            The -PassThru parameter is deprecated, use -Select '^QueryString' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SearchIOTIndexCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.SetIOTDefaultAuthorizerCmdlet">
            <summary>
            Sets the default authorizer. This will be used if a websocket connection is made without
            specifying an authorizer.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTDefaultAuthorizerCmdlet.AuthorizerName">
            <summary>
            <para>
            <para>The authorizer name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTDefaultAuthorizerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.SetDefaultAuthorizerResponse).
            Specifying the name of a property of type Amazon.IoT.Model.SetDefaultAuthorizerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTDefaultAuthorizerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AuthorizerName parameter.
            The -PassThru parameter is deprecated, use -Select '^AuthorizerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTDefaultAuthorizerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.SetIOTDefaultPolicyVersionCmdlet">
            <summary>
            Sets the specified version of the specified policy as the policy's default (operative)
            version. This action affects all certificates to which the policy is attached. To
            list the principals the policy is attached to, use the ListPrincipalPolicy API.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTDefaultPolicyVersionCmdlet.PolicyName">
            <summary>
            <para>
            <para>The policy name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTDefaultPolicyVersionCmdlet.PolicyVersionId">
            <summary>
            <para>
            <para>The policy version ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTDefaultPolicyVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.SetDefaultPolicyVersionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTDefaultPolicyVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyName parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTDefaultPolicyVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.SetIOTLoggingOptionCmdlet">
            <summary>
            Sets the logging options.
            
             
            <para>
            NOTE: use of this command is not recommended. Use <code>SetV2LoggingOptions</code>
            instead.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTLoggingOptionCmdlet.LoggingOptionsPayload_LogLevel">
            <summary>
            <para>
            <para>The log level.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTLoggingOptionCmdlet.LoggingOptionsPayload_RoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that grants access.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTLoggingOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.SetLoggingOptionsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTLoggingOptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.SetIOTThingTypeDeprecationCmdlet">
            <summary>
            Deprecates a thing type. You can not associate new things with deprecated thing type.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTThingTypeDeprecationCmdlet.ThingTypeName">
            <summary>
            <para>
            <para>The name of the thing type to deprecate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTThingTypeDeprecationCmdlet.UndoDeprecate">
            <summary>
            <para>
            <para>Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will
            not be deprecated anymore and you can associate it with things.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTThingTypeDeprecationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.DeprecateThingTypeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTThingTypeDeprecationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingTypeName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingTypeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTThingTypeDeprecationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet">
            <summary>
            Replaces the rule. You must specify all parameters for the new rule. Creating rules
            is an administrator-level action. Any user who has permission to create rules will
            be able to access data processed by the rule.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.TopicRulePayload_Action">
            <summary>
            <para>
            <para>The actions associated with the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.CloudwatchAlarm_AlarmName">
            <summary>
            <para>
            <para>The CloudWatch alarm name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.TopicRulePayload_AwsIotSqlVersion">
            <summary>
            <para>
            <para>The version of the SQL rules engine to use when evaluating the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.S3_BucketName">
            <summary>
            <para>
            <para>The Amazon S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.S3_CannedAcl">
            <summary>
            <para>
            <para>The Amazon S3 canned ACL that controls access to the object identified by the object
            key. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl">S3
            canned ACLs</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.IotAnalytics_ChannelArn">
            <summary>
            <para>
            <para>(deprecated) The ARN of the IoT Analytics channel to which message data will be sent.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.IotAnalytics_ChannelName">
            <summary>
            <para>
            <para>The name of the IoT Analytics channel to which message data will be sent.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Http_ConfirmationUrl">
            <summary>
            <para>
            <para>The URL to which AWS IoT sends a confirmation message. The value of the confirmation
            URL must be a prefix of the endpoint URL. If you do not specify a confirmation URL
            AWS IoT uses the endpoint URL as the confirmation URL. If you use substitution templates
            in the confirmationUrl, you must create and enable topic rule destinations that match
            each possible value of the substitution template before traffic is allowed to your
            endpoint URL.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Firehose_DeliveryStreamName">
            <summary>
            <para>
            <para>The delivery stream name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.TopicRulePayload_Description">
            <summary>
            <para>
            <para>The description of the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Elasticsearch_Endpoint">
            <summary>
            <para>
            <para>The endpoint of your Elasticsearch domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.StepFunctions_ExecutionNamePrefix">
            <summary>
            <para>
            <para>(Optional) A name will be given to the state machine execution consisting of this
            prefix followed by a UUID. Step Functions automatically creates a unique name for
            each state machine execution if one is not provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Lambda_FunctionArn">
            <summary>
            <para>
            <para>The ARN of the Lambda function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.DynamoDB_HashKeyField">
            <summary>
            <para>
            <para>The hash key name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.DynamoDB_HashKeyType">
            <summary>
            <para>
            <para>The hash key type. Valid values are "STRING" or "NUMBER"</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.DynamoDB_HashKeyValue">
            <summary>
            <para>
            <para>The hash key value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Http_Header">
            <summary>
            <para>
            <para>The HTTP headers to send with the message data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Elasticsearch_Id">
            <summary>
            <para>
            <para>The unique identifier for the document you are storing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Elasticsearch_Index">
            <summary>
            <para>
            <para>The Elasticsearch index where you want to store your data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.IotEvents_InputName">
            <summary>
            <para>
            <para>The name of the AWS IoT Events input.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.S3_Key">
            <summary>
            <para>
            <para>The object key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.CloudwatchLogs_LogGroupName">
            <summary>
            <para>
            <para>The CloudWatch log group to which the action sends data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Sns_MessageFormat">
            <summary>
            <para>
            <para>(Optional) The message format of the message to publish. Accepted values are "JSON"
            and "RAW". The default value of the attribute is "RAW". SNS uses this setting to determine
            if the payload should be parsed and relevant platform-specific bits of the payload
            should be extracted. To read more about SNS message formats, see <a href="https://docs.aws.amazon.com/sns/latest/dg/json-formats.html">https://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a>
            refer to their official documentation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.IotEvents_MessageId">
            <summary>
            <para>
            <para>[Optional] Use this to ensure that only one input (message) with a given messageId
            will be processed by an AWS IoT Events detector.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.CloudwatchMetric_MetricName">
            <summary>
            <para>
            <para>The CloudWatch metric name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.CloudwatchMetric_MetricNamespace">
            <summary>
            <para>
            <para>The CloudWatch metric namespace name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.CloudwatchMetric_MetricTimestamp">
            <summary>
            <para>
            <para>An optional <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp">Unix
            timestamp</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.CloudwatchMetric_MetricUnit">
            <summary>
            <para>
            <para>The <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit">metric
            unit</a> supported by CloudWatch.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.CloudwatchMetric_MetricValue">
            <summary>
            <para>
            <para>The CloudWatch metric value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.DynamoDB_Operation">
            <summary>
            <para>
            <para>The type of operation to be performed. This follows the substitution template, so
            it can be <code>${operation}</code>, but the substitution must result in one of the
            following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Kinesis_PartitionKey">
            <summary>
            <para>
            <para>The partition key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.DynamoDB_PayloadField">
            <summary>
            <para>
            <para>The action payload. This name can be customized.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.IotSiteWise_PutAssetPropertyValueEntry">
            <summary>
            <para>
            <para>A list of asset property value entries.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Republish_Qo">
            <summary>
            <para>
            <para>The Quality of Service (QoS) level to use when republishing messages. The default
            value is 0.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Sqs_QueueUrl">
            <summary>
            <para>
            <para>The URL of the Amazon SQS queue.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.DynamoDB_RangeKeyField">
            <summary>
            <para>
            <para>The range key name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.DynamoDB_RangeKeyType">
            <summary>
            <para>
            <para>The range key type. Valid values are "STRING" or "NUMBER"</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.DynamoDB_RangeKeyValue">
            <summary>
            <para>
            <para>The range key value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.CloudwatchAlarm_RoleArn">
            <summary>
            <para>
            <para>The IAM role that allows access to the CloudWatch alarm.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.CloudwatchLogs_RoleArn">
            <summary>
            <para>
            <para>The IAM role that allows access to the CloudWatch log.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.CloudwatchMetric_RoleArn">
            <summary>
            <para>
            <para>The IAM role that allows access to the CloudWatch metric.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.DynamoDB_RoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that grants access to the DynamoDB table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.DynamoDBv2_RoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that grants access to the DynamoDB table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Elasticsearch_RoleArn">
            <summary>
            <para>
            <para>The IAM role ARN that has access to Elasticsearch.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Firehose_RoleArn">
            <summary>
            <para>
            <para>The IAM role that grants access to the Amazon Kinesis Firehose stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Sigv4_RoleArn">
            <summary>
            <para>
            <para>The ARN of the signing role.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.IotAnalytics_RoleArn">
            <summary>
            <para>
            <para>The ARN of the role which has a policy that grants IoT Analytics permission to send
            message data via IoT Analytics (iotanalytics:BatchPutMessage).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.IotEvents_RoleArn">
            <summary>
            <para>
            <para>The ARN of the role that grants AWS IoT permission to send an input to an AWS IoT
            Events detector. ("Action":"iotevents:BatchPutMessage").</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.IotSiteWise_RoleArn">
            <summary>
            <para>
            <para>The ARN of the role that grants AWS IoT permission to send an asset property value
            to AWS IoTSiteWise. (<code>"Action": "iotsitewise:BatchPutAssetPropertyValue"</code>).
            The trust policy can restrict access to specific asset hierarchy paths.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Kinesis_RoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Republish_RoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that grants access.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.S3_RoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that grants access.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Sns_RoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that grants access.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Sqs_RoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that grants access.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.StepFunctions_RoleArn">
            <summary>
            <para>
            <para>The ARN of the role that grants IoT permission to start execution of a state machine
            ("Action":"states:StartExecution").</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.TopicRulePayload_RuleDisabled">
            <summary>
            <para>
            <para>Specifies whether the rule is disabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.RuleName">
            <summary>
            <para>
            <para>The name of the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Firehose_Separator">
            <summary>
            <para>
            <para>A character separator that will be used to separate records written to the Firehose
            stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ','
            (comma).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Sigv4_ServiceName">
            <summary>
            <para>
            <para>The service name to use while signing with Sig V4.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Sigv4_SigningRegion">
            <summary>
            <para>
            <para>The signing region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.TopicRulePayload_Sql">
            <summary>
            <para>
            <para>The SQL statement used to query the topic. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference">AWS
            IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.StepFunctions_StateMachineName">
            <summary>
            <para>
            <para>The name of the Step Functions state machine whose execution will be started.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.CloudwatchAlarm_StateReason">
            <summary>
            <para>
            <para>The reason for the alarm change.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.CloudwatchAlarm_StateValue">
            <summary>
            <para>
            <para>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Kinesis_StreamName">
            <summary>
            <para>
            <para>The name of the Amazon Kinesis stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.DynamoDB_TableName">
            <summary>
            <para>
            <para>The name of the DynamoDB table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.PutItem_TableName">
            <summary>
            <para>
            <para>The table where the message data will be written.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Sns_TargetArn">
            <summary>
            <para>
            <para>The ARN of the SNS topic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Salesforce_Token">
            <summary>
            <para>
            <para>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The
            token is available from the Salesforce IoT Cloud platform after creation of the Input
            Stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Republish_Topic">
            <summary>
            <para>
            <para>The name of the MQTT topic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Elasticsearch_Type">
            <summary>
            <para>
            <para>The type of document you are storing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Http_Url">
            <summary>
            <para>
            <para>The endpoint URL. If substitution templates are used in the URL, you must also specify
            a <code>confirmationUrl</code>. If this is a new destination, a new <code>TopicRuleDestination</code>
            is created if possible.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Salesforce_Url">
            <summary>
            <para>
            <para>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from
            the Salesforce IoT Cloud platform after creation of the Input Stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Sqs_UseBase64">
            <summary>
            <para>
            <para>Specifies whether to use Base64 encoding.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ReplaceTopicRuleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RuleName parameter.
            The -PassThru parameter is deprecated, use -Select '^RuleName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTTopicRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.SetIOTV2LoggingLevelCmdlet">
            <summary>
            Sets the logging level.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTV2LoggingLevelCmdlet.LogLevel">
            <summary>
            <para>
            <para>The log level.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTV2LoggingLevelCmdlet.LogTarget_TargetName">
            <summary>
            <para>
            <para>The target name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTV2LoggingLevelCmdlet.LogTarget_TargetType">
            <summary>
            <para>
            <para>The target type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTV2LoggingLevelCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.SetV2LoggingLevelResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTV2LoggingLevelCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogLevel parameter.
            The -PassThru parameter is deprecated, use -Select '^LogLevel' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTV2LoggingLevelCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.SetIOTV2LoggingOptionCmdlet">
            <summary>
            Sets the logging options for the V2 logging service.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTV2LoggingOptionCmdlet.DefaultLogLevel">
            <summary>
            <para>
            <para>The default logging level.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTV2LoggingOptionCmdlet.DisableAllLog">
            <summary>
            <para>
            <para>If true all logs are disabled. The default is false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTV2LoggingOptionCmdlet.RoleArn">
            <summary>
            <para>
            <para>The ARN of the role that allows IoT to write to Cloudwatch logs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTV2LoggingOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.SetV2LoggingOptionsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.SetIOTV2LoggingOptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.StartIOTAuditMitigationActionsTaskCmdlet">
            <summary>
            Starts a task that applies a set of mitigation actions to the specified target.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StartIOTAuditMitigationActionsTaskCmdlet.AuditCheckToActionsMapping">
            <summary>
            <para>
            <para>For an audit check, specifies which mitigation actions to apply. Those actions must
            be defined in your AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StartIOTAuditMitigationActionsTaskCmdlet.Target_AuditCheckToReasonCodeFilter">
            <summary>
            <para>
            <para>Specifies a filter in the form of an audit check and set of reason codes that identify
            the findings from the audit to which the audit mitigation actions task apply.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StartIOTAuditMitigationActionsTaskCmdlet.Target_AuditTaskId">
            <summary>
            <para>
            <para>If the task will apply a mitigation action to findings from a specific audit, this
            value uniquely identifies the audit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StartIOTAuditMitigationActionsTaskCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Each audit mitigation task must have a unique client request token. If you try to
            start a new task with the same token as a task that already exists, an exception occurs.
            If you omit this value, a unique client request token is generated automatically.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StartIOTAuditMitigationActionsTaskCmdlet.Target_FindingId">
            <summary>
            <para>
            <para>If the task will apply a mitigation action to one or more listed findings, this value
            uniquely identifies those findings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StartIOTAuditMitigationActionsTaskCmdlet.TaskId">
            <summary>
            <para>
            <para>A unique identifier for the task. You can use this identifier to check the status
            of the task or to cancel it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StartIOTAuditMitigationActionsTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TaskId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.StartAuditMitigationActionsTaskResponse).
            Specifying the name of a property of type Amazon.IoT.Model.StartAuditMitigationActionsTaskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StartIOTAuditMitigationActionsTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^TaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StartIOTAuditMitigationActionsTaskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.StartIOTOnDemandAuditTaskCmdlet">
            <summary>
            Starts an on-demand Device Defender audit.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StartIOTOnDemandAuditTaskCmdlet.TargetCheckName">
            <summary>
            <para>
            <para>Which checks are performed during the audit. The checks you specify must be enabled
            for your account or an exception occurs. Use <code>DescribeAccountAuditConfiguration</code>
            to see the list of all checks, including those that are enabled or <code>UpdateAccountAuditConfiguration</code>
            to select which checks are enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StartIOTOnDemandAuditTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TaskId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.StartOnDemandAuditTaskResponse).
            Specifying the name of a property of type Amazon.IoT.Model.StartOnDemandAuditTaskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StartIOTOnDemandAuditTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TargetCheckName parameter.
            The -PassThru parameter is deprecated, use -Select '^TargetCheckName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StartIOTOnDemandAuditTaskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.StartIOTThingRegistrationTaskCmdlet">
            <summary>
            Creates a bulk thing provisioning task.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StartIOTThingRegistrationTaskCmdlet.InputFileBucket">
            <summary>
            <para>
            <para>The S3 bucket that contains the input file.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StartIOTThingRegistrationTaskCmdlet.InputFileKey">
            <summary>
            <para>
            <para>The name of input file within the S3 bucket. This file contains a newline delimited
            JSON file. Each line contains the parameter values to provision one device (thing).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StartIOTThingRegistrationTaskCmdlet.RoleArn">
            <summary>
            <para>
            <para>The IAM role ARN that grants permission the input file.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StartIOTThingRegistrationTaskCmdlet.TemplateBody">
            <summary>
            <para>
            <para>The provisioning template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StartIOTThingRegistrationTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TaskId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.StartThingRegistrationTaskResponse).
            Specifying the name of a property of type Amazon.IoT.Model.StartThingRegistrationTaskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StartIOTThingRegistrationTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateBody parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateBody' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StartIOTThingRegistrationTaskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.StopIOTAuditMitigationActionsTaskCmdlet">
            <summary>
            Cancels a mitigation action task that is in progress. If the task is not in progress,
            an InvalidRequestException occurs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTAuditMitigationActionsTaskCmdlet.TaskId">
            <summary>
            <para>
            <para>The unique identifier for the task that you want to cancel. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTAuditMitigationActionsTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CancelAuditMitigationActionsTaskResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTAuditMitigationActionsTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^TaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTAuditMitigationActionsTaskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.StopIOTAuditTaskCmdlet">
            <summary>
            Cancels an audit that is in progress. The audit can be either scheduled or on-demand.
            If the audit is not in progress, an "InvalidRequestException" occurs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTAuditTaskCmdlet.TaskId">
            <summary>
            <para>
            <para>The ID of the audit you want to cancel. You can only cancel an audit that is "IN_PROGRESS".</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTAuditTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CancelAuditTaskResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTAuditTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^TaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTAuditTaskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.StopIOTCertificateTransferCmdlet">
            <summary>
            Cancels a pending transfer for the specified certificate.
            
             
            <para><b>Note</b> Only the transfer source account can use this operation to cancel a transfer.
            (Transfer destinations can use <a>RejectCertificateTransfer</a> instead.) After transfer,
            AWS IoT returns the certificate to the source account in the INACTIVE state. After
            the destination account has accepted the transfer, the transfer cannot be cancelled.
            </para><para>
            After a certificate transfer is cancelled, the status of the certificate changes from
            PENDING_TRANSFER to INACTIVE.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTCertificateTransferCmdlet.CertificateId">
            <summary>
            <para>
            <para>The ID of the certificate. (The last part of the certificate ARN contains the certificate
            ID.)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTCertificateTransferCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CancelCertificateTransferResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTCertificateTransferCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateId parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTCertificateTransferCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.StopIOTJobCmdlet">
            <summary>
            Cancels a job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTJobCmdlet.Comment">
            <summary>
            <para>
            <para>An optional comment string describing why the job was canceled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTJobCmdlet.Enforce">
            <summary>
            <para>
            <para>(Optional) If <code>true</code> job executions with status "IN_PROGRESS" and "QUEUED"
            are canceled, otherwise only job executions with status "QUEUED" are canceled. The
            default is <code>false</code>.</para><para>Canceling a job which is "IN_PROGRESS", will cause a device which is executing the
            job to be unable to update the job execution status. Use caution and ensure that each
            device executing a job which is canceled is able to recover to a valid state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTJobCmdlet.JobId">
            <summary>
            <para>
            <para>The unique identifier you assigned to this job when it was created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTJobCmdlet.ReasonCode">
            <summary>
            <para>
            <para>(Optional)A reason code string that explains why the job was canceled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CancelJobResponse).
            Specifying the name of a property of type Amazon.IoT.Model.CancelJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.StopIOTJobExecutionCmdlet">
            <summary>
            Cancels the execution of a job for a given thing.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTJobExecutionCmdlet.ExpectedVersion">
            <summary>
            <para>
            <para>(Optional) The expected current version of the job execution. Each time you update
            the job execution, its version is incremented. If the version of the job execution
            stored in Jobs does not match, the update is rejected with a VersionMismatch error,
            and an ErrorResponse that contains the current job execution status data is returned.
            (This makes it unnecessary to perform a separate DescribeJobExecution request in order
            to obtain the job execution status data.)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTJobExecutionCmdlet.Enforce">
            <summary>
            <para>
            <para>(Optional) If <code>true</code> the job execution will be canceled if it has status
            IN_PROGRESS or QUEUED, otherwise the job execution will be canceled only if it has
            status QUEUED. If you attempt to cancel a job execution that is IN_PROGRESS, and you
            do not set <code>force</code> to <code>true</code>, then an <code>InvalidStateTransitionException</code>
            will be thrown. The default is <code>false</code>.</para><para>Canceling a job execution which is "IN_PROGRESS", will cause the device to be unable
            to update the job execution status. Use caution and ensure that the device is able
            to recover to a valid state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTJobExecutionCmdlet.JobId">
            <summary>
            <para>
            <para>The ID of the job to be canceled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTJobExecutionCmdlet.StatusDetail">
            <summary>
            <para>
            <para>A collection of name/value pairs that describe the status of the job execution. If
            not specified, the statusDetails are unchanged. You can specify at most 10 name/value
            pairs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTJobExecutionCmdlet.ThingName">
            <summary>
            <para>
            <para>The name of the thing whose execution of the job will be canceled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTJobExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.CancelJobExecutionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTJobExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTJobExecutionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.StopIOTThingRegistrationTaskCmdlet">
            <summary>
            Cancels a bulk thing provisioning task.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTThingRegistrationTaskCmdlet.TaskId">
            <summary>
            <para>
            <para>The bulk thing provisioning task ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTThingRegistrationTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.StopThingRegistrationTaskResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTThingRegistrationTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^TaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.StopIOTThingRegistrationTaskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.TestIOTAuthorizationCmdlet">
            <summary>
            Tests if a specified principal is authorized to perform an AWS IoT action on a specified
            resource. Use this to test and debug the authorization behavior of devices that connect
            to the AWS IoT device gateway.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTAuthorizationCmdlet.AuthInfo">
            <summary>
            <para>
            <para>A list of authorization info objects. Simulating authorization will create a response
            for each <code>authInfo</code> object in the list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTAuthorizationCmdlet.ClientId">
            <summary>
            <para>
            <para>The MQTT client ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTAuthorizationCmdlet.CognitoIdentityPoolId">
            <summary>
            <para>
            <para>The Cognito identity pool ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTAuthorizationCmdlet.PolicyNamesToAdd">
            <summary>
            <para>
            <para>When testing custom authorization, the policies specified here are treated as if they
            are attached to the principal being authorized.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTAuthorizationCmdlet.PolicyNamesToSkip">
            <summary>
            <para>
            <para>When testing custom authorization, the policies specified here are treated as if they
            are not attached to the principal being authorized.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTAuthorizationCmdlet.Principal">
            <summary>
            <para>
            <para>The principal.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTAuthorizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AuthResults'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.TestAuthorizationResponse).
            Specifying the name of a property of type Amazon.IoT.Model.TestAuthorizationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.TestIOTInvokeAuthorizerCmdlet">
            <summary>
            Tests a custom authorization behavior by invoking a specified custom authorizer. Use
            this to test and debug the custom authorization behavior of devices that connect to
            the AWS IoT device gateway.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTInvokeAuthorizerCmdlet.AuthorizerName">
            <summary>
            <para>
            <para>The custom authorizer name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTInvokeAuthorizerCmdlet.MqttContext_ClientId">
            <summary>
            <para>
            <para>The value of the <code>clientId</code> key in an MQTT authorization request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTInvokeAuthorizerCmdlet.HttpContext_Header">
            <summary>
            <para>
            <para>The header keys and values in an HTTP authorization request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTInvokeAuthorizerCmdlet.MqttContext_Password">
            <summary>
            <para>
            <para>The value of the <code>password</code> key in an MQTT authorization request.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTInvokeAuthorizerCmdlet.HttpContext_QueryString">
            <summary>
            <para>
            <para>The query string keys and values in an HTTP authorization request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTInvokeAuthorizerCmdlet.TlsContext_ServerName">
            <summary>
            <para>
            <para>The value of the <code>serverName</code> key in a TLS authorization request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTInvokeAuthorizerCmdlet.Token">
            <summary>
            <para>
            <para>The token returned by your custom authentication service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTInvokeAuthorizerCmdlet.TokenSignature">
            <summary>
            <para>
            <para>The signature made with the token and your custom authentication service's private
            key. This value must be Base-64-encoded.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTInvokeAuthorizerCmdlet.MqttContext_Username">
            <summary>
            <para>
            <para>The value of the <code>username</code> key in an MQTT authorization request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTInvokeAuthorizerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.TestInvokeAuthorizerResponse).
            Specifying the name of a property of type Amazon.IoT.Model.TestInvokeAuthorizerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTInvokeAuthorizerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TokenSignature parameter.
            The -PassThru parameter is deprecated, use -Select '^TokenSignature' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.TestIOTValidSecurityProfileBehaviorCmdlet">
            <summary>
            Validates a Device Defender security profile behaviors specification.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTValidSecurityProfileBehaviorCmdlet.Behavior">
            <summary>
            <para>
            <para>Specifies the behaviors that, when violated by a device (thing), cause an alert.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTValidSecurityProfileBehaviorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.ValidateSecurityProfileBehaviorsResponse).
            Specifying the name of a property of type Amazon.IoT.Model.ValidateSecurityProfileBehaviorsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.TestIOTValidSecurityProfileBehaviorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Behavior parameter.
            The -PassThru parameter is deprecated, use -Select '^Behavior' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTAccountAuditConfigurationCmdlet">
            <summary>
            Configures or reconfigures the Device Defender audit settings for this account. Settings
            include how audit notifications are sent and which audit checks are enabled or disabled.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTAccountAuditConfigurationCmdlet.AuditCheckConfiguration">
            <summary>
            <para>
            <para>Specifies which audit checks are enabled and disabled for this account. Use <code>DescribeAccountAuditConfiguration</code>
            to see the list of all checks, including those that are currently enabled.</para><para>Some data collection might start immediately when certain checks are enabled. When
            a check is disabled, any data collected so far in relation to the check is deleted.</para><para>You cannot disable a check if it is used by any scheduled audit. You must first delete
            the check from the scheduled audit or delete the scheduled audit itself.</para><para>On the first call to <code>UpdateAccountAuditConfiguration</code>, this parameter
            is required and must specify at least one enabled check.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTAccountAuditConfigurationCmdlet.AuditNotificationTargetConfiguration">
            <summary>
            <para>
            <para>Information about the targets to which audit notifications are sent.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTAccountAuditConfigurationCmdlet.RoleArn">
            <summary>
            <para>
            <para>The ARN of the role that grants permission to AWS IoT to access information about
            your devices, policies, certificates and other items as required when performing an
            audit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTAccountAuditConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateAccountAuditConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTAccountAuditConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RoleArn parameter.
            The -PassThru parameter is deprecated, use -Select '^RoleArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTAccountAuditConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTAuthorizerCmdlet">
            <summary>
            Updates an authorizer.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTAuthorizerCmdlet.AuthorizerFunctionArn">
            <summary>
            <para>
            <para>The ARN of the authorizer's Lambda function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTAuthorizerCmdlet.AuthorizerName">
            <summary>
            <para>
            <para>The authorizer name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTAuthorizerCmdlet.Status">
            <summary>
            <para>
            <para>The status of the update authorizer request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTAuthorizerCmdlet.TokenKeyName">
            <summary>
            <para>
            <para>The key used to extract the token from the HTTP headers. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTAuthorizerCmdlet.TokenSigningPublicKey">
            <summary>
            <para>
            <para>The public keys used to verify the token signature.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTAuthorizerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateAuthorizerResponse).
            Specifying the name of a property of type Amazon.IoT.Model.UpdateAuthorizerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTAuthorizerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AuthorizerName parameter.
            The -PassThru parameter is deprecated, use -Select '^AuthorizerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTAuthorizerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTBillingGroupCmdlet">
            <summary>
            Updates information about the billing group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTBillingGroupCmdlet.BillingGroupProperties_BillingGroupDescription">
            <summary>
            <para>
            <para>The description of the billing group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTBillingGroupCmdlet.BillingGroupName">
            <summary>
            <para>
            <para>The name of the billing group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTBillingGroupCmdlet.ExpectedVersion">
            <summary>
            <para>
            <para>The expected version of the billing group. If the version of the billing group does
            not match the expected version specified in the request, the <code>UpdateBillingGroup</code>
            request is rejected with a <code>VersionConflictException</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTBillingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Version'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateBillingGroupResponse).
            Specifying the name of a property of type Amazon.IoT.Model.UpdateBillingGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTBillingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BillingGroupProperties_BillingGroupDescription parameter.
            The -PassThru parameter is deprecated, use -Select '^BillingGroupProperties_BillingGroupDescription' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTBillingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTCACertificateCmdlet">
            <summary>
            Updates a registered CA certificate.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTCACertificateCmdlet.CertificateId">
            <summary>
            <para>
            <para>The CA certificate identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTCACertificateCmdlet.NewAutoRegistrationStatus">
            <summary>
            <para>
            <para>The new value for the auto registration status. Valid values are: "ENABLE" or "DISABLE".</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTCACertificateCmdlet.NewStatus">
            <summary>
            <para>
            <para>The updated status of the CA certificate.</para><para><b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTCACertificateCmdlet.RemoveAutoRegistration">
            <summary>
            <para>
            <para>If true, removes auto registration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTCACertificateCmdlet.RegistrationConfig_RoleArn">
            <summary>
            <para>
            <para>The ARN of the role.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTCACertificateCmdlet.RegistrationConfig_TemplateBody">
            <summary>
            <para>
            <para>The template body.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTCACertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateCACertificateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTCACertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTCertificateCmdlet">
            <summary>
            Updates the status of the specified certificate. This operation is idempotent.
            
             
            <para>
            Moving a certificate from the ACTIVE state (including REVOKED) will not disconnect
            currently connected devices, but these devices will be unable to reconnect.
            </para><para>
            The ACTIVE state is required to authenticate devices connecting to AWS IoT using a
            certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTCertificateCmdlet.CertificateId">
            <summary>
            <para>
            <para>The ID of the certificate. (The last part of the certificate ARN contains the certificate
            ID.)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTCertificateCmdlet.NewStatus">
            <summary>
            <para>
            <para>The new status.</para><para><b>Note:</b> Setting the status to PENDING_TRANSFER or PENDING_ACTIVATION will result
            in an exception being thrown. PENDING_TRANSFER and PENDING_ACTIVATION are statuses
            used internally by AWS IoT. They are not intended for developer use.</para><para><b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateCertificateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateId parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTCertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDimensionCmdlet">
            <summary>
            Updates the definition for a dimension. You cannot change the type of a dimension
            after it is created (you can delete it and re-create it).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDimensionCmdlet.Name">
            <summary>
            <para>
            <para>A unique identifier for the dimension. Choose something that describes the type and
            value to make it easy to remember what it does.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDimensionCmdlet.StringValue">
            <summary>
            <para>
            <para>Specifies the value or list of values for the dimension. For <code>TOPIC_FILTER</code>
            dimensions, this is a pattern used to match the MQTT topic (for example, "admin/#").</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDimensionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateDimensionResponse).
            Specifying the name of a property of type Amazon.IoT.Model.UpdateDimensionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDimensionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDimensionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDomainConfigurationCmdlet">
            <summary>
            Updates values stored in the domain configuration. Domain configurations for default
            endpoints can't be updated.
            
             <note><para>
            The domain configuration feature is in public preview and is subject to change.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDomainConfigurationCmdlet.AuthorizerConfig_AllowAuthorizerOverride">
            <summary>
            <para>
            <para>A Boolean that specifies whether the domain configuration's authorization service
            can be overridden.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDomainConfigurationCmdlet.AuthorizerConfig_DefaultAuthorizerName">
            <summary>
            <para>
            <para>The name of the authorization service for a domain configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDomainConfigurationCmdlet.DomainConfigurationName">
            <summary>
            <para>
            <para>The name of the domain configuration to be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDomainConfigurationCmdlet.DomainConfigurationStatus">
            <summary>
            <para>
            <para>The status to which the domain configuration should be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDomainConfigurationCmdlet.RemoveAuthorizerConfig">
            <summary>
            <para>
            <para>Removes the authorization configuration from a domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDomainConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateDomainConfigurationResponse).
            Specifying the name of a property of type Amazon.IoT.Model.UpdateDomainConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDomainConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DomainConfigurationName parameter.
            The -PassThru parameter is deprecated, use -Select '^DomainConfigurationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDomainConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDynamicThingGroupCmdlet">
            <summary>
            Updates a dynamic thing group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDynamicThingGroupCmdlet.ThingGroupProperties_AttributePayload">
            <summary>
            <para>
            <para>The thing group attributes in JSON format.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDynamicThingGroupCmdlet.ExpectedVersion">
            <summary>
            <para>
            <para>The expected version of the dynamic thing group to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDynamicThingGroupCmdlet.IndexName">
            <summary>
            <para>
            <para>The dynamic thing group index to update.</para><note><para>Currently one index is supported: 'AWS_Things'.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDynamicThingGroupCmdlet.QueryString">
            <summary>
            <para>
            <para>The dynamic thing group search query string to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDynamicThingGroupCmdlet.QueryVersion">
            <summary>
            <para>
            <para>The dynamic thing group query version to update.</para><note><para>Currently one query version is supported: "2017-09-30". If not specified, the query
            version defaults to this value.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDynamicThingGroupCmdlet.ThingGroupProperties_ThingGroupDescription">
            <summary>
            <para>
            <para>The thing group description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDynamicThingGroupCmdlet.ThingGroupName">
            <summary>
            <para>
            <para>The name of the dynamic thing group to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDynamicThingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Version'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateDynamicThingGroupResponse).
            Specifying the name of a property of type Amazon.IoT.Model.UpdateDynamicThingGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDynamicThingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTDynamicThingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTEventConfigurationCmdlet">
            <summary>
            Updates the event configurations.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTEventConfigurationCmdlet.EventConfiguration">
            <summary>
            <para>
            <para>The new event configuration values.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTEventConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateEventConfigurationsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTEventConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EventConfiguration parameter.
            The -PassThru parameter is deprecated, use -Select '^EventConfiguration' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTEventConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTIndexingConfigurationCmdlet">
            <summary>
            Updates the search configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTIndexingConfigurationCmdlet.ThingGroupIndexingConfiguration_CustomField">
            <summary>
            <para>
            <para>A list of thing group fields to index. This list cannot contain any managed fields.
            Use the GetIndexingConfiguration API to get a list of managed fields.</para><para>Contains custom field names and their data type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTIndexingConfigurationCmdlet.ThingIndexingConfiguration_CustomField">
            <summary>
            <para>
            <para>Contains custom field names and their data type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTIndexingConfigurationCmdlet.ThingGroupIndexingConfiguration_ManagedField">
            <summary>
            <para>
            <para>Contains fields that are indexed and whose types are already known by the Fleet Indexing
            service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTIndexingConfigurationCmdlet.ThingIndexingConfiguration_ManagedField">
            <summary>
            <para>
            <para>Contains fields that are indexed and whose types are already known by the Fleet Indexing
            service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTIndexingConfigurationCmdlet.ThingIndexingConfiguration_ThingConnectivityIndexingMode">
            <summary>
            <para>
            <para>Thing connectivity indexing mode. Valid values are: </para><ul><li><para>STATUS – Your thing index contains connectivity status. To enable thing connectivity
            indexing, thingIndexMode must not be set to OFF.</para></li><li><para>OFF - Thing connectivity status indexing is disabled.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTIndexingConfigurationCmdlet.ThingGroupIndexingConfiguration_ThingGroupIndexingMode">
            <summary>
            <para>
            <para>Thing group indexing mode.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTIndexingConfigurationCmdlet.ThingIndexingConfiguration_ThingIndexingMode">
            <summary>
            <para>
            <para>Thing indexing mode. Valid values are:</para><ul><li><para>REGISTRY – Your thing index contains registry data only.</para></li><li><para>REGISTRY_AND_SHADOW - Your thing index contains registry and shadow data.</para></li><li><para>OFF - Thing indexing is disabled.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTIndexingConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateIndexingConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTIndexingConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingIndexingConfiguration_ThingIndexingMode parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingIndexingConfiguration_ThingIndexingMode' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTIndexingConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTJobCmdlet">
            <summary>
            Updates supported fields of the specified job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTJobCmdlet.AbortConfig_CriteriaList">
            <summary>
            <para>
            <para>The list of abort criteria to define rules to abort the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTJobCmdlet.Description">
            <summary>
            <para>
            <para>A short text description of the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTJobCmdlet.PresignedUrlConfig_ExpiresInSec">
            <summary>
            <para>
            <para>How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default
            value is 3600 seconds. Pre-signed URLs are generated when Jobs receives an MQTT request
            for the job document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTJobCmdlet.JobExecutionsRolloutConfig_ExponentialRate">
            <summary>
            <para>
            <para>The rate of increase for a job rollout. This parameter allows you to define an exponential
            rate for a job rollout.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTJobCmdlet.TimeoutConfig_InProgressTimeoutInMinute">
            <summary>
            <para>
            <para>Specifies the amount of time, in minutes, this device has to finish execution of this
            job. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080
            minutes). The in progress timer can't be updated and will apply to all job executions
            for the job. Whenever a job execution remains in the IN_PROGRESS status for longer
            than this interval, the job execution will fail and switch to the terminal <code>TIMED_OUT</code>
            status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTJobCmdlet.JobId">
            <summary>
            <para>
            <para>The ID of the job to be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTJobCmdlet.JobExecutionsRolloutConfig_MaximumPerMinute">
            <summary>
            <para>
            <para>The maximum number of things that will be notified of a pending job, per minute. This
            parameter allows you to create a staged rollout.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTJobCmdlet.PresignedUrlConfig_RoleArn">
            <summary>
            <para>
            <para>The ARN of an IAM role that grants grants permission to download files from the S3
            bucket where the job data/updates are stored. The role must also grant permission
            for IoT to download the files.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateJobResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTMitigationActionCmdlet">
            <summary>
            Updates the definition for the specified mitigation action.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTMitigationActionCmdlet.UpdateCACertificateParams_Action">
            <summary>
            <para>
            <para>The action that you want to apply to the CA cerrtificate. The only supported value
            is <code>DEACTIVATE</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTMitigationActionCmdlet.UpdateDeviceCertificateParams_Action">
            <summary>
            <para>
            <para>The action that you want to apply to the device cerrtificate. The only supported value
            is <code>DEACTIVATE</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTMitigationActionCmdlet.ActionName">
            <summary>
            <para>
            <para>The friendly name for the mitigation action. You can't change the name by using <code>UpdateMitigationAction</code>.
            Instead, you must delete and re-create the mitigation action with the new name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTMitigationActionCmdlet.EnableIoTLoggingParams_LogLevel">
            <summary>
            <para>
            <para>Specifies the types of information to be logged.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTMitigationActionCmdlet.AddThingsToThingGroupParams_OverrideDynamicGroup">
            <summary>
            <para>
            <para>Specifies if this mitigation action can move the things that triggered the mitigation
            action even if they are part of one or more dynamic things groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTMitigationActionCmdlet.RoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that is used to apply the mitigation action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTMitigationActionCmdlet.EnableIoTLoggingParams_RoleArnForLogging">
            <summary>
            <para>
            <para>The ARN of the IAM role used for logging.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTMitigationActionCmdlet.ReplaceDefaultPolicyVersionParams_TemplateName">
            <summary>
            <para>
            <para>The name of the template to be applied. The only supported value is <code>BLANK_POLICY</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTMitigationActionCmdlet.AddThingsToThingGroupParams_ThingGroupName">
            <summary>
            <para>
            <para>The list of groups to which you want to add the things that triggered the mitigation
            action. You can add a thing to a maximum of 10 groups, but you cannot add a thing
            to more than one group in the same hierarchy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTMitigationActionCmdlet.PublishFindingToSnsParams_TopicArn">
            <summary>
            <para>
            <para>The ARN of the topic to which you want to publish the findings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTMitigationActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateMitigationActionResponse).
            Specifying the name of a property of type Amazon.IoT.Model.UpdateMitigationActionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTMitigationActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ActionName parameter.
            The -PassThru parameter is deprecated, use -Select '^ActionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTMitigationActionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTProvisioningTemplateCmdlet">
            <summary>
            Updates a fleet provisioning template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTProvisioningTemplateCmdlet.DefaultVersionId">
            <summary>
            <para>
            <para>The ID of the default provisioning template version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTProvisioningTemplateCmdlet.Description">
            <summary>
            <para>
            <para>The description of the fleet provisioning template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTProvisioningTemplateCmdlet.Enabled">
            <summary>
            <para>
            <para>True to enable the fleet provisioning template, otherwise false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTProvisioningTemplateCmdlet.PreProvisioningHook_PayloadVersion">
            <summary>
            <para>
            <para>The payload that was sent to the target function.</para><para><i>Note:</i> Only Lambda functions are currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTProvisioningTemplateCmdlet.ProvisioningRoleArn">
            <summary>
            <para>
            <para>The ARN of the role associated with the provisioning template. This IoT role grants
            permission to provision a device.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTProvisioningTemplateCmdlet.RemovePreProvisioningHook">
            <summary>
            <para>
            <para>Removes pre-provisioning hook template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTProvisioningTemplateCmdlet.PreProvisioningHook_TargetArn">
            <summary>
            <para>
            <para>The ARN of the target function.</para><para><i>Note:</i> Only Lambda functions are currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTProvisioningTemplateCmdlet.TemplateName">
            <summary>
            <para>
            <para>The name of the fleet provisioning template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTProvisioningTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateProvisioningTemplateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTProvisioningTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateName parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTProvisioningTemplateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTRoleAliasCmdlet">
            <summary>
            Updates a role alias.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTRoleAliasCmdlet.CredentialDurationSecond">
            <summary>
            <para>
            <para>The number of seconds the credential will be valid.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTRoleAliasCmdlet.RoleAlias">
            <summary>
            <para>
            <para>The role alias to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTRoleAliasCmdlet.RoleArn">
            <summary>
            <para>
            <para>The role ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTRoleAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateRoleAliasResponse).
            Specifying the name of a property of type Amazon.IoT.Model.UpdateRoleAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTRoleAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RoleArn parameter.
            The -PassThru parameter is deprecated, use -Select '^RoleArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTRoleAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTScheduledAuditCmdlet">
            <summary>
            Updates a scheduled audit, including which checks are performed and how often the
            audit takes place.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTScheduledAuditCmdlet.DayOfMonth">
            <summary>
            <para>
            <para>The day of the month on which the scheduled audit takes place. Can be "1" through
            "31" or "LAST". This field is required if the "frequency" parameter is set to "MONTHLY".
            If days 29-31 are specified, and the month does not have that many days, the audit
            takes place on the "LAST" day of the month.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTScheduledAuditCmdlet.DayOfWeek">
            <summary>
            <para>
            <para>The day of the week on which the scheduled audit takes place. Can be one of "SUN",
            "MON", "TUE", "WED", "THU", "FRI", or "SAT". This field is required if the "frequency"
            parameter is set to "WEEKLY" or "BIWEEKLY".</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTScheduledAuditCmdlet.Frequency">
            <summary>
            <para>
            <para>How often the scheduled audit takes place. Can be one of "DAILY", "WEEKLY", "BIWEEKLY",
            or "MONTHLY". The start time of each audit is determined by the system.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTScheduledAuditCmdlet.ScheduledAuditName">
            <summary>
            <para>
            <para>The name of the scheduled audit. (Max. 128 chars)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTScheduledAuditCmdlet.TargetCheckName">
            <summary>
            <para>
            <para>Which checks are performed during the scheduled audit. Checks must be enabled for
            your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list
            of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code>
            to select which checks are enabled.)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTScheduledAuditCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ScheduledAuditArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateScheduledAuditResponse).
            Specifying the name of a property of type Amazon.IoT.Model.UpdateScheduledAuditResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTScheduledAuditCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScheduledAuditName parameter.
            The -PassThru parameter is deprecated, use -Select '^ScheduledAuditName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTScheduledAuditCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTSecurityProfileCmdlet">
            <summary>
            Updates a Device Defender security profile.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTSecurityProfileCmdlet.AdditionalMetricsToRetainV2">
            <summary>
            <para>
            <para>A list of metrics whose data is retained (stored). By default, data is retained for
            any metric used in the profile's behaviors, but it is also retained for any metric
            specified here.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTSecurityProfileCmdlet.AlertTarget">
            <summary>
            <para>
            <para>Where the alerts are sent. (Alerts are always sent to the console.)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTSecurityProfileCmdlet.Behavior">
            <summary>
            <para>
            <para>Specifies the behaviors that, when violated by a device (thing), cause an alert.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTSecurityProfileCmdlet.DeleteAdditionalMetricsToRetain">
            <summary>
            <para>
            <para>If true, delete all <code>additionalMetricsToRetain</code> defined for this security
            profile. If any <code>additionalMetricsToRetain</code> are defined in the current
            invocation, an exception occurs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTSecurityProfileCmdlet.DeleteAlertTarget">
            <summary>
            <para>
            <para>If true, delete all <code>alertTargets</code> defined for this security profile. If
            any <code>alertTargets</code> are defined in the current invocation, an exception
            occurs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTSecurityProfileCmdlet.DeleteBehavior">
            <summary>
            <para>
            <para>If true, delete all <code>behaviors</code> defined for this security profile. If any
            <code>behaviors</code> are defined in the current invocation, an exception occurs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTSecurityProfileCmdlet.ExpectedVersion">
            <summary>
            <para>
            <para>The expected version of the security profile. A new version is generated whenever
            the security profile is updated. If you specify a value that is different from the
            actual version, a <code>VersionConflictException</code> is thrown.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTSecurityProfileCmdlet.SecurityProfileDescription">
            <summary>
            <para>
            <para>A description of the security profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTSecurityProfileCmdlet.SecurityProfileName">
            <summary>
            <para>
            <para>The name of the security profile you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTSecurityProfileCmdlet.AdditionalMetricsToRetain">
            <summary>
            <para>
            <para>A list of metrics whose data is retained (stored). By default, data is retained for
            any metric used in the profile's <code>behaviors</code>, but it is also retained for
            any metric specified here.</para><para><b>Note:</b> This API field is deprecated. Please use <a>UpdateSecurityProfileRequest$additionalMetricsToRetainV2</a>
            instead.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTSecurityProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateSecurityProfileResponse).
            Specifying the name of a property of type Amazon.IoT.Model.UpdateSecurityProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTSecurityProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecurityProfileName parameter.
            The -PassThru parameter is deprecated, use -Select '^SecurityProfileName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTSecurityProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTStreamCmdlet">
            <summary>
            Updates an existing stream. The stream version will be incremented by one.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTStreamCmdlet.Description">
            <summary>
            <para>
            <para>The description of the stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTStreamCmdlet.File">
            <summary>
            <para>
            <para>The files associated with the stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTStreamCmdlet.RoleArn">
            <summary>
            <para>
            <para>An IAM role that allows the IoT service principal assumes to access your S3 files.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTStreamCmdlet.StreamId">
            <summary>
            <para>
            <para>The stream ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTStreamCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateStreamResponse).
            Specifying the name of a property of type Amazon.IoT.Model.UpdateStreamResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTStreamCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamId parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTStreamCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingCmdlet">
            <summary>
            Updates the data for a thing.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingCmdlet.AttributePayload">
            <summary>
            <para>
            <para>A list of thing attributes, a JSON string containing name-value pairs. For example:</para><para><code>{\"attributes\":{\"name1\":\"value2\"}}</code></para><para>This data is used to add new attributes or update existing attributes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingCmdlet.ExpectedVersion">
            <summary>
            <para>
            <para>The expected version of the thing record in the registry. If the version of the record
            in the registry does not match the expected version specified in the request, the
            <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingCmdlet.RemoveThingType">
            <summary>
            <para>
            <para>Remove a thing type association. If <b>true</b>, the association is removed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingCmdlet.ThingName">
            <summary>
            <para>
            <para>The name of the thing to update.</para><para>You can't change a thing's name. To change a thing's name, you must create a new thing,
            give it the new name, and then delete the old thing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingCmdlet.ThingTypeName">
            <summary>
            <para>
            <para>The name of the thing type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateThingResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingGroupCmdlet">
            <summary>
            Update a thing group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingGroupCmdlet.ThingGroupProperties_AttributePayload">
            <summary>
            <para>
            <para>The thing group attributes in JSON format.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingGroupCmdlet.ExpectedVersion">
            <summary>
            <para>
            <para>The expected version of the thing group. If this does not match the version of the
            thing group being updated, the update will fail.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingGroupCmdlet.ThingGroupProperties_ThingGroupDescription">
            <summary>
            <para>
            <para>The thing group description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingGroupCmdlet.ThingGroupName">
            <summary>
            <para>
            <para>The thing group to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Version'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateThingGroupResponse).
            Specifying the name of a property of type Amazon.IoT.Model.UpdateThingGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingGroupsForThingCmdlet">
            <summary>
            Updates the groups to which the thing belongs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingGroupsForThingCmdlet.OverrideDynamicGroup">
            <summary>
            <para>
            <para>Override dynamic thing groups with static thing groups when 10-group limit is reached.
            If a thing belongs to 10 thing groups, and one or more of those groups are dynamic
            thing groups, adding a thing to a static group removes the thing from the last dynamic
            group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingGroupsForThingCmdlet.ThingGroupsToAdd">
            <summary>
            <para>
            <para>The groups to which the thing will be added.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingGroupsForThingCmdlet.ThingGroupsToRemove">
            <summary>
            <para>
            <para>The groups from which the thing will be removed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingGroupsForThingCmdlet.ThingName">
            <summary>
            <para>
            <para>The thing whose group memberships will be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingGroupsForThingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateThingGroupsForThingResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingGroupsForThingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTThingGroupsForThingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTTopicRuleDestinationCmdlet">
            <summary>
            Updates a topic rule destination. You use this to change the status, endpoint URL,
            or confirmation URL of the destination.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTTopicRuleDestinationCmdlet.Arn">
            <summary>
            <para>
            <para>The ARN of the topic rule destination.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTTopicRuleDestinationCmdlet.Status">
            <summary>
            <para>
            <para>The status of the topic rule destination. Valid values are:</para><dl><dt>IN_PROGRESS</dt><dd><para>A topic rule destination was created but has not been confirmed. You can set <code>status</code>
            to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling
            <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be
            sent to your confirmation endpoint.</para></dd><dt>ENABLED</dt><dd><para>Confirmation was completed, and traffic to this destination is allowed. You can set
            <code>status</code> to <code>DISABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</para></dd><dt>DISABLED</dt><dd><para>Confirmation was completed, and traffic to this destination is not allowed. You can
            set <code>status</code> to <code>ENABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</para></dd><dt>ERROR</dt><dd><para>Confirmation could not be completed, for example if the confirmation timed out. You
            can call <code>GetTopicRuleDestination</code> for details about the error. You can
            set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>.
            Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge
            to be sent to your confirmation endpoint.</para></dd></dl>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTTopicRuleDestinationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.IoT.Model.UpdateTopicRuleDestinationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTTopicRuleDestinationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.IOT.UpdateIOTTopicRuleDestinationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
