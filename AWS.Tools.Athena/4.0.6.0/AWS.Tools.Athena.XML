<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.Athena</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.AddATHResourceTagCmdlet">
            <summary>
            Adds one or more tags to an Athena resource. A tag is a label that you assign to a
            resource. In Athena, a resource can be a workgroup or data catalog. Each tag consists
            of a key and an optional value, both of which you define. For example, you can use
            tags to categorize Athena workgroups or data catalogs by purpose, owner, or environment.
            Use a consistent set of tag keys to make it easier to search and filter workgroups
            or data catalogs in your account. For best practices, see <a href="https://aws.amazon.com/answers/account-management/aws-tagging-strategies/">Tagging
            Best Practices</a>. Tag keys can be from 1 to 128 UTF-8 Unicode characters, and tag
            values can be from 0 to 256 UTF-8 Unicode characters. Tags can use letters and numbers
            representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys and
            values are case-sensitive. Tag keys must be unique per resource. If you specify more
            than one tag, separate them by commas.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.AddATHResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para>Specifies the ARN of the Athena resource (workgroup or data catalog) to which tags
            are to be added.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.AddATHResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>A collection of one or more tags, separated by commas, to be added to an Athena workgroup
            or data catalog resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.AddATHResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.AddATHResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.AddATHResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.GetATHDatabaseCmdlet">
            <summary>
            Returns a database object for the specfied database and data catalog.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHDatabaseCmdlet.CatalogName">
            <summary>
            <para>
            <para>The name of the data catalog that contains the database to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHDatabaseCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the database to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHDatabaseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Database'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.GetDatabaseResponse).
            Specifying the name of a property of type Amazon.Athena.Model.GetDatabaseResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHDatabaseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatabaseName parameter.
            The -PassThru parameter is deprecated, use -Select '^DatabaseName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.GetATHDatabasisListCmdlet">
            <summary>
            Lists the databases in the specified data catalog.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHDatabasisListCmdlet.CatalogName">
            <summary>
            <para>
            <para>The name of the data catalog that contains the databases to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHDatabasisListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Specifies the maximum number of results to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHDatabasisListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token generated by the Athena service that specifies where to continue pagination
            if a previous request was truncated. To obtain the next set of pages, pass in the
            <code>NextToken</code> from the response object of the previous page call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHDatabasisListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DatabaseList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.ListDatabasesResponse).
            Specifying the name of a property of type Amazon.Athena.Model.ListDatabasesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHDatabasisListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CatalogName parameter.
            The -PassThru parameter is deprecated, use -Select '^CatalogName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHDatabasisListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.GetATHDataCatalogCmdlet">
            <summary>
            Returns the specified data catalog.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHDataCatalogCmdlet.Name">
            <summary>
            <para>
            <para>The name of the data catalog to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHDataCatalogCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DataCatalog'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.GetDataCatalogResponse).
            Specifying the name of a property of type Amazon.Athena.Model.GetDataCatalogResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHDataCatalogCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.GetATHDataCatalogListCmdlet">
            <summary>
            Lists the data catalogs in the current AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHDataCatalogListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Specifies the maximum number of data catalogs to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHDataCatalogListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token generated by the Athena service that specifies where to continue pagination
            if a previous request was truncated. To obtain the next set of pages, pass in the
            NextToken from the response object of the previous page call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHDataCatalogListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DataCatalogsSummary'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.ListDataCatalogsResponse).
            Specifying the name of a property of type Amazon.Athena.Model.ListDataCatalogsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHDataCatalogListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.GetATHNamedQueryCmdlet">
            <summary>
            Returns information about a single query. Requires that you have access to the workgroup
            in which the query was saved.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHNamedQueryCmdlet.NamedQueryId">
            <summary>
            <para>
            <para>The unique ID of the query. Use <a>ListNamedQueries</a> to get query IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHNamedQueryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NamedQuery'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.GetNamedQueryResponse).
            Specifying the name of a property of type Amazon.Athena.Model.GetNamedQueryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHNamedQueryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NamedQueryId parameter.
            The -PassThru parameter is deprecated, use -Select '^NamedQueryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.GetATHNamedQueryBatchCmdlet">
            <summary>
            Returns the details of a single named query or a list of up to 50 queries, which you
            provide as an array of query ID strings. Requires you to have access to the workgroup
            in which the queries were saved. Use <a>ListNamedQueriesInput</a> to get the list
            of named query IDs in the specified workgroup. If information could not be retrieved
            for a submitted query ID, information about the query ID submitted is listed under
            <a>UnprocessedNamedQueryId</a>. Named queries differ from executed queries. Use <a>BatchGetQueryExecutionInput</a>
            to get details about each unique query execution, and <a>ListQueryExecutionsInput</a>
            to get a list of query execution IDs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHNamedQueryBatchCmdlet.NamedQueryId">
            <summary>
            <para>
            <para>An array of query IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHNamedQueryBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.BatchGetNamedQueryResponse).
            Specifying the name of a property of type Amazon.Athena.Model.BatchGetNamedQueryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHNamedQueryBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NamedQueryId parameter.
            The -PassThru parameter is deprecated, use -Select '^NamedQueryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.GetATHNamedQueryListCmdlet">
            <summary>
            Provides a list of available query IDs only for queries saved in the specified workgroup.
            Requires that you have access to the specified workgroup. If a workgroup is not specified,
            lists the saved queries for the primary workgroup.
            
             
            <para>
            For code samples using the AWS SDK for Java, see <a href="http://docs.aws.amazon.com/athena/latest/ug/code-samples.html">Examples
            and Code Samples</a> in the <i>Amazon Athena User Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHNamedQueryListCmdlet.WorkGroup">
            <summary>
            <para>
            <para>The name of the workgroup from which the named queries are being returned. If a workgroup
            is not specified, the saved queries for the primary workgroup are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHNamedQueryListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of queries to return in this request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHNamedQueryListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token generated by the Athena service that specifies where to continue pagination
            if a previous request was truncated. To obtain the next set of pages, pass in the
            <code>NextToken</code> from the response object of the previous page call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHNamedQueryListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NamedQueryIds'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.ListNamedQueriesResponse).
            Specifying the name of a property of type Amazon.Athena.Model.ListNamedQueriesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHNamedQueryListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkGroup parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkGroup' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHNamedQueryListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryExecutionCmdlet">
            <summary>
            Returns information about a single execution of a query if you have access to the
            workgroup in which the query ran. Each time a query executes, information about the
            query execution is saved with a unique ID.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryExecutionCmdlet.QueryExecutionId">
            <summary>
            <para>
            <para>The unique ID of the query execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'QueryExecution'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.GetQueryExecutionResponse).
            Specifying the name of a property of type Amazon.Athena.Model.GetQueryExecutionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QueryExecutionId parameter.
            The -PassThru parameter is deprecated, use -Select '^QueryExecutionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryExecutionBatchCmdlet">
            <summary>
            Returns the details of a single query execution or a list of up to 50 query executions,
            which you provide as an array of query execution ID strings. Requires you to have
            access to the workgroup in which the queries ran. To get a list of query execution
            IDs, use <a>ListQueryExecutionsInput$WorkGroup</a>. Query executions differ from named
            (saved) queries. Use <a>BatchGetNamedQueryInput</a> to get details about named queries.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryExecutionBatchCmdlet.QueryExecutionId">
            <summary>
            <para>
            <para>An array of query execution IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryExecutionBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.BatchGetQueryExecutionResponse).
            Specifying the name of a property of type Amazon.Athena.Model.BatchGetQueryExecutionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryExecutionBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QueryExecutionId parameter.
            The -PassThru parameter is deprecated, use -Select '^QueryExecutionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryExecutionListCmdlet">
            <summary>
            Provides a list of available query execution IDs for the queries in the specified
            workgroup. If a workgroup is not specified, returns a list of query execution IDs
            for the primary workgroup. Requires you to have access to the workgroup in which the
            queries ran.
            
             
            <para>
            For code samples using the AWS SDK for Java, see <a href="http://docs.aws.amazon.com/athena/latest/ug/code-samples.html">Examples
            and Code Samples</a> in the <i>Amazon Athena User Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryExecutionListCmdlet.WorkGroup">
            <summary>
            <para>
            <para>The name of the workgroup from which queries are being returned. If a workgroup is
            not specified, a list of available query execution IDs for the queries in the primary
            workgroup is returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryExecutionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of query executions to return in this request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryExecutionListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token generated by the Athena service that specifies where to continue pagination
            if a previous request was truncated. To obtain the next set of pages, pass in the
            <code>NextToken</code> from the response object of the previous page call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryExecutionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'QueryExecutionIds'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.ListQueryExecutionsResponse).
            Specifying the name of a property of type Amazon.Athena.Model.ListQueryExecutionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryExecutionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkGroup parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkGroup' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryExecutionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryResultCmdlet">
            <summary>
            Streams the results of a single query execution specified by <code>QueryExecutionId</code>
            from the Athena query results location in Amazon S3. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/querying.html">Query Results</a>
            in the <i>Amazon Athena User Guide</i>. This request does not execute the query but
            returns results. Use <a>StartQueryExecution</a> to run a query.
            
             
            <para>
            To stream query results successfully, the IAM principal with permission to call <code>GetQueryResults</code>
            also must have permissions to the Amazon S3 <code>GetObject</code> action for the
            Athena query results location.
            </para><important><para>
            IAM principals with permission to the Amazon S3 <code>GetObject</code> action for
            the query results location are able to retrieve query results from Amazon S3 even
            if permission to the <code>GetQueryResults</code> action is denied. To restrict user
            or role access, ensure that Amazon S3 permissions to the Athena query location are
            denied.
            </para></important><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryResultCmdlet.QueryExecutionId">
            <summary>
            <para>
            <para>The unique ID of the query execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryResultCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results (rows) to return in this request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryResultCmdlet.NextToken">
            <summary>
            <para>
            <para>A token generated by the Athena service that specifies where to continue pagination
            if a previous request was truncated. To obtain the next set of pages, pass in the
            <code>NextToken</code> from the response object of the previous page call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryResultCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResultSet'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.GetQueryResultsResponse).
            Specifying the name of a property of type Amazon.Athena.Model.GetQueryResultsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryResultCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QueryExecutionId parameter.
            The -PassThru parameter is deprecated, use -Select '^QueryExecutionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHQueryResultCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.GetATHResourceTagCmdlet">
            <summary>
            Lists the tags associated with an Athena workgroup or data catalog resource.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para>Lists the tags for the resource with the specified ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHResourceTagCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request that lists the tags for the
            resource.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHResourceTagCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no additional results
            for this request, where the request lists the tags for the resource with the specified
            ARN.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.Athena.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHResourceTagCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.GetATHTableMetadataCmdlet">
            <summary>
            Returns table metadata for the specified catalog, database, and table.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHTableMetadataCmdlet.CatalogName">
            <summary>
            <para>
            <para>The name of the data catalog that contains the database and table metadata to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHTableMetadataCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the database that contains the table metadata to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHTableMetadataCmdlet.TableName">
            <summary>
            <para>
            <para>The name of the table for which metadata is returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHTableMetadataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TableMetadata'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.GetTableMetadataResponse).
            Specifying the name of a property of type Amazon.Athena.Model.GetTableMetadataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHTableMetadataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TableName parameter.
            The -PassThru parameter is deprecated, use -Select '^TableName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.GetATHTableMetadataListCmdlet">
            <summary>
            Lists the metadata for the tables in the specified data catalog database.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHTableMetadataListCmdlet.CatalogName">
            <summary>
            <para>
            <para>The name of the data catalog for which table metadata should be returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHTableMetadataListCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the database for which table metadata should be returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHTableMetadataListCmdlet.Expression">
            <summary>
            <para>
            <para>A regex filter that pattern-matches table names. If no expression is supplied, metadata
            for all tables are listed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHTableMetadataListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Specifies the maximum number of results to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHTableMetadataListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token generated by the Athena service that specifies where to continue pagination
            if a previous request was truncated. To obtain the next set of pages, pass in the
            NextToken from the response object of the previous page call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHTableMetadataListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TableMetadataList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.ListTableMetadataResponse).
            Specifying the name of a property of type Amazon.Athena.Model.ListTableMetadataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHTableMetadataListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatabaseName parameter.
            The -PassThru parameter is deprecated, use -Select '^DatabaseName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHTableMetadataListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.GetATHWorkGroupCmdlet">
            <summary>
            Returns information about the workgroup with the specified name.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHWorkGroupCmdlet.WorkGroup">
            <summary>
            <para>
            <para>The name of the workgroup.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHWorkGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WorkGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.GetWorkGroupResponse).
            Specifying the name of a property of type Amazon.Athena.Model.GetWorkGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHWorkGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkGroup parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkGroup' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.GetATHWorkGroupListCmdlet">
            <summary>
            Lists available workgroups for the account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHWorkGroupListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of workgroups to return in this request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHWorkGroupListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token generated by the Athena service that specifies where to continue pagination
            if a previous request was truncated. To obtain the next set of pages, pass in the
            <code>NextToken</code> from the response object of the previous page call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHWorkGroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WorkGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.ListWorkGroupsResponse).
            Specifying the name of a property of type Amazon.Athena.Model.ListWorkGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.GetATHWorkGroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.NewATHDataCatalogCmdlet">
            <summary>
            Creates (registers) a data catalog with the specified name and properties. Catalogs
            created are visible to all users of the same AWS account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHDataCatalogCmdlet.Description">
            <summary>
            <para>
            <para>A description of the data catalog to be created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHDataCatalogCmdlet.Name">
            <summary>
            <para>
            <para>The name of the data catalog to create. The catalog name must be unique for the AWS
            account and can use a maximum of 128 alphanumeric, underscore, at sign, or hyphen
            characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHDataCatalogCmdlet.Parameter">
            <summary>
            <para>
            <para>Specifies the Lambda function or functions to use for creating the data catalog. This
            is a mapping whose values depend on the catalog type. </para><ul><li><para>For the <code>HIVE</code> data catalog type, use the following syntax. The <code>metadata-function</code>
            parameter is required. <code>The sdk-version</code> parameter is optional and defaults
            to the currently supported version.</para><para><code>metadata-function=<i>lambda_arn</i>, sdk-version=<i>version_number</i></code></para></li><li><para>For the <code>LAMBDA</code> data catalog type, use one of the following sets of required
            parameters, but not both.</para><ul><li><para>If you have one Lambda function that processes metadata and another for reading the
            actual data, use the following syntax. Both parameters are required.</para><para><code>metadata-function=<i>lambda_arn</i>, record-function=<i>lambda_arn</i></code></para></li><li><para> If you have a composite Lambda function that processes both metadata and data, use
            the following syntax to specify your Lambda function.</para><para><code>function=<i>lambda_arn</i></code></para></li></ul></li><li><para>The <code>GLUE</code> type has no parameters.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHDataCatalogCmdlet.Tag">
            <summary>
            <para>
            <para>A list of comma separated tags to add to the data catalog that is created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHDataCatalogCmdlet.Type">
            <summary>
            <para>
            <para>The type of data catalog to create: <code>LAMBDA</code> for a federated catalog, <code>GLUE</code>
            for AWS Glue Catalog, or <code>HIVE</code> for an external hive metastore.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHDataCatalogCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.CreateDataCatalogResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHDataCatalogCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHDataCatalogCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.NewATHNamedQueryCmdlet">
            <summary>
            Creates a named query in the specified workgroup. Requires that you have access to
            the workgroup.
            
             
            <para>
            For code samples using the AWS SDK for Java, see <a href="http://docs.aws.amazon.com/athena/latest/ug/code-samples.html">Examples
            and Code Samples</a> in the <i>Amazon Athena User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHNamedQueryCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique case-sensitive string used to ensure the request to create the query is idempotent
            (executes only once). If another <code>CreateNamedQuery</code> request is received,
            the same response is returned and another query is not created. If a parameter has
            changed, for example, the <code>QueryString</code>, an error is returned.</para><important><para>This token is listed as not required because AWS SDKs (for example the AWS SDK for
            Java) auto-generate the token for users. If you are not using the AWS SDK or the AWS
            CLI, you must provide this token or the action will fail.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHNamedQueryCmdlet.Database">
            <summary>
            <para>
            <para>The database to which the query belongs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHNamedQueryCmdlet.Description">
            <summary>
            <para>
            <para>The query description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHNamedQueryCmdlet.Name">
            <summary>
            <para>
            <para>The query name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHNamedQueryCmdlet.QueryString">
            <summary>
            <para>
            <para>The contents of the query with all query statements.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHNamedQueryCmdlet.WorkGroup">
            <summary>
            <para>
            <para>The name of the workgroup in which the named query is being created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHNamedQueryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NamedQueryId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.CreateNamedQueryResponse).
            Specifying the name of a property of type Amazon.Athena.Model.CreateNamedQueryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHNamedQueryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QueryString parameter.
            The -PassThru parameter is deprecated, use -Select '^QueryString' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHNamedQueryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.NewATHWorkGroupCmdlet">
            <summary>
            Creates a workgroup with the specified name.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHWorkGroupCmdlet.Configuration_BytesScannedCutoffPerQuery">
            <summary>
            <para>
            <para>The upper data usage limit (cutoff) for the amount of bytes a single query in a workgroup
            is allowed to scan.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHWorkGroupCmdlet.Description">
            <summary>
            <para>
            <para>The workgroup description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHWorkGroupCmdlet.EncryptionConfiguration_EncryptionOption">
            <summary>
            <para>
            <para>Indicates whether Amazon S3 server-side encryption with Amazon S3-managed keys (<code>SSE-S3</code>),
            server-side encryption with KMS-managed keys (<code>SSE-KMS</code>), or client-side
            encryption with KMS-managed keys (CSE-KMS) is used.</para><para>If a query runs in a workgroup and the workgroup overrides client-side settings, then
            the workgroup's setting for encryption is used. It specifies whether query results
            must be encrypted, for all queries that run in this workgroup. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHWorkGroupCmdlet.Configuration_EnforceWorkGroupConfiguration">
            <summary>
            <para>
            <para>If set to "true", the settings for the workgroup override client-side settings. If
            set to "false", client-side settings are used. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html">Workgroup
            Settings Override Client-Side Settings</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHWorkGroupCmdlet.EncryptionConfiguration_KmsKey">
            <summary>
            <para>
            <para>For <code>SSE-KMS</code> and <code>CSE-KMS</code>, this is the KMS key ARN or ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHWorkGroupCmdlet.Name">
            <summary>
            <para>
            <para>The workgroup name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHWorkGroupCmdlet.ResultConfiguration_OutputLocation">
            <summary>
            <para>
            <para>The location in Amazon S3 where your query results are stored, such as <code>s3://path/to/query/bucket/</code>.
            To run the query, you must specify the query results location using one of the ways:
            either for individual queries using either this setting (client-side), or in the workgroup,
            using <a>WorkGroupConfiguration</a>. If none of them is set, Athena issues an error
            that no output location is provided. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/querying.html">Query
            Results</a>. If workgroup settings override client-side settings, then the query uses
            the settings specified for the workgroup. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHWorkGroupCmdlet.Configuration_PublishCloudWatchMetricsEnabled">
            <summary>
            <para>
            <para>Indicates that the Amazon CloudWatch metrics are enabled for the workgroup.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHWorkGroupCmdlet.Configuration_RequesterPaysEnabled">
            <summary>
            <para>
            <para>If set to <code>true</code>, allows members assigned to a workgroup to reference Amazon
            S3 Requester Pays buckets in queries. If set to <code>false</code>, workgroup members
            cannot query data from Requester Pays buckets, and queries that retrieve data from
            Requester Pays buckets cause an error. The default is <code>false</code>. For more
            information about Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html">Requester
            Pays Buckets</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHWorkGroupCmdlet.Tag">
            <summary>
            <para>
            <para>A list of comma separated tags to add to the workgroup that is created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHWorkGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.CreateWorkGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHWorkGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.NewATHWorkGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.RemoveATHDataCatalogCmdlet">
            <summary>
            Deletes a data catalog.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.RemoveATHDataCatalogCmdlet.Name">
            <summary>
            <para>
            <para>The name of the data catalog to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.RemoveATHDataCatalogCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.DeleteDataCatalogResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.RemoveATHDataCatalogCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.RemoveATHDataCatalogCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.RemoveATHNamedQueryCmdlet">
            <summary>
            Deletes the named query if you have access to the workgroup in which the query was
            saved.
            
             
            <para>
            For code samples using the AWS SDK for Java, see <a href="http://docs.aws.amazon.com/athena/latest/ug/code-samples.html">Examples
            and Code Samples</a> in the <i>Amazon Athena User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.RemoveATHNamedQueryCmdlet.NamedQueryId">
            <summary>
            <para>
            <para>The unique ID of the query to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.RemoveATHNamedQueryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.DeleteNamedQueryResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.RemoveATHNamedQueryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NamedQueryId parameter.
            The -PassThru parameter is deprecated, use -Select '^NamedQueryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.RemoveATHNamedQueryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.RemoveATHResourceTagCmdlet">
            <summary>
            Removes one or more tags from a data catalog or workgroup resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.RemoveATHResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para>Specifies the ARN of the resource from which tags are to be removed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.RemoveATHResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>A comma-separated list of one or more tag keys whose tags are to be removed from the
            specified resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.RemoveATHResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.RemoveATHResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.RemoveATHResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.RemoveATHWorkGroupCmdlet">
            <summary>
            Deletes the workgroup with the specified name. The primary workgroup cannot be deleted.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.RemoveATHWorkGroupCmdlet.RecursiveDeleteOption">
            <summary>
            <para>
            <para>The option to delete the workgroup and its contents even if the workgroup contains
            any named queries.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.RemoveATHWorkGroupCmdlet.WorkGroup">
            <summary>
            <para>
            <para>The unique name of the workgroup to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.RemoveATHWorkGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.DeleteWorkGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.RemoveATHWorkGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkGroup parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkGroup' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.RemoveATHWorkGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.StartATHQueryExecutionCmdlet">
            <summary>
            Runs the SQL query statements contained in the <code>Query</code>. Requires you to
            have access to the workgroup in which the query ran. Running queries against an external
            catalog requires <a>GetDataCatalog</a> permission to the catalog. For code samples
            using the AWS SDK for Java, see <a href="http://docs.aws.amazon.com/athena/latest/ug/code-samples.html">Examples
            and Code Samples</a> in the <i>Amazon Athena User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.StartATHQueryExecutionCmdlet.QueryExecutionContext_Catalog">
            <summary>
            <para>
            <para>The name of the data catalog used in the query execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.StartATHQueryExecutionCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique case-sensitive string used to ensure the request to create the query is idempotent
            (executes only once). If another <code>StartQueryExecution</code> request is received,
            the same response is returned and another query is not created. If a parameter has
            changed, for example, the <code>QueryString</code>, an error is returned.</para><important><para>This token is listed as not required because AWS SDKs (for example the AWS SDK for
            Java) auto-generate the token for users. If you are not using the AWS SDK or the AWS
            CLI, you must provide this token or the action will fail.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.StartATHQueryExecutionCmdlet.QueryExecutionContext_Database">
            <summary>
            <para>
            <para>The name of the database used in the query execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.StartATHQueryExecutionCmdlet.EncryptionConfiguration_EncryptionOption">
            <summary>
            <para>
            <para>Indicates whether Amazon S3 server-side encryption with Amazon S3-managed keys (<code>SSE-S3</code>),
            server-side encryption with KMS-managed keys (<code>SSE-KMS</code>), or client-side
            encryption with KMS-managed keys (CSE-KMS) is used.</para><para>If a query runs in a workgroup and the workgroup overrides client-side settings, then
            the workgroup's setting for encryption is used. It specifies whether query results
            must be encrypted, for all queries that run in this workgroup. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.StartATHQueryExecutionCmdlet.EncryptionConfiguration_KmsKey">
            <summary>
            <para>
            <para>For <code>SSE-KMS</code> and <code>CSE-KMS</code>, this is the KMS key ARN or ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.StartATHQueryExecutionCmdlet.ResultConfiguration_OutputLocation">
            <summary>
            <para>
            <para>The location in Amazon S3 where your query results are stored, such as <code>s3://path/to/query/bucket/</code>.
            To run the query, you must specify the query results location using one of the ways:
            either for individual queries using either this setting (client-side), or in the workgroup,
            using <a>WorkGroupConfiguration</a>. If none of them is set, Athena issues an error
            that no output location is provided. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/querying.html">Query
            Results</a>. If workgroup settings override client-side settings, then the query uses
            the settings specified for the workgroup. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.StartATHQueryExecutionCmdlet.QueryString">
            <summary>
            <para>
            <para>The SQL query statements to be executed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.StartATHQueryExecutionCmdlet.WorkGroup">
            <summary>
            <para>
            <para>The name of the workgroup in which the query is being started.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.StartATHQueryExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'QueryExecutionId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.StartQueryExecutionResponse).
            Specifying the name of a property of type Amazon.Athena.Model.StartQueryExecutionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.StartATHQueryExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QueryString parameter.
            The -PassThru parameter is deprecated, use -Select '^QueryString' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.StartATHQueryExecutionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.StopATHQueryExecutionCmdlet">
            <summary>
            Stops a query execution. Requires you to have access to the workgroup in which the
            query ran.
            
             
            <para>
            For code samples using the AWS SDK for Java, see <a href="http://docs.aws.amazon.com/athena/latest/ug/code-samples.html">Examples
            and Code Samples</a> in the <i>Amazon Athena User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.StopATHQueryExecutionCmdlet.QueryExecutionId">
            <summary>
            <para>
            <para>The unique ID of the query execution to stop.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.StopATHQueryExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.StopQueryExecutionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.StopATHQueryExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QueryExecutionId parameter.
            The -PassThru parameter is deprecated, use -Select '^QueryExecutionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.StopATHQueryExecutionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.UpdateATHDataCatalogCmdlet">
            <summary>
            Updates the data catalog that has the specified name.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHDataCatalogCmdlet.Description">
            <summary>
            <para>
            <para>New or modified text that describes the data catalog.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHDataCatalogCmdlet.Name">
            <summary>
            <para>
            <para>The name of the data catalog to update. The catalog name must be unique for the AWS
            account and can use a maximum of 128 alphanumeric, underscore, at sign, or hyphen
            characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHDataCatalogCmdlet.Parameter">
            <summary>
            <para>
            <para>Specifies the Lambda function or functions to use for updating the data catalog. This
            is a mapping whose values depend on the catalog type. </para><ul><li><para>For the <code>HIVE</code> data catalog type, use the following syntax. The <code>metadata-function</code>
            parameter is required. <code>The sdk-version</code> parameter is optional and defaults
            to the currently supported version.</para><para><code>metadata-function=<i>lambda_arn</i>, sdk-version=<i>version_number</i></code></para></li><li><para>For the <code>LAMBDA</code> data catalog type, use one of the following sets of required
            parameters, but not both.</para><ul><li><para>If you have one Lambda function that processes metadata and another for reading the
            actual data, use the following syntax. Both parameters are required.</para><para><code>metadata-function=<i>lambda_arn</i>, record-function=<i>lambda_arn</i></code></para></li><li><para> If you have a composite Lambda function that processes both metadata and data, use
            the following syntax to specify your Lambda function.</para><para><code>function=<i>lambda_arn</i></code></para></li></ul></li><li><para>The <code>GLUE</code> type has no parameters.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHDataCatalogCmdlet.Type">
            <summary>
            <para>
            <para>Specifies the type of data catalog to update. Specify <code>LAMBDA</code> for a federated
            catalog, <code>GLUE</code> for AWS Glue Catalog, or <code>HIVE</code> for an external
            hive metastore.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHDataCatalogCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.UpdateDataCatalogResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHDataCatalogCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHDataCatalogCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ATH.UpdateATHWorkGroupCmdlet">
            <summary>
            Updates the workgroup with the specified name. The workgroup's name cannot be changed.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHWorkGroupCmdlet.ConfigurationUpdates_BytesScannedCutoffPerQuery">
            <summary>
            <para>
            <para>The upper limit (cutoff) for the amount of bytes a single query in a workgroup is
            allowed to scan.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHWorkGroupCmdlet.Description">
            <summary>
            <para>
            <para>The workgroup description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHWorkGroupCmdlet.EncryptionConfiguration_EncryptionOption">
            <summary>
            <para>
            <para>Indicates whether Amazon S3 server-side encryption with Amazon S3-managed keys (<code>SSE-S3</code>),
            server-side encryption with KMS-managed keys (<code>SSE-KMS</code>), or client-side
            encryption with KMS-managed keys (CSE-KMS) is used.</para><para>If a query runs in a workgroup and the workgroup overrides client-side settings, then
            the workgroup's setting for encryption is used. It specifies whether query results
            must be encrypted, for all queries that run in this workgroup. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHWorkGroupCmdlet.ConfigurationUpdates_EnforceWorkGroupConfiguration">
            <summary>
            <para>
            <para>If set to "true", the settings for the workgroup override client-side settings. If
            set to "false" client-side settings are used. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html">Workgroup
            Settings Override Client-Side Settings</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHWorkGroupCmdlet.EncryptionConfiguration_KmsKey">
            <summary>
            <para>
            <para>For <code>SSE-KMS</code> and <code>CSE-KMS</code>, this is the KMS key ARN or ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHWorkGroupCmdlet.ResultConfigurationUpdates_OutputLocation">
            <summary>
            <para>
            <para>The location in Amazon S3 where your query results are stored, such as <code>s3://path/to/query/bucket/</code>.
            For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/querying.html">Query
            Results</a> If workgroup settings override client-side settings, then the query uses
            the location for the query results and the encryption configuration that are specified
            for the workgroup. The "workgroup settings override" is specified in EnforceWorkGroupConfiguration
            (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHWorkGroupCmdlet.ConfigurationUpdates_PublishCloudWatchMetricsEnabled">
            <summary>
            <para>
            <para>Indicates whether this workgroup enables publishing metrics to Amazon CloudWatch.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHWorkGroupCmdlet.ConfigurationUpdates_RemoveBytesScannedCutoffPerQuery">
            <summary>
            <para>
            <para>Indicates that the data usage control limit per query is removed. <a>WorkGroupConfiguration$BytesScannedCutoffPerQuery</a></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHWorkGroupCmdlet.ResultConfigurationUpdates_RemoveEncryptionConfiguration">
            <summary>
            <para>
            <para>If set to "true", indicates that the previously-specified encryption configuration
            (also known as the client-side setting) for queries in this workgroup should be ignored
            and set to null. If set to "false" or not set, and a value is present in the EncryptionConfiguration
            in ResultConfigurationUpdates (the client-side setting), the EncryptionConfiguration
            in the workgroup's ResultConfiguration will be updated with the new value. For more
            information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html">Workgroup
            Settings Override Client-Side Settings</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHWorkGroupCmdlet.ResultConfigurationUpdates_RemoveOutputLocation">
            <summary>
            <para>
            <para>If set to "true", indicates that the previously-specified query results location (also
            known as a client-side setting) for queries in this workgroup should be ignored and
            set to null. If set to "false" or not set, and a value is present in the OutputLocation
            in ResultConfigurationUpdates (the client-side setting), the OutputLocation in the
            workgroup's ResultConfiguration will be updated with the new value. For more information,
            see <a href="https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html">Workgroup
            Settings Override Client-Side Settings</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHWorkGroupCmdlet.ConfigurationUpdates_RequesterPaysEnabled">
            <summary>
            <para>
            <para>If set to <code>true</code>, allows members assigned to a workgroup to specify Amazon
            S3 Requester Pays buckets in queries. If set to <code>false</code>, workgroup members
            cannot query data from Requester Pays buckets, and queries that retrieve data from
            Requester Pays buckets cause an error. The default is <code>false</code>. For more
            information about Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html">Requester
            Pays Buckets</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHWorkGroupCmdlet.State">
            <summary>
            <para>
            <para>The workgroup state that will be updated for the given workgroup.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHWorkGroupCmdlet.WorkGroup">
            <summary>
            <para>
            <para>The specified workgroup that will be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHWorkGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Athena.Model.UpdateWorkGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHWorkGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkGroup parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkGroup' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ATH.UpdateATHWorkGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
