<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.DeviceFarm</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.AddDFResourceTagCmdlet">
            <summary>
            Associates the specified tags to a resource with the specified <code>resourceArn</code>.
            If existing tags on a resource are not specified in the request parameters, they are
            not changed. When a resource is deleted, the tags associated with that resource are
            also deleted.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.AddDFResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource or resources to which to add tags.
            You can associate tags with the following Device Farm resources: <code>PROJECT</code>,
            <code>RUN</code>, <code>NETWORK_PROFILE</code>, <code>INSTANCE_PROFILE</code>, <code>DEVICE_INSTANCE</code>,
            <code>SESSION</code>, <code>DEVICE_POOL</code>, <code>DEVICE</code>, and <code>VPCE_CONFIGURATION</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.AddDFResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can
            have a maximum character length of 128 characters. Tag values can have a maximum length
            of 256 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.AddDFResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.AddDFResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.AddDFResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFAccountSettingListCmdlet">
            <summary>
            Returns the number of unmetered iOS or unmetered Android devices that have been purchased
            by the account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFAccountSettingListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AccountSettings'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.GetAccountSettingsResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.GetAccountSettingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFArtifactListCmdlet">
            <summary>
            Gets information about artifacts.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFArtifactListCmdlet.Arn">
            <summary>
            <para>
            <para>The run, job, suite, or test ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFArtifactListCmdlet.Type">
            <summary>
            <para>
            <para>The artifacts' type.</para><para>Allowed values include:</para><ul><li><para>FILE</para></li><li><para>LOG</para></li><li><para>SCREENSHOT</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFArtifactListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFArtifactListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Artifacts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListArtifactsResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListArtifactsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFArtifactListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFArtifactListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceCmdlet">
            <summary>
            Gets information about a unique device type.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceCmdlet.Arn">
            <summary>
            <para>
            <para>The device type's ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Device'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.GetDeviceResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.GetDeviceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceInstanceCmdlet">
            <summary>
            Returns information about a device instance that belongs to a private device fleet.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceInstanceCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the instance you're requesting information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DeviceInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.GetDeviceInstanceResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.GetDeviceInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceInstanceListCmdlet">
            <summary>
            Returns information about the private device instances associated with one or more
            AWS accounts.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceInstanceListCmdlet.MaxResult">
            <summary>
            <para>
            <para>An integer that specifies the maximum number of items you want to return in the API
            response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceInstanceListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceInstanceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DeviceInstances'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListDeviceInstancesResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListDeviceInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceInstanceListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MaxResult parameter.
            The -PassThru parameter is deprecated, use -Select '^MaxResult' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceInstanceListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceListCmdlet">
            <summary>
            Gets information about unique device types.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceListCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the project.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceListCmdlet.Filter">
            <summary>
            <para>
            <para>Used to select a set of devices. A filter is made up of an attribute, an operator,
            and one or more values.</para><ul><li><para>Attribute: The aspect of a device such as platform or model used as the selection
            criteria in a device filter.</para><para>Allowed values include:</para><ul><li><para>ARN: The Amazon Resource Name (ARN) of the device (for example, <code>arn:aws:devicefarm:us-west-2::device:12345Example</code>).</para></li><li><para>PLATFORM: The device platform. Valid values are ANDROID or IOS.</para></li><li><para>OS_VERSION: The operating system version (for example, 10.3.2).</para></li><li><para>MODEL: The device model (for example, iPad 5th Gen).</para></li><li><para>AVAILABILITY: The current availability of the device. Valid values are AVAILABLE,
            HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</para></li><li><para>FORM_FACTOR: The device form factor. Valid values are PHONE or TABLET.</para></li><li><para>MANUFACTURER: The device manufacturer (for example, Apple).</para></li><li><para>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access. Valid values
            are TRUE or FALSE.</para></li><li><para>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote debugging. Valid values
            are TRUE or FALSE. Because remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
            longer supported</a>, this attribute is ignored.</para></li><li><para>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</para></li><li><para>INSTANCE_LABELS: The label of the device instance.</para></li><li><para>FLEET_TYPE: The fleet type. Valid values are PUBLIC or PRIVATE.</para></li></ul></li><li><para>Operator: The filter operator.</para><ul><li><para>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</para></li><li><para>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</para></li><li><para>The IN and NOT_IN operators are available for the ARN, OS_VERSION, MODEL, MANUFACTURER,
            and INSTANCE_ARN attributes.</para></li><li><para>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS operators
            are also available for the OS_VERSION attribute.</para></li></ul></li><li><para>Values: An array of one or more filter values.</para><ul><li><para>The IN and NOT_IN operators take a values array that has one or more elements.</para></li><li><para>The other operators require an array with a single element.</para></li><li><para>In a request, the AVAILABILITY attribute takes the following values: AVAILABLE, HIGHLY_AVAILABLE,
            BUSY, or TEMPORARY_NOT_AVAILABLE.</para></li></ul></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Devices'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListDevicesResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListDevicesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDeviceListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCmdlet">
            <summary>
            Gets information about a device pool.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCmdlet.Arn">
            <summary>
            <para>
            <para>The device pool's ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DevicePool'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.GetDevicePoolResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.GetDevicePoolResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet">
            <summary>
            Gets information about compatibility with a device pool.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.CustomerArtifactPaths_AndroidPath">
            <summary>
            <para>
            <para>Comma-separated list of paths on the Android device where the artifacts generated
            by the customer's tests are pulled from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.AppArn">
            <summary>
            <para>
            <para>The ARN of the app that is associated with the specified device pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.Configuration_AuxiliaryApp">
            <summary>
            <para>
            <para>A list of upload ARNs for app packages to be installed with your app.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.Configuration_BillingMethod">
            <summary>
            <para>
            <para>Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>.
            If the parameter is not specified, the default value is <code>metered</code>.</para><note><para>If you have purchased unmetered device slots, you must set this parameter to <code>unmetered</code>
            to make use of them. Otherwise, your run counts against your metered time.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.Radios_Bluetooth">
            <summary>
            <para>
            <para>True if Bluetooth is enabled at the beginning of the test. Otherwise, false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.CustomerArtifactPaths_DeviceHostPath">
            <summary>
            <para>
            <para>Comma-separated list of paths in the test execution environment where the artifacts
            generated by the customer's tests are pulled from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.DevicePoolArn">
            <summary>
            <para>
            <para>The device pool's ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.Configuration_ExtraDataPackageArn">
            <summary>
            <para>
            <para>The ARN of the extra data for the run. The extra data is a .zip file that AWS Device
            Farm extracts to external data for Android or the app's sandbox for iOS.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.Test_Filter">
            <summary>
            <para>
            <para>The test's filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.Radios_Gp">
            <summary>
            <para>
            <para>True if GPS is enabled at the beginning of the test. Otherwise, false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.CustomerArtifactPaths_IosPath">
            <summary>
            <para>
            <para>Comma-separated list of paths on the iOS device where the artifacts generated by the
            customer's tests are pulled from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.Location_Latitude">
            <summary>
            <para>
            <para>The latitude.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.Configuration_Locale">
            <summary>
            <para>
            <para>Information about the locale that is used for the run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.Location_Longitude">
            <summary>
            <para>
            <para>The longitude.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.Configuration_NetworkProfileArn">
            <summary>
            <para>
            <para>Reserved for internal use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.Radios_Nfc">
            <summary>
            <para>
            <para>True if NFC is enabled at the beginning of the test. Otherwise, false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.Test_Parameter">
            <summary>
            <para>
            <para>The test's parameters, such as test framework parameters and fixture settings. Parameters
            are represented by name-value pairs of strings.</para><para>For all tests:</para><ul><li><para><code>app_performance_monitoring</code>: Performance monitoring is enabled by default.
            Set this parameter to false to disable it.</para></li></ul><para>For Calabash tests:</para><ul><li><para>profile: A cucumber profile (for example, <code>my_profile_name</code>).</para></li><li><para>tags: You can limit execution to features or scenarios that have (or don't have) certain
            tags (for example, @smoke or @smoke,~@wip).</para></li></ul><para>For Appium tests (all types):</para><ul><li><para>appium_version: The Appium version. Currently supported values are 1.6.5 (and later),
            latest, and default.</para><ul><li><para>latest runs the latest Appium version supported by Device Farm (1.9.1).</para></li><li><para>For default, Device Farm selects a compatible version of Appium for the device. The
            current behavior is to run 1.7.2 on Android devices and iOS 9 and earlier and 1.7.2
            for iOS 10 and later.</para></li><li><para>This behavior is subject to change.</para></li></ul></li></ul><para>For fuzz tests (Android only):</para><ul><li><para>event_count: The number of events, between 1 and 10000, that the UI fuzz test should
            perform.</para></li><li><para>throttle: The time, in ms, between 0 and 1000, that the UI fuzz test should wait between
            events.</para></li><li><para>seed: A seed to use for randomizing the UI fuzz test. Using the same seed value between
            tests ensures identical event sequences.</para></li></ul><para>For Explorer tests:</para><ul><li><para>username: A user name to use if the Explorer encounters a login form. If not supplied,
            no user name is inserted.</para></li><li><para>password: A password to use if the Explorer encounters a login form. If not supplied,
            no password is inserted.</para></li></ul><para>For Instrumentation:</para><ul><li><para>filter: A test filter string. Examples:</para><ul><li><para>Running a single test case: <code>com.android.abc.Test1</code></para></li><li><para>Running a single test: <code>com.android.abc.Test1#smoke</code></para></li><li><para>Running multiple tests: <code>com.android.abc.Test1,com.android.abc.Test2</code></para></li></ul></li></ul><para>For XCTest and XCTestUI:</para><ul><li><para>filter: A test filter string. Examples:</para><ul><li><para>Running a single test class: <code>LoginTests</code></para></li><li><para>Running a multiple test classes: <code>LoginTests,SmokeTests</code></para></li><li><para>Running a single test: <code>LoginTests/testValid</code></para></li><li><para>Running multiple tests: <code>LoginTests/testValid,LoginTests/testInvalid</code></para></li></ul></li></ul><para>For UIAutomator:</para><ul><li><para>filter: A test filter string. Examples:</para><ul><li><para>Running a single test case: <code>com.android.abc.Test1</code></para></li><li><para>Running a single test: <code>com.android.abc.Test1#smoke</code></para></li><li><para>Running multiple tests: <code>com.android.abc.Test1,com.android.abc.Test2</code></para></li></ul></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.Test_TestPackageArn">
            <summary>
            <para>
            <para>The ARN of the uploaded test to be run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.Test_TestSpecArn">
            <summary>
            <para>
            <para>The ARN of the YAML-formatted test specification.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.TestType">
            <summary>
            <para>
            <para>The test type for the specified device pool.</para><para>Allowed values include the following:</para><ul><li><para>BUILTIN_FUZZ.</para></li><li><para>BUILTIN_EXPLORER. For Android, an app explorer that traverses an Android app, interacting
            with it and capturing screenshots at the same time.</para></li><li><para>APPIUM_JAVA_JUNIT.</para></li><li><para>APPIUM_JAVA_TESTNG.</para></li><li><para>APPIUM_PYTHON.</para></li><li><para>APPIUM_NODE.</para></li><li><para>APPIUM_RUBY.</para></li><li><para>APPIUM_WEB_JAVA_JUNIT.</para></li><li><para>APPIUM_WEB_JAVA_TESTNG.</para></li><li><para>APPIUM_WEB_PYTHON.</para></li><li><para>APPIUM_WEB_NODE.</para></li><li><para>APPIUM_WEB_RUBY.</para></li><li><para>CALABASH.</para></li><li><para>INSTRUMENTATION.</para></li><li><para>UIAUTOMATION.</para></li><li><para>UIAUTOMATOR.</para></li><li><para>XCTEST.</para></li><li><para>XCTEST_UI.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.Test_Type">
            <summary>
            <para>
            <para>The test's type.</para><para>Must be one of the following values:</para><ul><li><para>BUILTIN_FUZZ</para></li><li><para>BUILTIN_EXPLORER. For Android, an app explorer that traverses an Android app, interacting
            with it and capturing screenshots at the same time.</para></li><li><para>APPIUM_JAVA_JUNIT</para></li><li><para>APPIUM_JAVA_TESTNG</para></li><li><para>APPIUM_PYTHON</para></li><li><para>APPIUM_NODE</para></li><li><para>APPIUM_RUBY</para></li><li><para>APPIUM_WEB_JAVA_JUNIT</para></li><li><para>APPIUM_WEB_JAVA_TESTNG</para></li><li><para>APPIUM_WEB_PYTHON</para></li><li><para>APPIUM_WEB_NODE</para></li><li><para>APPIUM_WEB_RUBY</para></li><li><para>CALABASH</para></li><li><para>INSTRUMENTATION</para></li><li><para>UIAUTOMATION</para></li><li><para>UIAUTOMATOR</para></li><li><para>XCTEST</para></li><li><para>XCTEST_UI</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.Configuration_VpceConfigurationArn">
            <summary>
            <para>
            <para>An array of ARNs for your VPC endpoint configurations.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.Radios_Wifi">
            <summary>
            <para>
            <para>True if Wi-Fi is enabled at the beginning of the test. Otherwise, false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolCompatibilityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.GetDevicePoolCompatibilityResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.GetDevicePoolCompatibilityResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolListCmdlet">
            <summary>
            Gets information about device pools.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolListCmdlet.Arn">
            <summary>
            <para>
            <para>The project ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolListCmdlet.Type">
            <summary>
            <para>
            <para>The device pools' type.</para><para>Allowed values include:</para><ul><li><para>CURATED: A device pool that is created and managed by AWS Device Farm.</para></li><li><para>PRIVATE: A device pool that is created and managed by the device pool developer.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DevicePools'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListDevicePoolsResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListDevicePoolsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFDevicePoolListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFInstanceProfileCmdlet">
            <summary>
            Returns information about the specified instance profile.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFInstanceProfileCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an instance profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFInstanceProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceProfile'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.GetInstanceProfileResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.GetInstanceProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFInstanceProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFInstanceProfileListCmdlet">
            <summary>
            Returns information about all the instance profiles in an AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFInstanceProfileListCmdlet.MaxResult">
            <summary>
            <para>
            <para>An integer that specifies the maximum number of items you want to return in the API
            response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFInstanceProfileListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFInstanceProfileListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceProfiles'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListInstanceProfilesResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListInstanceProfilesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFInstanceProfileListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MaxResult parameter.
            The -PassThru parameter is deprecated, use -Select '^MaxResult' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFInstanceProfileListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFJobCmdlet">
            <summary>
            Gets information about a job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFJobCmdlet.Arn">
            <summary>
            <para>
            <para>The job's ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Job'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.GetJobResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.GetJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFJobListCmdlet">
            <summary>
            Gets information about jobs for a given test run.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFJobListCmdlet.Arn">
            <summary>
            <para>
            <para>The run's Amazon Resource Name (ARN).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFJobListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Jobs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListJobsResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFJobListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFJobListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFNetworkProfileCmdlet">
            <summary>
            Returns information about a network profile.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFNetworkProfileCmdlet.Arn">
            <summary>
            <para>
            <para>The ARN of the network profile to return information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFNetworkProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NetworkProfile'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.GetNetworkProfileResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.GetNetworkProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFNetworkProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFNetworkProfileListCmdlet">
            <summary>
            Returns the list of available network profiles.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFNetworkProfileListCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the project for which you want to list network profiles.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFNetworkProfileListCmdlet.Type">
            <summary>
            <para>
            <para>The type of network profile to return information about. Valid values are listed here.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFNetworkProfileListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFNetworkProfileListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NetworkProfiles'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListNetworkProfilesResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListNetworkProfilesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFNetworkProfileListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFNetworkProfileListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFOfferingCmdlet">
            <summary>
            Returns a list of products or offerings that the user can manage through the API.
            Each offering record indicates the recurring price per unit and the frequency for
            that offering. The API returns a <code>NotEligible</code> error if the user is not
            permitted to invoke the operation. If you must be able to invoke this operation, contact
            <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFOfferingCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFOfferingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Offerings'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListOfferingsResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListOfferingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFOfferingCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFOfferingPromotionCmdlet">
            <summary>
            Returns a list of offering promotions. Each offering promotion record contains the
            ID and description of the promotion. The API returns a <code>NotEligible</code> error
            if the caller is not permitted to invoke the operation. Contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>
            if you must be able to invoke this operation.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFOfferingPromotionCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFOfferingPromotionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OfferingPromotions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListOfferingPromotionsResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListOfferingPromotionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFOfferingPromotionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFOfferingStatusCmdlet">
            <summary>
            Gets the current status and future status of all offerings purchased by an AWS account.
            The response indicates how many offerings are currently available and the offerings
            that will be available in the next period. The API returns a <code>NotEligible</code>
            error if the user is not permitted to invoke the operation. If you must be able to
            invoke this operation, contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>.<br/><br/>In the AWS.Tools.DeviceFarm module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFOfferingStatusCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.DeviceFarm module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFOfferingStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.GetOfferingStatusResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.GetOfferingStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFOfferingStatusCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFOfferingTransactionCmdlet">
            <summary>
            Returns a list of all historical purchases, renewals, and system renewal transactions
            for an AWS account. The list is paginated and ordered by a descending timestamp (most
            recent transactions are first). The API returns a <code>NotEligible</code> error if
            the user is not permitted to invoke the operation. If you must be able to invoke this
            operation, contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFOfferingTransactionCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFOfferingTransactionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OfferingTransactions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListOfferingTransactionsResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListOfferingTransactionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFOfferingTransactionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFProjectCmdlet">
            <summary>
            Gets information about a project.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFProjectCmdlet.Arn">
            <summary>
            <para>
            <para>The project's ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFProjectCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Project'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.GetProjectResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.GetProjectResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFProjectCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFProjectListCmdlet">
            <summary>
            Gets information about projects.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFProjectListCmdlet.Arn">
            <summary>
            <para>
            <para>Optional. If no Amazon Resource Name (ARN) is specified, then AWS Device Farm returns
            a list of all projects for the AWS account. You can also specify a project ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFProjectListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFProjectListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Projects'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListProjectsResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListProjectsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFProjectListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFProjectListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFRemoteAccessSessionCmdlet">
            <summary>
            Returns a link to a currently running remote access session.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFRemoteAccessSessionCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the remote access session about which you want to
            get session information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFRemoteAccessSessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RemoteAccessSession'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.GetRemoteAccessSessionResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.GetRemoteAccessSessionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFRemoteAccessSessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFRemoteAccessSessionListCmdlet">
            <summary>
            Returns a list of all currently running remote access sessions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFRemoteAccessSessionListCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the project about which you are requesting information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFRemoteAccessSessionListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFRemoteAccessSessionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RemoteAccessSessions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListRemoteAccessSessionsResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListRemoteAccessSessionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFRemoteAccessSessionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFRemoteAccessSessionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFResourceTagCmdlet">
            <summary>
            List the tags for an AWS Device Farm resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource or resources for which to list tags.
            You can associate tags with the following Device Farm resources: <code>PROJECT</code>,
            <code>RUN</code>, <code>NETWORK_PROFILE</code>, <code>INSTANCE_PROFILE</code>, <code>DEVICE_INSTANCE</code>,
            <code>SESSION</code>, <code>DEVICE_POOL</code>, <code>DEVICE</code>, and <code>VPCE_CONFIGURATION</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFRunCmdlet">
            <summary>
            Gets information about a run.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFRunCmdlet.Arn">
            <summary>
            <para>
            <para>The run's ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFRunCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Run'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.GetRunResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.GetRunResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFRunCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFRunListCmdlet">
            <summary>
            Gets information about runs, given an AWS Device Farm project ARN.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFRunListCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the project for which you want to list runs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFRunListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFRunListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Runs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListRunsResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListRunsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFRunListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFRunListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFSampleListCmdlet">
            <summary>
            Gets information about samples, given an AWS Device Farm job ARN.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFSampleListCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the job used to list samples.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFSampleListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFSampleListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Samples'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListSamplesResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListSamplesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFSampleListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFSampleListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFSuiteCmdlet">
            <summary>
            Gets information about a suite.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFSuiteCmdlet.Arn">
            <summary>
            <para>
            <para>The suite's ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFSuiteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Suite'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.GetSuiteResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.GetSuiteResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFSuiteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFSuiteListCmdlet">
            <summary>
            Gets information about test suites for a given job.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFSuiteListCmdlet.Arn">
            <summary>
            <para>
            <para>The job's Amazon Resource Name (ARN).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFSuiteListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFSuiteListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Suites'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListSuitesResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListSuitesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFSuiteListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFSuiteListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFTestCmdlet">
            <summary>
            Gets information about a test.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestCmdlet.Arn">
            <summary>
            <para>
            <para>The test's ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Test'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.GetTestResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.GetTestResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridProjectCmdlet">
            <summary>
            Retrieves information about a Selenium testing project.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridProjectCmdlet.ProjectArn">
            <summary>
            <para>
            <para>The ARN of the Selenium testing project, from either <a>CreateTestGridProject</a>
            or <a>ListTestGridProjects</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridProjectCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TestGridProject'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.GetTestGridProjectResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.GetTestGridProjectResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridProjectCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProjectArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ProjectArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridProjectListCmdlet">
            <summary>
            Gets a list of all Selenium testing projects in your account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridProjectListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Return no more than this number of results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridProjectListCmdlet.NextToken">
            <summary>
            <para>
            <para>From a response, used to continue a paginated listing. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridProjectListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TestGridProjects'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListTestGridProjectsResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListTestGridProjectsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridProjectListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MaxResult parameter.
            The -PassThru parameter is deprecated, use -Select '^MaxResult' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridProjectListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionCmdlet">
            <summary>
            A session is an instance of a browser created through a <code>RemoteWebDriver</code>
            with the URL from <a>CreateTestGridUrlResult$url</a>. You can use the following to
            look up sessions:
            
             <ul><li><para>
            The session ARN (<a>GetTestGridSessionRequest$sessionArn</a>).
            </para></li><li><para>
            The project ARN and a session ID (<a>GetTestGridSessionRequest$projectArn</a> and
            <a>GetTestGridSessionRequest$sessionId</a>).
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionCmdlet.ProjectArn">
            <summary>
            <para>
            <para>The ARN for the project that this session belongs to. See <a>CreateTestGridProject</a>
            and <a>ListTestGridProjects</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionCmdlet.SessionArn">
            <summary>
            <para>
            <para>An ARN that uniquely identifies a <a>TestGridSession</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionCmdlet.SessionId">
            <summary>
            <para>
            <para>An ID associated with this session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TestGridSession'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.GetTestGridSessionResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.GetTestGridSessionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SessionArn parameter.
            The -PassThru parameter is deprecated, use -Select '^SessionArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionActionListCmdlet">
            <summary>
            Returns a list of the actions taken in a <a>TestGridSession</a>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionActionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of sessions to return per response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionActionListCmdlet.SessionArn">
            <summary>
            <para>
            <para>The ARN of the session to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionActionListCmdlet.NextToken">
            <summary>
            <para>
            <para>Pagination token.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionActionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Actions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListTestGridSessionActionsResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListTestGridSessionActionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionActionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SessionArn parameter.
            The -PassThru parameter is deprecated, use -Select '^SessionArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionActionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionArtifactListCmdlet">
            <summary>
            Retrieves a list of artifacts created during the session.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionArtifactListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned by a request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionArtifactListCmdlet.SessionArn">
            <summary>
            <para>
            <para>The ARN of a <a>TestGridSession</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionArtifactListCmdlet.Type">
            <summary>
            <para>
            <para>Limit results to a specified type of artifact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionArtifactListCmdlet.NextToken">
            <summary>
            <para>
            <para>Pagination token.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionArtifactListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Artifacts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListTestGridSessionArtifactsResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListTestGridSessionArtifactsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionArtifactListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SessionArn parameter.
            The -PassThru parameter is deprecated, use -Select '^SessionArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionArtifactListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionListCmdlet">
            <summary>
            Retrieves a list of sessions for a <a>TestGridProject</a>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionListCmdlet.CreationTimeAfter">
            <summary>
            <para>
            <para>Return only sessions created after this time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionListCmdlet.CreationTimeBefore">
            <summary>
            <para>
            <para>Return only sessions created before this time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionListCmdlet.EndTimeAfter">
            <summary>
            <para>
            <para>Return only sessions that ended after this time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionListCmdlet.EndTimeBefore">
            <summary>
            <para>
            <para>Return only sessions that ended before this time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Return only this many results at a time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionListCmdlet.ProjectArn">
            <summary>
            <para>
            <para>ARN of a <a>TestGridProject</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionListCmdlet.Status">
            <summary>
            <para>
            <para>Return only sessions in this state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionListCmdlet.NextToken">
            <summary>
            <para>
            <para>Pagination token.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TestGridSessions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListTestGridSessionsResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListTestGridSessionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProjectArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ProjectArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestGridSessionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFTestListCmdlet">
            <summary>
            Gets information about tests in a given test suite.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestListCmdlet.Arn">
            <summary>
            <para>
            <para>The test suite's Amazon Resource Name (ARN).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tests'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListTestsResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListTestsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFTestListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFUniqueProblemListCmdlet">
            <summary>
            Gets information about unique problems, such as exceptions or crashes.
            
             
            <para>
            Unique problems are defined as a single instance of an error across a run, job, or
            suite. For example, if a call in your application consistently raises an exception
            (<code>OutOfBoundsException in MyActivity.java:386</code>), <code>ListUniqueProblems</code>
            returns a single entry instead of many individual entries for that exception.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFUniqueProblemListCmdlet.Arn">
            <summary>
            <para>
            <para>The unique problems' ARNs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFUniqueProblemListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFUniqueProblemListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UniqueProblems'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListUniqueProblemsResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListUniqueProblemsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFUniqueProblemListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFUniqueProblemListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFUploadCmdlet">
            <summary>
            Gets information about an upload.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFUploadCmdlet.Arn">
            <summary>
            <para>
            <para>The upload's ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFUploadCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Upload'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.GetUploadResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.GetUploadResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFUploadCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFUploadListCmdlet">
            <summary>
            Gets information about uploads, given an AWS Device Farm project ARN.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFUploadListCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the project for which you want to list uploads.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFUploadListCmdlet.Type">
            <summary>
            <para>
            <para>The type of upload.</para><para>Must be one of the following values:</para><ul><li><para>ANDROID_APP</para></li><li><para>IOS_APP</para></li><li><para>WEB_APP</para></li><li><para>EXTERNAL_DATA</para></li><li><para>APPIUM_JAVA_JUNIT_TEST_PACKAGE</para></li><li><para>APPIUM_JAVA_TESTNG_TEST_PACKAGE</para></li><li><para>APPIUM_PYTHON_TEST_PACKAGE</para></li><li><para>APPIUM_NODE_TEST_PACKAGE</para></li><li><para>APPIUM_RUBY_TEST_PACKAGE</para></li><li><para>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</para></li><li><para>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</para></li><li><para>APPIUM_WEB_PYTHON_TEST_PACKAGE</para></li><li><para>APPIUM_WEB_NODE_TEST_PACKAGE</para></li><li><para>APPIUM_WEB_RUBY_TEST_PACKAGE</para></li><li><para>CALABASH_TEST_PACKAGE</para></li><li><para>INSTRUMENTATION_TEST_PACKAGE</para></li><li><para>UIAUTOMATION_TEST_PACKAGE</para></li><li><para>UIAUTOMATOR_TEST_PACKAGE</para></li><li><para>XCTEST_TEST_PACKAGE</para></li><li><para>XCTEST_UI_TEST_PACKAGE</para></li><li><para>APPIUM_JAVA_JUNIT_TEST_SPEC</para></li><li><para>APPIUM_JAVA_TESTNG_TEST_SPEC</para></li><li><para>APPIUM_PYTHON_TEST_SPEC</para></li><li><para>APPIUM_NODE_TEST_SPEC</para></li><li><para> APPIUM_RUBY_TEST_SPEC</para></li><li><para>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</para></li><li><para>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</para></li><li><para>APPIUM_WEB_PYTHON_TEST_SPEC</para></li><li><para>APPIUM_WEB_NODE_TEST_SPEC</para></li><li><para>APPIUM_WEB_RUBY_TEST_SPEC</para></li><li><para>INSTRUMENTATION_TEST_SPEC</para></li><li><para>XCTEST_UI_TEST_SPEC</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFUploadListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFUploadListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Uploads'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListUploadsResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListUploadsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFUploadListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFUploadListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFVPCEConfigurationCmdlet">
            <summary>
            Returns information about the configuration settings for your Amazon Virtual Private
            Cloud (VPC) endpoint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFVPCEConfigurationCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFVPCEConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VpceConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.GetVPCEConfigurationResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.GetVPCEConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFVPCEConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.GetDFVPCEConfigurationListCmdlet">
            <summary>
            Returns information about all Amazon Virtual Private Cloud (VPC) endpoint configurations
            in the AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFVPCEConfigurationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>An integer that specifies the maximum number of items you want to return in the API
            response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFVPCEConfigurationListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFVPCEConfigurationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VpceConfigurations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ListVPCEConfigurationsResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ListVPCEConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.GetDFVPCEConfigurationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.InstallDFToRemoteAccessSessionCmdlet">
            <summary>
            Installs an application to the device in a remote access session. For Android applications,
            the file must be in .apk format. For iOS applications, the file must be in .ipa format.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.InstallDFToRemoteAccessSessionCmdlet.AppArn">
            <summary>
            <para>
            <para>The ARN of the app about which you are requesting information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.InstallDFToRemoteAccessSessionCmdlet.RemoteAccessSessionArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the remote access session about which you are requesting
            information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.InstallDFToRemoteAccessSessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AppUpload'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.InstallToRemoteAccessSessionResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.InstallToRemoteAccessSessionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.InstallDFToRemoteAccessSessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AppArn parameter.
            The -PassThru parameter is deprecated, use -Select '^AppArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.InstallDFToRemoteAccessSessionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.NewDFDevicePoolCmdlet">
            <summary>
            Creates a device pool.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFDevicePoolCmdlet.Description">
            <summary>
            <para>
            <para>The device pool's description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFDevicePoolCmdlet.MaxDevice">
            <summary>
            <para>
            <para>The number of devices that Device Farm can add to your device pool. Device Farm adds
            devices that are available and meet the criteria that you assign for the <code>rules</code>
            parameter. Depending on how many devices meet these constraints, your device pool
            might contain fewer devices than the value for this parameter.</para><para>By specifying the maximum number of devices, you can control the costs that you incur
            by running tests.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFDevicePoolCmdlet.Name">
            <summary>
            <para>
            <para>The device pool's name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFDevicePoolCmdlet.ProjectArn">
            <summary>
            <para>
            <para>The ARN of the project for the device pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFDevicePoolCmdlet.Rule">
            <summary>
            <para>
            <para>The device pool's rules.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFDevicePoolCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DevicePool'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.CreateDevicePoolResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.CreateDevicePoolResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFDevicePoolCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Rule parameter.
            The -PassThru parameter is deprecated, use -Select '^Rule' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFDevicePoolCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.NewDFInstanceProfileCmdlet">
            <summary>
            Creates a profile that can be applied to one or more private fleet device instances.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFInstanceProfileCmdlet.Description">
            <summary>
            <para>
            <para>The description of your instance profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFInstanceProfileCmdlet.ExcludeAppPackagesFromCleanup">
            <summary>
            <para>
            <para>An array of strings that specifies the list of app packages that should not be cleaned
            up from the device after a test run.</para><para>The list of packages is considered only if you set <code>packageCleanup</code> to
            <code>true</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFInstanceProfileCmdlet.Name">
            <summary>
            <para>
            <para>The name of your instance profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFInstanceProfileCmdlet.PackageCleanup">
            <summary>
            <para>
            <para>When set to <code>true</code>, Device Farm removes app packages after a test run.
            The default value is <code>false</code> for private devices.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFInstanceProfileCmdlet.RebootAfterUse">
            <summary>
            <para>
            <para>When set to <code>true</code>, Device Farm reboots the instance after a test run.
            The default value is <code>true</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFInstanceProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceProfile'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.CreateInstanceProfileResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.CreateInstanceProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFInstanceProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFInstanceProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.NewDFNetworkProfileCmdlet">
            <summary>
            Creates a network profile.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFNetworkProfileCmdlet.Description">
            <summary>
            <para>
            <para>The description of the network profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFNetworkProfileCmdlet.DownlinkBandwidthBit">
            <summary>
            <para>
            <para>The data throughput rate in bits per second, as an integer from 0 to 104857600.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFNetworkProfileCmdlet.DownlinkDelayMs">
            <summary>
            <para>
            <para>Delay time for all packets to destination in milliseconds as an integer from 0 to
            2000.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFNetworkProfileCmdlet.DownlinkJitterMs">
            <summary>
            <para>
            <para>Time variation in the delay of received packets in milliseconds as an integer from
            0 to 2000.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFNetworkProfileCmdlet.DownlinkLossPercent">
            <summary>
            <para>
            <para>Proportion of received packets that fail to arrive from 0 to 100 percent.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFNetworkProfileCmdlet.Name">
            <summary>
            <para>
            <para>The name for the new network profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFNetworkProfileCmdlet.ProjectArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the project for which you want to create a network
            profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFNetworkProfileCmdlet.Type">
            <summary>
            <para>
            <para>The type of network profile to create. Valid values are listed here.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFNetworkProfileCmdlet.UplinkBandwidthBit">
            <summary>
            <para>
            <para>The data throughput rate in bits per second, as an integer from 0 to 104857600.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFNetworkProfileCmdlet.UplinkDelayMs">
            <summary>
            <para>
            <para>Delay time for all packets to destination in milliseconds as an integer from 0 to
            2000.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFNetworkProfileCmdlet.UplinkJitterMs">
            <summary>
            <para>
            <para>Time variation in the delay of received packets in milliseconds as an integer from
            0 to 2000.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFNetworkProfileCmdlet.UplinkLossPercent">
            <summary>
            <para>
            <para>Proportion of transmitted packets that fail to arrive from 0 to 100 percent.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFNetworkProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NetworkProfile'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.CreateNetworkProfileResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.CreateNetworkProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFNetworkProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFNetworkProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.NewDFOfferingPurchaseCmdlet">
            <summary>
            Immediately purchases offerings for an AWS account. Offerings renew with the latest
            total purchased quantity for an offering, unless the renewal was overridden. The API
            returns a <code>NotEligible</code> error if the user is not permitted to invoke the
            operation. If you must be able to invoke this operation, contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFOfferingPurchaseCmdlet.OfferingId">
            <summary>
            <para>
            <para>The ID of the offering.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFOfferingPurchaseCmdlet.OfferingPromotionId">
            <summary>
            <para>
            <para>The ID of the offering promotion to be applied to the purchase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFOfferingPurchaseCmdlet.Quantity">
            <summary>
            <para>
            <para>The number of device slots to purchase in an offering request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFOfferingPurchaseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OfferingTransaction'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.PurchaseOfferingResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.PurchaseOfferingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFOfferingPurchaseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OfferingId parameter.
            The -PassThru parameter is deprecated, use -Select '^OfferingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFOfferingPurchaseCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.NewDFOfferingRenewalCmdlet">
            <summary>
            Explicitly sets the quantity of devices to renew for an offering, starting from the
            <code>effectiveDate</code> of the next period. The API returns a <code>NotEligible</code>
            error if the user is not permitted to invoke the operation. If you must be able to
            invoke this operation, contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFOfferingRenewalCmdlet.OfferingId">
            <summary>
            <para>
            <para>The ID of a request to renew an offering.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFOfferingRenewalCmdlet.Quantity">
            <summary>
            <para>
            <para>The quantity requested in an offering renewal.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFOfferingRenewalCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OfferingTransaction'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.RenewOfferingResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.RenewOfferingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFOfferingRenewalCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OfferingId parameter.
            The -PassThru parameter is deprecated, use -Select '^OfferingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFOfferingRenewalCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.NewDFProjectCmdlet">
            <summary>
            Creates a project.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFProjectCmdlet.DefaultJobTimeoutMinute">
            <summary>
            <para>
            <para>Sets the execution timeout value (in minutes) for a project. All test runs in this
            project use the specified execution timeout value unless overridden when scheduling
            a run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFProjectCmdlet.Name">
            <summary>
            <para>
            <para>The project's name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFProjectCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Project'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.CreateProjectResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.CreateProjectResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFProjectCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFProjectCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.NewDFRemoteAccessSessionCmdlet">
            <summary>
            Specifies and starts a remote access session.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFRemoteAccessSessionCmdlet.Configuration_BillingMethod">
            <summary>
            <para>
            <para>The billing method for the remote access session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFRemoteAccessSessionCmdlet.ClientId">
            <summary>
            <para>
            <para>Unique identifier for the client. If you want access to multiple devices on the same
            client, you should pass the same <code>clientId</code> value in each call to <code>CreateRemoteAccessSession</code>.
            This identifier is required only if <code>remoteDebugEnabled</code> is set to <code>true</code>.</para><para>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
            longer supported</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFRemoteAccessSessionCmdlet.DeviceArn">
            <summary>
            <para>
            <para>The ARN of the device for which you want to create a remote access session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFRemoteAccessSessionCmdlet.InstanceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the device instance for which you want to create
            a remote access session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFRemoteAccessSessionCmdlet.InteractionMode">
            <summary>
            <para>
            <para>The interaction mode of the remote access session. Valid values are:</para><ul><li><para>INTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating
            the screen. You cannot run XCUITest framework-based tests in this mode.</para></li><li><para>NO_VIDEO: You are connected to the device, but cannot interact with it or view the
            screen. This mode has the fastest test execution speed. You can run XCUITest framework-based
            tests in this mode.</para></li><li><para>VIDEO_ONLY: You can view the screen, but cannot touch or rotate it. You can run XCUITest
            framework-based tests and watch the screen in this mode.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFRemoteAccessSessionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the remote access session to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFRemoteAccessSessionCmdlet.ProjectArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the project for which you want to create a remote
            access session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFRemoteAccessSessionCmdlet.RemoteDebugEnabled">
            <summary>
            <para>
            <para>Set to <code>true</code> if you want to access devices remotely for debugging in your
            remote access session.</para><para>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
            longer supported</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFRemoteAccessSessionCmdlet.RemoteRecordAppArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the app to be recorded in the remote access session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFRemoteAccessSessionCmdlet.RemoteRecordEnabled">
            <summary>
            <para>
            <para>Set to <code>true</code> to enable remote recording for the remote access session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFRemoteAccessSessionCmdlet.SkipAppResign">
            <summary>
            <para>
            <para>When set to <code>true</code>, for private devices, Device Farm does not sign your
            app again. For public devices, Device Farm always signs your apps again.</para><para>For more information on how Device Farm modifies your uploads during tests, see <a href="https://aws.amazon.com/device-farm/faq/">Do you modify my app?</a></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFRemoteAccessSessionCmdlet.SshPublicKey">
            <summary>
            <para>
            <para>Ignored. The public key of the <code>ssh</code> key pair you want to use for connecting
            to remote devices in your remote debugging session. This key is required only if <code>remoteDebugEnabled</code>
            is set to <code>true</code>.</para><para>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
            longer supported</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFRemoteAccessSessionCmdlet.Configuration_VpceConfigurationArn">
            <summary>
            <para>
            <para>An array of ARNs included in the VPC endpoint configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFRemoteAccessSessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RemoteAccessSession'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.CreateRemoteAccessSessionResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.CreateRemoteAccessSessionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFRemoteAccessSessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeviceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^DeviceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFRemoteAccessSessionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.NewDFTestGridProjectCmdlet">
            <summary>
            Creates a Selenium testing project. Projects are used to track <a>TestGridSession</a>
            instances.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFTestGridProjectCmdlet.Description">
            <summary>
            <para>
            <para>Human-readable description of the project.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFTestGridProjectCmdlet.Name">
            <summary>
            <para>
            <para>Human-readable name of the Selenium testing project.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFTestGridProjectCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TestGridProject'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.CreateTestGridProjectResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.CreateTestGridProjectResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFTestGridProjectCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFTestGridProjectCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.NewDFTestGridUrlCmdlet">
            <summary>
            Creates a signed, short-term URL that can be passed to a Selenium <code>RemoteWebDriver</code>
            constructor.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFTestGridUrlCmdlet.ExpiresInSecond">
            <summary>
            <para>
            <para>Lifetime, in seconds, of the URL.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFTestGridUrlCmdlet.ProjectArn">
            <summary>
            <para>
            <para>ARN (from <a>CreateTestGridProject</a> or <a>ListTestGridProjects</a>) to associate
            with the short-term URL. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFTestGridUrlCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Url'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.CreateTestGridUrlResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.CreateTestGridUrlResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFTestGridUrlCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProjectArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ProjectArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFTestGridUrlCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.NewDFUploadCmdlet">
            <summary>
            Uploads an app or test scripts.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFUploadCmdlet.ContentType">
            <summary>
            <para>
            <para>The upload's content type (for example, <code>application/octet-stream</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFUploadCmdlet.Name">
            <summary>
            <para>
            <para>The upload's file name. The name should not contain any forward slashes (<code>/</code>).
            If you are uploading an iOS app, the file name must end with the <code>.ipa</code>
            extension. If you are uploading an Android app, the file name must end with the <code>.apk</code>
            extension. For all others, the file name must end with the <code>.zip</code> file
            extension.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFUploadCmdlet.ProjectArn">
            <summary>
            <para>
            <para>The ARN of the project for the upload.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFUploadCmdlet.Type">
            <summary>
            <para>
            <para>The upload's upload type.</para><para>Must be one of the following values:</para><ul><li><para>ANDROID_APP</para></li><li><para>IOS_APP</para></li><li><para>WEB_APP</para></li><li><para>EXTERNAL_DATA</para></li><li><para>APPIUM_JAVA_JUNIT_TEST_PACKAGE</para></li><li><para>APPIUM_JAVA_TESTNG_TEST_PACKAGE</para></li><li><para>APPIUM_PYTHON_TEST_PACKAGE</para></li><li><para>APPIUM_NODE_TEST_PACKAGE</para></li><li><para>APPIUM_RUBY_TEST_PACKAGE</para></li><li><para>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</para></li><li><para>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</para></li><li><para>APPIUM_WEB_PYTHON_TEST_PACKAGE</para></li><li><para>APPIUM_WEB_NODE_TEST_PACKAGE</para></li><li><para>APPIUM_WEB_RUBY_TEST_PACKAGE</para></li><li><para>CALABASH_TEST_PACKAGE</para></li><li><para>INSTRUMENTATION_TEST_PACKAGE</para></li><li><para>UIAUTOMATION_TEST_PACKAGE</para></li><li><para>UIAUTOMATOR_TEST_PACKAGE</para></li><li><para>XCTEST_TEST_PACKAGE</para></li><li><para>XCTEST_UI_TEST_PACKAGE</para></li><li><para>APPIUM_JAVA_JUNIT_TEST_SPEC</para></li><li><para>APPIUM_JAVA_TESTNG_TEST_SPEC</para></li><li><para>APPIUM_PYTHON_TEST_SPEC</para></li><li><para>APPIUM_NODE_TEST_SPEC</para></li><li><para>APPIUM_RUBY_TEST_SPEC</para></li><li><para>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</para></li><li><para>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</para></li><li><para>APPIUM_WEB_PYTHON_TEST_SPEC</para></li><li><para>APPIUM_WEB_NODE_TEST_SPEC</para></li><li><para>APPIUM_WEB_RUBY_TEST_SPEC</para></li><li><para>INSTRUMENTATION_TEST_SPEC</para></li><li><para>XCTEST_UI_TEST_SPEC</para></li></ul><para> If you call <code>CreateUpload</code> with <code>WEB_APP</code> specified, AWS Device
            Farm throws an <code>ArgumentException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFUploadCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Upload'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.CreateUploadResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.CreateUploadResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFUploadCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFUploadCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.NewDFVPCEConfigurationCmdlet">
            <summary>
            Creates a configuration record in Device Farm for your Amazon Virtual Private Cloud
            (VPC) endpoint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFVPCEConfigurationCmdlet.ServiceDnsName">
            <summary>
            <para>
            <para>The DNS name of the service running in your VPC that you want Device Farm to test.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFVPCEConfigurationCmdlet.VpceConfigurationDescription">
            <summary>
            <para>
            <para>An optional description that provides details about your VPC endpoint configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFVPCEConfigurationCmdlet.VpceConfigurationName">
            <summary>
            <para>
            <para>The friendly name you give to your VPC endpoint configuration, to manage your configurations
            more easily.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFVPCEConfigurationCmdlet.VpceServiceName">
            <summary>
            <para>
            <para>The name of the VPC endpoint service running in your AWS account that you want Device
            Farm to test.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFVPCEConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VpceConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.CreateVPCEConfigurationResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.CreateVPCEConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFVPCEConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VpceConfigurationName parameter.
            The -PassThru parameter is deprecated, use -Select '^VpceConfigurationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.NewDFVPCEConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.RemoveDFDevicePoolCmdlet">
            <summary>
            Deletes a device pool given the pool ARN. Does not allow deletion of curated pools
            owned by the system.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFDevicePoolCmdlet.Arn">
            <summary>
            <para>
            <para>Represents the Amazon Resource Name (ARN) of the Device Farm device pool to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFDevicePoolCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.DeleteDevicePoolResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFDevicePoolCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFDevicePoolCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.RemoveDFInstanceProfileCmdlet">
            <summary>
            Deletes a profile that can be applied to one or more private device instances.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFInstanceProfileCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the instance profile you are requesting to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFInstanceProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.DeleteInstanceProfileResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFInstanceProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFInstanceProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.RemoveDFNetworkProfileCmdlet">
            <summary>
            Deletes a network profile.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFNetworkProfileCmdlet.Arn">
            <summary>
            <para>
            <para>The ARN of the network profile to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFNetworkProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.DeleteNetworkProfileResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFNetworkProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFNetworkProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.RemoveDFProjectCmdlet">
            <summary>
            Deletes an AWS Device Farm project, given the project ARN.
            
             
            <para>
             Deleting this resource does not stop an in-progress run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFProjectCmdlet.Arn">
            <summary>
            <para>
            <para>Represents the Amazon Resource Name (ARN) of the Device Farm project to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFProjectCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.DeleteProjectResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFProjectCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFProjectCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.RemoveDFRemoteAccessSessionCmdlet">
            <summary>
            Deletes a completed remote access session and its results.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFRemoteAccessSessionCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the session for which you want to delete remote
            access.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFRemoteAccessSessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.DeleteRemoteAccessSessionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFRemoteAccessSessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFRemoteAccessSessionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.RemoveDFResourceTagCmdlet">
            <summary>
            Deletes the specified tags from a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource or resources from which to delete tags.
            You can associate tags with the following Device Farm resources: <code>PROJECT</code>,
            <code>RUN</code>, <code>NETWORK_PROFILE</code>, <code>INSTANCE_PROFILE</code>, <code>DEVICE_INSTANCE</code>,
            <code>SESSION</code>, <code>DEVICE_POOL</code>, <code>DEVICE</code>, and <code>VPCE_CONFIGURATION</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The keys of the tags to be removed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.RemoveDFRunCmdlet">
            <summary>
            Deletes the run, given the run ARN.
            
             
            <para>
             Deleting this resource does not stop an in-progress run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFRunCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the run to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFRunCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.DeleteRunResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFRunCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFRunCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.RemoveDFTestGridProjectCmdlet">
            <summary>
            Deletes a Selenium testing project and all content generated under it. 
            
             <important><para>
            You cannot undo this operation.
            </para></important><note><para>
            You cannot delete a project if it has active sessions.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFTestGridProjectCmdlet.ProjectArn">
            <summary>
            <para>
            <para>The ARN of the project to delete, from <a>CreateTestGridProject</a> or <a>ListTestGridProjects</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFTestGridProjectCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.DeleteTestGridProjectResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFTestGridProjectCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProjectArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ProjectArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFTestGridProjectCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.RemoveDFUploadCmdlet">
            <summary>
            Deletes an upload given the upload ARN.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFUploadCmdlet.Arn">
            <summary>
            <para>
            <para>Represents the Amazon Resource Name (ARN) of the Device Farm upload to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFUploadCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.DeleteUploadResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFUploadCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFUploadCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.RemoveDFVPCEConfigurationCmdlet">
            <summary>
            Deletes a configuration for your Amazon Virtual Private Cloud (VPC) endpoint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFVPCEConfigurationCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFVPCEConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.DeleteVPCEConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFVPCEConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.RemoveDFVPCEConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.StopDFJobCmdlet">
            <summary>
            Initiates a stop request for the current job. AWS Device Farm immediately stops the
            job on the device where tests have not started. You are not billed for this device.
            On the device where tests have started, setup suite and teardown suite tests run to
            completion on the device. You are billed for setup, teardown, and any tests that were
            in progress or already completed.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.StopDFJobCmdlet.Arn">
            <summary>
            <para>
            <para>Represents the Amazon Resource Name (ARN) of the Device Farm job to stop.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.StopDFJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Job'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.StopJobResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.StopJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.StopDFJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.StopDFJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.StopDFRemoteAccessSessionCmdlet">
            <summary>
            Ends a specified remote access session.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.StopDFRemoteAccessSessionCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the remote access session to stop.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.StopDFRemoteAccessSessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RemoteAccessSession'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.StopRemoteAccessSessionResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.StopRemoteAccessSessionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.StopDFRemoteAccessSessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.StopDFRemoteAccessSessionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.StopDFRunCmdlet">
            <summary>
            Initiates a stop request for the current test run. AWS Device Farm immediately stops
            the run on devices where tests have not started. You are not billed for these devices.
            On devices where tests have started executing, setup suite and teardown suite tests
            run to completion on those devices. You are billed for setup, teardown, and any tests
            that were in progress or already completed.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.StopDFRunCmdlet.Arn">
            <summary>
            <para>
            <para>Represents the Amazon Resource Name (ARN) of the Device Farm run to stop.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.StopDFRunCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Run'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.StopRunResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.StopRunResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.StopDFRunCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.StopDFRunCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet">
            <summary>
            Schedules a run.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.ExecutionConfiguration_AccountsCleanup">
            <summary>
            <para>
            <para>True if account cleanup is enabled at the beginning of the test. Otherwise, false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.CustomerArtifactPaths_AndroidPath">
            <summary>
            <para>
            <para>Comma-separated list of paths on the Android device where the artifacts generated
            by the customer's tests are pulled from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.AppArn">
            <summary>
            <para>
            <para>The ARN of an application package to run tests against, created with <a>CreateUpload</a>.
            See <a>ListUploads</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.ExecutionConfiguration_AppPackagesCleanup">
            <summary>
            <para>
            <para>True if app package cleanup is enabled at the beginning of the test. Otherwise, false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.Configuration_AuxiliaryApp">
            <summary>
            <para>
            <para>A list of upload ARNs for app packages to be installed with your app.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.Configuration_BillingMethod">
            <summary>
            <para>
            <para>Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>.
            If the parameter is not specified, the default value is <code>metered</code>.</para><note><para>If you have purchased unmetered device slots, you must set this parameter to <code>unmetered</code>
            to make use of them. Otherwise, your run counts against your metered time.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.Radios_Bluetooth">
            <summary>
            <para>
            <para>True if Bluetooth is enabled at the beginning of the test. Otherwise, false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.CustomerArtifactPaths_DeviceHostPath">
            <summary>
            <para>
            <para>Comma-separated list of paths in the test execution environment where the artifacts
            generated by the customer's tests are pulled from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.DevicePoolArn">
            <summary>
            <para>
            <para>The ARN of the device pool for the run to be scheduled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.Configuration_ExtraDataPackageArn">
            <summary>
            <para>
            <para>The ARN of the extra data for the run. The extra data is a .zip file that AWS Device
            Farm extracts to external data for Android or the app's sandbox for iOS.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.Test_Filter">
            <summary>
            <para>
            <para>The test's filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.DeviceSelectionConfiguration_Filter">
            <summary>
            <para>
            Amazon.DeviceFarm.Model.DeviceSelectionConfiguration.Filters
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.Radios_Gp">
            <summary>
            <para>
            <para>True if GPS is enabled at the beginning of the test. Otherwise, false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.CustomerArtifactPaths_IosPath">
            <summary>
            <para>
            <para>Comma-separated list of paths on the iOS device where the artifacts generated by the
            customer's tests are pulled from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.ExecutionConfiguration_JobTimeoutMinute">
            <summary>
            <para>
            <para>The number of minutes a test run executes before it times out.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.Location_Latitude">
            <summary>
            <para>
            <para>The latitude.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.Configuration_Locale">
            <summary>
            <para>
            <para>Information about the locale that is used for the run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.Location_Longitude">
            <summary>
            <para>
            <para>The longitude.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.DeviceSelectionConfiguration_MaxDevice">
            <summary>
            <para>
            <para>The maximum number of devices to be included in a test run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.Name">
            <summary>
            <para>
            <para>The name for the run to be scheduled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.Configuration_NetworkProfileArn">
            <summary>
            <para>
            <para>Reserved for internal use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.Radios_Nfc">
            <summary>
            <para>
            <para>True if NFC is enabled at the beginning of the test. Otherwise, false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.Test_Parameter">
            <summary>
            <para>
            <para>The test's parameters, such as test framework parameters and fixture settings. Parameters
            are represented by name-value pairs of strings.</para><para>For all tests:</para><ul><li><para><code>app_performance_monitoring</code>: Performance monitoring is enabled by default.
            Set this parameter to false to disable it.</para></li></ul><para>For Calabash tests:</para><ul><li><para>profile: A cucumber profile (for example, <code>my_profile_name</code>).</para></li><li><para>tags: You can limit execution to features or scenarios that have (or don't have) certain
            tags (for example, @smoke or @smoke,~@wip).</para></li></ul><para>For Appium tests (all types):</para><ul><li><para>appium_version: The Appium version. Currently supported values are 1.6.5 (and later),
            latest, and default.</para><ul><li><para>latest runs the latest Appium version supported by Device Farm (1.9.1).</para></li><li><para>For default, Device Farm selects a compatible version of Appium for the device. The
            current behavior is to run 1.7.2 on Android devices and iOS 9 and earlier and 1.7.2
            for iOS 10 and later.</para></li><li><para>This behavior is subject to change.</para></li></ul></li></ul><para>For fuzz tests (Android only):</para><ul><li><para>event_count: The number of events, between 1 and 10000, that the UI fuzz test should
            perform.</para></li><li><para>throttle: The time, in ms, between 0 and 1000, that the UI fuzz test should wait between
            events.</para></li><li><para>seed: A seed to use for randomizing the UI fuzz test. Using the same seed value between
            tests ensures identical event sequences.</para></li></ul><para>For Explorer tests:</para><ul><li><para>username: A user name to use if the Explorer encounters a login form. If not supplied,
            no user name is inserted.</para></li><li><para>password: A password to use if the Explorer encounters a login form. If not supplied,
            no password is inserted.</para></li></ul><para>For Instrumentation:</para><ul><li><para>filter: A test filter string. Examples:</para><ul><li><para>Running a single test case: <code>com.android.abc.Test1</code></para></li><li><para>Running a single test: <code>com.android.abc.Test1#smoke</code></para></li><li><para>Running multiple tests: <code>com.android.abc.Test1,com.android.abc.Test2</code></para></li></ul></li></ul><para>For XCTest and XCTestUI:</para><ul><li><para>filter: A test filter string. Examples:</para><ul><li><para>Running a single test class: <code>LoginTests</code></para></li><li><para>Running a multiple test classes: <code>LoginTests,SmokeTests</code></para></li><li><para>Running a single test: <code>LoginTests/testValid</code></para></li><li><para>Running multiple tests: <code>LoginTests/testValid,LoginTests/testInvalid</code></para></li></ul></li></ul><para>For UIAutomator:</para><ul><li><para>filter: A test filter string. Examples:</para><ul><li><para>Running a single test case: <code>com.android.abc.Test1</code></para></li><li><para>Running a single test: <code>com.android.abc.Test1#smoke</code></para></li><li><para>Running multiple tests: <code>com.android.abc.Test1,com.android.abc.Test2</code></para></li></ul></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.ProjectArn">
            <summary>
            <para>
            <para>The ARN of the project for the run to be scheduled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.ExecutionConfiguration_SkipAppResign">
            <summary>
            <para>
            <para>When set to <code>true</code>, for private devices, Device Farm does not sign your
            app again. For public devices, Device Farm always signs your apps again.</para><para>For more information about how Device Farm re-signs your apps, see <a href="https://aws.amazon.com/device-farm/faq/">Do
            you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.Test_TestPackageArn">
            <summary>
            <para>
            <para>The ARN of the uploaded test to be run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.Test_TestSpecArn">
            <summary>
            <para>
            <para>The ARN of the YAML-formatted test specification.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.Test_Type">
            <summary>
            <para>
            <para>The test's type.</para><para>Must be one of the following values:</para><ul><li><para>BUILTIN_FUZZ</para></li><li><para>BUILTIN_EXPLORER. For Android, an app explorer that traverses an Android app, interacting
            with it and capturing screenshots at the same time.</para></li><li><para>APPIUM_JAVA_JUNIT</para></li><li><para>APPIUM_JAVA_TESTNG</para></li><li><para>APPIUM_PYTHON</para></li><li><para>APPIUM_NODE</para></li><li><para>APPIUM_RUBY</para></li><li><para>APPIUM_WEB_JAVA_JUNIT</para></li><li><para>APPIUM_WEB_JAVA_TESTNG</para></li><li><para>APPIUM_WEB_PYTHON</para></li><li><para>APPIUM_WEB_NODE</para></li><li><para>APPIUM_WEB_RUBY</para></li><li><para>CALABASH</para></li><li><para>INSTRUMENTATION</para></li><li><para>UIAUTOMATION</para></li><li><para>UIAUTOMATOR</para></li><li><para>XCTEST</para></li><li><para>XCTEST_UI</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.ExecutionConfiguration_VideoCapture">
            <summary>
            <para>
            <para>Set to true to enable video capture. Otherwise, set to false. The default is true.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.Configuration_VpceConfigurationArn">
            <summary>
            <para>
            <para>An array of ARNs for your VPC endpoint configurations.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.Radios_Wifi">
            <summary>
            <para>
            <para>True if Wi-Fi is enabled at the beginning of the test. Otherwise, false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Run'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.ScheduleRunResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.ScheduleRunResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.SubmitDFTestRunCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.UpdateDFDeviceInstanceCmdlet">
            <summary>
            Updates information about a private device instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFDeviceInstanceCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the device instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFDeviceInstanceCmdlet.Label">
            <summary>
            <para>
            <para>An array of strings that you want to associate with the device instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFDeviceInstanceCmdlet.ProfileArn">
            <summary>
            <para>
            <para>The ARN of the profile that you want to associate with the device instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFDeviceInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DeviceInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.UpdateDeviceInstanceResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.UpdateDeviceInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFDeviceInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFDeviceInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.UpdateDFDevicePoolCmdlet">
            <summary>
            Modifies the name, description, and rules in a device pool given the attributes and
            the pool ARN. Rule updates are all-or-nothing, meaning they can only be updated as
            a whole (or not at all).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFDevicePoolCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Device Farm device pool to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFDevicePoolCmdlet.ClearMaxDevice">
            <summary>
            <para>
            <para>Sets whether the <code>maxDevices</code> parameter applies to your device pool. If
            you set this parameter to <code>true</code>, the <code>maxDevices</code> parameter
            does not apply, and Device Farm does not limit the number of devices that it adds
            to your device pool. In this case, Device Farm adds all available devices that meet
            the criteria specified in the <code>rules</code> parameter.</para><para>If you use this parameter in your request, you cannot use the <code>maxDevices</code>
            parameter in the same request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFDevicePoolCmdlet.Description">
            <summary>
            <para>
            <para>A description of the device pool to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFDevicePoolCmdlet.MaxDevice">
            <summary>
            <para>
            <para>The number of devices that Device Farm can add to your device pool. Device Farm adds
            devices that are available and that meet the criteria that you assign for the <code>rules</code>
            parameter. Depending on how many devices meet these constraints, your device pool
            might contain fewer devices than the value for this parameter.</para><para>By specifying the maximum number of devices, you can control the costs that you incur
            by running tests.</para><para>If you use this parameter in your request, you cannot use the <code>clearMaxDevices</code>
            parameter in the same request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFDevicePoolCmdlet.Name">
            <summary>
            <para>
            <para>A string that represents the name of the device pool to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFDevicePoolCmdlet.Rule">
            <summary>
            <para>
            <para>Represents the rules to modify for the device pool. Updating rules is optional. If
            you update rules for your request, the update replaces the existing rules.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFDevicePoolCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DevicePool'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.UpdateDevicePoolResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.UpdateDevicePoolResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFDevicePoolCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFDevicePoolCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.UpdateDFInstanceProfileCmdlet">
            <summary>
            Updates information about an existing private device instance profile.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFInstanceProfileCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the instance profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFInstanceProfileCmdlet.Description">
            <summary>
            <para>
            <para>The updated description for your instance profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFInstanceProfileCmdlet.ExcludeAppPackagesFromCleanup">
            <summary>
            <para>
            <para>An array of strings that specifies the list of app packages that should not be cleaned
            up from the device after a test run is over.</para><para>The list of packages is only considered if you set <code>packageCleanup</code> to
            <code>true</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFInstanceProfileCmdlet.Name">
            <summary>
            <para>
            <para>The updated name for your instance profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFInstanceProfileCmdlet.PackageCleanup">
            <summary>
            <para>
            <para>The updated choice for whether you want to specify package cleanup. The default value
            is <code>false</code> for private devices.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFInstanceProfileCmdlet.RebootAfterUse">
            <summary>
            <para>
            <para>The updated choice for whether you want to reboot the device after use. The default
            value is <code>true</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFInstanceProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceProfile'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.UpdateInstanceProfileResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.UpdateInstanceProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFInstanceProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFInstanceProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.UpdateDFNetworkProfileCmdlet">
            <summary>
            Updates the network profile.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFNetworkProfileCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the project for which you want to update network
            profile settings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFNetworkProfileCmdlet.Description">
            <summary>
            <para>
            <para>The description of the network profile about which you are returning information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFNetworkProfileCmdlet.DownlinkBandwidthBit">
            <summary>
            <para>
            <para>The data throughput rate in bits per second, as an integer from 0 to 104857600.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFNetworkProfileCmdlet.DownlinkDelayMs">
            <summary>
            <para>
            <para>Delay time for all packets to destination in milliseconds as an integer from 0 to
            2000.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFNetworkProfileCmdlet.DownlinkJitterMs">
            <summary>
            <para>
            <para>Time variation in the delay of received packets in milliseconds as an integer from
            0 to 2000.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFNetworkProfileCmdlet.DownlinkLossPercent">
            <summary>
            <para>
            <para>Proportion of received packets that fail to arrive from 0 to 100 percent.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFNetworkProfileCmdlet.Name">
            <summary>
            <para>
            <para>The name of the network profile about which you are returning information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFNetworkProfileCmdlet.Type">
            <summary>
            <para>
            <para>The type of network profile to return information about. Valid values are listed here.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFNetworkProfileCmdlet.UplinkBandwidthBit">
            <summary>
            <para>
            <para>The data throughput rate in bits per second, as an integer from 0 to 104857600.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFNetworkProfileCmdlet.UplinkDelayMs">
            <summary>
            <para>
            <para>Delay time for all packets to destination in milliseconds as an integer from 0 to
            2000.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFNetworkProfileCmdlet.UplinkJitterMs">
            <summary>
            <para>
            <para>Time variation in the delay of received packets in milliseconds as an integer from
            0 to 2000.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFNetworkProfileCmdlet.UplinkLossPercent">
            <summary>
            <para>
            <para>Proportion of transmitted packets that fail to arrive from 0 to 100 percent.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFNetworkProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NetworkProfile'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.UpdateNetworkProfileResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.UpdateNetworkProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFNetworkProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFNetworkProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.UpdateDFProjectCmdlet">
            <summary>
            Modifies the specified project name, given the project ARN and a new name.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFProjectCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the project whose name to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFProjectCmdlet.DefaultJobTimeoutMinute">
            <summary>
            <para>
            <para>The number of minutes a test run in the project executes before it times out.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFProjectCmdlet.Name">
            <summary>
            <para>
            <para>A string that represents the new name of the project that you are updating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFProjectCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Project'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.UpdateProjectResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.UpdateProjectResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFProjectCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFProjectCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.UpdateDFTestGridProjectCmdlet">
            <summary>
            Change details of a project.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFTestGridProjectCmdlet.Description">
            <summary>
            <para>
            <para>Human-readable description for the project.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFTestGridProjectCmdlet.Name">
            <summary>
            <para>
            <para>Human-readable name for the project.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFTestGridProjectCmdlet.ProjectArn">
            <summary>
            <para>
            <para>ARN of the project to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFTestGridProjectCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TestGridProject'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.UpdateTestGridProjectResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.UpdateTestGridProjectResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFTestGridProjectCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProjectArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ProjectArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFTestGridProjectCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.UpdateDFUploadCmdlet">
            <summary>
            Updates an uploaded test spec.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFUploadCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the uploaded test spec.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFUploadCmdlet.ContentType">
            <summary>
            <para>
            <para>The upload's content type (for example, <code>application/x-yaml</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFUploadCmdlet.EditContent">
            <summary>
            <para>
            <para>Set to true if the YAML file has changed and must be updated. Otherwise, set to false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFUploadCmdlet.Name">
            <summary>
            <para>
            <para>The upload's test spec file name. The name must not contain any forward slashes (/).
            The test spec file name must end with the <code>.yaml</code> or <code>.yml</code>
            file extension.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFUploadCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Upload'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.UpdateUploadResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.UpdateUploadResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFUploadCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFUploadCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DF.UpdateDFVPCEConfigurationCmdlet">
            <summary>
            Updates information about an Amazon Virtual Private Cloud (VPC) endpoint configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFVPCEConfigurationCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFVPCEConfigurationCmdlet.ServiceDnsName">
            <summary>
            <para>
            <para>The DNS (domain) name used to connect to your private service in your VPC. The DNS
            name must not already be in use on the internet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFVPCEConfigurationCmdlet.VpceConfigurationDescription">
            <summary>
            <para>
            <para>An optional description that provides details about your VPC endpoint configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFVPCEConfigurationCmdlet.VpceConfigurationName">
            <summary>
            <para>
            <para>The friendly name you give to your VPC endpoint configuration to manage your configurations
            more easily.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFVPCEConfigurationCmdlet.VpceServiceName">
            <summary>
            <para>
            <para>The name of the VPC endpoint service running in your AWS account that you want Device
            Farm to test.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFVPCEConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VpceConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DeviceFarm.Model.UpdateVPCEConfigurationResponse).
            Specifying the name of a property of type Amazon.DeviceFarm.Model.UpdateVPCEConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFVPCEConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DF.UpdateDFVPCEConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
