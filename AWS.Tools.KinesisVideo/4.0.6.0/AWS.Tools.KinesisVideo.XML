<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.KinesisVideo</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.KV.AddKVResourceTagCmdlet">
            <summary>
            Adds one or more tags to a signaling channel. A <i>tag</i> is a key-value pair (the
            value is optional) that you can define and assign to AWS resources. If you specify
            a tag that already exists, the tag value is replaced with the value that you specify
            in the request. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
            Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.AddKVResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the signaling channel to which you want to add tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.AddKVResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tags to associate with the specified signaling channel. Each tag is a key-value
            pair.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.AddKVResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KinesisVideo.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.AddKVResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.AddKVResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KV.AddKVStreamTagCmdlet">
            <summary>
            Adds one or more tags to a stream. A <i>tag</i> is a key-value pair (the value is
            optional) that you can define and assign to AWS resources. If you specify a tag that
            already exists, the tag value is replaced with the value that you specify in the request.
            For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
            Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.
            
            
             
            <para>
            You must provide either the <code>StreamName</code> or the <code>StreamARN</code>.
            </para><para>
            This operation requires permission for the <code>KinesisVideo:TagStream</code> action.
            </para><para>
            Kinesis video streams support up to 50 tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.AddKVStreamTagCmdlet.StreamARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource that you want to add the tag or tags
            to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.AddKVStreamTagCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream that you want to add the tag or tags to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.AddKVStreamTagCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tags to associate with the specified stream. Each tag is a key-value pair
            (the value is optional).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.AddKVStreamTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KinesisVideo.Model.TagStreamResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.AddKVStreamTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Tag parameter.
            The -PassThru parameter is deprecated, use -Select '^Tag' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.AddKVStreamTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KV.GetKVDataEndpointCmdlet">
            <summary>
            Gets an endpoint for a specified stream for either reading or writing. Use this endpoint
            in your application to read from the specified stream (using the <code>GetMedia</code>
            or <code>GetMediaForFragmentList</code> operations) or write to it (using the <code>PutMedia</code>
            operation). 
            
             <note><para>
            The returned endpoint does not have the API name appended. The client needs to add
            the API name to the returned endpoint.
            </para></note><para>
            In the request, specify the stream either by <code>StreamName</code> or <code>StreamARN</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVDataEndpointCmdlet.APIName">
            <summary>
            <para>
            <para>The name of the API action for which to get an endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVDataEndpointCmdlet.StreamARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the stream that you want to get the endpoint for.
            You must specify either this parameter or a <code>StreamName</code> in the request.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVDataEndpointCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream that you want to get the endpoint for. You must specify either
            this parameter or a <code>StreamARN</code> in the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVDataEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DataEndpoint'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KinesisVideo.Model.GetDataEndpointResponse).
            Specifying the name of a property of type Amazon.KinesisVideo.Model.GetDataEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVDataEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the APIName parameter.
            The -PassThru parameter is deprecated, use -Select '^APIName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KV.GetKVResourceTagCmdlet">
            <summary>
            Returns a list of tags associated with the specified signaling channel.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the signaling channel for which you want to list
            tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVResourceTagCmdlet.NextToken">
            <summary>
            <para>
            <para>If you specify this parameter and the result of a <code>ListTagsForResource</code>
            call is truncated, the response includes a token that you can use in the next request
            to fetch the next batch of tags. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KinesisVideo.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.KinesisVideo.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVResourceTagCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KV.GetKVSignalingChannelCmdlet">
            <summary>
            Returns the most current information about the signaling channel. You must specify
            either the name or the Amazon Resource Name (ARN) of the channel that you want to
            describe.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVSignalingChannelCmdlet.ChannelARN">
            <summary>
            <para>
            <para>The ARN of the signaling channel that you want to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVSignalingChannelCmdlet.ChannelName">
            <summary>
            <para>
            <para>The name of the signaling channel that you want to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVSignalingChannelCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ChannelInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KinesisVideo.Model.DescribeSignalingChannelResponse).
            Specifying the name of a property of type Amazon.KinesisVideo.Model.DescribeSignalingChannelResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVSignalingChannelCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ChannelName parameter.
            The -PassThru parameter is deprecated, use -Select '^ChannelName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KV.GetKVSignalingChannelEndpointCmdlet">
            <summary>
            Provides an endpoint for the specified signaling channel to send and receive messages.
            This API uses the <code>SingleMasterChannelEndpointConfiguration</code> input parameter,
            which consists of the <code>Protocols</code> and <code>Role</code> properties.
            
             
            <para><code>Protocols</code> is used to determine the communication mechanism. For example,
            if you specify <code>WSS</code> as the protocol, this API produces a secure websocket
            endpoint. If you specify <code>HTTPS</code> as the protocol, this API generates an
            HTTPS endpoint. 
            </para><para><code>Role</code> determines the messaging permissions. A <code>MASTER</code> role
            results in this API generating an endpoint that a client can use to communicate with
            any of the viewers on the channel. A <code>VIEWER</code> role results in this API
            generating an endpoint that a client can use to communicate only with a <code>MASTER</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVSignalingChannelEndpointCmdlet.ChannelARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the signalling channel for which you want to get
            an endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVSignalingChannelEndpointCmdlet.SingleMasterChannelEndpointConfiguration_Protocol">
            <summary>
            <para>
            <para>This property is used to determine the nature of communication over this <code>SINGLE_MASTER</code>
            signaling channel. If <code>WSS</code> is specified, this API returns a websocket
            endpoint. If <code>HTTPS</code> is specified, this API returns an <code>HTTPS</code>
            endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVSignalingChannelEndpointCmdlet.SingleMasterChannelEndpointConfiguration_Role">
            <summary>
            <para>
            <para>This property is used to determine messaging permissions in this <code>SINGLE_MASTER</code>
            signaling channel. If <code>MASTER</code> is specified, this API returns an endpoint
            that a client can use to receive offers from and send answers to any of the viewers
            on this signaling channel. If <code>VIEWER</code> is specified, this API returns an
            endpoint that a client can use only to send offers to another <code>MASTER</code>
            client on this signaling channel. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVSignalingChannelEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourceEndpointList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KinesisVideo.Model.GetSignalingChannelEndpointResponse).
            Specifying the name of a property of type Amazon.KinesisVideo.Model.GetSignalingChannelEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVSignalingChannelEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ChannelARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ChannelARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KV.GetKVSignalingChannelListCmdlet">
            <summary>
            Returns an array of <code>ChannelInfo</code> objects. Each object describes a signaling
            channel. To retrieve only those channels that satisfy a specific condition, you can
            specify a <code>ChannelNameCondition</code>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVSignalingChannelListCmdlet.ChannelNameCondition_ComparisonOperator">
            <summary>
            <para>
            <para>A comparison operator. Currently, you can only specify the <code>BEGINS_WITH</code>
            operator, which finds signaling channels whose names begin with a given prefix.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVSignalingChannelListCmdlet.ChannelNameCondition_ComparisonValue">
            <summary>
            <para>
            <para>A value to compare.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVSignalingChannelListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of channels to return in the response. The default is 500.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>10000</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVSignalingChannelListCmdlet.NextToken">
            <summary>
            <para>
            <para>If you specify this parameter, when the result of a <code>ListSignalingChannels</code>
            operation is truncated, the call returns the <code>NextToken</code> in the response.
            To get another batch of channels, provide this token in your next request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVSignalingChannelListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ChannelInfoList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KinesisVideo.Model.ListSignalingChannelsResponse).
            Specifying the name of a property of type Amazon.KinesisVideo.Model.ListSignalingChannelsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVSignalingChannelListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KV.GetKVStreamCmdlet">
            <summary>
            Returns the most current information about the specified stream. You must specify
            either the <code>StreamName</code> or the <code>StreamARN</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVStreamCmdlet.StreamARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVStreamCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVStreamCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StreamInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KinesisVideo.Model.DescribeStreamResponse).
            Specifying the name of a property of type Amazon.KinesisVideo.Model.DescribeStreamResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVStreamCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KV.GetKVStreamListCmdlet">
            <summary>
            Returns an array of <code>StreamInfo</code> objects. Each object describes a stream.
            To retrieve only streams that satisfy a specific condition, you can specify a <code>StreamNameCondition</code>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVStreamListCmdlet.StreamNameCondition">
            <summary>
            <para>
            <para>Optional: Returns only streams that satisfy a specific condition. Currently, you can
            specify only the prefix of a stream name as a condition. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVStreamListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of streams to return in the response. The default is 10,000.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>10000</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVStreamListCmdlet.NextToken">
            <summary>
            <para>
            <para>If you specify this parameter, when the result of a <code>ListStreams</code> operation
            is truncated, the call returns the <code>NextToken</code> in the response. To get
            another batch of streams, provide this token in your next request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVStreamListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StreamInfoList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KinesisVideo.Model.ListStreamsResponse).
            Specifying the name of a property of type Amazon.KinesisVideo.Model.ListStreamsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVStreamListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamNameCondition parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamNameCondition' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVStreamListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KV.GetKVTagsForStreamListCmdlet">
            <summary>
            Returns a list of tags associated with the specified stream.
            
             
            <para>
            In the request, you must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
            
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVTagsForStreamListCmdlet.StreamARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the stream that you want to list tags for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVTagsForStreamListCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream that you want to list tags for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVTagsForStreamListCmdlet.NextToken">
            <summary>
            <para>
            <para>If you specify this parameter and the result of a <code>ListTagsForStream</code> call
            is truncated, the response includes a token that you can use in the next request to
            fetch the next batch of tags.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVTagsForStreamListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KinesisVideo.Model.ListTagsForStreamResponse).
            Specifying the name of a property of type Amazon.KinesisVideo.Model.ListTagsForStreamResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVTagsForStreamListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.GetKVTagsForStreamListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KV.NewKVSignalingChannelCmdlet">
            <summary>
            Creates a signaling channel. 
            
             
            <para><code>CreateSignalingChannel</code> is an asynchronous operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.NewKVSignalingChannelCmdlet.ChannelName">
            <summary>
            <para>
            <para>A name for the signaling channel that you are creating. It must be unique for each
            AWS account and AWS Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.NewKVSignalingChannelCmdlet.ChannelType">
            <summary>
            <para>
            <para>A type of the signaling channel that you are creating. Currently, <code>SINGLE_MASTER</code>
            is the only supported channel type. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.NewKVSignalingChannelCmdlet.SingleMasterConfiguration_MessageTtlSecond">
            <summary>
            <para>
            <para>The period of time a signaling channel retains underlivered messages before they are
            discarded.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.NewKVSignalingChannelCmdlet.Tag">
            <summary>
            <para>
            <para>A set of tags (key-value pairs) that you want to associate with this channel.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.NewKVSignalingChannelCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ChannelARN'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KinesisVideo.Model.CreateSignalingChannelResponse).
            Specifying the name of a property of type Amazon.KinesisVideo.Model.CreateSignalingChannelResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.NewKVSignalingChannelCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ChannelName parameter.
            The -PassThru parameter is deprecated, use -Select '^ChannelName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.NewKVSignalingChannelCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KV.NewKVStreamCmdlet">
            <summary>
            Creates a new Kinesis video stream. 
            
             
            <para>
            When you create a new stream, Kinesis Video Streams assigns it a version number. When
            you change the stream's metadata, Kinesis Video Streams updates the version. 
            </para><para><code>CreateStream</code> is an asynchronous operation.
            </para><para>
            For information about how the service works, see <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/how-it-works.html">How
            it Works</a>. 
            </para><para>
            You must have permissions for the <code>KinesisVideo:CreateStream</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.NewKVStreamCmdlet.DataRetentionInHour">
            <summary>
            <para>
            <para>The number of hours that you want to retain the data in the stream. Kinesis Video
            Streams retains the data in a data store that is associated with the stream.</para><para>The default value is 0, indicating that the stream does not persist data.</para><para>When the <code>DataRetentionInHours</code> value is 0, consumers can still consume
            the fragments that remain in the service host buffer, which has a retention time limit
            of 5 minutes and a retention memory limit of 200 MB. Fragments are removed from the
            buffer when either limit is reached.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.NewKVStreamCmdlet.DeviceName">
            <summary>
            <para>
            <para>The name of the device that is writing to the stream. </para><note><para>In the current implementation, Kinesis Video Streams does not use this name.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.NewKVStreamCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The ID of the AWS Key Management Service (AWS KMS) key that you want Kinesis Video
            Streams to use to encrypt stream data.</para><para>If no key ID is specified, the default, Kinesis Video-managed key (<code>aws/kinesisvideo</code>)
            is used.</para><para> For more information, see <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters">DescribeKey</a>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.NewKVStreamCmdlet.MediaType">
            <summary>
            <para>
            <para>The media type of the stream. Consumers of the stream can use this information when
            processing the stream. For more information about media types, see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">Media
            Types</a>. If you choose to specify the <code>MediaType</code>, see <a href="https://tools.ietf.org/html/rfc6838#section-4.2">Naming
            Requirements</a> for guidelines.</para><para>Example valid values include "video/h264" and "video/h264,audio/aac".</para><para>This parameter is optional; the default value is <code>null</code> (or empty in JSON).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.NewKVStreamCmdlet.StreamName">
            <summary>
            <para>
            <para>A name for the stream that you are creating.</para><para>The stream name is an identifier for the stream, and must be unique for each account
            and region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.NewKVStreamCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tags to associate with the specified stream. Each tag is a key-value pair
            (the value is optional).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.NewKVStreamCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StreamARN'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KinesisVideo.Model.CreateStreamResponse).
            Specifying the name of a property of type Amazon.KinesisVideo.Model.CreateStreamResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.NewKVStreamCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.NewKVStreamCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KV.RemoveKVResourceTagCmdlet">
            <summary>
            Removes one or more tags from a signaling channel. In the request, specify only a
            tag key or keys; don't specify the value. If you specify a tag key that does not exist,
            it's ignored.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the signaling channel from which you want to remove
            tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVResourceTagCmdlet.TagKeyList">
            <summary>
            <para>
            <para>A list of the keys of the tags that you want to remove.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KinesisVideo.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KV.RemoveKVSignalingChannelCmdlet">
            <summary>
            Deletes a specified signaling channel. <code>DeleteSignalingChannel</code> is an asynchronous
            operation. If you don't specify the channel's current version, the most recent version
            is deleted.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVSignalingChannelCmdlet.ChannelARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the signaling channel that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVSignalingChannelCmdlet.CurrentVersion">
            <summary>
            <para>
            <para>The current version of the signaling channel that you want to delete. You can obtain
            the current version by invoking the <code>DescribeSignalingChannel</code> or <code>ListSignalingChannels</code>
            API operations.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVSignalingChannelCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KinesisVideo.Model.DeleteSignalingChannelResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVSignalingChannelCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ChannelARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ChannelARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVSignalingChannelCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KV.RemoveKVStreamCmdlet">
            <summary>
            Deletes a Kinesis video stream and the data contained in the stream. 
            
             
            <para>
            This method marks the stream for deletion, and makes the data in the stream inaccessible
            immediately.
            </para><para></para><para>
             To ensure that you have the latest version of the stream before deleting it, you
            can specify the stream version. Kinesis Video Streams assigns a version to each stream.
            When you update a stream, Kinesis Video Streams assigns a new version number. To get
            the latest stream version, use the <code>DescribeStream</code> API. 
            </para><para>
            This operation requires permission for the <code>KinesisVideo:DeleteStream</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVStreamCmdlet.CurrentVersion">
            <summary>
            <para>
            <para>Optional: The version of the stream that you want to delete. </para><para>Specify the version as a safeguard to ensure that your are deleting the correct stream.
            To get the stream version, use the <code>DescribeStream</code> API.</para><para>If not specified, only the <code>CreationTime</code> is checked before deleting the
            stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVStreamCmdlet.StreamARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the stream that you want to delete. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVStreamCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KinesisVideo.Model.DeleteStreamResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVStreamCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamARN parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVStreamCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KV.RemoveKVStreamTagCmdlet">
            <summary>
            Removes one or more tags from a stream. In the request, specify only a tag key or
            keys; don't specify the value. If you specify a tag key that does not exist, it's
            ignored.
            
             
            <para>
            In the request, you must provide the <code>StreamName</code> or <code>StreamARN</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVStreamTagCmdlet.StreamARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the stream that you want to remove tags from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVStreamTagCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream that you want to remove tags from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVStreamTagCmdlet.TagKeyList">
            <summary>
            <para>
            <para>A list of the keys of the tags that you want to remove.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVStreamTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KinesisVideo.Model.UntagStreamResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVStreamTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TagKeyList parameter.
            The -PassThru parameter is deprecated, use -Select '^TagKeyList' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.RemoveKVStreamTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KV.UpdateKVDataRetentionCmdlet">
            <summary>
            Increases or decreases the stream's data retention period by the value that you specify.
            To indicate whether you want to increase or decrease the data retention period, specify
            the <code>Operation</code> parameter in the request body. In the request, you must
            specify either the <code>StreamName</code> or the <code>StreamARN</code>. 
            
             <note><para>
            The retention period that you specify replaces the current value.
            </para></note><para>
            This operation requires permission for the <code>KinesisVideo:UpdateDataRetention</code>
            action.
            </para><para>
            Changing the data retention period affects the data in the stream as follows:
            </para><ul><li><para>
            If the data retention period is increased, existing data is retained for the new retention
            period. For example, if the data retention period is increased from one hour to seven
            hours, all existing data is retained for seven hours.
            </para></li><li><para>
            If the data retention period is decreased, existing data is retained for the new retention
            period. For example, if the data retention period is decreased from seven hours to
            one hour, all existing data is retained for one hour, and any data older than one
            hour is deleted immediately.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVDataRetentionCmdlet.CurrentVersion">
            <summary>
            <para>
            <para>The version of the stream whose retention period you want to change. To get the version,
            call either the <code>DescribeStream</code> or the <code>ListStreams</code> API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVDataRetentionCmdlet.DataRetentionChangeInHour">
            <summary>
            <para>
            <para>The retention period, in hours. The value you specify replaces the current value.
            The maximum value for this parameter is 87600 (ten years).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVDataRetentionCmdlet.Operation">
            <summary>
            <para>
            <para>Indicates whether you want to increase or decrease the retention period.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVDataRetentionCmdlet.StreamARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the stream whose retention period you want to change.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVDataRetentionCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream whose retention period you want to change.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVDataRetentionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KinesisVideo.Model.UpdateDataRetentionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVDataRetentionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVDataRetentionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KV.UpdateKVSignalingChannelCmdlet">
            <summary>
            Updates the existing signaling channel. This is an asynchronous operation and takes
            time to complete. 
            
             
            <para>
            If the <code>MessageTtlSeconds</code> value is updated (either increased or reduced),
            it only applies to new messages sent via this channel after it's been updated. Existing
            messages are still expired as per the previous <code>MessageTtlSeconds</code> value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVSignalingChannelCmdlet.ChannelARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the signaling channel that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVSignalingChannelCmdlet.CurrentVersion">
            <summary>
            <para>
            <para>The current version of the signaling channel that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVSignalingChannelCmdlet.SingleMasterConfiguration_MessageTtlSecond">
            <summary>
            <para>
            <para>The period of time a signaling channel retains underlivered messages before they are
            discarded.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVSignalingChannelCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KinesisVideo.Model.UpdateSignalingChannelResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVSignalingChannelCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ChannelARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ChannelARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVSignalingChannelCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KV.UpdateKVStreamCmdlet">
            <summary>
            Updates stream metadata, such as the device name and media type.
            
             
            <para>
            You must provide the stream name or the Amazon Resource Name (ARN) of the stream.
            </para><para>
            To make sure that you have the latest version of the stream before updating it, you
            can specify the stream version. Kinesis Video Streams assigns a version to each stream.
            When you update a stream, Kinesis Video Streams assigns a new version number. To get
            the latest stream version, use the <code>DescribeStream</code> API. 
            </para><para><code>UpdateStream</code> is an asynchronous operation, and takes time to complete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVStreamCmdlet.CurrentVersion">
            <summary>
            <para>
            <para>The version of the stream whose metadata you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVStreamCmdlet.DeviceName">
            <summary>
            <para>
            <para>The name of the device that is writing to the stream. </para><note><para> In the current implementation, Kinesis Video Streams does not use this name. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVStreamCmdlet.MediaType">
            <summary>
            <para>
            <para>The stream's media type. Use <code>MediaType</code> to specify the type of content
            that the stream contains to the consumers of the stream. For more information about
            media types, see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">Media
            Types</a>. If you choose to specify the <code>MediaType</code>, see <a href="https://tools.ietf.org/html/rfc6838#section-4.2">Naming
            Requirements</a>.</para><para>To play video on the console, you must specify the correct video type. For example,
            if the video in the stream is H.264, specify <code>video/h264</code> as the <code>MediaType</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVStreamCmdlet.StreamARN">
            <summary>
            <para>
            <para>The ARN of the stream whose metadata you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVStreamCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream whose metadata you want to update.</para><para>The stream name is an identifier for the stream, and must be unique for each account
            and region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVStreamCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KinesisVideo.Model.UpdateStreamResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVStreamCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KV.UpdateKVStreamCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
