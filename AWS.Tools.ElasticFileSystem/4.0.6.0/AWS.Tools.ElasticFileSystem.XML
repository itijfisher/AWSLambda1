<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.ElasticFileSystem</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.AddEFSResourceTagCmdlet">
            <summary>
            Creates a tag for an EFS resource. You can create tags for EFS file systems and access
            points using this API operation.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:TagResource</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.AddEFSResourceTagCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID specifying the EFS resource that you want to create a tag for. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.AddEFSResourceTagCmdlet.Tag">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.AddEFSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.AddEFSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.AddEFSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.EditEFSMountTargetSecurityGroupCmdlet">
            <summary>
            Modifies the set of security groups in effect for a mount target.
            
             
            <para>
            When you create a mount target, Amazon EFS also creates a new network interface. For
            more information, see <a>CreateMountTarget</a>. This operation replaces the security
            groups in effect for the network interface associated with a mount target, with the
            <code>SecurityGroups</code> provided in the request. This operation requires that
            the network interface of the mount target has been created and the lifecycle state
            of the mount target is not <code>deleted</code>. 
            </para><para>
            The operation requires permissions for the following actions:
            </para><ul><li><para><code>elasticfilesystem:ModifyMountTargetSecurityGroups</code> action on the mount
            target's file system. 
            </para></li><li><para><code>ec2:ModifyNetworkInterfaceAttribute</code> action on the mount target's network
            interface. 
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.EditEFSMountTargetSecurityGroupCmdlet.MountTargetId">
            <summary>
            <para>
            <para>The ID of the mount target whose security groups you want to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.EditEFSMountTargetSecurityGroupCmdlet.SecurityGroup">
            <summary>
            <para>
            <para>An array of up to five VPC security group IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.EditEFSMountTargetSecurityGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.ModifyMountTargetSecurityGroupsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.EditEFSMountTargetSecurityGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecurityGroup parameter.
            The -PassThru parameter is deprecated, use -Select '^SecurityGroup' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.EditEFSMountTargetSecurityGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.GetEFSAccessPointCmdlet">
            <summary>
            Returns the description of a specific Amazon EFS access point if the <code>AccessPointId</code>
            is provided. If you provide an EFS <code>FileSystemId</code>, it returns descriptions
            of all access points for that file system. You can provide either an <code>AccessPointId</code>
            or a <code>FileSystemId</code> in the request, but not both. 
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DescribeAccessPoints</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSAccessPointCmdlet.AccessPointId">
            <summary>
            <para>
            <para>(Optional) Specifies an EFS access point to describe in the response; mutually exclusive
            with <code>FileSystemId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSAccessPointCmdlet.FileSystemId">
            <summary>
            <para>
            <para>(Optional) If you provide a <code>FileSystemId</code>, EFS returns all access points
            for that file system; mutually exclusive with <code>AccessPointId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSAccessPointCmdlet.MaxResult">
            <summary>
            <para>
            <para>(Optional) When retrieving all access points for a file system, you can optionally
            specify the <code>MaxItems</code> parameter to limit the number of objects returned
            in a response. The default value is 100. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSAccessPointCmdlet.NextToken">
            <summary>
            <para>
            <para><code>NextToken</code> is present if the response is paginated. You can use <code>NextMarker</code>
            in the subsequent request to fetch the next page of access point descriptions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSAccessPointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AccessPoints'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DescribeAccessPointsResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.DescribeAccessPointsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSAccessPointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemCmdlet">
            <summary>
            Returns the description of a specific Amazon EFS file system if either the file system
            <code>CreationToken</code> or the <code>FileSystemId</code> is provided. Otherwise,
            it returns descriptions of all file systems owned by the caller's AWS account in the
            AWS Region of the endpoint that you're calling.
            
             
            <para>
            When retrieving all file system descriptions, you can optionally specify the <code>MaxItems</code>
            parameter to limit the number of descriptions in a response. Currently, this number
            is automatically set to 10. If more file system descriptions remain, Amazon EFS returns
            a <code>NextMarker</code>, an opaque token, in the response. In this case, you should
            send a subsequent request with the <code>Marker</code> request parameter set to the
            value of <code>NextMarker</code>. 
            </para><para>
            To retrieve a list of your file system descriptions, this operation is used in an
            iterative process, where <code>DescribeFileSystems</code> is called first without
            the <code>Marker</code> and then the operation continues to call it with the <code>Marker</code>
            parameter set to the value of the <code>NextMarker</code> from the previous response
            until the response has no <code>NextMarker</code>. 
            </para><para>
             The order of file systems returned in the response of one <code>DescribeFileSystems</code>
            call and the order of file systems returned across the responses of a multi-call iteration
            is unspecified. 
            </para><para>
             This operation requires permissions for the <code>elasticfilesystem:DescribeFileSystems</code>
            action. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemCmdlet.CreationToken">
            <summary>
            <para>
            <para>(Optional) Restricts the list to the file system with this creation token (String).
            You specify a creation token when you create an Amazon EFS file system.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemCmdlet.FileSystemId">
            <summary>
            <para>
            <para>(Optional) ID of the file system whose description you want to retrieve (String).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemCmdlet.Marker">
            <summary>
            <para>
            <para>(Optional) Opaque pagination token returned from a previous <code>DescribeFileSystems</code>
            operation (String). If present, specifies to continue the list from where the returning
            call had left off. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemCmdlet.MaxItem">
            <summary>
            <para>
            <para>(Optional) Specifies the maximum number of file systems to return in the response
            (integer). This number is automatically set to 100. The response is paginated at 100
            per page if you have more than 100 file systems. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FileSystems'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DescribeFileSystemsResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.DescribeFileSystemsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemPolicyCmdlet">
            <summary>
            Returns the <code>FileSystemPolicy</code> for the specified EFS file system.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DescribeFileSystemPolicy</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemPolicyCmdlet.FileSystemId">
            <summary>
            <para>
            <para>Specifies which EFS file system to retrieve the <code>FileSystemPolicy</code> for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DescribeFileSystemPolicyResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.DescribeFileSystemPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.GetEFSLifecycleConfigurationCmdlet">
            <summary>
            Returns the current <code>LifecycleConfiguration</code> object for the specified Amazon
            EFS file system. EFS lifecycle management uses the <code>LifecycleConfiguration</code>
            object to identify which files to move to the EFS Infrequent Access (IA) storage class.
            For a file system without a <code>LifecycleConfiguration</code> object, the call returns
            an empty array in the response.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DescribeLifecycleConfiguration</code>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSLifecycleConfigurationCmdlet.FileSystemId">
            <summary>
            <para>
            <para>The ID of the file system whose <code>LifecycleConfiguration</code> object you want
            to retrieve (String).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSLifecycleConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LifecyclePolicies'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DescribeLifecycleConfigurationResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.DescribeLifecycleConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSLifecycleConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetCmdlet">
            <summary>
            Returns the descriptions of all the current mount targets, or a specific mount target,
            for a file system. When requesting all of the current mount targets, the order of
            mount targets returned in the response is unspecified.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DescribeMountTargets</code>
            action, on either the file system ID that you specify in <code>FileSystemId</code>,
            or on the file system of the mount target that you specify in <code>MountTargetId</code>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetCmdlet.AccessPointId">
            <summary>
            <para>
            <para>(Optional) The ID of the access point whose mount targets that you want to list. It
            must be included in your request if a <code>FileSystemId</code> or <code>MountTargetId</code>
            is not included in your request. Accepts either an access point ID or ARN as input.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetCmdlet.FileSystemId">
            <summary>
            <para>
            <para>(Optional) ID of the file system whose mount targets you want to list (String). It
            must be included in your request if an <code>AccessPointId</code> or <code>MountTargetId</code>
            is not included. Accepts either a file system ID or ARN as input.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetCmdlet.MountTargetId">
            <summary>
            <para>
            <para>(Optional) ID of the mount target that you want to have described (String). It must
            be included in your request if <code>FileSystemId</code> is not included. Accepts
            either a mount target ID or ARN as input.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetCmdlet.Marker">
            <summary>
            <para>
            <para>(Optional) Opaque pagination token returned from a previous <code>DescribeMountTargets</code>
            operation (String). If present, it specifies to continue the list from where the previous
            returning call left off.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetCmdlet.MaxItem">
            <summary>
            <para>
            <para>(Optional) Maximum number of mount targets to return in the response. Currently, this
            number is automatically set to 10, and other values are ignored. The response is paginated
            at 100 per page if you have more than 100 mount targets.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MountTargets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DescribeMountTargetsResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.DescribeMountTargetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetSecurityGroupCmdlet">
            <summary>
            Returns the security groups currently in effect for a mount target. This operation
            requires that the network interface of the mount target has been created and the lifecycle
            state of the mount target is not <code>deleted</code>.
            
             
            <para>
            This operation requires permissions for the following actions:
            </para><ul><li><para><code>elasticfilesystem:DescribeMountTargetSecurityGroups</code> action on the mount
            target's file system. 
            </para></li><li><para><code>ec2:DescribeNetworkInterfaceAttribute</code> action on the mount target's network
            interface. 
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetSecurityGroupCmdlet.MountTargetId">
            <summary>
            <para>
            <para>The ID of the mount target whose security groups you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetSecurityGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SecurityGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetSecurityGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MountTargetId parameter.
            The -PassThru parameter is deprecated, use -Select '^MountTargetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.GetEFSResourceTagCmdlet">
            <summary>
            Lists all tags for a top-level EFS resource. You must provide the ID of the resource
            that you want to retrieve the tags for.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DescribeAccessPoints</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSResourceTagCmdlet.ResourceId">
            <summary>
            <para>
            <para>Specifies the EFS resource you want to retrieve tags for. You can retrieve tags for
            EFS file systems and access points using this API endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSResourceTagCmdlet.MaxResult">
            <summary>
            <para>
            <para>(Optional) Specifies the maximum number of tag objects to return in the response.
            The default value is 100.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSResourceTagCmdlet.NextToken">
            <summary>
            <para>
            <para>You can use <code>NextToken</code> in a subsequent request to fetch the next page
            of access point descriptions if the response payload was paginated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.GetEFSTagCmdlet">
            <summary>
            Returns the tags associated with a file system. The order of tags returned in the
            response of one <code>DescribeTags</code> call and the order of tags returned across
            the responses of a multiple-call iteration (when using pagination) is unspecified.
            
            
             
            <para>
             This operation requires permissions for the <code>elasticfilesystem:DescribeTags</code>
            action. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.<br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSTagCmdlet.FileSystemId">
            <summary>
            <para>
            <para>The ID of the file system whose tag set you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSTagCmdlet.Marker">
            <summary>
            <para>
            <para>(Optional) An opaque pagination token returned from a previous <code>DescribeTags</code>
            operation (String). If present, it specifies to continue the list from where the previous
            call left off.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSTagCmdlet.MaxItem">
            <summary>
            <para>
            <para>(Optional) The maximum number of file system tags to return in the response. Currently,
            this number is automatically set to 100, and other values are ignored. The response
            is paginated at 100 per page if you have more than 100 tags.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DescribeTagsResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.DescribeTagsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSTagCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet">
            <summary>
            Creates an EFS access point. An access point is an application-specific view into
            an EFS file system that applies an operating system user and group, and a file system
            path, to any file system request made through the access point. The operating system
            user and group override any identity information provided by the NFS client. The file
            system path is exposed as the access point's root directory. Applications using the
            access point can only access data in its own directory and below. To learn more, see
            <a href="https://docs.aws.amazon.com/efs/latest/ug/efs-access-points.html">Mounting
            a File System Using EFS Access Points</a>.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:CreateAccessPoint</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.FileSystemId">
            <summary>
            <para>
            <para>The ID of the EFS file system that the access point provides access to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.PosixUser_Gid">
            <summary>
            <para>
            <para>The POSIX group ID used for all file system operations using this access point.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.CreationInfo_OwnerGid">
            <summary>
            <para>
            <para>Specifies the POSIX group ID to apply to the <code>RootDirectory</code>. Accepts values
            from 0 to 2^32 (4294967295).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.CreationInfo_OwnerUid">
            <summary>
            <para>
            <para>Specifies the POSIX user ID to apply to the <code>RootDirectory</code>. Accepts values
            from 0 to 2^32 (4294967295).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.RootDirectory_Path">
            <summary>
            <para>
            <para>Specifies the path on the EFS file system to expose as the root directory to NFS clients
            using the access point to access the EFS file system. A path can have up to four subdirectories.
            If the specified path does not exist, you are required to provide the <code>CreationInfo</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.CreationInfo_Permission">
            <summary>
            <para>
            <para>Specifies the POSIX permissions to apply to the <code>RootDirectory</code>, in the
            format of an octal number representing the file's mode bits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.PosixUser_SecondaryGid">
            <summary>
            <para>
            <para>Secondary POSIX group IDs used for all file system operations using this access point.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.Tag">
            <summary>
            <para>
            <para>Creates tags associated with the access point. Each tag is a key-value pair.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.PosixUser_Uid">
            <summary>
            <para>
            <para>The POSIX user ID used for all file system operations using this access point.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.ClientToken">
            <summary>
            <para>
            <para>A string of up to 64 ASCII characters that Amazon EFS uses to ensure idempotent creation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.CreateAccessPointResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.CreateAccessPointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet">
            <summary>
            Creates a new, empty file system. The operation requires a creation token in the request
            that Amazon EFS uses to ensure idempotent creation (calling the operation with same
            creation token has no effect). If a file system does not currently exist that is owned
            by the caller's AWS account with the specified creation token, this operation does
            the following:
            
             <ul><li><para>
            Creates a new, empty file system. The file system will have an Amazon EFS assigned
            ID, and an initial lifecycle state <code>creating</code>.
            </para></li><li><para>
            Returns with the description of the created file system.
            </para></li></ul><para>
            Otherwise, this operation returns a <code>FileSystemAlreadyExists</code> error with
            the ID of the existing file system.
            </para><note><para>
            For basic use cases, you can use a randomly generated UUID for the creation token.
            </para></note><para>
             The idempotent operation allows you to retry a <code>CreateFileSystem</code> call
            without risk of creating an extra file system. This can happen when an initial call
            fails in a way that leaves it uncertain whether or not a file system was actually
            created. An example might be that a transport level timeout occurred or your connection
            was reset. As long as you use the same creation token, if the initial call had succeeded
            in creating a file system, the client can learn of its existence from the <code>FileSystemAlreadyExists</code>
            error.
            </para><note><para>
            The <code>CreateFileSystem</code> call returns while the file system's lifecycle state
            is still <code>creating</code>. You can check the file system creation status by calling
            the <a>DescribeFileSystems</a> operation, which among other things returns the file
            system state.
            </para></note><para>
            This operation also takes an optional <code>PerformanceMode</code> parameter that
            you choose for your file system. We recommend <code>generalPurpose</code> performance
            mode for most file systems. File systems using the <code>maxIO</code> performance
            mode can scale to higher levels of aggregate throughput and operations per second
            with a tradeoff of slightly higher latencies for most file operations. The performance
            mode can't be changed after the file system has been created. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/performance.html#performancemodes.html">Amazon
            EFS: Performance Modes</a>.
            </para><para>
            After the file system is fully created, Amazon EFS sets its lifecycle state to <code>available</code>,
            at which point you can create one or more mount targets for the file system in your
            VPC. For more information, see <a>CreateMountTarget</a>. You mount your Amazon EFS
            file system on an EC2 instances in your VPC by using the mount target. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon EFS:
            How it Works</a>. 
            </para><para>
             This operation requires permissions for the <code>elasticfilesystem:CreateFileSystem</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet.CreationToken">
            <summary>
            <para>
            <para>A string of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent creation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet.Encrypted">
            <summary>
            <para>
            <para>A Boolean value that, if true, creates an encrypted file system. When creating an
            encrypted file system, you have the option of specifying <a>CreateFileSystemRequest$KmsKeyId</a>
            for an existing AWS Key Management Service (AWS KMS) customer master key (CMK). If
            you don't specify a CMK, then the default CMK for Amazon EFS, <code>/aws/elasticfilesystem</code>,
            is used to protect the encrypted file system. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The ID of the AWS KMS CMK to be used to protect the encrypted file system. This parameter
            is only required if you want to use a nondefault CMK. If this parameter is not specified,
            the default CMK for Amazon EFS is used. This ID can be in one of the following formats:</para><ul><li><para>Key ID - A unique identifier of the key, for example <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>.</para></li><li><para>ARN - An Amazon Resource Name (ARN) for the key, for example <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.</para></li><li><para>Key alias - A previously created display name for a key, for example <code>alias/projectKey1</code>.</para></li><li><para>Key alias ARN - An ARN for a key alias, for example <code>arn:aws:kms:us-west-2:444455556666:alias/projectKey1</code>.</para></li></ul><para>If <code>KmsKeyId</code> is specified, the <a>CreateFileSystemRequest$Encrypted</a>
            parameter must be set to true.</para><important><para>EFS accepts only symmetric CMKs. You cannot use asymmetric CMKs with EFS file systems.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet.PerformanceMode">
            <summary>
            <para>
            <para>The performance mode of the file system. We recommend <code>generalPurpose</code>
            performance mode for most file systems. File systems using the <code>maxIO</code>
            performance mode can scale to higher levels of aggregate throughput and operations
            per second with a tradeoff of slightly higher latencies for most file operations.
            The performance mode can't be changed after the file system has been created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet.ProvisionedThroughputInMibp">
            <summary>
            <para>
            <para>The throughput, measured in MiB/s, that you want to provision for a file system that
            you're creating. Valid values are 1-1024. Required if <code>ThroughputMode</code>
            is set to <code>provisioned</code>. The upper limit for throughput is 1024 MiB/s.
            You can get this limit increased by contacting AWS Support. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits">Amazon
            EFS Limits That You Can Increase</a> in the <i>Amazon EFS User Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet.Tag">
            <summary>
            <para>
            <para>A value that specifies to create one or more tags associated with the file system.
            Each tag is a user-defined key-value pair. Name your file system on creation by including
            a <code>"Key":"Name","Value":"{value}"</code> key-value pair.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet.ThroughputMode">
            <summary>
            <para>
            <para>The throughput mode for the file system to be created. There are two throughput modes
            to choose from for your file system: <code>bursting</code> and <code>provisioned</code>.
            If you set <code>ThroughputMode</code> to <code>provisioned</code>, you must also
            set a value for <code>ProvisionedThroughPutInMibps</code>. You can decrease your file
            system's throughput in Provisioned Throughput mode or change between the throughput
            modes as long as it’s been more than 24 hours since the last decrease or throughput
            mode change. For more, see <a href="https://docs.aws.amazon.com/efs/latest/ug/performance.html#provisioned-throughput">Specifying
            Throughput with Provisioned Mode</a> in the <i>Amazon EFS User Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.CreateFileSystemResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.CreateFileSystemResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.NewEFSMountTargetCmdlet">
            <summary>
            Creates a mount target for a file system. You can then mount the file system on EC2
            instances by using the mount target.
            
             
            <para>
            You can create one mount target in each Availability Zone in your VPC. All EC2 instances
            in a VPC within a given Availability Zone share a single mount target for a given
            file system. If you have multiple subnets in an Availability Zone, you create a mount
            target in one of the subnets. EC2 instances do not need to be in the same subnet as
            the mount target in order to access their file system. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon EFS: How
            it Works</a>. 
            </para><para>
            In the request, you also specify a file system ID for which you are creating the mount
            target and the file system's lifecycle state must be <code>available</code>. For more
            information, see <a>DescribeFileSystems</a>.
            </para><para>
            In the request, you also provide a subnet ID, which determines the following:
            </para><ul><li><para>
            VPC in which Amazon EFS creates the mount target
            </para></li><li><para>
            Availability Zone in which Amazon EFS creates the mount target
            </para></li><li><para>
            IP address range from which Amazon EFS selects the IP address of the mount target
            (if you don't specify an IP address in the request)
            </para></li></ul><para>
            After creating the mount target, Amazon EFS returns a response that includes, a <code>MountTargetId</code>
            and an <code>IpAddress</code>. You use this IP address when mounting the file system
            in an EC2 instance. You can also use the mount target's DNS name when mounting the
            file system. The EC2 instance on which you mount the file system by using the mount
            target can resolve the mount target's DNS name to its IP address. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html#how-it-works-implementation">How
            it Works: Implementation Overview</a>. 
            </para><para>
            Note that you can create mount targets for a file system in only one VPC, and there
            can be only one mount target per Availability Zone. That is, if the file system already
            has one or more mount targets created for it, the subnet specified in the request
            to add another mount target must meet the following requirements:
            </para><ul><li><para>
            Must belong to the same VPC as the subnets of the existing mount targets
            </para></li><li><para>
            Must not be in the same Availability Zone as any of the subnets of the existing mount
            targets
            </para></li></ul><para>
            If the request satisfies the requirements, Amazon EFS does the following:
            </para><ul><li><para>
            Creates a new mount target in the specified subnet.
            </para></li><li><para>
            Also creates a new network interface in the subnet as follows:
            </para><ul><li><para>
            If the request provides an <code>IpAddress</code>, Amazon EFS assigns that IP address
            to the network interface. Otherwise, Amazon EFS assigns a free address in the subnet
            (in the same way that the Amazon EC2 <code>CreateNetworkInterface</code> call does
            when a request does not specify a primary private IP address).
            </para></li><li><para>
            If the request provides <code>SecurityGroups</code>, this network interface is associated
            with those security groups. Otherwise, it belongs to the default security group for
            the subnet's VPC.
            </para></li><li><para>
            Assigns the description <code>Mount target <i>fsmt-id</i> for file system <i>fs-id</i></code> where <code><i>fsmt-id</i></code> is the mount target ID, and <code><i>fs-id</i></code> is the <code>FileSystemId</code>.
            </para></li><li><para>
            Sets the <code>requesterManaged</code> property of the network interface to <code>true</code>,
            and the <code>requesterId</code> value to <code>EFS</code>.
            </para></li></ul><para>
            Each Amazon EFS mount target has one corresponding requester-managed EC2 network interface.
            After the network interface is created, Amazon EFS sets the <code>NetworkInterfaceId</code>
            field in the mount target's description to the network interface ID, and the <code>IpAddress</code>
            field to its address. If network interface creation fails, the entire <code>CreateMountTarget</code>
            operation fails.
            </para></li></ul><note><para>
            The <code>CreateMountTarget</code> call returns only after creating the network interface,
            but while the mount target state is still <code>creating</code>, you can check the
            mount target creation status by calling the <a>DescribeMountTargets</a> operation,
            which among other things returns the mount target state.
            </para></note><para>
            We recommend that you create a mount target in each of the Availability Zones. There
            are cost considerations for using a file system in an Availability Zone through a
            mount target created in another Availability Zone. For more information, see <a href="http://aws.amazon.com/efs/">Amazon
            EFS</a>. In addition, by always using a mount target local to the instance's Availability
            Zone, you eliminate a partial failure scenario. If the Availability Zone in which
            your mount target is created goes down, then you can't access your file system through
            that mount target. 
            </para><para>
            This operation requires permissions for the following action on the file system:
            </para><ul><li><para><code>elasticfilesystem:CreateMountTarget</code></para></li></ul><para>
            This operation also requires permissions for the following Amazon EC2 actions:
            </para><ul><li><para><code>ec2:DescribeSubnets</code></para></li><li><para><code>ec2:DescribeNetworkInterfaces</code></para></li><li><para><code>ec2:CreateNetworkInterface</code></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSMountTargetCmdlet.FileSystemId">
            <summary>
            <para>
            <para>The ID of the file system for which to create the mount target.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSMountTargetCmdlet.IpAddress">
            <summary>
            <para>
            <para>Valid IPv4 address within the address range of the specified subnet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSMountTargetCmdlet.SecurityGroup">
            <summary>
            <para>
            <para>Up to five VPC security group IDs, of the form <code>sg-xxxxxxxx</code>. These must
            be for the same VPC as subnet specified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSMountTargetCmdlet.SubnetId">
            <summary>
            <para>
            <para>The ID of the subnet to add the mount target in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSMountTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.CreateMountTargetResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.CreateMountTargetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSMountTargetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSMountTargetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.NewEFSTagCmdlet">
            <summary>
            Creates or overwrites tags associated with a file system. Each tag is a key-value
            pair. If a tag key specified in the request already exists on the file system, this
            operation overwrites its value with the value provided in the request. If you add
            the <code>Name</code> tag to your file system, Amazon EFS returns it in the response
            to the <a>DescribeFileSystems</a> operation. 
            
             
            <para>
            This operation requires permission for the <code>elasticfilesystem:CreateTags</code>
            action.
            </para><br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSTagCmdlet.FileSystemId">
            <summary>
            <para>
            <para>The ID of the file system whose tags you want to modify (String). This operation modifies
            the tags only, not the file system.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSTagCmdlet.Tag">
            <summary>
            <para>
            <para>An array of <code>Tag</code> objects to add. Each <code>Tag</code> object is a key-value
            pair. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.CreateTagsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Tag parameter.
            The -PassThru parameter is deprecated, use -Select '^Tag' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSAccessPointCmdlet">
            <summary>
            Deletes the specified access point. After deletion is complete, new clients can no
            longer connect to the access points. Clients connected to the access point at the
            time of deletion will continue to function until they terminate their connection.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DeleteAccessPoint</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSAccessPointCmdlet.AccessPointId">
            <summary>
            <para>
            <para>The ID of the access point that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSAccessPointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DeleteAccessPointResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSAccessPointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccessPointId parameter.
            The -PassThru parameter is deprecated, use -Select '^AccessPointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSAccessPointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSFileSystemCmdlet">
            <summary>
            Deletes a file system, permanently severing access to its contents. Upon return, the
            file system no longer exists and you can't access any contents of the deleted file
            system.
            
             
            <para>
             You can't delete a file system that is in use. That is, if the file system has any
            mount targets, you must first delete them. For more information, see <a>DescribeMountTargets</a>
            and <a>DeleteMountTarget</a>. 
            </para><note><para>
            The <code>DeleteFileSystem</code> call returns while the file system state is still
            <code>deleting</code>. You can check the file system deletion status by calling the
            <a>DescribeFileSystems</a> operation, which returns a list of file systems in your
            account. If you pass file system ID or creation token for the deleted file system,
            the <a>DescribeFileSystems</a> returns a <code>404 FileSystemNotFound</code> error.
            </para></note><para>
            This operation requires permissions for the <code>elasticfilesystem:DeleteFileSystem</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSFileSystemCmdlet.FileSystemId">
            <summary>
            <para>
            <para>The ID of the file system you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSFileSystemCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DeleteFileSystemResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSFileSystemCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSFileSystemCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSFileSystemPolicyCmdlet">
            <summary>
            Deletes the <code>FileSystemPolicy</code> for the specified file system. The default
            <code>FileSystemPolicy</code> goes into effect once the existing policy is deleted.
            For more information about the default file system policy, see <a href="https://docs.aws.amazon.com/efs/latest/ug/res-based-policies-efs.html">Using
            Resource-based Policies with EFS</a>.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DeleteFileSystemPolicy</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSFileSystemPolicyCmdlet.FileSystemId">
            <summary>
            <para>
            <para>Specifies the EFS file system for which to delete the <code>FileSystemPolicy</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSFileSystemPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DeleteFileSystemPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSFileSystemPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSFileSystemPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSMountTargetCmdlet">
            <summary>
            Deletes the specified mount target.
            
             
            <para>
            This operation forcibly breaks any mounts of the file system by using the mount target
            that is being deleted, which might disrupt instances or applications using those mounts.
            To avoid applications getting cut off abruptly, you might consider unmounting any
            mounts of the mount target, if feasible. The operation also deletes the associated
            network interface. Uncommitted writes might be lost, but breaking a mount target using
            this operation does not corrupt the file system itself. The file system you created
            remains. You can mount an EC2 instance in your VPC by using another mount target.
            </para><para>
            This operation requires permissions for the following action on the file system:
            </para><ul><li><para><code>elasticfilesystem:DeleteMountTarget</code></para></li></ul><note><para>
            The <code>DeleteMountTarget</code> call returns while the mount target state is still
            <code>deleting</code>. You can check the mount target deletion by calling the <a>DescribeMountTargets</a>
            operation, which returns a list of mount target descriptions for the given file system.
            
            </para></note><para>
            The operation also requires permissions for the following Amazon EC2 action on the
            mount target's network interface:
            </para><ul><li><para><code>ec2:DeleteNetworkInterface</code></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSMountTargetCmdlet.MountTargetId">
            <summary>
            <para>
            <para>The ID of the mount target to delete (String).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSMountTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DeleteMountTargetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSMountTargetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MountTargetId parameter.
            The -PassThru parameter is deprecated, use -Select '^MountTargetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSMountTargetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSResourceTagCmdlet">
            <summary>
            Removes tags from an EFS resource. You can remove tags from EFS file systems and access
            points using this API operation.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:UntagResource</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSResourceTagCmdlet.ResourceId">
            <summary>
            <para>
            <para>Specifies the EFS resource that you want to remove tags from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The keys of the key:value tag pairs that you want to remove from the specified EFS
            resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSTagCmdlet">
            <summary>
            Deletes the specified tags from a file system. If the <code>DeleteTags</code> request
            includes a tag key that doesn't exist, Amazon EFS ignores it and doesn't cause an
            error. For more information about tags and related restrictions, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Tag
            Restrictions</a> in the <i>AWS Billing and Cost Management User Guide</i>.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DeleteTags</code>
            action.
            </para><br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSTagCmdlet.FileSystemId">
            <summary>
            <para>
            <para>The ID of the file system whose tags you want to delete (String).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSTagCmdlet.TagKey">
            <summary>
            <para>
            <para>A list of tag keys to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DeleteTagsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.UpdateEFSFileSystemCmdlet">
            <summary>
            Updates the throughput mode or the amount of provisioned throughput of an existing
            file system.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.UpdateEFSFileSystemCmdlet.FileSystemId">
            <summary>
            <para>
            <para>The ID of the file system that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.UpdateEFSFileSystemCmdlet.ProvisionedThroughputInMibp">
            <summary>
            <para>
            <para>(Optional) The amount of throughput, in MiB/s, that you want to provision for your
            file system. Valid values are 1-1024. Required if <code>ThroughputMode</code> is changed
            to <code>provisioned</code> on update. If you're not updating the amount of provisioned
            throughput for your file system, you don't need to provide this value in your request.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.UpdateEFSFileSystemCmdlet.ThroughputMode">
            <summary>
            <para>
            <para>(Optional) The throughput mode that you want your file system to use. If you're not
            updating your throughput mode, you don't need to provide this value in your request.
            If you are changing the <code>ThroughputMode</code> to <code>provisioned</code>, you
            must also set a value for <code>ProvisionedThroughputInMibps</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.UpdateEFSFileSystemCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.UpdateFileSystemResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.UpdateFileSystemResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.UpdateEFSFileSystemCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.UpdateEFSFileSystemCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.WriteEFSFileSystemPolicyCmdlet">
            <summary>
            Applies an Amazon EFS <code>FileSystemPolicy</code> to an Amazon EFS file system.
            A file system policy is an IAM resource-based policy and can contain multiple policy
            statements. A file system always has exactly one file system policy, which can be
            the default policy or an explicit policy set or updated using this API operation.
            When an explicit policy is set, it overrides the default policy. For more information
            about the default file system policy, see <a href="https://docs.aws.amazon.com/efs/latest/ug/iam-access-control-nfs-efs.html#default-filesystempolicy">Default
            EFS File System Policy</a>. 
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:PutFileSystemPolicy</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSFileSystemPolicyCmdlet.BypassPolicyLockoutSafetyCheck">
            <summary>
            <para>
            <para>(Optional) A flag to indicate whether to bypass the <code>FileSystemPolicy</code>
            lockout safety check. The policy lockout safety check determines whether the policy
            in the request will prevent the principal making the request will be locked out from
            making future <code>PutFileSystemPolicy</code> requests on the file system. Set <code>BypassPolicyLockoutSafetyCheck</code>
            to <code>True</code> only when you intend to prevent the principal that is making
            the request from making a subsequent <code>PutFileSystemPolicy</code> request on the
            file system. The default value is False. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSFileSystemPolicyCmdlet.FileSystemId">
            <summary>
            <para>
            <para>The ID of the EFS file system that you want to create or update the <code>FileSystemPolicy</code>
            for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSFileSystemPolicyCmdlet.Policy">
            <summary>
            <para>
            <para>The <code>FileSystemPolicy</code> that you're creating. Accepts a JSON formatted policy
            definition. To find out more about the elements that make up a file system policy,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/access-control-overview.html#access-control-manage-access-intro-resource-policies">EFS
            Resource-based Policies</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSFileSystemPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.PutFileSystemPolicyResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.PutFileSystemPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSFileSystemPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSFileSystemPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.WriteEFSLifecycleConfigurationCmdlet">
            <summary>
            Enables lifecycle management by creating a new <code>LifecycleConfiguration</code>
            object. A <code>LifecycleConfiguration</code> object defines when files in an Amazon
            EFS file system are automatically transitioned to the lower-cost EFS Infrequent Access
            (IA) storage class. A <code>LifecycleConfiguration</code> applies to all files in
            a file system.
            
             
            <para>
            Each Amazon EFS file system supports one lifecycle configuration, which applies to
            all files in the file system. If a <code>LifecycleConfiguration</code> object already
            exists for the specified file system, a <code>PutLifecycleConfiguration</code> call
            modifies the existing configuration. A <code>PutLifecycleConfiguration</code> call
            with an empty <code>LifecyclePolicies</code> array in the request body deletes any
            existing <code>LifecycleConfiguration</code> and disables lifecycle management.
            </para><para>
            In the request, specify the following: 
            </para><ul><li><para>
            The ID for the file system for which you are enabling, disabling, or modifying lifecycle
            management.
            </para></li><li><para>
            A <code>LifecyclePolicies</code> array of <code>LifecyclePolicy</code> objects that
            define when files are moved to the IA storage class. The array can contain only one
            <code>LifecyclePolicy</code> item.
            </para></li></ul><para>
            This operation requires permissions for the <code>elasticfilesystem:PutLifecycleConfiguration</code>
            operation.
            </para><para>
            To apply a <code>LifecycleConfiguration</code> object to an encrypted file system,
            you need the same AWS Key Management Service (AWS KMS) permissions as when you created
            the encrypted file system. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSLifecycleConfigurationCmdlet.FileSystemId">
            <summary>
            <para>
            <para>The ID of the file system for which you are creating the <code>LifecycleConfiguration</code>
            object (String).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSLifecycleConfigurationCmdlet.LifecyclePolicy">
            <summary>
            <para>
            <para>An array of <code>LifecyclePolicy</code> objects that define the file system's <code>LifecycleConfiguration</code>
            object. A <code>LifecycleConfiguration</code> object tells lifecycle management when
            to transition files from the Standard storage class to the Infrequent Access storage
            class.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSLifecycleConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LifecyclePolicies'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.PutLifecycleConfigurationResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.PutLifecycleConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSLifecycleConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSLifecycleConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
