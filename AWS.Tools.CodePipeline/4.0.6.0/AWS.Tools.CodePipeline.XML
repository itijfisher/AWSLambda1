<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.CodePipeline</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.AddCPResourceTagCmdlet">
            <summary>
            Adds to or modifies the tags of the given resource. Tags are metadata that can be
            used to manage a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.AddCPResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource you want to add tags to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.AddCPResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags you want to modify or add to the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.AddCPResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.AddCPResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.AddCPResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.ConfirmCPJobCmdlet">
            <summary>
            Returns information about a specified job and whether that job has been received by
            the job worker. Used for custom actions only.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.ConfirmCPJobCmdlet.JobId">
            <summary>
            <para>
            <para>The unique system-generated ID of the job for which you want to confirm receipt.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.ConfirmCPJobCmdlet.Nonce">
            <summary>
            <para>
            <para>A system-generated random number that AWS CodePipeline uses to ensure that the job
            is being worked on by only one job worker. Get this number from the response of the
            <a>PollForJobs</a> request that returned this job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.ConfirmCPJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Status'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.AcknowledgeJobResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.AcknowledgeJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.ConfirmCPJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.ConfirmCPJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.ConfirmCPThirdPartyJobCmdlet">
            <summary>
            Confirms a job worker has received the specified job. Used for partner actions only.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.ConfirmCPThirdPartyJobCmdlet.JobId">
            <summary>
            <para>
            <para>The unique system-generated ID of the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.ConfirmCPThirdPartyJobCmdlet.Nonce">
            <summary>
            <para>
            <para>A system-generated random number that AWS CodePipeline uses to ensure that the job
            is being worked on by only one job worker. Get this number from the response to a
            <a>GetThirdPartyJobDetails</a> request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.ConfirmCPThirdPartyJobCmdlet.ClientToken">
            <summary>
            <para>
            <para>The clientToken portion of the clientId and clientToken pair used to verify that the
            calling entity is allowed access to the job and its details.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.ConfirmCPThirdPartyJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Status'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.AcknowledgeThirdPartyJobResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.AcknowledgeThirdPartyJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.ConfirmCPThirdPartyJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.ConfirmCPThirdPartyJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.DisableCPStageTransitionCmdlet">
            <summary>
            Prevents artifacts in a pipeline from transitioning to the next stage in the pipeline.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.DisableCPStageTransitionCmdlet.PipelineName">
            <summary>
            <para>
            <para>The name of the pipeline in which you want to disable the flow of artifacts from one
            stage to another.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.DisableCPStageTransitionCmdlet.Reason">
            <summary>
            <para>
            <para>The reason given to the user that a stage is disabled, such as waiting for manual
            approval or manual tests. This message is displayed in the pipeline console UI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.DisableCPStageTransitionCmdlet.StageName">
            <summary>
            <para>
            <para>The name of the stage where you want to disable the inbound or outbound transition
            of artifacts.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.DisableCPStageTransitionCmdlet.TransitionType">
            <summary>
            <para>
            <para>Specifies whether artifacts are prevented from transitioning into the stage and being
            processed by the actions in that stage (inbound), or prevented from transitioning
            from the stage after they have been processed by the actions in that stage (outbound).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.DisableCPStageTransitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.DisableStageTransitionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.DisableCPStageTransitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.EnableCPStageTransitionCmdlet">
            <summary>
            Enables artifacts in a pipeline to transition to a stage in a pipeline.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.EnableCPStageTransitionCmdlet.PipelineName">
            <summary>
            <para>
            <para>The name of the pipeline in which you want to enable the flow of artifacts from one
            stage to another.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.EnableCPStageTransitionCmdlet.StageName">
            <summary>
            <para>
            <para>The name of the stage where you want to enable the transition of artifacts, either
            into the stage (inbound) or from that stage to the next stage (outbound).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.EnableCPStageTransitionCmdlet.TransitionType">
            <summary>
            <para>
            <para>Specifies whether artifacts are allowed to enter the stage and be processed by the
            actions in that stage (inbound) or whether already processed artifacts are allowed
            to transition to the next stage (outbound).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.EnableCPStageTransitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.EnableStageTransitionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.EnableCPStageTransitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.GetCPActionableJobListCmdlet">
            <summary>
            Returns information about any jobs for AWS CodePipeline to act on. <code>PollForJobs</code>
            is valid only for action types with "Custom" in the owner field. If the action type
            contains "AWS" or "ThirdParty" in the owner field, the <code>PollForJobs</code> action
            returns an error.
            
             <important><para>
            When this API is called, AWS CodePipeline returns temporary credentials for the S3
            bucket used to store artifacts for the pipeline, if the action requires access to
            that S3 bucket for input or output artifacts. This API also returns any secret values
            defined for the action.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionableJobListCmdlet.ActionTypeId_Category">
            <summary>
            <para>
            <para>A category defines what kind of action can be taken in the stage, and constrains the
            provider type for the action. Valid categories are limited to one of the following
            values. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionableJobListCmdlet.MaxBatchSize">
            <summary>
            <para>
            <para>The maximum number of jobs to return in a poll for jobs call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionableJobListCmdlet.ActionTypeId_Owner">
            <summary>
            <para>
            <para>The creator of the action being called.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionableJobListCmdlet.ActionTypeId_Provider">
            <summary>
            <para>
            <para>The provider of the service being called by the action. Valid providers are determined
            by the action category. For example, an action in the Deploy category type might have
            a provider of AWS CodeDeploy, which would be specified as CodeDeploy. For more information,
            see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#actions-valid-providers">Valid
            Action Types and Providers in CodePipeline</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionableJobListCmdlet.QueryParam">
            <summary>
            <para>
            <para>A map of property names and values. For an action type with no queryable properties,
            this value must be null or an empty map. For an action type with a queryable property,
            you must supply that property as a key in the map. Only jobs whose action configuration
            matches the mapped value are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionableJobListCmdlet.ActionTypeId_Version">
            <summary>
            <para>
            <para>A string that describes the action version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionableJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Jobs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.PollForJobsResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.PollForJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.GetCPActionableThirdPartyJobListCmdlet">
            <summary>
            Determines whether there are any third party jobs for a job worker to act on. Used
            for partner actions only.
            
             <important><para>
            When this API is called, AWS CodePipeline returns temporary credentials for the S3
            bucket used to store artifacts for the pipeline, if the action requires access to
            that S3 bucket for input or output artifacts.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionableThirdPartyJobListCmdlet.ActionTypeId_Category">
            <summary>
            <para>
            <para>A category defines what kind of action can be taken in the stage, and constrains the
            provider type for the action. Valid categories are limited to one of the following
            values. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionableThirdPartyJobListCmdlet.MaxBatchSize">
            <summary>
            <para>
            <para>The maximum number of jobs to return in a poll for jobs call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionableThirdPartyJobListCmdlet.ActionTypeId_Owner">
            <summary>
            <para>
            <para>The creator of the action being called.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionableThirdPartyJobListCmdlet.ActionTypeId_Provider">
            <summary>
            <para>
            <para>The provider of the service being called by the action. Valid providers are determined
            by the action category. For example, an action in the Deploy category type might have
            a provider of AWS CodeDeploy, which would be specified as CodeDeploy. For more information,
            see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#actions-valid-providers">Valid
            Action Types and Providers in CodePipeline</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionableThirdPartyJobListCmdlet.ActionTypeId_Version">
            <summary>
            <para>
            <para>A string that describes the action version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionableThirdPartyJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Jobs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.PollForThirdPartyJobsResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.PollForThirdPartyJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.GetCPActionExecutionListCmdlet">
            <summary>
            Lists the action executions that have occurred in a pipeline.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionExecutionListCmdlet.Filter_PipelineExecutionId">
            <summary>
            <para>
            <para>The pipeline execution ID used to filter action execution history.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionExecutionListCmdlet.PipelineName">
            <summary>
            <para>
            <para> The name of the pipeline for which you want to list action execution history.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionExecutionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. To retrieve the remaining
            results, make another call with the returned nextToken value. Action execution history
            is retained for up to 12 months, based on action execution start times. Default value
            is 100. </para><note><para>Detailed execution history is available for executions run on or after February 21,
            2019.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionExecutionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token that was returned from the previous <code>ListActionExecutions</code> call,
            which can be used to return the next set of action executions in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionExecutionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ActionExecutionDetails'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.ListActionExecutionsResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.ListActionExecutionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionExecutionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PipelineName parameter.
            The -PassThru parameter is deprecated, use -Select '^PipelineName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionExecutionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.GetCPActionTypeCmdlet">
            <summary>
            Gets a summary of all AWS CodePipeline action types associated with your account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionTypeCmdlet.ActionOwnerFilter">
            <summary>
            <para>
            <para>Filters the list of action types to those created by a specified entity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionTypeCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous list action types call, which can
            be used to return the next set of action types in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ActionTypes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.ListActionTypesResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.ListActionTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPActionTypeCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.GetCPJobDetailCmdlet">
            <summary>
            Returns information about a job. Used for custom actions only.
            
             <important><para>
            When this API is called, AWS CodePipeline returns temporary credentials for the S3
            bucket used to store artifacts for the pipeline, if the action requires access to
            that S3 bucket for input or output artifacts. This API also returns any secret values
            defined for the action.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPJobDetailCmdlet.JobId">
            <summary>
            <para>
            <para>The unique system-generated ID for the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPJobDetailCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'JobDetails'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.GetJobDetailsResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.GetJobDetailsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPJobDetailCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineCmdlet">
            <summary>
            Returns the metadata, structure, stages, and actions of a pipeline. Can be used to
            return the entire structure of a pipeline in JSON format, which can then be modified
            and used to update the pipeline structure with <a>UpdatePipeline</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineCmdlet.Name">
            <summary>
            <para>
            <para>The name of the pipeline for which you want to get information. Pipeline names must
            be unique under an AWS user account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineCmdlet.Version">
            <summary>
            <para>
            <para>The version number of the pipeline. If you do not specify a version, defaults to the
            current version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.GetPipelineResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.GetPipelineResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineExecutionCmdlet">
            <summary>
            Returns information about an execution of a pipeline, including details about artifacts,
            the pipeline execution ID, and the name, version, and status of the pipeline.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineExecutionCmdlet.PipelineExecutionId">
            <summary>
            <para>
            <para>The ID of the pipeline execution about which you want to get execution details.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineExecutionCmdlet.PipelineName">
            <summary>
            <para>
            <para>The name of the pipeline about which you want to get execution details.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PipelineExecution'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.GetPipelineExecutionResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.GetPipelineExecutionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PipelineName parameter.
            The -PassThru parameter is deprecated, use -Select '^PipelineName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineExecutionSummaryCmdlet">
            <summary>
            Gets a summary of the most recent executions for a pipeline.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineExecutionSummaryCmdlet.PipelineName">
            <summary>
            <para>
            <para>The name of the pipeline for which you want to get execution summary information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineExecutionSummaryCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. To retrieve the remaining
            results, make another call with the returned nextToken value. Pipeline history is
            limited to the most recent 12 months, based on pipeline execution start times. Default
            value is 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineExecutionSummaryCmdlet.NextToken">
            <summary>
            <para>
            <para>The token that was returned from the previous <code>ListPipelineExecutions</code>
            call, which can be used to return the next set of pipeline executions in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineExecutionSummaryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PipelineExecutionSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.ListPipelineExecutionsResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.ListPipelineExecutionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineExecutionSummaryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PipelineName parameter.
            The -PassThru parameter is deprecated, use -Select '^PipelineName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineExecutionSummaryCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineListCmdlet">
            <summary>
            Gets a summary of all of the pipelines associated with your account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous list pipelines call. It can be used
            to return the next set of pipelines in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Pipelines'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.ListPipelinesResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.ListPipelinesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineStateCmdlet">
            <summary>
            Returns information about the state of a pipeline, including the stages and actions.
            
             <note><para>
            Values returned in the <code>revisionId</code> and <code>revisionUrl</code> fields
            indicate the source revision information, such as the commit ID, for the current state.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineStateCmdlet.Name">
            <summary>
            <para>
            <para>The name of the pipeline about which you want to get information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineStateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.GetPipelineStateResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.GetPipelineStateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPPipelineStateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.GetCPResourceTagCmdlet">
            <summary>
            Gets the set of key-value pairs (metadata) that are used to manage the resource.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource to get tags for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPResourceTagCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPResourceTagCmdlet.NextToken">
            <summary>
            <para>
            <para>The token that was returned from the previous API call, which would be used to return
            the next page of the list. The ListTagsforResource call lists all available tags in
            one call and does not use pagination.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPResourceTagCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.GetCPThirdPartyJobDetailCmdlet">
            <summary>
            Requests the details of a job for a third party action. Used for partner actions only.
            
             <important><para>
            When this API is called, AWS CodePipeline returns temporary credentials for the S3
            bucket used to store artifacts for the pipeline, if the action requires access to
            that S3 bucket for input or output artifacts. This API also returns any secret values
            defined for the action.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPThirdPartyJobDetailCmdlet.JobId">
            <summary>
            <para>
            <para>The unique system-generated ID used for identifying the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPThirdPartyJobDetailCmdlet.ClientToken">
            <summary>
            <para>
            <para>The clientToken portion of the clientId and clientToken pair used to verify that the
            calling entity is allowed access to the job and its details.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPThirdPartyJobDetailCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'JobDetails'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.GetThirdPartyJobDetailsResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.GetThirdPartyJobDetailsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPThirdPartyJobDetailCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.GetCPWebhookListCmdlet">
            <summary>
            Gets a listing of all the webhooks in this AWS Region for this account. The output
            lists all webhooks and includes the webhook URL and ARN and the configuration for
            each webhook.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPWebhookListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call. To retrieve the remaining
            results, make another call with the returned nextToken value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPWebhookListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token that was returned from the previous ListWebhooks call, which can be used
            to return the next set of webhooks in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPWebhookListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Webhooks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.ListWebhooksResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.ListWebhooksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPWebhookListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MaxResult parameter.
            The -PassThru parameter is deprecated, use -Select '^MaxResult' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.GetCPWebhookListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.NewCPCustomActionTypeCmdlet">
            <summary>
            Creates a new custom action that can be used in all pipelines associated with the
            AWS account. Only used for custom actions.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.NewCPCustomActionTypeCmdlet.Category">
            <summary>
            <para>
            <para>The category of the custom action, such as a build action or a test action.</para><note><para>Although <code>Source</code> and <code>Approval</code> are listed as valid values,
            they are not currently functional. These values are reserved for future use.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.NewCPCustomActionTypeCmdlet.ConfigurationProperty">
            <summary>
            <para>
            <para>The configuration properties for the custom action.</para><note><para>You can refer to a name in the configuration properties of the custom action within
            the URL templates by following the format of {Config:name}, as long as the configuration
            property is both required and not secret. For more information, see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/how-to-create-custom-action.html">Create
            a Custom Action for a Pipeline</a>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.NewCPCustomActionTypeCmdlet.Settings_EntityUrlTemplate">
            <summary>
            <para>
            <para>The URL returned to the AWS CodePipeline console that provides a deep link to the
            resources of the external system, such as the configuration page for an AWS CodeDeploy
            deployment group. This link is provided as part of the action display in the pipeline.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.NewCPCustomActionTypeCmdlet.Settings_ExecutionUrlTemplate">
            <summary>
            <para>
            <para>The URL returned to the AWS CodePipeline console that contains a link to the top-level
            landing page for the external system, such as the console page for AWS CodeDeploy.
            This link is shown on the pipeline view page in the AWS CodePipeline console and provides
            a link to the execution entity of the external action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.NewCPCustomActionTypeCmdlet.InputArtifactDetails_MaximumCount">
            <summary>
            <para>
            <para>The maximum number of artifacts allowed for the action type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.NewCPCustomActionTypeCmdlet.OutputArtifactDetails_MaximumCount">
            <summary>
            <para>
            <para>The maximum number of artifacts allowed for the action type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.NewCPCustomActionTypeCmdlet.InputArtifactDetails_MinimumCount">
            <summary>
            <para>
            <para>The minimum number of artifacts allowed for the action type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.NewCPCustomActionTypeCmdlet.OutputArtifactDetails_MinimumCount">
            <summary>
            <para>
            <para>The minimum number of artifacts allowed for the action type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.NewCPCustomActionTypeCmdlet.Provider">
            <summary>
            <para>
            <para>The provider of the service used in the custom action, such as AWS CodeDeploy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.NewCPCustomActionTypeCmdlet.Settings_RevisionUrlTemplate">
            <summary>
            <para>
            <para>The URL returned to the AWS CodePipeline console that contains a link to the page
            where customers can update or change the configuration of the external action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.NewCPCustomActionTypeCmdlet.Tag">
            <summary>
            <para>
            <para>The tags for the custom action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.NewCPCustomActionTypeCmdlet.Settings_ThirdPartyConfigurationUrl">
            <summary>
            <para>
            <para>The URL of a sign-up page where users can sign up for an external service and perform
            initial configuration of the action provided by that service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.NewCPCustomActionTypeCmdlet.Version">
            <summary>
            <para>
            <para>The version identifier of the custom action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.NewCPCustomActionTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ActionType'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.CreateCustomActionTypeResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.CreateCustomActionTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.NewCPCustomActionTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.NewCPPipelineCmdlet">
            <summary>
            Creates a pipeline.
            
             <note><para>
            In the pipeline structure, you must include either <code>artifactStore</code> or <code>artifactStores</code>
            in your pipeline, but you cannot use both. If you create a cross-region action in
            your pipeline, you must use <code>artifactStores</code>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.NewCPPipelineCmdlet.Pipeline">
            <summary>
            <para>
            <para>Represents the structure of actions and stages to be performed in the pipeline. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.NewCPPipelineCmdlet.Tag">
            <summary>
            <para>
            <para>The tags for the pipeline.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.NewCPPipelineCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Pipeline'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.CreatePipelineResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.CreatePipelineResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.NewCPPipelineCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Pipeline parameter.
            The -PassThru parameter is deprecated, use -Select '^Pipeline' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.NewCPPipelineCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.RedoCPStageExecutionCmdlet">
            <summary>
            Resumes the pipeline execution by retrying the last failed actions in a stage. You
            can retry a stage immediately if any of the actions in the stage fail. When you retry,
            all actions that are still in progress continue working, and failed actions are triggered
            again.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RedoCPStageExecutionCmdlet.PipelineExecutionId">
            <summary>
            <para>
            <para>The ID of the pipeline execution in the failed stage to be retried. Use the <a>GetPipelineState</a>
            action to retrieve the current pipelineExecutionId of the failed stage</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RedoCPStageExecutionCmdlet.PipelineName">
            <summary>
            <para>
            <para>The name of the pipeline that contains the failed stage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RedoCPStageExecutionCmdlet.RetryMode">
            <summary>
            <para>
            <para>The scope of the retry attempt. Currently, the only supported value is FAILED_ACTIONS.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RedoCPStageExecutionCmdlet.StageName">
            <summary>
            <para>
            <para>The name of the failed stage to be retried.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RedoCPStageExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PipelineExecutionId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.RetryStageExecutionResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.RetryStageExecutionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RedoCPStageExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PipelineName parameter.
            The -PassThru parameter is deprecated, use -Select '^PipelineName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RedoCPStageExecutionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.RegisterCPWebhookWithThirdPartyCmdlet">
            <summary>
            Configures a connection between the webhook that was created and the external tool
            with events to be detected.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RegisterCPWebhookWithThirdPartyCmdlet.WebhookName">
            <summary>
            <para>
            <para>The name of an existing webhook created with PutWebhook to register with a supported
            third party. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RegisterCPWebhookWithThirdPartyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.RegisterWebhookWithThirdPartyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RegisterCPWebhookWithThirdPartyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WebhookName parameter.
            The -PassThru parameter is deprecated, use -Select '^WebhookName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RegisterCPWebhookWithThirdPartyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.RemoveCPCustomActionTypeCmdlet">
            <summary>
            Marks a custom action as deleted. <code>PollForJobs</code> for the custom action fails
            after the action is marked for deletion. Used for custom actions only.
            
             <important><para>
            To re-create a custom action after it has been deleted you must use a string in the
            version field that has never been used before. This string can be an incremented version
            number, for example. To restore a deleted custom action, use a JSON file that is identical
            to the deleted action, including the original string in the version field.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RemoveCPCustomActionTypeCmdlet.Category">
            <summary>
            <para>
            <para>The category of the custom action that you want to delete, such as source or deploy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RemoveCPCustomActionTypeCmdlet.Provider">
            <summary>
            <para>
            <para>The provider of the service used in the custom action, such as AWS CodeDeploy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RemoveCPCustomActionTypeCmdlet.Version">
            <summary>
            <para>
            <para>The version of the custom action to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RemoveCPCustomActionTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.DeleteCustomActionTypeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RemoveCPCustomActionTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.RemoveCPPipelineCmdlet">
            <summary>
            Deletes the specified pipeline.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RemoveCPPipelineCmdlet.Name">
            <summary>
            <para>
            <para>The name of the pipeline to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RemoveCPPipelineCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.DeletePipelineResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RemoveCPPipelineCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RemoveCPPipelineCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.RemoveCPResourceTagCmdlet">
            <summary>
            Removes tags from an AWS resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RemoveCPResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para> The Amazon Resource Name (ARN) of the resource to remove tags from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RemoveCPResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The list of keys for the tags to be removed from the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RemoveCPResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RemoveCPResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RemoveCPResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.RemoveCPWebhookCmdlet">
            <summary>
            Deletes a previously created webhook by name. Deleting the webhook stops AWS CodePipeline
            from starting a pipeline every time an external event occurs. The API returns successfully
            when trying to delete a webhook that is already deleted. If a deleted webhook is re-created
            by calling PutWebhook with the same name, it will have a different URL.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RemoveCPWebhookCmdlet.Name">
            <summary>
            <para>
            <para>The name of the webhook you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RemoveCPWebhookCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.DeleteWebhookResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RemoveCPWebhookCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.RemoveCPWebhookCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.StartCPPipelineExecutionCmdlet">
            <summary>
            Starts the specified pipeline. Specifically, it begins processing the latest commit
            to the source location specified as part of the pipeline.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.StartCPPipelineExecutionCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>The system-generated unique ID used to identify a unique execution request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.StartCPPipelineExecutionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the pipeline to start.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.StartCPPipelineExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PipelineExecutionId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.StartPipelineExecutionResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.StartPipelineExecutionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.StartCPPipelineExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.StartCPPipelineExecutionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.StopCPPipelineExecutionCmdlet">
            <summary>
            Stops the specified pipeline execution. You choose to either stop the pipeline execution
            by completing in-progress actions without starting subsequent actions, or by abandoning
            in-progress actions. While completing or abandoning in-progress actions, the pipeline
            execution is in a <code>Stopping</code> state. After all in-progress actions are completed
            or abandoned, the pipeline execution is in a <code>Stopped</code> state.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.StopCPPipelineExecutionCmdlet.Abandon">
            <summary>
            <para>
            <para>Use this option to stop the pipeline execution by abandoning, rather than finishing,
            in-progress actions.</para><note><para>This option can lead to failed or out-of-sequence tasks.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.StopCPPipelineExecutionCmdlet.PipelineExecutionId">
            <summary>
            <para>
            <para>The ID of the pipeline execution to be stopped in the current stage. Use the <code>GetPipelineState</code>
            action to retrieve the current pipelineExecutionId.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.StopCPPipelineExecutionCmdlet.PipelineName">
            <summary>
            <para>
            <para>The name of the pipeline to stop.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.StopCPPipelineExecutionCmdlet.Reason">
            <summary>
            <para>
            <para>Use this option to enter comments, such as the reason the pipeline was stopped.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.StopCPPipelineExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PipelineExecutionId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.StopPipelineExecutionResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.StopPipelineExecutionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.StopCPPipelineExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PipelineExecutionId parameter.
            The -PassThru parameter is deprecated, use -Select '^PipelineExecutionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.StopCPPipelineExecutionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.UnregisterCPWebhookWithThirdPartyCmdlet">
            <summary>
            Removes the connection between the webhook that was created by CodePipeline and the
            external tool with events to be detected. Currently supported only for webhooks that
            target an action type of GitHub.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.UnregisterCPWebhookWithThirdPartyCmdlet.WebhookName">
            <summary>
            <para>
            <para>The name of the webhook you want to deregister.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.UnregisterCPWebhookWithThirdPartyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.DeregisterWebhookWithThirdPartyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.UnregisterCPWebhookWithThirdPartyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WebhookName parameter.
            The -PassThru parameter is deprecated, use -Select '^WebhookName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.UnregisterCPWebhookWithThirdPartyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.UpdateCPPipelineCmdlet">
            <summary>
            Updates a specified pipeline with edits or changes to its structure. Use a JSON file
            with the pipeline structure and <code>UpdatePipeline</code> to provide the full structure
            of the pipeline. Updating the pipeline increases the version number of the pipeline
            by 1.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.UpdateCPPipelineCmdlet.Pipeline">
            <summary>
            <para>
            <para>The name of the pipeline to be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.UpdateCPPipelineCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Pipeline'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.UpdatePipelineResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.UpdatePipelineResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.UpdateCPPipelineCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Pipeline parameter.
            The -PassThru parameter is deprecated, use -Select '^Pipeline' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.UpdateCPPipelineCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.WriteCPActionRevisionCmdlet">
            <summary>
            Provides information to AWS CodePipeline about new revisions to a source.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPActionRevisionCmdlet.ActionName">
            <summary>
            <para>
            <para>The name of the action that processes the revision.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPActionRevisionCmdlet.ActionRevision_Created">
            <summary>
            <para>
            <para>The date and time when the most recent version of the action was created, in timestamp
            format.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPActionRevisionCmdlet.PipelineName">
            <summary>
            <para>
            <para>The name of the pipeline that starts processing the revision to the source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPActionRevisionCmdlet.ActionRevision_RevisionChangeId">
            <summary>
            <para>
            <para>The unique identifier of the change that set the state to this revision (for example,
            a deployment ID or timestamp).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPActionRevisionCmdlet.ActionRevision_RevisionId">
            <summary>
            <para>
            <para>The system-generated unique ID that identifies the revision number of the action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPActionRevisionCmdlet.StageName">
            <summary>
            <para>
            <para>The name of the stage that contains the action that acts on the revision.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPActionRevisionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.PutActionRevisionResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.PutActionRevisionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPActionRevisionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PipelineName parameter.
            The -PassThru parameter is deprecated, use -Select '^PipelineName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPActionRevisionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.WriteCPApprovalResultCmdlet">
            <summary>
            Provides the response to a manual approval request to AWS CodePipeline. Valid responses
            include Approved and Rejected.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPApprovalResultCmdlet.ActionName">
            <summary>
            <para>
            <para>The name of the action for which approval is requested.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPApprovalResultCmdlet.PipelineName">
            <summary>
            <para>
            <para>The name of the pipeline that contains the action. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPApprovalResultCmdlet.StageName">
            <summary>
            <para>
            <para>The name of the stage that contains the action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPApprovalResultCmdlet.Result_Status">
            <summary>
            <para>
            <para>The response submitted by a reviewer assigned to an approval action request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPApprovalResultCmdlet.Result_Summary">
            <summary>
            <para>
            <para>The summary of the current status of the approval request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPApprovalResultCmdlet.Token">
            <summary>
            <para>
            <para>The system-generated token used to identify a unique approval request. The token for
            each open approval request can be obtained using the <a>GetPipelineState</a> action.
            It is used to validate that the approval request corresponding to this token is still
            valid.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPApprovalResultCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApprovedAt'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.PutApprovalResultResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.PutApprovalResultResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPApprovalResultCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PipelineName parameter.
            The -PassThru parameter is deprecated, use -Select '^PipelineName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPApprovalResultCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.WriteCPJobFailureResultCmdlet">
            <summary>
            Represents the failure of a job as returned to the pipeline by a job worker. Used
            for custom actions only.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPJobFailureResultCmdlet.FailureDetails_ExternalExecutionId">
            <summary>
            <para>
            <para>The external ID of the run of the action that failed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPJobFailureResultCmdlet.JobId">
            <summary>
            <para>
            <para>The unique system-generated ID of the job that failed. This is the same ID returned
            from <code>PollForJobs</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPJobFailureResultCmdlet.FailureDetails_Message">
            <summary>
            <para>
            <para>The message about the failure.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPJobFailureResultCmdlet.FailureDetails_Type">
            <summary>
            <para>
            <para>The type of the failure.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPJobFailureResultCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.PutJobFailureResultResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPJobFailureResultCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPJobFailureResultCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.WriteCPJobSuccessResultCmdlet">
            <summary>
            Represents the success of a job as returned to the pipeline by a job worker. Used
            for custom actions only.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPJobSuccessResultCmdlet.CurrentRevision_ChangeIdentifier">
            <summary>
            <para>
            <para>The change identifier for the current revision.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPJobSuccessResultCmdlet.ContinuationToken">
            <summary>
            <para>
            <para>A token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a
            successful job provides to identify a custom action in progress. Future jobs use this
            token to identify the running instance of the action. It can be reused to return more
            information about the progress of the custom action. When the action is complete,
            no continuation token should be supplied.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPJobSuccessResultCmdlet.CurrentRevision_Created">
            <summary>
            <para>
            <para>The date and time when the most recent revision of the artifact was created, in timestamp
            format.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPJobSuccessResultCmdlet.ExecutionDetails_ExternalExecutionId">
            <summary>
            <para>
            <para>The system-generated unique ID of this action used to identify this job worker in
            any external systems, such as AWS CodeDeploy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPJobSuccessResultCmdlet.JobId">
            <summary>
            <para>
            <para>The unique system-generated ID of the job that succeeded. This is the same ID returned
            from <code>PollForJobs</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPJobSuccessResultCmdlet.OutputVariable">
            <summary>
            <para>
            <para>Key-value pairs produced as output by a job worker that can be made available to a
            downstream action configuration. <code>outputVariables</code> can be included only
            when there is no continuation token on the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPJobSuccessResultCmdlet.ExecutionDetails_PercentComplete">
            <summary>
            <para>
            <para>The percentage of work completed on the action, represented on a scale of 0 to 100
            percent.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPJobSuccessResultCmdlet.CurrentRevision_Revision">
            <summary>
            <para>
            <para>The revision ID of the current version of an artifact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPJobSuccessResultCmdlet.CurrentRevision_RevisionSummary">
            <summary>
            <para>
            <para>The summary of the most recent revision of the artifact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPJobSuccessResultCmdlet.ExecutionDetails_Summary">
            <summary>
            <para>
            <para>The summary of the current status of the actions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPJobSuccessResultCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.PutJobSuccessResultResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPJobSuccessResultCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPJobSuccessResultCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobFailureResultCmdlet">
            <summary>
            Represents the failure of a third party job as returned to the pipeline by a job worker.
            Used for partner actions only.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobFailureResultCmdlet.FailureDetails_ExternalExecutionId">
            <summary>
            <para>
            <para>The external ID of the run of the action that failed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobFailureResultCmdlet.JobId">
            <summary>
            <para>
            <para>The ID of the job that failed. This is the same ID returned from <code>PollForThirdPartyJobs</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobFailureResultCmdlet.FailureDetails_Message">
            <summary>
            <para>
            <para>The message about the failure.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobFailureResultCmdlet.FailureDetails_Type">
            <summary>
            <para>
            <para>The type of the failure.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobFailureResultCmdlet.ClientToken">
            <summary>
            <para>
            <para>The clientToken portion of the clientId and clientToken pair used to verify that the
            calling entity is allowed access to the job and its details.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobFailureResultCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.PutThirdPartyJobFailureResultResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobFailureResultCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobFailureResultCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobSuccessResultCmdlet">
            <summary>
            Represents the success of a third party job as returned to the pipeline by a job worker.
            Used for partner actions only.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobSuccessResultCmdlet.CurrentRevision_ChangeIdentifier">
            <summary>
            <para>
            <para>The change identifier for the current revision.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobSuccessResultCmdlet.ContinuationToken">
            <summary>
            <para>
            <para>A token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a
            successful job provides to identify a partner action in progress. Future jobs use
            this token to identify the running instance of the action. It can be reused to return
            more information about the progress of the partner action. When the action is complete,
            no continuation token should be supplied.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobSuccessResultCmdlet.CurrentRevision_Created">
            <summary>
            <para>
            <para>The date and time when the most recent revision of the artifact was created, in timestamp
            format.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobSuccessResultCmdlet.ExecutionDetails_ExternalExecutionId">
            <summary>
            <para>
            <para>The system-generated unique ID of this action used to identify this job worker in
            any external systems, such as AWS CodeDeploy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobSuccessResultCmdlet.JobId">
            <summary>
            <para>
            <para>The ID of the job that successfully completed. This is the same ID returned from <code>PollForThirdPartyJobs</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobSuccessResultCmdlet.ExecutionDetails_PercentComplete">
            <summary>
            <para>
            <para>The percentage of work completed on the action, represented on a scale of 0 to 100
            percent.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobSuccessResultCmdlet.CurrentRevision_Revision">
            <summary>
            <para>
            <para>The revision ID of the current version of an artifact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobSuccessResultCmdlet.CurrentRevision_RevisionSummary">
            <summary>
            <para>
            <para>The summary of the most recent revision of the artifact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobSuccessResultCmdlet.ExecutionDetails_Summary">
            <summary>
            <para>
            <para>The summary of the current status of the actions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobSuccessResultCmdlet.ClientToken">
            <summary>
            <para>
            <para>The clientToken portion of the clientId and clientToken pair used to verify that the
            calling entity is allowed access to the job and its details.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobSuccessResultCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.PutThirdPartyJobSuccessResultResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobSuccessResultCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPThirdPartyJobSuccessResultCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CP.WriteCPWebhookCmdlet">
            <summary>
            Defines a webhook and returns a unique webhook URL generated by CodePipeline. This
            URL can be supplied to third party source hosting providers to call every time there's
            a code change. When CodePipeline receives a POST request on this URL, the pipeline
            defined in the webhook is started as long as the POST request satisfied the authentication
            and filtering requirements supplied when defining the webhook. RegisterWebhookWithThirdParty
            and DeregisterWebhookWithThirdParty APIs can be used to automatically configure supported
            third parties to call the generated webhook URL.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPWebhookCmdlet.AuthenticationConfiguration_AllowedIPRange">
            <summary>
            <para>
            <para>The property used to configure acceptance of webhooks in an IP address range. For
            IP, only the <code>AllowedIPRange</code> property must be set. This property must
            be set to a valid CIDR range.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPWebhookCmdlet.Webhook_Authentication">
            <summary>
            <para>
            <para>Supported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.</para><ul><li><para>For information about the authentication scheme implemented by GITHUB_HMAC, see <a href="https://developer.github.com/webhooks/securing/">Securing your webhooks</a>
            on the GitHub Developer website.</para></li><li><para> IP rejects webhooks trigger requests unless they originate from an IP address in
            the IP range whitelisted in the authentication configuration.</para></li><li><para> UNAUTHENTICATED accepts all webhook trigger requests regardless of origin.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPWebhookCmdlet.Webhook_Filter">
            <summary>
            <para>
            <para>A list of rules applied to the body/payload sent in the POST request to a webhook
            URL. All defined rules must pass for the request to be accepted and the pipeline started.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPWebhookCmdlet.Webhook_Name">
            <summary>
            <para>
            <para>The name of the webhook.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPWebhookCmdlet.AuthenticationConfiguration_SecretToken">
            <summary>
            <para>
            <para>The property used to configure GitHub authentication. For GITHUB_HMAC, only the <code>SecretToken</code>
            property must be set.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPWebhookCmdlet.Tag">
            <summary>
            <para>
            <para>The tags for the webhook.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPWebhookCmdlet.Webhook_TargetAction">
            <summary>
            <para>
            <para>The name of the action in a pipeline you want to connect to the webhook. The action
            must be from the source (first) stage of the pipeline.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPWebhookCmdlet.Webhook_TargetPipeline">
            <summary>
            <para>
            <para>The name of the pipeline you want to connect to the webhook.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPWebhookCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Webhook'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodePipeline.Model.PutWebhookResponse).
            Specifying the name of a property of type Amazon.CodePipeline.Model.PutWebhookResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPWebhookCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Webhook_Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Webhook_Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CP.WriteCPWebhookCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
