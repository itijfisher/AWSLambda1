<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.AppSync</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.AddASYNResourceTagCmdlet">
            <summary>
            Tags a resource with user-supplied tags.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.AddASYNResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The <code>GraphqlApi</code> ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.AddASYNResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>A <code>TagMap</code> object.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.AddASYNResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.AddASYNResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.AddASYNResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.ClearASYNApiCacheCmdlet">
            <summary>
            Flushes an <code>ApiCache</code> object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.ClearASYNApiCacheCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.ClearASYNApiCacheCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.FlushApiCacheResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.ClearASYNApiCacheCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApiId parameter.
            The -PassThru parameter is deprecated, use -Select '^ApiId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.ClearASYNApiCacheCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.GetASYNApiCacheCmdlet">
            <summary>
            Retrieves an <code>ApiCache</code> object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNApiCacheCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNApiCacheCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApiCache'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.GetApiCacheResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.GetApiCacheResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNApiCacheCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApiId parameter.
            The -PassThru parameter is deprecated, use -Select '^ApiId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.GetASYNApiKeyListCmdlet">
            <summary>
            Lists the API keys for a given API.
            
             <note><para>
            API keys are deleted automatically sometime after they expire. However, they may still
            be included in the response until they have actually been deleted. You can safely
            call <code>DeleteApiKey</code> to manually delete a key before it's automatically
            deleted.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNApiKeyListCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNApiKeyListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results you want the request to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>25</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNApiKeyListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNApiKeyListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApiKeys'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.ListApiKeysResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.ListApiKeysResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNApiKeyListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApiId parameter.
            The -PassThru parameter is deprecated, use -Select '^ApiId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNApiKeyListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.GetASYNDataSourceCmdlet">
            <summary>
            Retrieves a <code>DataSource</code> object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNDataSourceCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNDataSourceCmdlet.Name">
            <summary>
            <para>
            <para>The name of the data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNDataSourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DataSource'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.GetDataSourceResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.GetDataSourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNDataSourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.GetASYNDataSourceListCmdlet">
            <summary>
            Lists the data sources for a given API.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNDataSourceListCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNDataSourceListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results you want the request to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>25</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNDataSourceListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNDataSourceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DataSources'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.ListDataSourcesResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.ListDataSourcesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNDataSourceListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApiId parameter.
            The -PassThru parameter is deprecated, use -Select '^ApiId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNDataSourceListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.GetASYNFunctionCmdlet">
            <summary>
            Get a <code>Function</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNFunctionCmdlet.ApiId">
            <summary>
            <para>
            <para>The GraphQL API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNFunctionCmdlet.FunctionId">
            <summary>
            <para>
            <para>The <code>Function</code> ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNFunctionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FunctionConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.GetFunctionResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.GetFunctionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNFunctionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionId parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.GetASYNFunctionListCmdlet">
            <summary>
            List multiple functions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNFunctionListCmdlet.ApiId">
            <summary>
            <para>
            <para>The GraphQL API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNFunctionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results you want the request to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>25</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNFunctionListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNFunctionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Functions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.ListFunctionsResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.ListFunctionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNFunctionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApiId parameter.
            The -PassThru parameter is deprecated, use -Select '^ApiId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNFunctionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.GetASYNGraphqlApiCmdlet">
            <summary>
            Retrieves a <code>GraphqlApi</code> object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNGraphqlApiCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID for the GraphQL API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNGraphqlApiCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GraphqlApi'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.GetGraphqlApiResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.GetGraphqlApiResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNGraphqlApiCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApiId parameter.
            The -PassThru parameter is deprecated, use -Select '^ApiId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.GetASYNGraphqlApiListCmdlet">
            <summary>
            Lists your GraphQL APIs.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNGraphqlApiListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results you want the request to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>25</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNGraphqlApiListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNGraphqlApiListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GraphqlApis'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.ListGraphqlApisResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.ListGraphqlApisResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNGraphqlApiListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.GetASYNIntrospectionSchemaCmdlet">
            <summary>
            Retrieves the introspection schema for a GraphQL API.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNIntrospectionSchemaCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNIntrospectionSchemaCmdlet.Format">
            <summary>
            <para>
            <para>The schema format: SDL or JSON.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNIntrospectionSchemaCmdlet.IncludeDirective">
            <summary>
            <para>
            <para>A flag that specifies whether the schema introspection should contain directives.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNIntrospectionSchemaCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Schema'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.GetIntrospectionSchemaResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.GetIntrospectionSchemaResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNIntrospectionSchemaCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApiId parameter.
            The -PassThru parameter is deprecated, use -Select '^ApiId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverCmdlet">
            <summary>
            Retrieves a <code>Resolver</code> object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverCmdlet.FieldName">
            <summary>
            <para>
            <para>The resolver field name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverCmdlet.TypeName">
            <summary>
            <para>
            <para>The resolver type name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Resolver'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.GetResolverResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.GetResolverResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FieldName parameter.
            The -PassThru parameter is deprecated, use -Select '^FieldName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverListCmdlet">
            <summary>
            Lists the resolvers for a given API and type.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverListCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverListCmdlet.TypeName">
            <summary>
            <para>
            <para>The type name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results you want the request to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>25</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Resolvers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.ListResolversResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.ListResolversResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TypeName parameter.
            The -PassThru parameter is deprecated, use -Select '^TypeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverListByFunctionCmdlet">
            <summary>
            List the resolvers that are associated with a specific function.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverListByFunctionCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverListByFunctionCmdlet.FunctionId">
            <summary>
            <para>
            <para>The Function ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverListByFunctionCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results you want the request to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>25</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverListByFunctionCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which you
            can use to return the next set of items in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverListByFunctionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Resolvers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.ListResolversByFunctionResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.ListResolversByFunctionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverListByFunctionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionId parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResolverListByFunctionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResourceTagCmdlet">
            <summary>
            Lists the tags for a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The <code>GraphqlApi</code> ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.GetASYNSchemaCreationStatusCmdlet">
            <summary>
            Retrieves the current status of a schema creation operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNSchemaCreationStatusCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNSchemaCreationStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.GetSchemaCreationStatusResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.GetSchemaCreationStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNSchemaCreationStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApiId parameter.
            The -PassThru parameter is deprecated, use -Select '^ApiId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.GetASYNTypeCmdlet">
            <summary>
            Retrieves a <code>Type</code> object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNTypeCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNTypeCmdlet.Format">
            <summary>
            <para>
            <para>The type format: SDL or JSON.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNTypeCmdlet.TypeName">
            <summary>
            <para>
            <para>The type name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Type'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.GetTypeResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.GetTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TypeName parameter.
            The -PassThru parameter is deprecated, use -Select '^TypeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.GetASYNTypeListCmdlet">
            <summary>
            Lists the types for a given API.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNTypeListCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNTypeListCmdlet.Format">
            <summary>
            <para>
            <para>The type format: SDL or JSON.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNTypeListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results you want the request to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>25</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNTypeListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNTypeListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Types'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.ListTypesResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.ListTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNTypeListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApiId parameter.
            The -PassThru parameter is deprecated, use -Select '^ApiId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.GetASYNTypeListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.NewASYNApiCacheCmdlet">
            <summary>
            Creates a cache for the GraphQL API.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNApiCacheCmdlet.ApiCachingBehavior">
            <summary>
            <para>
            <para>Caching behavior.</para><ul><li><para><b>FULL_REQUEST_CACHING</b>: All requests are fully cached.</para></li><li><para><b>PER_RESOLVER_CACHING</b>: Individual resovlers that you specify are cached.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNApiCacheCmdlet.ApiId">
            <summary>
            <para>
            <para>The GraphQL API Id.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNApiCacheCmdlet.AtRestEncryptionEnabled">
            <summary>
            <para>
            <para>At rest encryption flag for cache. This setting cannot be updated after creation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNApiCacheCmdlet.TransitEncryptionEnabled">
            <summary>
            <para>
            <para>Transit encryption flag when connecting to cache. This setting cannot be updated after
            creation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNApiCacheCmdlet.Ttl">
            <summary>
            <para>
            <para>TTL in seconds for cache entries.</para><para>Valid values are between 1 and 3600 seconds.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNApiCacheCmdlet.Type">
            <summary>
            <para>
            <para>The cache instance type.</para><ul><li><para><b>T2_SMALL</b>: A t2.small instance type.</para></li><li><para><b>T2_MEDIUM</b>: A t2.medium instance type.</para></li><li><para><b>R4_LARGE</b>: A r4.large instance type.</para></li><li><para><b>R4_XLARGE</b>: A r4.xlarge instance type.</para></li><li><para><b>R4_2XLARGE</b>: A r4.2xlarge instance type.</para></li><li><para><b>R4_4XLARGE</b>: A r4.4xlarge instance type.</para></li><li><para><b>R4_8XLARGE</b>: A r4.8xlarge instance type.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNApiCacheCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApiCache'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.CreateApiCacheResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.CreateApiCacheResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNApiCacheCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApiId parameter.
            The -PassThru parameter is deprecated, use -Select '^ApiId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNApiCacheCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.NewASYNApiKeyCmdlet">
            <summary>
            Creates a unique key that you can distribute to clients who are executing your API.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNApiKeyCmdlet.ApiId">
            <summary>
            <para>
            <para>The ID for your GraphQL API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNApiKeyCmdlet.Description">
            <summary>
            <para>
            <para>A description of the purpose of the API key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNApiKeyCmdlet.Expire">
            <summary>
            <para>
            <para>The time from creation time after which the API key expires. The date is represented
            as seconds since the epoch, rounded down to the nearest hour. The default value for
            this parameter is 7 days from creation time. For more information, see .</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNApiKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApiKey'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.CreateApiKeyResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.CreateApiKeyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNApiKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApiId parameter.
            The -PassThru parameter is deprecated, use -Select '^ApiId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNApiKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.NewASYNDataSourceCmdlet">
            <summary>
            Creates a <code>DataSource</code> object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNDataSourceCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID for the GraphQL API for the <code>DataSource</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNDataSourceCmdlet.HttpConfig_AuthorizationConfig">
            <summary>
            <para>
            <para>The authorization config in case the HTTP endpoint requires authorization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNDataSourceCmdlet.Description">
            <summary>
            <para>
            <para>A description of the <code>DataSource</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNDataSourceCmdlet.DynamodbConfig">
            <summary>
            <para>
            <para>Amazon DynamoDB settings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNDataSourceCmdlet.ElasticsearchConfig">
            <summary>
            <para>
            <para>Amazon Elasticsearch Service settings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNDataSourceCmdlet.HttpConfig_Endpoint">
            <summary>
            <para>
            <para>The HTTP URL endpoint. You can either specify the domain name or IP, and port combination,
            and the URL scheme must be HTTP or HTTPS. If the port is not specified, AWS AppSync
            uses the default port 80 for the HTTP endpoint and port 443 for HTTPS endpoints.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNDataSourceCmdlet.LambdaConfig">
            <summary>
            <para>
            <para>AWS Lambda settings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNDataSourceCmdlet.Name">
            <summary>
            <para>
            <para>A user-supplied name for the <code>DataSource</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNDataSourceCmdlet.RelationalDatabaseConfig_RdsHttpEndpointConfig">
            <summary>
            <para>
            <para>Amazon RDS HTTP endpoint settings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNDataSourceCmdlet.RelationalDatabaseConfig_RelationalDatabaseSourceType">
            <summary>
            <para>
            <para>Source type for the relational database.</para><ul><li><para><b>RDS_HTTP_ENDPOINT</b>: The relational database source type is an Amazon RDS HTTP
            endpoint.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNDataSourceCmdlet.ServiceRoleArn">
            <summary>
            <para>
            <para>The AWS IAM service role ARN for the data source. The system assumes this role when
            accessing the data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNDataSourceCmdlet.Type">
            <summary>
            <para>
            <para>The type of the <code>DataSource</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNDataSourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DataSource'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.CreateDataSourceResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.CreateDataSourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNDataSourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNDataSourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.NewASYNFunctionCmdlet">
            <summary>
            Creates a <code>Function</code> object.
            
             
            <para>
            A function is a reusable entity. Multiple functions can be used to compose the resolver
            logic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNFunctionCmdlet.ApiId">
            <summary>
            <para>
            <para>The GraphQL API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNFunctionCmdlet.DataSourceName">
            <summary>
            <para>
            <para>The <code>Function</code><code>DataSource</code> name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNFunctionCmdlet.Description">
            <summary>
            <para>
            <para>The <code>Function</code> description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNFunctionCmdlet.FunctionVersion">
            <summary>
            <para>
            <para>The <code>version</code> of the request mapping template. Currently the supported
            value is 2018-05-29. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNFunctionCmdlet.Name">
            <summary>
            <para>
            <para>The <code>Function</code> name. The function name does not have to be unique.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNFunctionCmdlet.RequestMappingTemplate">
            <summary>
            <para>
            <para>The <code>Function</code> request mapping template. Functions support only the 2018-05-29
            version of the request mapping template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNFunctionCmdlet.ResponseMappingTemplate">
            <summary>
            <para>
            <para>The <code>Function</code> response mapping template. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNFunctionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FunctionConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.CreateFunctionResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.CreateFunctionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNFunctionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApiId parameter.
            The -PassThru parameter is deprecated, use -Select '^ApiId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNFunctionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.NewASYNGraphqlApiCmdlet">
            <summary>
            Creates a <code>GraphqlApi</code> object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNGraphqlApiCmdlet.AdditionalAuthenticationProvider">
            <summary>
            <para>
            <para>A list of additional authentication providers for the <code>GraphqlApi</code> API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNGraphqlApiCmdlet.AuthenticationType">
            <summary>
            <para>
            <para>The authentication type: API key, AWS IAM, OIDC, or Amazon Cognito user pools.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNGraphqlApiCmdlet.OpenIDConnectConfig_AuthTTL">
            <summary>
            <para>
            <para>The number of milliseconds a token is valid after being authenticated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNGraphqlApiCmdlet.OpenIDConnectConfig_ClientId">
            <summary>
            <para>
            <para>The client identifier of the Relying party at the OpenID identity provider. This identifier
            is typically obtained when the Relying party is registered with the OpenID identity
            provider. You can specify a regular expression so the AWS AppSync can validate against
            multiple client identifiers at a time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNGraphqlApiCmdlet.LogConfig_CloudWatchLogsRoleArn">
            <summary>
            <para>
            <para>The service role that AWS AppSync will assume to publish to Amazon CloudWatch logs
            in your account. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNGraphqlApiCmdlet.LogConfig_ExcludeVerboseContent">
            <summary>
            <para>
            <para>Set to TRUE to exclude sections that contain information such as headers, context,
            and evaluated mapping templates, regardless of logging level.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNGraphqlApiCmdlet.LogConfig_FieldLogLevel">
            <summary>
            <para>
            <para>The field logging level. Values can be NONE, ERROR, or ALL. </para><ul><li><para><b>NONE</b>: No field-level logs are captured.</para></li><li><para><b>ERROR</b>: Logs the following information only for the fields that are in error:</para><ul><li><para>The error section in the server response.</para></li><li><para>Field-level errors.</para></li><li><para>The generated request/response functions that got resolved for error fields.</para></li></ul></li><li><para><b>ALL</b>: The following information is logged for all fields in the query:</para><ul><li><para>Field-level tracing information.</para></li><li><para>The generated request/response functions that got resolved for each field.</para></li></ul></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNGraphqlApiCmdlet.OpenIDConnectConfig_IatTTL">
            <summary>
            <para>
            <para>The number of milliseconds a token is valid after being issued to a user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNGraphqlApiCmdlet.OpenIDConnectConfig_Issuer">
            <summary>
            <para>
            <para>The issuer for the OpenID Connect configuration. The issuer returned by discovery
            must exactly match the value of <code>iss</code> in the ID token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNGraphqlApiCmdlet.Name">
            <summary>
            <para>
            <para>A user-supplied name for the <code>GraphqlApi</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNGraphqlApiCmdlet.Tag">
            <summary>
            <para>
            <para>A <code>TagMap</code> object.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNGraphqlApiCmdlet.UserPoolConfig">
            <summary>
            <para>
            <para>The Amazon Cognito user pool configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNGraphqlApiCmdlet.XrayEnabled">
            <summary>
            <para>
            <para>A flag indicating whether to enable X-Ray tracing for the <code>GraphqlApi</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNGraphqlApiCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GraphqlApi'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.CreateGraphqlApiResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.CreateGraphqlApiResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNGraphqlApiCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNGraphqlApiCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.NewASYNResolverCmdlet">
            <summary>
            Creates a <code>Resolver</code> object.
            
             
            <para>
            A resolver converts incoming requests into a format that a data source can understand
            and converts the data source's responses into GraphQL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNResolverCmdlet.ApiId">
            <summary>
            <para>
            <para>The ID for the GraphQL API for which the resolver is being created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNResolverCmdlet.CachingConfig_CachingKey">
            <summary>
            <para>
            <para>The caching keys for a resolver that has caching enabled.</para><para>Valid values are entries from the <code>$context.identity</code> and <code>$context.arguments</code>
            maps.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNResolverCmdlet.SyncConfig_ConflictDetection">
            <summary>
            <para>
            <para>The Conflict Detection strategy to use.</para><ul><li><para><b>VERSION</b>: Detect conflicts based on object versions for this resolver.</para></li><li><para><b>NONE</b>: Do not detect conflicts when executing this resolver.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNResolverCmdlet.SyncConfig_ConflictHandler">
            <summary>
            <para>
            <para>The Conflict Resolution strategy to perform in the event of a conflict.</para><ul><li><para><b>OPTIMISTIC_CONCURRENCY</b>: Resolve conflicts by rejecting mutations when versions
            do not match the latest version at the server.</para></li><li><para><b>AUTOMERGE</b>: Resolve conflicts with the Automerge conflict resolution strategy.</para></li><li><para><b>LAMBDA</b>: Resolve conflicts with a Lambda function supplied in the LambdaConflictHandlerConfig.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNResolverCmdlet.DataSourceName">
            <summary>
            <para>
            <para>The name of the data source for which the resolver is being created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNResolverCmdlet.FieldName">
            <summary>
            <para>
            <para>The name of the field to attach the resolver to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNResolverCmdlet.PipelineConfig_Function">
            <summary>
            <para>
            <para>A list of <code>Function</code> objects.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNResolverCmdlet.Kind">
            <summary>
            <para>
            <para>The resolver type.</para><ul><li><para><b>UNIT</b>: A UNIT resolver type. A UNIT resolver is the default resolver type.
            A UNIT resolver enables you to execute a GraphQL query against a single data source.</para></li><li><para><b>PIPELINE</b>: A PIPELINE resolver type. A PIPELINE resolver enables you to execute
            a series of <code>Function</code> in a serial manner. You can use a pipeline resolver
            to execute a GraphQL query against multiple data sources.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNResolverCmdlet.LambdaConflictHandlerConfig_LambdaConflictHandlerArn">
            <summary>
            <para>
            <para>The Arn for the Lambda function to use as the Conflict Handler.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNResolverCmdlet.RequestMappingTemplate">
            <summary>
            <para>
            <para>The mapping template to be used for requests.</para><para>A resolver uses a request mapping template to convert a GraphQL expression into a
            format that a data source can understand. Mapping templates are written in Apache
            Velocity Template Language (VTL).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNResolverCmdlet.ResponseMappingTemplate">
            <summary>
            <para>
            <para>The mapping template to be used for responses from the data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNResolverCmdlet.CachingConfig_Ttl">
            <summary>
            <para>
            <para>The TTL in seconds for a resolver that has caching enabled.</para><para>Valid values are between 1 and 3600 seconds.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNResolverCmdlet.TypeName">
            <summary>
            <para>
            <para>The name of the <code>Type</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNResolverCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Resolver'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.CreateResolverResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.CreateResolverResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNResolverCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSourceName parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSourceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNResolverCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.NewASYNTypeCmdlet">
            <summary>
            Creates a <code>Type</code> object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNTypeCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNTypeCmdlet.Definition">
            <summary>
            <para>
            <para>The type definition, in GraphQL Schema Definition Language (SDL) format.</para><para>For more information, see the <a href="http://graphql.org/learn/schema/">GraphQL SDL
            documentation</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNTypeCmdlet.Format">
            <summary>
            <para>
            <para>The type format: SDL or JSON.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Type'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.CreateTypeResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.CreateTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Definition parameter.
            The -PassThru parameter is deprecated, use -Select '^Definition' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.NewASYNTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNApiCacheCmdlet">
            <summary>
            Deletes an <code>ApiCache</code> object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNApiCacheCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNApiCacheCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.DeleteApiCacheResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNApiCacheCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApiId parameter.
            The -PassThru parameter is deprecated, use -Select '^ApiId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNApiCacheCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNApiKeyCmdlet">
            <summary>
            Deletes an API key.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNApiKeyCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNApiKeyCmdlet.Id">
            <summary>
            <para>
            <para>The ID for the API key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNApiKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.DeleteApiKeyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNApiKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNApiKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNDataSourceCmdlet">
            <summary>
            Deletes a <code>DataSource</code> object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNDataSourceCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNDataSourceCmdlet.Name">
            <summary>
            <para>
            <para>The name of the data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNDataSourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.DeleteDataSourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNDataSourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNDataSourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNFunctionCmdlet">
            <summary>
            Deletes a <code>Function</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNFunctionCmdlet.ApiId">
            <summary>
            <para>
            <para>The GraphQL API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNFunctionCmdlet.FunctionId">
            <summary>
            <para>
            <para>The <code>Function</code> ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNFunctionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.DeleteFunctionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNFunctionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionId parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNFunctionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNGraphqlApiCmdlet">
            <summary>
            Deletes a <code>GraphqlApi</code> object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNGraphqlApiCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNGraphqlApiCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.DeleteGraphqlApiResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNGraphqlApiCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApiId parameter.
            The -PassThru parameter is deprecated, use -Select '^ApiId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNGraphqlApiCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNResolverCmdlet">
            <summary>
            Deletes a <code>Resolver</code> object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNResolverCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNResolverCmdlet.FieldName">
            <summary>
            <para>
            <para>The resolver field name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNResolverCmdlet.TypeName">
            <summary>
            <para>
            <para>The name of the resolver type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNResolverCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.DeleteResolverResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNResolverCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FieldName parameter.
            The -PassThru parameter is deprecated, use -Select '^FieldName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNResolverCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNResourceTagCmdlet">
            <summary>
            Untags a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The <code>GraphqlApi</code> ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>A list of <code>TagKey</code> objects.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNTypeCmdlet">
            <summary>
            Deletes a <code>Type</code> object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNTypeCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNTypeCmdlet.TypeName">
            <summary>
            <para>
            <para>The type name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.DeleteTypeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TypeName parameter.
            The -PassThru parameter is deprecated, use -Select '^TypeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.RemoveASYNTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.StartASYNSchemaCreationCmdlet">
            <summary>
            Adds a new schema to your GraphQL API.
            
             
            <para>
            This operation is asynchronous. Use to determine when it has completed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.StartASYNSchemaCreationCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.StartASYNSchemaCreationCmdlet.Definition">
            <summary>
            <para>
            <para>The schema definition, in GraphQL schema language format.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.StartASYNSchemaCreationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Status'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.StartSchemaCreationResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.StartSchemaCreationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.StartASYNSchemaCreationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApiId parameter.
            The -PassThru parameter is deprecated, use -Select '^ApiId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.StartASYNSchemaCreationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNApiCacheCmdlet">
            <summary>
            Updates the cache for the GraphQL API.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNApiCacheCmdlet.ApiCachingBehavior">
            <summary>
            <para>
            <para>Caching behavior.</para><ul><li><para><b>FULL_REQUEST_CACHING</b>: All requests are fully cached.</para></li><li><para><b>PER_RESOLVER_CACHING</b>: Individual resovlers that you specify are cached.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNApiCacheCmdlet.ApiId">
            <summary>
            <para>
            <para>The GraphQL API Id.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNApiCacheCmdlet.Ttl">
            <summary>
            <para>
            <para>TTL in seconds for cache entries.</para><para>Valid values are between 1 and 3600 seconds.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNApiCacheCmdlet.Type">
            <summary>
            <para>
            <para>The cache instance type.</para><ul><li><para><b>T2_SMALL</b>: A t2.small instance type.</para></li><li><para><b>T2_MEDIUM</b>: A t2.medium instance type.</para></li><li><para><b>R4_LARGE</b>: A r4.large instance type.</para></li><li><para><b>R4_XLARGE</b>: A r4.xlarge instance type.</para></li><li><para><b>R4_2XLARGE</b>: A r4.2xlarge instance type.</para></li><li><para><b>R4_4XLARGE</b>: A r4.4xlarge instance type.</para></li><li><para><b>R4_8XLARGE</b>: A r4.8xlarge instance type.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNApiCacheCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApiCache'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.UpdateApiCacheResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.UpdateApiCacheResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNApiCacheCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApiId parameter.
            The -PassThru parameter is deprecated, use -Select '^ApiId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNApiCacheCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNApiKeyCmdlet">
            <summary>
            Updates an API key.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNApiKeyCmdlet.ApiId">
            <summary>
            <para>
            <para>The ID for the GraphQL API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNApiKeyCmdlet.Description">
            <summary>
            <para>
            <para>A description of the purpose of the API key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNApiKeyCmdlet.Expire">
            <summary>
            <para>
            <para>The time from update time after which the API key expires. The date is represented
            as seconds since the epoch. For more information, see .</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNApiKeyCmdlet.Id">
            <summary>
            <para>
            <para>The API key ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNApiKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApiKey'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.UpdateApiKeyResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.UpdateApiKeyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNApiKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApiId parameter.
            The -PassThru parameter is deprecated, use -Select '^ApiId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNApiKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNDataSourceCmdlet">
            <summary>
            Updates a <code>DataSource</code> object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNDataSourceCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNDataSourceCmdlet.HttpConfig_AuthorizationConfig">
            <summary>
            <para>
            <para>The authorization config in case the HTTP endpoint requires authorization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNDataSourceCmdlet.Description">
            <summary>
            <para>
            <para>The new description for the data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNDataSourceCmdlet.DynamodbConfig">
            <summary>
            <para>
            <para>The new Amazon DynamoDB configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNDataSourceCmdlet.ElasticsearchConfig">
            <summary>
            <para>
            <para>The new Elasticsearch Service configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNDataSourceCmdlet.HttpConfig_Endpoint">
            <summary>
            <para>
            <para>The HTTP URL endpoint. You can either specify the domain name or IP, and port combination,
            and the URL scheme must be HTTP or HTTPS. If the port is not specified, AWS AppSync
            uses the default port 80 for the HTTP endpoint and port 443 for HTTPS endpoints.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNDataSourceCmdlet.LambdaConfig">
            <summary>
            <para>
            <para>The new AWS Lambda configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNDataSourceCmdlet.Name">
            <summary>
            <para>
            <para>The new name for the data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNDataSourceCmdlet.RelationalDatabaseConfig_RdsHttpEndpointConfig">
            <summary>
            <para>
            <para>Amazon RDS HTTP endpoint settings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNDataSourceCmdlet.RelationalDatabaseConfig_RelationalDatabaseSourceType">
            <summary>
            <para>
            <para>Source type for the relational database.</para><ul><li><para><b>RDS_HTTP_ENDPOINT</b>: The relational database source type is an Amazon RDS HTTP
            endpoint.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNDataSourceCmdlet.ServiceRoleArn">
            <summary>
            <para>
            <para>The new service role ARN for the data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNDataSourceCmdlet.Type">
            <summary>
            <para>
            <para>The new data source type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNDataSourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DataSource'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.UpdateDataSourceResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.UpdateDataSourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNDataSourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNDataSourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNFunctionCmdlet">
            <summary>
            Updates a <code>Function</code> object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNFunctionCmdlet.ApiId">
            <summary>
            <para>
            <para>The GraphQL API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNFunctionCmdlet.DataSourceName">
            <summary>
            <para>
            <para>The <code>Function</code><code>DataSource</code> name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNFunctionCmdlet.Description">
            <summary>
            <para>
            <para>The <code>Function</code> description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNFunctionCmdlet.FunctionId">
            <summary>
            <para>
            <para>The function ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNFunctionCmdlet.FunctionVersion">
            <summary>
            <para>
            <para>The <code>version</code> of the request mapping template. Currently the supported
            value is 2018-05-29. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNFunctionCmdlet.Name">
            <summary>
            <para>
            <para>The <code>Function</code> name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNFunctionCmdlet.RequestMappingTemplate">
            <summary>
            <para>
            <para>The <code>Function</code> request mapping template. Functions support only the 2018-05-29
            version of the request mapping template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNFunctionCmdlet.ResponseMappingTemplate">
            <summary>
            <para>
            <para>The <code>Function</code> request mapping template. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNFunctionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FunctionConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.UpdateFunctionResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.UpdateFunctionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNFunctionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionId parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNFunctionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNGraphqlApiCmdlet">
            <summary>
            Updates a <code>GraphqlApi</code> object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNGraphqlApiCmdlet.AdditionalAuthenticationProvider">
            <summary>
            <para>
            <para>A list of additional authentication providers for the <code>GraphqlApi</code> API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNGraphqlApiCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNGraphqlApiCmdlet.AuthenticationType">
            <summary>
            <para>
            <para>The new authentication type for the <code>GraphqlApi</code> object.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNGraphqlApiCmdlet.OpenIDConnectConfig_AuthTTL">
            <summary>
            <para>
            <para>The number of milliseconds a token is valid after being authenticated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNGraphqlApiCmdlet.OpenIDConnectConfig_ClientId">
            <summary>
            <para>
            <para>The client identifier of the Relying party at the OpenID identity provider. This identifier
            is typically obtained when the Relying party is registered with the OpenID identity
            provider. You can specify a regular expression so the AWS AppSync can validate against
            multiple client identifiers at a time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNGraphqlApiCmdlet.LogConfig_CloudWatchLogsRoleArn">
            <summary>
            <para>
            <para>The service role that AWS AppSync will assume to publish to Amazon CloudWatch logs
            in your account. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNGraphqlApiCmdlet.LogConfig_ExcludeVerboseContent">
            <summary>
            <para>
            <para>Set to TRUE to exclude sections that contain information such as headers, context,
            and evaluated mapping templates, regardless of logging level.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNGraphqlApiCmdlet.LogConfig_FieldLogLevel">
            <summary>
            <para>
            <para>The field logging level. Values can be NONE, ERROR, or ALL. </para><ul><li><para><b>NONE</b>: No field-level logs are captured.</para></li><li><para><b>ERROR</b>: Logs the following information only for the fields that are in error:</para><ul><li><para>The error section in the server response.</para></li><li><para>Field-level errors.</para></li><li><para>The generated request/response functions that got resolved for error fields.</para></li></ul></li><li><para><b>ALL</b>: The following information is logged for all fields in the query:</para><ul><li><para>Field-level tracing information.</para></li><li><para>The generated request/response functions that got resolved for each field.</para></li></ul></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNGraphqlApiCmdlet.OpenIDConnectConfig_IatTTL">
            <summary>
            <para>
            <para>The number of milliseconds a token is valid after being issued to a user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNGraphqlApiCmdlet.OpenIDConnectConfig_Issuer">
            <summary>
            <para>
            <para>The issuer for the OpenID Connect configuration. The issuer returned by discovery
            must exactly match the value of <code>iss</code> in the ID token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNGraphqlApiCmdlet.Name">
            <summary>
            <para>
            <para>The new name for the <code>GraphqlApi</code> object.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNGraphqlApiCmdlet.UserPoolConfig">
            <summary>
            <para>
            <para>The new Amazon Cognito user pool configuration for the <code>GraphqlApi</code> object.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNGraphqlApiCmdlet.XrayEnabled">
            <summary>
            <para>
            <para>A flag indicating whether to enable X-Ray tracing for the <code>GraphqlApi</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNGraphqlApiCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GraphqlApi'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.UpdateGraphqlApiResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.UpdateGraphqlApiResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNGraphqlApiCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNGraphqlApiCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNResolverCmdlet">
            <summary>
            Updates a <code>Resolver</code> object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNResolverCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNResolverCmdlet.CachingConfig_CachingKey">
            <summary>
            <para>
            <para>The caching keys for a resolver that has caching enabled.</para><para>Valid values are entries from the <code>$context.identity</code> and <code>$context.arguments</code>
            maps.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNResolverCmdlet.SyncConfig_ConflictDetection">
            <summary>
            <para>
            <para>The Conflict Detection strategy to use.</para><ul><li><para><b>VERSION</b>: Detect conflicts based on object versions for this resolver.</para></li><li><para><b>NONE</b>: Do not detect conflicts when executing this resolver.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNResolverCmdlet.SyncConfig_ConflictHandler">
            <summary>
            <para>
            <para>The Conflict Resolution strategy to perform in the event of a conflict.</para><ul><li><para><b>OPTIMISTIC_CONCURRENCY</b>: Resolve conflicts by rejecting mutations when versions
            do not match the latest version at the server.</para></li><li><para><b>AUTOMERGE</b>: Resolve conflicts with the Automerge conflict resolution strategy.</para></li><li><para><b>LAMBDA</b>: Resolve conflicts with a Lambda function supplied in the LambdaConflictHandlerConfig.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNResolverCmdlet.DataSourceName">
            <summary>
            <para>
            <para>The new data source name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNResolverCmdlet.FieldName">
            <summary>
            <para>
            <para>The new field name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNResolverCmdlet.PipelineConfig_Function">
            <summary>
            <para>
            <para>A list of <code>Function</code> objects.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNResolverCmdlet.Kind">
            <summary>
            <para>
            <para>The resolver type.</para><ul><li><para><b>UNIT</b>: A UNIT resolver type. A UNIT resolver is the default resolver type.
            A UNIT resolver enables you to execute a GraphQL query against a single data source.</para></li><li><para><b>PIPELINE</b>: A PIPELINE resolver type. A PIPELINE resolver enables you to execute
            a series of <code>Function</code> in a serial manner. You can use a pipeline resolver
            to execute a GraphQL query against multiple data sources.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNResolverCmdlet.LambdaConflictHandlerConfig_LambdaConflictHandlerArn">
            <summary>
            <para>
            <para>The Arn for the Lambda function to use as the Conflict Handler.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNResolverCmdlet.RequestMappingTemplate">
            <summary>
            <para>
            <para>The new request mapping template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNResolverCmdlet.ResponseMappingTemplate">
            <summary>
            <para>
            <para>The new response mapping template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNResolverCmdlet.CachingConfig_Ttl">
            <summary>
            <para>
            <para>The TTL in seconds for a resolver that has caching enabled.</para><para>Valid values are between 1 and 3600 seconds.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNResolverCmdlet.TypeName">
            <summary>
            <para>
            <para>The new type name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNResolverCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Resolver'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.UpdateResolverResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.UpdateResolverResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNResolverCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FieldName parameter.
            The -PassThru parameter is deprecated, use -Select '^FieldName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNResolverCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNTypeCmdlet">
            <summary>
            Updates a <code>Type</code> object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNTypeCmdlet.ApiId">
            <summary>
            <para>
            <para>The API ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNTypeCmdlet.Definition">
            <summary>
            <para>
            <para>The new definition.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNTypeCmdlet.Format">
            <summary>
            <para>
            <para>The new type format: SDL or JSON.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNTypeCmdlet.TypeName">
            <summary>
            <para>
            <para>The new type name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Type'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AppSync.Model.UpdateTypeResponse).
            Specifying the name of a property of type Amazon.AppSync.Model.UpdateTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TypeName parameter.
            The -PassThru parameter is deprecated, use -Select '^TypeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASYN.UpdateASYNTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
