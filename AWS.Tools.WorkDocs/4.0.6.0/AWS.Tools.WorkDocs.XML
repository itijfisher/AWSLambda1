<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.WorkDocs</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.AddWDResourcePermissionCmdlet">
            <summary>
            Creates a set of permissions for the specified folder or document. The resource permissions
            are overwritten if the principals already have different permissions.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.AddWDResourcePermissionCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.AddWDResourcePermissionCmdlet.NotificationOptions_EmailMessage">
            <summary>
            <para>
            <para>Text value to be included in the email body.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.AddWDResourcePermissionCmdlet.Principal">
            <summary>
            <para>
            <para>The users, groups, or organization being granted permission.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.AddWDResourcePermissionCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.AddWDResourcePermissionCmdlet.NotificationOptions_SendEmail">
            <summary>
            <para>
            <para>Boolean value to indicate an email notification should be sent to the receipients.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.AddWDResourcePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ShareResults'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.AddResourcePermissionsResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.AddResourcePermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.AddWDResourcePermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.AddWDResourcePermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.DisableWDUserCmdlet">
            <summary>
            Deactivates the specified user, which revokes the user's access to Amazon WorkDocs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.DisableWDUserCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.DisableWDUserCmdlet.UserId">
            <summary>
            <para>
            <para>The ID of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.DisableWDUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.DeactivateUserResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.DisableWDUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.DisableWDUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.EnableWDUserCmdlet">
            <summary>
            Activates the specified user. Only active users can access Amazon WorkDocs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.EnableWDUserCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.EnableWDUserCmdlet.UserId">
            <summary>
            <para>
            <para>The ID of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.EnableWDUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'User'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.ActivateUserResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.ActivateUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.EnableWDUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.EnableWDUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.GetWDActivityCmdlet">
            <summary>
            Describes the user activities in a specified time period.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDActivityCmdlet.ActivityType">
            <summary>
            <para>
            <para>Specifies which activity types to include in the response. If this field is left empty,
            all activity types are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDActivityCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDActivityCmdlet.UtcEndTime">
            <summary>
            <para>
            <para>The timestamp that determines the end time of the activities. The response includes
            the activities performed before the specified timestamp.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDActivityCmdlet.IncludeIndirectActivity">
            <summary>
            <para>
            <para>Includes indirect activities. An indirect activity results from a direct activity
            performed on a parent resource. For example, sharing a parent folder (the direct activity)
            shares all of the subfolders and documents within the parent folder (the indirect
            activity).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDActivityCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The ID of the organization. This is a mandatory parameter when using administrative
            API (SigV4) requests.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDActivityCmdlet.ResourceId">
            <summary>
            <para>
            <para>The document or folder ID for which to describe activity types.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDActivityCmdlet.UtcStartTime">
            <summary>
            <para>
            <para>The timestamp that determines the starting time of the activities. The response includes
            the activities performed after the specified timestamp.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDActivityCmdlet.UserId">
            <summary>
            <para>
            <para>The ID of the user who performed the action. The response includes activities pertaining
            to this user. This is an optional parameter and is only applicable for administrative
            API (SigV4) requests.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDActivityCmdlet.EndTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc
            results in both EndTime and EndTimeUtc being assigned, the latest assignment to either
            one of the two property is reflected in the value of both. EndTime is provided for
            backwards compatibility only and assigning a non-Utc DateTime to it results in the
            wrong timestamp being passed to the service.</para><para>The timestamp that determines the end time of the activities. The response includes
            the activities performed before the specified timestamp.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDActivityCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of items to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDActivityCmdlet.Marker">
            <summary>
            <para>
            <para>The marker for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDActivityCmdlet.StartTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or
            StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. StartTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The timestamp that determines the starting time of the activities. The response includes
            the activities performed after the specified timestamp.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDActivityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserActivities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.DescribeActivitiesResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.DescribeActivitiesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDActivityCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.GetWDCommentCmdlet">
            <summary>
            List all the comments for the specified document version.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDCommentCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDCommentCmdlet.DocumentId">
            <summary>
            <para>
            <para>The ID of the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDCommentCmdlet.VersionId">
            <summary>
            <para>
            <para>The ID of the document version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDCommentCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of items to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDCommentCmdlet.Marker">
            <summary>
            <para>
            <para>The marker for the next set of results. This marker was received from a previous call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDCommentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Comments'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.DescribeCommentsResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.DescribeCommentsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDCommentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VersionId parameter.
            The -PassThru parameter is deprecated, use -Select '^VersionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDCommentCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.GetWDCurrentUserCmdlet">
            <summary>
            Retrieves details of the current user for whom the authentication token was generated.
            This is not a valid action for SigV4 (administrative API) clients.
            
             
            <para>
            This action requires an authentication token. To get an authentication token, register
            an application with Amazon WorkDocs. For more information, see <a href="https://docs.aws.amazon.com/workdocs/latest/developerguide/wd-auth-user.html">Authentication
            and Access Control for User Applications</a> in the <i>Amazon WorkDocs Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDCurrentUserCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDCurrentUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'User'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.GetCurrentUserResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.GetCurrentUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDCurrentUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AuthenticationToken parameter.
            The -PassThru parameter is deprecated, use -Select '^AuthenticationToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentCmdlet">
            <summary>
            Retrieves details of a document.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentCmdlet.DocumentId">
            <summary>
            <para>
            <para>The ID of the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentCmdlet.IncludeCustomMetadata">
            <summary>
            <para>
            <para>Set this to <code>TRUE</code> to include custom metadata in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.GetDocumentResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.GetDocumentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DocumentId parameter.
            The -PassThru parameter is deprecated, use -Select '^DocumentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentPathCmdlet">
            <summary>
            Retrieves the path information (the hierarchy from the root folder) for the requested
            document.
            
             
            <para>
            By default, Amazon WorkDocs returns a maximum of 100 levels upwards from the requested
            document and only includes the IDs of the parent folders in the path. You can limit
            the maximum number of levels. You can also request the names of the parent folders.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentPathCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentPathCmdlet.DocumentId">
            <summary>
            <para>
            <para>The ID of the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentPathCmdlet.Field">
            <summary>
            <para>
            <para>A comma-separated list of values. Specify <code>NAME</code> to include the names of
            the parent folders.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentPathCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of levels in the hierarchy to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentPathCmdlet.Marker">
            <summary>
            <para>
            <para>This value is not supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentPathCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Path'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.GetDocumentPathResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.GetDocumentPathResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentPathCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DocumentId parameter.
            The -PassThru parameter is deprecated, use -Select '^DocumentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentVersionCmdlet">
            <summary>
            Retrieves version metadata for the specified document.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentVersionCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentVersionCmdlet.DocumentId">
            <summary>
            <para>
            <para>The ID of the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentVersionCmdlet.Field">
            <summary>
            <para>
            <para>A comma-separated list of values. Specify "SOURCE" to include a URL for the source
            document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentVersionCmdlet.IncludeCustomMetadata">
            <summary>
            <para>
            <para>Set this to TRUE to include custom metadata in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentVersionCmdlet.VersionId">
            <summary>
            <para>
            <para>The version ID of the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.GetDocumentVersionResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.GetDocumentVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DocumentId parameter.
            The -PassThru parameter is deprecated, use -Select '^DocumentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentVersionListCmdlet">
            <summary>
            Retrieves the document versions for the specified document.
            
             
            <para>
            By default, only active versions are returned.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentVersionListCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentVersionListCmdlet.DocumentId">
            <summary>
            <para>
            <para>The ID of the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentVersionListCmdlet.Field">
            <summary>
            <para>
            <para>Specify "SOURCE" to include initialized versions and a URL for the source document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentVersionListCmdlet.Include">
            <summary>
            <para>
            <para>A comma-separated list of values. Specify "INITIALIZED" to include incomplete versions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentVersionListCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of versions to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentVersionListCmdlet.Marker">
            <summary>
            <para>
            <para>The marker for the next set of results. (You received this marker from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DocumentVersions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.DescribeDocumentVersionsResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.DescribeDocumentVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DocumentId parameter.
            The -PassThru parameter is deprecated, use -Select '^DocumentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDDocumentVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.GetWDFolderCmdlet">
            <summary>
            Retrieves the metadata of the specified folder.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderCmdlet.FolderId">
            <summary>
            <para>
            <para>The ID of the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderCmdlet.IncludeCustomMetadata">
            <summary>
            <para>
            <para>Set to TRUE to include custom metadata in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.GetFolderResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.GetFolderResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FolderId parameter.
            The -PassThru parameter is deprecated, use -Select '^FolderId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.GetWDFolderContentCmdlet">
            <summary>
            Describes the contents of the specified folder, including its documents and subfolders.
            
             
            <para>
            By default, Amazon WorkDocs returns the first 100 active document and folder metadata
            items. If there are more results, the response includes a marker that you can use
            to request the next set of results. You can also request initialized documents.
            </para><br/><br/>In the AWS.Tools.WorkDocs module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderContentCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderContentCmdlet.FolderId">
            <summary>
            <para>
            <para>The ID of the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderContentCmdlet.Include">
            <summary>
            <para>
            <para>The contents to include. Specify "INITIALIZED" to include initialized documents.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderContentCmdlet.Order">
            <summary>
            <para>
            <para>The order for the contents of the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderContentCmdlet.Sort">
            <summary>
            <para>
            <para>The sorting criteria.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderContentCmdlet.Type">
            <summary>
            <para>
            <para>The type of items.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderContentCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderContentCmdlet.Marker">
            <summary>
            <para>
            <para>The marker for the next set of results. This marker was received from a previous call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.WorkDocs module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderContentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.DescribeFolderContentsResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.DescribeFolderContentsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderContentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FolderId parameter.
            The -PassThru parameter is deprecated, use -Select '^FolderId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderContentCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.GetWDFolderPathCmdlet">
            <summary>
            Retrieves the path information (the hierarchy from the root folder) for the specified
            folder.
            
             
            <para>
            By default, Amazon WorkDocs returns a maximum of 100 levels upwards from the requested
            folder and only includes the IDs of the parent folders in the path. You can limit
            the maximum number of levels. You can also request the parent folder names.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderPathCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderPathCmdlet.Field">
            <summary>
            <para>
            <para>A comma-separated list of values. Specify "NAME" to include the names of the parent
            folders.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderPathCmdlet.FolderId">
            <summary>
            <para>
            <para>The ID of the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderPathCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of levels in the hierarchy to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderPathCmdlet.Marker">
            <summary>
            <para>
            <para>This value is not supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderPathCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Path'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.GetFolderPathResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.GetFolderPathResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDFolderPathCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FolderId parameter.
            The -PassThru parameter is deprecated, use -Select '^FolderId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.GetWDGroupCmdlet">
            <summary>
            Describes the groups specified by the query. Groups are defined by the underlying
            Active Directory.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDGroupCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDGroupCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The ID of the organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDGroupCmdlet.SearchQuery">
            <summary>
            <para>
            <para>A query to describe groups by group name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDGroupCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDGroupCmdlet.Marker">
            <summary>
            <para>
            <para>The marker for the next set of results. (You received this marker from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Groups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.DescribeGroupsResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.DescribeGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.GetWDNotificationSubscriptionListCmdlet">
            <summary>
            Lists the specified notification subscriptions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDNotificationSubscriptionListCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The ID of the organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDNotificationSubscriptionListCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDNotificationSubscriptionListCmdlet.Marker">
            <summary>
            <para>
            <para>The marker for the next set of results. (You received this marker from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDNotificationSubscriptionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Subscriptions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.DescribeNotificationSubscriptionsResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.DescribeNotificationSubscriptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDNotificationSubscriptionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDNotificationSubscriptionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.GetWDResourceCmdlet">
            <summary>
            Retrieves a collection of resources, including folders and documents. The only <code>CollectionType</code>
            supported is <code>SHARED_WITH_ME</code>.<br/><br/>In the AWS.Tools.WorkDocs module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDResourceCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>The Amazon WorkDocs authentication token. Not required when using AWS administrator
            credentials to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDResourceCmdlet.CollectionType">
            <summary>
            <para>
            <para>The collection type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDResourceCmdlet.UserId">
            <summary>
            <para>
            <para>The user ID for the resource collection. This is a required field for accessing the
            API operation using IAM credentials.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDResourceCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of resources to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDResourceCmdlet.Marker">
            <summary>
            <para>
            <para>The marker for the next set of results. This marker was received from a previous call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.WorkDocs module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.GetResourcesResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.GetResourcesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CollectionType parameter.
            The -PassThru parameter is deprecated, use -Select '^CollectionType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDResourceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.GetWDResourcePermissionListCmdlet">
            <summary>
            Describes the permissions of a specified resource.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDResourcePermissionListCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDResourcePermissionListCmdlet.PrincipalId">
            <summary>
            <para>
            <para>The ID of the principal to filter permissions by.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDResourcePermissionListCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDResourcePermissionListCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDResourcePermissionListCmdlet.Marker">
            <summary>
            <para>
            <para>The marker for the next set of results. (You received this marker from a previous
            call)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDResourcePermissionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Principals'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.DescribeResourcePermissionsResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.DescribeResourcePermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDResourcePermissionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDResourcePermissionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.GetWDRootFolderCmdlet">
            <summary>
            Describes the current user's special folders; the <code>RootFolder</code> and the
            <code>RecycleBin</code>. <code>RootFolder</code> is the root of user's files and folders
            and <code>RecycleBin</code> is the root of recycled items. This is not a valid action
            for SigV4 (administrative API) clients.
            
             
            <para>
            This action requires an authentication token. To get an authentication token, register
            an application with Amazon WorkDocs. For more information, see <a href="https://docs.aws.amazon.com/workdocs/latest/developerguide/wd-auth-user.html">Authentication
            and Access Control for User Applications</a> in the <i>Amazon WorkDocs Developer Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDRootFolderCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDRootFolderCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of items to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDRootFolderCmdlet.Marker">
            <summary>
            <para>
            <para>The marker for the next set of results. (You received this marker from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDRootFolderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Folders'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.DescribeRootFoldersResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.DescribeRootFoldersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDRootFolderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AuthenticationToken parameter.
            The -PassThru parameter is deprecated, use -Select '^AuthenticationToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDRootFolderCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.GetWDUserListCmdlet">
            <summary>
            Describes the specified users. You can describe all users or filter the results (for
            example, by status or organization).
            
             
            <para>
            By default, Amazon WorkDocs returns the first 24 active or pending users. If there
            are more results, the response includes a marker that you can use to request the next
            set of results.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDUserListCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDUserListCmdlet.Field">
            <summary>
            <para>
            <para>A comma-separated list of values. Specify "STORAGE_METADATA" to include the user storage
            quota and utilization information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDUserListCmdlet.Include">
            <summary>
            <para>
            <para>The state of the users. Specify "ALL" to include inactive users.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDUserListCmdlet.Order">
            <summary>
            <para>
            <para>The order for the results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDUserListCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The ID of the organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDUserListCmdlet.Query">
            <summary>
            <para>
            <para>A query to filter users by user name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDUserListCmdlet.Sort">
            <summary>
            <para>
            <para>The sorting criteria.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDUserListCmdlet.UserId">
            <summary>
            <para>
            <para>The IDs of the users.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDUserListCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of items to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDUserListCmdlet.Marker">
            <summary>
            <para>
            <para>The marker for the next set of results. (You received this marker from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDUserListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Users'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.DescribeUsersResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.DescribeUsersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDUserListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.GetWDUserListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.NewWDCommentCmdlet">
            <summary>
            Adds a new comment to the specified document version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDCommentCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDCommentCmdlet.DocumentId">
            <summary>
            <para>
            <para>The ID of the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDCommentCmdlet.NotifyCollaborator">
            <summary>
            <para>
            <para>Set this parameter to TRUE to send an email out to the document collaborators after
            the comment is created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDCommentCmdlet.ParentId">
            <summary>
            <para>
            <para>The ID of the parent comment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDCommentCmdlet.Text">
            <summary>
            <para>
            <para>The text of the comment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDCommentCmdlet.ThreadId">
            <summary>
            <para>
            <para>The ID of the root comment in the thread.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDCommentCmdlet.VersionId">
            <summary>
            <para>
            <para>The ID of the document version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDCommentCmdlet.Visibility">
            <summary>
            <para>
            <para>The visibility of the comment. Options are either PRIVATE, where the comment is visible
            only to the comment author and document owner and co-owners, or PUBLIC, where the
            comment is visible to document owners, co-owners, and contributors.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDCommentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Comment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.CreateCommentResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.CreateCommentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDCommentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Text parameter.
            The -PassThru parameter is deprecated, use -Select '^Text' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDCommentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.NewWDCustomMetadataCmdlet">
            <summary>
            Adds one or more custom properties to the specified resource (a folder, document,
            or version).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDCustomMetadataCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDCustomMetadataCmdlet.CustomMetadata">
            <summary>
            <para>
            <para>Custom metadata in the form of name-value pairs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDCustomMetadataCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDCustomMetadataCmdlet.VersionId">
            <summary>
            <para>
            <para>The ID of the version, if the custom metadata is being added to a document version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDCustomMetadataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.CreateCustomMetadataResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDCustomMetadataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDCustomMetadataCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.NewWDFolderCmdlet">
            <summary>
            Creates a folder with the specified name and parent folder.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDFolderCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDFolderCmdlet.Name">
            <summary>
            <para>
            <para>The name of the new folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDFolderCmdlet.ParentFolderId">
            <summary>
            <para>
            <para>The ID of the parent folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDFolderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Metadata'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.CreateFolderResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.CreateFolderResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDFolderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ParentFolderId parameter.
            The -PassThru parameter is deprecated, use -Select '^ParentFolderId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDFolderCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.NewWDLabelCmdlet">
            <summary>
            Adds the specified list of labels to the given resource (a document or folder)
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDLabelCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDLabelCmdlet.Label">
            <summary>
            <para>
            <para>List of labels to add to the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDLabelCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDLabelCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.CreateLabelsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDLabelCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDLabelCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.NewWDNotificationSubscriptionCmdlet">
            <summary>
            Configure Amazon WorkDocs to use Amazon SNS notifications. The endpoint receives a
            confirmation message, and must confirm the subscription.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/workdocs/latest/developerguide/subscribe-notifications.html">Subscribe
            to Notifications</a> in the <i>Amazon WorkDocs Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDNotificationSubscriptionCmdlet.Endpoint">
            <summary>
            <para>
            <para>The endpoint to receive the notifications. If the protocol is HTTPS, the endpoint
            is a URL that begins with <code>https</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDNotificationSubscriptionCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The ID of the organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDNotificationSubscriptionCmdlet.Protocol">
            <summary>
            <para>
            <para>The protocol to use. The supported value is https, which delivers JSON-encoded messages
            using HTTPS POST.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDNotificationSubscriptionCmdlet.SubscriptionType">
            <summary>
            <para>
            <para>The notification type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDNotificationSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Subscription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.CreateNotificationSubscriptionResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.CreateNotificationSubscriptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDNotificationSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDNotificationSubscriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.NewWDUserCmdlet">
            <summary>
            Creates a user in a Simple AD or Microsoft AD directory. The status of a newly created
            user is "ACTIVE". New users can access Amazon WorkDocs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDUserCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDUserCmdlet.EmailAddress">
            <summary>
            <para>
            <para>The email address of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDUserCmdlet.GivenName">
            <summary>
            <para>
            <para>The given name of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDUserCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The ID of the organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDUserCmdlet.Password">
            <summary>
            <para>
            <para>The password of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDUserCmdlet.StorageRule_StorageAllocatedInByte">
            <summary>
            <para>
            <para>The amount of storage allocated, in bytes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDUserCmdlet.StorageRule_StorageType">
            <summary>
            <para>
            <para>The type of storage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDUserCmdlet.Surname">
            <summary>
            <para>
            <para>The surname of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDUserCmdlet.TimeZoneId">
            <summary>
            <para>
            <para>The time zone ID of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDUserCmdlet.Username">
            <summary>
            <para>
            <para>The login name of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'User'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.CreateUserResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.CreateUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.NewWDUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.RemoveWDCommentCmdlet">
            <summary>
            Deletes the specified comment from the document version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDCommentCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDCommentCmdlet.CommentId">
            <summary>
            <para>
            <para>The ID of the comment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDCommentCmdlet.DocumentId">
            <summary>
            <para>
            <para>The ID of the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDCommentCmdlet.VersionId">
            <summary>
            <para>
            <para>The ID of the document version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDCommentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.DeleteCommentResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDCommentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CommentId parameter.
            The -PassThru parameter is deprecated, use -Select '^CommentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDCommentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.RemoveWDCustomMetadataCmdlet">
            <summary>
            Deletes custom metadata from the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDCustomMetadataCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDCustomMetadataCmdlet.DeleteAll">
            <summary>
            <para>
            <para>Flag to indicate removal of all custom metadata properties from the specified resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDCustomMetadataCmdlet.Key">
            <summary>
            <para>
            <para>List of properties to remove.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDCustomMetadataCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of the resource, either a document or folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDCustomMetadataCmdlet.VersionId">
            <summary>
            <para>
            <para>The ID of the version, if the custom metadata is being deleted from a document version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDCustomMetadataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.DeleteCustomMetadataResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDCustomMetadataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDCustomMetadataCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.RemoveWDDocumentCmdlet">
            <summary>
            Permanently deletes the specified document and its associated metadata.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDDocumentCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDDocumentCmdlet.DocumentId">
            <summary>
            <para>
            <para>The ID of the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDDocumentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.DeleteDocumentResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDDocumentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DocumentId parameter.
            The -PassThru parameter is deprecated, use -Select '^DocumentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDDocumentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.RemoveWDFolderCmdlet">
            <summary>
            Permanently deletes the specified folder and its contents.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDFolderCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDFolderCmdlet.FolderId">
            <summary>
            <para>
            <para>The ID of the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDFolderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.DeleteFolderResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDFolderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FolderId parameter.
            The -PassThru parameter is deprecated, use -Select '^FolderId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDFolderCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.RemoveWDFolderContentCmdlet">
            <summary>
            Deletes the contents of the specified folder.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDFolderContentCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDFolderContentCmdlet.FolderId">
            <summary>
            <para>
            <para>The ID of the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDFolderContentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.DeleteFolderContentsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDFolderContentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FolderId parameter.
            The -PassThru parameter is deprecated, use -Select '^FolderId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDFolderContentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.RemoveWDLabelCmdlet">
            <summary>
            Deletes the specified list of labels from a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDLabelCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDLabelCmdlet.DeleteAll">
            <summary>
            <para>
            <para>Flag to request removal of all labels from the specified resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDLabelCmdlet.Label">
            <summary>
            <para>
            <para>List of labels to delete from the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDLabelCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDLabelCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.DeleteLabelsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDLabelCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Label parameter.
            The -PassThru parameter is deprecated, use -Select '^Label' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDLabelCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.RemoveWDNotificationSubscriptionCmdlet">
            <summary>
            Deletes the specified subscription from the specified organization.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDNotificationSubscriptionCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The ID of the organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDNotificationSubscriptionCmdlet.SubscriptionId">
            <summary>
            <para>
            <para>The ID of the subscription.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDNotificationSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.DeleteNotificationSubscriptionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDNotificationSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubscriptionId parameter.
            The -PassThru parameter is deprecated, use -Select '^SubscriptionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDNotificationSubscriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.RemoveWDResourcePermissionCmdlet">
            <summary>
            Removes the permission for the specified principal from the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDResourcePermissionCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDResourcePermissionCmdlet.PrincipalId">
            <summary>
            <para>
            <para>The principal ID of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDResourcePermissionCmdlet.PrincipalType">
            <summary>
            <para>
            <para>The principal type of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDResourcePermissionCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDResourcePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.RemoveResourcePermissionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDResourcePermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDResourcePermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.RemoveWDUserCmdlet">
            <summary>
            Deletes the specified user from a Simple AD or Microsoft AD directory.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDUserCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Do not set this field when using administrative
            API actions, as in accessing the API using AWS credentials.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDUserCmdlet.UserId">
            <summary>
            <para>
            <para>The ID of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.DeleteUserResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.RemoveWDUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.StartWDDocumentVersionUploadCmdlet">
            <summary>
            Creates a new document object and version object.
            
             
            <para>
            The client specifies the parent folder ID and name of the document to upload. The
            ID is optionally specified when creating a new version of an existing document. This
            is the first step to upload a document. Next, upload the document to the URL returned
            from the call, and then call <a>UpdateDocumentVersion</a>.
            </para><para>
            To cancel the document upload, call <a>AbortDocumentVersionUpload</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.StartWDDocumentVersionUploadCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.StartWDDocumentVersionUploadCmdlet.ContentCreatedTimestamp">
            <summary>
            <para>
            <para>The timestamp when the content of the document was originally created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.StartWDDocumentVersionUploadCmdlet.ContentModifiedTimestamp">
            <summary>
            <para>
            <para>The timestamp when the content of the document was modified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.StartWDDocumentVersionUploadCmdlet.ContentType">
            <summary>
            <para>
            <para>The content type of the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.StartWDDocumentVersionUploadCmdlet.DocumentSizeInByte">
            <summary>
            <para>
            <para>The size of the document, in bytes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.StartWDDocumentVersionUploadCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.StartWDDocumentVersionUploadCmdlet.Name">
            <summary>
            <para>
            <para>The name of the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.StartWDDocumentVersionUploadCmdlet.ParentFolderId">
            <summary>
            <para>
            <para>The ID of the parent folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.StartWDDocumentVersionUploadCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.InitiateDocumentVersionUploadResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.InitiateDocumentVersionUploadResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.StartWDDocumentVersionUploadCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.StartWDDocumentVersionUploadCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.StopWDDocumentVersionUploadCmdlet">
            <summary>
            Aborts the upload of the specified document version that was previously initiated
            by <a>InitiateDocumentVersionUpload</a>. The client should make this call only when
            it no longer intends to upload the document version, or fails to do so.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.StopWDDocumentVersionUploadCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.StopWDDocumentVersionUploadCmdlet.DocumentId">
            <summary>
            <para>
            <para>The ID of the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.StopWDDocumentVersionUploadCmdlet.VersionId">
            <summary>
            <para>
            <para>The ID of the version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.StopWDDocumentVersionUploadCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.AbortDocumentVersionUploadResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.StopWDDocumentVersionUploadCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DocumentId parameter.
            The -PassThru parameter is deprecated, use -Select '^DocumentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.StopWDDocumentVersionUploadCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.UpdateWDDocumentCmdlet">
            <summary>
            Updates the specified attributes of a document. The user must have access to both
            the document and its parent folder, if applicable.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDDocumentCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDDocumentCmdlet.DocumentId">
            <summary>
            <para>
            <para>The ID of the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDDocumentCmdlet.Name">
            <summary>
            <para>
            <para>The name of the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDDocumentCmdlet.ParentFolderId">
            <summary>
            <para>
            <para>The ID of the parent folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDDocumentCmdlet.ResourceState">
            <summary>
            <para>
            <para>The resource state of the document. Only ACTIVE and RECYCLED are supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDDocumentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.UpdateDocumentResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDDocumentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DocumentId parameter.
            The -PassThru parameter is deprecated, use -Select '^DocumentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDDocumentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.UpdateWDDocumentVersionCmdlet">
            <summary>
            Changes the status of the document version to ACTIVE. 
            
             
            <para>
            Amazon WorkDocs also sets its document container to ACTIVE. This is the last step
            in a document upload, after the client uploads the document to an S3-presigned URL
            returned by <a>InitiateDocumentVersionUpload</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDDocumentVersionCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDDocumentVersionCmdlet.DocumentId">
            <summary>
            <para>
            <para>The ID of the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDDocumentVersionCmdlet.VersionId">
            <summary>
            <para>
            <para>The version ID of the document.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDDocumentVersionCmdlet.VersionStatus">
            <summary>
            <para>
            <para>The status of the version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDDocumentVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.UpdateDocumentVersionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDDocumentVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DocumentId parameter.
            The -PassThru parameter is deprecated, use -Select '^DocumentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDDocumentVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.UpdateWDFolderCmdlet">
            <summary>
            Updates the specified attributes of the specified folder. The user must have access
            to both the folder and its parent folder, if applicable.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDFolderCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDFolderCmdlet.FolderId">
            <summary>
            <para>
            <para>The ID of the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDFolderCmdlet.Name">
            <summary>
            <para>
            <para>The name of the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDFolderCmdlet.ParentFolderId">
            <summary>
            <para>
            <para>The ID of the parent folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDFolderCmdlet.ResourceState">
            <summary>
            <para>
            <para>The resource state of the folder. Only ACTIVE and RECYCLED are accepted values from
            the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDFolderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.UpdateFolderResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDFolderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FolderId parameter.
            The -PassThru parameter is deprecated, use -Select '^FolderId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDFolderCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WD.UpdateWDUserCmdlet">
            <summary>
            Updates the specified attributes of the specified user, and grants or revokes administrative
            privileges to the Amazon WorkDocs site.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDUserCmdlet.AuthenticationToken">
            <summary>
            <para>
            <para>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials
            to access the API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDUserCmdlet.GivenName">
            <summary>
            <para>
            <para>The given name of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDUserCmdlet.GrantPoweruserPrivilege">
            <summary>
            <para>
            <para>Boolean value to determine whether the user is granted Poweruser privileges.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDUserCmdlet.Locale">
            <summary>
            <para>
            <para>The locale of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDUserCmdlet.StorageRule_StorageAllocatedInByte">
            <summary>
            <para>
            <para>The amount of storage allocated, in bytes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDUserCmdlet.StorageRule_StorageType">
            <summary>
            <para>
            <para>The type of storage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDUserCmdlet.Surname">
            <summary>
            <para>
            <para>The surname of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDUserCmdlet.TimeZoneId">
            <summary>
            <para>
            <para>The time zone ID of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDUserCmdlet.Type">
            <summary>
            <para>
            <para>The type of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDUserCmdlet.UserId">
            <summary>
            <para>
            <para>The ID of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'User'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkDocs.Model.UpdateUserResponse).
            Specifying the name of a property of type Amazon.WorkDocs.Model.UpdateUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WD.UpdateWDUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
