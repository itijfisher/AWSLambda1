<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.Lightsail</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.AddLSAlarmCmdlet">
            <summary>
            Creates or updates an alarm, and associates it with the specified metric.
            
             
            <para>
            An alarm is used to monitor a single metric for one of your resources. When a metric
            condition is met, the alarm can notify you by email, SMS text message, and a banner
            displayed on the Amazon Lightsail console. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms">Alarms
            in Amazon Lightsail</a>.
            </para><para>
            When this action creates an alarm, the alarm state is immediately set to <code>INSUFFICIENT_DATA</code>.
            The alarm is then evaluated and its state is set appropriately. Any actions associated
            with the new state are then executed.
            </para><para>
            When you update an existing alarm, its state is left unchanged, but the update completely
            overwrites the previous configuration of the alarm. The alarm is then evaluated with
            the updated configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSAlarmCmdlet.AlarmName">
            <summary>
            <para>
            <para>The name for the alarm. Specify the name of an existing alarm to update, and overwrite
            the previous configuration of the alarm.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSAlarmCmdlet.ComparisonOperator">
            <summary>
            <para>
            <para>The arithmetic operation to use when comparing the specified statistic to the threshold.
            The specified statistic value is used as the first operand.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSAlarmCmdlet.ContactProtocol">
            <summary>
            <para>
            <para>The contact protocols to use for the alarm, such as <code>Email</code>, <code>SMS</code>
            (text messaging), or both.</para><para>A notification is sent via the specified contact protocol if notifications are enabled
            for the alarm, and when the alarm is triggered.</para><para>A notification is not sent if a contact protocol is not specified, if the specified
            contact protocol is not configured in the AWS Region, or if notifications are not
            enabled for the alarm using the <code>notificationEnabled</code> paramater.</para><para>Use the <code>CreateContactMethod</code> action to configure a contact protocol in
            an AWS Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSAlarmCmdlet.DatapointsToAlarm">
            <summary>
            <para>
            <para>The number of data points that must be not within the specified threshold to trigger
            the alarm. If you are setting an "M out of N" alarm, this value (<code>datapointsToAlarm</code>)
            is the M.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSAlarmCmdlet.EvaluationPeriod">
            <summary>
            <para>
            <para>The number of most recent periods over which data is compared to the specified threshold.
            If you are setting an "M out of N" alarm, this value (<code>evaluationPeriods</code>)
            is the N.</para><para>If you are setting an alarm that requires that a number of consecutive data points
            be breaching to trigger the alarm, this value specifies the rolling period of time
            in which data points are evaluated.</para><para>Each evaluation period is five minutes long. For example, specify an evaluation period
            of 24 to evaluate a metric over a rolling period of two hours.</para><para>You can specify a minimum valuation period of 1 (5 minutes), and a maximum evaluation
            period of 288 (24 hours).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSAlarmCmdlet.MetricName">
            <summary>
            <para>
            <para>The name of the metric to associate with the alarm.</para><para>You can configure up to two alarms per metric.</para><para>The following metrics are available for each resource type:</para><ul><li><para><b>Instances</b>: <code>BurstCapacityPercentage</code>, <code>BurstCapacityTime</code>,
            <code>CPUUtilization</code>, <code>NetworkIn</code>, <code>NetworkOut</code>, <code>StatusCheckFailed</code>,
            <code>StatusCheckFailed_Instance</code>, and <code>StatusCheckFailed_System</code>.</para></li><li><para><b>Load balancers</b>: <code>ClientTLSNegotiationErrorCount</code>, <code>HealthyHostCount</code>,
            <code>UnhealthyHostCount</code>, <code>HTTPCode_LB_4XX_Count</code>, <code>HTTPCode_LB_5XX_Count</code>,
            <code>HTTPCode_Instance_2XX_Count</code>, <code>HTTPCode_Instance_3XX_Count</code>,
            <code>HTTPCode_Instance_4XX_Count</code>, <code>HTTPCode_Instance_5XX_Count</code>,
            <code>InstanceResponseTime</code>, <code>RejectedConnectionCount</code>, and <code>RequestCount</code>.</para></li><li><para><b>Relational databases</b>: <code>CPUUtilization</code>, <code>DatabaseConnections</code>,
            <code>DiskQueueDepth</code>, <code>FreeStorageSpace</code>, <code>NetworkReceiveThroughput</code>,
            and <code>NetworkTransmitThroughput</code>.</para></li></ul><para>For more information about these metrics, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-resource-health-metrics#available-metrics">Metrics
            available in Lightsail</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSAlarmCmdlet.MonitoredResourceName">
            <summary>
            <para>
            <para>The name of the Lightsail resource that will be monitored.</para><para>Instances, load balancers, and relational databases are the only Lightsail resources
            that can currently be monitored by alarms.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSAlarmCmdlet.NotificationEnabled">
            <summary>
            <para>
            <para>Indicates whether the alarm is enabled.</para><para>Notifications are enabled by default if you don't specify this parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSAlarmCmdlet.NotificationTrigger">
            <summary>
            <para>
            <para>The alarm states that trigger a notification.</para><para>An alarm has the following possible states:</para><ul><li><para><code>ALARM</code> - The metric is outside of the defined threshold.</para></li><li><para><code>INSUFFICIENT_DATA</code> - The alarm has just started, the metric is not available,
            or not enough data is available for the metric to determine the alarm state.</para></li><li><para><code>OK</code> - The metric is within the defined threshold.</para></li></ul><para>When you specify a notification trigger, the <code>ALARM</code> state must be specified.
            The <code>INSUFFICIENT_DATA</code> and <code>OK</code> states can be specified in
            addition to the <code>ALARM</code> state.</para><ul><li><para>If you specify <code>OK</code> as an alarm trigger, a notification is sent when the
            alarm switches from an <code>ALARM</code> or <code>INSUFFICIENT_DATA</code> alarm
            state to an <code>OK</code> state. This can be thought of as an <i>all clear</i> alarm
            notification.</para></li><li><para>If you specify <code>INSUFFICIENT_DATA</code> as the alarm trigger, a notification
            is sent when the alarm switches from an <code>OK</code> or <code>ALARM</code> alarm
            state to an <code>INSUFFICIENT_DATA</code> state.</para></li></ul><para>The notification trigger defaults to <code>ALARM</code> if you don't specify this
            parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSAlarmCmdlet.Threshold">
            <summary>
            <para>
            <para>The value against which the specified statistic is compared.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSAlarmCmdlet.TreatMissingData">
            <summary>
            <para>
            <para>Sets how this alarm will handle missing data points.</para><para>An alarm can treat missing data in the following ways:</para><ul><li><para><code>breaching</code> - Assume the missing data is not within the threshold. Missing
            data counts towards the number of times the metric is not within the threshold.</para></li><li><para><code>notBreaching</code> - Assume the missing data is within the threshold. Missing
            data does not count towards the number of times the metric is not within the threshold.</para></li><li><para><code>ignore</code> - Ignore the missing data. Maintains the current alarm state.</para></li><li><para><code>missing</code> - Missing data is treated as missing.</para></li></ul><para>If <code>treatMissingData</code> is not specified, the default behavior of <code>missing</code>
            is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSAlarmCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.PutAlarmResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.PutAlarmResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSAlarmCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AlarmName parameter.
            The -PassThru parameter is deprecated, use -Select '^AlarmName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSAlarmCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.AddLSDiskCmdlet">
            <summary>
            Attaches a block storage disk to a running or stopped Lightsail instance and exposes
            it to the instance with the specified disk name.
            
             
            <para>
            The <code>attach disk</code> operation supports tag-based access control via resource
            tags applied to the resource identified by <code>disk name</code>. For more information,
            see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSDiskCmdlet.DiskName">
            <summary>
            <para>
            <para>The unique Lightsail disk name (e.g., <code>my-disk</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSDiskCmdlet.DiskPath">
            <summary>
            <para>
            <para>The disk path to expose to the instance (e.g., <code>/dev/xvdf</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSDiskCmdlet.InstanceName">
            <summary>
            <para>
            <para>The name of the Lightsail instance where you want to utilize the storage disk.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSDiskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.AttachDiskResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.AttachDiskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSDiskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSDiskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.AddLSInstancesToLoadBalancerCmdlet">
            <summary>
            Attaches one or more Lightsail instances to a load balancer.
            
             
            <para>
            After some time, the instances are attached to the load balancer and the health check
            status is available.
            </para><para>
            The <code>attach instances to load balancer</code> operation supports tag-based access
            control via resource tags applied to the resource identified by <code>load balancer
            name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSInstancesToLoadBalancerCmdlet.InstanceName">
            <summary>
            <para>
            <para>An array of strings representing the instance name(s) you want to attach to your load
            balancer.</para><para>An instance must be <code>running</code> before you can attach it to your load balancer.</para><para>There are no additional limits on the number of instances you can attach to your load
            balancer, aside from the limit of Lightsail instances you can create in your account
            (20).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSInstancesToLoadBalancerCmdlet.LoadBalancerName">
            <summary>
            <para>
            <para>The name of the load balancer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSInstancesToLoadBalancerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.AttachInstancesToLoadBalancerResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.AttachInstancesToLoadBalancerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSInstancesToLoadBalancerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LoadBalancerName parameter.
            The -PassThru parameter is deprecated, use -Select '^LoadBalancerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSInstancesToLoadBalancerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.AddLSLoadBalancerTlsCertificateCmdlet">
            <summary>
            Attaches a Transport Layer Security (TLS) certificate to your load balancer. TLS is
            just an updated, more secure version of Secure Socket Layer (SSL).
            
             
            <para>
            Once you create and validate your certificate, you can attach it to your load balancer.
            You can also use this API to rotate the certificates on your account. Use the <code>AttachLoadBalancerTlsCertificate</code>
            action with the non-attached certificate, and it will replace the existing one and
            become the attached certificate.
            </para><para>
            The <code>AttachLoadBalancerTlsCertificate</code> operation supports tag-based access
            control via resource tags applied to the resource identified by <code>load balancer
            name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSLoadBalancerTlsCertificateCmdlet.CertificateName">
            <summary>
            <para>
            <para>The name of your SSL/TLS certificate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSLoadBalancerTlsCertificateCmdlet.LoadBalancerName">
            <summary>
            <para>
            <para>The name of the load balancer to which you want to associate the SSL/TLS certificate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSLoadBalancerTlsCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.AttachLoadBalancerTlsCertificateResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.AttachLoadBalancerTlsCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSLoadBalancerTlsCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateName parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSLoadBalancerTlsCertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.AddLSPeerVpcCmdlet">
            <summary>
            Tries to peer the Lightsail VPC with the user's default VPC.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSPeerVpcCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.PeerVpcResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.PeerVpcResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSPeerVpcCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.AddLSResourceTagCmdlet">
            <summary>
            Adds one or more tags to the specified Amazon Lightsail resource. Each resource can
            have a maximum of 50 tags. Each tag consists of a key and an optional value. Tag keys
            must be unique per resource. For more information about tags, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-tags">Lightsail
            Dev Guide</a>.
            
             
            <para>
            The <code>tag resource</code> operation supports tag-based access control via request
            tags and resource tags applied to the resource identified by <code>resource name</code>.
            For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource to which you want to add a tag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSResourceTagCmdlet.ResourceName">
            <summary>
            <para>
            <para>The name of the resource to which you are adding tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tag key and optional value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.TagResourceResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.TagResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceName parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.AddLSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.CloseLSInstancePublicPortCmdlet">
            <summary>
            Closes ports for a specific Amazon Lightsail instance.
            
             
            <para>
            The <code>CloseInstancePublicPorts</code> action supports tag-based access control
            via resource tags applied to the resource identified by <code>instanceName</code>.
            For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.CloseLSInstancePublicPortCmdlet.PortInfo_CidrListAlias">
            <summary>
            <para>
            <para>An alias that defines access for a preconfigured range of IP addresses.</para><para>The only alias currently supported is <code>lightsail-connect</code>, which allows
            IP addresses of the browser-based RDP/SSH client in the Lightsail console to connect
            to your instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.CloseLSInstancePublicPortCmdlet.PortInfo_Cidr">
            <summary>
            <para>
            <para>The IP address, or range of IP addresses in CIDR notation, that are allowed to connect
            to an instance through the ports, and the protocol. Lightsail supports IPv4 addresses.</para><para>Examples:</para><ul><li><para>To allow the IP address <code>192.0.2.44</code>, specify <code>192.0.2.44</code> or
            <code>192.0.2.44/32</code>. </para></li><li><para>To allow the IP addresses <code>192.0.2.0</code> to <code>192.0.2.255</code>, specify
            <code>192.0.2.0/24</code>.</para></li></ul><para>For more information about CIDR block notation, see <a href="https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation">Classless
            Inter-Domain Routing</a> on <i>Wikipedia</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.CloseLSInstancePublicPortCmdlet.PortInfo_FromPort">
            <summary>
            <para>
            <para>The first port in a range of open ports on an instance.</para><para>Allowed ports:</para><ul><li><para>TCP and UDP - <code>0</code> to <code>65535</code></para></li><li><para>ICMP - The ICMP type. For example, specify <code>8</code> as the <code>fromPort</code>
            (ICMP type), and <code>-1</code> as the <code>toPort</code> (ICMP code), to enable
            ICMP Ping. For more information, see <a href="https://en.wikipedia.org/wiki/Internet_Control_Message_Protocol#Control_messages">Control
            Messages</a> on <i>Wikipedia</i>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.CloseLSInstancePublicPortCmdlet.InstanceName">
            <summary>
            <para>
            <para>The name of the instance for which to close ports.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.CloseLSInstancePublicPortCmdlet.PortInfo_Protocol">
            <summary>
            <para>
            <para>The IP protocol name.</para><para>The name can be one of the following:</para><ul><li><para><code>tcp</code> - Transmission Control Protocol (TCP) provides reliable, ordered,
            and error-checked delivery of streamed data between applications running on hosts
            communicating by an IP network. If you have an application that doesn't require reliable
            data stream service, use UDP instead.</para></li><li><para><code>all</code> - All transport layer protocol types. For more general information,
            see <a href="https://en.wikipedia.org/wiki/Transport_layer">Transport layer</a> on
            <i>Wikipedia</i>.</para></li><li><para><code>udp</code> - With User Datagram Protocol (UDP), computer applications can send
            messages (or datagrams) to other hosts on an Internet Protocol (IP) network. Prior
            communications are not required to set up transmission channels or data paths. Applications
            that don't require reliable data stream service can use UDP, which provides a connectionless
            datagram service that emphasizes reduced latency over reliability. If you do require
            reliable data stream service, use TCP instead.</para></li><li><para><code>icmp</code> - Internet Control Message Protocol (ICMP) is used to send error
            messages and operational information indicating success or failure when communicating
            with an instance. For example, an error is indicated when an instance could not be
            reached. When you specify <code>icmp</code> as the <code>protocol</code>, you must
            specify the ICMP type using the <code>fromPort</code> parameter, and ICMP code using
            the <code>toPort</code> parameter.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.CloseLSInstancePublicPortCmdlet.PortInfo_ToPort">
            <summary>
            <para>
            <para>The last port in a range of open ports on an instance.</para><para>Allowed ports:</para><ul><li><para>TCP and UDP - <code>0</code> to <code>65535</code></para></li><li><para>ICMP - The ICMP code. For example, specify <code>8</code> as the <code>fromPort</code>
            (ICMP type), and <code>-1</code> as the <code>toPort</code> (ICMP code), to enable
            ICMP Ping. For more information, see <a href="https://en.wikipedia.org/wiki/Internet_Control_Message_Protocol#Control_messages">Control
            Messages</a> on <i>Wikipedia</i>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.CloseLSInstancePublicPortCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.CloseInstancePublicPortsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.CloseInstancePublicPortsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.CloseLSInstancePublicPortCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.CloseLSInstancePublicPortCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.CopyLSSnapshotCmdlet">
            <summary>
            Copies a manual snapshot of an instance or disk as another manual snapshot, or copies
            an automatic snapshot of an instance or disk as a manual snapshot. This operation
            can also be used to copy a manual or automatic snapshot of an instance or a disk from
            one AWS Region to another in Amazon Lightsail.
            
             
            <para>
            When copying a <i>manual snapshot</i>, be sure to define the <code>source region</code>,
            <code>source snapshot name</code>, and <code>target snapshot name</code> parameters.
            </para><para>
            When copying an <i>automatic snapshot</i>, be sure to define the <code>source region</code>,
            <code>source resource name</code>, <code>target snapshot name</code>, and either the
            <code>restore date</code> or the <code>use latest restorable auto snapshot</code>
            parameters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.CopyLSSnapshotCmdlet.RestoreDate">
            <summary>
            <para>
            <para>The date of the source automatic snapshot to copy. Use the <code>get auto snapshots</code>
            operation to identify the dates of the available automatic snapshots.</para><para>Constraints:</para><ul><li><para>Must be specified in <code>YYYY-MM-DD</code> format.</para></li><li><para>This parameter cannot be defined together with the <code>use latest restorable auto
            snapshot</code> parameter. The <code>restore date</code> and <code>use latest restorable
            auto snapshot</code> parameters are mutually exclusive.</para></li><li><para>Define this parameter only when copying an automatic snapshot as a manual snapshot.
            For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-keeping-automatic-snapshots">Lightsail
            Dev Guide</a>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.CopyLSSnapshotCmdlet.SourceRegion">
            <summary>
            <para>
            <para>The AWS Region where the source manual or automatic snapshot is located.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.CopyLSSnapshotCmdlet.SourceResourceName">
            <summary>
            <para>
            <para>The name of the source instance or disk from which the source automatic snapshot was
            created.</para><para>Constraint:</para><ul><li><para>Define this parameter only when copying an automatic snapshot as a manual snapshot.
            For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-keeping-automatic-snapshots">Lightsail
            Dev Guide</a>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.CopyLSSnapshotCmdlet.SourceSnapshotName">
            <summary>
            <para>
            <para>The name of the source manual snapshot to copy.</para><para>Constraint:</para><ul><li><para>Define this parameter only when copying a manual snapshot as another manual snapshot.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.CopyLSSnapshotCmdlet.TargetSnapshotName">
            <summary>
            <para>
            <para>The name of the new manual snapshot to be created as a copy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.CopyLSSnapshotCmdlet.UseLatestRestorableAutoSnapshot">
            <summary>
            <para>
            <para>A Boolean value to indicate whether to use the latest available automatic snapshot
            of the specified source instance or disk.</para><para>Constraints:</para><ul><li><para>This parameter cannot be defined together with the <code>restore date</code> parameter.
            The <code>use latest restorable auto snapshot</code> and <code>restore date</code>
            parameters are mutually exclusive.</para></li><li><para>Define this parameter only when copying an automatic snapshot as a manual snapshot.
            For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-keeping-automatic-snapshots">Lightsail
            Dev Guide</a>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.CopyLSSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.CopySnapshotResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.CopySnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.CopyLSSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TargetSnapshotName parameter.
            The -PassThru parameter is deprecated, use -Select '^TargetSnapshotName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.CopyLSSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.DisableLSAddOnCmdlet">
            <summary>
            Disables an add-on for an Amazon Lightsail resource. For more information, see the
            <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail
            Dev Guide</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.DisableLSAddOnCmdlet.AddOnType">
            <summary>
            <para>
            <para>The add-on type to disable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.DisableLSAddOnCmdlet.ResourceName">
            <summary>
            <para>
            <para>The name of the source resource for which to disable the add-on.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.DisableLSAddOnCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.DisableAddOnResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.DisableAddOnResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.DisableLSAddOnCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceName parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.DisableLSAddOnCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.DismountLSDiskCmdlet">
            <summary>
            Detaches a stopped block storage disk from a Lightsail instance. Make sure to unmount
            any file systems on the device within your operating system before stopping the instance
            and detaching the disk.
            
             
            <para>
            The <code>detach disk</code> operation supports tag-based access control via resource
            tags applied to the resource identified by <code>disk name</code>. For more information,
            see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.DismountLSDiskCmdlet.DiskName">
            <summary>
            <para>
            <para>The unique name of the disk you want to detach from your instance (e.g., <code>my-disk</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.DismountLSDiskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.DetachDiskResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.DetachDiskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.DismountLSDiskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DiskName parameter.
            The -PassThru parameter is deprecated, use -Select '^DiskName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.DismountLSDiskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.DismountLSInstancesFromLoadBalancerCmdlet">
            <summary>
            Detaches the specified instances from a Lightsail load balancer.
            
             
            <para>
            This operation waits until the instances are no longer needed before they are detached
            from the load balancer.
            </para><para>
            The <code>detach instances from load balancer</code> operation supports tag-based
            access control via resource tags applied to the resource identified by <code>load
            balancer name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.DismountLSInstancesFromLoadBalancerCmdlet.InstanceName">
            <summary>
            <para>
            <para>An array of strings containing the names of the instances you want to detach from
            the load balancer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.DismountLSInstancesFromLoadBalancerCmdlet.LoadBalancerName">
            <summary>
            <para>
            <para>The name of the Lightsail load balancer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.DismountLSInstancesFromLoadBalancerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.DetachInstancesFromLoadBalancerResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.DetachInstancesFromLoadBalancerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.DismountLSInstancesFromLoadBalancerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.DismountLSInstancesFromLoadBalancerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.DismountLSStaticIpCmdlet">
            <summary>
            Detaches a static IP from the Amazon Lightsail instance to which it is attached.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.DismountLSStaticIpCmdlet.StaticIpName">
            <summary>
            <para>
            <para>The name of the static IP to detach from the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.DismountLSStaticIpCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.DetachStaticIpResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.DetachStaticIpResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.DismountLSStaticIpCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StaticIpName parameter.
            The -PassThru parameter is deprecated, use -Select '^StaticIpName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.DismountLSStaticIpCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.EnableLSAddOnCmdlet">
            <summary>
            Enables or modifies an add-on for an Amazon Lightsail resource. For more information,
            see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail
            Dev Guide</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.EnableLSAddOnCmdlet.AddOnRequest_AddOnType">
            <summary>
            <para>
            <para>The add-on type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.EnableLSAddOnCmdlet.ResourceName">
            <summary>
            <para>
            <para>The name of the source resource for which to enable or modify the add-on.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.EnableLSAddOnCmdlet.AutoSnapshotAddOnRequest_SnapshotTimeOfDay">
            <summary>
            <para>
            <para>The daily time when an automatic snapshot will be created.</para><para>Constraints:</para><ul><li><para>Must be in <code>HH:00</code> format, and in an hourly increment.</para></li><li><para>Specified in Coordinated Universal Time (UTC).</para></li><li><para>The snapshot will be automatically created between the time specified and up to 45
            minutes after.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.EnableLSAddOnCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.EnableAddOnResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.EnableAddOnResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.EnableLSAddOnCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceName parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.EnableLSAddOnCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.ExportLSSnapshotCmdlet">
            <summary>
            Exports an Amazon Lightsail instance or block storage disk snapshot to Amazon Elastic
            Compute Cloud (Amazon EC2). This operation results in an export snapshot record that
            can be used with the <code>create cloud formation stack</code> operation to create
            new Amazon EC2 instances.
            
             
            <para>
            Exported instance snapshots appear in Amazon EC2 as Amazon Machine Images (AMIs),
            and the instance system disk appears as an Amazon Elastic Block Store (Amazon EBS)
            volume. Exported disk snapshots appear in Amazon EC2 as Amazon EBS volumes. Snapshots
            are exported to the same Amazon Web Services Region in Amazon EC2 as the source Lightsail
            snapshot.
            </para><para>
            The <code>export snapshot</code> operation supports tag-based access control via resource
            tags applied to the resource identified by <code>source snapshot name</code>. For
            more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para><note><para>
            Use the <code>get instance snapshots</code> or <code>get disk snapshots</code> operations
            to get a list of snapshots that you can export to Amazon EC2.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.ExportLSSnapshotCmdlet.SourceSnapshotName">
            <summary>
            <para>
            <para>The name of the instance or disk snapshot to be exported to Amazon EC2.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.ExportLSSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.ExportSnapshotResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.ExportSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.ExportLSSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceSnapshotName parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceSnapshotName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.ExportLSSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSActiveNameListCmdlet">
            <summary>
            Returns the names of all active (not deleted) resources.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSActiveNameListCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetActiveNames</code> request. If your
            results are paginated, the response will return a next page token that you can specify
            as the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSActiveNameListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ActiveNames'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetActiveNamesResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetActiveNamesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSActiveNameListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSAlarmCmdlet">
            <summary>
            Returns information about the configured alarms. Specify an alarm name in your request
            to return information about a specific alarm, or specify a monitored resource name
            to return information about all alarms for a specific resource.
            
             
            <para>
            An alarm is used to monitor a single metric for one of your resources. When a metric
            condition is met, the alarm can notify you by email, SMS text message, and a banner
            displayed on the Amazon Lightsail console. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms">Alarms
            in Amazon Lightsail</a>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSAlarmCmdlet.AlarmName">
            <summary>
            <para>
            <para>The name of the alarm.</para><para>Specify an alarm name to return information about a specific alarm.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSAlarmCmdlet.MonitoredResourceName">
            <summary>
            <para>
            <para>The name of the Lightsail resource being monitored by the alarm.</para><para>Specify a monitored resource name to return information about all alarms for a specific
            resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSAlarmCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetAlarms</code> request. If your results
            are paginated, the response will return a next page token that you can specify as
            the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSAlarmCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Alarms'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetAlarmsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetAlarmsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSAlarmCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AlarmName parameter.
            The -PassThru parameter is deprecated, use -Select '^AlarmName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSAlarmCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSAutoSnapshotCmdlet">
            <summary>
            Returns the available automatic snapshots for an instance or disk. For more information,
            see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail
            Dev Guide</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSAutoSnapshotCmdlet.ResourceName">
            <summary>
            <para>
            <para>The name of the source instance or disk from which to get automatic snapshot information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSAutoSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetAutoSnapshotsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetAutoSnapshotsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSAutoSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceName parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSBlueprintListCmdlet">
            <summary>
            Returns the list of available instance images, or <i>blueprints</i>. You can use a
            blueprint to create a new instance already running a specific operating system, as
            well as a preinstalled app or development stack. The software each instance is running
            depends on the blueprint image you choose.
            
             <note><para>
            Use active blueprints when creating new instances. Inactive blueprints are listed
            to support customers with existing instances and are not necessarily available to
            create new instances. Blueprints are marked inactive when they become outdated due
            to operating system updates or new application releases.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSBlueprintListCmdlet.IncludeInactive">
            <summary>
            <para>
            <para>A Boolean value indicating whether to include inactive results in your request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSBlueprintListCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetBlueprints</code> request. If your
            results are paginated, the response will return a next page token that you can specify
            as the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSBlueprintListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Blueprints'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetBlueprintsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetBlueprintsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSBlueprintListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IncludeInactive parameter.
            The -PassThru parameter is deprecated, use -Select '^IncludeInactive' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSBlueprintListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSBundleListCmdlet">
            <summary>
            Returns the list of bundles that are available for purchase. A bundle describes the
            specs for your virtual private server (or <i>instance</i>).<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSBundleListCmdlet.IncludeInactive">
            <summary>
            <para>
            <para>A Boolean value that indicates whether to include inactive bundle results in your
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSBundleListCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetBundles</code> request. If your results
            are paginated, the response will return a next page token that you can specify as
            the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSBundleListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Bundles'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetBundlesResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetBundlesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSBundleListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IncludeInactive parameter.
            The -PassThru parameter is deprecated, use -Select '^IncludeInactive' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSBundleListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSCloudFormationStackRecordCmdlet">
            <summary>
            Returns the CloudFormation stack record created as a result of the <code>create cloud
            formation stack</code> operation.
            
             
            <para>
            An AWS CloudFormation stack is used to create a new Amazon EC2 instance from an exported
            Lightsail snapshot.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSCloudFormationStackRecordCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetClouFormationStackRecords</code>
            request. If your results are paginated, the response will return a next page token
            that you can specify as the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSCloudFormationStackRecordCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CloudFormationStackRecords'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetCloudFormationStackRecordsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetCloudFormationStackRecordsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSCloudFormationStackRecordCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSContactMethodCmdlet">
            <summary>
            Returns information about the configured contact methods. Specify a protocol in your
            request to return information about a specific contact method.
            
             
            <para>
            A contact method is used to send you notifications about your Amazon Lightsail resources.
            You can add one email address and one mobile phone number contact method in each AWS
            Region. However, SMS text messaging is not supported in some AWS Regions, and SMS
            text messages cannot be sent to some countries/regions. For more information, see
            <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-notifications">Notifications
            in Amazon Lightsail</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSContactMethodCmdlet.Protocol">
            <summary>
            <para>
            <para>The protocols used to send notifications, such as <code>Email</code>, or <code>SMS</code>
            (text messaging).</para><para>Specify a protocol in your request to return information about a specific contact
            method protocol.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSContactMethodCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ContactMethods'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetContactMethodsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetContactMethodsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSDiskCmdlet">
            <summary>
            Returns information about a specific block storage disk.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSDiskCmdlet.DiskName">
            <summary>
            <para>
            <para>The name of the disk (e.g., <code>my-disk</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSDiskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Disk'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetDiskResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetDiskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSDiskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DiskName parameter.
            The -PassThru parameter is deprecated, use -Select '^DiskName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSDiskListCmdlet">
            <summary>
            Returns information about all block storage disks in your AWS account and region.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSDiskListCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetDisks</code> request. If your results
            are paginated, the response will return a next page token that you can specify as
            the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSDiskListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Disks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetDisksResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetDisksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSDiskListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSDiskSnapshotCmdlet">
            <summary>
            Returns information about a specific block storage disk snapshot.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSDiskSnapshotCmdlet.DiskSnapshotName">
            <summary>
            <para>
            <para>The name of the disk snapshot (e.g., <code>my-disk-snapshot</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSDiskSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DiskSnapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetDiskSnapshotResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetDiskSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSDiskSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DiskSnapshotName parameter.
            The -PassThru parameter is deprecated, use -Select '^DiskSnapshotName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSDiskSnapshotListCmdlet">
            <summary>
            Returns information about all block storage disk snapshots in your AWS account and
            region.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSDiskSnapshotListCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetDiskSnapshots</code> request. If
            your results are paginated, the response will return a next page token that you can
            specify as the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSDiskSnapshotListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DiskSnapshots'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetDiskSnapshotsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetDiskSnapshotsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSDiskSnapshotListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSDomainCmdlet">
            <summary>
            Returns information about a specific domain recordset.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSDomainCmdlet.DomainName">
            <summary>
            <para>
            <para>The domain name for which your want to return information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Domain'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetDomainResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetDomainResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DomainName parameter.
            The -PassThru parameter is deprecated, use -Select '^DomainName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSDomainListCmdlet">
            <summary>
            Returns a list of all domains in the user's account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSDomainListCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetDomains</code> request. If your results
            are paginated, the response will return a next page token that you can specify as
            the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSDomainListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Domains'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetDomainsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetDomainsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSDomainListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSExportSnapshotRecordCmdlet">
            <summary>
            Returns the export snapshot record created as a result of the <code>export snapshot</code>
            operation.
            
             
            <para>
            An export snapshot record can be used to create a new Amazon EC2 instance and its
            related resources with the <code>create cloud formation stack</code> operation.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSExportSnapshotRecordCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetExportSnapshotRecords</code> request.
            If your results are paginated, the response will return a next page token that you
            can specify as the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSExportSnapshotRecordCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ExportSnapshotRecords'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetExportSnapshotRecordsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetExportSnapshotRecordsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSExportSnapshotRecordCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceCmdlet">
            <summary>
            Returns information about a specific Amazon Lightsail instance, which is a virtual
            private server.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceCmdlet.InstanceName">
            <summary>
            <para>
            <para>The name of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Instance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetInstanceResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceAccessDetailCmdlet">
            <summary>
            Returns temporary SSH keys you can use to connect to a specific virtual private server,
            or <i>instance</i>.
            
             
            <para>
            The <code>get instance access details</code> operation supports tag-based access control
            via resource tags applied to the resource identified by <code>instance name</code>.
            For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceAccessDetailCmdlet.InstanceName">
            <summary>
            <para>
            <para>The name of the instance to access.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceAccessDetailCmdlet.Protocol">
            <summary>
            <para>
            <para>The protocol to use to connect to your instance. Defaults to <code>ssh</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceAccessDetailCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AccessDetails'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetInstanceAccessDetailsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetInstanceAccessDetailsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceAccessDetailCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceListCmdlet">
            <summary>
            Returns information about all Amazon Lightsail virtual private servers, or <i>instances</i>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceListCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetInstances</code> request. If your
            results are paginated, the response will return a next page token that you can specify
            as the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Instances'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetInstancesResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceMetricDataCmdlet">
            <summary>
            Returns the data points for the specified Amazon Lightsail instance metric, given
            an instance name.
            
             
            <para>
            Metrics report the utilization of your resources, and the error counts generated by
            them. Monitor and collect metric data regularly to maintain the reliability, availability,
            and performance of your resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceMetricDataCmdlet.EndTime">
            <summary>
            <para>
            <para>The end time of the time period.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceMetricDataCmdlet.InstanceName">
            <summary>
            <para>
            <para>The name of the instance for which you want to get metrics data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceMetricDataCmdlet.MetricName">
            <summary>
            <para>
            <para>The metric for which you want to return information.</para><para>Valid instance metric names are listed below, along with the most useful <code>statistics</code>
            to include in your request, and the published <code>unit</code> value.</para><ul><li><para><b><code>BurstCapacityPercentage</code></b> - The percentage of CPU performance
            available for your instance to burst above its baseline. Your instance continuously
            accrues and consumes burst capacity. Burst capacity stops accruing when your instance's
            <code>BurstCapacityPercentage</code> reaches 100%. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-viewing-instance-burst-capacity">Viewing
            instance burst capacity in Amazon Lightsail</a>.</para><para><code>Statistics</code>: The most useful statistics are <code>Maximum</code> and
            <code>Average</code>.</para><para><code>Unit</code>: The published unit is <code>Percent</code>.</para></li><li><para><b><code>BurstCapacityTime</code></b> - The available amount of time for your instance
            to burst at 100% CPU utilization. Your instance continuously accrues and consumes
            burst capacity. Burst capacity time stops accruing when your instance's <code>BurstCapacityPercentage</code>
            metric reaches 100%.</para><para>Burst capacity time is consumed at the full rate only when your instance operates
            at 100% CPU utilization. For example, if your instance operates at 50% CPU utilization
            in the burstable zone for a 5-minute period, then it consumes CPU burst capacity minutes
            at a 50% rate in that period. Your instance consumed 2 minutes and 30 seconds of CPU
            burst capacity minutes in the 5-minute period. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-viewing-instance-burst-capacity">Viewing
            instance burst capacity in Amazon Lightsail</a>.</para><para><code>Statistics</code>: The most useful statistics are <code>Maximum</code> and
            <code>Average</code>.</para><para><code>Unit</code>: The published unit is <code>Seconds</code>.</para></li><li><para><b><code>CPUUtilization</code></b> - The percentage of allocated compute units
            that are currently in use on the instance. This metric identifies the processing power
            to run the applications on the instance. Tools in your operating system can show a
            lower percentage than Lightsail when the instance is not allocated a full processor
            core.</para><para><code>Statistics</code>: The most useful statistics are <code>Maximum</code> and
            <code>Average</code>.</para><para><code>Unit</code>: The published unit is <code>Percent</code>.</para></li><li><para><b><code>NetworkIn</code></b> - The number of bytes received on all network interfaces
            by the instance. This metric identifies the volume of incoming network traffic to
            the instance. The number reported is the number of bytes received during the period.
            Because this metric is reported in 5-minute intervals, divide the reported number
            by 300 to find Bytes/second.</para><para><code>Statistics</code>: The most useful statistic is <code>Sum</code>.</para><para><code>Unit</code>: The published unit is <code>Bytes</code>.</para></li><li><para><b><code>NetworkOut</code></b> - The number of bytes sent out on all network interfaces
            by the instance. This metric identifies the volume of outgoing network traffic from
            the instance. The number reported is the number of bytes sent during the period. Because
            this metric is reported in 5-minute intervals, divide the reported number by 300 to
            find Bytes/second.</para><para><code>Statistics</code>: The most useful statistic is <code>Sum</code>.</para><para><code>Unit</code>: The published unit is <code>Bytes</code>.</para></li><li><para><b><code>StatusCheckFailed</code></b> - Reports whether the instance passed or
            failed both the instance status check and the system status check. This metric can
            be either 0 (passed) or 1 (failed). This metric data is available in 1-minute (60
            seconds) granularity.</para><para><code>Statistics</code>: The most useful statistic is <code>Sum</code>.</para><para><code>Unit</code>: The published unit is <code>Count</code>.</para></li><li><para><b><code>StatusCheckFailed_Instance</code></b> - Reports whether the instance passed
            or failed the instance status check. This metric can be either 0 (passed) or 1 (failed).
            This metric data is available in 1-minute (60 seconds) granularity.</para><para><code>Statistics</code>: The most useful statistic is <code>Sum</code>.</para><para><code>Unit</code>: The published unit is <code>Count</code>.</para></li><li><para><b><code>StatusCheckFailed_System</code></b> - Reports whether the instance passed
            or failed the system status check. This metric can be either 0 (passed) or 1 (failed).
            This metric data is available in 1-minute (60 seconds) granularity.</para><para><code>Statistics</code>: The most useful statistic is <code>Sum</code>.</para><para><code>Unit</code>: The published unit is <code>Count</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceMetricDataCmdlet.Period">
            <summary>
            <para>
            <para>The granularity, in seconds, of the returned data points.</para><para>The <code>StatusCheckFailed</code>, <code>StatusCheckFailed_Instance</code>, and <code>StatusCheckFailed_System</code>
            instance metric data is available in 1-minute (60 seconds) granularity. All other
            instance metric data is available in 5-minute (300 seconds) granularity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceMetricDataCmdlet.StartTime">
            <summary>
            <para>
            <para>The start time of the time period.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceMetricDataCmdlet.Statistic">
            <summary>
            <para>
            <para>The statistic for the metric.</para><para>The following statistics are available:</para><ul><li><para><code>Minimum</code> - The lowest value observed during the specified period. Use
            this value to determine low volumes of activity for your application.</para></li><li><para><code>Maximum</code> - The highest value observed during the specified period. Use
            this value to determine high volumes of activity for your application.</para></li><li><para><code>Sum</code> - All values submitted for the matching metric added together. You
            can use this statistic to determine the total volume of a metric.</para></li><li><para><code>Average</code> - The value of Sum / SampleCount during the specified period.
            By comparing this statistic with the Minimum and Maximum values, you can determine
            the full scope of a metric and how close the average use is to the Minimum and Maximum
            values. This comparison helps you to know when to increase or decrease your resources.</para></li><li><para><code>SampleCount</code> - The count, or number, of data points used for the statistical
            calculation.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceMetricDataCmdlet.Unit">
            <summary>
            <para>
            <para>The unit for the metric data request. Valid units depend on the metric data being
            requested. For the valid units to specify with each available metric, see the <code>metricName</code>
            parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceMetricDataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetInstanceMetricDataResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetInstanceMetricDataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceMetricDataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSInstancePortStateListCmdlet">
            <summary>
            Returns the firewall port states for a specific Amazon Lightsail instance, the IP
            addresses allowed to connect to the instance through the ports, and the protocol.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstancePortStateListCmdlet.InstanceName">
            <summary>
            <para>
            <para>The name of the instance for which to return firewall port states.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstancePortStateListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PortStates'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetInstancePortStatesResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetInstancePortStatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstancePortStateListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceSnapshotCmdlet">
            <summary>
            Returns information about a specific instance snapshot.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceSnapshotCmdlet.InstanceSnapshotName">
            <summary>
            <para>
            <para>The name of the snapshot for which you are requesting information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceSnapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetInstanceSnapshotResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetInstanceSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceSnapshotName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceSnapshotName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceSnapshotListCmdlet">
            <summary>
            Returns all instance snapshots for the user's account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceSnapshotListCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetInstanceSnapshots</code> request.
            If your results are paginated, the response will return a next page token that you
            can specify as the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceSnapshotListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceSnapshots'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetInstanceSnapshotsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetInstanceSnapshotsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceSnapshotListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceStateCmdlet">
            <summary>
            Returns the state of a specific instance. Works on one instance at a time.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceStateCmdlet.InstanceName">
            <summary>
            <para>
            <para>The name of the instance to get state information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceStateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'State'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetInstanceStateResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetInstanceStateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSInstanceStateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSKeyPairInfoCmdlet">
            <summary>
            Returns information about a specific key pair.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSKeyPairInfoCmdlet.KeyPairName">
            <summary>
            <para>
            <para>The name of the key pair for which you are requesting information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSKeyPairInfoCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'KeyPair'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetKeyPairResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetKeyPairResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSKeyPairInfoCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyPairName parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyPairName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSKeypairListCmdlet">
            <summary>
            Returns information about all key pairs in the user's account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSKeypairListCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetKeyPairs</code> request. If your
            results are paginated, the response will return a next page token that you can specify
            as the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSKeypairListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'KeyPairs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetKeyPairsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetKeyPairsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSKeypairListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerCmdlet">
            <summary>
            Returns information about the specified Lightsail load balancer.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerCmdlet.LoadBalancerName">
            <summary>
            <para>
            <para>The name of the load balancer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LoadBalancer'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetLoadBalancerResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetLoadBalancerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LoadBalancerName parameter.
            The -PassThru parameter is deprecated, use -Select '^LoadBalancerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerListCmdlet">
            <summary>
            Returns information about all load balancers in an account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerListCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetLoadBalancers</code> request. If
            your results are paginated, the response will return a next page token that you can
            specify as the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LoadBalancers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetLoadBalancersResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetLoadBalancersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerMetricDataCmdlet">
            <summary>
            Returns information about health metrics for your Lightsail load balancer.
            
             
            <para>
            Metrics report the utilization of your resources, and the error counts generated by
            them. Monitor and collect metric data regularly to maintain the reliability, availability,
            and performance of your resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerMetricDataCmdlet.EndTime">
            <summary>
            <para>
            <para>The end time of the period.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerMetricDataCmdlet.LoadBalancerName">
            <summary>
            <para>
            <para>The name of the load balancer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerMetricDataCmdlet.MetricName">
            <summary>
            <para>
            <para>The metric for which you want to return information.</para><para>Valid load balancer metric names are listed below, along with the most useful <code>statistics</code>
            to include in your request, and the published <code>unit</code> value.</para><ul><li><para><b><code>ClientTLSNegotiationErrorCount</code></b> - The number of TLS connections
            initiated by the client that did not establish a session with the load balancer due
            to a TLS error generated by the load balancer. Possible causes include a mismatch
            of ciphers or protocols.</para><para><code>Statistics</code>: The most useful statistic is <code>Sum</code>.</para><para><code>Unit</code>: The published unit is <code>Count</code>.</para></li><li><para><b><code>HealthyHostCount</code></b> - The number of target instances that are
            considered healthy.</para><para><code>Statistics</code>: The most useful statistic are <code>Average</code>, <code>Minimum</code>,
            and <code>Maximum</code>.</para><para><code>Unit</code>: The published unit is <code>Count</code>.</para></li><li><para><b><code>HTTPCode_Instance_2XX_Count</code></b> - The number of HTTP 2XX response
            codes generated by the target instances. This does not include any response codes
            generated by the load balancer.</para><para><code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that
            <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</para><para><code>Unit</code>: The published unit is <code>Count</code>.</para></li><li><para><b><code>HTTPCode_Instance_3XX_Count</code></b> - The number of HTTP 3XX response
            codes generated by the target instances. This does not include any response codes
            generated by the load balancer.</para><para><code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that
            <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</para><para><code>Unit</code>: The published unit is <code>Count</code>.</para></li><li><para><b><code>HTTPCode_Instance_4XX_Count</code></b> - The number of HTTP 4XX response
            codes generated by the target instances. This does not include any response codes
            generated by the load balancer.</para><para><code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that
            <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</para><para><code>Unit</code>: The published unit is <code>Count</code>.</para></li><li><para><b><code>HTTPCode_Instance_5XX_Count</code></b> - The number of HTTP 5XX response
            codes generated by the target instances. This does not include any response codes
            generated by the load balancer.</para><para><code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that
            <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</para><para><code>Unit</code>: The published unit is <code>Count</code>.</para></li><li><para><b><code>HTTPCode_LB_4XX_Count</code></b> - The number of HTTP 4XX client error
            codes that originated from the load balancer. Client errors are generated when requests
            are malformed or incomplete. These requests were not received by the target instance.
            This count does not include response codes generated by the target instances.</para><para><code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that
            <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</para><para><code>Unit</code>: The published unit is <code>Count</code>.</para></li><li><para><b><code>HTTPCode_LB_5XX_Count</code></b> - The number of HTTP 5XX server error
            codes that originated from the load balancer. This does not include any response codes
            generated by the target instance. This metric is reported if there are no healthy
            instances attached to the load balancer, or if the request rate exceeds the capacity
            of the instances (spillover) or the load balancer.</para><para><code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that
            <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</para><para><code>Unit</code>: The published unit is <code>Count</code>.</para></li><li><para><b><code>InstanceResponseTime</code></b> - The time elapsed, in seconds, after
            the request leaves the load balancer until a response from the target instance is
            received.</para><para><code>Statistics</code>: The most useful statistic is <code>Average</code>.</para><para><code>Unit</code>: The published unit is <code>Seconds</code>.</para></li><li><para><b><code>RejectedConnectionCount</code></b> - The number of connections that were
            rejected because the load balancer had reached its maximum number of connections.</para><para><code>Statistics</code>: The most useful statistic is <code>Sum</code>.</para><para><code>Unit</code>: The published unit is <code>Count</code>.</para></li><li><para><b><code>RequestCount</code></b> - The number of requests processed over IPv4.
            This count includes only the requests with a response generated by a target instance
            of the load balancer.</para><para><code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that
            <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</para><para><code>Unit</code>: The published unit is <code>Count</code>.</para></li><li><para><b><code>UnhealthyHostCount</code></b> - The number of target instances that are
            considered unhealthy.</para><para><code>Statistics</code>: The most useful statistic are <code>Average</code>, <code>Minimum</code>,
            and <code>Maximum</code>.</para><para><code>Unit</code>: The published unit is <code>Count</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerMetricDataCmdlet.Period">
            <summary>
            <para>
            <para>The granularity, in seconds, of the returned data points.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerMetricDataCmdlet.StartTime">
            <summary>
            <para>
            <para>The start time of the period.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerMetricDataCmdlet.Statistic">
            <summary>
            <para>
            <para>The statistic for the metric.</para><para>The following statistics are available:</para><ul><li><para><code>Minimum</code> - The lowest value observed during the specified period. Use
            this value to determine low volumes of activity for your application.</para></li><li><para><code>Maximum</code> - The highest value observed during the specified period. Use
            this value to determine high volumes of activity for your application.</para></li><li><para><code>Sum</code> - All values submitted for the matching metric added together. You
            can use this statistic to determine the total volume of a metric.</para></li><li><para><code>Average</code> - The value of Sum / SampleCount during the specified period.
            By comparing this statistic with the Minimum and Maximum values, you can determine
            the full scope of a metric and how close the average use is to the Minimum and Maximum
            values. This comparison helps you to know when to increase or decrease your resources.</para></li><li><para><code>SampleCount</code> - The count, or number, of data points used for the statistical
            calculation.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerMetricDataCmdlet.Unit">
            <summary>
            <para>
            <para>The unit for the metric data request. Valid units depend on the metric data being
            requested. For the valid units with each available metric, see the <code>metricName</code>
            parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerMetricDataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetLoadBalancerMetricDataResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetLoadBalancerMetricDataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerMetricDataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LoadBalancerName parameter.
            The -PassThru parameter is deprecated, use -Select '^LoadBalancerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerTlsCertificateCmdlet">
            <summary>
            Returns information about the TLS certificates that are associated with the specified
            Lightsail load balancer.
            
             
            <para>
            TLS is just an updated, more secure version of Secure Socket Layer (SSL).
            </para><para>
            You can have a maximum of 2 certificates associated with a Lightsail load balancer.
            One is active and the other is inactive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerTlsCertificateCmdlet.LoadBalancerName">
            <summary>
            <para>
            <para>The name of the load balancer you associated with your SSL/TLS certificate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerTlsCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TlsCertificates'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetLoadBalancerTlsCertificatesResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetLoadBalancerTlsCertificatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSLoadBalancerTlsCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LoadBalancerName parameter.
            The -PassThru parameter is deprecated, use -Select '^LoadBalancerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSOperationCmdlet">
            <summary>
            Returns information about a specific operation. Operations include events such as
            when you create an instance, allocate a static IP, attach a static IP, and so on.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSOperationCmdlet.OperationId">
            <summary>
            <para>
            <para>A GUID used to identify the operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSOperationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetOperationResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetOperationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSOperationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OperationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OperationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSOperationListCmdlet">
            <summary>
            Returns information about all operations.
            
             
            <para>
            Results are returned from oldest to newest, up to a maximum of 200. Results can be
            paged by making each subsequent call to <code>GetOperations</code> use the maximum
            (last) <code>statusChangedAt</code> value from the previous request.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSOperationListCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetOperations</code> request. If your
            results are paginated, the response will return a next page token that you can specify
            as the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSOperationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetOperationsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetOperationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSOperationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSOperationListForResourceCmdlet">
            <summary>
            Gets operations for a specific resource (e.g., an instance or a static IP).<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSOperationListForResourceCmdlet.ResourceName">
            <summary>
            <para>
            <para>The name of the resource for which you are requesting information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSOperationListForResourceCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetOperationsForResource</code> request.
            If your results are paginated, the response will return a next page token that you
            can specify as the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSOperationListForResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetOperationsForResourceResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetOperationsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSOperationListForResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceName parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSOperationListForResourceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSRegionListCmdlet">
            <summary>
            Returns a list of all valid regions for Amazon Lightsail. Use the <code>include availability
            zones</code> parameter to also return the Availability Zones in a region.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRegionListCmdlet.IncludeAvailabilityZone">
            <summary>
            <para>
            <para>A Boolean value indicating whether to also include Availability Zones in your get
            regions request. Availability Zones are indicated with a letter: e.g., <code>us-east-2a</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRegionListCmdlet.IncludeRelationalDatabaseAvailabilityZone">
            <summary>
            <para>
            <para>&gt;A Boolean value indicating whether to also include Availability Zones for databases
            in your get regions request. Availability Zones are indicated with a letter (e.g.,
            <code>us-east-2a</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRegionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Regions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetRegionsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetRegionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseCmdlet">
            <summary>
            Returns information about a specific database in Amazon Lightsail.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseCmdlet.RelationalDatabaseName">
            <summary>
            <para>
            <para>The name of the database that you are looking up.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RelationalDatabase'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetRelationalDatabaseResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetRelationalDatabaseResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RelationalDatabaseName parameter.
            The -PassThru parameter is deprecated, use -Select '^RelationalDatabaseName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseBlueprintCmdlet">
            <summary>
            Returns a list of available database blueprints in Amazon Lightsail. A blueprint describes
            the major engine version of a database.
            
             
            <para>
            You can use a blueprint ID to create a new database that runs a specific database
            engine.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseBlueprintCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetRelationalDatabaseBlueprints</code>
            request. If your results are paginated, the response will return a next page token
            that you can specify as the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseBlueprintCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Blueprints'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetRelationalDatabaseBlueprintsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetRelationalDatabaseBlueprintsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseBlueprintCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseBundleCmdlet">
            <summary>
            Returns the list of bundles that are available in Amazon Lightsail. A bundle describes
            the performance specifications for a database.
            
             
            <para>
            You can use a bundle ID to create a new database with explicit performance specifications.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseBundleCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetRelationalDatabaseBundles</code>
            request. If your results are paginated, the response will return a next page token
            that you can specify as the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseBundleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Bundles'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetRelationalDatabaseBundlesResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetRelationalDatabaseBundlesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseBundleCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseEventCmdlet">
            <summary>
            Returns a list of events for a specific database in Amazon Lightsail.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseEventCmdlet.DurationInMinute">
            <summary>
            <para>
            <para>The number of minutes in the past from which to retrieve events. For example, to get
            all events from the past 2 hours, enter 120.</para><para>Default: <code>60</code></para><para>The minimum is 1 and the maximum is 14 days (20160 minutes).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseEventCmdlet.RelationalDatabaseName">
            <summary>
            <para>
            <para>The name of the database from which to get events.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseEventCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetRelationalDatabaseEvents</code> request.
            If your results are paginated, the response will return a next page token that you
            can specify as the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseEventCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RelationalDatabaseEvents'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetRelationalDatabaseEventsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetRelationalDatabaseEventsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseEventCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RelationalDatabaseName parameter.
            The -PassThru parameter is deprecated, use -Select '^RelationalDatabaseName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseEventCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseListCmdlet">
            <summary>
            Returns information about all of your databases in Amazon Lightsail.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseListCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetRelationalDatabases</code> request.
            If your results are paginated, the response will return a next page token that you
            can specify as the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RelationalDatabases'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetRelationalDatabasesResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetRelationalDatabasesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseLogEventCmdlet">
            <summary>
            Returns a list of log events for a database in Amazon Lightsail.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseLogEventCmdlet.EndTime">
            <summary>
            <para>
            <para>The end of the time interval from which to get log events.</para><para>Constraints:</para><ul><li><para>Specified in Coordinated Universal Time (UTC).</para></li><li><para>Specified in the Unix time format.</para><para>For example, if you wish to use an end time of October 1, 2018, at 8 PM UTC, then
            you input <code>1538424000</code> as the end time.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseLogEventCmdlet.LogStreamName">
            <summary>
            <para>
            <para>The name of the log stream.</para><para>Use the <code>get relational database log streams</code> operation to get a list of
            available log streams.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseLogEventCmdlet.RelationalDatabaseName">
            <summary>
            <para>
            <para>The name of your database for which to get log events.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseLogEventCmdlet.StartFromHead">
            <summary>
            <para>
            <para>Parameter to specify if the log should start from head or tail. If <code>true</code>
            is specified, the log event starts from the head of the log. If <code>false</code>
            is specified, the log event starts from the tail of the log.</para><note><para>For PostgreSQL, the default value of <code>false</code> is the only option available.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseLogEventCmdlet.StartTime">
            <summary>
            <para>
            <para>The start of the time interval from which to get log events.</para><para>Constraints:</para><ul><li><para>Specified in Coordinated Universal Time (UTC).</para></li><li><para>Specified in the Unix time format.</para><para>For example, if you wish to use a start time of October 1, 2018, at 8 PM UTC, then
            you input <code>1538424000</code> as the start time.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseLogEventCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next or previous page of results from your request.</para><para>To get a page token, perform an initial <code>GetRelationalDatabaseLogEvents</code>
            request. If your results are paginated, the response will return a next forward token
            and/or next backward token that you can specify as the page token in a subsequent
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseLogEventCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetRelationalDatabaseLogEventsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetRelationalDatabaseLogEventsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseLogEventCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RelationalDatabaseName parameter.
            The -PassThru parameter is deprecated, use -Select '^RelationalDatabaseName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseLogStreamCmdlet">
            <summary>
            Returns a list of available log streams for a specific database in Amazon Lightsail.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseLogStreamCmdlet.RelationalDatabaseName">
            <summary>
            <para>
            <para>The name of your database for which to get log streams.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseLogStreamCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LogStreams'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetRelationalDatabaseLogStreamsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetRelationalDatabaseLogStreamsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseLogStreamCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RelationalDatabaseName parameter.
            The -PassThru parameter is deprecated, use -Select '^RelationalDatabaseName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseMasterUserPasswordCmdlet">
            <summary>
            Returns the current, previous, or pending versions of the master user password for
            a Lightsail database.
            
             
            <para>
            The <code>GetRelationalDatabaseMasterUserPassword</code> operation supports tag-based
            access control via resource tags applied to the resource identified by relationalDatabaseName.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseMasterUserPasswordCmdlet.PasswordVersion">
            <summary>
            <para>
            <para>The password version to return.</para><para>Specifying <code>CURRENT</code> or <code>PREVIOUS</code> returns the current or previous
            passwords respectively. Specifying <code>PENDING</code> returns the newest version
            of the password that will rotate to <code>CURRENT</code>. After the <code>PENDING</code>
            password rotates to <code>CURRENT</code>, the <code>PENDING</code> password is no
            longer available.</para><para>Default: <code>CURRENT</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseMasterUserPasswordCmdlet.RelationalDatabaseName">
            <summary>
            <para>
            <para>The name of your database for which to get the master user password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseMasterUserPasswordCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetRelationalDatabaseMasterUserPasswordResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetRelationalDatabaseMasterUserPasswordResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseMasterUserPasswordCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RelationalDatabaseName parameter.
            The -PassThru parameter is deprecated, use -Select '^RelationalDatabaseName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseMetricDataCmdlet">
            <summary>
            Returns the data points of the specified metric for a database in Amazon Lightsail.
            
             
            <para>
            Metrics report the utilization of your resources, and the error counts generated by
            them. Monitor and collect metric data regularly to maintain the reliability, availability,
            and performance of your resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseMetricDataCmdlet.EndTime">
            <summary>
            <para>
            <para>The end of the time interval from which to get metric data.</para><para>Constraints:</para><ul><li><para>Specified in Coordinated Universal Time (UTC).</para></li><li><para>Specified in the Unix time format.</para><para>For example, if you wish to use an end time of October 1, 2018, at 8 PM UTC, then
            you input <code>1538424000</code> as the end time.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseMetricDataCmdlet.MetricName">
            <summary>
            <para>
            <para>The metric for which you want to return information.</para><para>Valid relational database metric names are listed below, along with the most useful
            <code>statistics</code> to include in your request, and the published <code>unit</code>
            value. All relational database metric data is available in 1-minute (60 seconds) granularity.</para><ul><li><para><b><code>CPUUtilization</code></b> - The percentage of CPU utilization currently
            in use on the database.</para><para><code>Statistics</code>: The most useful statistics are <code>Maximum</code> and
            <code>Average</code>.</para><para><code>Unit</code>: The published unit is <code>Percent</code>.</para></li><li><para><b><code>DatabaseConnections</code></b> - The number of database connections in
            use.</para><para><code>Statistics</code>: The most useful statistics are <code>Maximum</code> and
            <code>Sum</code>.</para><para><code>Unit</code>: The published unit is <code>Count</code>.</para></li><li><para><b><code>DiskQueueDepth</code></b> - The number of outstanding IOs (read/write
            requests) that are waiting to access the disk.</para><para><code>Statistics</code>: The most useful statistic is <code>Sum</code>.</para><para><code>Unit</code>: The published unit is <code>Count</code>.</para></li><li><para><b><code>FreeStorageSpace</code></b> - The amount of available storage space.</para><para><code>Statistics</code>: The most useful statistic is <code>Sum</code>.</para><para><code>Unit</code>: The published unit is <code>Bytes</code>.</para></li><li><para><b><code>NetworkReceiveThroughput</code></b> - The incoming (Receive) network traffic
            on the database, including both customer database traffic and AWS traffic used for
            monitoring and replication.</para><para><code>Statistics</code>: The most useful statistic is <code>Average</code>.</para><para><code>Unit</code>: The published unit is <code>Bytes/Second</code>.</para></li><li><para><b><code>NetworkTransmitThroughput</code></b> - The outgoing (Transmit) network
            traffic on the database, including both customer database traffic and AWS traffic
            used for monitoring and replication.</para><para><code>Statistics</code>: The most useful statistic is <code>Average</code>.</para><para><code>Unit</code>: The published unit is <code>Bytes/Second</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseMetricDataCmdlet.Period">
            <summary>
            <para>
            <para>The granularity, in seconds, of the returned data points.</para><para>All relational database metric data is available in 1-minute (60 seconds) granularity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseMetricDataCmdlet.RelationalDatabaseName">
            <summary>
            <para>
            <para>The name of your database from which to get metric data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseMetricDataCmdlet.StartTime">
            <summary>
            <para>
            <para>The start of the time interval from which to get metric data.</para><para>Constraints:</para><ul><li><para>Specified in Coordinated Universal Time (UTC).</para></li><li><para>Specified in the Unix time format.</para><para>For example, if you wish to use a start time of October 1, 2018, at 8 PM UTC, then
            you input <code>1538424000</code> as the start time.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseMetricDataCmdlet.Statistic">
            <summary>
            <para>
            <para>The statistic for the metric.</para><para>The following statistics are available:</para><ul><li><para><code>Minimum</code> - The lowest value observed during the specified period. Use
            this value to determine low volumes of activity for your application.</para></li><li><para><code>Maximum</code> - The highest value observed during the specified period. Use
            this value to determine high volumes of activity for your application.</para></li><li><para><code>Sum</code> - All values submitted for the matching metric added together. You
            can use this statistic to determine the total volume of a metric.</para></li><li><para><code>Average</code> - The value of Sum / SampleCount during the specified period.
            By comparing this statistic with the Minimum and Maximum values, you can determine
            the full scope of a metric and how close the average use is to the Minimum and Maximum
            values. This comparison helps you to know when to increase or decrease your resources.</para></li><li><para><code>SampleCount</code> - The count, or number, of data points used for the statistical
            calculation.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseMetricDataCmdlet.Unit">
            <summary>
            <para>
            <para>The unit for the metric data request. Valid units depend on the metric data being
            requested. For the valid units with each available metric, see the <code>metricName</code>
            parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseMetricDataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetRelationalDatabaseMetricDataResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetRelationalDatabaseMetricDataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseMetricDataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MetricName parameter.
            The -PassThru parameter is deprecated, use -Select '^MetricName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseParameterCmdlet">
            <summary>
            Returns all of the runtime parameters offered by the underlying database software,
            or engine, for a specific database in Amazon Lightsail.
            
             
            <para>
            In addition to the parameter names and values, this operation returns other information
            about each parameter. This information includes whether changes require a reboot,
            whether the parameter is modifiable, the allowed values, and the data types.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseParameterCmdlet.RelationalDatabaseName">
            <summary>
            <para>
            <para>The name of your database for which to get parameters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseParameterCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetRelationalDatabaseParameters</code>
            request. If your results are paginated, the response will return a next page token
            that you can specify as the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Parameters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetRelationalDatabaseParametersResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetRelationalDatabaseParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseParameterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RelationalDatabaseName parameter.
            The -PassThru parameter is deprecated, use -Select '^RelationalDatabaseName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseParameterCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseSnapshotCmdlet">
            <summary>
            Returns information about a specific database snapshot in Amazon Lightsail.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseSnapshotCmdlet.RelationalDatabaseSnapshotName">
            <summary>
            <para>
            <para>The name of the database snapshot for which to get information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RelationalDatabaseSnapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetRelationalDatabaseSnapshotResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetRelationalDatabaseSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RelationalDatabaseSnapshotName parameter.
            The -PassThru parameter is deprecated, use -Select '^RelationalDatabaseSnapshotName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseSnapshotListCmdlet">
            <summary>
            Returns information about all of your database snapshots in Amazon Lightsail.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseSnapshotListCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetRelationalDatabaseSnapshots</code>
            request. If your results are paginated, the response will return a next page token
            that you can specify as the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseSnapshotListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RelationalDatabaseSnapshots'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetRelationalDatabaseSnapshotsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetRelationalDatabaseSnapshotsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSRelationalDatabaseSnapshotListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSStaticIpCmdlet">
            <summary>
            Returns information about a specific static IP.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSStaticIpCmdlet.StaticIpName">
            <summary>
            <para>
            <para>The name of the static IP in Lightsail.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSStaticIpCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StaticIp'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetStaticIpResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetStaticIpResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSStaticIpCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StaticIpName parameter.
            The -PassThru parameter is deprecated, use -Select '^StaticIpName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.GetLSStaticIpListCmdlet">
            <summary>
            Returns information about all static IPs in the user's account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSStaticIpListCmdlet.PageToken">
            <summary>
            <para>
            <para>The token to advance to the next page of results from your request.</para><para>To get a page token, perform an initial <code>GetStaticIps</code> request. If your
            results are paginated, the response will return a next page token that you can specify
            as the page token in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSStaticIpListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StaticIps'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.GetStaticIpsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.GetStaticIpsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.GetLSStaticIpListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.ImportLSKeyPairCmdlet">
            <summary>
            Imports a public SSH key from a specific key pair.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.ImportLSKeyPairCmdlet.KeyPairName">
            <summary>
            <para>
            <para>The name of the key pair for which you want to import the public key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.ImportLSKeyPairCmdlet.PublicKeyBase64">
            <summary>
            <para>
            <para>A base64-encoded public key of the <code>ssh-rsa</code> type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.ImportLSKeyPairCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.ImportKeyPairResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.ImportKeyPairResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.ImportLSKeyPairCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PublicKeyBase64 parameter.
            The -PassThru parameter is deprecated, use -Select '^PublicKeyBase64' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.ImportLSKeyPairCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.MountLSStaticIpCmdlet">
            <summary>
            Attaches a static IP address to a specific Amazon Lightsail instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.MountLSStaticIpCmdlet.InstanceName">
            <summary>
            <para>
            <para>The instance name to which you want to attach the static IP address.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.MountLSStaticIpCmdlet.StaticIpName">
            <summary>
            <para>
            <para>The name of the static IP.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.MountLSStaticIpCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.AttachStaticIpResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.AttachStaticIpResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.MountLSStaticIpCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StaticIpName parameter.
            The -PassThru parameter is deprecated, use -Select '^StaticIpName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.MountLSStaticIpCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.NewLSCloudFormationStackCmdlet">
            <summary>
            Creates an AWS CloudFormation stack, which creates a new Amazon EC2 instance from
            an exported Amazon Lightsail snapshot. This operation results in a CloudFormation
            stack record that can be used to track the AWS CloudFormation stack created. Use the
            <code>get cloud formation stack records</code> operation to get a list of the CloudFormation
            stacks created.
            
             <important><para>
            Wait until after your new Amazon EC2 instance is created before running the <code>create
            cloud formation stack</code> operation again with the same export snapshot record.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSCloudFormationStackCmdlet.Instance">
            <summary>
            <para>
            <para>An array of parameters that will be used to create the new Amazon EC2 instance. You
            can only pass one instance entry at a time in this array. You will get an invalid
            parameter error if you pass more than one instance entry in this array.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSCloudFormationStackCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.CreateCloudFormationStackResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.CreateCloudFormationStackResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSCloudFormationStackCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Instance parameter.
            The -PassThru parameter is deprecated, use -Select '^Instance' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSCloudFormationStackCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.NewLSContactMethodCmdlet">
            <summary>
            Creates an email or SMS text message contact method.
            
             
            <para>
            A contact method is used to send you notifications about your Amazon Lightsail resources.
            You can add one email address and one mobile phone number contact method in each AWS
            Region. However, SMS text messaging is not supported in some AWS Regions, and SMS
            text messages cannot be sent to some countries/regions. For more information, see
            <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-notifications">Notifications
            in Amazon Lightsail</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSContactMethodCmdlet.ContactEndpoint">
            <summary>
            <para>
            <para>The destination of the contact method, such as an email address or a mobile phone
            number.</para><para>Use the E.164 format when specifying a mobile phone number. E.164 is a standard for
            the phone number structure used for international telecommunication. Phone numbers
            that follow this format can have a maximum of 15 digits, and they are prefixed with
            the plus character (+) and the country code. For example, a U.S. phone number in E.164
            format would be specified as +1XXX5550100. For more information, see <a href="https://en.wikipedia.org/wiki/E.164">E.164</a>
            on <i>Wikipedia</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSContactMethodCmdlet.Protocol">
            <summary>
            <para>
            <para>The protocol of the contact method, such as <code>Email</code> or <code>SMS</code>
            (text messaging).</para><para>The <code>SMS</code> protocol is supported only in the following AWS Regions.</para><ul><li><para>US East (N. Virginia) (<code>us-east-1</code>)</para></li><li><para>US West (Oregon) (<code>us-west-2</code>)</para></li><li><para>Europe (Ireland) (<code>eu-west-1</code>)</para></li><li><para>Asia Pacific (Tokyo) (<code>ap-northeast-1</code>)</para></li><li><para>Asia Pacific (Singapore) (<code>ap-southeast-1</code>)</para></li><li><para>Asia Pacific (Sydney) (<code>ap-southeast-2</code>)</para></li></ul><para>For a list of countries/regions where SMS text messages can be sent, and the latest
            AWS Regions where SMS text messaging is supported, see <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-supported-regions-countries.html">Supported
            Regions and Countries</a> in the <i>Amazon SNS Developer Guide</i>.</para><para>For more information about notifications in Amazon Lightsail, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-notifications">Notifications
            in Amazon Lightsail</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSContactMethodCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.CreateContactMethodResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.CreateContactMethodResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSContactMethodCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ContactEndpoint parameter.
            The -PassThru parameter is deprecated, use -Select '^ContactEndpoint' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSContactMethodCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.NewLSDiskCmdlet">
            <summary>
            Creates a block storage disk that can be attached to an Amazon Lightsail instance
            in the same Availability Zone (e.g., <code>us-east-2a</code>).
            
             
            <para>
            The <code>create disk</code> operation supports tag-based access control via request
            tags. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskCmdlet.AddOn">
            <summary>
            <para>
            <para>An array of objects that represent the add-ons to enable for the new disk.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>The Availability Zone where you want to create the disk (e.g., <code>us-east-2a</code>).
            Use the same Availability Zone as the Lightsail instance to which you want to attach
            the disk.</para><para>Use the <code>get regions</code> operation to list the Availability Zones where Lightsail
            is currently available.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskCmdlet.DiskName">
            <summary>
            <para>
            <para>The unique Lightsail disk name (e.g., <code>my-disk</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskCmdlet.SizeInGb">
            <summary>
            <para>
            <para>The size of the disk in GB (e.g., <code>32</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskCmdlet.Tag">
            <summary>
            <para>
            <para>The tag keys and optional values to add to the resource during create.</para><para>To tag a resource after it has been created, see the <code>tag resource</code> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.CreateDiskResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.CreateDiskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DiskName parameter.
            The -PassThru parameter is deprecated, use -Select '^DiskName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.NewLSDiskFromSnapshotCmdlet">
            <summary>
            Creates a block storage disk from a manual or automatic snapshot of a disk. The resulting
            disk can be attached to an Amazon Lightsail instance in the same Availability Zone
            (e.g., <code>us-east-2a</code>).
            
             
            <para>
            The <code>create disk from snapshot</code> operation supports tag-based access control
            via request tags and resource tags applied to the resource identified by <code>disk
            snapshot name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskFromSnapshotCmdlet.AddOn">
            <summary>
            <para>
            <para>An array of objects that represent the add-ons to enable for the new disk.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskFromSnapshotCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>The Availability Zone where you want to create the disk (e.g., <code>us-east-2a</code>).
            Choose the same Availability Zone as the Lightsail instance where you want to create
            the disk.</para><para>Use the GetRegions operation to list the Availability Zones where Lightsail is currently
            available.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskFromSnapshotCmdlet.DiskName">
            <summary>
            <para>
            <para>The unique Lightsail disk name (e.g., <code>my-disk</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskFromSnapshotCmdlet.DiskSnapshotName">
            <summary>
            <para>
            <para>The name of the disk snapshot (e.g., <code>my-snapshot</code>) from which to create
            the new storage disk.</para><para>Constraint:</para><ul><li><para>This parameter cannot be defined together with the <code>source disk name</code> parameter.
            The <code>disk snapshot name</code> and <code>source disk name</code> parameters are
            mutually exclusive.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskFromSnapshotCmdlet.RestoreDate">
            <summary>
            <para>
            <para>The date of the automatic snapshot to use for the new disk. Use the <code>get auto
            snapshots</code> operation to identify the dates of the available automatic snapshots.</para><para>Constraints:</para><ul><li><para>Must be specified in <code>YYYY-MM-DD</code> format.</para></li><li><para>This parameter cannot be defined together with the <code>use latest restorable auto
            snapshot</code> parameter. The <code>restore date</code> and <code>use latest restorable
            auto snapshot</code> parameters are mutually exclusive.</para></li><li><para>Define this parameter only when creating a new disk from an automatic snapshot. For
            more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail
            Dev Guide</a>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskFromSnapshotCmdlet.SizeInGb">
            <summary>
            <para>
            <para>The size of the disk in GB (e.g., <code>32</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskFromSnapshotCmdlet.SourceDiskName">
            <summary>
            <para>
            <para>The name of the source disk from which the source automatic snapshot was created.</para><para>Constraints:</para><ul><li><para>This parameter cannot be defined together with the <code>disk snapshot name</code>
            parameter. The <code>source disk name</code> and <code>disk snapshot name</code> parameters
            are mutually exclusive.</para></li><li><para>Define this parameter only when creating a new disk from an automatic snapshot. For
            more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail
            Dev Guide</a>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskFromSnapshotCmdlet.Tag">
            <summary>
            <para>
            <para>The tag keys and optional values to add to the resource during create.</para><para>To tag a resource after it has been created, see the <code>tag resource</code> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskFromSnapshotCmdlet.UseLatestRestorableAutoSnapshot">
            <summary>
            <para>
            <para>A Boolean value to indicate whether to use the latest available automatic snapshot.</para><para>Constraints:</para><ul><li><para>This parameter cannot be defined together with the <code>restore date</code> parameter.
            The <code>use latest restorable auto snapshot</code> and <code>restore date</code>
            parameters are mutually exclusive.</para></li><li><para>Define this parameter only when creating a new disk from an automatic snapshot. For
            more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail
            Dev Guide</a>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskFromSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.CreateDiskFromSnapshotResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.CreateDiskFromSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskFromSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DiskSnapshotName parameter.
            The -PassThru parameter is deprecated, use -Select '^DiskSnapshotName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskFromSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.NewLSDiskSnapshotCmdlet">
            <summary>
            Creates a snapshot of a block storage disk. You can use snapshots for backups, to
            make copies of disks, and to save data before shutting down a Lightsail instance.
            
             
            <para>
            You can take a snapshot of an attached disk that is in use; however, snapshots only
            capture data that has been written to your disk at the time the snapshot command is
            issued. This may exclude any data that has been cached by any applications or the
            operating system. If you can pause any file systems on the disk long enough to take
            a snapshot, your snapshot should be complete. Nevertheless, if you cannot pause all
            file writes to the disk, you should unmount the disk from within the Lightsail instance,
            issue the create disk snapshot command, and then remount the disk to ensure a consistent
            and complete snapshot. You may remount and use your disk while the snapshot status
            is pending.
            </para><para>
            You can also use this operation to create a snapshot of an instance's system volume.
            You might want to do this, for example, to recover data from the system volume of
            a botched instance or to create a backup of the system volume like you would for a
            block storage disk. To create a snapshot of a system volume, just define the <code>instance
            name</code> parameter when issuing the snapshot command, and a snapshot of the defined
            instance's system volume will be created. After the snapshot is available, you can
            create a block storage disk from the snapshot and attach it to a running instance
            to access the data on the disk.
            </para><para>
            The <code>create disk snapshot</code> operation supports tag-based access control
            via request tags. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskSnapshotCmdlet.DiskName">
            <summary>
            <para>
            <para>The unique name of the source disk (e.g., <code>Disk-Virginia-1</code>).</para><note><para>This parameter cannot be defined together with the <code>instance name</code> parameter.
            The <code>disk name</code> and <code>instance name</code> parameters are mutually
            exclusive.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskSnapshotCmdlet.DiskSnapshotName">
            <summary>
            <para>
            <para>The name of the destination disk snapshot (e.g., <code>my-disk-snapshot</code>) based
            on the source disk.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskSnapshotCmdlet.InstanceName">
            <summary>
            <para>
            <para>The unique name of the source instance (e.g., <code>Amazon_Linux-512MB-Virginia-1</code>).
            When this is defined, a snapshot of the instance's system volume is created.</para><note><para>This parameter cannot be defined together with the <code>disk name</code> parameter.
            The <code>instance name</code> and <code>disk name</code> parameters are mutually
            exclusive.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskSnapshotCmdlet.Tag">
            <summary>
            <para>
            <para>The tag keys and optional values to add to the resource during create.</para><para>To tag a resource after it has been created, see the <code>tag resource</code> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.CreateDiskSnapshotResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.CreateDiskSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DiskSnapshotName parameter.
            The -PassThru parameter is deprecated, use -Select '^DiskSnapshotName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDiskSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.NewLSDomainCmdlet">
            <summary>
            Creates a domain resource for the specified domain (e.g., example.com).
            
             
            <para>
            The <code>create domain</code> operation supports tag-based access control via request
            tags. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDomainCmdlet.DomainName">
            <summary>
            <para>
            <para>The domain name to manage (e.g., <code>example.com</code>).</para><note><para>You cannot register a new domain name using Lightsail. You must register a domain
            name using Amazon Route 53 or another domain name registrar. If you have already registered
            your domain, you can enter its name in this parameter to manage the DNS records for
            that domain.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDomainCmdlet.Tag">
            <summary>
            <para>
            <para>The tag keys and optional values to add to the resource during create.</para><para>To tag a resource after it has been created, see the <code>tag resource</code> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.CreateDomainResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.CreateDomainResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DomainName parameter.
            The -PassThru parameter is deprecated, use -Select '^DomainName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDomainCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.NewLSDomainEntryCmdlet">
            <summary>
            Creates one of the following entry records associated with the domain: Address (A),
            canonical name (CNAME), mail exchanger (MX), name server (NS), start of authority
            (SOA), service locator (SRV), or text (TXT).
            
             
            <para>
            The <code>create domain entry</code> operation supports tag-based access control via
            resource tags applied to the resource identified by <code>domain name</code>. For
            more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDomainEntryCmdlet.DomainName">
            <summary>
            <para>
            <para>The domain name (e.g., <code>example.com</code>) for which you want to create the
            domain entry.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDomainEntryCmdlet.DomainEntry_Id">
            <summary>
            <para>
            <para>The ID of the domain recordset entry.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDomainEntryCmdlet.DomainEntry_IsAlias">
            <summary>
            <para>
            <para>When <code>true</code>, specifies whether the domain entry is an alias used by the
            Lightsail load balancer. You can include an alias (A type) record in your request,
            which points to a load balancer DNS name and routes traffic to your load balancer</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDomainEntryCmdlet.DomainEntry_Name">
            <summary>
            <para>
            <para>The name of the domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDomainEntryCmdlet.DomainEntry_Target">
            <summary>
            <para>
            <para>The target AWS name server (e.g., <code>ns-111.awsdns-22.com.</code>).</para><para>For Lightsail load balancers, the value looks like <code>ab1234c56789c6b86aba6fb203d443bc-123456789.us-east-2.elb.amazonaws.com</code>.
            Be sure to also set <code>isAlias</code> to <code>true</code> when setting up an A
            record for a load balancer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDomainEntryCmdlet.DomainEntry_Type">
            <summary>
            <para>
            <para>The type of domain entry, such as address (A), canonical name (CNAME), mail exchanger
            (MX), name server (NS), start of authority (SOA), service locator (SRV), or text (TXT).</para><para>The following domain entry types can be used:</para><ul><li><para><code>A</code></para></li><li><para><code>CNAME</code></para></li><li><para><code>MX</code></para></li><li><para><code>NS</code></para></li><li><para><code>SOA</code></para></li><li><para><code>SRV</code></para></li><li><para><code>TXT</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDomainEntryCmdlet.DomainEntry_Option">
            <summary>
            <para>
            <para>(Deprecated) The options for the domain entry.</para><note><para>In releases prior to November 29, 2017, this parameter was not included in the API
            response. It is now deprecated.</para></note>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDomainEntryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.CreateDomainEntryResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.CreateDomainEntryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDomainEntryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DomainName parameter.
            The -PassThru parameter is deprecated, use -Select '^DomainName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSDomainEntryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.NewLSInstanceCmdlet">
            <summary>
            Creates one or more Amazon Lightsail instances.
            
             
            <para>
            The <code>create instances</code> operation supports tag-based access control via
            request tags. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstanceCmdlet.AddOn">
            <summary>
            <para>
            <para>An array of objects representing the add-ons to enable for the new instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstanceCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>The Availability Zone in which to create your instance. Use the following format:
            <code>us-east-2a</code> (case sensitive). You can get a list of Availability Zones
            by using the <a href="http://docs.aws.amazon.com/lightsail/2016-11-28/api-reference/API_GetRegions.html">get
            regions</a> operation. Be sure to add the <code>include Availability Zones</code>
            parameter to your request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstanceCmdlet.BlueprintId">
            <summary>
            <para>
            <para>The ID for a virtual private server image (e.g., <code>app_wordpress_4_4</code> or
            <code>app_lamp_7_0</code>). Use the <code>get blueprints</code> operation to return
            a list of available images (or <i>blueprints</i>).</para><note><para>Use active blueprints when creating new instances. Inactive blueprints are listed
            to support customers with existing instances and are not necessarily available to
            create new instances. Blueprints are marked inactive when they become outdated due
            to operating system updates or new application releases.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstanceCmdlet.BundleId">
            <summary>
            <para>
            <para>The bundle of specification information for your virtual private server (or <i>instance</i>),
            including the pricing plan (e.g., <code>micro_1_0</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstanceCmdlet.InstanceName">
            <summary>
            <para>
            <para>The names to use for your new Lightsail instances. Separate multiple values using
            quotation marks and commas, for example: <code>["MyFirstInstance","MySecondInstance"]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstanceCmdlet.KeyPairName">
            <summary>
            <para>
            <para>The name of your key pair.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstanceCmdlet.Tag">
            <summary>
            <para>
            <para>The tag keys and optional values to add to the resource during create.</para><para>To tag a resource after it has been created, see the <code>tag resource</code> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstanceCmdlet.UserData">
            <summary>
            <para>
            <para>A launch script you can create that configures a server with additional user data.
            For example, you might want to run <code>apt-get -y update</code>.</para><note><para>Depending on the machine image you choose, the command to get software on your instance
            varies. Amazon Linux and CentOS use <code>yum</code>, Debian and Ubuntu use <code>apt-get</code>,
            and FreeBSD uses <code>pkg</code>. For a complete list, see the <a href="https://lightsail.aws.amazon.com/ls/docs/getting-started/article/compare-options-choose-lightsail-instance-image">Dev
            Guide</a>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstanceCmdlet.CustomImageName">
            <summary>
            <para>
            <para>(Deprecated) The name for your custom image.</para><note><para>In releases prior to June 12, 2017, this parameter was ignored by the API. It is now
            deprecated.</para></note>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.CreateInstancesResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.CreateInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.NewLSInstancesFromSnapshotCmdlet">
            <summary>
            Creates one or more new instances from a manual or automatic snapshot of an instance.
            
             
            <para>
            The <code>create instances from snapshot</code> operation supports tag-based access
            control via request tags and resource tags applied to the resource identified by <code>instance
            snapshot name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstancesFromSnapshotCmdlet.AddOn">
            <summary>
            <para>
            <para>An array of objects representing the add-ons to enable for the new instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstancesFromSnapshotCmdlet.AttachedDiskMapping">
            <summary>
            <para>
            <para>An object containing information about one or more disk mappings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstancesFromSnapshotCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>The Availability Zone where you want to create your instances. Use the following formatting:
            <code>us-east-2a</code> (case sensitive). You can get a list of Availability Zones
            by using the <a href="http://docs.aws.amazon.com/lightsail/2016-11-28/api-reference/API_GetRegions.html">get
            regions</a> operation. Be sure to add the <code>include Availability Zones</code>
            parameter to your request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstancesFromSnapshotCmdlet.BundleId">
            <summary>
            <para>
            <para>The bundle of specification information for your virtual private server (or <i>instance</i>),
            including the pricing plan (e.g., <code>micro_1_0</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstancesFromSnapshotCmdlet.InstanceName">
            <summary>
            <para>
            <para>The names for your new instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstancesFromSnapshotCmdlet.InstanceSnapshotName">
            <summary>
            <para>
            <para>The name of the instance snapshot on which you are basing your new instances. Use
            the get instance snapshots operation to return information about your existing snapshots.</para><para>Constraint:</para><ul><li><para>This parameter cannot be defined together with the <code>source instance name</code>
            parameter. The <code>instance snapshot name</code> and <code>source instance name</code>
            parameters are mutually exclusive.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstancesFromSnapshotCmdlet.KeyPairName">
            <summary>
            <para>
            <para>The name for your key pair.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstancesFromSnapshotCmdlet.RestoreDate">
            <summary>
            <para>
            <para>The date of the automatic snapshot to use for the new instance. Use the <code>get
            auto snapshots</code> operation to identify the dates of the available automatic snapshots.</para><para>Constraints:</para><ul><li><para>Must be specified in <code>YYYY-MM-DD</code> format.</para></li><li><para>This parameter cannot be defined together with the <code>use latest restorable auto
            snapshot</code> parameter. The <code>restore date</code> and <code>use latest restorable
            auto snapshot</code> parameters are mutually exclusive.</para></li><li><para>Define this parameter only when creating a new instance from an automatic snapshot.
            For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail
            Dev Guide</a>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstancesFromSnapshotCmdlet.SourceInstanceName">
            <summary>
            <para>
            <para>The name of the source instance from which the source automatic snapshot was created.</para><para>Constraints:</para><ul><li><para>This parameter cannot be defined together with the <code>instance snapshot name</code>
            parameter. The <code>source instance name</code> and <code>instance snapshot name</code>
            parameters are mutually exclusive.</para></li><li><para>Define this parameter only when creating a new instance from an automatic snapshot.
            For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail
            Dev Guide</a>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstancesFromSnapshotCmdlet.Tag">
            <summary>
            <para>
            <para>The tag keys and optional values to add to the resource during create.</para><para>To tag a resource after it has been created, see the <code>tag resource</code> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstancesFromSnapshotCmdlet.UseLatestRestorableAutoSnapshot">
            <summary>
            <para>
            <para>A Boolean value to indicate whether to use the latest available automatic snapshot.</para><para>Constraints:</para><ul><li><para>This parameter cannot be defined together with the <code>restore date</code> parameter.
            The <code>use latest restorable auto snapshot</code> and <code>restore date</code>
            parameters are mutually exclusive.</para></li><li><para>Define this parameter only when creating a new instance from an automatic snapshot.
            For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail
            Dev Guide</a>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstancesFromSnapshotCmdlet.UserData">
            <summary>
            <para>
            <para>You can create a launch script that configures a server with additional user data.
            For example, <code>apt-get -y update</code>.</para><note><para>Depending on the machine image you choose, the command to get software on your instance
            varies. Amazon Linux and CentOS use <code>yum</code>, Debian and Ubuntu use <code>apt-get</code>,
            and FreeBSD uses <code>pkg</code>. For a complete list, see the <a href="https://lightsail.aws.amazon.com/ls/docs/getting-started/article/compare-options-choose-lightsail-instance-image">Dev
            Guide</a>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstancesFromSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.CreateInstancesFromSnapshotResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.CreateInstancesFromSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstancesFromSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstancesFromSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.NewLSInstanceSnapshotCmdlet">
            <summary>
            Creates a snapshot of a specific virtual private server, or <i>instance</i>. You can
            use a snapshot to create a new instance that is based on that snapshot.
            
             
            <para>
            The <code>create instance snapshot</code> operation supports tag-based access control
            via request tags. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstanceSnapshotCmdlet.InstanceName">
            <summary>
            <para>
            <para>The Lightsail instance on which to base your snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstanceSnapshotCmdlet.InstanceSnapshotName">
            <summary>
            <para>
            <para>The name for your new snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstanceSnapshotCmdlet.Tag">
            <summary>
            <para>
            <para>The tag keys and optional values to add to the resource during create.</para><para>To tag a resource after it has been created, see the <code>tag resource</code> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstanceSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.CreateInstanceSnapshotResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.CreateInstanceSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstanceSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSInstanceSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.NewLSKeyPairCmdlet">
            <summary>
            Creates an SSH key pair.
            
             
            <para>
            The <code>create key pair</code> operation supports tag-based access control via request
            tags. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSKeyPairCmdlet.KeyPairName">
            <summary>
            <para>
            <para>The name for your new key pair.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSKeyPairCmdlet.Tag">
            <summary>
            <para>
            <para>The tag keys and optional values to add to the resource during create.</para><para>To tag a resource after it has been created, see the <code>tag resource</code> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSKeyPairCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.CreateKeyPairResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.CreateKeyPairResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSKeyPairCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyPairName parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyPairName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSKeyPairCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.NewLSLoadBalancerCmdlet">
            <summary>
            Creates a Lightsail load balancer. To learn more about deciding whether to load balance
            your application, see <a href="https://lightsail.aws.amazon.com/ls/docs/how-to/article/configure-lightsail-instances-for-load-balancing">Configure
            your Lightsail instances for load balancing</a>. You can create up to 5 load balancers
            per AWS Region in your account.
            
             
            <para>
            When you create a load balancer, you can specify a unique name and port settings.
            To change additional load balancer settings, use the <code>UpdateLoadBalancerAttribute</code>
            operation.
            </para><para>
            The <code>create load balancer</code> operation supports tag-based access control
            via request tags. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSLoadBalancerCmdlet.CertificateAlternativeName">
            <summary>
            <para>
            <para>The optional alternative domains and subdomains to use with your SSL/TLS certificate
            (e.g., <code>www.example.com</code>, <code>example.com</code>, <code>m.example.com</code>,
            <code>blog.example.com</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSLoadBalancerCmdlet.CertificateDomainName">
            <summary>
            <para>
            <para>The domain name with which your certificate is associated (e.g., <code>example.com</code>).</para><para>If you specify <code>certificateDomainName</code>, then <code>certificateName</code>
            is required (and vice-versa).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSLoadBalancerCmdlet.CertificateName">
            <summary>
            <para>
            <para>The name of the SSL/TLS certificate.</para><para>If you specify <code>certificateName</code>, then <code>certificateDomainName</code>
            is required (and vice-versa).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSLoadBalancerCmdlet.HealthCheckPath">
            <summary>
            <para>
            <para>The path you provided to perform the load balancer health check. If you didn't specify
            a health check path, Lightsail uses the root path of your website (e.g., <code>"/"</code>).</para><para>You may want to specify a custom health check path other than the root of your application
            if your home page loads slowly or has a lot of media or scripting on it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSLoadBalancerCmdlet.InstancePort">
            <summary>
            <para>
            <para>The instance port where you're creating your load balancer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSLoadBalancerCmdlet.LoadBalancerName">
            <summary>
            <para>
            <para>The name of your load balancer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSLoadBalancerCmdlet.Tag">
            <summary>
            <para>
            <para>The tag keys and optional values to add to the resource during create.</para><para>To tag a resource after it has been created, see the <code>tag resource</code> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSLoadBalancerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.CreateLoadBalancerResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.CreateLoadBalancerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSLoadBalancerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LoadBalancerName parameter.
            The -PassThru parameter is deprecated, use -Select '^LoadBalancerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSLoadBalancerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.NewLSLoadBalancerTlsCertificateCmdlet">
            <summary>
            Creates a Lightsail load balancer TLS certificate.
            
             
            <para>
            TLS is just an updated, more secure version of Secure Socket Layer (SSL).
            </para><para>
            The <code>CreateLoadBalancerTlsCertificate</code> operation supports tag-based access
            control via resource tags applied to the resource identified by <code>load balancer
            name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSLoadBalancerTlsCertificateCmdlet.CertificateAlternativeName">
            <summary>
            <para>
            <para>An array of strings listing alternative domains and subdomains for your SSL/TLS certificate.
            Lightsail will de-dupe the names for you. You can have a maximum of 9 alternative
            names (in addition to the 1 primary domain). We do not support wildcards (e.g., <code>*.example.com</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSLoadBalancerTlsCertificateCmdlet.CertificateDomainName">
            <summary>
            <para>
            <para>The domain name (e.g., <code>example.com</code>) for your SSL/TLS certificate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSLoadBalancerTlsCertificateCmdlet.CertificateName">
            <summary>
            <para>
            <para>The SSL/TLS certificate name.</para><para>You can have up to 10 certificates in your account at one time. Each Lightsail load
            balancer can have up to 2 certificates associated with it at one time. There is also
            an overall limit to the number of certificates that can be issue in a 365-day period.
            For more information, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html">Limits</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSLoadBalancerTlsCertificateCmdlet.LoadBalancerName">
            <summary>
            <para>
            <para>The load balancer name where you want to create the SSL/TLS certificate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSLoadBalancerTlsCertificateCmdlet.Tag">
            <summary>
            <para>
            <para>The tag keys and optional values to add to the resource during create.</para><para>To tag a resource after it has been created, see the <code>tag resource</code> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSLoadBalancerTlsCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.CreateLoadBalancerTlsCertificateResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.CreateLoadBalancerTlsCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSLoadBalancerTlsCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateName parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSLoadBalancerTlsCertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseCmdlet">
            <summary>
            Creates a new database in Amazon Lightsail.
            
             
            <para>
            The <code>create relational database</code> operation supports tag-based access control
            via request tags. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>The Availability Zone in which to create your new database. Use the <code>us-east-2a</code>
            case-sensitive format.</para><para>You can get a list of Availability Zones by using the <code>get regions</code> operation.
            Be sure to add the <code>include relational database Availability Zones</code> parameter
            to your request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseCmdlet.MasterDatabaseName">
            <summary>
            <para>
            <para>The name of the master database created when the Lightsail database resource is created.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 64 alphanumeric characters.</para></li><li><para>Cannot be a word reserved by the specified database engine</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseCmdlet.MasterUsername">
            <summary>
            <para>
            <para>The master user name for your new database.</para><para>Constraints:</para><ul><li><para>Master user name is required.</para></li><li><para>Must contain from 1 to 16 alphanumeric characters.</para></li><li><para>The first character must be a letter.</para></li><li><para>Cannot be a reserved word for the database engine you choose.</para><para>For more information about reserved words in MySQL 5.6 or 5.7, see the Keywords and
            Reserved Words articles for <a href="https://dev.mysql.com/doc/refman/5.6/en/keywords.html">MySQL
            5.6</a> or <a href="https://dev.mysql.com/doc/refman/5.7/en/keywords.html">MySQL 5.7</a>
            respectively.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseCmdlet.MasterUserPassword">
            <summary>
            <para>
            <para>The password for the master user of your new database. The password can include any
            printable ASCII character except "/", """, or "@".</para><para>Constraints: Must contain 8 to 41 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseCmdlet.PreferredBackupWindow">
            <summary>
            <para>
            <para>The daily time range during which automated backups are created for your new database
            if automated backups are enabled.</para><para>The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region. For more information about the preferred backup window time blocks
            for each region, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow">Working
            With Backups</a> guide in the Amazon Relational Database Service (Amazon RDS) documentation.</para><para>Constraints:</para><ul><li><para>Must be in the <code>hh24:mi-hh24:mi</code> format.</para><para>Example: <code>16:00-16:30</code></para></li><li><para>Specified in Coordinated Universal Time (UTC).</para></li><li><para>Must not conflict with the preferred maintenance window.</para></li><li><para>Must be at least 30 minutes.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>The weekly time range during which system maintenance can occur on your new database.</para><para>The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region, occurring on a random day of the week.</para><para>Constraints:</para><ul><li><para>Must be in the <code>ddd:hh24:mi-ddd:hh24:mi</code> format.</para></li><li><para>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</para></li><li><para>Must be at least 30 minutes.</para></li><li><para>Specified in Coordinated Universal Time (UTC).</para></li><li><para>Example: <code>Tue:17:00-Tue:17:30</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseCmdlet.PubliclyAccessible">
            <summary>
            <para>
            <para>Specifies the accessibility options for your new database. A value of <code>true</code>
            specifies a database that is available to resources outside of your Lightsail account.
            A value of <code>false</code> specifies a database that is available only to your
            Lightsail resources in the same region as your database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseCmdlet.RelationalDatabaseBlueprintId">
            <summary>
            <para>
            <para>The blueprint ID for your new database. A blueprint describes the major engine version
            of a database.</para><para>You can get a list of database blueprints IDs by using the <code>get relational database
            blueprints</code> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseCmdlet.RelationalDatabaseBundleId">
            <summary>
            <para>
            <para>The bundle ID for your new database. A bundle describes the performance specifications
            for your database.</para><para>You can get a list of database bundle IDs by using the <code>get relational database
            bundles</code> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseCmdlet.RelationalDatabaseName">
            <summary>
            <para>
            <para>The name to use for your new database.</para><para>Constraints:</para><ul><li><para>Must contain from 2 to 255 alphanumeric characters, or hyphens.</para></li><li><para>The first and last character must be a letter or number.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseCmdlet.Tag">
            <summary>
            <para>
            <para>The tag keys and optional values to add to the resource during create.</para><para>To tag a resource after it has been created, see the <code>tag resource</code> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.CreateRelationalDatabaseResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.CreateRelationalDatabaseResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RelationalDatabaseName parameter.
            The -PassThru parameter is deprecated, use -Select '^RelationalDatabaseName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseFromSnapshotCmdlet">
            <summary>
            Creates a new database from an existing database snapshot in Amazon Lightsail.
            
             
            <para>
            You can create a new database from a snapshot in if something goes wrong with your
            original database, or to change it to a different plan, such as a high availability
            or standard plan.
            </para><para>
            The <code>create relational database from snapshot</code> operation supports tag-based
            access control via request tags and resource tags applied to the resource identified
            by relationalDatabaseSnapshotName. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseFromSnapshotCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>The Availability Zone in which to create your new database. Use the <code>us-east-2a</code>
            case-sensitive format.</para><para>You can get a list of Availability Zones by using the <code>get regions</code> operation.
            Be sure to add the <code>include relational database Availability Zones</code> parameter
            to your request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseFromSnapshotCmdlet.PubliclyAccessible">
            <summary>
            <para>
            <para>Specifies the accessibility options for your new database. A value of <code>true</code>
            specifies a database that is available to resources outside of your Lightsail account.
            A value of <code>false</code> specifies a database that is available only to your
            Lightsail resources in the same region as your database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseFromSnapshotCmdlet.RelationalDatabaseBundleId">
            <summary>
            <para>
            <para>The bundle ID for your new database. A bundle describes the performance specifications
            for your database.</para><para>You can get a list of database bundle IDs by using the <code>get relational database
            bundles</code> operation.</para><para>When creating a new database from a snapshot, you cannot choose a bundle that is smaller
            than the bundle of the source database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseFromSnapshotCmdlet.RelationalDatabaseName">
            <summary>
            <para>
            <para>The name to use for your new database.</para><para>Constraints:</para><ul><li><para>Must contain from 2 to 255 alphanumeric characters, or hyphens.</para></li><li><para>The first and last character must be a letter or number.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseFromSnapshotCmdlet.RelationalDatabaseSnapshotName">
            <summary>
            <para>
            <para>The name of the database snapshot from which to create your new database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseFromSnapshotCmdlet.RestoreTime">
            <summary>
            <para>
            <para>The date and time to restore your database from.</para><para>Constraints:</para><ul><li><para>Must be before the latest restorable time for the database.</para></li><li><para>Cannot be specified if the <code>use latest restorable time</code> parameter is <code>true</code>.</para></li><li><para>Specified in Coordinated Universal Time (UTC).</para></li><li><para>Specified in the Unix time format.</para><para>For example, if you wish to use a restore time of October 1, 2018, at 8 PM UTC, then
            you input <code>1538424000</code> as the restore time.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseFromSnapshotCmdlet.SourceRelationalDatabaseName">
            <summary>
            <para>
            <para>The name of the source database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseFromSnapshotCmdlet.Tag">
            <summary>
            <para>
            <para>The tag keys and optional values to add to the resource during create.</para><para>To tag a resource after it has been created, see the <code>tag resource</code> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseFromSnapshotCmdlet.UseLatestRestorableTime">
            <summary>
            <para>
            <para>Specifies whether your database is restored from the latest backup time. A value of
            <code>true</code> restores from the latest backup time. </para><para>Default: <code>false</code></para><para>Constraints: Cannot be specified if the <code>restore time</code> parameter is provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseFromSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.CreateRelationalDatabaseFromSnapshotResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.CreateRelationalDatabaseFromSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseFromSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RelationalDatabaseName parameter.
            The -PassThru parameter is deprecated, use -Select '^RelationalDatabaseName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseFromSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseSnapshotCmdlet">
            <summary>
            Creates a snapshot of your database in Amazon Lightsail. You can use snapshots for
            backups, to make copies of a database, and to save data before deleting a database.
            
             
            <para>
            The <code>create relational database snapshot</code> operation supports tag-based
            access control via request tags. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseSnapshotCmdlet.RelationalDatabaseName">
            <summary>
            <para>
            <para>The name of the database on which to base your new snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseSnapshotCmdlet.RelationalDatabaseSnapshotName">
            <summary>
            <para>
            <para>The name for your new database snapshot.</para><para>Constraints:</para><ul><li><para>Must contain from 2 to 255 alphanumeric characters, or hyphens.</para></li><li><para>The first and last character must be a letter or number.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseSnapshotCmdlet.Tag">
            <summary>
            <para>
            <para>The tag keys and optional values to add to the resource during create.</para><para>To tag a resource after it has been created, see the <code>tag resource</code> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.CreateRelationalDatabaseSnapshotResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.CreateRelationalDatabaseSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RelationalDatabaseSnapshotName parameter.
            The -PassThru parameter is deprecated, use -Select '^RelationalDatabaseSnapshotName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSRelationalDatabaseSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.NewLSStaticIpCmdlet">
            <summary>
            Allocates a static IP address.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSStaticIpCmdlet.StaticIpName">
            <summary>
            <para>
            <para>The name of the static IP address.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSStaticIpCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.AllocateStaticIpResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.AllocateStaticIpResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSStaticIpCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StaticIpName parameter.
            The -PassThru parameter is deprecated, use -Select '^StaticIpName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.NewLSStaticIpCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.OpenLSInstancePublicPortCmdlet">
            <summary>
            Opens ports for a specific Amazon Lightsail instance, and specifies the IP addresses
            allowed to connect to the instance through the ports, and the protocol.
            
             
            <para>
            The <code>OpenInstancePublicPorts</code> action supports tag-based access control
            via resource tags applied to the resource identified by <code>instanceName</code>.
            For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.OpenLSInstancePublicPortCmdlet.PortInfo_CidrListAlias">
            <summary>
            <para>
            <para>An alias that defines access for a preconfigured range of IP addresses.</para><para>The only alias currently supported is <code>lightsail-connect</code>, which allows
            IP addresses of the browser-based RDP/SSH client in the Lightsail console to connect
            to your instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.OpenLSInstancePublicPortCmdlet.PortInfo_Cidr">
            <summary>
            <para>
            <para>The IP address, or range of IP addresses in CIDR notation, that are allowed to connect
            to an instance through the ports, and the protocol. Lightsail supports IPv4 addresses.</para><para>Examples:</para><ul><li><para>To allow the IP address <code>192.0.2.44</code>, specify <code>192.0.2.44</code> or
            <code>192.0.2.44/32</code>. </para></li><li><para>To allow the IP addresses <code>192.0.2.0</code> to <code>192.0.2.255</code>, specify
            <code>192.0.2.0/24</code>.</para></li></ul><para>For more information about CIDR block notation, see <a href="https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation">Classless
            Inter-Domain Routing</a> on <i>Wikipedia</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.OpenLSInstancePublicPortCmdlet.PortInfo_FromPort">
            <summary>
            <para>
            <para>The first port in a range of open ports on an instance.</para><para>Allowed ports:</para><ul><li><para>TCP and UDP - <code>0</code> to <code>65535</code></para></li><li><para>ICMP - The ICMP type. For example, specify <code>8</code> as the <code>fromPort</code>
            (ICMP type), and <code>-1</code> as the <code>toPort</code> (ICMP code), to enable
            ICMP Ping. For more information, see <a href="https://en.wikipedia.org/wiki/Internet_Control_Message_Protocol#Control_messages">Control
            Messages</a> on <i>Wikipedia</i>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.OpenLSInstancePublicPortCmdlet.InstanceName">
            <summary>
            <para>
            <para>The name of the instance for which to open ports.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.OpenLSInstancePublicPortCmdlet.PortInfo_Protocol">
            <summary>
            <para>
            <para>The IP protocol name.</para><para>The name can be one of the following:</para><ul><li><para><code>tcp</code> - Transmission Control Protocol (TCP) provides reliable, ordered,
            and error-checked delivery of streamed data between applications running on hosts
            communicating by an IP network. If you have an application that doesn't require reliable
            data stream service, use UDP instead.</para></li><li><para><code>all</code> - All transport layer protocol types. For more general information,
            see <a href="https://en.wikipedia.org/wiki/Transport_layer">Transport layer</a> on
            <i>Wikipedia</i>.</para></li><li><para><code>udp</code> - With User Datagram Protocol (UDP), computer applications can send
            messages (or datagrams) to other hosts on an Internet Protocol (IP) network. Prior
            communications are not required to set up transmission channels or data paths. Applications
            that don't require reliable data stream service can use UDP, which provides a connectionless
            datagram service that emphasizes reduced latency over reliability. If you do require
            reliable data stream service, use TCP instead.</para></li><li><para><code>icmp</code> - Internet Control Message Protocol (ICMP) is used to send error
            messages and operational information indicating success or failure when communicating
            with an instance. For example, an error is indicated when an instance could not be
            reached. When you specify <code>icmp</code> as the <code>protocol</code>, you must
            specify the ICMP type using the <code>fromPort</code> parameter, and ICMP code using
            the <code>toPort</code> parameter.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.OpenLSInstancePublicPortCmdlet.PortInfo_ToPort">
            <summary>
            <para>
            <para>The last port in a range of open ports on an instance.</para><para>Allowed ports:</para><ul><li><para>TCP and UDP - <code>0</code> to <code>65535</code></para></li><li><para>ICMP - The ICMP code. For example, specify <code>8</code> as the <code>fromPort</code>
            (ICMP type), and <code>-1</code> as the <code>toPort</code> (ICMP code), to enable
            ICMP Ping. For more information, see <a href="https://en.wikipedia.org/wiki/Internet_Control_Message_Protocol#Control_messages">Control
            Messages</a> on <i>Wikipedia</i>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.OpenLSInstancePublicPortCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.OpenInstancePublicPortsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.OpenInstancePublicPortsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.OpenLSInstancePublicPortCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.OpenLSInstancePublicPortCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.ReadLSDefaultKeyPairCmdlet">
            <summary>
            Downloads the default SSH key pair from the user's account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.ReadLSDefaultKeyPairCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.DownloadDefaultKeyPairResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.DownloadDefaultKeyPairResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.ReadLSDefaultKeyPairCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.RemoveLSAlarmCmdlet">
            <summary>
            Deletes an alarm.
            
             
            <para>
            An alarm is used to monitor a single metric for one of your resources. When a metric
            condition is met, the alarm can notify you by email, SMS text message, and a banner
            displayed on the Amazon Lightsail console. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms">Alarms
            in Amazon Lightsail</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSAlarmCmdlet.AlarmName">
            <summary>
            <para>
            <para>The name of the alarm to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSAlarmCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.DeleteAlarmResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.DeleteAlarmResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSAlarmCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AlarmName parameter.
            The -PassThru parameter is deprecated, use -Select '^AlarmName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSAlarmCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.RemoveLSAutoSnapshotCmdlet">
            <summary>
            Deletes an automatic snapshot of an instance or disk. For more information, see the
            <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail
            Dev Guide</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSAutoSnapshotCmdlet.Date">
            <summary>
            <para>
            <para>The date of the automatic snapshot to delete in <code>YYYY-MM-DD</code> format. Use
            the <code>get auto snapshots</code> operation to get the available automatic snapshots
            for a resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSAutoSnapshotCmdlet.ResourceName">
            <summary>
            <para>
            <para>The name of the source instance or disk from which to delete the automatic snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSAutoSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.DeleteAutoSnapshotResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.DeleteAutoSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSAutoSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Date parameter.
            The -PassThru parameter is deprecated, use -Select '^Date' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSAutoSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.RemoveLSContactMethodCmdlet">
            <summary>
            Deletes a contact method.
            
             
            <para>
            A contact method is used to send you notifications about your Amazon Lightsail resources.
            You can add one email address and one mobile phone number contact method in each AWS
            Region. However, SMS text messaging is not supported in some AWS Regions, and SMS
            text messages cannot be sent to some countries/regions. For more information, see
            <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-notifications">Notifications
            in Amazon Lightsail</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSContactMethodCmdlet.Protocol">
            <summary>
            <para>
            <para>The protocol that will be deleted, such as <code>Email</code> or <code>SMS</code>
            (text messaging).</para><note><para>To delete an <code>Email</code> and an <code>SMS</code> contact method if you added
            both, you must run separate <code>DeleteContactMethod</code> actions to delete each
            protocol.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSContactMethodCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.DeleteContactMethodResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.DeleteContactMethodResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSContactMethodCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Protocol parameter.
            The -PassThru parameter is deprecated, use -Select '^Protocol' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSContactMethodCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.RemoveLSDiskCmdlet">
            <summary>
            Deletes the specified block storage disk. The disk must be in the <code>available</code>
            state (not attached to a Lightsail instance).
            
             <note><para>
            The disk may remain in the <code>deleting</code> state for several minutes.
            </para></note><para>
            The <code>delete disk</code> operation supports tag-based access control via resource
            tags applied to the resource identified by <code>disk name</code>. For more information,
            see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDiskCmdlet.DiskName">
            <summary>
            <para>
            <para>The unique name of the disk you want to delete (e.g., <code>my-disk</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDiskCmdlet.ForceDeleteAddOn">
            <summary>
            <para>
            <para>A Boolean value to indicate whether to delete the enabled add-ons for the disk.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDiskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.DeleteDiskResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.DeleteDiskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDiskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DiskName parameter.
            The -PassThru parameter is deprecated, use -Select '^DiskName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDiskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.RemoveLSDiskSnapshotCmdlet">
            <summary>
            Deletes the specified disk snapshot.
            
             
            <para>
            When you make periodic snapshots of a disk, the snapshots are incremental, and only
            the blocks on the device that have changed since your last snapshot are saved in the
            new snapshot. When you delete a snapshot, only the data not needed for any other snapshot
            is removed. So regardless of which prior snapshots have been deleted, all active snapshots
            will have access to all the information needed to restore the disk.
            </para><para>
            The <code>delete disk snapshot</code> operation supports tag-based access control
            via resource tags applied to the resource identified by <code>disk snapshot name</code>.
            For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDiskSnapshotCmdlet.DiskSnapshotName">
            <summary>
            <para>
            <para>The name of the disk snapshot you want to delete (e.g., <code>my-disk-snapshot</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDiskSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.DeleteDiskSnapshotResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.DeleteDiskSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDiskSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DiskSnapshotName parameter.
            The -PassThru parameter is deprecated, use -Select '^DiskSnapshotName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDiskSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.RemoveLSDomainCmdlet">
            <summary>
            Deletes the specified domain recordset and all of its domain records.
            
             
            <para>
            The <code>delete domain</code> operation supports tag-based access control via resource
            tags applied to the resource identified by <code>domain name</code>. For more information,
            see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDomainCmdlet.DomainName">
            <summary>
            <para>
            <para>The specific domain name to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.DeleteDomainResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.DeleteDomainResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DomainName parameter.
            The -PassThru parameter is deprecated, use -Select '^DomainName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDomainCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.RemoveLSDomainEntryCmdlet">
            <summary>
            Deletes a specific domain entry.
            
             
            <para>
            The <code>delete domain entry</code> operation supports tag-based access control via
            resource tags applied to the resource identified by <code>domain name</code>. For
            more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDomainEntryCmdlet.DomainName">
            <summary>
            <para>
            <para>The name of the domain entry to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDomainEntryCmdlet.DomainEntry_Id">
            <summary>
            <para>
            <para>The ID of the domain recordset entry.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDomainEntryCmdlet.DomainEntry_IsAlias">
            <summary>
            <para>
            <para>When <code>true</code>, specifies whether the domain entry is an alias used by the
            Lightsail load balancer. You can include an alias (A type) record in your request,
            which points to a load balancer DNS name and routes traffic to your load balancer</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDomainEntryCmdlet.DomainEntry_Name">
            <summary>
            <para>
            <para>The name of the domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDomainEntryCmdlet.DomainEntry_Target">
            <summary>
            <para>
            <para>The target AWS name server (e.g., <code>ns-111.awsdns-22.com.</code>).</para><para>For Lightsail load balancers, the value looks like <code>ab1234c56789c6b86aba6fb203d443bc-123456789.us-east-2.elb.amazonaws.com</code>.
            Be sure to also set <code>isAlias</code> to <code>true</code> when setting up an A
            record for a load balancer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDomainEntryCmdlet.DomainEntry_Type">
            <summary>
            <para>
            <para>The type of domain entry, such as address (A), canonical name (CNAME), mail exchanger
            (MX), name server (NS), start of authority (SOA), service locator (SRV), or text (TXT).</para><para>The following domain entry types can be used:</para><ul><li><para><code>A</code></para></li><li><para><code>CNAME</code></para></li><li><para><code>MX</code></para></li><li><para><code>NS</code></para></li><li><para><code>SOA</code></para></li><li><para><code>SRV</code></para></li><li><para><code>TXT</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDomainEntryCmdlet.DomainEntry_Option">
            <summary>
            <para>
            <para>(Deprecated) The options for the domain entry.</para><note><para>In releases prior to November 29, 2017, this parameter was not included in the API
            response. It is now deprecated.</para></note>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDomainEntryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.DeleteDomainEntryResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.DeleteDomainEntryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDomainEntryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DomainName parameter.
            The -PassThru parameter is deprecated, use -Select '^DomainName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSDomainEntryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.RemoveLSInstanceCmdlet">
            <summary>
            Deletes an Amazon Lightsail instance.
            
             
            <para>
            The <code>delete instance</code> operation supports tag-based access control via resource
            tags applied to the resource identified by <code>instance name</code>. For more information,
            see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSInstanceCmdlet.ForceDeleteAddOn">
            <summary>
            <para>
            <para>A Boolean value to indicate whether to delete the enabled add-ons for the disk.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSInstanceCmdlet.InstanceName">
            <summary>
            <para>
            <para>The name of the instance to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.DeleteInstanceResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.DeleteInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.RemoveLSInstanceSnapshotCmdlet">
            <summary>
            Deletes a specific snapshot of a virtual private server (or <i>instance</i>).
            
             
            <para>
            The <code>delete instance snapshot</code> operation supports tag-based access control
            via resource tags applied to the resource identified by <code>instance snapshot name</code>.
            For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSInstanceSnapshotCmdlet.InstanceSnapshotName">
            <summary>
            <para>
            <para>The name of the snapshot to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSInstanceSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.DeleteInstanceSnapshotResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.DeleteInstanceSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSInstanceSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceSnapshotName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceSnapshotName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSInstanceSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.RemoveLSKeyPairCmdlet">
            <summary>
            Deletes a specific SSH key pair.
            
             
            <para>
            The <code>delete key pair</code> operation supports tag-based access control via resource
            tags applied to the resource identified by <code>key pair name</code>. For more information,
            see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSKeyPairCmdlet.KeyPairName">
            <summary>
            <para>
            <para>The name of the key pair to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSKeyPairCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.DeleteKeyPairResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.DeleteKeyPairResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSKeyPairCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyPairName parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyPairName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSKeyPairCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.RemoveLSKnownHostKeyCmdlet">
            <summary>
            Deletes the known host key or certificate used by the Amazon Lightsail browser-based
            SSH or RDP clients to authenticate an instance. This operation enables the Lightsail
            browser-based SSH or RDP clients to connect to the instance after a host key mismatch.
            
             <important><para>
            Perform this operation only if you were expecting the host key or certificate mismatch
            or if you are familiar with the new host key or certificate on the instance. For more
            information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-troubleshooting-browser-based-ssh-rdp-client-connection">Troubleshooting
            connection issues when using the Amazon Lightsail browser-based SSH or RDP client</a>.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSKnownHostKeyCmdlet.InstanceName">
            <summary>
            <para>
            <para>The name of the instance for which you want to reset the host key or certificate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSKnownHostKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.DeleteKnownHostKeysResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.DeleteKnownHostKeysResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSKnownHostKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSKnownHostKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.RemoveLSLoadBalancerCmdlet">
            <summary>
            Deletes a Lightsail load balancer and all its associated SSL/TLS certificates. Once
            the load balancer is deleted, you will need to create a new load balancer, create
            a new certificate, and verify domain ownership again.
            
             
            <para>
            The <code>delete load balancer</code> operation supports tag-based access control
            via resource tags applied to the resource identified by <code>load balancer name</code>.
            For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSLoadBalancerCmdlet.LoadBalancerName">
            <summary>
            <para>
            <para>The name of the load balancer you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSLoadBalancerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.DeleteLoadBalancerResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.DeleteLoadBalancerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSLoadBalancerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LoadBalancerName parameter.
            The -PassThru parameter is deprecated, use -Select '^LoadBalancerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSLoadBalancerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.RemoveLSLoadBalancerTlsCertificateCmdlet">
            <summary>
            Deletes an SSL/TLS certificate associated with a Lightsail load balancer.
            
             
            <para>
            The <code>DeleteLoadBalancerTlsCertificate</code> operation supports tag-based access
            control via resource tags applied to the resource identified by <code>load balancer
            name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSLoadBalancerTlsCertificateCmdlet.CertificateName">
            <summary>
            <para>
            <para>The SSL/TLS certificate name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSLoadBalancerTlsCertificateCmdlet.DeleteWithForce">
            <summary>
            <para>
            <para>When <code>true</code>, forces the deletion of an SSL/TLS certificate.</para><para>There can be two certificates associated with a Lightsail load balancer: the primary
            and the backup. The <code>force</code> parameter is required when the primary SSL/TLS
            certificate is in use by an instance attached to the load balancer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSLoadBalancerTlsCertificateCmdlet.LoadBalancerName">
            <summary>
            <para>
            <para>The load balancer name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSLoadBalancerTlsCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.DeleteLoadBalancerTlsCertificateResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.DeleteLoadBalancerTlsCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSLoadBalancerTlsCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateName parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSLoadBalancerTlsCertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.RemoveLSPeerVpcCmdlet">
            <summary>
            Attempts to unpeer the Lightsail VPC from the user's default VPC.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSPeerVpcCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.UnpeerVpcResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.UnpeerVpcResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSPeerVpcCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.RemoveLSRelationalDatabaseCmdlet">
            <summary>
            Deletes a database in Amazon Lightsail.
            
             
            <para>
            The <code>delete relational database</code> operation supports tag-based access control
            via resource tags applied to the resource identified by relationalDatabaseName. For
            more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSRelationalDatabaseCmdlet.FinalRelationalDatabaseSnapshotName">
            <summary>
            <para>
            <para>The name of the database snapshot created if <code>skip final snapshot</code> is <code>false</code>,
            which is the default value for that parameter.</para><note><para>Specifying this parameter and also specifying the <code>skip final snapshot</code>
            parameter to <code>true</code> results in an error.</para></note><para>Constraints:</para><ul><li><para>Must contain from 2 to 255 alphanumeric characters, or hyphens.</para></li><li><para>The first and last character must be a letter or number.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSRelationalDatabaseCmdlet.RelationalDatabaseName">
            <summary>
            <para>
            <para>The name of the database that you are deleting.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSRelationalDatabaseCmdlet.SkipFinalSnapshot">
            <summary>
            <para>
            <para>Determines whether a final database snapshot is created before your database is deleted.
            If <code>true</code> is specified, no database snapshot is created. If <code>false</code>
            is specified, a database snapshot is created before your database is deleted.</para><para>You must specify the <code>final relational database snapshot name</code> parameter
            if the <code>skip final snapshot</code> parameter is <code>false</code>.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSRelationalDatabaseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.DeleteRelationalDatabaseResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.DeleteRelationalDatabaseResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSRelationalDatabaseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RelationalDatabaseName parameter.
            The -PassThru parameter is deprecated, use -Select '^RelationalDatabaseName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSRelationalDatabaseCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.RemoveLSRelationalDatabaseSnapshotCmdlet">
            <summary>
            Deletes a database snapshot in Amazon Lightsail.
            
             
            <para>
            The <code>delete relational database snapshot</code> operation supports tag-based
            access control via resource tags applied to the resource identified by relationalDatabaseName.
            For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSRelationalDatabaseSnapshotCmdlet.RelationalDatabaseSnapshotName">
            <summary>
            <para>
            <para>The name of the database snapshot that you are deleting.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSRelationalDatabaseSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.DeleteRelationalDatabaseSnapshotResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.DeleteRelationalDatabaseSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSRelationalDatabaseSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RelationalDatabaseSnapshotName parameter.
            The -PassThru parameter is deprecated, use -Select '^RelationalDatabaseSnapshotName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSRelationalDatabaseSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.RemoveLSResourceTagCmdlet">
            <summary>
            Deletes the specified set of tag keys and their values from the specified Amazon Lightsail
            resource.
            
             
            <para>
            The <code>untag resource</code> operation supports tag-based access control via request
            tags and resource tags applied to the resource identified by <code>resource name</code>.
            For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource from which you want to remove a tag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSResourceTagCmdlet.ResourceName">
            <summary>
            <para>
            <para>The name of the resource from which you are removing a tag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The tag keys to delete from the specified resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.UntagResourceResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.UntagResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceName parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.RemoveLSStaticIpCmdlet">
            <summary>
            Deletes a specific static IP from your account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSStaticIpCmdlet.StaticIpName">
            <summary>
            <para>
            <para>The name of the static IP to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSStaticIpCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.ReleaseStaticIpResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.ReleaseStaticIpResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSStaticIpCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StaticIpName parameter.
            The -PassThru parameter is deprecated, use -Select '^StaticIpName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RemoveLSStaticIpCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.RestartLSInstanceCmdlet">
            <summary>
            Restarts a specific instance.
            
             
            <para>
            The <code>reboot instance</code> operation supports tag-based access control via resource
            tags applied to the resource identified by <code>instance name</code>. For more information,
            see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RestartLSInstanceCmdlet.InstanceName">
            <summary>
            <para>
            <para>The name of the instance to reboot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RestartLSInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.RebootInstanceResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.RebootInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RestartLSInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RestartLSInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.RestartLSRelationalDatabaseCmdlet">
            <summary>
            Restarts a specific database in Amazon Lightsail.
            
             
            <para>
            The <code>reboot relational database</code> operation supports tag-based access control
            via resource tags applied to the resource identified by relationalDatabaseName. For
            more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RestartLSRelationalDatabaseCmdlet.RelationalDatabaseName">
            <summary>
            <para>
            <para>The name of your database to reboot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RestartLSRelationalDatabaseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.RebootRelationalDatabaseResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.RebootRelationalDatabaseResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RestartLSRelationalDatabaseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RelationalDatabaseName parameter.
            The -PassThru parameter is deprecated, use -Select '^RelationalDatabaseName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.RestartLSRelationalDatabaseCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.SendLSContactMethodVerificationCmdlet">
            <summary>
            Sends a verification request to an email contact method to ensure it's owned by the
            requester. SMS contact methods don't need to be verified.
            
             
            <para>
            A contact method is used to send you notifications about your Amazon Lightsail resources.
            You can add one email address and one mobile phone number contact method in each AWS
            Region. However, SMS text messaging is not supported in some AWS Regions, and SMS
            text messages cannot be sent to some countries/regions. For more information, see
            <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-notifications">Notifications
            in Amazon Lightsail</a>.
            </para><para>
            A verification request is sent to the contact method when you initially create it.
            Use this action to send another verification request if a previous verification request
            was deleted, or has expired.
            </para><important><para>
            Notifications are not sent to an email contact method until after it is verified,
            and confirmed as valid.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.SendLSContactMethodVerificationCmdlet.Protocol">
            <summary>
            <para>
            <para>The protocol to verify, such as <code>Email</code> or <code>SMS</code> (text messaging).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.SendLSContactMethodVerificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.SendContactMethodVerificationResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.SendContactMethodVerificationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.SendLSContactMethodVerificationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Protocol parameter.
            The -PassThru parameter is deprecated, use -Select '^Protocol' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.SendLSContactMethodVerificationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.SetLSInstancePublicPortCmdlet">
            <summary>
            Opens ports for a specific Amazon Lightsail instance, and specifies the IP addresses
            allowed to connect to the instance through the ports, and the protocol. This action
            also closes all currently open ports that are not included in the request. Include
            all of the ports and the protocols you want to open in your <code>PutInstancePublicPorts</code>request.
            Or use the <code>OpenInstancePublicPorts</code> action to open ports without closing
            currently open ports.
            
             
            <para>
            The <code>PutInstancePublicPorts</code> action supports tag-based access control via
            resource tags applied to the resource identified by <code>instanceName</code>. For
            more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.SetLSInstancePublicPortCmdlet.InstanceName">
            <summary>
            <para>
            <para>The name of the instance for which to open ports.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.SetLSInstancePublicPortCmdlet.PortInfo">
            <summary>
            <para>
            <para>An array of objects to describe the ports to open for the specified instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.SetLSInstancePublicPortCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.PutInstancePublicPortsResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.PutInstancePublicPortsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.SetLSInstancePublicPortCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.SetLSInstancePublicPortCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.StartLSInstanceCmdlet">
            <summary>
            Starts a specific Amazon Lightsail instance from a stopped state. To restart an instance,
            use the <code>reboot instance</code> operation.
            
             <note><para>
            When you start a stopped instance, Lightsail assigns a new public IP address to the
            instance. To use the same IP address after stopping and starting an instance, create
            a static IP address and attach it to the instance. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/lightsail-create-static-ip">Lightsail
            Dev Guide</a>.
            </para></note><para>
            The <code>start instance</code> operation supports tag-based access control via resource
            tags applied to the resource identified by <code>instance name</code>. For more information,
            see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.StartLSInstanceCmdlet.InstanceName">
            <summary>
            <para>
            <para>The name of the instance (a virtual private server) to start.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.StartLSInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.StartInstanceResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.StartInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.StartLSInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.StartLSInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.StartLSRelationalDatabaseCmdlet">
            <summary>
            Starts a specific database from a stopped state in Amazon Lightsail. To restart a
            database, use the <code>reboot relational database</code> operation.
            
             
            <para>
            The <code>start relational database</code> operation supports tag-based access control
            via resource tags applied to the resource identified by relationalDatabaseName. For
            more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.StartLSRelationalDatabaseCmdlet.RelationalDatabaseName">
            <summary>
            <para>
            <para>The name of your database to start.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.StartLSRelationalDatabaseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.StartRelationalDatabaseResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.StartRelationalDatabaseResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.StartLSRelationalDatabaseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RelationalDatabaseName parameter.
            The -PassThru parameter is deprecated, use -Select '^RelationalDatabaseName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.StartLSRelationalDatabaseCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.StopLSInstanceCmdlet">
            <summary>
            Stops a specific Amazon Lightsail instance that is currently running.
            
             <note><para>
            When you start a stopped instance, Lightsail assigns a new public IP address to the
            instance. To use the same IP address after stopping and starting an instance, create
            a static IP address and attach it to the instance. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/lightsail-create-static-ip">Lightsail
            Dev Guide</a>.
            </para></note><para>
            The <code>stop instance</code> operation supports tag-based access control via resource
            tags applied to the resource identified by <code>instance name</code>. For more information,
            see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.StopLSInstanceCmdlet.OverrideStuck">
            <summary>
            <para>
            <para>When set to <code>True</code>, forces a Lightsail instance that is stuck in a <code>stopping</code>
            state to stop.</para><important><para>Only use the <code>force</code> parameter if your instance is stuck in the <code>stopping</code>
            state. In any other state, your instance should stop normally without adding this
            parameter to your API request.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.StopLSInstanceCmdlet.InstanceName">
            <summary>
            <para>
            <para>The name of the instance (a virtual private server) to stop.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.StopLSInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.StopInstanceResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.StopInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.StopLSInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.StopLSInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.StopLSRelationalDatabaseCmdlet">
            <summary>
            Stops a specific database that is currently running in Amazon Lightsail.
            
             
            <para>
            The <code>stop relational database</code> operation supports tag-based access control
            via resource tags applied to the resource identified by relationalDatabaseName. For
            more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.StopLSRelationalDatabaseCmdlet.RelationalDatabaseName">
            <summary>
            <para>
            <para>The name of your database to stop.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.StopLSRelationalDatabaseCmdlet.RelationalDatabaseSnapshotName">
            <summary>
            <para>
            <para>The name of your new database snapshot to be created before stopping your database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.StopLSRelationalDatabaseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.StopRelationalDatabaseResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.StopRelationalDatabaseResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.StopLSRelationalDatabaseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RelationalDatabaseName parameter.
            The -PassThru parameter is deprecated, use -Select '^RelationalDatabaseName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.StopLSRelationalDatabaseCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.TestLSAlarmCmdlet">
            <summary>
            Tests an alarm by displaying a banner on the Amazon Lightsail console. If a notification
            trigger is configured for the specified alarm, the test also sends a notification
            to the notification protocol (<code>Email</code> and/or <code>SMS</code>) configured
            for the alarm.
            
             
            <para>
            An alarm is used to monitor a single metric for one of your resources. When a metric
            condition is met, the alarm can notify you by email, SMS text message, and a banner
            displayed on the Amazon Lightsail console. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms">Alarms
            in Amazon Lightsail</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.TestLSAlarmCmdlet.AlarmName">
            <summary>
            <para>
            <para>The name of the alarm to test.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.TestLSAlarmCmdlet.State">
            <summary>
            <para>
            <para>The alarm state to test.</para><para>An alarm has the following possible states that can be tested:</para><ul><li><para><code>ALARM</code> - The metric is outside of the defined threshold.</para></li><li><para><code>INSUFFICIENT_DATA</code> - The alarm has just started, the metric is not available,
            or not enough data is available for the metric to determine the alarm state.</para></li><li><para><code>OK</code> - The metric is within the defined threshold.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.TestLSAlarmCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.TestAlarmResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.TestAlarmResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.TestLSAlarmCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AlarmName parameter.
            The -PassThru parameter is deprecated, use -Select '^AlarmName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.TestLSVpcPeeredCmdlet">
            <summary>
            Returns a Boolean value indicating whether your Lightsail VPC is peered.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.TestLSVpcPeeredCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IsPeered'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.IsVpcPeeredResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.IsVpcPeeredResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.UpdateLSDomainEntryCmdlet">
            <summary>
            Updates a domain recordset after it is created.
            
             
            <para>
            The <code>update domain entry</code> operation supports tag-based access control via
            resource tags applied to the resource identified by <code>domain name</code>. For
            more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSDomainEntryCmdlet.DomainName">
            <summary>
            <para>
            <para>The name of the domain recordset to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSDomainEntryCmdlet.DomainEntry_Id">
            <summary>
            <para>
            <para>The ID of the domain recordset entry.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSDomainEntryCmdlet.DomainEntry_IsAlias">
            <summary>
            <para>
            <para>When <code>true</code>, specifies whether the domain entry is an alias used by the
            Lightsail load balancer. You can include an alias (A type) record in your request,
            which points to a load balancer DNS name and routes traffic to your load balancer</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSDomainEntryCmdlet.DomainEntry_Name">
            <summary>
            <para>
            <para>The name of the domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSDomainEntryCmdlet.DomainEntry_Target">
            <summary>
            <para>
            <para>The target AWS name server (e.g., <code>ns-111.awsdns-22.com.</code>).</para><para>For Lightsail load balancers, the value looks like <code>ab1234c56789c6b86aba6fb203d443bc-123456789.us-east-2.elb.amazonaws.com</code>.
            Be sure to also set <code>isAlias</code> to <code>true</code> when setting up an A
            record for a load balancer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSDomainEntryCmdlet.DomainEntry_Type">
            <summary>
            <para>
            <para>The type of domain entry, such as address (A), canonical name (CNAME), mail exchanger
            (MX), name server (NS), start of authority (SOA), service locator (SRV), or text (TXT).</para><para>The following domain entry types can be used:</para><ul><li><para><code>A</code></para></li><li><para><code>CNAME</code></para></li><li><para><code>MX</code></para></li><li><para><code>NS</code></para></li><li><para><code>SOA</code></para></li><li><para><code>SRV</code></para></li><li><para><code>TXT</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSDomainEntryCmdlet.DomainEntry_Option">
            <summary>
            <para>
            <para>(Deprecated) The options for the domain entry.</para><note><para>In releases prior to November 29, 2017, this parameter was not included in the API
            response. It is now deprecated.</para></note>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSDomainEntryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.UpdateDomainEntryResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.UpdateDomainEntryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSDomainEntryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DomainName parameter.
            The -PassThru parameter is deprecated, use -Select '^DomainName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSDomainEntryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.UpdateLSLoadBalancerAttributeCmdlet">
            <summary>
            Updates the specified attribute for a load balancer. You can only update one attribute
            at a time.
            
             
            <para>
            The <code>update load balancer attribute</code> operation supports tag-based access
            control via resource tags applied to the resource identified by <code>load balancer
            name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSLoadBalancerAttributeCmdlet.AttributeName">
            <summary>
            <para>
            <para>The name of the attribute you want to update. Valid values are below.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSLoadBalancerAttributeCmdlet.AttributeValue">
            <summary>
            <para>
            <para>The value that you want to specify for the attribute name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSLoadBalancerAttributeCmdlet.LoadBalancerName">
            <summary>
            <para>
            <para>The name of the load balancer that you want to modify (e.g., <code>my-load-balancer</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSLoadBalancerAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.UpdateLoadBalancerAttributeResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.UpdateLoadBalancerAttributeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSLoadBalancerAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LoadBalancerName parameter.
            The -PassThru parameter is deprecated, use -Select '^LoadBalancerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSLoadBalancerAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.UpdateLSRelationalDatabaseCmdlet">
            <summary>
            Allows the update of one or more attributes of a database in Amazon Lightsail.
            
             
            <para>
            Updates are applied immediately, or in cases where the updates could result in an
            outage, are applied during the database's predefined maintenance window.
            </para><para>
            The <code>update relational database</code> operation supports tag-based access control
            via resource tags applied to the resource identified by relationalDatabaseName. For
            more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSRelationalDatabaseCmdlet.ApplyImmediately">
            <summary>
            <para>
            <para>When <code>true</code>, applies changes immediately. When <code>false</code>, applies
            changes during the preferred maintenance window. Some changes may cause an outage.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSRelationalDatabaseCmdlet.CaCertificateIdentifier">
            <summary>
            <para>
            <para>Indicates the certificate that needs to be associated with the database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSRelationalDatabaseCmdlet.DisableBackupRetention">
            <summary>
            <para>
            <para>When <code>true</code>, disables automated backup retention for your database.</para><para>Disabling backup retention deletes all automated database backups. Before disabling
            this, you may want to create a snapshot of your database using the <code>create relational
            database snapshot</code> operation.</para><para>Updates are applied during the next maintenance window because this can result in
            an outage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSRelationalDatabaseCmdlet.EnableBackupRetention">
            <summary>
            <para>
            <para>When <code>true</code>, enables automated backup retention for your database.</para><para>Updates are applied during the next maintenance window because this can result in
            an outage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSRelationalDatabaseCmdlet.MasterUserPassword">
            <summary>
            <para>
            <para>The password for the master user of your database. The password can include any printable
            ASCII character except "/", """, or "@".</para><para>Constraints: Must contain 8 to 41 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSRelationalDatabaseCmdlet.PreferredBackupWindow">
            <summary>
            <para>
            <para>The daily time range during which automated backups are created for your database
            if automated backups are enabled.</para><para>Constraints:</para><ul><li><para>Must be in the <code>hh24:mi-hh24:mi</code> format.</para><para>Example: <code>16:00-16:30</code></para></li><li><para>Specified in Coordinated Universal Time (UTC).</para></li><li><para>Must not conflict with the preferred maintenance window.</para></li><li><para>Must be at least 30 minutes.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSRelationalDatabaseCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>The weekly time range during which system maintenance can occur on your database.</para><para>The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region, occurring on a random day of the week.</para><para>Constraints:</para><ul><li><para>Must be in the <code>ddd:hh24:mi-ddd:hh24:mi</code> format.</para></li><li><para>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</para></li><li><para>Must be at least 30 minutes.</para></li><li><para>Specified in Coordinated Universal Time (UTC).</para></li><li><para>Example: <code>Tue:17:00-Tue:17:30</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSRelationalDatabaseCmdlet.PubliclyAccessible">
            <summary>
            <para>
            <para>Specifies the accessibility options for your database. A value of <code>true</code>
            specifies a database that is available to resources outside of your Lightsail account.
            A value of <code>false</code> specifies a database that is available only to your
            Lightsail resources in the same region as your database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSRelationalDatabaseCmdlet.RelationalDatabaseName">
            <summary>
            <para>
            <para>The name of your database to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSRelationalDatabaseCmdlet.RotateMasterUserPassword">
            <summary>
            <para>
            <para>When <code>true</code>, the master user password is changed to a new strong password
            generated by Lightsail.</para><para>Use the <code>get relational database master user password</code> operation to get
            the new password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSRelationalDatabaseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.UpdateRelationalDatabaseResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.UpdateRelationalDatabaseResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSRelationalDatabaseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RelationalDatabaseName parameter.
            The -PassThru parameter is deprecated, use -Select '^RelationalDatabaseName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSRelationalDatabaseCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LS.UpdateLSRelationalDatabaseParameterCmdlet">
            <summary>
            Allows the update of one or more parameters of a database in Amazon Lightsail.
            
             
            <para>
            Parameter updates don't cause outages; therefore, their application is not subject
            to the preferred maintenance window. However, there are two ways in which parameter
            updates are applied: <code>dynamic</code> or <code>pending-reboot</code>. Parameters
            marked with a <code>dynamic</code> apply type are applied immediately. Parameters
            marked with a <code>pending-reboot</code> apply type are applied only after the database
            is rebooted using the <code>reboot relational database</code> operation.
            </para><para>
            The <code>update relational database parameters</code> operation supports tag-based
            access control via resource tags applied to the resource identified by relationalDatabaseName.
            For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
            Dev Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSRelationalDatabaseParameterCmdlet.Parameter">
            <summary>
            <para>
            <para>The database parameters to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSRelationalDatabaseParameterCmdlet.RelationalDatabaseName">
            <summary>
            <para>
            <para>The name of your database for which to update parameters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSRelationalDatabaseParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Lightsail.Model.UpdateRelationalDatabaseParametersResponse).
            Specifying the name of a property of type Amazon.Lightsail.Model.UpdateRelationalDatabaseParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSRelationalDatabaseParameterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RelationalDatabaseName parameter.
            The -PassThru parameter is deprecated, use -Select '^RelationalDatabaseName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LS.UpdateLSRelationalDatabaseParameterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
