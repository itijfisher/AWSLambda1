<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.DirectConnect</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.AddDCResourceTagCmdlet">
            <summary>
            Adds the specified tags to the specified AWS Direct Connect resource. Each resource
            can have a maximum of 50 tags.
            
             
            <para>
            Each tag consists of a key and an optional value. If a tag with the same key is already
            associated with the resource, this action updates its value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.AddDCResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.AddDCResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to add.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.AddDCResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.AddDCResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.AddDCResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.ConfirmDCConnectionCmdlet">
            <summary>
            Confirms the creation of the specified hosted connection on an interconnect.
            
             
            <para>
            Upon creation, the hosted connection is initially in the <code>Ordering</code> state,
            and remains in this state until the owner confirms creation of the hosted connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCConnectionCmdlet.ConnectionId">
            <summary>
            <para>
            <para>The ID of the hosted connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ConnectionState'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.ConfirmConnectionResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.ConfirmConnectionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.ConfirmDCDirectConnectGatewayAssociationProposalCmdlet">
            <summary>
            Accepts a proposal request to attach a virtual private gateway or transit gateway
            to a Direct Connect gateway.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCDirectConnectGatewayAssociationProposalCmdlet.AssociatedGatewayOwnerAccount">
            <summary>
            <para>
            <para>The ID of the AWS account that owns the virtual private gateway or transit gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCDirectConnectGatewayAssociationProposalCmdlet.DirectConnectGatewayId">
            <summary>
            <para>
            <para>The ID of the Direct Connect gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCDirectConnectGatewayAssociationProposalCmdlet.OverrideAllowedPrefixesToDirectConnectGateway">
            <summary>
            <para>
            <para>Overrides the Amazon VPC prefixes advertised to the Direct Connect gateway.</para><para>For information about how to set the prefixes, see <a href="https://docs.aws.amazon.com/directconnect/latest/UserGuide/multi-account-associate-vgw.html#allowed-prefixes">Allowed
            Prefixes</a> in the <i>AWS Direct Connect User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCDirectConnectGatewayAssociationProposalCmdlet.ProposalId">
            <summary>
            <para>
            <para>The ID of the request proposal.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCDirectConnectGatewayAssociationProposalCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DirectConnectGatewayAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.AcceptDirectConnectGatewayAssociationProposalResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.AcceptDirectConnectGatewayAssociationProposalResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCDirectConnectGatewayAssociationProposalCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProposalId parameter.
            The -PassThru parameter is deprecated, use -Select '^ProposalId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCDirectConnectGatewayAssociationProposalCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.ConfirmDCPrivateVirtualInterfaceCmdlet">
            <summary>
            Accepts ownership of a private virtual interface created by another AWS account.
            
             
            <para>
            After the virtual interface owner makes this call, the virtual interface is created
            and attached to the specified virtual private gateway or Direct Connect gateway, and
            is made available to handle traffic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCPrivateVirtualInterfaceCmdlet.DirectConnectGatewayId">
            <summary>
            <para>
            <para>The ID of the Direct Connect gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCPrivateVirtualInterfaceCmdlet.VirtualGatewayId">
            <summary>
            <para>
            <para>The ID of the virtual private gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCPrivateVirtualInterfaceCmdlet.VirtualInterfaceId">
            <summary>
            <para>
            <para>The ID of the virtual interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCPrivateVirtualInterfaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VirtualInterfaceState'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.ConfirmPrivateVirtualInterfaceResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.ConfirmPrivateVirtualInterfaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCPrivateVirtualInterfaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VirtualInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^VirtualInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCPrivateVirtualInterfaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.ConfirmDCPublicVirtualInterfaceCmdlet">
            <summary>
            Accepts ownership of a public virtual interface created by another AWS account.
            
             
            <para>
            After the virtual interface owner makes this call, the specified virtual interface
            is created and made available to handle traffic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCPublicVirtualInterfaceCmdlet.VirtualInterfaceId">
            <summary>
            <para>
            <para>The ID of the virtual interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCPublicVirtualInterfaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VirtualInterfaceState'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.ConfirmPublicVirtualInterfaceResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.ConfirmPublicVirtualInterfaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCPublicVirtualInterfaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VirtualInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^VirtualInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCPublicVirtualInterfaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.ConfirmDCTransitVirtualInterfaceCmdlet">
            <summary>
            Accepts ownership of a transit virtual interface created by another AWS account.
            
             
            <para>
             After the owner of the transit virtual interface makes this call, the specified transit
            virtual interface is created and made available to handle traffic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCTransitVirtualInterfaceCmdlet.DirectConnectGatewayId">
            <summary>
            <para>
            <para>The ID of the Direct Connect gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCTransitVirtualInterfaceCmdlet.VirtualInterfaceId">
            <summary>
            <para>
            <para>The ID of the virtual interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCTransitVirtualInterfaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VirtualInterfaceState'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.ConfirmTransitVirtualInterfaceResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.ConfirmTransitVirtualInterfaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCTransitVirtualInterfaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VirtualInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^VirtualInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.ConfirmDCTransitVirtualInterfaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.EnableDCConnectionOnInterconnectCmdlet">
            <summary>
            Deprecated. Use <a>AllocateHostedConnection</a> instead.
            
             
            <para>
            Creates a hosted connection on an interconnect.
            </para><para>
            Allocates a VLAN number and a specified amount of bandwidth for use by a hosted connection
            on the specified interconnect.
            </para><note><para>
            Intended for use by AWS Direct Connect Partners only.
            </para></note><br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCConnectionOnInterconnectCmdlet.Bandwidth">
            <summary>
            <para>
            <para>The bandwidth of the connection. The possible values are 50Mbps, 100Mbps, 200Mbps,
            300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, and 10Gbps. Note that only those AWS
            Direct Connect Partners who have met specific requirements are allowed to create a
            1Gbps, 2Gbps, 5Gbps or 10Gbps hosted connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCConnectionOnInterconnectCmdlet.ConnectionName">
            <summary>
            <para>
            <para>The name of the provisioned connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCConnectionOnInterconnectCmdlet.InterconnectId">
            <summary>
            <para>
            <para>The ID of the interconnect on which the connection will be provisioned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCConnectionOnInterconnectCmdlet.OwnerAccount">
            <summary>
            <para>
            <para>The ID of the AWS account of the customer for whom the connection will be provisioned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCConnectionOnInterconnectCmdlet.Vlan">
            <summary>
            <para>
            <para>The dedicated VLAN provisioned to the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCConnectionOnInterconnectCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.AllocateConnectionOnInterconnectResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.AllocateConnectionOnInterconnectResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCConnectionOnInterconnectCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InterconnectId parameter.
            The -PassThru parameter is deprecated, use -Select '^InterconnectId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCConnectionOnInterconnectCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.EnableDCPrivateVirtualInterfaceCmdlet">
            <summary>
            Provisions a private virtual interface to be owned by the specified AWS account.
            
             
            <para>
            Virtual interfaces created using this action must be confirmed by the owner using
            <a>ConfirmPrivateVirtualInterface</a>. Until then, the virtual interface is in the
            <code>Confirming</code> state and is not available to handle traffic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPrivateVirtualInterfaceCmdlet.NewPrivateVirtualInterfaceAllocation_AddressFamily">
            <summary>
            <para>
            <para>The address family for the BGP peer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPrivateVirtualInterfaceCmdlet.NewPrivateVirtualInterfaceAllocation_AmazonAddress">
            <summary>
            <para>
            <para>The IP address assigned to the Amazon interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPrivateVirtualInterfaceCmdlet.NewPrivateVirtualInterfaceAllocation_Asn">
            <summary>
            <para>
            <para>The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.</para><para>The valid values are 1-2147483647.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPrivateVirtualInterfaceCmdlet.NewPrivateVirtualInterfaceAllocation_AuthKey">
            <summary>
            <para>
            <para>The authentication key for BGP configuration. This string has a minimum length of
            6 characters and and a maximun lenth of 80 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPrivateVirtualInterfaceCmdlet.ConnectionId">
            <summary>
            <para>
            <para>The ID of the connection on which the private virtual interface is provisioned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPrivateVirtualInterfaceCmdlet.NewPrivateVirtualInterfaceAllocation_CustomerAddress">
            <summary>
            <para>
            <para>The IP address assigned to the customer interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPrivateVirtualInterfaceCmdlet.NewPrivateVirtualInterfaceAllocation_Mtu">
            <summary>
            <para>
            <para>The maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001.
            The default value is 1500.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPrivateVirtualInterfaceCmdlet.OwnerAccount">
            <summary>
            <para>
            <para>The ID of the AWS account that owns the virtual private interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPrivateVirtualInterfaceCmdlet.NewPrivateVirtualInterfaceAllocation_Tag">
            <summary>
            <para>
            <para>The tags associated with the private virtual interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPrivateVirtualInterfaceCmdlet.NewPrivateVirtualInterfaceAllocation_VirtualInterfaceName">
            <summary>
            <para>
            <para>The name of the virtual interface assigned by the customer network. The name has a
            maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen
            (-).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPrivateVirtualInterfaceCmdlet.NewPrivateVirtualInterfaceAllocation_Vlan">
            <summary>
            <para>
            <para>The ID of the VLAN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPrivateVirtualInterfaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.AllocatePrivateVirtualInterfaceResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.AllocatePrivateVirtualInterfaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPrivateVirtualInterfaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPrivateVirtualInterfaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.EnableDCPublicVirtualInterfaceCmdlet">
            <summary>
            Provisions a public virtual interface to be owned by the specified AWS account.
            
             
            <para>
            The owner of a connection calls this function to provision a public virtual interface
            to be owned by the specified AWS account.
            </para><para>
            Virtual interfaces created using this function must be confirmed by the owner using
            <a>ConfirmPublicVirtualInterface</a>. Until this step has been completed, the virtual
            interface is in the <code>confirming</code> state and is not available to handle traffic.
            </para><para>
            When creating an IPv6 public virtual interface, omit the Amazon address and customer
            address. IPv6 addresses are automatically assigned from the Amazon pool of IPv6 addresses;
            you cannot specify custom IPv6 addresses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPublicVirtualInterfaceCmdlet.NewPublicVirtualInterfaceAllocation_AddressFamily">
            <summary>
            <para>
            <para>The address family for the BGP peer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPublicVirtualInterfaceCmdlet.NewPublicVirtualInterfaceAllocation_AmazonAddress">
            <summary>
            <para>
            <para>The IP address assigned to the Amazon interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPublicVirtualInterfaceCmdlet.NewPublicVirtualInterfaceAllocation_Asn">
            <summary>
            <para>
            <para>The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.</para><para>The valid values are 1-2147483647.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPublicVirtualInterfaceCmdlet.NewPublicVirtualInterfaceAllocation_AuthKey">
            <summary>
            <para>
            <para>The authentication key for BGP configuration. This string has a minimum length of
            6 characters and and a maximun lenth of 80 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPublicVirtualInterfaceCmdlet.ConnectionId">
            <summary>
            <para>
            <para>The ID of the connection on which the public virtual interface is provisioned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPublicVirtualInterfaceCmdlet.NewPublicVirtualInterfaceAllocation_CustomerAddress">
            <summary>
            <para>
            <para>The IP address assigned to the customer interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPublicVirtualInterfaceCmdlet.OwnerAccount">
            <summary>
            <para>
            <para>The ID of the AWS account that owns the public virtual interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPublicVirtualInterfaceCmdlet.NewPublicVirtualInterfaceAllocation_RouteFilterPrefix">
            <summary>
            <para>
            <para>The routes to be advertised to the AWS network in this Region. Applies to public virtual
            interfaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPublicVirtualInterfaceCmdlet.NewPublicVirtualInterfaceAllocation_Tag">
            <summary>
            <para>
            <para>The tags associated with the public virtual interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPublicVirtualInterfaceCmdlet.NewPublicVirtualInterfaceAllocation_VirtualInterfaceName">
            <summary>
            <para>
            <para>The name of the virtual interface assigned by the customer network. The name has a
            maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen
            (-).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPublicVirtualInterfaceCmdlet.NewPublicVirtualInterfaceAllocation_Vlan">
            <summary>
            <para>
            <para>The ID of the VLAN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPublicVirtualInterfaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.AllocatePublicVirtualInterfaceResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.AllocatePublicVirtualInterfaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPublicVirtualInterfaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCPublicVirtualInterfaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.EnableDCTransitVirtualInterfaceCmdlet">
            <summary>
            Provisions a transit virtual interface to be owned by the specified AWS account. Use
            this type of interface to connect a transit gateway to your Direct Connect gateway.
            
             
            <para>
            The owner of a connection provisions a transit virtual interface to be owned by the
            specified AWS account.
            </para><para>
            After you create a transit virtual interface, it must be confirmed by the owner using
            <a>ConfirmTransitVirtualInterface</a>. Until this step has been completed, the transit
            virtual interface is in the <code>requested</code> state and is not available to handle
            traffic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCTransitVirtualInterfaceCmdlet.NewTransitVirtualInterfaceAllocation_AddressFamily">
            <summary>
            <para>
            <para>The address family for the BGP peer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCTransitVirtualInterfaceCmdlet.NewTransitVirtualInterfaceAllocation_AmazonAddress">
            <summary>
            <para>
            <para>The IP address assigned to the Amazon interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCTransitVirtualInterfaceCmdlet.NewTransitVirtualInterfaceAllocation_Asn">
            <summary>
            <para>
            <para>The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.</para><para>The valid values are 1-2147483647.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCTransitVirtualInterfaceCmdlet.NewTransitVirtualInterfaceAllocation_AuthKey">
            <summary>
            <para>
            <para>The authentication key for BGP configuration. This string has a minimum length of
            6 characters and and a maximun lenth of 80 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCTransitVirtualInterfaceCmdlet.ConnectionId">
            <summary>
            <para>
            <para>The ID of the connection on which the transit virtual interface is provisioned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCTransitVirtualInterfaceCmdlet.NewTransitVirtualInterfaceAllocation_CustomerAddress">
            <summary>
            <para>
            <para>The IP address assigned to the customer interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCTransitVirtualInterfaceCmdlet.NewTransitVirtualInterfaceAllocation_Mtu">
            <summary>
            <para>
            <para>The maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001.
            The default value is 1500. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCTransitVirtualInterfaceCmdlet.OwnerAccount">
            <summary>
            <para>
            <para>The ID of the AWS account that owns the transit virtual interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCTransitVirtualInterfaceCmdlet.NewTransitVirtualInterfaceAllocation_Tag">
            <summary>
            <para>
            <para>The tags associated with the transitive virtual interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCTransitVirtualInterfaceCmdlet.NewTransitVirtualInterfaceAllocation_VirtualInterfaceName">
            <summary>
            <para>
            <para>The name of the virtual interface assigned by the customer network. The name has a
            maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen
            (-).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCTransitVirtualInterfaceCmdlet.NewTransitVirtualInterfaceAllocation_Vlan">
            <summary>
            <para>
            <para>The ID of the VLAN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCTransitVirtualInterfaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VirtualInterface'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.AllocateTransitVirtualInterfaceResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.AllocateTransitVirtualInterfaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCTransitVirtualInterfaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.EnableDCTransitVirtualInterfaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.GetDCConnectionCmdlet">
            <summary>
            Displays the specified connection or all connections in this Region.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCConnectionCmdlet.ConnectionId">
            <summary>
            <para>
            <para>The ID of the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Connections'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DescribeConnectionsResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DescribeConnectionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.GetDCConnectionLoaCmdlet">
            <summary>
            Deprecated. Use <a>DescribeLoa</a> instead.
            
             
            <para>
            Gets the LOA-CFA for a connection.
            </para><para>
            The Letter of Authorization - Connecting Facility Assignment (LOA-CFA) is a document
            that your APN partner or service provider uses when establishing your cross connect
            to AWS at the colocation facility. For more information, see <a href="https://docs.aws.amazon.com/directconnect/latest/UserGuide/Colocation.html">Requesting
            Cross Connects at AWS Direct Connect Locations</a> in the <i>AWS Direct Connect User
            Guide</i>.
            </para><br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCConnectionLoaCmdlet.ConnectionId">
            <summary>
            <para>
            <para>The ID of the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCConnectionLoaCmdlet.LoaContentType">
            <summary>
            <para>
            <para>The standard media type for the LOA-CFA document. The only supported value is application/pdf.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCConnectionLoaCmdlet.ProviderName">
            <summary>
            <para>
            <para>The name of the APN partner or service provider who establishes connectivity on your
            behalf. If you specify this parameter, the LOA-CFA lists the provider name alongside
            your company name as the requester of the cross connect.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCConnectionLoaCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Loa'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DescribeConnectionLoaResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DescribeConnectionLoaResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCConnectionLoaCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.GetDCConnectionsOnInterconnectCmdlet">
            <summary>
            Deprecated. Use <a>DescribeHostedConnections</a> instead.
            
             
            <para>
            Lists the connections that have been provisioned on the specified interconnect.
            </para><note><para>
            Intended for use by AWS Direct Connect Partners only.
            </para></note><br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCConnectionsOnInterconnectCmdlet.InterconnectId">
            <summary>
            <para>
            <para>The ID of the interconnect.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCConnectionsOnInterconnectCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Connections'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DescribeConnectionsOnInterconnectResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DescribeConnectionsOnInterconnectResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCConnectionsOnInterconnectCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InterconnectId parameter.
            The -PassThru parameter is deprecated, use -Select '^InterconnectId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.GetDCDirectConnectGatewayAssociationProposalCmdlet">
            <summary>
            Describes one or more association proposals for connection between a virtual private
            gateway or transit gateway and a Direct Connect gateway.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCDirectConnectGatewayAssociationProposalCmdlet.AssociatedGatewayId">
            <summary>
            <para>
            <para>The ID of the associated gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCDirectConnectGatewayAssociationProposalCmdlet.DirectConnectGatewayId">
            <summary>
            <para>
            <para>The ID of the Direct Connect gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCDirectConnectGatewayAssociationProposalCmdlet.ProposalId">
            <summary>
            <para>
            <para>The ID of the proposal.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCDirectConnectGatewayAssociationProposalCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para><para>If <code>MaxResults</code> is given a value larger than 100, only 100 results are
            returned.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCDirectConnectGatewayAssociationProposalCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCDirectConnectGatewayAssociationProposalCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DirectConnectGatewayAssociationProposals'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DescribeDirectConnectGatewayAssociationProposalsResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DescribeDirectConnectGatewayAssociationProposalsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCDirectConnectGatewayAssociationProposalCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectConnectGatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectConnectGatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCDirectConnectGatewayAssociationProposalCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayCmdlet">
            <summary>
            Lists all your Direct Connect gateways or only the specified Direct Connect gateway.
            Deleted Direct Connect gateways are not returned.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayCmdlet.DirectConnectGatewayId">
            <summary>
            <para>
            <para>The ID of the Direct Connect gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para><para>If <code>MaxResults</code> is given a value larger than 100, only 100 results are
            returned.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayCmdlet.NextToken">
            <summary>
            <para>
            <para>The token provided in the previous call to retrieve the next page.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DirectConnectGateways'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DescribeDirectConnectGatewaysResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DescribeDirectConnectGatewaysResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectConnectGatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectConnectGatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayAssociationCmdlet">
            <summary>
            Lists the associations between your Direct Connect gateways and virtual private gateways.
            You must specify a Direct Connect gateway, a virtual private gateway, or both. If
            you specify a Direct Connect gateway, the response contains all virtual private gateways
            associated with the Direct Connect gateway. If you specify a virtual private gateway,
            the response contains all Direct Connect gateways associated with the virtual private
            gateway. If you specify both, the response contains the association between the Direct
            Connect gateway and the virtual private gateway.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayAssociationCmdlet.AssociatedGatewayId">
            <summary>
            <para>
            <para>The ID of the associated gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayAssociationCmdlet.AssociationId">
            <summary>
            <para>
            <para>The ID of the Direct Connect gateway association.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayAssociationCmdlet.DirectConnectGatewayId">
            <summary>
            <para>
            <para>The ID of the Direct Connect gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayAssociationCmdlet.VirtualGatewayId">
            <summary>
            <para>
            <para>The ID of the virtual private gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayAssociationCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para><para>If <code>MaxResults</code> is given a value larger than 100, only 100 results are
            returned.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayAssociationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token provided in the previous call to retrieve the next page.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DirectConnectGatewayAssociations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DescribeDirectConnectGatewayAssociationsResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DescribeDirectConnectGatewayAssociationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectConnectGatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectConnectGatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayAssociationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayAttachmentCmdlet">
            <summary>
            Lists the attachments between your Direct Connect gateways and virtual interfaces.
            You must specify a Direct Connect gateway, a virtual interface, or both. If you specify
            a Direct Connect gateway, the response contains all virtual interfaces attached to
            the Direct Connect gateway. If you specify a virtual interface, the response contains
            all Direct Connect gateways attached to the virtual interface. If you specify both,
            the response contains the attachment between the Direct Connect gateway and the virtual
            interface.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayAttachmentCmdlet.DirectConnectGatewayId">
            <summary>
            <para>
            <para>The ID of the Direct Connect gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayAttachmentCmdlet.VirtualInterfaceId">
            <summary>
            <para>
            <para>The ID of the virtual interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayAttachmentCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para><para>If <code>MaxResults</code> is given a value larger than 100, only 100 results are
            returned.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayAttachmentCmdlet.NextToken">
            <summary>
            <para>
            <para>The token provided in the previous call to retrieve the next page.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayAttachmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DirectConnectGatewayAttachments'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DescribeDirectConnectGatewayAttachmentsResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DescribeDirectConnectGatewayAttachmentsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayAttachmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectConnectGatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectConnectGatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCGatewayAttachmentCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.GetDCHostedConnectionCmdlet">
            <summary>
            Lists the hosted connections that have been provisioned on the specified interconnect
            or link aggregation group (LAG).
            
             <note><para>
            Intended for use by AWS Direct Connect Partners only.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCHostedConnectionCmdlet.ConnectionId">
            <summary>
            <para>
            <para>The ID of the interconnect or LAG.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCHostedConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Connections'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DescribeHostedConnectionsResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DescribeHostedConnectionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCHostedConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.GetDCInterconnectCmdlet">
            <summary>
            Lists the interconnects owned by the AWS account or only the specified interconnect.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCInterconnectCmdlet.InterconnectId">
            <summary>
            <para>
            <para>The ID of the interconnect.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCInterconnectCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Interconnects'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DescribeInterconnectsResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DescribeInterconnectsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCInterconnectCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InterconnectId parameter.
            The -PassThru parameter is deprecated, use -Select '^InterconnectId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.GetDCInterconnectLoaCmdlet">
            <summary>
            Deprecated. Use <a>DescribeLoa</a> instead.
            
             
            <para>
            Gets the LOA-CFA for the specified interconnect.
            </para><para>
            The Letter of Authorization - Connecting Facility Assignment (LOA-CFA) is a document
            that is used when establishing your cross connect to AWS at the colocation facility.
            For more information, see <a href="https://docs.aws.amazon.com/directconnect/latest/UserGuide/Colocation.html">Requesting
            Cross Connects at AWS Direct Connect Locations</a> in the <i>AWS Direct Connect User
            Guide</i>.
            </para><br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCInterconnectLoaCmdlet.InterconnectId">
            <summary>
            <para>
            <para>The ID of the interconnect.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCInterconnectLoaCmdlet.LoaContentType">
            <summary>
            <para>
            <para>The standard media type for the LOA-CFA document. The only supported value is application/pdf.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCInterconnectLoaCmdlet.ProviderName">
            <summary>
            <para>
            <para>The name of the service provider who establishes connectivity on your behalf. If you
            supply this parameter, the LOA-CFA lists the provider name alongside your company
            name as the requester of the cross connect.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCInterconnectLoaCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Loa'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DescribeInterconnectLoaResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DescribeInterconnectLoaResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCInterconnectLoaCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InterconnectId parameter.
            The -PassThru parameter is deprecated, use -Select '^InterconnectId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.GetDCLagCmdlet">
            <summary>
            Describes all your link aggregation groups (LAG) or the specified LAG.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCLagCmdlet.LagId">
            <summary>
            <para>
            <para>The ID of the LAG.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCLagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Lags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DescribeLagsResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DescribeLagsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCLagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LagId parameter.
            The -PassThru parameter is deprecated, use -Select '^LagId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.GetDCLoaCmdlet">
            <summary>
            Gets the LOA-CFA for a connection, interconnect, or link aggregation group (LAG).
            
             
            <para>
            The Letter of Authorization - Connecting Facility Assignment (LOA-CFA) is a document
            that is used when establishing your cross connect to AWS at the colocation facility.
            For more information, see <a href="https://docs.aws.amazon.com/directconnect/latest/UserGuide/Colocation.html">Requesting
            Cross Connects at AWS Direct Connect Locations</a> in the <i>AWS Direct Connect User
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCLoaCmdlet.ConnectionId">
            <summary>
            <para>
            <para>The ID of a connection, LAG, or interconnect.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCLoaCmdlet.LoaContentType">
            <summary>
            <para>
            <para>The standard media type for the LOA-CFA document. The only supported value is application/pdf.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCLoaCmdlet.ProviderName">
            <summary>
            <para>
            <para>The name of the service provider who establishes connectivity on your behalf. If you
            specify this parameter, the LOA-CFA lists the provider name alongside your company
            name as the requester of the cross connect.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCLoaCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DescribeLoaResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DescribeLoaResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCLoaCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.GetDCLocationCmdlet">
            <summary>
            Lists the AWS Direct Connect locations in the current AWS Region. These are the locations
            that can be selected when calling <a>CreateConnection</a> or <a>CreateInterconnect</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCLocationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Locations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DescribeLocationsResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DescribeLocationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.GetDCResourceTagCmdlet">
            <summary>
            Describes the tags associated with the specified AWS Direct Connect resources.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Names (ARNs) of the resources.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourceTags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DescribeTagsResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DescribeTagsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.GetDCVirtualGatewayCmdlet">
            <summary>
            Lists the virtual private gateways owned by the AWS account.
            
             
            <para>
            You can create one or more AWS Direct Connect private virtual interfaces linked to
            a virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCVirtualGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VirtualGateways'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DescribeVirtualGatewaysResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DescribeVirtualGatewaysResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.GetDCVirtualInterfaceCmdlet">
            <summary>
            Displays all virtual interfaces for an AWS account. Virtual interfaces deleted fewer
            than 15 minutes before you make the request are also returned. If you specify a connection
            ID, only the virtual interfaces associated with the connection are returned. If you
            specify a virtual interface ID, then only a single virtual interface is returned.
            
             
            <para>
            A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location
            and the customer network.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCVirtualInterfaceCmdlet.ConnectionId">
            <summary>
            <para>
            <para>The ID of the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCVirtualInterfaceCmdlet.VirtualInterfaceId">
            <summary>
            <para>
            <para>The ID of the virtual interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCVirtualInterfaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VirtualInterfaces'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DescribeVirtualInterfacesResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DescribeVirtualInterfacesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCVirtualInterfaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.GetDCVirtualInterfaceTestHistoryListCmdlet">
            <summary>
            Lists the virtual interface failover test history.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCVirtualInterfaceTestHistoryListCmdlet.BgpPeer">
            <summary>
            <para>
            <para>The BGP peers that were placed in the DOWN state during the virtual interface failover
            test.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCVirtualInterfaceTestHistoryListCmdlet.Status">
            <summary>
            <para>
            <para>The status of the virtual interface failover test.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCVirtualInterfaceTestHistoryListCmdlet.TestId">
            <summary>
            <para>
            <para>The ID of the virtual interface failover test.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCVirtualInterfaceTestHistoryListCmdlet.VirtualInterfaceId">
            <summary>
            <para>
            <para>The ID of the virtual interface that was tested.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCVirtualInterfaceTestHistoryListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return with a single call. To retrieve the remaining
            results, make another call with the returned <code>nextToken</code> value.</para><para>If <code>MaxResults</code> is given a value larger than 100, only 100 results are
            returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCVirtualInterfaceTestHistoryListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCVirtualInterfaceTestHistoryListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VirtualInterfaceTestHistory'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.ListVirtualInterfaceTestHistoryResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.ListVirtualInterfaceTestHistoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCVirtualInterfaceTestHistoryListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VirtualInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^VirtualInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.GetDCVirtualInterfaceTestHistoryListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.NewDCBGPPeerCmdlet">
            <summary>
            Creates a BGP peer on the specified virtual interface.
            
             
            <para>
            You must create a BGP peer for the corresponding address family (IPv4/IPv6) in order
            to access AWS resources that also use that address family.
            </para><para>
            If logical redundancy is not supported by the connection, interconnect, or LAG, the
            BGP peer cannot be in the same address family as an existing BGP peer on the virtual
            interface.
            </para><para>
            When creating a IPv6 BGP peer, omit the Amazon address and customer address. IPv6
            addresses are automatically assigned from the Amazon pool of IPv6 addresses; you cannot
            specify custom IPv6 addresses.
            </para><para>
            For a public virtual interface, the Autonomous System Number (ASN) must be private
            or already whitelisted for the virtual interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCBGPPeerCmdlet.NewBGPPeer_AddressFamily">
            <summary>
            <para>
            <para>The address family for the BGP peer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCBGPPeerCmdlet.NewBGPPeer_AmazonAddress">
            <summary>
            <para>
            <para>The IP address assigned to the Amazon interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCBGPPeerCmdlet.NewBGPPeer_Asn">
            <summary>
            <para>
            <para>The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCBGPPeerCmdlet.NewBGPPeer_AuthKey">
            <summary>
            <para>
            <para>The authentication key for BGP configuration. This string has a minimum length of
            6 characters and and a maximun lenth of 80 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCBGPPeerCmdlet.NewBGPPeer_CustomerAddress">
            <summary>
            <para>
            <para>The IP address assigned to the customer interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCBGPPeerCmdlet.VirtualInterfaceId">
            <summary>
            <para>
            <para>The ID of the virtual interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCBGPPeerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VirtualInterface'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.CreateBGPPeerResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.CreateBGPPeerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCBGPPeerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VirtualInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^VirtualInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCBGPPeerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.NewDCConnectionCmdlet">
            <summary>
            Creates a connection between a customer network and a specific AWS Direct Connect
            location.
            
             
            <para>
            A connection links your internal network to an AWS Direct Connect location over a
            standard Ethernet fiber-optic cable. One end of the cable is connected to your router,
            the other to an AWS Direct Connect router.
            </para><para>
            To find the locations for your Region, use <a>DescribeLocations</a>.
            </para><para>
            You can automatically add the new connection to a link aggregation group (LAG) by
            specifying a LAG ID in the request. This ensures that the new connection is allocated
            on the same AWS Direct Connect endpoint that hosts the specified LAG. If there are
            no available ports on the endpoint, the request fails and no connection is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCConnectionCmdlet.Bandwidth">
            <summary>
            <para>
            <para>The bandwidth of the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCConnectionCmdlet.ConnectionName">
            <summary>
            <para>
            <para>The name of the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCConnectionCmdlet.LagId">
            <summary>
            <para>
            <para>The ID of the LAG.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCConnectionCmdlet.Location">
            <summary>
            <para>
            <para>The location of the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCConnectionCmdlet.ProviderName">
            <summary>
            <para>
            <para>The name of the service provider associated with the requested connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCConnectionCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to associate with the lag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.CreateConnectionResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.CreateConnectionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionName parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.NewDCDirectConnectGatewayAssociationProposalCmdlet">
            <summary>
            Creates a proposal to associate the specified virtual private gateway or transit gateway
            with the specified Direct Connect gateway.
            
             
            <para>
            You can only associate a Direct Connect gateway and virtual private gateway or transit
            gateway when the account that owns the Direct Connect gateway and the account that
            owns the virtual private gateway or transit gateway have the same AWS Payer ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCDirectConnectGatewayAssociationProposalCmdlet.AddAllowedPrefixesToDirectConnectGateway">
            <summary>
            <para>
            <para>The Amazon VPC prefixes to advertise to the Direct Connect gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCDirectConnectGatewayAssociationProposalCmdlet.DirectConnectGatewayId">
            <summary>
            <para>
            <para>The ID of the Direct Connect gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCDirectConnectGatewayAssociationProposalCmdlet.DirectConnectGatewayOwnerAccount">
            <summary>
            <para>
            <para>The ID of the AWS account that owns the Direct Connect gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCDirectConnectGatewayAssociationProposalCmdlet.GatewayId">
            <summary>
            <para>
            <para>The ID of the virtual private gateway or transit gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCDirectConnectGatewayAssociationProposalCmdlet.RemoveAllowedPrefixesToDirectConnectGateway">
            <summary>
            <para>
            <para>The Amazon VPC prefixes to no longer advertise to the Direct Connect gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCDirectConnectGatewayAssociationProposalCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DirectConnectGatewayAssociationProposal'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.CreateDirectConnectGatewayAssociationProposalResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.CreateDirectConnectGatewayAssociationProposalResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCDirectConnectGatewayAssociationProposalCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^GatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCDirectConnectGatewayAssociationProposalCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.NewDCGatewayCmdlet">
            <summary>
            Creates a Direct Connect gateway, which is an intermediate object that enables you
            to connect a set of virtual interfaces and virtual private gateways. A Direct Connect
            gateway is global and visible in any AWS Region after it is created. The virtual interfaces
            and virtual private gateways that are connected through a Direct Connect gateway can
            be in different AWS Regions. This enables you to connect to a VPC in any Region, regardless
            of the Region in which the virtual interfaces are located, and pass traffic between
            them.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCGatewayCmdlet.AmazonSideAsn">
            <summary>
            <para>
            <para>The autonomous system number (ASN) for Border Gateway Protocol (BGP) to be configured
            on the Amazon side of the connection. The ASN must be in the private range of 64,512
            to 65,534 or 4,200,000,000 to 4,294,967,294. The default is 64512.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCGatewayCmdlet.DirectConnectGatewayName">
            <summary>
            <para>
            <para>The name of the Direct Connect gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DirectConnectGateway'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.CreateDirectConnectGatewayResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.CreateDirectConnectGatewayResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCGatewayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectConnectGatewayName parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectConnectGatewayName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCGatewayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.NewDCGatewayAssociationCmdlet">
            <summary>
            Creates an association between a Direct Connect gateway and a virtual private gateway.
            The virtual private gateway must be attached to a VPC and must not be associated with
            another Direct Connect gateway.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCGatewayAssociationCmdlet.AddAllowedPrefixesToDirectConnectGateway">
            <summary>
            <para>
            <para>The Amazon VPC prefixes to advertise to the Direct Connect gateway</para><para>This parameter is required when you create an association to a transit gateway.</para><para>For information about how to set the prefixes, see <a href="https://docs.aws.amazon.com/directconnect/latest/UserGuide/multi-account-associate-vgw.html#allowed-prefixes">Allowed
            Prefixes</a> in the <i>AWS Direct Connect User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCGatewayAssociationCmdlet.DirectConnectGatewayId">
            <summary>
            <para>
            <para>The ID of the Direct Connect gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCGatewayAssociationCmdlet.GatewayId">
            <summary>
            <para>
            <para>The ID of the virtual private gateway or transit gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCGatewayAssociationCmdlet.VirtualGatewayId">
            <summary>
            <para>
            <para>The ID of the virtual private gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCGatewayAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DirectConnectGatewayAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.CreateDirectConnectGatewayAssociationResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.CreateDirectConnectGatewayAssociationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCGatewayAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VirtualGatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^VirtualGatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCGatewayAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.NewDCHostedConnectionCmdlet">
            <summary>
            Creates a hosted connection on the specified interconnect or a link aggregation group
            (LAG) of interconnects.
            
             
            <para>
            Allocates a VLAN number and a specified amount of capacity (bandwidth) for use by
            a hosted connection on the specified interconnect or LAG of interconnects. AWS polices
            the hosted connection for the specified capacity and the AWS Direct Connect Partner
            must also police the hosted connection for the specified capacity.
            </para><note><para>
            Intended for use by AWS Direct Connect Partners only.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCHostedConnectionCmdlet.Bandwidth">
            <summary>
            <para>
            <para>The bandwidth of the connection. The possible values are 50Mbps, 100Mbps, 200Mbps,
            300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, and 10Gbps. Note that only those AWS
            Direct Connect Partners who have met specific requirements are allowed to create a
            1Gbps, 2Gbps, 5Gbps or 10Gbps hosted connection. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCHostedConnectionCmdlet.ConnectionId">
            <summary>
            <para>
            <para>The ID of the interconnect or LAG.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCHostedConnectionCmdlet.ConnectionName">
            <summary>
            <para>
            <para>The name of the hosted connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCHostedConnectionCmdlet.OwnerAccount">
            <summary>
            <para>
            <para>The ID of the AWS account ID of the customer for the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCHostedConnectionCmdlet.Tag">
            <summary>
            <para>
            <para>The tags associated with the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCHostedConnectionCmdlet.Vlan">
            <summary>
            <para>
            <para>The dedicated VLAN provisioned to the hosted connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCHostedConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.AllocateHostedConnectionResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.AllocateHostedConnectionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCHostedConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCHostedConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.NewDCInterconnectCmdlet">
            <summary>
            Creates an interconnect between an AWS Direct Connect Partner's network and a specific
            AWS Direct Connect location.
            
             
            <para>
            An interconnect is a connection that is capable of hosting other connections. The
            AWS Direct Connect partner can use an interconnect to provide AWS Direct Connect hosted
            connections to customers through their own network services. Like a standard connection,
            an interconnect links the partner's network to an AWS Direct Connect location over
            a standard Ethernet fiber-optic cable. One end is connected to the partner's router,
            the other to an AWS Direct Connect router.
            </para><para>
            You can automatically add the new interconnect to a link aggregation group (LAG) by
            specifying a LAG ID in the request. This ensures that the new interconnect is allocated
            on the same AWS Direct Connect endpoint that hosts the specified LAG. If there are
            no available ports on the endpoint, the request fails and no interconnect is created.
            </para><para>
            For each end customer, the AWS Direct Connect Partner provisions a connection on their
            interconnect by calling <a>AllocateHostedConnection</a>. The end customer can then
            connect to AWS resources by creating a virtual interface on their connection, using
            the VLAN assigned to them by the AWS Direct Connect Partner.
            </para><note><para>
            Intended for use by AWS Direct Connect Partners only.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCInterconnectCmdlet.Bandwidth">
            <summary>
            <para>
            <para>The port bandwidth, in Gbps. The possible values are 1 and 10.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCInterconnectCmdlet.InterconnectName">
            <summary>
            <para>
            <para>The name of the interconnect.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCInterconnectCmdlet.LagId">
            <summary>
            <para>
            <para>The ID of the LAG.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCInterconnectCmdlet.Location">
            <summary>
            <para>
            <para>The location of the interconnect.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCInterconnectCmdlet.ProviderName">
            <summary>
            <para>
            <para>The name of the service provider associated with the interconnect.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCInterconnectCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to associate with the interconnect.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCInterconnectCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.CreateInterconnectResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.CreateInterconnectResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCInterconnectCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InterconnectName parameter.
            The -PassThru parameter is deprecated, use -Select '^InterconnectName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCInterconnectCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.NewDCLagCmdlet">
            <summary>
            Creates a link aggregation group (LAG) with the specified number of bundled physical
            connections between the customer network and a specific AWS Direct Connect location.
            A LAG is a logical interface that uses the Link Aggregation Control Protocol (LACP)
            to aggregate multiple interfaces, enabling you to treat them as a single interface.
            
             
            <para>
            All connections in a LAG must use the same bandwidth and must terminate at the same
            AWS Direct Connect endpoint.
            </para><para>
            You can have up to 10 connections per LAG. Regardless of this limit, if you request
            more connections for the LAG than AWS Direct Connect can allocate on a single endpoint,
            no LAG is created.
            </para><para>
            You can specify an existing physical connection or interconnect to include in the
            LAG (which counts towards the total number of connections). Doing so interrupts the
            current physical connection or hosted connections, and re-establishes them as a member
            of the LAG. The LAG will be created on the same AWS Direct Connect endpoint to which
            the connection terminates. Any virtual interfaces associated with the connection are
            automatically disassociated and re-associated with the LAG. The connection ID does
            not change.
            </para><para>
            If the AWS account used to create a LAG is a registered AWS Direct Connect Partner,
            the LAG is automatically enabled to host sub-connections. For a LAG owned by a partner,
            any associated virtual interfaces cannot be directly configured.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCLagCmdlet.ChildConnectionTag">
            <summary>
            <para>
            <para>The tags to associate with the automtically created LAGs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCLagCmdlet.ConnectionId">
            <summary>
            <para>
            <para>The ID of an existing connection to migrate to the LAG.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCLagCmdlet.ConnectionsBandwidth">
            <summary>
            <para>
            <para>The bandwidth of the individual physical connections bundled by the LAG. The possible
            values are 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps,
            and 10Gbps. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCLagCmdlet.LagName">
            <summary>
            <para>
            <para>The name of the LAG.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCLagCmdlet.Location">
            <summary>
            <para>
            <para>The location for the LAG.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCLagCmdlet.NumberOfConnection">
            <summary>
            <para>
            <para>The number of physical connections initially provisioned and bundled by the LAG.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCLagCmdlet.ProviderName">
            <summary>
            <para>
            <para>The name of the service provider associated with the LAG.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCLagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to associate with the LAG.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCLagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.CreateLagResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.CreateLagResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCLagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCLagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.NewDCPrivateVirtualInterfaceCmdlet">
            <summary>
            Creates a private virtual interface. A virtual interface is the VLAN that transports
            AWS Direct Connect traffic. A private virtual interface can be connected to either
            a Direct Connect gateway or a Virtual Private Gateway (VGW). Connecting the private
            virtual interface to a Direct Connect gateway enables the possibility for connecting
            to multiple VPCs, including VPCs in different AWS Regions. Connecting the private
            virtual interface to a VGW only provides access to a single VPC within the same Region.
            
             
            <para>
            Setting the MTU of a virtual interface to 9001 (jumbo frames) can cause an update
            to the underlying physical connection if it wasn't updated to support jumbo frames.
            Updating the connection disrupts network connectivity for all virtual interfaces associated
            with the connection for up to 30 seconds. To check whether your connection supports
            jumbo frames, call <a>DescribeConnections</a>. To check whether your virtual interface
            supports jumbo frames, call <a>DescribeVirtualInterfaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPrivateVirtualInterfaceCmdlet.NewPrivateVirtualInterface_AddressFamily">
            <summary>
            <para>
            <para>The address family for the BGP peer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPrivateVirtualInterfaceCmdlet.NewPrivateVirtualInterface_AmazonAddress">
            <summary>
            <para>
            <para>The IP address assigned to the Amazon interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPrivateVirtualInterfaceCmdlet.NewPrivateVirtualInterface_Asn">
            <summary>
            <para>
            <para>The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.</para><para>The valid values are 1-2147483647.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPrivateVirtualInterfaceCmdlet.NewPrivateVirtualInterface_AuthKey">
            <summary>
            <para>
            <para>The authentication key for BGP configuration. This string has a minimum length of
            6 characters and and a maximun lenth of 80 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPrivateVirtualInterfaceCmdlet.ConnectionId">
            <summary>
            <para>
            <para>The ID of the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPrivateVirtualInterfaceCmdlet.NewPrivateVirtualInterface_CustomerAddress">
            <summary>
            <para>
            <para>The IP address assigned to the customer interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPrivateVirtualInterfaceCmdlet.NewPrivateVirtualInterface_DirectConnectGatewayId">
            <summary>
            <para>
            <para>The ID of the Direct Connect gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPrivateVirtualInterfaceCmdlet.NewPrivateVirtualInterface_Mtu">
            <summary>
            <para>
            <para>The maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001.
            The default value is 1500.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPrivateVirtualInterfaceCmdlet.NewPrivateVirtualInterface_Tag">
            <summary>
            <para>
            <para>The tags associated with the private virtual interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPrivateVirtualInterfaceCmdlet.NewPrivateVirtualInterface_VirtualGatewayId">
            <summary>
            <para>
            <para>The ID of the virtual private gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPrivateVirtualInterfaceCmdlet.NewPrivateVirtualInterface_VirtualInterfaceName">
            <summary>
            <para>
            <para>The name of the virtual interface assigned by the customer network. The name has a
            maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen
            (-).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPrivateVirtualInterfaceCmdlet.NewPrivateVirtualInterface_Vlan">
            <summary>
            <para>
            <para>The ID of the VLAN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPrivateVirtualInterfaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.CreatePrivateVirtualInterfaceResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.CreatePrivateVirtualInterfaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPrivateVirtualInterfaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPrivateVirtualInterfaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.NewDCPublicVirtualInterfaceCmdlet">
            <summary>
            Creates a public virtual interface. A virtual interface is the VLAN that transports
            AWS Direct Connect traffic. A public virtual interface supports sending traffic to
            public services of AWS such as Amazon S3.
            
             
            <para>
            When creating an IPv6 public virtual interface (<code>addressFamily</code> is <code>ipv6</code>),
            leave the <code>customer</code> and <code>amazon</code> address fields blank to use
            auto-assigned IPv6 space. Custom IPv6 addresses are not supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPublicVirtualInterfaceCmdlet.NewPublicVirtualInterface_AddressFamily">
            <summary>
            <para>
            <para>The address family for the BGP peer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPublicVirtualInterfaceCmdlet.NewPublicVirtualInterface_AmazonAddress">
            <summary>
            <para>
            <para>The IP address assigned to the Amazon interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPublicVirtualInterfaceCmdlet.NewPublicVirtualInterface_Asn">
            <summary>
            <para>
            <para>The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.</para><para>The valid values are 1-2147483647.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPublicVirtualInterfaceCmdlet.NewPublicVirtualInterface_AuthKey">
            <summary>
            <para>
            <para>The authentication key for BGP configuration. This string has a minimum length of
            6 characters and and a maximun lenth of 80 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPublicVirtualInterfaceCmdlet.ConnectionId">
            <summary>
            <para>
            <para>The ID of the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPublicVirtualInterfaceCmdlet.NewPublicVirtualInterface_CustomerAddress">
            <summary>
            <para>
            <para>The IP address assigned to the customer interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPublicVirtualInterfaceCmdlet.NewPublicVirtualInterface_RouteFilterPrefix">
            <summary>
            <para>
            <para>The routes to be advertised to the AWS network in this Region. Applies to public virtual
            interfaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPublicVirtualInterfaceCmdlet.NewPublicVirtualInterface_Tag">
            <summary>
            <para>
            <para>The tags associated with the public virtual interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPublicVirtualInterfaceCmdlet.NewPublicVirtualInterface_VirtualInterfaceName">
            <summary>
            <para>
            <para>The name of the virtual interface assigned by the customer network. The name has a
            maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen
            (-).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPublicVirtualInterfaceCmdlet.NewPublicVirtualInterface_Vlan">
            <summary>
            <para>
            <para>The ID of the VLAN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPublicVirtualInterfaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.CreatePublicVirtualInterfaceResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.CreatePublicVirtualInterfaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPublicVirtualInterfaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCPublicVirtualInterfaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.NewDCTransitVirtualInterfaceCmdlet">
            <summary>
            Creates a transit virtual interface. A transit virtual interface should be used to
            access one or more transit gateways associated with Direct Connect gateways. A transit
            virtual interface enables the connection of multiple VPCs attached to a transit gateway
            to a Direct Connect gateway.
            
             <important><para>
            If you associate your transit gateway with one or more Direct Connect gateways, the
            Autonomous System Number (ASN) used by the transit gateway and the Direct Connect
            gateway must be different. For example, if you use the default ASN 64512 for both
            your the transit gateway and Direct Connect gateway, the association request fails.
            </para></important><para>
            Setting the MTU of a virtual interface to 8500 (jumbo frames) can cause an update
            to the underlying physical connection if it wasn't updated to support jumbo frames.
            Updating the connection disrupts network connectivity for all virtual interfaces associated
            with the connection for up to 30 seconds. To check whether your connection supports
            jumbo frames, call <a>DescribeConnections</a>. To check whether your virtual interface
            supports jumbo frames, call <a>DescribeVirtualInterfaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCTransitVirtualInterfaceCmdlet.NewTransitVirtualInterface_AddressFamily">
            <summary>
            <para>
            <para>The address family for the BGP peer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCTransitVirtualInterfaceCmdlet.NewTransitVirtualInterface_AmazonAddress">
            <summary>
            <para>
            <para>The IP address assigned to the Amazon interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCTransitVirtualInterfaceCmdlet.NewTransitVirtualInterface_Asn">
            <summary>
            <para>
            <para>The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.</para><para>The valid values are 1-2147483647.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCTransitVirtualInterfaceCmdlet.NewTransitVirtualInterface_AuthKey">
            <summary>
            <para>
            <para>The authentication key for BGP configuration. This string has a minimum length of
            6 characters and and a maximun lenth of 80 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCTransitVirtualInterfaceCmdlet.ConnectionId">
            <summary>
            <para>
            <para>The ID of the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCTransitVirtualInterfaceCmdlet.NewTransitVirtualInterface_CustomerAddress">
            <summary>
            <para>
            <para>The IP address assigned to the customer interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCTransitVirtualInterfaceCmdlet.NewTransitVirtualInterface_DirectConnectGatewayId">
            <summary>
            <para>
            <para>The ID of the Direct Connect gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCTransitVirtualInterfaceCmdlet.NewTransitVirtualInterface_Mtu">
            <summary>
            <para>
            <para>The maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001.
            The default value is 1500.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCTransitVirtualInterfaceCmdlet.NewTransitVirtualInterface_Tag">
            <summary>
            <para>
            <para>The tags associated with the transitive virtual interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCTransitVirtualInterfaceCmdlet.NewTransitVirtualInterface_VirtualInterfaceName">
            <summary>
            <para>
            <para>The name of the virtual interface assigned by the customer network. The name has a
            maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen
            (-).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCTransitVirtualInterfaceCmdlet.NewTransitVirtualInterface_Vlan">
            <summary>
            <para>
            <para>The ID of the VLAN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCTransitVirtualInterfaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VirtualInterface'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.CreateTransitVirtualInterfaceResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.CreateTransitVirtualInterfaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCTransitVirtualInterfaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.NewDCTransitVirtualInterfaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.RegisterDCConnectionWithLagCmdlet">
            <summary>
            Associates an existing connection with a link aggregation group (LAG). The connection
            is interrupted and re-established as a member of the LAG (connectivity to AWS is interrupted).
            The connection must be hosted on the same AWS Direct Connect endpoint as the LAG,
            and its bandwidth must match the bandwidth for the LAG. You can re-associate a connection
            that's currently associated with a different LAG; however, if removing the connection
            would cause the original LAG to fall below its setting for minimum number of operational
            connections, the request fails.
            
             
            <para>
            Any virtual interfaces that are directly associated with the connection are automatically
            re-associated with the LAG. If the connection was originally associated with a different
            LAG, the virtual interfaces remain associated with the original LAG.
            </para><para>
            For interconnects, any hosted connections are automatically re-associated with the
            LAG. If the interconnect was originally associated with a different LAG, the hosted
            connections remain associated with the original LAG.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RegisterDCConnectionWithLagCmdlet.ConnectionId">
            <summary>
            <para>
            <para>The ID of the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RegisterDCConnectionWithLagCmdlet.LagId">
            <summary>
            <para>
            <para>The ID of the LAG with which to associate the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RegisterDCConnectionWithLagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.AssociateConnectionWithLagResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.AssociateConnectionWithLagResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RegisterDCConnectionWithLagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RegisterDCConnectionWithLagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.RegisterDCHostedConnectionCmdlet">
            <summary>
            Associates a hosted connection and its virtual interfaces with a link aggregation
            group (LAG) or interconnect. If the target interconnect or LAG has an existing hosted
            connection with a conflicting VLAN number or IP address, the operation fails. This
            action temporarily interrupts the hosted connection's connectivity to AWS as it is
            being migrated.
            
             <note><para>
            Intended for use by AWS Direct Connect Partners only.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RegisterDCHostedConnectionCmdlet.ConnectionId">
            <summary>
            <para>
            <para>The ID of the hosted connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RegisterDCHostedConnectionCmdlet.ParentConnectionId">
            <summary>
            <para>
            <para>The ID of the interconnect or the LAG.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RegisterDCHostedConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.AssociateHostedConnectionResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.AssociateHostedConnectionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RegisterDCHostedConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RegisterDCHostedConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.RegisterDCVirtualInterfaceCmdlet">
            <summary>
            Associates a virtual interface with a specified link aggregation group (LAG) or connection.
            Connectivity to AWS is temporarily interrupted as the virtual interface is being migrated.
            If the target connection or LAG has an associated virtual interface with a conflicting
            VLAN number or a conflicting IP address, the operation fails.
            
             
            <para>
            Virtual interfaces associated with a hosted connection cannot be associated with a
            LAG; hosted connections must be migrated along with their virtual interfaces using
            <a>AssociateHostedConnection</a>.
            </para><para>
            To reassociate a virtual interface to a new connection or LAG, the requester must
            own either the virtual interface itself or the connection to which the virtual interface
            is currently associated. Additionally, the requester must own the connection or LAG
            for the association.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RegisterDCVirtualInterfaceCmdlet.ConnectionId">
            <summary>
            <para>
            <para>The ID of the LAG or connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RegisterDCVirtualInterfaceCmdlet.VirtualInterfaceId">
            <summary>
            <para>
            <para>The ID of the virtual interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RegisterDCVirtualInterfaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.AssociateVirtualInterfaceResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.AssociateVirtualInterfaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RegisterDCVirtualInterfaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VirtualInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^VirtualInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RegisterDCVirtualInterfaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.RemoveDCBGPPeerCmdlet">
            <summary>
            Deletes the specified BGP peer on the specified virtual interface with the specified
            customer address and ASN.
            
             
            <para>
            You cannot delete the last BGP peer from a virtual interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCBGPPeerCmdlet.Asn">
            <summary>
            <para>
            <para>The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCBGPPeerCmdlet.BgpPeerId">
            <summary>
            <para>
            <para>The ID of the BGP peer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCBGPPeerCmdlet.CustomerAddress">
            <summary>
            <para>
            <para>The IP address assigned to the customer interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCBGPPeerCmdlet.VirtualInterfaceId">
            <summary>
            <para>
            <para>The ID of the virtual interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCBGPPeerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VirtualInterface'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DeleteBGPPeerResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DeleteBGPPeerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCBGPPeerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VirtualInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^VirtualInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCBGPPeerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.RemoveDCConnectionCmdlet">
            <summary>
            Deletes the specified connection.
            
             
            <para>
            Deleting a connection only stops the AWS Direct Connect port hour and data transfer
            charges. If you are partnering with any third parties to connect with the AWS Direct
            Connect location, you must cancel your service with them separately.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCConnectionCmdlet.ConnectionId">
            <summary>
            <para>
            <para>The ID of the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DeleteConnectionResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DeleteConnectionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.RemoveDCDirectConnectGatewayAssociationProposalCmdlet">
            <summary>
            Deletes the association proposal request between the specified Direct Connect gateway
            and virtual private gateway or transit gateway.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCDirectConnectGatewayAssociationProposalCmdlet.ProposalId">
            <summary>
            <para>
            <para>The ID of the proposal.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCDirectConnectGatewayAssociationProposalCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DirectConnectGatewayAssociationProposal'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DeleteDirectConnectGatewayAssociationProposalResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DeleteDirectConnectGatewayAssociationProposalResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCDirectConnectGatewayAssociationProposalCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProposalId parameter.
            The -PassThru parameter is deprecated, use -Select '^ProposalId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCDirectConnectGatewayAssociationProposalCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.RemoveDCGatewayCmdlet">
            <summary>
            Deletes the specified Direct Connect gateway. You must first delete all virtual interfaces
            that are attached to the Direct Connect gateway and disassociate all virtual private
            gateways associated with the Direct Connect gateway.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCGatewayCmdlet.DirectConnectGatewayId">
            <summary>
            <para>
            <para>The ID of the Direct Connect gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCGatewayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DirectConnectGateway'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DeleteDirectConnectGatewayResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DeleteDirectConnectGatewayResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCGatewayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectConnectGatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectConnectGatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCGatewayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.RemoveDCGatewayAssociationCmdlet">
            <summary>
            Deletes the association between the specified Direct Connect gateway and virtual private
            gateway.
            
             
            <para>
            We recommend that you specify the <code>associationID</code> to delete the association.
            Alternatively, if you own virtual gateway and a Direct Connect gateway association,
            you can specify the <code>virtualGatewayId</code> and <code>directConnectGatewayId</code>
            to delete an association.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCGatewayAssociationCmdlet.AssociationId">
            <summary>
            <para>
            <para>The ID of the Direct Connect gateway association.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCGatewayAssociationCmdlet.DirectConnectGatewayId">
            <summary>
            <para>
            <para>The ID of the Direct Connect gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCGatewayAssociationCmdlet.VirtualGatewayId">
            <summary>
            <para>
            <para>The ID of the virtual private gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCGatewayAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DirectConnectGatewayAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DeleteDirectConnectGatewayAssociationResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DeleteDirectConnectGatewayAssociationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCGatewayAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VirtualGatewayId parameter.
            The -PassThru parameter is deprecated, use -Select '^VirtualGatewayId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCGatewayAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.RemoveDCInterconnectCmdlet">
            <summary>
            Deletes the specified interconnect.
            
             <note><para>
            Intended for use by AWS Direct Connect Partners only.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCInterconnectCmdlet.InterconnectId">
            <summary>
            <para>
            <para>The ID of the interconnect.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCInterconnectCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InterconnectState'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DeleteInterconnectResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DeleteInterconnectResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCInterconnectCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InterconnectId parameter.
            The -PassThru parameter is deprecated, use -Select '^InterconnectId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCInterconnectCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.RemoveDCLagCmdlet">
            <summary>
            Deletes the specified link aggregation group (LAG). You cannot delete a LAG if it
            has active virtual interfaces or hosted connections.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCLagCmdlet.LagId">
            <summary>
            <para>
            <para>The ID of the LAG.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCLagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DeleteLagResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DeleteLagResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCLagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LagId parameter.
            The -PassThru parameter is deprecated, use -Select '^LagId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCLagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.RemoveDCResourceTagCmdlet">
            <summary>
            Removes one or more tags from the specified AWS Direct Connect resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The tag keys of the tags to remove.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.RemoveDCVirtualInterfaceCmdlet">
            <summary>
            Deletes a virtual interface.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCVirtualInterfaceCmdlet.VirtualInterfaceId">
            <summary>
            <para>
            <para>The ID of the virtual interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCVirtualInterfaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VirtualInterfaceState'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DeleteVirtualInterfaceResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DeleteVirtualInterfaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCVirtualInterfaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VirtualInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^VirtualInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.RemoveDCVirtualInterfaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.StartDCBgpFailoverTestCmdlet">
            <summary>
            Starts the virtual interface failover test that verifies your configuration meets
            your resiliency requirements by placing the BGP peering session in the DOWN state.
            You can then send traffic to verify that there are no outages.
            
             
            <para>
            You can run the test on public, private, transit, and hosted virtual interfaces.
            </para><para>
            You can use <a href="https://docs.aws.amazon.com/directconnect/latest/APIReference/API_ListVirtualInterfaceTestHistory.html">ListVirtualInterfaceTestHistory</a>
            to view the virtual interface test history.
            </para><para>
            If you need to stop the test before the test interval completes, use <a href="https://docs.aws.amazon.com/directconnect/latest/APIReference/API_StopBgpFailoverTest.html">StopBgpFailoverTest</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.StartDCBgpFailoverTestCmdlet.BgpPeer">
            <summary>
            <para>
            <para>The BGP peers to place in the DOWN state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.StartDCBgpFailoverTestCmdlet.TestDurationInMinute">
            <summary>
            <para>
            <para>The time in minutes that the virtual interface failover test will last.</para><para>Maximum value: 180 minutes (3 hours).</para><para>Default: 180 minutes (3 hours).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.StartDCBgpFailoverTestCmdlet.VirtualInterfaceId">
            <summary>
            <para>
            <para>The ID of the virtual interface you want to test.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.StartDCBgpFailoverTestCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VirtualInterfaceTest'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.StartBgpFailoverTestResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.StartBgpFailoverTestResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.StartDCBgpFailoverTestCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VirtualInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^VirtualInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.StartDCBgpFailoverTestCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.StopDCBgpFailoverTestCmdlet">
            <summary>
            Stops the virtual interface failover test.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.StopDCBgpFailoverTestCmdlet.VirtualInterfaceId">
            <summary>
            <para>
            <para>The ID of the virtual interface you no longer want to test.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.StopDCBgpFailoverTestCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VirtualInterfaceTest'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.StopBgpFailoverTestResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.StopBgpFailoverTestResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.StopDCBgpFailoverTestCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VirtualInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^VirtualInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.StopDCBgpFailoverTestCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.UnregisterDCConnectionFromLagCmdlet">
            <summary>
            Disassociates a connection from a link aggregation group (LAG). The connection is
            interrupted and re-established as a standalone connection (the connection is not deleted;
            to delete the connection, use the <a>DeleteConnection</a> request). If the LAG has
            associated virtual interfaces or hosted connections, they remain associated with the
            LAG. A disassociated connection owned by an AWS Direct Connect Partner is automatically
            converted to an interconnect.
            
             
            <para>
            If disassociating the connection would cause the LAG to fall below its setting for
            minimum number of operational connections, the request fails, except when it's the
            last member of the LAG. If all connections are disassociated, the LAG continues to
            exist as an empty LAG with no physical connections. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UnregisterDCConnectionFromLagCmdlet.ConnectionId">
            <summary>
            <para>
            <para>The ID of the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UnregisterDCConnectionFromLagCmdlet.LagId">
            <summary>
            <para>
            <para>The ID of the LAG.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UnregisterDCConnectionFromLagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.DisassociateConnectionFromLagResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.DisassociateConnectionFromLagResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UnregisterDCConnectionFromLagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UnregisterDCConnectionFromLagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.UpdateDCDirectConnectGatewayAssociationCmdlet">
            <summary>
            Updates the specified attributes of the Direct Connect gateway association.
            
             
            <para>
            Add or remove prefixes from the association.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UpdateDCDirectConnectGatewayAssociationCmdlet.AddAllowedPrefixesToDirectConnectGateway">
            <summary>
            <para>
            <para>The Amazon VPC prefixes to advertise to the Direct Connect gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UpdateDCDirectConnectGatewayAssociationCmdlet.AssociationId">
            <summary>
            <para>
            <para>The ID of the Direct Connect gateway association.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UpdateDCDirectConnectGatewayAssociationCmdlet.RemoveAllowedPrefixesToDirectConnectGateway">
            <summary>
            <para>
            <para>The Amazon VPC prefixes to no longer advertise to the Direct Connect gateway.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UpdateDCDirectConnectGatewayAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DirectConnectGatewayAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.UpdateDirectConnectGatewayAssociationResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.UpdateDirectConnectGatewayAssociationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UpdateDCDirectConnectGatewayAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssociationId parameter.
            The -PassThru parameter is deprecated, use -Select '^AssociationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UpdateDCDirectConnectGatewayAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.UpdateDCLagCmdlet">
            <summary>
            Updates the attributes of the specified link aggregation group (LAG).
            
             
            <para>
            You can update the following attributes:
            </para><ul><li><para>
            The name of the LAG.
            </para></li><li><para>
            The value for the minimum number of connections that must be operational for the LAG
            itself to be operational. 
            </para></li></ul><para>
            When you create a LAG, the default value for the minimum number of operational connections
            is zero (0). If you update this value and the number of operational connections falls
            below the specified value, the LAG automatically goes down to avoid over-utilization
            of the remaining connections. Adjust this value with care, as it could force the LAG
            down if it is set higher than the current number of operational connections.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UpdateDCLagCmdlet.LagId">
            <summary>
            <para>
            <para>The ID of the LAG.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UpdateDCLagCmdlet.LagName">
            <summary>
            <para>
            <para>The name of the LAG.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UpdateDCLagCmdlet.MinimumLink">
            <summary>
            <para>
            <para>The minimum number of physical connections that must be operational for the LAG itself
            to be operational.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UpdateDCLagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.UpdateLagResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.UpdateLagResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UpdateDCLagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LagId parameter.
            The -PassThru parameter is deprecated, use -Select '^LagId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UpdateDCLagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DC.UpdateDCVirtualInterfaceAttributeCmdlet">
            <summary>
            Updates the specified attributes of the specified virtual private interface.
            
             
            <para>
            Setting the MTU of a virtual interface to 9001 (jumbo frames) can cause an update
            to the underlying physical connection if it wasn't updated to support jumbo frames.
            Updating the connection disrupts network connectivity for all virtual interfaces associated
            with the connection for up to 30 seconds. To check whether your connection supports
            jumbo frames, call <a>DescribeConnections</a>. To check whether your virtual q interface
            supports jumbo frames, call <a>DescribeVirtualInterfaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UpdateDCVirtualInterfaceAttributeCmdlet.Mtu">
            <summary>
            <para>
            <para>The maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001.
            The default value is 1500.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UpdateDCVirtualInterfaceAttributeCmdlet.VirtualInterfaceId">
            <summary>
            <para>
            <para>The ID of the virtual private interface.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UpdateDCVirtualInterfaceAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DirectConnect.Model.UpdateVirtualInterfaceAttributesResponse).
            Specifying the name of a property of type Amazon.DirectConnect.Model.UpdateVirtualInterfaceAttributesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UpdateDCVirtualInterfaceAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VirtualInterfaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^VirtualInterfaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DC.UpdateDCVirtualInterfaceAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
