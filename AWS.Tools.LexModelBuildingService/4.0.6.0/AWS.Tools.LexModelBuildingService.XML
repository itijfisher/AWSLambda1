<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.LexModelBuildingService</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.AddLMBResourceTagCmdlet">
            <summary>
            Adds the specified tags to the specified resource. If a tag key already exists, the
            existing value is replaced with the new value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.AddLMBResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the bot, bot alias, or bot channel to tag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.AddLMBResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tag keys to add to the resource. If a tag key already exists, the existing
            value is replaced with the new value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.AddLMBResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.AddLMBResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.AddLMBResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotCmdlet">
            <summary>
            Returns metadata information for a specific bot. You must provide the bot name and
            the bot version or alias. 
            
             
            <para>
             This operation requires permissions for the <code>lex:GetBot</code> action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotCmdlet.Name">
            <summary>
            <para>
            <para>The name of the bot. The name is case sensitive. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotCmdlet.VersionOrAlias">
            <summary>
            <para>
            <para>The version or alias of the bot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.GetBotResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.GetBotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VersionOrAlias parameter.
            The -PassThru parameter is deprecated, use -Select '^VersionOrAlias' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotAliasCmdlet">
            <summary>
            Returns information about an Amazon Lex bot alias. For more information about aliases,
            see <a>versioning-aliases</a>.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotAlias</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotAliasCmdlet.BotName">
            <summary>
            <para>
            <para>The name of the bot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotAliasCmdlet.Name">
            <summary>
            <para>
            <para>The name of the bot alias. The name is case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.GetBotAliasResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.GetBotAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotAliasListCmdlet">
            <summary>
            Returns a list of aliases for a specified Amazon Lex bot.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotAliases</code> action.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotAliasListCmdlet.BotName">
            <summary>
            <para>
            <para>The name of the bot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotAliasListCmdlet.NameContain">
            <summary>
            <para>
            <para>Substring to match in bot alias names. An alias will be returned if any part of its
            name matches the substring. For example, "xyz" matches both "xyzabc" and "abcxyz."</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotAliasListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of aliases to return in the response. The default is 50. . </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotAliasListCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token for fetching the next page of aliases. If the response to this
            call is truncated, Amazon Lex returns a pagination token in the response. To fetch
            the next page of aliases, specify the pagination token in the next request. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotAliasListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BotAliases'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.GetBotAliasesResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.GetBotAliasesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotAliasListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BotName parameter.
            The -PassThru parameter is deprecated, use -Select '^BotName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotAliasListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotChannelAssociationCmdlet">
            <summary>
            Returns information about the association between an Amazon Lex bot and a messaging
            platform.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotChannelAssociation</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotChannelAssociationCmdlet.BotAlias">
            <summary>
            <para>
            <para>An alias pointing to the specific version of the Amazon Lex bot to which this association
            is being made.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotChannelAssociationCmdlet.BotName">
            <summary>
            <para>
            <para>The name of the Amazon Lex bot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotChannelAssociationCmdlet.Name">
            <summary>
            <para>
            <para>The name of the association between the bot and the channel. The name is case sensitive.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotChannelAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.GetBotChannelAssociationResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.GetBotChannelAssociationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotChannelAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotChannelAssociationListCmdlet">
            <summary>
            Returns a list of all of the channels associated with the specified bot. 
            
             
            <para>
            The <code>GetBotChannelAssociations</code> operation requires permissions for the
            <code>lex:GetBotChannelAssociations</code> action.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotChannelAssociationListCmdlet.BotAlias">
            <summary>
            <para>
            <para>An alias pointing to the specific version of the Amazon Lex bot to which this association
            is being made.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotChannelAssociationListCmdlet.BotName">
            <summary>
            <para>
            <para>The name of the Amazon Lex bot in the association.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotChannelAssociationListCmdlet.NameContain">
            <summary>
            <para>
            <para>Substring to match in channel association names. An association will be returned if
            any part of its name matches the substring. For example, "xyz" matches both "xyzabc"
            and "abcxyz." To return all bot channel associations, use a hyphen ("-") as the <code>nameContains</code>
            parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotChannelAssociationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of associations to return in the response. The default is 50. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotChannelAssociationListCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token for fetching the next page of associations. If the response to
            this call is truncated, Amazon Lex returns a pagination token in the response. To
            fetch the next page of associations, specify the pagination token in the next request.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotChannelAssociationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BotChannelAssociations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotChannelAssociationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BotName parameter.
            The -PassThru parameter is deprecated, use -Select '^BotName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotChannelAssociationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotListCmdlet">
            <summary>
            Returns bot information as follows: 
            
             <ul><li><para>
            If you provide the <code>nameContains</code> field, the response includes information
            for the <code>$LATEST</code> version of all bots whose name contains the specified
            string.
            </para></li><li><para>
            If you don't specify the <code>nameContains</code> field, the operation returns information
            about the <code>$LATEST</code> version of all of your bots.
            </para></li></ul><para>
            This operation requires permission for the <code>lex:GetBots</code> action.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotListCmdlet.NameContain">
            <summary>
            <para>
            <para>Substring to match in bot names. A bot will be returned if any part of its name matches
            the substring. For example, "xyz" matches both "xyzabc" and "abcxyz."</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of bots to return in the response that the request will return.
            The default is 10.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotListCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token that fetches the next page of bots. If the response to this call
            is truncated, Amazon Lex returns a pagination token in the response. To fetch the
            next page of bots, specify the pagination token in the next request. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Bots'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.GetBotsResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.GetBotsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotVersionListCmdlet">
            <summary>
            Gets information about all of the versions of a bot.
            
             
            <para>
            The <code>GetBotVersions</code> operation returns a <code>BotMetadata</code> object
            for each version of a bot. For example, if a bot has three numbered versions, the
            <code>GetBotVersions</code> operation returns four <code>BotMetadata</code> objects
            in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para><para>
            The <code>GetBotVersions</code> operation always returns at least one version, the
            <code>$LATEST</code> version.
            </para><para>
            This operation requires permissions for the <code>lex:GetBotVersions</code> action.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotVersionListCmdlet.Name">
            <summary>
            <para>
            <para>The name of the bot for which versions should be returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotVersionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of bot versions to return in the response. The default is 10.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotVersionListCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token for fetching the next page of bot versions. If the response to
            this call is truncated, Amazon Lex returns a pagination token in the response. To
            fetch the next page of versions, specify the pagination token in the next request.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Bots'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.GetBotVersionsResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.GetBotVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBotVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.GetLMBBuiltinIntentCmdlet">
            <summary>
            Returns information about a built-in intent.
            
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltinIntent</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBuiltinIntentCmdlet.Signature">
            <summary>
            <para>
            <para>The unique identifier for a built-in intent. To find the signature for an intent,
            see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents">Standard
            Built-in Intents</a> in the <i>Alexa Skills Kit</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBuiltinIntentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.GetBuiltinIntentResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.GetBuiltinIntentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBuiltinIntentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Signature parameter.
            The -PassThru parameter is deprecated, use -Select '^Signature' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.GetLMBBuiltinIntentListCmdlet">
            <summary>
            Gets a list of built-in intents that meet the specified criteria.
            
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltinIntents</code> action.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBuiltinIntentListCmdlet.Locale">
            <summary>
            <para>
            <para>A list of locales that the intent supports.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBuiltinIntentListCmdlet.SignatureContain">
            <summary>
            <para>
            <para>Substring to match in built-in intent signatures. An intent will be returned if any
            part of its signature matches the substring. For example, "xyz" matches both "xyzabc"
            and "abcxyz." To find the signature for an intent, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents">Standard
            Built-in Intents</a> in the <i>Alexa Skills Kit</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBuiltinIntentListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of intents to return in the response. The default is 10.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBuiltinIntentListCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token that fetches the next page of intents. If this API call is truncated,
            Amazon Lex returns a pagination token in the response. To fetch the next page of intents,
            use the pagination token in the next request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBuiltinIntentListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Intents'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.GetBuiltinIntentsResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.GetBuiltinIntentsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBuiltinIntentListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.GetLMBBuiltinSlotTypeCmdlet">
            <summary>
            Gets a list of built-in slot types that meet the specified criteria.
            
             
            <para>
            For a list of built-in slot types, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference">Slot
            Type Reference</a> in the <i>Alexa Skills Kit</i>.
            </para><para>
            This operation requires permission for the <code>lex:GetBuiltInSlotTypes</code> action.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBuiltinSlotTypeCmdlet.Locale">
            <summary>
            <para>
            <para>A list of locales that the slot type supports.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBuiltinSlotTypeCmdlet.SignatureContain">
            <summary>
            <para>
            <para>Substring to match in built-in slot type signatures. A slot type will be returned
            if any part of its signature matches the substring. For example, "xyz" matches both
            "xyzabc" and "abcxyz."</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBuiltinSlotTypeCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of slot types to return in the response. The default is 10.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBuiltinSlotTypeCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token that fetches the next page of slot types. If the response to this
            API call is truncated, Amazon Lex returns a pagination token in the response. To fetch
            the next page of slot types, specify the pagination token in the next request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBuiltinSlotTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SlotTypes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBBuiltinSlotTypeCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.GetLMBExportCmdlet">
            <summary>
            Exports the contents of a Amazon Lex resource in a specified format.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBExportCmdlet.ExportType">
            <summary>
            <para>
            <para>The format of the exported data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBExportCmdlet.Name">
            <summary>
            <para>
            <para>The name of the bot to export.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBExportCmdlet.ResourceType">
            <summary>
            <para>
            <para>The type of resource to export. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBExportCmdlet.Version">
            <summary>
            <para>
            <para>The version of the bot to export.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBExportCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.GetExportResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.GetExportResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBExportCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.GetLMBImportCmdlet">
            <summary>
            Gets information about an import job started with the <code>StartImport</code> operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBImportCmdlet.ImportId">
            <summary>
            <para>
            <para>The identifier of the import job information to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBImportCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.GetImportResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.GetImportResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBImportCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImportId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImportId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.GetLMBIntentCmdlet">
            <summary>
            Returns information about an intent. In addition to the intent name, you must specify
            the intent version. 
            
             
            <para>
             This operation requires permissions to perform the <code>lex:GetIntent</code> action.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBIntentCmdlet.Name">
            <summary>
            <para>
            <para>The name of the intent. The name is case sensitive. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBIntentCmdlet.Version">
            <summary>
            <para>
            <para>The version of the intent.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBIntentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.GetIntentResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.GetIntentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBIntentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.GetLMBIntentListCmdlet">
            <summary>
            Returns intent information as follows: 
            
             <ul><li><para>
            If you specify the <code>nameContains</code> field, returns the <code>$LATEST</code>
            version of all intents that contain the specified string.
            </para></li><li><para>
             If you don't specify the <code>nameContains</code> field, returns information about
            the <code>$LATEST</code> version of all intents. 
            </para></li></ul><para>
             The operation requires permission for the <code>lex:GetIntents</code> action. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBIntentListCmdlet.NameContain">
            <summary>
            <para>
            <para>Substring to match in intent names. An intent will be returned if any part of its
            name matches the substring. For example, "xyz" matches both "xyzabc" and "abcxyz."</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBIntentListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of intents to return in the response. The default is 10.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBIntentListCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token that fetches the next page of intents. If the response to this
            API call is truncated, Amazon Lex returns a pagination token in the response. To fetch
            the next page of intents, specify the pagination token in the next request. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBIntentListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Intents'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.GetIntentsResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.GetIntentsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBIntentListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.GetLMBIntentVersionCmdlet">
            <summary>
            Gets information about all of the versions of an intent.
            
             
            <para>
            The <code>GetIntentVersions</code> operation returns an <code>IntentMetadata</code>
            object for each version of an intent. For example, if an intent has three numbered
            versions, the <code>GetIntentVersions</code> operation returns four <code>IntentMetadata</code>
            objects in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para><para>
            The <code>GetIntentVersions</code> operation always returns at least one version,
            the <code>$LATEST</code> version.
            </para><para>
            This operation requires permissions for the <code>lex:GetIntentVersions</code> action.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBIntentVersionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the intent for which versions should be returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBIntentVersionCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of intent versions to return in the response. The default is 10.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBIntentVersionCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token for fetching the next page of intent versions. If the response
            to this call is truncated, Amazon Lex returns a pagination token in the response.
            To fetch the next page of versions, specify the pagination token in the next request.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBIntentVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Intents'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.GetIntentVersionsResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.GetIntentVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBIntentVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBIntentVersionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.GetLMBResourceTagCmdlet">
            <summary>
            Gets a list of tags associated with the specified resource. Only bots, bot aliases,
            and bot channels can have tags associated with them.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource to get a list of tags for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.GetLMBSlotTypeCmdlet">
            <summary>
            Returns information about a specific version of a slot type. In addition to specifying
            the slot type name, you must specify the slot type version.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetSlotType</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBSlotTypeCmdlet.Name">
            <summary>
            <para>
            <para>The name of the slot type. The name is case sensitive. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBSlotTypeCmdlet.Version">
            <summary>
            <para>
            <para>The version of the slot type. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBSlotTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.GetSlotTypeResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.GetSlotTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBSlotTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.GetLMBSlotTypeListCmdlet">
            <summary>
            Returns slot type information as follows: 
            
             <ul><li><para>
            If you specify the <code>nameContains</code> field, returns the <code>$LATEST</code>
            version of all slot types that contain the specified string.
            </para></li><li><para>
             If you don't specify the <code>nameContains</code> field, returns information about
            the <code>$LATEST</code> version of all slot types. 
            </para></li></ul><para>
             The operation requires permission for the <code>lex:GetSlotTypes</code> action. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBSlotTypeListCmdlet.NameContain">
            <summary>
            <para>
            <para>Substring to match in slot type names. A slot type will be returned if any part of
            its name matches the substring. For example, "xyz" matches both "xyzabc" and "abcxyz."</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBSlotTypeListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of slot types to return in the response. The default is 10.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBSlotTypeListCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token that fetches the next page of slot types. If the response to this
            API call is truncated, Amazon Lex returns a pagination token in the response. To fetch
            next page of slot types, specify the pagination token in the next request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBSlotTypeListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SlotTypes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.GetSlotTypesResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.GetSlotTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBSlotTypeListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.GetLMBSlotTypeVersionListCmdlet">
            <summary>
            Gets information about all versions of a slot type.
            
             
            <para>
            The <code>GetSlotTypeVersions</code> operation returns a <code>SlotTypeMetadata</code>
            object for each version of a slot type. For example, if a slot type has three numbered
            versions, the <code>GetSlotTypeVersions</code> operation returns four <code>SlotTypeMetadata</code>
            objects in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para><para>
            The <code>GetSlotTypeVersions</code> operation always returns at least one version,
            the <code>$LATEST</code> version.
            </para><para>
            This operation requires permissions for the <code>lex:GetSlotTypeVersions</code> action.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBSlotTypeVersionListCmdlet.Name">
            <summary>
            <para>
            <para>The name of the slot type for which versions should be returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBSlotTypeVersionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of slot type versions to return in the response. The default is
            10.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBSlotTypeVersionListCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token for fetching the next page of slot type versions. If the response
            to this call is truncated, Amazon Lex returns a pagination token in the response.
            To fetch the next page of versions, specify the pagination token in the next request.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBSlotTypeVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SlotTypes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBSlotTypeVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBSlotTypeVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.GetLMBUtterancesViewCmdlet">
            <summary>
            Use the <code>GetUtterancesView</code> operation to get information about the utterances
            that your users have made to your bot. You can use this list to tune the utterances
            that your bot responds to.
            
             
            <para>
            For example, say that you have created a bot to order flowers. After your users have
            used your bot for a while, use the <code>GetUtterancesView</code> operation to see
            the requests that they have made and whether they have been successful. You might
            find that the utterance "I want flowers" is not being recognized. You could add this
            utterance to the <code>OrderFlowers</code> intent so that your bot recognizes that
            utterance.
            </para><para>
            After you publish a new version of a bot, you can get information about the old version
            and the new so that you can compare the performance across the two versions. 
            </para><para>
            Utterance statistics are generated once a day. Data is available for the last 15 days.
            You can request information for up to 5 versions of your bot in each request. Amazon
            Lex returns the most frequent utterances received by the bot in the last 15 days.
            The response contains information about a maximum of 100 utterances for each version.
            </para><para>
            If you set <code>childDirected</code> field to true when you created your bot, or
            if you opted out of participating in improving Amazon Lex, utterances are not available.
            </para><para>
            This operation requires permissions for the <code>lex:GetUtterancesView</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBUtterancesViewCmdlet.BotName">
            <summary>
            <para>
            <para>The name of the bot for which utterance information should be returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBUtterancesViewCmdlet.BotVersion">
            <summary>
            <para>
            <para>An array of bot versions for which utterance information should be returned. The limit
            is 5 versions per request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBUtterancesViewCmdlet.StatusType">
            <summary>
            <para>
            <para>To return utterances that were recognized and handled, use <code>Detected</code>.
            To return utterances that were not recognized, use <code>Missed</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBUtterancesViewCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.GetUtterancesViewResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.GetUtterancesViewResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.GetLMBUtterancesViewCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BotName parameter.
            The -PassThru parameter is deprecated, use -Select '^BotName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.NewLMBBotVersionCmdlet">
            <summary>
            Creates a new version of the bot based on the <code>$LATEST</code> version. If the
            <code>$LATEST</code> version of this resource hasn't changed since you created the
            last version, Amazon Lex doesn't create a new version. It returns the last created
            version.
            
             <note><para>
            You can update only the <code>$LATEST</code> version of the bot. You can't update
            the numbered versions that you create with the <code>CreateBotVersion</code> operation.
            </para></note><para>
             When you create the first version of a bot, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para><para>
             This operation requires permission for the <code>lex:CreateBotVersion</code> action.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.NewLMBBotVersionCmdlet.Checksum">
            <summary>
            <para>
            <para>Identifies a specific revision of the <code>$LATEST</code> version of the bot. If
            you specify a checksum and the <code>$LATEST</code> version of the bot has a different
            checksum, a <code>PreconditionFailedException</code> exception is returned and Amazon
            Lex doesn't publish a new version. If you don't specify a checksum, Amazon Lex publishes
            the <code>$LATEST</code> version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.NewLMBBotVersionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the bot that you want to create a new version of. The name is case sensitive.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.NewLMBBotVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.CreateBotVersionResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.CreateBotVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.NewLMBBotVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.NewLMBBotVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.NewLMBIntentVersionCmdlet">
            <summary>
            Creates a new version of an intent based on the <code>$LATEST</code> version of the
            intent. If the <code>$LATEST</code> version of this intent hasn't changed since you
            last updated it, Amazon Lex doesn't create a new version. It returns the last version
            you created.
            
             <note><para>
            You can update only the <code>$LATEST</code> version of the intent. You can't update
            the numbered versions that you create with the <code>CreateIntentVersion</code> operation.
            </para></note><para>
             When you create a version of an intent, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para><para>
            This operation requires permissions to perform the <code>lex:CreateIntentVersion</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.NewLMBIntentVersionCmdlet.Checksum">
            <summary>
            <para>
            <para>Checksum of the <code>$LATEST</code> version of the intent that should be used to
            create the new version. If you specify a checksum and the <code>$LATEST</code> version
            of the intent has a different checksum, Amazon Lex returns a <code>PreconditionFailedException</code>
            exception and doesn't publish a new version. If you don't specify a checksum, Amazon
            Lex publishes the <code>$LATEST</code> version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.NewLMBIntentVersionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the intent that you want to create a new version of. The name is case
            sensitive. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.NewLMBIntentVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.NewLMBIntentVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.NewLMBIntentVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.NewLMBSlotTypeVersionCmdlet">
            <summary>
            Creates a new version of a slot type based on the <code>$LATEST</code> version of
            the specified slot type. If the <code>$LATEST</code> version of this resource has
            not changed since the last version that you created, Amazon Lex doesn't create a new
            version. It returns the last version that you created. 
            
             <note><para>
            You can update only the <code>$LATEST</code> version of a slot type. You can't update
            the numbered versions that you create with the <code>CreateSlotTypeVersion</code>
            operation.
            </para></note><para>
            When you create a version of a slot type, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para><para>
            This operation requires permissions for the <code>lex:CreateSlotTypeVersion</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.NewLMBSlotTypeVersionCmdlet.Checksum">
            <summary>
            <para>
            <para>Checksum for the <code>$LATEST</code> version of the slot type that you want to publish.
            If you specify a checksum and the <code>$LATEST</code> version of the slot type has
            a different checksum, Amazon Lex returns a <code>PreconditionFailedException</code>
            exception and doesn't publish the new version. If you don't specify a checksum, Amazon
            Lex publishes the <code>$LATEST</code> version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.NewLMBSlotTypeVersionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the slot type that you want to create a new version for. The name is case
            sensitive. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.NewLMBSlotTypeVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.NewLMBSlotTypeVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.NewLMBSlotTypeVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotCmdlet">
            <summary>
            Deletes all versions of the bot, including the <code>$LATEST</code> version. To delete
            a specific version of the bot, use the <a>DeleteBotVersion</a> operation. The <code>DeleteBot</code>
            operation doesn't immediately remove the bot schema. Instead, it is marked for deletion
            and removed later.
            
             
            <para>
            Amazon Lex stores utterances indefinitely for improving the ability of your bot to
            respond to user inputs. These utterances are not removed when the bot is deleted.
            To remove the utterances, use the <a>DeleteUtterances</a> operation.
            </para><para>
            If a bot has an alias, you can't delete it. Instead, the <code>DeleteBot</code> operation
            returns a <code>ResourceInUseException</code> exception that includes a reference
            to the alias that refers to the bot. To remove the reference to the bot, delete the
            alias. If you get the same exception again, delete the referring alias until the <code>DeleteBot</code>
            operation is successful.
            </para><para>
            This operation requires permissions for the <code>lex:DeleteBot</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotCmdlet.Name">
            <summary>
            <para>
            <para>The name of the bot. The name is case sensitive. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.DeleteBotResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotAliasCmdlet">
            <summary>
            Deletes an alias for the specified bot. 
            
             
            <para>
            You can't delete an alias that is used in the association between a bot and a messaging
            channel. If an alias is used in a channel association, the <code>DeleteBot</code>
            operation returns a <code>ResourceInUseException</code> exception that includes a
            reference to the channel association that refers to the bot. You can remove the reference
            to the alias by deleting the channel association. If you get the same exception again,
            delete the referring association until the <code>DeleteBotAlias</code> operation is
            successful.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotAliasCmdlet.BotName">
            <summary>
            <para>
            <para>The name of the bot that the alias points to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotAliasCmdlet.Name">
            <summary>
            <para>
            <para>The name of the alias to delete. The name is case sensitive. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.DeleteBotAliasResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotChannelAssociationCmdlet">
            <summary>
            Deletes the association between an Amazon Lex bot and a messaging platform.
            
             
            <para>
            This operation requires permission for the <code>lex:DeleteBotChannelAssociation</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotChannelAssociationCmdlet.BotAlias">
            <summary>
            <para>
            <para>An alias that points to the specific version of the Amazon Lex bot to which this association
            is being made.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotChannelAssociationCmdlet.BotName">
            <summary>
            <para>
            <para>The name of the Amazon Lex bot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotChannelAssociationCmdlet.Name">
            <summary>
            <para>
            <para>The name of the association. The name is case sensitive. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotChannelAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotChannelAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotChannelAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotVersionCmdlet">
            <summary>
            Deletes a specific version of a bot. To delete all versions of a bot, use the <a>DeleteBot</a>
            operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteBotVersion</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotVersionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the bot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotVersionCmdlet.Version">
            <summary>
            <para>
            <para>The version of the bot to delete. You cannot delete the <code>$LATEST</code> version
            of the bot. To delete the <code>$LATEST</code> version, use the <a>DeleteBot</a> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.DeleteBotVersionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Version parameter.
            The -PassThru parameter is deprecated, use -Select '^Version' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBBotVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBIntentCmdlet">
            <summary>
            Deletes all versions of the intent, including the <code>$LATEST</code> version. To
            delete a specific version of the intent, use the <a>DeleteIntentVersion</a> operation.
            
             
            <para>
             You can delete a version of an intent only if it is not referenced. To delete an
            intent that is referred to in one or more bots (see <a>how-it-works</a>), you must
            remove those references first. 
            </para><note><para>
             If you get the <code>ResourceInUseException</code> exception, it provides an example
            reference that shows where the intent is referenced. To remove the reference to the
            intent, either update the bot or delete it. If you get the same exception when you
            attempt to delete the intent again, repeat until the intent has no references and
            the call to <code>DeleteIntent</code> is successful. 
            </para></note><para>
             This operation requires permission for the <code>lex:DeleteIntent</code> action.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBIntentCmdlet.Name">
            <summary>
            <para>
            <para>The name of the intent. The name is case sensitive. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBIntentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.DeleteIntentResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBIntentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBIntentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBIntentVersionCmdlet">
            <summary>
            Deletes a specific version of an intent. To delete all versions of a intent, use the
            <a>DeleteIntent</a> operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteIntentVersion</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBIntentVersionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the intent.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBIntentVersionCmdlet.Version">
            <summary>
            <para>
            <para>The version of the intent to delete. You cannot delete the <code>$LATEST</code> version
            of the intent. To delete the <code>$LATEST</code> version, use the <a>DeleteIntent</a>
            operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBIntentVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.DeleteIntentVersionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBIntentVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBIntentVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBResourceTagCmdlet">
            <summary>
            Removes tags from a bot, bot alias or bot channel.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource to remove the tags from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>A list of tag keys to remove from the resource. If a tag key does not exist on the
            resource, it is ignored.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBSlotTypeCmdlet">
            <summary>
            Deletes all versions of the slot type, including the <code>$LATEST</code> version.
            To delete a specific version of the slot type, use the <a>DeleteSlotTypeVersion</a>
            operation.
            
             
            <para>
             You can delete a version of a slot type only if it is not referenced. To delete a
            slot type that is referred to in one or more intents, you must remove those references
            first. 
            </para><note><para>
             If you get the <code>ResourceInUseException</code> exception, the exception provides
            an example reference that shows the intent where the slot type is referenced. To remove
            the reference to the slot type, either update the intent or delete it. If you get
            the same exception when you attempt to delete the slot type again, repeat until the
            slot type has no references and the <code>DeleteSlotType</code> call is successful.
            
            </para></note><para>
            This operation requires permission for the <code>lex:DeleteSlotType</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBSlotTypeCmdlet.Name">
            <summary>
            <para>
            <para>The name of the slot type. The name is case sensitive. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBSlotTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.DeleteSlotTypeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBSlotTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBSlotTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBSlotTypeVersionCmdlet">
            <summary>
            Deletes a specific version of a slot type. To delete all versions of a slot type,
            use the <a>DeleteSlotType</a> operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteSlotTypeVersion</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBSlotTypeVersionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the slot type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBSlotTypeVersionCmdlet.Version">
            <summary>
            <para>
            <para>The version of the slot type to delete. You cannot delete the <code>$LATEST</code>
            version of the slot type. To delete the <code>$LATEST</code> version, use the <a>DeleteSlotType</a>
            operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBSlotTypeVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.DeleteSlotTypeVersionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBSlotTypeVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Version parameter.
            The -PassThru parameter is deprecated, use -Select '^Version' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBSlotTypeVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBUtteranceCmdlet">
            <summary>
            Deletes stored utterances.
            
             
            <para>
            Amazon Lex stores the utterances that users send to your bot. Utterances are stored
            for 15 days for use with the <a>GetUtterancesView</a> operation, and then stored indefinitely
            for use in improving the ability of your bot to respond to user input.
            </para><para>
            Use the <code>DeleteUtterances</code> operation to manually delete stored utterances
            for a specific user. When you use the <code>DeleteUtterances</code> operation, utterances
            stored for improving your bot's ability to respond to user input are deleted immediately.
            Utterances stored for use with the <code>GetUtterancesView</code> operation are deleted
            after 15 days.
            </para><para>
            This operation requires permissions for the <code>lex:DeleteUtterances</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBUtteranceCmdlet.BotName">
            <summary>
            <para>
            <para>The name of the bot that stored the utterances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBUtteranceCmdlet.UserId">
            <summary>
            <para>
            <para> The unique identifier for the user that made the utterances. This is the user ID
            that was sent in the <a href="http://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostContent.html">PostContent</a>
            or <a href="http://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html">PostText</a>
            operation request that contained the utterance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBUtteranceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.DeleteUtterancesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBUtteranceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.RemoveLMBUtteranceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.StartLMBImportCmdlet">
            <summary>
            Starts a job to import a resource to Amazon Lex.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.StartLMBImportCmdlet.MergeStrategy">
            <summary>
            <para>
            <para>Specifies the action that the <code>StartImport</code> operation should take when
            there is an existing resource with the same name.</para><ul><li><para>FAIL_ON_CONFLICT - The import operation is stopped on the first conflict between a
            resource in the import file and an existing resource. The name of the resource causing
            the conflict is in the <code>failureReason</code> field of the response to the <code>GetImport</code>
            operation.</para><para>OVERWRITE_LATEST - The import operation proceeds even if there is a conflict with
            an existing resource. The $LASTEST version of the existing resource is overwritten
            with the data from the import file.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.StartLMBImportCmdlet.Payload">
            <summary>
            <para>
            <para>A zip archive in binary format. The archive should contain one file, a JSON file containing
            the resource to import. The resource should match the type specified in the <code>resourceType</code>
            field.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.StartLMBImportCmdlet.ResourceType">
            <summary>
            <para>
            <para>Specifies the type of resource to export. Each resource also exports any resources
            that it depends on. </para><ul><li><para>A bot exports dependent intents.</para></li><li><para>An intent exports dependent slot types.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.StartLMBImportCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tags to add to the imported bot. You can only add tags when you import a
            bot, you can't add tags to an intent or slot type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.StartLMBImportCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.StartImportResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.StartImportResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.StartLMBImportCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotCmdlet">
            <summary>
            Creates an Amazon Lex conversational bot or replaces an existing bot. When you create
            or update a bot you are only required to specify a name, a locale, and whether the
            bot is directed toward children under age 13. You can use this to add intents later,
            or to remove intents from an existing bot. When you create a bot with the minimum
            information, the bot is created or updated but Amazon Lex returns the <code /> response
            <code>FAILED</code>. You can build the bot after you add one or more intents. For
            more information about Amazon Lex bots, see <a>how-it-works</a>. 
            
             
            <para>
            If you specify the name of an existing bot, the fields in the request replace the
            existing values in the <code>$LATEST</code> version of the bot. Amazon Lex removes
            any fields that you don't provide values for in the request, except for the <code>idleTTLInSeconds</code>
            and <code>privacySettings</code> fields, which are set to their default values. If
            you don't specify values for required fields, Amazon Lex throws an exception.
            </para><para>
            This operation requires permissions for the <code>lex:PutBot</code> action. For more
            information, see <a>security-iam</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotCmdlet.AbortStatement">
            <summary>
            <para>
            <para>When Amazon Lex can't understand the user's input in context, it tries to elicit the
            information a few times. After that, Amazon Lex sends the message defined in <code>abortStatement</code>
            to the user, and then aborts the conversation. To set the number of retries, use the
            <code>valueElicitationPrompt</code> field for the slot type. </para><para>For example, in a pizza ordering bot, Amazon Lex might ask a user "What type of crust
            would you like?" If the user's response is not one of the expected responses (for
            example, "thin crust, "deep dish," etc.), Amazon Lex tries to elicit a correct response
            a few more times. </para><para>For example, in a pizza ordering application, <code>OrderPizza</code> might be one
            of the intents. This intent might require the <code>CrustType</code> slot. You specify
            the <code>valueElicitationPrompt</code> field when you create the <code>CrustType</code>
            slot.</para><para>If you have defined a fallback intent the abort statement will not be sent to the
            user, the fallback intent is used instead. For more information, see <a href="https://docs.aws.amazon.com/lex/latest/dg/built-in-intent-fallback.html">
            AMAZON.FallbackIntent</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotCmdlet.Checksum">
            <summary>
            <para>
            <para>Identifies a specific revision of the <code>$LATEST</code> version.</para><para>When you create a new bot, leave the <code>checksum</code> field blank. If you specify
            a checksum you get a <code>BadRequestException</code> exception.</para><para>When you want to update a bot, set the <code>checksum</code> field to the checksum
            of the most recent revision of the <code>$LATEST</code> version. If you don't specify
            the <code> checksum</code> field, or if the checksum does not match the <code>$LATEST</code>
            version, you get a <code>PreconditionFailedException</code> exception.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotCmdlet.ChildDirected">
            <summary>
            <para>
            <para>For each Amazon Lex bot created with the Amazon Lex Model Building Service, you must
            specify whether your use of Amazon Lex is related to a website, program, or other
            application that is directed or targeted, in whole or in part, to children under age
            13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying
            <code>true</code> or <code>false</code> in the <code>childDirected</code> field. By
            specifying <code>true</code> in the <code>childDirected</code> field, you confirm
            that your use of Amazon Lex <b>is</b> related to a website, program, or other application
            that is directed or targeted, in whole or in part, to children under age 13 and subject
            to COPPA. By specifying <code>false</code> in the <code>childDirected</code> field,
            you confirm that your use of Amazon Lex <b>is not</b> related to a website, program,
            or other application that is directed or targeted, in whole or in part, to children
            under age 13 and subject to COPPA. You may not specify a default value for the <code>childDirected</code>
            field that does not accurately reflect whether your use of Amazon Lex is related to
            a website, program, or other application that is directed or targeted, in whole or
            in part, to children under age 13 and subject to COPPA.</para><para>If your use of Amazon Lex relates to a website, program, or other application that
            is directed in whole or in part, to children under age 13, you must obtain any required
            verifiable parental consent under COPPA. For information regarding the use of Amazon
            Lex in connection with websites, programs, or other applications that are directed
            or targeted, in whole or in part, to children under age 13, see the <a href="https://aws.amazon.com/lex/faqs#data-security">Amazon
            Lex FAQ.</a></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotCmdlet.CreateVersion">
            <summary>
            <para>
            <para>When set to <code>true</code> a new numbered version of the bot is created. This is
            the same as calling the <code>CreateBotVersion</code> operation. If you don't specify
            <code>createVersion</code>, the default is <code>false</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotCmdlet.Description">
            <summary>
            <para>
            <para>A description of the bot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotCmdlet.DetectSentiment">
            <summary>
            <para>
            <para>When set to <code>true</code> user utterances are sent to Amazon Comprehend for sentiment
            analysis. If you don't specify <code>detectSentiment</code>, the default is <code>false</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotCmdlet.IdleSessionTTLInSecond">
            <summary>
            <para>
            <para>The maximum time in seconds that Amazon Lex retains the data gathered in a conversation.</para><para>A user interaction session remains active for the amount of time specified. If no
            conversation occurs during this time, the session expires and Amazon Lex deletes any
            data provided before the timeout.</para><para>For example, suppose that a user chooses the OrderPizza intent, but gets sidetracked
            halfway through placing an order. If the user doesn't complete the order within the
            specified time, Amazon Lex discards the slot information that it gathered, and the
            user must start over.</para><para>If you don't include the <code>idleSessionTTLInSeconds</code> element in a <code>PutBot</code>
            operation request, Amazon Lex uses the default value. This is also true if the request
            replaces an existing bot.</para><para>The default is 300 seconds (5 minutes).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotCmdlet.Intent">
            <summary>
            <para>
            <para>An array of <code>Intent</code> objects. Each intent represents a command that a user
            can express. For example, a pizza ordering bot might support an OrderPizza intent.
            For more information, see <a>how-it-works</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotCmdlet.Locale">
            <summary>
            <para>
            <para> Specifies the target locale for the bot. Any intent used in the bot must be compatible
            with the locale of the bot. </para><para>The default is <code>en-US</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotCmdlet.ClarificationPrompt_MaxAttempt">
            <summary>
            <para>
            <para>The number of times to prompt the user for information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotCmdlet.ClarificationPrompt_Message">
            <summary>
            <para>
            <para>An array of objects, each of which provides a message string and its type. You can
            specify the message string in plain text or in Speech Synthesis Markup Language (SSML).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotCmdlet.Name">
            <summary>
            <para>
            <para>The name of the bot. The name is <i>not</i> case sensitive. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotCmdlet.ProcessBehavior">
            <summary>
            <para>
            <para>If you set the <code>processBehavior</code> element to <code>BUILD</code>, Amazon
            Lex builds the bot so that it can be run. If you set the element to <code>SAVE</code>
            Amazon Lex saves the bot, but doesn't build it. </para><para>If you don't specify this value, the default value is <code>BUILD</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotCmdlet.ClarificationPrompt_ResponseCard">
            <summary>
            <para>
            <para>A response card. Amazon Lex uses this prompt at runtime, in the <code>PostText</code>
            API response. It substitutes session attributes and slot values for placeholders in
            the response card. For more information, see <a>ex-resp-card</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tags to add to the bot. You can only add tags when you create a bot, you
            can't use the <code>PutBot</code> operation to update the tags on a bot. To update
            tags, use the <code>TagResource</code> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotCmdlet.VoiceId">
            <summary>
            <para>
            <para>The Amazon Polly voice ID that you want Amazon Lex to use for voice interactions with
            the user. The locale configured for the voice must match the locale of the bot. For
            more information, see <a href="https://docs.aws.amazon.com/polly/latest/dg/voicelist.html">Voices
            in Amazon Polly</a> in the <i>Amazon Polly Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.PutBotResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.PutBotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotAliasCmdlet">
            <summary>
            Creates an alias for the specified version of the bot or replaces an alias for the
            specified bot. To change the version of the bot that the alias points to, replace
            the alias. For more information about aliases, see <a>versioning-aliases</a>.
            
             
            <para>
            This operation requires permissions for the <code>lex:PutBotAlias</code> action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotAliasCmdlet.BotName">
            <summary>
            <para>
            <para>The name of the bot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotAliasCmdlet.BotVersion">
            <summary>
            <para>
            <para>The version of the bot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotAliasCmdlet.Checksum">
            <summary>
            <para>
            <para>Identifies a specific revision of the <code>$LATEST</code> version.</para><para>When you create a new bot alias, leave the <code>checksum</code> field blank. If you
            specify a checksum you get a <code>BadRequestException</code> exception.</para><para>When you want to update a bot alias, set the <code>checksum</code> field to the checksum
            of the most recent revision of the <code>$LATEST</code> version. If you don't specify
            the <code> checksum</code> field, or if the checksum does not match the <code>$LATEST</code>
            version, you get a <code>PreconditionFailedException</code> exception.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotAliasCmdlet.Description">
            <summary>
            <para>
            <para>A description of the alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotAliasCmdlet.ConversationLogs_IamRoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an IAM role with permission to write to your CloudWatch
            Logs for text logs and your S3 bucket for audio logs. If audio encryption is enabled,
            this role also provides access permission for the AWS KMS key used for encrypting
            audio logs. For more information, see <a href="https://docs.aws.amazon.com/lex/latest/dg/conversation-logs-role-and-policy.html">Creating
            an IAM Role and Policy for Conversation Logs</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotAliasCmdlet.ConversationLogs_LogSetting">
            <summary>
            <para>
            <para>The settings for your conversation logs. You can log the conversation text, conversation
            audio, or both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotAliasCmdlet.Name">
            <summary>
            <para>
            <para>The name of the alias. The name is <i>not</i> case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotAliasCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tags to add to the bot alias. You can only add tags when you create an alias,
            you can't use the <code>PutBotAlias</code> operation to update the tags on a bot alias.
            To update tags, use the <code>TagResource</code> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.PutBotAliasResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.PutBotAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBBotAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet">
            <summary>
            Creates an intent or replaces an existing intent.
            
             
            <para>
            To define the interaction between the user and your bot, you use one or more intents.
            For a pizza ordering bot, for example, you would create an <code>OrderPizza</code>
            intent. 
            </para><para>
            To create an intent or replace an existing intent, you must provide the following:
            </para><ul><li><para>
            Intent name. For example, <code>OrderPizza</code>.
            </para></li><li><para>
            Sample utterances. For example, "Can I order a pizza, please." and "I want to order
            a pizza."
            </para></li><li><para>
            Information to be gathered. You specify slot types for the information that your bot
            will request from the user. You can specify standard slot types, such as a date or
            a time, or custom slot types such as the size and crust of a pizza.
            </para></li><li><para>
            How the intent will be fulfilled. You can provide a Lambda function or configure the
            intent to return the intent information to the client application. If you use a Lambda
            function, when all of the intent information is available, Amazon Lex invokes your
            Lambda function. If you configure your intent to return the intent information to
            the client application. 
            </para></li></ul><para>
            You can specify other optional information in the request, such as:
            </para><ul><li><para>
            A confirmation prompt to ask the user to confirm an intent. For example, "Shall I
            order your pizza?"
            </para></li><li><para>
            A conclusion statement to send to the user after the intent has been fulfilled. For
            example, "I placed your pizza order."
            </para></li><li><para>
            A follow-up prompt that asks the user for additional activity. For example, asking
            "Do you want to order a drink with your pizza?"
            </para></li></ul><para>
            If you specify an existing intent name to update the intent, Amazon Lex replaces the
            values in the <code>$LATEST</code> version of the intent with the values in the request.
            Amazon Lex removes fields that you don't provide in the request. If you don't specify
            the required fields, Amazon Lex throws an exception. When you update the <code>$LATEST</code>
            version of an intent, the <code>status</code> field of any bot that uses the <code>$LATEST</code>
            version of the intent is set to <code>NOT_BUILT</code>.
            </para><para>
            For more information, see <a>how-it-works</a>.
            </para><para>
            This operation requires permissions for the <code>lex:PutIntent</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.Checksum">
            <summary>
            <para>
            <para>Identifies a specific revision of the <code>$LATEST</code> version.</para><para>When you create a new intent, leave the <code>checksum</code> field blank. If you
            specify a checksum you get a <code>BadRequestException</code> exception.</para><para>When you want to update a intent, set the <code>checksum</code> field to the checksum
            of the most recent revision of the <code>$LATEST</code> version. If you don't specify
            the <code> checksum</code> field, or if the checksum does not match the <code>$LATEST</code>
            version, you get a <code>PreconditionFailedException</code> exception.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.ConclusionStatement">
            <summary>
            <para>
            <para> The statement that you want Amazon Lex to convey to the user after the intent is
            successfully fulfilled by the Lambda function. </para><para>This element is relevant only if you provide a Lambda function in the <code>fulfillmentActivity</code>.
            If you return the intent to the client application, you can't specify this element.</para><note><para>The <code>followUpPrompt</code> and <code>conclusionStatement</code> are mutually
            exclusive. You can specify only one.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.CreateVersion">
            <summary>
            <para>
            <para>When set to <code>true</code> a new numbered version of the intent is created. This
            is the same as calling the <code>CreateIntentVersion</code> operation. If you do not
            specify <code>createVersion</code>, the default is <code>false</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.Description">
            <summary>
            <para>
            <para>A description of the intent.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.ConfirmationPrompt_MaxAttempt">
            <summary>
            <para>
            <para>The number of times to prompt the user for information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.Prompt_MaxAttempt">
            <summary>
            <para>
            <para>The number of times to prompt the user for information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.ConfirmationPrompt_Message">
            <summary>
            <para>
            <para>An array of objects, each of which provides a message string and its type. You can
            specify the message string in plain text or in Speech Synthesis Markup Language (SSML).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.Prompt_Message">
            <summary>
            <para>
            <para>An array of objects, each of which provides a message string and its type. You can
            specify the message string in plain text or in Speech Synthesis Markup Language (SSML).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.DialogCodeHook_MessageVersion">
            <summary>
            <para>
            <para>The version of the request-response that you want Amazon Lex to use to invoke your
            Lambda function. For more information, see <a>using-lambda</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.CodeHook_MessageVersion">
            <summary>
            <para>
            <para>The version of the request-response that you want Amazon Lex to use to invoke your
            Lambda function. For more information, see <a>using-lambda</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.Name">
            <summary>
            <para>
            <para>The name of the intent. The name is <i>not</i> case sensitive. </para><para>The name can't match a built-in intent name, or a built-in intent name with "AMAZON."
            removed. For example, because there is a built-in intent called <code>AMAZON.HelpIntent</code>,
            you can't create a custom intent called <code>HelpIntent</code>.</para><para>For a list of built-in intents, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents">Standard
            Built-in Intents</a> in the <i>Alexa Skills Kit</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.ParentIntentSignature">
            <summary>
            <para>
            <para>A unique identifier for the built-in intent to base this intent on. To find the signature
            for an intent, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents">Standard
            Built-in Intents</a> in the <i>Alexa Skills Kit</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.FollowUpPrompt_RejectionStatement">
            <summary>
            <para>
            <para>If the user answers "no" to the question defined in the <code>prompt</code> field,
            Amazon Lex responds with this statement to acknowledge that the intent was canceled.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.RejectionStatement">
            <summary>
            <para>
            <para>When the user answers "no" to the question defined in <code>confirmationPrompt</code>,
            Amazon Lex responds with this statement to acknowledge that the intent was canceled.
            </para><note><para>You must provide both the <code>rejectionStatement</code> and the <code>confirmationPrompt</code>,
            or neither.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.ConfirmationPrompt_ResponseCard">
            <summary>
            <para>
            <para>A response card. Amazon Lex uses this prompt at runtime, in the <code>PostText</code>
            API response. It substitutes session attributes and slot values for placeholders in
            the response card. For more information, see <a>ex-resp-card</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.Prompt_ResponseCard">
            <summary>
            <para>
            <para>A response card. Amazon Lex uses this prompt at runtime, in the <code>PostText</code>
            API response. It substitutes session attributes and slot values for placeholders in
            the response card. For more information, see <a>ex-resp-card</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.SampleUtterance">
            <summary>
            <para>
            <para>An array of utterances (strings) that a user might say to signal the intent. For example,
            "I want {PizzaSize} pizza", "Order {Quantity} {PizzaSize} pizzas". </para><para>In each utterance, a slot name is enclosed in curly braces. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.Slot">
            <summary>
            <para>
            <para>An array of intent slots. At runtime, Amazon Lex elicits required slot values from
            the user using prompts defined in the slots. For more information, see <a>how-it-works</a>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.FulfillmentActivity_Type">
            <summary>
            <para>
            <para> How the intent should be fulfilled, either by running a Lambda function or by returning
            the slot data to the client application. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.DialogCodeHook_Uri">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Lambda function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.CodeHook_Uri">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Lambda function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.PutIntentResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.PutIntentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBIntentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LMB.WriteLMBSlotTypeCmdlet">
            <summary>
            Creates a custom slot type or replaces an existing custom slot type.
            
             
            <para>
            To create a custom slot type, specify a name for the slot type and a set of enumeration
            values, which are the values that a slot of this type can assume. For more information,
            see <a>how-it-works</a>.
            </para><para>
            If you specify the name of an existing slot type, the fields in the request replace
            the existing values in the <code>$LATEST</code> version of the slot type. Amazon Lex
            removes the fields that you don't provide in the request. If you don't specify required
            fields, Amazon Lex throws an exception. When you update the <code>$LATEST</code> version
            of a slot type, if a bot uses the <code>$LATEST</code> version of an intent that contains
            the slot type, the bot's <code>status</code> field is set to <code>NOT_BUILT</code>.
            </para><para>
            This operation requires permissions for the <code>lex:PutSlotType</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBSlotTypeCmdlet.Checksum">
            <summary>
            <para>
            <para>Identifies a specific revision of the <code>$LATEST</code> version.</para><para>When you create a new slot type, leave the <code>checksum</code> field blank. If you
            specify a checksum you get a <code>BadRequestException</code> exception.</para><para>When you want to update a slot type, set the <code>checksum</code> field to the checksum
            of the most recent revision of the <code>$LATEST</code> version. If you don't specify
            the <code> checksum</code> field, or if the checksum does not match the <code>$LATEST</code>
            version, you get a <code>PreconditionFailedException</code> exception.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBSlotTypeCmdlet.CreateVersion">
            <summary>
            <para>
            <para>When set to <code>true</code> a new numbered version of the slot type is created.
            This is the same as calling the <code>CreateSlotTypeVersion</code> operation. If you
            do not specify <code>createVersion</code>, the default is <code>false</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBSlotTypeCmdlet.Description">
            <summary>
            <para>
            <para>A description of the slot type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBSlotTypeCmdlet.EnumerationValue">
            <summary>
            <para>
            <para>A list of <code>EnumerationValue</code> objects that defines the values that the slot
            type can take. Each value can have a list of <code>synonyms</code>, which are additional
            values that help train the machine learning model about the values that it resolves
            for a slot. </para><para>When Amazon Lex resolves a slot value, it generates a resolution list that contains
            up to five possible values for the slot. If you are using a Lambda function, this
            resolution list is passed to the function. If you are not using a Lambda function
            you can choose to return the value that the user entered or the first value in the
            resolution list as the slot value. The <code>valueSelectionStrategy</code> field indicates
            the option to use. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBSlotTypeCmdlet.Name">
            <summary>
            <para>
            <para>The name of the slot type. The name is <i>not</i> case sensitive. </para><para>The name can't match a built-in slot type name, or a built-in slot type name with
            "AMAZON." removed. For example, because there is a built-in slot type called <code>AMAZON.DATE</code>,
            you can't create a custom slot type called <code>DATE</code>.</para><para>For a list of built-in slot types, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference">Slot
            Type Reference</a> in the <i>Alexa Skills Kit</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBSlotTypeCmdlet.ParentSlotTypeSignature">
            <summary>
            <para>
            <para>The built-in slot type used as the parent of the slot type. When you define a parent
            slot type, the new slot type has all of the same configuration as the parent.</para><para>Only <code>AMAZON.AlphaNumeric</code> is supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBSlotTypeCmdlet.SlotTypeConfiguration">
            <summary>
            <para>
            <para>Configuration information that extends the parent built-in slot type. The configuration
            is added to the settings for the parent slot type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBSlotTypeCmdlet.ValueSelectionStrategy">
            <summary>
            <para>
            <para>Determines the slot resolution strategy that Amazon Lex uses to return slot type values.
            The field can be set to one of the following values:</para><ul><li><para><code>ORIGINAL_VALUE</code> - Returns the value entered by the user, if the user
            value is similar to the slot value.</para></li><li><para><code>TOP_RESOLUTION</code> - If there is a resolution list for the slot, return
            the first value in the resolution list as the slot type value. If there is no resolution
            list, null is returned.</para></li></ul><para>If you don't specify the <code>valueSelectionStrategy</code>, the default is <code>ORIGINAL_VALUE</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBSlotTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexModelBuildingService.Model.PutSlotTypeResponse).
            Specifying the name of a property of type Amazon.LexModelBuildingService.Model.PutSlotTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBSlotTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LMB.WriteLMBSlotTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
