<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.Connect</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.AddCONNResourceTagCmdlet">
            <summary>
            Adds the specified tags to the specified resource.
            
             
            <para>
            The supported resource type is users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.AddCONNResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.AddCONNResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>One or more tags. For example, { "tags": {"key1":"value1", "key2":"value2"} }.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.AddCONNResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.AddCONNResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.AddCONNResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.GetCONNContactAttributeCmdlet">
            <summary>
            Retrieves the contact attributes for the specified contact.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNContactAttributeCmdlet.InitialContactId">
            <summary>
            <para>
            <para>The identifier of the initial contact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNContactAttributeCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNContactAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Attributes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.GetContactAttributesResponse).
            Specifying the name of a property of type Amazon.Connect.Model.GetContactAttributesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNContactAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InitialContactId parameter.
            The -PassThru parameter is deprecated, use -Select '^InitialContactId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.GetCONNContactFlowListCmdlet">
            <summary>
            Provides information about the contact flows for the specified Amazon Connect instance.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNContactFlowListCmdlet.ContactFlowType">
            <summary>
            <para>
            <para>The type of contact flow.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNContactFlowListCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNContactFlowListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximimum number of results to return per page.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNContactFlowListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results. Use the value returned in the previous response
            in the next request to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNContactFlowListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ContactFlowSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.ListContactFlowsResponse).
            Specifying the name of a property of type Amazon.Connect.Model.ListContactFlowsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNContactFlowListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNContactFlowListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.GetCONNCurrentMetricDataCmdlet">
            <summary>
            Gets the real-time metric data from the specified Amazon Connect instance.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-reports.html">Real-time
            Metrics Reports</a> in the <i>Amazon Connect Administrator Guide</i>.
            </para><br/><br/>In the AWS.Tools.Connect module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNCurrentMetricDataCmdlet.Filters_Channel">
            <summary>
            <para>
            <para>The channel to use to filter the metrics.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNCurrentMetricDataCmdlet.CurrentMetric">
            <summary>
            <para>
            <para>The metrics to retrieve. Specify the name and unit for each metric. The following
            metrics are available:</para><dl><dt>AGENTS_AFTER_CONTACT_WORK</dt><dd><para>Unit: COUNT</para></dd><dt>AGENTS_AVAILABLE</dt><dd><para>Unit: COUNT</para></dd><dt>AGENTS_ERROR</dt><dd><para>Unit: COUNT</para></dd><dt>AGENTS_NON_PRODUCTIVE</dt><dd><para>Unit: COUNT</para></dd><dt>AGENTS_ON_CALL</dt><dd><para>Unit: COUNT</para></dd><dt>AGENTS_ON_CONTACT</dt><dd><para>Unit: COUNT</para></dd><dt>AGENTS_ONLINE</dt><dd><para>Unit: COUNT</para></dd><dt>AGENTS_STAFFED</dt><dd><para>Unit: COUNT</para></dd><dt>CONTACTS_IN_QUEUE</dt><dd><para>Unit: COUNT</para></dd><dt>CONTACTS_SCHEDULED</dt><dd><para>Unit: COUNT</para></dd><dt>OLDEST_CONTACT_AGE</dt><dd><para>Unit: SECONDS</para></dd><dt>SLOTS_ACTIVE</dt><dd><para>Unit: COUNT</para></dd><dt>SLOTS_AVAILABLE</dt><dd><para>Unit: COUNT</para></dd></dl>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNCurrentMetricDataCmdlet.Grouping">
            <summary>
            <para>
            <para>The grouping applied to the metrics returned. For example, when grouped by <code>QUEUE</code>,
            the metrics returned apply to each queue rather than aggregated for all queues. If
            you group by <code>CHANNEL</code>, you should include a Channels filter. The only
            supported channel is <code>VOICE</code>.</para><para>If no <code>Grouping</code> is included in the request, a summary of metrics is returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNCurrentMetricDataCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNCurrentMetricDataCmdlet.Filters_Queue">
            <summary>
            <para>
            <para>The queues to use to filter the metrics. You can specify up to 100 queues per request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNCurrentMetricDataCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximimum number of results to return per page.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNCurrentMetricDataCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results. Use the value returned in the previous response
            in the next request to retrieve the next set of results.</para><para>The token expires after 5 minutes from the time it is created. Subsequent requests
            that use the token must use the same request parameters as the request that generated
            the token.</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.Connect module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNCurrentMetricDataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.GetCurrentMetricDataResponse).
            Specifying the name of a property of type Amazon.Connect.Model.GetCurrentMetricDataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNCurrentMetricDataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNCurrentMetricDataCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.GetCONNFederationTokenCmdlet">
            <summary>
            Retrieves a token for federation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNFederationTokenCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNFederationTokenCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Credentials'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.GetFederationTokenResponse).
            Specifying the name of a property of type Amazon.Connect.Model.GetFederationTokenResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNFederationTokenCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.GetCONNHoursOfOperationListCmdlet">
            <summary>
            Provides information about the hours of operation for the specified Amazon Connect
            instance.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNHoursOfOperationListCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNHoursOfOperationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximimum number of results to return per page.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNHoursOfOperationListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results. Use the value returned in the previous response
            in the next request to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNHoursOfOperationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HoursOfOperationSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.ListHoursOfOperationsResponse).
            Specifying the name of a property of type Amazon.Connect.Model.ListHoursOfOperationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNHoursOfOperationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNHoursOfOperationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.GetCONNMetricDataCmdlet">
            <summary>
            Gets historical metric data from the specified Amazon Connect instance.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics.html">Historical
            Metrics Reports</a> in the <i>Amazon Connect Administrator Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNMetricDataCmdlet.Filters_Channel">
            <summary>
            <para>
            <para>The channel to use to filter the metrics.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNMetricDataCmdlet.EndTime">
            <summary>
            <para>
            <para>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for
            the retrieval of historical metrics data. The time must be specified using an interval
            of 5 minutes, such as 11:00, 11:05, 11:10, and must be later than the start time timestamp.</para><para>The time range between the start and end time must be less than 24 hours.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNMetricDataCmdlet.Grouping">
            <summary>
            <para>
            <para>The grouping applied to the metrics returned. For example, when results are grouped
            by queue, the metrics returned are grouped by queue. The values returned apply to
            the metrics for each queue rather than aggregated for all queues.</para><para>The only supported grouping is <code>QUEUE</code>.</para><para>If no grouping is specified, a summary of metrics for all queues is returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNMetricDataCmdlet.HistoricalMetric">
            <summary>
            <para>
            <para>The metrics to retrieve. Specify the name, unit, and statistic for each metric. The
            following historical metrics are available:</para><dl><dt>ABANDON_TIME</dt><dd><para>Unit: SECONDS</para><para>Statistic: AVG</para></dd><dt>AFTER_CONTACT_WORK_TIME</dt><dd><para>Unit: SECONDS</para><para>Statistic: AVG</para></dd><dt>API_CONTACTS_HANDLED</dt><dd><para>Unit: COUNT</para><para>Statistic: SUM</para></dd><dt>CALLBACK_CONTACTS_HANDLED</dt><dd><para>Unit: COUNT</para><para>Statistic: SUM</para></dd><dt>CONTACTS_ABANDONED</dt><dd><para>Unit: COUNT</para><para>Statistic: SUM</para></dd><dt>CONTACTS_AGENT_HUNG_UP_FIRST</dt><dd><para>Unit: COUNT</para><para>Statistic: SUM</para></dd><dt>CONTACTS_CONSULTED</dt><dd><para>Unit: COUNT</para><para>Statistic: SUM</para></dd><dt>CONTACTS_HANDLED</dt><dd><para>Unit: COUNT</para><para>Statistic: SUM</para></dd><dt>CONTACTS_HANDLED_INCOMING</dt><dd><para>Unit: COUNT</para><para>Statistic: SUM</para></dd><dt>CONTACTS_HANDLED_OUTBOUND</dt><dd><para>Unit: COUNT</para><para>Statistic: SUM</para></dd><dt>CONTACTS_HOLD_ABANDONS</dt><dd><para>Unit: COUNT</para><para>Statistic: SUM</para></dd><dt>CONTACTS_MISSED</dt><dd><para>Unit: COUNT</para><para>Statistic: SUM</para></dd><dt>CONTACTS_QUEUED</dt><dd><para>Unit: COUNT</para><para>Statistic: SUM</para></dd><dt>CONTACTS_TRANSFERRED_IN</dt><dd><para>Unit: COUNT</para><para>Statistic: SUM</para></dd><dt>CONTACTS_TRANSFERRED_IN_FROM_QUEUE</dt><dd><para>Unit: COUNT</para><para>Statistic: SUM</para></dd><dt>CONTACTS_TRANSFERRED_OUT</dt><dd><para>Unit: COUNT</para><para>Statistic: SUM</para></dd><dt>CONTACTS_TRANSFERRED_OUT_FROM_QUEUE</dt><dd><para>Unit: COUNT</para><para>Statistic: SUM</para></dd><dt>HANDLE_TIME</dt><dd><para>Unit: SECONDS</para><para>Statistic: AVG</para></dd><dt>HOLD_TIME</dt><dd><para>Unit: SECONDS</para><para>Statistic: AVG</para></dd><dt>INTERACTION_AND_HOLD_TIME</dt><dd><para>Unit: SECONDS</para><para>Statistic: AVG</para></dd><dt>INTERACTION_TIME</dt><dd><para>Unit: SECONDS</para><para>Statistic: AVG</para></dd><dt>OCCUPANCY</dt><dd><para>Unit: PERCENT</para><para>Statistic: AVG</para></dd><dt>QUEUE_ANSWER_TIME</dt><dd><para>Unit: SECONDS</para><para>Statistic: AVG</para></dd><dt>QUEUED_TIME</dt><dd><para>Unit: SECONDS</para><para>Statistic: MAX</para></dd><dt>SERVICE_LEVEL</dt><dd><para>Unit: PERCENT</para><para>Statistic: AVG</para><para>Threshold: Only "Less than" comparisons are supported, with the following service
            level thresholds: 15, 20, 25, 30, 45, 60, 90, 120, 180, 240, 300, 600</para></dd></dl>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNMetricDataCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNMetricDataCmdlet.Filters_Queue">
            <summary>
            <para>
            <para>The queues to use to filter the metrics. You can specify up to 100 queues per request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNMetricDataCmdlet.StartTime">
            <summary>
            <para>
            <para>The timestamp, in UNIX Epoch time format, at which to start the reporting interval
            for the retrieval of historical metrics data. The time must be specified using a multiple
            of 5 minutes, such as 10:05, 10:10, 10:15.</para><para>The start time cannot be earlier than 24 hours before the time of the request. Historical
            metrics are available only for 24 hours.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNMetricDataCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximimum number of results to return per page.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNMetricDataCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results. Use the value returned in the previous response
            in the next request to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNMetricDataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MetricResults'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.GetMetricDataResponse).
            Specifying the name of a property of type Amazon.Connect.Model.GetMetricDataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNMetricDataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNMetricDataCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.GetCONNPhoneNumberListCmdlet">
            <summary>
            Provides information about the phone numbers for the specified Amazon Connect instance.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNPhoneNumberListCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNPhoneNumberListCmdlet.PhoneNumberCountryCode">
            <summary>
            <para>
            <para>The ISO country code.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNPhoneNumberListCmdlet.PhoneNumberType">
            <summary>
            <para>
            <para>The type of phone number.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNPhoneNumberListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximimum number of results to return per page.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNPhoneNumberListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results. Use the value returned in the previous response
            in the next request to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNPhoneNumberListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PhoneNumberSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.ListPhoneNumbersResponse).
            Specifying the name of a property of type Amazon.Connect.Model.ListPhoneNumbersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNPhoneNumberListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNPhoneNumberListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.GetCONNQueueListCmdlet">
            <summary>
            Provides information about the queues for the specified Amazon Connect instance.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNQueueListCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNQueueListCmdlet.QueueType">
            <summary>
            <para>
            <para>The type of queue.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNQueueListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximimum number of results to return per page.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNQueueListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results. Use the value returned in the previous response
            in the next request to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNQueueListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'QueueSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.ListQueuesResponse).
            Specifying the name of a property of type Amazon.Connect.Model.ListQueuesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNQueueListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNQueueListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.GetCONNResourceTagCmdlet">
            <summary>
            Lists the tags for the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.Connect.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.GetCONNRoutingProfileListCmdlet">
            <summary>
            Provides summary information about the routing profiles for the specified Amazon Connect
            instance.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNRoutingProfileListCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNRoutingProfileListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximimum number of results to return per page.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNRoutingProfileListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results. Use the value returned in the previous response
            in the next request to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNRoutingProfileListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RoutingProfileSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.ListRoutingProfilesResponse).
            Specifying the name of a property of type Amazon.Connect.Model.ListRoutingProfilesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNRoutingProfileListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNRoutingProfileListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.GetCONNSecurityProfileListCmdlet">
            <summary>
            Provides summary information about the security profiles for the specified Amazon
            Connect instance.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNSecurityProfileListCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNSecurityProfileListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximimum number of results to return per page.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNSecurityProfileListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results. Use the value returned in the previous response
            in the next request to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNSecurityProfileListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SecurityProfileSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.ListSecurityProfilesResponse).
            Specifying the name of a property of type Amazon.Connect.Model.ListSecurityProfilesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNSecurityProfileListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNSecurityProfileListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserCmdlet">
            <summary>
            Describes the specified user account. You can find the instance ID in the console
            (it’s the final part of the ARN). The console does not display the user IDs. Instead,
            list the users and note the IDs provided in the output.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserCmdlet.UserId">
            <summary>
            <para>
            <para>The identifier of the user account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'User'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.DescribeUserResponse).
            Specifying the name of a property of type Amazon.Connect.Model.DescribeUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserHierarchyGroupCmdlet">
            <summary>
            Describes the specified hierarchy group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserHierarchyGroupCmdlet.HierarchyGroupId">
            <summary>
            <para>
            <para>The identifier of the hierarchy group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserHierarchyGroupCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserHierarchyGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HierarchyGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.DescribeUserHierarchyGroupResponse).
            Specifying the name of a property of type Amazon.Connect.Model.DescribeUserHierarchyGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserHierarchyGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HierarchyGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^HierarchyGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserHierarchyGroupListCmdlet">
            <summary>
            Provides summary information about the hierarchy groups for the specified Amazon Connect
            instance.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserHierarchyGroupListCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserHierarchyGroupListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximimum number of results to return per page.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserHierarchyGroupListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results. Use the value returned in the previous response
            in the next request to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserHierarchyGroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserHierarchyGroupSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.ListUserHierarchyGroupsResponse).
            Specifying the name of a property of type Amazon.Connect.Model.ListUserHierarchyGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserHierarchyGroupListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserHierarchyGroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserHierarchyStructureCmdlet">
            <summary>
            Describes the hierarchy structure of the specified Amazon Connect instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserHierarchyStructureCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserHierarchyStructureCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HierarchyStructure'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.DescribeUserHierarchyStructureResponse).
            Specifying the name of a property of type Amazon.Connect.Model.DescribeUserHierarchyStructureResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserHierarchyStructureCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserListCmdlet">
            <summary>
            Provides summary information about the users for the specified Amazon Connect instance.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserListCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximimum number of results to return per page.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results. Use the value returned in the previous response
            in the next request to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.ListUsersResponse).
            Specifying the name of a property of type Amazon.Connect.Model.ListUsersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.GetCONNUserListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.NewCONNUserCmdlet">
            <summary>
            Creates a user account for the specified Amazon Connect instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.NewCONNUserCmdlet.DirectoryUserId">
            <summary>
            <para>
            <para>The identifier of the user account in the directory used for identity management.
            If Amazon Connect cannot access the directory, you can specify this identifier to
            authenticate users. If you include the identifier, we assume that Amazon Connect cannot
            access the directory. Otherwise, the identity information is used to authenticate
            users from your directory.</para><para>This parameter is required if you are using an existing directory for identity management
            in Amazon Connect when Amazon Connect cannot access your directory to authenticate
            users. If you are using SAML for identity management and include this parameter, an
            error is returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.NewCONNUserCmdlet.HierarchyGroupId">
            <summary>
            <para>
            <para>The identifier of the hierarchy group for the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.NewCONNUserCmdlet.IdentityInfo">
            <summary>
            <para>
            <para>The information about the identity of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.NewCONNUserCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.NewCONNUserCmdlet.Password">
            <summary>
            <para>
            <para>The password for the user account. A password is required if you are using Amazon
            Connect for identity management. Otherwise, it is an error to include a password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.NewCONNUserCmdlet.PhoneConfig">
            <summary>
            <para>
            <para>The phone settings for the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.NewCONNUserCmdlet.RoutingProfileId">
            <summary>
            <para>
            <para>The identifier of the routing profile for the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.NewCONNUserCmdlet.SecurityProfileId">
            <summary>
            <para>
            <para>The identifier of the security profile for the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.NewCONNUserCmdlet.Tag">
            <summary>
            <para>
            <para>One or more tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.NewCONNUserCmdlet.Username">
            <summary>
            <para>
            <para>The user name for the account. For instances not using SAML for identity management,
            the user name can include up to 20 characters. If you are using SAML for identity
            management, the user name can include up to 64 characters from [a-zA-Z0-9_-.\@]+.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.NewCONNUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.CreateUserResponse).
            Specifying the name of a property of type Amazon.Connect.Model.CreateUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.NewCONNUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.NewCONNUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.RemoveCONNResourceTagCmdlet">
            <summary>
            Removes the specified tags from the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.RemoveCONNResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.RemoveCONNResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The tag keys.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.RemoveCONNResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.RemoveCONNResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.RemoveCONNResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.RemoveCONNUserCmdlet">
            <summary>
            Deletes a user account from the specified Amazon Connect instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.RemoveCONNUserCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.RemoveCONNUserCmdlet.UserId">
            <summary>
            <para>
            <para>The identifier of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.RemoveCONNUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.DeleteUserResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.RemoveCONNUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.RemoveCONNUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.StartCONNChatContactCmdlet">
            <summary>
            Initiates a contact flow to start a new chat for the customer. Response of this API
            provides a token required to obtain credentials from the <a href="https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html">CreateParticipantConnection</a>
            API in the Amazon Connect Participant Service.
            
             
            <para>
            When a new chat contact is successfully created, clients need to subscribe to the
            participant’s connection for the created chat within 5 minutes. This is achieved by
            invoking <a href="https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html">CreateParticipantConnection</a>
            with WEBSOCKET and CONNECTION_CREDENTIALS. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StartCONNChatContactCmdlet.Attribute">
            <summary>
            <para>
            <para>A custom key-value pair using an attribute map. The attributes are standard Amazon
            Connect attributes, and can be accessed in contact flows just like any other contact
            attributes. </para><para>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute
            keys can include only alphanumeric, dash, and underscore characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StartCONNChatContactCmdlet.ContactFlowId">
            <summary>
            <para>
            <para>The identifier of the contact flow for the chat.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StartCONNChatContactCmdlet.InitialMessage_Content">
            <summary>
            <para>
            <para>The content of the chat message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StartCONNChatContactCmdlet.InitialMessage_ContentType">
            <summary>
            <para>
            <para>The type of the content. Supported types are text/plain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StartCONNChatContactCmdlet.ParticipantDetails_DisplayName">
            <summary>
            <para>
            <para>Display name of the participant.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StartCONNChatContactCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StartCONNChatContactCmdlet.ClientToken">
            <summary>
            <para>
            <para>A unique, case-sensitive identifier that you provide to ensure the idempotency of
            the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StartCONNChatContactCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.StartChatContactResponse).
            Specifying the name of a property of type Amazon.Connect.Model.StartChatContactResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StartCONNChatContactCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ContactFlowId parameter.
            The -PassThru parameter is deprecated, use -Select '^ContactFlowId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StartCONNChatContactCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.StartCONNOutboundVoiceContactCmdlet">
            <summary>
            Initiates a contact flow to place an outbound call to a customer.
            
             
            <para>
            There is a 60 second dialing timeout for this operation. If the call is not connected
            after 60 seconds, it fails.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StartCONNOutboundVoiceContactCmdlet.Attribute">
            <summary>
            <para>
            <para>A custom key-value pair using an attribute map. The attributes are standard Amazon
            Connect attributes, and can be accessed in contact flows just like any other contact
            attributes.</para><para>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute
            keys can include only alphanumeric, dash, and underscore characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StartCONNOutboundVoiceContactCmdlet.ContactFlowId">
            <summary>
            <para>
            <para>The identifier of the contact flow for the outbound call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StartCONNOutboundVoiceContactCmdlet.DestinationPhoneNumber">
            <summary>
            <para>
            <para>The phone number of the customer, in E.164 format.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StartCONNOutboundVoiceContactCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StartCONNOutboundVoiceContactCmdlet.QueueId">
            <summary>
            <para>
            <para>The queue for the call. If you specify a queue, the phone displayed for caller ID
            is the phone number specified in the queue. If you do not specify a queue, the queue
            defined in the contact flow is used. If you do not specify a queue, you must specify
            a source phone number.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StartCONNOutboundVoiceContactCmdlet.SourcePhoneNumber">
            <summary>
            <para>
            <para>The phone number associated with the Amazon Connect instance, in E.164 format. If
            you do not specify a source phone number, you must specify a queue.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StartCONNOutboundVoiceContactCmdlet.ClientToken">
            <summary>
            <para>
            <para>A unique, case-sensitive identifier that you provide to ensure the idempotency of
            the request. The token is valid for 7 days after creation. If a contact is already
            started, the contact ID is returned. If the contact is disconnected, a new contact
            is started.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StartCONNOutboundVoiceContactCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ContactId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.StartOutboundVoiceContactResponse).
            Specifying the name of a property of type Amazon.Connect.Model.StartOutboundVoiceContactResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StartCONNOutboundVoiceContactCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ContactFlowId parameter.
            The -PassThru parameter is deprecated, use -Select '^ContactFlowId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StartCONNOutboundVoiceContactCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.StopCONNContactCmdlet">
            <summary>
            Ends the specified contact.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StopCONNContactCmdlet.ContactId">
            <summary>
            <para>
            <para>The ID of the contact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StopCONNContactCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StopCONNContactCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.StopContactResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StopCONNContactCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ContactId parameter.
            The -PassThru parameter is deprecated, use -Select '^ContactId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.StopCONNContactCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNContactAttributeCmdlet">
            <summary>
            Creates or updates the contact attributes associated with the specified contact.
            
             
            <para>
            You can add or update attributes for both ongoing and completed contacts. For example,
            you can update the customer's name or the reason the customer called while the call
            is active, or add notes about steps that the agent took during the call that are displayed
            to the next agent that takes the call. You can also update attributes for a contact
            using data from your CRM application and save the data with the contact in Amazon
            Connect. You could also flag calls for additional analysis, such as legal review or
            identifying abusive callers.
            </para><para>
            Contact attributes are available in Amazon Connect for 24 months, and are then deleted.
            </para><para><b>Important:</b> You cannot use the operation to update attributes for contacts
            that occurred prior to the release of the API, September 12, 2018. You can update
            attributes only for contacts that started after the release of the API. If you attempt
            to update attributes for a contact that occurred prior to the release of the API,
            a 400 error is returned. This applies also to queued callbacks that were initiated
            prior to the release of the API but are still active in your instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNContactAttributeCmdlet.Attribute">
            <summary>
            <para>
            <para>The Amazon Connect attributes. These attributes can be accessed in contact flows just
            like any other contact attributes.</para><para>You can have up to 32,768 UTF-8 bytes across all attributes for a contact. Attribute
            keys can include only alphanumeric, dash, and underscore characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNContactAttributeCmdlet.InitialContactId">
            <summary>
            <para>
            <para>The identifier of the contact. This is the identifier of the contact associated with
            the first interaction with the contact center.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNContactAttributeCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNContactAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.UpdateContactAttributesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNContactAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InitialContactId parameter.
            The -PassThru parameter is deprecated, use -Select '^InitialContactId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNContactAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserHierarchyCmdlet">
            <summary>
            Assigns the specified hierarchy group to the specified user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserHierarchyCmdlet.HierarchyGroupId">
            <summary>
            <para>
            <para>The identifier of the hierarchy group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserHierarchyCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserHierarchyCmdlet.UserId">
            <summary>
            <para>
            <para>The identifier of the user account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserHierarchyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.UpdateUserHierarchyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserHierarchyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserHierarchyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserIdentityInfoCmdlet">
            <summary>
            Updates the identity information for the specified user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserIdentityInfoCmdlet.IdentityInfo">
            <summary>
            <para>
            <para>The identity information for the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserIdentityInfoCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserIdentityInfoCmdlet.UserId">
            <summary>
            <para>
            <para>The identifier of the user account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserIdentityInfoCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.UpdateUserIdentityInfoResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserIdentityInfoCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserIdentityInfoCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserPhoneConfigCmdlet">
            <summary>
            Updates the phone configuration settings for the specified user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserPhoneConfigCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserPhoneConfigCmdlet.PhoneConfig">
            <summary>
            <para>
            <para>Information about phone configuration settings for the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserPhoneConfigCmdlet.UserId">
            <summary>
            <para>
            <para>The identifier of the user account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserPhoneConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.UpdateUserPhoneConfigResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserPhoneConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserPhoneConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserRoutingProfileCmdlet">
            <summary>
            Assigns the specified routing profile to the specified user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserRoutingProfileCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserRoutingProfileCmdlet.RoutingProfileId">
            <summary>
            <para>
            <para>The identifier of the routing profile for the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserRoutingProfileCmdlet.UserId">
            <summary>
            <para>
            <para>The identifier of the user account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserRoutingProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.UpdateUserRoutingProfileResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserRoutingProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RoutingProfileId parameter.
            The -PassThru parameter is deprecated, use -Select '^RoutingProfileId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserRoutingProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserSecurityProfileCmdlet">
            <summary>
            Assigns the specified security profiles to the specified user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserSecurityProfileCmdlet.InstanceId">
            <summary>
            <para>
            <para>The identifier of the Amazon Connect instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserSecurityProfileCmdlet.SecurityProfileId">
            <summary>
            <para>
            <para>The identifiers of the security profiles for the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserSecurityProfileCmdlet.UserId">
            <summary>
            <para>
            <para>The identifier of the user account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserSecurityProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Connect.Model.UpdateUserSecurityProfilesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserSecurityProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CONN.UpdateCONNUserSecurityProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
