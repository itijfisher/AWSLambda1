<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.QuickSight</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.AddQSResourceTagCmdlet">
            <summary>
            Assigns one or more tags (key-value pairs) to the specified QuickSight resource. 
            
             
            <para>
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions, by granting a user permission to access or change only resources
            with certain tag values. You can use the <code>TagResource</code> operation with a
            resource that already has tags. If you specify a new tag key for the resource, this
            tag is appended to the list of tags associated with the resource. If you specify a
            tag key that is already associated with the resource, the new tag value that you specify
            replaces the previous value for that tag.
            </para><para>
            You can associate as many as 50 tags with a resource. QuickSight supports tagging
            on data set, data source, dashboard, and template. 
            </para><para>
            Tagging for QuickSight works in a similar way to tagging for other AWS services, except
            for the following:
            </para><ul><li><para>
            You can't use tags to track AWS costs for QuickSight. This restriction is because
            QuickSight costs are based on users and SPICE capacity, which aren't taggable resources.
            </para></li><li><para>
            QuickSight doesn't currently support the Tag Editor for AWS Resource Groups.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.AddQSResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource that you want to tag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.AddQSResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>Contains a map of the key-value pairs for the resource tag or tags assigned to the
            resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.AddQSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.TagResourceResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.TagResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.AddQSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.AddQSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardCmdlet">
            <summary>
            Provides a summary for a dashboard.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardCmdlet.AliasName">
            <summary>
            <para>
            <para>The alias name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the dashboard that you're describing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardCmdlet.DashboardId">
            <summary>
            <para>
            <para>The ID for the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardCmdlet.VersionNumber">
            <summary>
            <para>
            <para>The version number for the dashboard. If a version number isn't passed, the latest
            published dashboard version is described. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Dashboard'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeDashboardResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeDashboardResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DashboardId parameter.
            The -PassThru parameter is deprecated, use -Select '^DashboardId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet">
            <summary>
            Generates a server-side embeddable URL and authorization code. For this process to
            work properly, first configure the dashboards and user permissions. For more information,
            see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedding-dashboards.html">Embedding
            Amazon QuickSight Dashboards</a> in the <i>Amazon QuickSight User Guide</i> or <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/qs-dev-embedded-dashboards.html">Embedding
            Amazon QuickSight Dashboards</a> in the <i>Amazon QuickSight API Reference</i>.
            
             
            <para>
            Currently, you can use <code>GetDashboardEmbedURL</code> only from the server, not
            from the userâ€™s browser.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the AWS account that contains the dashboard that you're embedding.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.DashboardId">
            <summary>
            <para>
            <para>The ID for the dashboard, also added to the IAM policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.IdentityType">
            <summary>
            <para>
            <para>The authentication method that the user uses to sign in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.ResetDisabled">
            <summary>
            <para>
            <para>Remove the reset button on the embedded dashboard. The default is FALSE, which enables
            the reset button.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.SessionLifetimeInMinute">
            <summary>
            <para>
            <para>How many minutes the session is valid. The session lifetime must be 15-600 minutes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.UndoRedoDisabled">
            <summary>
            <para>
            <para>Remove the undo/redo button on the embedded dashboard. The default is FALSE, which
            enables the undo/redo button.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.UserArn">
            <summary>
            <para>
            <para>The Amazon QuickSight user's Amazon Resource Name (ARN), for use with <code>QUICKSIGHT</code>
            identity type. You can use this for any Amazon QuickSight users in your account (readers,
            authors, or admins) authenticated as one of the following:</para><ul><li><para>Active Directory (AD) users or group members</para></li><li><para>Invited nonfederated users</para></li><li><para>IAM users and IAM role-based sessions authenticated through Federated Single Sign-On
            using SAML, OpenID Connect, or IAM federation.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EmbedUrl'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.GetDashboardEmbedUrlResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.GetDashboardEmbedUrlResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DashboardId parameter.
            The -PassThru parameter is deprecated, use -Select '^DashboardId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardListCmdlet">
            <summary>
            Lists dashboards in an AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the dashboards that you're listing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DashboardSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListDashboardsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListDashboardsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardPermissionCmdlet">
            <summary>
            Describes read and write permissions for a dashboard.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardPermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the dashboard that you're describing permissions
            for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardPermissionCmdlet.DashboardId">
            <summary>
            <para>
            <para>The ID for the dashboard, also added to the IAM policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeDashboardPermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeDashboardPermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DashboardId parameter.
            The -PassThru parameter is deprecated, use -Select '^DashboardId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardVersionListCmdlet">
            <summary>
            Lists all the versions of the dashboards in the QuickSight subscription.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardVersionListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the dashboard that you're listing versions
            for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardVersionListCmdlet.DashboardId">
            <summary>
            <para>
            <para>The ID for the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardVersionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardVersionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DashboardVersionSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListDashboardVersionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListDashboardVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DashboardId parameter.
            The -PassThru parameter is deprecated, use -Select '^DashboardId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetCmdlet">
            <summary>
            Describes a dataset.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetCmdlet.DataSetId">
            <summary>
            <para>
            <para>The ID for the dataset that you want to create. This ID is unique per AWS Region for
            each AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DataSet'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeDataSetResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeDataSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSetId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetListCmdlet">
            <summary>
            Lists all of the datasets belonging to the current AWS account in an AWS Region.
            
             
            <para>
            The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/*</code>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DataSetSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListDataSetsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListDataSetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetPermissionCmdlet">
            <summary>
            Describes the permissions on a dataset.
            
             
            <para>
            The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetPermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetPermissionCmdlet.DataSetId">
            <summary>
            <para>
            <para>The ID for the dataset that you want to create. This ID is unique per AWS Region for
            each AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeDataSetPermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeDataSetPermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSetId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceCmdlet">
            <summary>
            Describes a data source.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceCmdlet.DataSourceId">
            <summary>
            <para>
            <para>The ID of the data source. This ID is unique per AWS Region for each AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DataSource'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeDataSourceResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeDataSourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceListCmdlet">
            <summary>
            Lists data sources in current AWS Region that belong to this AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DataSources'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListDataSourcesResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListDataSourcesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourcePermissionCmdlet">
            <summary>
            Describes the resource permissions for a data source.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourcePermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourcePermissionCmdlet.DataSourceId">
            <summary>
            <para>
            <para>The ID of the data source. This ID is unique per AWS Region for each AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourcePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeDataSourcePermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeDataSourcePermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourcePermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSGroupCmdlet">
            <summary>
            Returns an Amazon QuickSight group's description and Amazon Resource Name (ARN).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the AWS account that the group is in. Currently, you use the ID for the
            AWS account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the group that you want to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Group'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeGroupResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSGroupListCmdlet">
            <summary>
            Lists all user groups in Amazon QuickSight.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the AWS account that the group is in. Currently, you use the ID for the
            AWS account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupListCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupListCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token that can be used in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GroupList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListGroupsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipListCmdlet">
            <summary>
            Lists member users in a group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the AWS account that the group is in. Currently, you use the ID for the
            AWS account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipListCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the group that you want to see a membership list of.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipListCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return from this request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipListCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token that can be used in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GroupMemberList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListGroupMembershipsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListGroupMembershipsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentCmdlet">
            <summary>
            Describes an existing IAM policy assignment, as specified by the assignment name.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentCmdlet.AssignmentName">
            <summary>
            <para>
            <para>The name of the assignment. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the assignment that you want to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace that contains the assignment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IAMPolicyAssignment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeIAMPolicyAssignmentResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeIAMPolicyAssignmentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssignmentName parameter.
            The -PassThru parameter is deprecated, use -Select '^AssignmentName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentListCmdlet">
            <summary>
            Lists IAM policy assignments in the current Amazon QuickSight account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentListCmdlet.AssignmentStatus">
            <summary>
            <para>
            <para>The status of the assignments.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains these IAM policy assignments.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentListCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace for the assignments.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IAMPolicyAssignments'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListIAMPolicyAssignmentsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListIAMPolicyAssignmentsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Namespace parameter.
            The -PassThru parameter is deprecated, use -Select '^Namespace' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentsForUserListCmdlet">
            <summary>
            Lists all the IAM policy assignments, including the Amazon Resource Names (ARNs) for
            the IAM policies assigned to the specified user and group or groups that the user
            belongs to.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentsForUserListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the assignments.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentsForUserListCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace of the assignment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentsForUserListCmdlet.UserName">
            <summary>
            <para>
            <para>The name of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentsForUserListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentsForUserListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentsForUserListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ActiveAssignments'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListIAMPolicyAssignmentsForUserResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListIAMPolicyAssignmentsForUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentsForUserListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserName parameter.
            The -PassThru parameter is deprecated, use -Select '^UserName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentsForUserListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionCmdlet">
            <summary>
            Describes a SPICE ingestion.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionCmdlet.DataSetId">
            <summary>
            <para>
            <para>The ID of the dataset used in the ingestion.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionCmdlet.IngestionId">
            <summary>
            <para>
            <para>An ID for the ingestion.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Ingestion'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeIngestionResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeIngestionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IngestionId parameter.
            The -PassThru parameter is deprecated, use -Select '^IngestionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionListCmdlet">
            <summary>
            Lists the history of SPICE ingestions for a dataset.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionListCmdlet.DataSetId">
            <summary>
            <para>
            <para>The ID of the dataset used in the ingestion.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Ingestions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListIngestionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListIngestionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSetId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSResourceTagCmdlet">
            <summary>
            Lists the tags assigned to a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource that you want a list of tags for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateCmdlet">
            <summary>
            Describes a template's metadata.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateCmdlet.AliasName">
            <summary>
            <para>
            <para>The alias of the template that you want to describe. If you name a specific alias,
            you describe the version that the alias points to. You can specify the latest version
            of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code>
            parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the template that you're describing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateCmdlet.TemplateId">
            <summary>
            <para>
            <para>The ID for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateCmdlet.VersionNumber">
            <summary>
            <para>
            <para>(Optional) The number for the version to describe. If a <code>VersionNumber</code>
            parameter value isn't provided, the latest version of the template is described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Template'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeTemplateResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateId parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasCmdlet">
            <summary>
            Describes the template alias for a template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasCmdlet.AliasName">
            <summary>
            <para>
            <para>The name of the template alias that you want to describe. If you name a specific alias,
            you describe the version that the alias points to. You can specify the latest version
            of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code>
            parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the template alias that you're describing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasCmdlet.TemplateId">
            <summary>
            <para>
            <para>The ID for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TemplateAlias'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeTemplateAliasResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeTemplateAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AliasName parameter.
            The -PassThru parameter is deprecated, use -Select '^AliasName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasListCmdlet">
            <summary>
            Lists all the aliases of a template.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the template aliases that you're listing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasListCmdlet.TemplateId">
            <summary>
            <para>
            <para>The ID for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TemplateAliasList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListTemplateAliasesResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListTemplateAliasesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateId parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateListCmdlet">
            <summary>
            Lists all the templates in the current Amazon QuickSight account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the templates that you're listing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TemplateSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListTemplatesResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListTemplatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSTemplatePermissionCmdlet">
            <summary>
            Describes read and write permissions on a template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplatePermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the template that you're describing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplatePermissionCmdlet.TemplateId">
            <summary>
            <para>
            <para>The ID for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplatePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeTemplatePermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeTemplatePermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplatePermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateId parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateVersionListCmdlet">
            <summary>
            Lists all the versions of the templates in the current Amazon QuickSight account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateVersionListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the templates that you're listing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateVersionListCmdlet.TemplateId">
            <summary>
            <para>
            <para>The ID for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateVersionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateVersionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TemplateVersionSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListTemplateVersionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListTemplateVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateId parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSUserCmdlet">
            <summary>
            Returns information about a user, given the user name.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the AWS account that the user is in. Currently, you use the ID for the
            AWS account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserCmdlet.UserName">
            <summary>
            <para>
            <para>The name of the user that you want to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'User'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeUserResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserName parameter.
            The -PassThru parameter is deprecated, use -Select '^UserName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSUserGroupListCmdlet">
            <summary>
            Lists the Amazon QuickSight groups that an Amazon QuickSight user is a member of.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserGroupListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID that the user is in. Currently, you use the ID for the AWS account
            that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserGroupListCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserGroupListCmdlet.UserName">
            <summary>
            <para>
            <para>The Amazon QuickSight user name that you want to list group memberships for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserGroupListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return from this request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserGroupListCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token that can be used in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserGroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GroupList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListUserGroupsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListUserGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserGroupListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserName parameter.
            The -PassThru parameter is deprecated, use -Select '^UserName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserGroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSUserListCmdlet">
            <summary>
            Returns a list of all of the Amazon QuickSight users belonging to this account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the AWS account that the user is in. Currently, you use the ID for the
            AWS account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserListCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return from this request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserListCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token that can be used in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListUsersResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListUsersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet">
            <summary>
            Creates a dashboard from a template. To first create a template, see the CreateTemplate
            API operation.
            
             
            <para>
            A dashboard is an entity in QuickSight that identifies QuickSight reports, created
            from analyses. You can share QuickSight dashboards. With the right permissions, you
            can create scheduled email reports from them. The <code>CreateDashboard</code>, <code>DescribeDashboard</code>,
            and <code>ListDashboardsByUser</code> API operations act on the dashboard entity.
            If you have the correct permissions, you can create a dashboard from a template that
            exists in a different AWS account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.SourceTemplate_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.AdHocFilteringOption_AvailabilityStatus">
            <summary>
            <para>
            <para>Availability status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.ExportToCSVOption_AvailabilityStatus">
            <summary>
            <para>
            <para>Availability status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account where you want to create the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.DashboardId">
            <summary>
            <para>
            <para>The ID for the dashboard, also added to the IAM policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.SourceTemplate_DataSetReference">
            <summary>
            <para>
            <para>Dataset references.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.Parameters_DateTimeParameter">
            <summary>
            <para>
            <para>DateTime parameters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.Parameters_DecimalParameter">
            <summary>
            <para>
            <para>Decimal parameters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.Parameters_IntegerParameter">
            <summary>
            <para>
            <para>Integer parameters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.Name">
            <summary>
            <para>
            <para>The display name of the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.Permission">
            <summary>
            <para>
            <para>A structure that contains the permissions of the dashboard. You can use this structure
            for granting permissions with principal and action information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.Parameters_StringParameter">
            <summary>
            <para>
            <para>String parameters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.Tag">
            <summary>
            <para>
            <para>Contains a map of the key-value pairs for the resource tag or tags assigned to the
            dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.VersionDescription">
            <summary>
            <para>
            <para>A description for the first version of the dashboard being created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.SheetControlsOption_VisibilityState">
            <summary>
            <para>
            <para>Visibility state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateDashboardResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateDashboardResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DashboardId parameter.
            The -PassThru parameter is deprecated, use -Select '^DashboardId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet">
            <summary>
            Creates a dataset.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.RowLevelPermissionDataSet_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the permission dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.ColumnGroup">
            <summary>
            <para>
            <para>Groupings of columns that work together in certain QuickSight features. Currently,
            only geospatial hierarchy is supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.DataSetId">
            <summary>
            <para>
            <para>An ID for the dataset that you want to create. This ID is unique per AWS Region for
            each AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.ImportMode">
            <summary>
            <para>
            <para>Indicates whether you want to import the data into SPICE.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.LogicalTableMap">
            <summary>
            <para>
            <para>Configures the combination and transformation of the data from the physical tables.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.Name">
            <summary>
            <para>
            <para>The display name for the dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.RowLevelPermissionDataSet_PermissionPolicy">
            <summary>
            <para>
            <para>Permission policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.Permission">
            <summary>
            <para>
            <para>A list of resource permissions on the dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.PhysicalTableMap">
            <summary>
            <para>
            <para>Declares the physical tables that are available in the underlying data sources.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.Tag">
            <summary>
            <para>
            <para>Contains a map of the key-value pairs for the resource tag or tags assigned to the
            dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateDataSetResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateDataSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSetId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet">
            <summary>
            Creates a data source.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.ManifestFileLocation_Bucket">
            <summary>
            <para>
            <para>Amazon S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.PrestoParameters_Catalog">
            <summary>
            <para>
            <para>Catalog.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.RedshiftParameters_ClusterId">
            <summary>
            <para>
            <para>Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code>
            are provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AuroraParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AuroraPostgreSqlParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.MariaDbParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.MySqlParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.PostgreSqlParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.RdsParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.RedshiftParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.SnowflakeParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.SqlServerParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.TeradataParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AwsIotAnalyticsParameters_DataSetName">
            <summary>
            <para>
            <para>Dataset name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.DataSourceId">
            <summary>
            <para>
            <para>An ID for the data source. This ID is unique per AWS Region for each AWS account.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.SslProperties_DisableSsl">
            <summary>
            <para>
            <para>A Boolean option to control whether SSL should be disabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AmazonElasticsearchParameters_Domain">
            <summary>
            <para>
            <para>The Amazon Elasticsearch Service domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AuroraParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AuroraPostgreSqlParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.MariaDbParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.MySqlParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.PostgreSqlParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.PrestoParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.RedshiftParameters_Host">
            <summary>
            <para>
            <para>Host. This field can be blank if <code>ClusterId</code> is provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.SnowflakeParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.SparkParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.SqlServerParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.TeradataParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.RdsParameters_InstanceId">
            <summary>
            <para>
            <para>Instance ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.ManifestFileLocation_Key">
            <summary>
            <para>
            <para>Amazon S3 key that identifies an object.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.TwitterParameters_MaxRow">
            <summary>
            <para>
            <para>Maximum number of rows to query Twitter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.Name">
            <summary>
            <para>
            <para>A display name for the data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.CredentialPair_Password">
            <summary>
            <para>
            <para>Password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.Permission">
            <summary>
            <para>
            <para>A list of resource permissions on the data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AuroraParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AuroraPostgreSqlParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.MariaDbParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.MySqlParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.PostgreSqlParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.PrestoParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.RedshiftParameters_Port">
            <summary>
            <para>
            <para>Port. This field can be blank if the <code>ClusterId</code> is provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.SparkParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.SqlServerParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.TeradataParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.TwitterParameters_Query">
            <summary>
            <para>
            <para>Twitter query string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.JiraParameters_SiteBaseUrl">
            <summary>
            <para>
            <para>The base URL of the Jira site.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.ServiceNowParameters_SiteBaseUrl">
            <summary>
            <para>
            <para>URL of the base site.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.Tag">
            <summary>
            <para>
            <para>Contains a map of the key-value pairs for the resource tag or tags assigned to the
            data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.Type">
            <summary>
            <para>
            <para>The type of the data source. Currently, the supported types for this operation are:
            <code>ATHENA, AURORA, AURORA_POSTGRESQL, MARIADB, MYSQL, POSTGRESQL, PRESTO, REDSHIFT,
            S3, SNOWFLAKE, SPARK, SQLSERVER, TERADATA</code>. Use <code>ListDataSources</code>
            to return a list of all data sources.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.CredentialPair_Username">
            <summary>
            <para>
            <para>User name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.VpcConnectionProperties_VpcConnectionArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the VPC connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.SnowflakeParameters_Warehouse">
            <summary>
            <para>
            <para>Warehouse.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AthenaParameters_WorkGroup">
            <summary>
            <para>
            <para>The workgroup that Amazon Athena uses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateDataSourceResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateDataSourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSGroupCmdlet">
            <summary>
            Creates an Amazon QuickSight group.
            
             
            <para>
            The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;relevant-aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i></code>.
            </para><para>
            The response is a group object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the AWS account that the group is in. Currently, you use the ID for the
            AWS account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupCmdlet.Description">
            <summary>
            <para>
            <para>A description for the group that you want to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>A name for the group that you want to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Group'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateGroupResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSGroupMembershipCmdlet">
            <summary>
            Adds an Amazon QuickSight user to an Amazon QuickSight group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupMembershipCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the AWS account that the group is in. Currently, you use the ID for the
            AWS account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupMembershipCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the group that you want to add the user to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupMembershipCmdlet.MemberName">
            <summary>
            <para>
            <para>The name of the user that you want to add to the group membership.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupMembershipCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupMembershipCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GroupMember'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateGroupMembershipResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateGroupMembershipResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupMembershipCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MemberName parameter.
            The -PassThru parameter is deprecated, use -Select '^MemberName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupMembershipCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSIAMPolicyAssignmentCmdlet">
            <summary>
            Creates an assignment with one specified IAM policy, identified by its Amazon Resource
            Name (ARN). This policy will be assigned to specified groups or users of Amazon QuickSight.
            The users and groups need to be in the same namespace.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIAMPolicyAssignmentCmdlet.AssignmentName">
            <summary>
            <para>
            <para>The name of the assignment. It must be unique within an AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIAMPolicyAssignmentCmdlet.AssignmentStatus">
            <summary>
            <para>
            <para>The status of the assignment. Possible values are as follows:</para><ul><li><para><code>ENABLED</code> - Anything specified in this assignment is used when creating
            the data source.</para></li><li><para><code>DISABLED</code> - This assignment isn't used when creating the data source.</para></li><li><para><code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating
            the data source.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIAMPolicyAssignmentCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account where you want to assign an IAM policy to QuickSight users
            or groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIAMPolicyAssignmentCmdlet.Identity">
            <summary>
            <para>
            <para>The QuickSight users, groups, or both that you want to assign the policy to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIAMPolicyAssignmentCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace that contains the assignment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIAMPolicyAssignmentCmdlet.PolicyArn">
            <summary>
            <para>
            <para>The ARN for the IAM policy to apply to the QuickSight users and groups specified in
            this assignment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIAMPolicyAssignmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateIAMPolicyAssignmentResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateIAMPolicyAssignmentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIAMPolicyAssignmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssignmentName parameter.
            The -PassThru parameter is deprecated, use -Select '^AssignmentName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIAMPolicyAssignmentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSIngestionCmdlet">
            <summary>
            Creates and starts a new SPICE ingestion on a dataset
            
             
            <para>
            Any ingestions operating on tagged datasets inherit the same tags automatically for
            use in access control. For an example, see <a href="https://aws.amazon.com/premiumsupport/knowledge-center/iam-ec2-resource-tags/">How
            do I create an IAM policy to control access to Amazon EC2 resources using tags?</a>
            in the AWS Knowledge Center. Tags are visible on the tagged dataset, but not on the
            ingestion resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIngestionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIngestionCmdlet.DataSetId">
            <summary>
            <para>
            <para>The ID of the dataset used in the ingestion.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIngestionCmdlet.IngestionId">
            <summary>
            <para>
            <para>An ID for the ingestion.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIngestionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateIngestionResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateIngestionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIngestionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IngestionId parameter.
            The -PassThru parameter is deprecated, use -Select '^IngestionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIngestionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet">
            <summary>
            Creates a template from an existing QuickSight analysis or template. You can use the
            resulting template to create a dashboard.
            
             
            <para>
            A <i>template</i> is an entity in QuickSight that encapsulates the metadata required
            to create an analysis and that you can use to create s dashboard. A template adds
            a layer of abstraction by using placeholders to replace the dataset associated with
            the analysis. You can use templates to create dashboards by replacing dataset placeholders
            with datasets that follow the same schema that was used to create the source analysis
            and template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.SourceAnalysis_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.SourceTemplate_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the AWS account that the group is in. Currently, you use the ID for the
            AWS account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.SourceAnalysis_DataSetReference">
            <summary>
            <para>
            <para>A structure containing information about the dataset references used as placeholders
            in the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.Name">
            <summary>
            <para>
            <para>A display name for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.Permission">
            <summary>
            <para>
            <para>A list of resource permissions to be set on the template. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.Tag">
            <summary>
            <para>
            <para>Contains a map of the key-value pairs for the resource tag or tags assigned to the
            resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.TemplateId">
            <summary>
            <para>
            <para>An ID for the template that you want to create. This template is unique per AWS Region
            in each AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.VersionDescription">
            <summary>
            <para>
            <para>A description of the current template version being created. This API operation creates
            the first version of the template. Every time <code>UpdateTemplate</code> is called,
            a new version is created. Each version of the template maintains a description of
            the version in the <code>VersionDescription</code> field.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateTemplateResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateId parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateAliasCmdlet">
            <summary>
            Creates a template alias for a template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateAliasCmdlet.AliasName">
            <summary>
            <para>
            <para>The name that you want to give to the template alias that you're creating. Don't start
            the alias name with the <code>$</code> character. Alias names that start with <code>$</code>
            are reserved by QuickSight. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateAliasCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the template that you creating an alias for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateAliasCmdlet.TemplateId">
            <summary>
            <para>
            <para>An ID for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateAliasCmdlet.TemplateVersionNumber">
            <summary>
            <para>
            <para>The version number of the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TemplateAlias'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateTemplateAliasResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateTemplateAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AliasName parameter.
            The -PassThru parameter is deprecated, use -Select '^AliasName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet">
            <summary>
            Creates an Amazon QuickSight user, whose identity is associated with the AWS Identity
            and Access Management (IAM) identity or role specified in the request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the AWS account that the user is in. Currently, you use the ID for the
            AWS account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.Email">
            <summary>
            <para>
            <para>The email address of the user that you want to register.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.IamArn">
            <summary>
            <para>
            <para>The ARN of the IAM user or role that you are registering with Amazon QuickSight. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.IdentityType">
            <summary>
            <para>
            <para>Amazon QuickSight supports several ways of managing the identity of users. This parameter
            accepts two values:</para><ul><li><para><code>IAM</code>: A user whose identity maps to an existing IAM user or role. </para></li><li><para><code>QUICKSIGHT</code>: A user whose identity is owned and managed internally by
            Amazon QuickSight. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.SessionName">
            <summary>
            <para>
            <para>You need to use this parameter only when you register one or more users using an assumed
            IAM role. You don't need to provide the session name for other scenarios, for example
            when you are registering an IAM user or an Amazon QuickSight user. You can register
            multiple users using the same IAM role if each user has a different session name.
            For more information on assuming IAM roles, see <a href="https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sts/assume-role.html"><code>assume-role</code></a> in the <i>AWS CLI Reference.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.UserName">
            <summary>
            <para>
            <para>The Amazon QuickSight user name that you want to create for the user you are registering.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.UserRole">
            <summary>
            <para>
            <para>The Amazon QuickSight role for the user. The user role can be one of the following:</para><ul><li><para><code>READER</code>: A user who has read-only access to dashboards.</para></li><li><para><code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and
            dashboards.</para></li><li><para><code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight
            settings.</para></li><li><para><code>RESTRICTED_READER</code>: This role isn't currently available for use.</para></li><li><para><code>RESTRICTED_AUTHOR</code>: This role isn't currently available for use.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.RegisterUserResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.RegisterUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Email parameter.
            The -PassThru parameter is deprecated, use -Select '^Email' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSDashboardCmdlet">
            <summary>
            Deletes a dashboard.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDashboardCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the dashboard that you're deleting.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDashboardCmdlet.DashboardId">
            <summary>
            <para>
            <para>The ID for the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDashboardCmdlet.VersionNumber">
            <summary>
            <para>
            <para>The version number of the dashboard. If the version number property is provided, only
            the specified version of the dashboard is deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDashboardCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteDashboardResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteDashboardResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDashboardCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DashboardId parameter.
            The -PassThru parameter is deprecated, use -Select '^DashboardId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDashboardCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSetCmdlet">
            <summary>
            Deletes a dataset.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSetCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSetCmdlet.DataSetId">
            <summary>
            <para>
            <para>The ID for the dataset that you want to create. This ID is unique per AWS Region for
            each AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteDataSetResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteDataSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSetId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSourceCmdlet">
            <summary>
            Deletes the data source permanently. This action breaks all the datasets that reference
            the deleted data source.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSourceCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSourceCmdlet.DataSourceId">
            <summary>
            <para>
            <para>The ID of the data source. This ID is unique per AWS Region for each AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteDataSourceResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteDataSourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupCmdlet">
            <summary>
            Removes a user group from Amazon QuickSight.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the AWS account that the group is in. Currently, you use the ID for the
            AWS account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the group that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteGroupResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupMembershipCmdlet">
            <summary>
            Removes a user from a group so that the user is no longer a member of the group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupMembershipCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the AWS account that the group is in. Currently, you use the ID for the
            AWS account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupMembershipCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the group that you want to delete the user from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupMembershipCmdlet.MemberName">
            <summary>
            <para>
            <para>The name of the user that you want to delete from the group membership.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupMembershipCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupMembershipCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteGroupMembershipResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteGroupMembershipResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupMembershipCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MemberName parameter.
            The -PassThru parameter is deprecated, use -Select '^MemberName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupMembershipCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSIAMPolicyAssignmentCmdlet">
            <summary>
            Deletes an existing IAM policy assignment.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSIAMPolicyAssignmentCmdlet.AssignmentName">
            <summary>
            <para>
            <para>The name of the assignment. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSIAMPolicyAssignmentCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID where you want to delete the IAM policy assignment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSIAMPolicyAssignmentCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace that contains the assignment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSIAMPolicyAssignmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AssignmentName'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteIAMPolicyAssignmentResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteIAMPolicyAssignmentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSIAMPolicyAssignmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssignmentName parameter.
            The -PassThru parameter is deprecated, use -Select '^AssignmentName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSIAMPolicyAssignmentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSResourceTagCmdlet">
            <summary>
            Removes a tag or tags from a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource that you want to untag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The keys of the key-value pairs for the resource tag or tags assigned to the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UntagResourceResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UntagResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateCmdlet">
            <summary>
            Deletes a template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the template that you're deleting.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateCmdlet.TemplateId">
            <summary>
            <para>
            <para>An ID for the template you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateCmdlet.VersionNumber">
            <summary>
            <para>
            <para>Specifies the version of the template that you want to delete. If you don't provide
            a version number, <code>DeleteTemplate</code> deletes all versions of the template.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteTemplateResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateId parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateAliasCmdlet">
            <summary>
            Deletes the item that the specified template alias points to. If you provide a specific
            alias, you delete the version of the template that the alias points to.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateAliasCmdlet.AliasName">
            <summary>
            <para>
            <para>The name for the template alias. If you name a specific alias, you delete the version
            that the alias points to. You can specify the latest version of the template by providing
            the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateAliasCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the item to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateAliasCmdlet.TemplateId">
            <summary>
            <para>
            <para>The ID for the template that the specified alias is for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteTemplateAliasResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteTemplateAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AliasName parameter.
            The -PassThru parameter is deprecated, use -Select '^AliasName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserCmdlet">
            <summary>
            Deletes the Amazon QuickSight user that is associated with the identity of the AWS
            Identity and Access Management (IAM) user or role that's making the call. The IAM
            user isn't deleted as a result of this call.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the AWS account that the user is in. Currently, you use the ID for the
            AWS account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserCmdlet.UserName">
            <summary>
            <para>
            <para>The name of the user that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteUserResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserName parameter.
            The -PassThru parameter is deprecated, use -Select '^UserName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserByPrincipalIdCmdlet">
            <summary>
            Deletes a user identified by its principal ID.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserByPrincipalIdCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the AWS account that the user is in. Currently, you use the ID for the
            AWS account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserByPrincipalIdCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserByPrincipalIdCmdlet.PrincipalId">
            <summary>
            <para>
            <para>The principal ID of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserByPrincipalIdCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteUserByPrincipalIdResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteUserByPrincipalIdResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserByPrincipalIdCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PrincipalId parameter.
            The -PassThru parameter is deprecated, use -Select '^PrincipalId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserByPrincipalIdCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.SearchQSDashboardCmdlet">
            <summary>
            Searchs for dashboards that belong to a user.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSDashboardCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the user whose dashboards you're searching
            for. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSDashboardCmdlet.Filter">
            <summary>
            <para>
            <para>The filters to apply to the search. Currently, you can search only by user name. For
            example, <code>"Filters": [ { "Name": "QUICKSIGHT_USER", "Operator": "StringEquals",
            "Value": "arn:aws:quicksight:us-east-1:1:user/default/UserName1" } ]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSDashboardCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSDashboardCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSDashboardCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DashboardSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.SearchDashboardsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.SearchDashboardsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSDashboardCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSDashboardCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSDashboardCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.StopQSIngestionCmdlet">
            <summary>
            Cancels an ongoing ingestion of data into SPICE.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.StopQSIngestionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.StopQSIngestionCmdlet.DataSetId">
            <summary>
            <para>
            <para>The ID of the dataset used in the ingestion.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.StopQSIngestionCmdlet.IngestionId">
            <summary>
            <para>
            <para>An ID for the ingestion.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.StopQSIngestionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CancelIngestionResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CancelIngestionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.StopQSIngestionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IngestionId parameter.
            The -PassThru parameter is deprecated, use -Select '^IngestionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.StopQSIngestionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet">
            <summary>
            Updates a dashboard in an AWS account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.SourceTemplate_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.AdHocFilteringOption_AvailabilityStatus">
            <summary>
            <para>
            <para>Availability status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.ExportToCSVOption_AvailabilityStatus">
            <summary>
            <para>
            <para>Availability status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the dashboard that you're updating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.DashboardId">
            <summary>
            <para>
            <para>The ID for the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.SourceTemplate_DataSetReference">
            <summary>
            <para>
            <para>Dataset references.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.Parameters_DateTimeParameter">
            <summary>
            <para>
            <para>DateTime parameters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.Parameters_DecimalParameter">
            <summary>
            <para>
            <para>Decimal parameters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.Parameters_IntegerParameter">
            <summary>
            <para>
            <para>Integer parameters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.Name">
            <summary>
            <para>
            <para>The display name of the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.Parameters_StringParameter">
            <summary>
            <para>
            <para>String parameters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.VersionDescription">
            <summary>
            <para>
            <para>A description for the first version of the dashboard being created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.SheetControlsOption_VisibilityState">
            <summary>
            <para>
            <para>Visibility state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateDashboardResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateDashboardResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPermissionCmdlet">
            <summary>
            Updates read and write permissions on a dashboard.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the dashboard whose permissions you're updating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPermissionCmdlet.DashboardId">
            <summary>
            <para>
            <para>The ID for the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPermissionCmdlet.GrantPermission">
            <summary>
            <para>
            <para>The permissions that you want to grant on this resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPermissionCmdlet.RevokePermission">
            <summary>
            <para>
            <para>The permissions that you want to revoke from this resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateDashboardPermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateDashboardPermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPublishedVersionCmdlet">
            <summary>
            Updates the published version of a dashboard.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPublishedVersionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the dashboard that you're updating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPublishedVersionCmdlet.DashboardId">
            <summary>
            <para>
            <para>The ID for the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPublishedVersionCmdlet.VersionNumber">
            <summary>
            <para>
            <para>The version number of the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPublishedVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateDashboardPublishedVersionResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateDashboardPublishedVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPublishedVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPublishedVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet">
            <summary>
            Updates a dataset.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.RowLevelPermissionDataSet_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the permission dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.ColumnGroup">
            <summary>
            <para>
            <para>Groupings of columns that work together in certain QuickSight features. Currently,
            only geospatial hierarchy is supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.DataSetId">
            <summary>
            <para>
            <para>The ID for the dataset that you want to update. This ID is unique per AWS Region for
            each AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.ImportMode">
            <summary>
            <para>
            <para>Indicates whether you want to import the data into SPICE.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.LogicalTableMap">
            <summary>
            <para>
            <para>Configures the combination and transformation of the data from the physical tables.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.Name">
            <summary>
            <para>
            <para>The display name for the dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.RowLevelPermissionDataSet_PermissionPolicy">
            <summary>
            <para>
            <para>Permission policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.PhysicalTableMap">
            <summary>
            <para>
            <para>Declares the physical tables that are available in the underlying data sources.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateDataSetResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateDataSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSetId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetPermissionCmdlet">
            <summary>
            Updates the permissions on a dataset.
            
             
            <para>
            The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetPermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetPermissionCmdlet.DataSetId">
            <summary>
            <para>
            <para>The ID for the dataset whose permissions you want to update. This ID is unique per
            AWS Region for each AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetPermissionCmdlet.GrantPermission">
            <summary>
            <para>
            <para>The resource permissions that you want to grant to the dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetPermissionCmdlet.RevokePermission">
            <summary>
            <para>
            <para>The resource permissions that you want to revoke from the dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateDataSetPermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateDataSetPermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSetId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetPermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet">
            <summary>
            Updates a data source.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.ManifestFileLocation_Bucket">
            <summary>
            <para>
            <para>Amazon S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.PrestoParameters_Catalog">
            <summary>
            <para>
            <para>Catalog.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.RedshiftParameters_ClusterId">
            <summary>
            <para>
            <para>Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code>
            are provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AuroraParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AuroraPostgreSqlParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.MariaDbParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.MySqlParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.PostgreSqlParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.RdsParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.RedshiftParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.SnowflakeParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.SqlServerParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.TeradataParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AwsIotAnalyticsParameters_DataSetName">
            <summary>
            <para>
            <para>Dataset name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.DataSourceId">
            <summary>
            <para>
            <para>The ID of the data source. This ID is unique per AWS Region for each AWS account.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.SslProperties_DisableSsl">
            <summary>
            <para>
            <para>A Boolean option to control whether SSL should be disabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AmazonElasticsearchParameters_Domain">
            <summary>
            <para>
            <para>The Amazon Elasticsearch Service domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AuroraParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AuroraPostgreSqlParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.MariaDbParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.MySqlParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.PostgreSqlParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.PrestoParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.RedshiftParameters_Host">
            <summary>
            <para>
            <para>Host. This field can be blank if <code>ClusterId</code> is provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.SnowflakeParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.SparkParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.SqlServerParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.TeradataParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.RdsParameters_InstanceId">
            <summary>
            <para>
            <para>Instance ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.ManifestFileLocation_Key">
            <summary>
            <para>
            <para>Amazon S3 key that identifies an object.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.TwitterParameters_MaxRow">
            <summary>
            <para>
            <para>Maximum number of rows to query Twitter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.Name">
            <summary>
            <para>
            <para>A display name for the data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.CredentialPair_Password">
            <summary>
            <para>
            <para>Password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AuroraParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AuroraPostgreSqlParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.MariaDbParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.MySqlParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.PostgreSqlParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.PrestoParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.RedshiftParameters_Port">
            <summary>
            <para>
            <para>Port. This field can be blank if the <code>ClusterId</code> is provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.SparkParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.SqlServerParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.TeradataParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.TwitterParameters_Query">
            <summary>
            <para>
            <para>Twitter query string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.JiraParameters_SiteBaseUrl">
            <summary>
            <para>
            <para>The base URL of the Jira site.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.ServiceNowParameters_SiteBaseUrl">
            <summary>
            <para>
            <para>URL of the base site.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.CredentialPair_Username">
            <summary>
            <para>
            <para>User name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.VpcConnectionProperties_VpcConnectionArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the VPC connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.SnowflakeParameters_Warehouse">
            <summary>
            <para>
            <para>Warehouse.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AthenaParameters_WorkGroup">
            <summary>
            <para>
            <para>The workgroup that Amazon Athena uses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateDataSourceResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateDataSourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourcePermissionCmdlet">
            <summary>
            Updates the permissions to a data source.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourcePermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The AWS account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourcePermissionCmdlet.DataSourceId">
            <summary>
            <para>
            <para>The ID of the data source. This ID is unique per AWS Region for each AWS account.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourcePermissionCmdlet.GrantPermission">
            <summary>
            <para>
            <para>A list of resource permissions that you want to grant on the data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourcePermissionCmdlet.RevokePermission">
            <summary>
            <para>
            <para>A list of resource permissions that you want to revoke on the data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourcePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateDataSourcePermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateDataSourcePermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourcePermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourcePermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSGroupCmdlet">
            <summary>
            Changes a group description.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSGroupCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the AWS account that the group is in. Currently, you use the ID for the
            AWS account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSGroupCmdlet.Description">
            <summary>
            <para>
            <para>The description for the group that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the group that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSGroupCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Group'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateGroupResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSIAMPolicyAssignmentCmdlet">
            <summary>
            Updates an existing IAM policy assignment. This operation updates only the optional
            parameter or parameters that are specified in the request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIAMPolicyAssignmentCmdlet.AssignmentName">
            <summary>
            <para>
            <para>The name of the assignment. This name must be unique within an AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIAMPolicyAssignmentCmdlet.AssignmentStatus">
            <summary>
            <para>
            <para>The status of the assignment. Possible values are as follows:</para><ul><li><para><code>ENABLED</code> - Anything specified in this assignment is used when creating
            the data source.</para></li><li><para><code>DISABLED</code> - This assignment isn't used when creating the data source.</para></li><li><para><code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating
            the data source.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIAMPolicyAssignmentCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the IAM policy assignment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIAMPolicyAssignmentCmdlet.Identity">
            <summary>
            <para>
            <para>The QuickSight users, groups, or both that you want to assign the policy to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIAMPolicyAssignmentCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace of the assignment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIAMPolicyAssignmentCmdlet.PolicyArn">
            <summary>
            <para>
            <para>The ARN for the IAM policy to apply to the QuickSight users and groups specified in
            this assignment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIAMPolicyAssignmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateIAMPolicyAssignmentResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateIAMPolicyAssignmentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIAMPolicyAssignmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssignmentName parameter.
            The -PassThru parameter is deprecated, use -Select '^AssignmentName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIAMPolicyAssignmentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet">
            <summary>
            Updates a template from an existing Amazon QuickSight analysis or another template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet.SourceAnalysis_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet.SourceTemplate_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the template that you're updating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet.SourceAnalysis_DataSetReference">
            <summary>
            <para>
            <para>A structure containing information about the dataset references used as placeholders
            in the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet.Name">
            <summary>
            <para>
            <para>The name for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet.TemplateId">
            <summary>
            <para>
            <para>The ID for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet.VersionDescription">
            <summary>
            <para>
            <para>A description of the current template version that is being updated. Every time you
            call <code>UpdateTemplate</code>, you create a new version of the template. Each version
            of the template maintains a description of the version in the <code>VersionDescription</code>
            field.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateTemplateResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateId parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateAliasCmdlet">
            <summary>
            Updates the template alias of a template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateAliasCmdlet.AliasName">
            <summary>
            <para>
            <para>The alias of the template that you want to update. If you name a specific alias, you
            update the version that the alias points to. You can specify the latest version of
            the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code>
            parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateAliasCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the template alias that you're updating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateAliasCmdlet.TemplateId">
            <summary>
            <para>
            <para>The ID for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateAliasCmdlet.TemplateVersionNumber">
            <summary>
            <para>
            <para>The version number of the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TemplateAlias'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateTemplateAliasResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateTemplateAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AliasName parameter.
            The -PassThru parameter is deprecated, use -Select '^AliasName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplatePermissionCmdlet">
            <summary>
            Updates the resource permissions for a template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplatePermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the AWS account that contains the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplatePermissionCmdlet.GrantPermission">
            <summary>
            <para>
            <para>A list of resource permissions to be granted on the template. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplatePermissionCmdlet.RevokePermission">
            <summary>
            <para>
            <para>A list of resource permissions to be revoked from the template. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplatePermissionCmdlet.TemplateId">
            <summary>
            <para>
            <para>The ID for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplatePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateTemplatePermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateTemplatePermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplatePermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateId parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplatePermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet">
            <summary>
            Updates an Amazon QuickSight user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the AWS account that the user is in. Currently, you use the ID for the
            AWS account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.Email">
            <summary>
            <para>
            <para>The email address of the user that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.Role">
            <summary>
            <para>
            <para>The Amazon QuickSight role of the user. The user role can be one of the following:</para><ul><li><para><code>READER</code>: A user who has read-only access to dashboards.</para></li><li><para><code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and
            dashboards.</para></li><li><para><code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight
            settings.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.UserName">
            <summary>
            <para>
            <para>The Amazon QuickSight user name that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'User'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateUserResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserName parameter.
            The -PassThru parameter is deprecated, use -Select '^UserName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
