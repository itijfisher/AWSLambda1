<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.CodeDeploy</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.AddCDOnPremiseInstanceTagCmdlet">
            <summary>
            Adds tags to on-premises instances.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.AddCDOnPremiseInstanceTagCmdlet.InstanceName">
            <summary>
            <para>
            <para>The names of the on-premises instances to which to add tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.AddCDOnPremiseInstanceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tag key-value pairs to add to the on-premises instances.</para><para>Keys and values are both required. Keys cannot be null or empty strings. Value-only
            tags are not allowed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.AddCDOnPremiseInstanceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.AddTagsToOnPremisesInstancesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.AddCDOnPremiseInstanceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.AddCDOnPremiseInstanceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.AddCDResourceTagCmdlet">
            <summary>
            Associates the list of tags in the input <code>Tags</code> parameter with the resource
            identified by the <code>ResourceArn</code> input parameter.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.AddCDResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para> The ARN of a resource, such as a CodeDeploy application or deployment group. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.AddCDResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para> A list of tags that <code>TagResource</code> associates with a resource. The resource
            is identified by the <code>ResourceArn</code> input parameter. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.AddCDResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.AddCDResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.AddCDResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationCmdlet">
            <summary>
            Gets information about an application.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationCmdlet.ApplicationName">
            <summary>
            <para>
            <para>The name of an AWS CodeDeploy application associated with the IAM user or AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Application'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.GetApplicationResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.GetApplicationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApplicationName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApplicationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationBatchCmdlet">
            <summary>
            Gets information about one or more applications. The maximum number of applications
            that can be returned is 100.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationBatchCmdlet.ApplicationName">
            <summary>
            <para>
            <para>A list of application names separated by spaces. The maximum number of application
            names you can specify is 100.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApplicationsInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.BatchGetApplicationsResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.BatchGetApplicationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApplicationName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApplicationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationListCmdlet">
            <summary>
            Lists the applications registered with the IAM user or AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier returned from the previous list applications call. It can be used to
            return the next set of applications in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Applications'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.ListApplicationsResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.ListApplicationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionCmdlet">
            <summary>
            Gets information about an application revision.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionCmdlet.ApplicationName">
            <summary>
            <para>
            <para>The name of the application that corresponds to the revision.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionCmdlet.S3Location_Bucket">
            <summary>
            <para>
            <para>The name of the Amazon S3 bucket where the application revision is stored.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionCmdlet.S3Location_BundleType">
            <summary>
            <para>
            <para>The file type of the application revision. Must be one of the following:</para><ul><li><para><code>tar</code>: A tar archive file.</para></li><li><para><code>tgz</code>: A compressed tar archive file.</para></li><li><para><code>zip</code>: A zip archive file.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionCmdlet.GitHubLocation_CommitId">
            <summary>
            <para>
            <para>The SHA1 commit ID of the GitHub commit that represents the bundled artifacts for
            the application revision.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionCmdlet.AppSpecContent_Content">
            <summary>
            <para>
            <para> The YAML-formatted or JSON-formatted revision string. </para><para> For an AWS Lambda deployment, the content includes a Lambda function name, the alias
            for its original version, and the alias for its replacement version. The deployment
            shifts traffic from the original version of the Lambda function to the replacement
            version. </para><para> For an Amazon ECS deployment, the content includes the task name, information about
            the load balancer that serves traffic to the container, and more. </para><para> For both types of deployments, the content can specify Lambda functions that run
            at specified hooks, such as <code>BeforeInstall</code>, during a deployment. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionCmdlet.String_Content">
            <summary>
            <para>
            <para>The YAML-formatted or JSON-formatted revision string. It includes information about
            which Lambda function to update and optional Lambda functions that validate deployment
            lifecycle events.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionCmdlet.S3Location_ETag">
            <summary>
            <para>
            <para>The ETag of the Amazon S3 object that represents the bundled artifacts for the application
            revision.</para><para>If the ETag is not specified as an input parameter, ETag validation of the object
            is skipped.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionCmdlet.S3Location_Key">
            <summary>
            <para>
            <para>The name of the Amazon S3 object that represents the bundled artifacts for the application
            revision.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionCmdlet.GitHubLocation_Repository">
            <summary>
            <para>
            <para>The GitHub account and repository pair that stores a reference to the commit that
            represents the bundled artifacts for the application revision. </para><para>Specified as account/repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionCmdlet.Revision_RevisionType">
            <summary>
            <para>
            <para>The type of application revision:</para><ul><li><para>S3: An application revision stored in Amazon S3.</para></li><li><para>GitHub: An application revision stored in GitHub (EC2/On-premises deployments only).</para></li><li><para>String: A YAML-formatted or JSON-formatted string (AWS Lambda deployments only).</para></li><li><para>AppSpecContent: An <code>AppSpecContent</code> object that contains the contents of
            an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted
            as JSON or YAML stored as a RawString.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionCmdlet.AppSpecContent_Sha256">
            <summary>
            <para>
            <para> The SHA256 hash value of the revision content. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionCmdlet.String_Sha256">
            <summary>
            <para>
            <para>The SHA256 hash value of the revision content.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionCmdlet.S3Location_Version">
            <summary>
            <para>
            <para>A specific version of the Amazon S3 object that represents the bundled artifacts for
            the application revision.</para><para>If the version is not specified, the system uses the most recent version by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.GetApplicationRevisionResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.GetApplicationRevisionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApplicationName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApplicationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionBatchCmdlet">
            <summary>
            Gets information about one or more application revisions. The maximum number of application
            revisions that can be returned is 25.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionBatchCmdlet.ApplicationName">
            <summary>
            <para>
            <para>The name of an AWS CodeDeploy application about which to get revision information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionBatchCmdlet.Revision">
            <summary>
            <para>
            <para>An array of <code>RevisionLocation</code> objects that specify information to get
            about the application revisions, including type and location. The maximum number of
            <code>RevisionLocation</code> objects you can specify is 25.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.BatchGetApplicationRevisionsResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.BatchGetApplicationRevisionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApplicationName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApplicationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionListCmdlet">
            <summary>
            Lists information about revisions for an application.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionListCmdlet.ApplicationName">
            <summary>
            <para>
            <para> The name of an AWS CodeDeploy application associated with the IAM user or AWS account.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionListCmdlet.Deployed">
            <summary>
            <para>
            <para> Whether to list revisions based on whether the revision is the target revision of
            a deployment group: </para><ul><li><para><code>include</code>: List revisions that are target revisions of a deployment group.</para></li><li><para><code>exclude</code>: Do not list revisions that are target revisions of a deployment
            group.</para></li><li><para><code>ignore</code>: List all revisions.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionListCmdlet.S3Bucket">
            <summary>
            <para>
            <para> An Amazon S3 bucket name to limit the search for revisions. </para><para> If set to null, all of the user's buckets are searched. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionListCmdlet.S3KeyPrefix">
            <summary>
            <para>
            <para> A key prefix for the set of Amazon S3 objects to limit the search for revisions.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionListCmdlet.SortBy">
            <summary>
            <para>
            <para>The column name to use to sort the list results:</para><ul><li><para><code>registerTime</code>: Sort by the time the revisions were registered with AWS
            CodeDeploy.</para></li><li><para><code>firstUsedTime</code>: Sort by the time the revisions were first used in a deployment.</para></li><li><para><code>lastUsedTime</code>: Sort by the time the revisions were last used in a deployment.</para></li></ul><para> If not specified or set to null, the results are returned in an arbitrary order.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionListCmdlet.SortOrder">
            <summary>
            <para>
            <para> The order in which to sort the list results: </para><ul><li><para><code>ascending</code>: ascending order.</para></li><li><para><code>descending</code>: descending order.</para></li></ul><para>If not specified, the results are sorted in ascending order.</para><para>If set to null, the results are sorted in an arbitrary order.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier returned from the previous <code>ListApplicationRevisions</code> call.
            It can be used to return the next set of applications in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Revisions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.ListApplicationRevisionsResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.ListApplicationRevisionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApplicationName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApplicationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDApplicationRevisionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentCmdlet">
            <summary>
            Gets information about a deployment.
            
             <note><para>
             The <code>content</code> property of the <code>appSpecContent</code> object in the
            returned revision is always null. Use <code>GetApplicationRevision</code> and the
            <code>sha256</code> property of the returned <code>appSpecContent</code> object to
            get the content of the deployment’s AppSpec file. 
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentCmdlet.DeploymentId">
            <summary>
            <para>
            <para> The unique ID of a deployment associated with the IAM user or AWS account. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DeploymentInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.GetDeploymentResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.GetDeploymentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeploymentId parameter.
            The -PassThru parameter is deprecated, use -Select '^DeploymentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentBatchCmdlet">
            <summary>
            Gets information about one or more deployments. The maximum number of deployments
            that can be returned is 25.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentBatchCmdlet.DeploymentId">
            <summary>
            <para>
            <para> A list of deployment IDs, separated by spaces. The maximum number of deployment IDs
            you can specify is 25.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DeploymentsInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.BatchGetDeploymentsResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.BatchGetDeploymentsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeploymentId parameter.
            The -PassThru parameter is deprecated, use -Select '^DeploymentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentConfigCmdlet">
            <summary>
            Gets information about a deployment configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentConfigCmdlet.DeploymentConfigName">
            <summary>
            <para>
            <para>The name of a deployment configuration associated with the IAM user or AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DeploymentConfigInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.GetDeploymentConfigResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.GetDeploymentConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeploymentConfigName parameter.
            The -PassThru parameter is deprecated, use -Select '^DeploymentConfigName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentConfigListCmdlet">
            <summary>
            Lists the deployment configurations with the IAM user or AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentConfigListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier returned from the previous <code>ListDeploymentConfigs</code> call.
            It can be used to return the next set of deployment configurations in the list. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentConfigListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DeploymentConfigsList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.ListDeploymentConfigsResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.ListDeploymentConfigsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentConfigListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentGroupCmdlet">
            <summary>
            Gets information about a deployment group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentGroupCmdlet.ApplicationName">
            <summary>
            <para>
            <para>The name of an AWS CodeDeploy application associated with the IAM user or AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentGroupCmdlet.DeploymentGroupName">
            <summary>
            <para>
            <para>The name of a deployment group for the specified application.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DeploymentGroupInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.GetDeploymentGroupResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.GetDeploymentGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApplicationName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApplicationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentGroupBatchCmdlet">
            <summary>
            Gets information about one or more deployment groups.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentGroupBatchCmdlet.ApplicationName">
            <summary>
            <para>
            <para>The name of an AWS CodeDeploy application associated with the applicable IAM user
            or AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentGroupBatchCmdlet.DeploymentGroupName">
            <summary>
            <para>
            <para>The names of the deployment groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentGroupBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.BatchGetDeploymentGroupsResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.BatchGetDeploymentGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentGroupBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApplicationName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApplicationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentGroupListCmdlet">
            <summary>
            Lists the deployment groups for an application registered with the IAM user or AWS
            account.<br/><br/>In the AWS.Tools.CodeDeploy module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentGroupListCmdlet.ApplicationName">
            <summary>
            <para>
            <para>The name of an AWS CodeDeploy application associated with the IAM user or AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentGroupListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier returned from the previous list deployment groups call. It can be used
            to return the next set of deployment groups in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.CodeDeploy module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentGroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.ListDeploymentGroupsResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.ListDeploymentGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentGroupListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApplicationName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApplicationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentGroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentInstanceCmdlet">
            <summary>
            Gets information about an instance as part of a deployment.<br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentInstanceCmdlet.DeploymentId">
            <summary>
            <para>
            <para> The unique ID of a deployment. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentInstanceCmdlet.InstanceId">
            <summary>
            <para>
            <para> The unique ID of an instance in the deployment group. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceSummary'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.GetDeploymentInstanceResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.GetDeploymentInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentInstanceBatchCmdlet">
            <summary>
            <note><para>
             This method works, but is deprecated. Use <code>BatchGetDeploymentTargets</code>
            instead. 
            </para></note><para>
             Returns an array of one or more instances associated with a deployment. This method
            works with EC2/On-premises and AWS Lambda compute platforms. The newer <code>BatchGetDeploymentTargets</code>
            works with all compute platforms. The maximum number of instances that can be returned
            is 25.
            </para><br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentInstanceBatchCmdlet.DeploymentId">
            <summary>
            <para>
            <para> The unique ID of a deployment. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentInstanceBatchCmdlet.InstanceId">
            <summary>
            <para>
            <para>The unique IDs of instances used in the deployment. The maximum number of instance
            IDs you can specify is 25.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentInstanceBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.BatchGetDeploymentInstancesResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.BatchGetDeploymentInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentInstanceBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeploymentId parameter.
            The -PassThru parameter is deprecated, use -Select '^DeploymentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentInstanceListCmdlet">
            <summary>
            <note><para>
             The newer <code>BatchGetDeploymentTargets</code> should be used instead because it
            works with all compute types. <code>ListDeploymentInstances</code> throws an exception
            if it is used with a compute platform other than EC2/On-premises or AWS Lambda. 
            </para></note><para>
             Lists the instance for a deployment associated with the IAM user or AWS account.
            
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.<br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentInstanceListCmdlet.DeploymentId">
            <summary>
            <para>
            <para> The unique ID of a deployment. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentInstanceListCmdlet.InstanceStatusFilter">
            <summary>
            <para>
            <para>A subset of instances to list by status:</para><ul><li><para><code>Pending</code>: Include those instances with pending deployments.</para></li><li><para><code>InProgress</code>: Include those instances where deployments are still in progress.</para></li><li><para><code>Succeeded</code>: Include those instances with successful deployments.</para></li><li><para><code>Failed</code>: Include those instances with failed deployments.</para></li><li><para><code>Skipped</code>: Include those instances with skipped deployments.</para></li><li><para><code>Unknown</code>: Include those instances with deployments in an unknown state.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentInstanceListCmdlet.InstanceTypeFilter">
            <summary>
            <para>
            <para>The set of instances in a blue/green deployment, either those in the original environment
            ("BLUE") or those in the replacement environment ("GREEN"), for which you want to
            view instance information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentInstanceListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier returned from the previous list deployment instances call. It can be
            used to return the next set of deployment instances in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentInstanceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstancesList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.ListDeploymentInstancesResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.ListDeploymentInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentInstanceListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentListCmdlet">
            <summary>
            Lists the deployments in a deployment group for an application registered with the
            IAM user or AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentListCmdlet.ApplicationName">
            <summary>
            <para>
            <para>The name of an AWS CodeDeploy application associated with the IAM user or AWS account.</para><note><para>If <code>applicationName</code> is specified, then <code>deploymentGroupName</code>
            must be specified. If it is not specified, then <code>deploymentGroupName</code> must
            not be specified. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentListCmdlet.DeploymentGroupName">
            <summary>
            <para>
            <para>The name of a deployment group for the specified application.</para><note><para>If <code>deploymentGroupName</code> is specified, then <code>applicationName</code>
            must be specified. If it is not specified, then <code>applicationName</code> must
            not be specified. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentListCmdlet.CreateTimeRange_End">
            <summary>
            <para>
            <para>The end time of the time range.</para><note><para>Specify null to leave the end time open-ended.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentListCmdlet.ExternalId">
            <summary>
            <para>
            <para>The unique ID of an external resource for returning deployments linked to the external
            resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentListCmdlet.IncludeOnlyStatus">
            <summary>
            <para>
            <para>A subset of deployments to list by status:</para><ul><li><para><code>Created</code>: Include created deployments in the resulting list.</para></li><li><para><code>Queued</code>: Include queued deployments in the resulting list.</para></li><li><para><code>In Progress</code>: Include in-progress deployments in the resulting list.</para></li><li><para><code>Succeeded</code>: Include successful deployments in the resulting list.</para></li><li><para><code>Failed</code>: Include failed deployments in the resulting list.</para></li><li><para><code>Stopped</code>: Include stopped deployments in the resulting list.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentListCmdlet.CreateTimeRange_Start">
            <summary>
            <para>
            <para>The start time of the time range.</para><note><para>Specify null to leave the start time open-ended.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier returned from the previous list deployments call. It can be used to
            return the next set of deployments in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Deployments'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.ListDeploymentsResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.ListDeploymentsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApplicationName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApplicationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentTargetCmdlet">
            <summary>
            Returns information about a deployment target.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentTargetCmdlet.DeploymentId">
            <summary>
            <para>
            <para> The unique ID of a deployment. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentTargetCmdlet.TargetId">
            <summary>
            <para>
            <para> The unique ID of a deployment target. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DeploymentTarget'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.GetDeploymentTargetResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.GetDeploymentTargetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentTargetBatchCmdlet">
            <summary>
            Returns an array of one or more targets associated with a deployment. This method
            works with all compute types and should be used instead of the deprecated <code>BatchGetDeploymentInstances</code>.
            The maximum number of targets that can be returned is 25.
            
             
            <para>
             The type of targets returned depends on the deployment's compute platform or deployment
            method: 
            </para><ul><li><para><b>EC2/On-premises</b>: Information about EC2 instance targets. 
            </para></li><li><para><b>AWS Lambda</b>: Information about Lambda functions targets. 
            </para></li><li><para><b>Amazon ECS</b>: Information about Amazon ECS service targets. 
            </para></li><li><para><b>CloudFormation</b>: Information about targets of blue/green deployments initiated
            by a CloudFormation stack update.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentTargetBatchCmdlet.DeploymentId">
            <summary>
            <para>
            <para> The unique ID of a deployment. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentTargetBatchCmdlet.TargetId">
            <summary>
            <para>
            <para> The unique IDs of the deployment targets. The compute platform of the deployment
            determines the type of the targets and their formats. The maximum number of deployment
            target IDs you can specify is 25.</para><ul><li><para> For deployments that use the EC2/On-premises compute platform, the target IDs are
            EC2 or on-premises instances IDs, and their target type is <code>instanceTarget</code>.
            </para></li><li><para> For deployments that use the AWS Lambda compute platform, the target IDs are the
            names of Lambda functions, and their target type is <code>instanceTarget</code>. </para></li><li><para> For deployments that use the Amazon ECS compute platform, the target IDs are pairs
            of Amazon ECS clusters and services specified using the format <code>&lt;clustername&gt;:&lt;servicename&gt;</code>.
            Their target type is <code>ecsTarget</code>. </para></li><li><para> For deployments that are deployed with AWS CloudFormation, the target IDs are CloudFormation
            stack IDs. Their target type is <code>cloudFormationTarget</code>. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentTargetBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DeploymentTargets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.BatchGetDeploymentTargetsResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.BatchGetDeploymentTargetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentTargetListCmdlet">
            <summary>
            Returns an array of target IDs that are associated a deployment.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentTargetListCmdlet.DeploymentId">
            <summary>
            <para>
            <para> The unique ID of a deployment. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentTargetListCmdlet.TargetFilter">
            <summary>
            <para>
            <para> A key used to filter the returned targets. The two valid values are:</para><ul><li><para><code>TargetStatus</code> - A <code>TargetStatus</code> filter string can be <code>Failed</code>,
            <code>InProgress</code>, <code>Pending</code>, <code>Ready</code>, <code>Skipped</code>,
            <code>Succeeded</code>, or <code>Unknown</code>. </para></li><li><para><code>ServerInstanceLabel</code> - A <code>ServerInstanceLabel</code> filter string
            can be <code>Blue</code> or <code>Green</code>. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentTargetListCmdlet.NextToken">
            <summary>
            <para>
            <para> A token identifier returned from the previous <code>ListDeploymentTargets</code>
            call. It can be used to return the next set of deployment targets in the list. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentTargetListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TargetIds'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.ListDeploymentTargetsResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.ListDeploymentTargetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDDeploymentTargetListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDGitHubAccountTokenNameListCmdlet">
            <summary>
            Lists the names of stored connections to GitHub accounts.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDGitHubAccountTokenNameListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier returned from the previous <code>ListGitHubAccountTokenNames</code>
            call. It can be used to return the next set of names in the list. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDGitHubAccountTokenNameListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TokenNameList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.ListGitHubAccountTokenNamesResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.ListGitHubAccountTokenNamesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDGitHubAccountTokenNameListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDOnPremiseInstanceCmdlet">
            <summary>
            Gets information about an on-premises instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDOnPremiseInstanceCmdlet.InstanceName">
            <summary>
            <para>
            <para> The name of the on-premises instance about which to get information. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDOnPremiseInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.GetOnPremisesInstanceResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.GetOnPremisesInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDOnPremiseInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDOnPremiseInstanceBatchCmdlet">
            <summary>
            Gets information about one or more on-premises instances. The maximum number of on-premises
            instances that can be returned is 25.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDOnPremiseInstanceBatchCmdlet.InstanceName">
            <summary>
            <para>
            <para>The names of the on-premises instances about which to get information. The maximum
            number of instance names you can specify is 25.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDOnPremiseInstanceBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceInfos'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.BatchGetOnPremisesInstancesResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.BatchGetOnPremisesInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDOnPremiseInstanceBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDOnPremiseInstanceListCmdlet">
            <summary>
            Gets a list of names for one or more on-premises instances.
            
             
            <para>
            Unless otherwise specified, both registered and deregistered on-premises instance
            names are listed. To list only registered or deregistered on-premises instance names,
            use the registration status parameter.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDOnPremiseInstanceListCmdlet.RegistrationStatus">
            <summary>
            <para>
            <para>The registration status of the on-premises instances:</para><ul><li><para><code>Deregistered</code>: Include deregistered on-premises instances in the resulting
            list.</para></li><li><para><code>Registered</code>: Include registered on-premises instances in the resulting
            list.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDOnPremiseInstanceListCmdlet.TagFilter">
            <summary>
            <para>
            <para>The on-premises instance tags that are used to restrict the on-premises instance names
            returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDOnPremiseInstanceListCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier returned from the previous list on-premises instances call. It can be
            used to return the next set of on-premises instances in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDOnPremiseInstanceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceNames'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.ListOnPremisesInstancesResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.ListOnPremisesInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDOnPremiseInstanceListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.GetCDResourceTagCmdlet">
            <summary>
            Returns a list of tags for the resource identified by a specified Amazon Resource
            Name (ARN). Tags are used to organize and categorize your CodeDeploy resources.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para> The ARN of a CodeDeploy resource. <code>ListTagsForResource</code> returns all the
            tags associated with the resource that is identified by the <code>ResourceArn</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDResourceTagCmdlet.NextToken">
            <summary>
            <para>
            <para>An identifier returned from the previous <code>ListTagsForResource</code> call. It
            can be used to return the next set of applications in the list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.GetCDResourceTagCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.NewCDApplicationCmdlet">
            <summary>
            Creates an application.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDApplicationCmdlet.ApplicationName">
            <summary>
            <para>
            <para>The name of the application. This name must be unique with the applicable IAM user
            or AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDApplicationCmdlet.ComputePlatform">
            <summary>
            <para>
            <para> The destination platform type for the deployment (<code>Lambda</code>, <code>Server</code>,
            or <code>ECS</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDApplicationCmdlet.Tag">
            <summary>
            <para>
            <para> The metadata that you apply to CodeDeploy applications to help you organize and categorize
            them. Each tag consists of a key and an optional value, both of which you define.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDApplicationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApplicationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.CreateApplicationResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.CreateApplicationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDApplicationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApplicationName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApplicationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDApplicationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet">
            <summary>
            Deploys an application revision through the specified deployment group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.ApplicationName">
            <summary>
            <para>
            <para>The name of an AWS CodeDeploy application associated with the IAM user or AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.TargetInstancesAutoScalingGroup">
            <summary>
            <para>
            <para>The names of one or more Auto Scaling groups to identify a replacement environment
            for a blue/green deployment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.S3Location_Bucket">
            <summary>
            <para>
            <para>The name of the Amazon S3 bucket where the application revision is stored.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.S3Location_BundleType">
            <summary>
            <para>
            <para>The file type of the application revision. Must be one of the following:</para><ul><li><para><code>tar</code>: A tar archive file.</para></li><li><para><code>tgz</code>: A compressed tar archive file.</para></li><li><para><code>zip</code>: A zip archive file.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.GitHubLocation_CommitId">
            <summary>
            <para>
            <para>The SHA1 commit ID of the GitHub commit that represents the bundled artifacts for
            the application revision.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.AppSpecContent_Content">
            <summary>
            <para>
            <para> The YAML-formatted or JSON-formatted revision string. </para><para> For an AWS Lambda deployment, the content includes a Lambda function name, the alias
            for its original version, and the alias for its replacement version. The deployment
            shifts traffic from the original version of the Lambda function to the replacement
            version. </para><para> For an Amazon ECS deployment, the content includes the task name, information about
            the load balancer that serves traffic to the container, and more. </para><para> For both types of deployments, the content can specify Lambda functions that run
            at specified hooks, such as <code>BeforeInstall</code>, during a deployment. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.String_Content">
            <summary>
            <para>
            <para>The YAML-formatted or JSON-formatted revision string. It includes information about
            which Lambda function to update and optional Lambda functions that validate deployment
            lifecycle events.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.DeploymentConfigName">
            <summary>
            <para>
            <para>The name of a deployment configuration associated with the IAM user or AWS account.</para><para>If not specified, the value configured in the deployment group is used as the default.
            If the deployment group does not have a deployment configuration associated with it,
            <code>CodeDeployDefault</code>.<code>OneAtATime</code> is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.DeploymentGroupName">
            <summary>
            <para>
            <para>The name of the deployment group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.Description">
            <summary>
            <para>
            <para>A comment about the deployment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.Ec2TagSetList">
            <summary>
            <para>
            <para>A list that contains other lists of EC2 instance tag groups. For an instance to be
            included in the deployment group, it must be identified by all of the tag groups in
            the list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.AutoRollbackConfiguration_Enabled">
            <summary>
            <para>
            <para>Indicates whether a defined automatic rollback configuration is currently enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.S3Location_ETag">
            <summary>
            <para>
            <para>The ETag of the Amazon S3 object that represents the bundled artifacts for the application
            revision.</para><para>If the ETag is not specified as an input parameter, ETag validation of the object
            is skipped.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.AutoRollbackConfiguration_Event">
            <summary>
            <para>
            <para>The event type or types that trigger a rollback.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.FileExistsBehavior">
            <summary>
            <para>
            <para>Information about how AWS CodeDeploy handles files that already exist in a deployment
            target location but weren't part of the previous successful deployment.</para><para>The <code>fileExistsBehavior</code> parameter takes any of the following values:</para><ul><li><para>DISALLOW: The deployment fails. This is also the default behavior if no option is
            specified.</para></li><li><para>OVERWRITE: The version of the file from the application revision currently being deployed
            replaces the version already on the instance.</para></li><li><para>RETAIN: The version of the file already on the instance is kept and used as part of
            the new deployment.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.IgnoreApplicationStopFailure">
            <summary>
            <para>
            <para> If true, then if an <code>ApplicationStop</code>, <code>BeforeBlockTraffic</code>,
            or <code>AfterBlockTraffic</code> deployment lifecycle event to an instance fails,
            then the deployment continues to the next deployment lifecycle event. For example,
            if <code>ApplicationStop</code> fails, the deployment continues with <code>DownloadBundle</code>.
            If <code>BeforeBlockTraffic</code> fails, the deployment continues with <code>BlockTraffic</code>.
            If <code>AfterBlockTraffic</code> fails, the deployment continues with <code>ApplicationStop</code>.
            </para><para> If false or not specified, then if a lifecycle event fails during a deployment to
            an instance, that deployment fails. If deployment to that instance is part of an overall
            deployment and the number of healthy hosts is not less than the minimum number of
            healthy hosts, then a deployment to the next instance is attempted. </para><para> During a deployment, the AWS CodeDeploy agent runs the scripts specified for <code>ApplicationStop</code>,
            <code>BeforeBlockTraffic</code>, and <code>AfterBlockTraffic</code> in the AppSpec
            file from the previous successful deployment. (All other scripts are run from the
            AppSpec file in the current deployment.) If one of these scripts contains an error
            and does not run successfully, the deployment can fail. </para><para> If the cause of the failure is a script from the last successful deployment that
            will never run successfully, create a new deployment and use <code>ignoreApplicationStopFailures</code>
            to specify that the <code>ApplicationStop</code>, <code>BeforeBlockTraffic</code>,
            and <code>AfterBlockTraffic</code> failures should be ignored. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.S3Location_Key">
            <summary>
            <para>
            <para>The name of the Amazon S3 object that represents the bundled artifacts for the application
            revision.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.GitHubLocation_Repository">
            <summary>
            <para>
            <para>The GitHub account and repository pair that stores a reference to the commit that
            represents the bundled artifacts for the application revision. </para><para>Specified as account/repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.RevisionType">
            <summary>
            <para>
            <para>The type of application revision:</para><ul><li><para>S3: An application revision stored in Amazon S3.</para></li><li><para>GitHub: An application revision stored in GitHub (EC2/On-premises deployments only).</para></li><li><para>String: A YAML-formatted or JSON-formatted string (AWS Lambda deployments only).</para></li><li><para>AppSpecContent: An <code>AppSpecContent</code> object that contains the contents of
            an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted
            as JSON or YAML stored as a RawString.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.AppSpecContent_Sha256">
            <summary>
            <para>
            <para> The SHA256 hash value of the revision content. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.String_Sha256">
            <summary>
            <para>
            <para>The SHA256 hash value of the revision content.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.TargetInstancesTagFilter">
            <summary>
            <para>
            <para>The tag filter key, type, and value used to identify Amazon EC2 instances in a replacement
            environment for a blue/green deployment. Cannot be used in the same call as <code>ec2TagSet</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.UpdateOutdatedInstancesOnly">
            <summary>
            <para>
            <para> Indicates whether to deploy to all instances or only to instances that are not running
            the latest application revision. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.S3Location_Version">
            <summary>
            <para>
            <para>A specific version of the Amazon S3 object that represents the bundled artifacts for
            the application revision.</para><para>If the version is not specified, the system uses the most recent version by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DeploymentId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.CreateDeploymentResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.CreateDeploymentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApplicationName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApplicationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentConfigCmdlet">
            <summary>
            Creates a deployment configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentConfigCmdlet.TimeBasedCanary_CanaryInterval">
            <summary>
            <para>
            <para>The number of minutes between the first and second traffic shifts of a <code>TimeBasedCanary</code>
            deployment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentConfigCmdlet.TimeBasedCanary_CanaryPercentage">
            <summary>
            <para>
            <para>The percentage of traffic to shift in the first increment of a <code>TimeBasedCanary</code>
            deployment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentConfigCmdlet.ComputePlatform">
            <summary>
            <para>
            <para>The destination platform type for the deployment (<code>Lambda</code>, <code>Server</code>,
            or <code>ECS</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentConfigCmdlet.DeploymentConfigName">
            <summary>
            <para>
            <para>The name of the deployment configuration to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentConfigCmdlet.TimeBasedLinear_LinearInterval">
            <summary>
            <para>
            <para>The number of minutes between each incremental traffic shift of a <code>TimeBasedLinear</code>
            deployment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentConfigCmdlet.TimeBasedLinear_LinearPercentage">
            <summary>
            <para>
            <para>The percentage of traffic that is shifted at the start of each increment of a <code>TimeBasedLinear</code>
            deployment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentConfigCmdlet.MinimumHealthyHosts_Type">
            <summary>
            <para>
            <para>The minimum healthy instance type:</para><ul><li><para><code>HOST_COUNT</code>: The minimum number of healthy instances as an absolute value.</para></li><li><para><code>FLEET_PERCENT</code>: The minimum number of healthy instances as a percentage
            of the total number of instances in the deployment.</para></li></ul><para>In an example of nine instances, if a HOST_COUNT of six is specified, deploy to up
            to three instances at a time. The deployment is successful if six or more instances
            are deployed to successfully. Otherwise, the deployment fails. If a FLEET_PERCENT
            of 40 is specified, deploy to up to five instances at a time. The deployment is successful
            if four or more instances are deployed to successfully. Otherwise, the deployment
            fails.</para><note><para>In a call to the <code>GetDeploymentConfig</code>, CodeDeployDefault.OneAtATime returns
            a minimum healthy instance type of MOST_CONCURRENCY and a value of 1. This means a
            deployment to only one instance at a time. (You cannot set the type to MOST_CONCURRENCY,
            only to HOST_COUNT or FLEET_PERCENT.) In addition, with CodeDeployDefault.OneAtATime,
            AWS CodeDeploy attempts to ensure that all instances but one are kept in a healthy
            state during the deployment. Although this allows one instance at a time to be taken
            offline for a new deployment, it also means that if the deployment to the last instance
            fails, the overall deployment is still successful.</para></note><para>For more information, see <a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/instances-health.html">AWS
            CodeDeploy Instance Health</a> in the <i>AWS CodeDeploy User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentConfigCmdlet.TrafficRoutingConfig_Type">
            <summary>
            <para>
            <para>The type of traffic shifting (<code>TimeBasedCanary</code> or <code>TimeBasedLinear</code>)
            used by a deployment configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentConfigCmdlet.MinimumHealthyHosts_Value">
            <summary>
            <para>
            <para>The minimum healthy instance value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DeploymentConfigId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.CreateDeploymentConfigResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.CreateDeploymentConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeploymentConfigName parameter.
            The -PassThru parameter is deprecated, use -Select '^DeploymentConfigName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet">
            <summary>
            Creates a deployment group to which application revisions are deployed.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.GreenFleetProvisioningOptionAction">
            <summary>
            <para>
            <para>The method used to add instances to a replacement environment.</para><ul><li><para><code>DISCOVER_EXISTING</code>: Use instances that already exist or will be created
            manually.</para></li><li><para><code>COPY_AUTO_SCALING_GROUP</code>: Use settings from a specified Auto Scaling
            group to define and create instances in a new Auto Scaling group.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.OnSuccessBlueInstanceTerminationAction">
            <summary>
            <para>
            <para>The action to take on instances in the original environment after a successful blue/green
            deployment.</para><ul><li><para><code>TERMINATE</code>: Instances are terminated after a specified wait time.</para></li><li><para><code>KEEP_ALIVE</code>: Instances are left running after they are deregistered from
            the load balancer and removed from the deployment group.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.DeploymentReadyOptionTimeoutAction">
            <summary>
            <para>
            <para>Information about when to reroute traffic from an original environment to a replacement
            environment in a blue/green deployment.</para><ul><li><para>CONTINUE_DEPLOYMENT: Register new instances with the load balancer immediately after
            the new application revision is installed on the instances in the replacement environment.</para></li><li><para>STOP_DEPLOYMENT: Do not register new instances with a load balancer unless traffic
            rerouting is started using <a>ContinueDeployment</a>. If traffic rerouting is not
            started before the end of the specified wait period, the deployment status is changed
            to Stopped.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.AlarmConfiguration_Alarm">
            <summary>
            <para>
            <para>A list of alarms configured for the deployment group. A maximum of 10 alarms can be
            added to a deployment group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.ApplicationName">
            <summary>
            <para>
            <para>The name of an AWS CodeDeploy application associated with the IAM user or AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.AutoScalingGroup">
            <summary>
            <para>
            <para>A list of associated Amazon EC2 Auto Scaling groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.DeploymentConfigName">
            <summary>
            <para>
            <para>If specified, the deployment configuration name can be either one of the predefined
            configurations provided with AWS CodeDeploy or a custom deployment configuration that
            you create by calling the create deployment configuration operation.</para><para><code>CodeDeployDefault.OneAtATime</code> is the default deployment configuration.
            It is used if a configuration isn't specified for the deployment or deployment group.</para><para>For more information about the predefined deployment configurations in AWS CodeDeploy,
            see <a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations.html">Working
            with Deployment Configurations in CodeDeploy</a> in the <i>AWS CodeDeploy User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.DeploymentGroupName">
            <summary>
            <para>
            <para>The name of a new deployment group for the specified application.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.DeploymentStyleOption">
            <summary>
            <para>
            <para>Indicates whether to route deployment traffic behind a load balancer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.DeploymentStyleType">
            <summary>
            <para>
            <para>Indicates whether to run an in-place deployment or a blue/green deployment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.Ec2TagFilter">
            <summary>
            <para>
            <para>The Amazon EC2 tags on which to filter. The deployment group includes EC2 instances
            with any of the specified tags. Cannot be used in the same call as ec2TagSet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.Ec2TagSetList">
            <summary>
            <para>
            <para>A list that contains other lists of EC2 instance tag groups. For an instance to be
            included in the deployment group, it must be identified by all of the tag groups in
            the list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.EcsService">
            <summary>
            <para>
            <para> The target Amazon ECS services in the deployment group. This applies only to deployment
            groups that use the Amazon ECS compute platform. A target Amazon ECS service is specified
            as an Amazon ECS cluster and service name pair using the format <code>&lt;clustername&gt;:&lt;servicename&gt;</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.LoadBalancerInfoList">
            <summary>
            <para>
            <para>An array that contains information about the load balancer to use for load balancing
            in a deployment. In Elastic Load Balancing, load balancers are used with Classic Load
            Balancers.</para><note><para> Adding more than one load balancer to the array is not supported. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.AlarmConfiguration_Enabled">
            <summary>
            <para>
            <para>Indicates whether the alarm configuration is enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.AutoRollbackConfiguration_Enabled">
            <summary>
            <para>
            <para>Indicates whether a defined automatic rollback configuration is currently enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.AutoRollbackConfiguration_Event">
            <summary>
            <para>
            <para>The event type or types that trigger a rollback.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.AlarmConfiguration_IgnorePollAlarmFailure">
            <summary>
            <para>
            <para>Indicates whether a deployment should continue if information about the current state
            of alarms cannot be retrieved from Amazon CloudWatch. The default value is false.</para><ul><li><para><code>true</code>: The deployment proceeds even if alarm status information can't
            be retrieved from Amazon CloudWatch.</para></li><li><para><code>false</code>: The deployment stops if alarm status information can't be retrieved
            from Amazon CloudWatch.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.OnPremisesInstanceTagFilter">
            <summary>
            <para>
            <para>The on-premises instance tags on which to filter. The deployment group includes on-premises
            instances with any of the specified tags. Cannot be used in the same call as <code>OnPremisesTagSet</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.OnPremisesTagSetList">
            <summary>
            <para>
            <para>A list that contains other lists of on-premises instance tag groups. For an instance
            to be included in the deployment group, it must be identified by all of the tag groups
            in the list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.ServiceRoleArn">
            <summary>
            <para>
            <para>A service role Amazon Resource Name (ARN) that allows AWS CodeDeploy to act on the
            user's behalf when interacting with AWS services.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.Tag">
            <summary>
            <para>
            <para> The metadata that you apply to CodeDeploy deployment groups to help you organize
            and categorize them. Each tag consists of a key and an optional value, both of which
            you define. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.LoadBalancerInfo_TargetGroupInfoList">
            <summary>
            <para>
            <para>An array that contains information about the target group to use for load balancing
            in a deployment. In Elastic Load Balancing, target groups are used with Application
            Load Balancers.</para><note><para> Adding more than one target group to the array is not supported. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.LoadBalancerInfo_TargetGroupPairInfoList">
            <summary>
            <para>
            <para> The target group pair information. This is an array of <code>TargeGroupPairInfo</code>
            objects with a maximum size of one. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.OnSuccessBlueInstanceTerminationWaitTime">
            <summary>
            <para>
            <para>For an Amazon EC2 deployment, the number of minutes to wait after a successful blue/green
            deployment before terminating instances from the original environment.</para><para> For an Amazon ECS deployment, the number of minutes before deleting the original
            (blue) task set. During an Amazon ECS deployment, CodeDeploy shifts traffic from the
            original (blue) task set to a replacement (green) task set. </para><para> The maximum setting is 2880 minutes (2 days). </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.TriggerConfiguration">
            <summary>
            <para>
            <para>Information about triggers to create when the deployment group is created. For examples,
            see <a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-notify-sns.html">Create
            a Trigger for an AWS CodeDeploy Event</a> in the <i>AWS CodeDeploy User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.DeploymentReadyOptionWaitTime">
            <summary>
            <para>
            <para>The number of minutes to wait before the status of a blue/green deployment is changed
            to Stopped if rerouting is not started manually. Applies only to the <code>STOP_DEPLOYMENT</code>
            option for <code>actionOnTimeout</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DeploymentGroupId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.CreateDeploymentGroupResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.CreateDeploymentGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApplicationName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApplicationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.NewCDDeploymentGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.RegisterCDApplicationRevisionCmdlet">
            <summary>
            Registers with AWS CodeDeploy a revision for the specified application.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDApplicationRevisionCmdlet.ApplicationName">
            <summary>
            <para>
            <para>The name of an AWS CodeDeploy application associated with the IAM user or AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDApplicationRevisionCmdlet.S3Location_Bucket">
            <summary>
            <para>
            <para>The name of the Amazon S3 bucket where the application revision is stored.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDApplicationRevisionCmdlet.S3Location_BundleType">
            <summary>
            <para>
            <para>The file type of the application revision. Must be one of the following:</para><ul><li><para><code>tar</code>: A tar archive file.</para></li><li><para><code>tgz</code>: A compressed tar archive file.</para></li><li><para><code>zip</code>: A zip archive file.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDApplicationRevisionCmdlet.GitHubLocation_CommitId">
            <summary>
            <para>
            <para>The SHA1 commit ID of the GitHub commit that represents the bundled artifacts for
            the application revision.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDApplicationRevisionCmdlet.AppSpecContent_Content">
            <summary>
            <para>
            <para> The YAML-formatted or JSON-formatted revision string. </para><para> For an AWS Lambda deployment, the content includes a Lambda function name, the alias
            for its original version, and the alias for its replacement version. The deployment
            shifts traffic from the original version of the Lambda function to the replacement
            version. </para><para> For an Amazon ECS deployment, the content includes the task name, information about
            the load balancer that serves traffic to the container, and more. </para><para> For both types of deployments, the content can specify Lambda functions that run
            at specified hooks, such as <code>BeforeInstall</code>, during a deployment. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDApplicationRevisionCmdlet.String_Content">
            <summary>
            <para>
            <para>The YAML-formatted or JSON-formatted revision string. It includes information about
            which Lambda function to update and optional Lambda functions that validate deployment
            lifecycle events.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDApplicationRevisionCmdlet.Description">
            <summary>
            <para>
            <para>A comment about the revision.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDApplicationRevisionCmdlet.S3Location_ETag">
            <summary>
            <para>
            <para>The ETag of the Amazon S3 object that represents the bundled artifacts for the application
            revision.</para><para>If the ETag is not specified as an input parameter, ETag validation of the object
            is skipped.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDApplicationRevisionCmdlet.S3Location_Key">
            <summary>
            <para>
            <para>The name of the Amazon S3 object that represents the bundled artifacts for the application
            revision.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDApplicationRevisionCmdlet.GitHubLocation_Repository">
            <summary>
            <para>
            <para>The GitHub account and repository pair that stores a reference to the commit that
            represents the bundled artifacts for the application revision. </para><para>Specified as account/repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDApplicationRevisionCmdlet.Revision_RevisionType">
            <summary>
            <para>
            <para>The type of application revision:</para><ul><li><para>S3: An application revision stored in Amazon S3.</para></li><li><para>GitHub: An application revision stored in GitHub (EC2/On-premises deployments only).</para></li><li><para>String: A YAML-formatted or JSON-formatted string (AWS Lambda deployments only).</para></li><li><para>AppSpecContent: An <code>AppSpecContent</code> object that contains the contents of
            an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted
            as JSON or YAML stored as a RawString.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDApplicationRevisionCmdlet.AppSpecContent_Sha256">
            <summary>
            <para>
            <para> The SHA256 hash value of the revision content. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDApplicationRevisionCmdlet.String_Sha256">
            <summary>
            <para>
            <para>The SHA256 hash value of the revision content.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDApplicationRevisionCmdlet.S3Location_Version">
            <summary>
            <para>
            <para>A specific version of the Amazon S3 object that represents the bundled artifacts for
            the application revision.</para><para>If the version is not specified, the system uses the most recent version by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDApplicationRevisionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.RegisterApplicationRevisionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDApplicationRevisionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApplicationName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApplicationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDApplicationRevisionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.RegisterCDOnPremiseInstanceCmdlet">
            <summary>
            Registers an on-premises instance.
            
             <note><para>
            Only one IAM ARN (an IAM session ARN or IAM user ARN) is supported in the request.
            You cannot use both.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDOnPremiseInstanceCmdlet.IamSessionArn">
            <summary>
            <para>
            <para>The ARN of the IAM session to associate with the on-premises instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDOnPremiseInstanceCmdlet.IamUserArn">
            <summary>
            <para>
            <para>The ARN of the IAM user to associate with the on-premises instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDOnPremiseInstanceCmdlet.InstanceName">
            <summary>
            <para>
            <para>The name of the on-premises instance to register.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDOnPremiseInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.RegisterOnPremisesInstanceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDOnPremiseInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RegisterCDOnPremiseInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.RemoveCDApplicationCmdlet">
            <summary>
            Deletes an application.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDApplicationCmdlet.ApplicationName">
            <summary>
            <para>
            <para>The name of an AWS CodeDeploy application associated with the IAM user or AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDApplicationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.DeleteApplicationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDApplicationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApplicationName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApplicationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDApplicationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.RemoveCDDeploymentConfigCmdlet">
            <summary>
            Deletes a deployment configuration.
            
             <note><para>
            A deployment configuration cannot be deleted if it is currently in use. Predefined
            configurations cannot be deleted.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDDeploymentConfigCmdlet.DeploymentConfigName">
            <summary>
            <para>
            <para>The name of a deployment configuration associated with the IAM user or AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDDeploymentConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.DeleteDeploymentConfigResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDDeploymentConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeploymentConfigName parameter.
            The -PassThru parameter is deprecated, use -Select '^DeploymentConfigName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDDeploymentConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.RemoveCDDeploymentGroupCmdlet">
            <summary>
            Deletes a deployment group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDDeploymentGroupCmdlet.ApplicationName">
            <summary>
            <para>
            <para>The name of an AWS CodeDeploy application associated with the IAM user or AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDDeploymentGroupCmdlet.DeploymentGroupName">
            <summary>
            <para>
            <para>The name of a deployment group for the specified application.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDDeploymentGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HooksNotCleanedUp'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.DeleteDeploymentGroupResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.DeleteDeploymentGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDDeploymentGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApplicationName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApplicationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDDeploymentGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.RemoveCDGitHubAccountTokenCmdlet">
            <summary>
            Deletes a GitHub account connection.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDGitHubAccountTokenCmdlet.TokenName">
            <summary>
            <para>
            <para>The name of the GitHub account connection to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDGitHubAccountTokenCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TokenName'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.DeleteGitHubAccountTokenResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.DeleteGitHubAccountTokenResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDGitHubAccountTokenCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TokenName parameter.
            The -PassThru parameter is deprecated, use -Select '^TokenName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDGitHubAccountTokenCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.RemoveCDOnPremiseInstanceTagCmdlet">
            <summary>
            Removes one or more tags from one or more on-premises instances.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDOnPremiseInstanceTagCmdlet.InstanceName">
            <summary>
            <para>
            <para>The names of the on-premises instances from which to remove tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDOnPremiseInstanceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tag key-value pairs to remove from the on-premises instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDOnPremiseInstanceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.RemoveTagsFromOnPremisesInstancesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDOnPremiseInstanceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDOnPremiseInstanceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.RemoveCDResourcesByExternalIdCmdlet">
            <summary>
            Deletes resources linked to an external ID.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDResourcesByExternalIdCmdlet.ExternalId">
            <summary>
            <para>
            <para>The unique ID of an external resource (for example, a CloudFormation stack ID) that
            is linked to one or more CodeDeploy resources.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDResourcesByExternalIdCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.DeleteResourcesByExternalIdResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDResourcesByExternalIdCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExternalId parameter.
            The -PassThru parameter is deprecated, use -Select '^ExternalId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDResourcesByExternalIdCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.RemoveCDResourceTagCmdlet">
            <summary>
            Disassociates a resource from a list of tags. The resource is identified by the <code>ResourceArn</code>
            input parameter. The tags are identified by the list of keys in the <code>TagKeys</code>
            input parameter.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para> The Amazon Resource Name (ARN) that specifies from which resource to disassociate
            the tags with the keys in the <code>TagKeys</code> input parameter. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para> A list of keys of <code>Tag</code> objects. The <code>Tag</code> objects identified
            by the keys are disassociated from the resource specified by the <code>ResourceArn</code>
            input parameter. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.RemoveCDResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.ResumeCDDeploymentCmdlet">
            <summary>
            For a blue/green deployment, starts the process of rerouting traffic from instances
            in the original environment to instances in the replacement environment without waiting
            for a specified wait time to elapse. (Traffic rerouting, which is achieved by registering
            instances in the replacement environment with the load balancer, can start as soon
            as all instances have a status of Ready.)
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.ResumeCDDeploymentCmdlet.DeploymentId">
            <summary>
            <para>
            <para> The unique ID of a blue/green deployment for which you want to start rerouting traffic
            to the replacement environment. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.ResumeCDDeploymentCmdlet.DeploymentWaitType">
            <summary>
            <para>
            <para> The status of the deployment's waiting period. <code>READY_WAIT</code> indicates
            that the deployment is ready to start shifting traffic. <code>TERMINATION_WAIT</code>
            indicates that the traffic is shifted, but the original target is not terminated.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.ResumeCDDeploymentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.ContinueDeploymentResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.ResumeCDDeploymentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeploymentId parameter.
            The -PassThru parameter is deprecated, use -Select '^DeploymentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.ResumeCDDeploymentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.SkipCDWaitTimeForInstanceTerminationCmdlet">
            <summary>
            In a blue/green deployment, overrides any specified wait time and starts terminating
            instances immediately after the traffic routing is complete.<br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.SkipCDWaitTimeForInstanceTerminationCmdlet.DeploymentId">
            <summary>
            <para>
            <para> The unique ID of a blue/green deployment for which you want to skip the instance
            termination wait time. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.SkipCDWaitTimeForInstanceTerminationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.SkipWaitTimeForInstanceTerminationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.SkipCDWaitTimeForInstanceTerminationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeploymentId parameter.
            The -PassThru parameter is deprecated, use -Select '^DeploymentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.SkipCDWaitTimeForInstanceTerminationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.StopCDDeploymentCmdlet">
            <summary>
            Attempts to stop an ongoing deployment.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.StopCDDeploymentCmdlet.AutoRollbackEnabled">
            <summary>
            <para>
            <para> Indicates, when a deployment is stopped, whether instances that have been updated
            should be rolled back to the previous version of the application revision. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.StopCDDeploymentCmdlet.DeploymentId">
            <summary>
            <para>
            <para> The unique ID of a deployment. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.StopCDDeploymentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.StopDeploymentResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.StopDeploymentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.StopCDDeploymentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeploymentId parameter.
            The -PassThru parameter is deprecated, use -Select '^DeploymentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.StopCDDeploymentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.UnregisterCDOnPremiseInstanceCmdlet">
            <summary>
            Deregisters an on-premises instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UnregisterCDOnPremiseInstanceCmdlet.InstanceName">
            <summary>
            <para>
            <para>The name of the on-premises instance to deregister.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UnregisterCDOnPremiseInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.DeregisterOnPremisesInstanceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UnregisterCDOnPremiseInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceName parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UnregisterCDOnPremiseInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.UpdateCDApplicationCmdlet">
            <summary>
            Changes the name of an application.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDApplicationCmdlet.ApplicationName">
            <summary>
            <para>
            <para>The current name of the application you want to change.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDApplicationCmdlet.NewApplicationName">
            <summary>
            <para>
            <para>The new name to give the application.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDApplicationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.UpdateApplicationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDApplicationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApplicationName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApplicationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDApplicationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet">
            <summary>
            Changes information about a deployment group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.GreenFleetProvisioningOptionAction">
            <summary>
            <para>
            <para>The method used to add instances to a replacement environment.</para><ul><li><para><code>DISCOVER_EXISTING</code>: Use instances that already exist or will be created
            manually.</para></li><li><para><code>COPY_AUTO_SCALING_GROUP</code>: Use settings from a specified Auto Scaling
            group to define and create instances in a new Auto Scaling group.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.OnSuccessBlueInstanceTerminationAction">
            <summary>
            <para>
            <para>The action to take on instances in the original environment after a successful blue/green
            deployment.</para><ul><li><para><code>TERMINATE</code>: Instances are terminated after a specified wait time.</para></li><li><para><code>KEEP_ALIVE</code>: Instances are left running after they are deregistered from
            the load balancer and removed from the deployment group.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.DeploymentReadyOptionTimeoutAction">
            <summary>
            <para>
            <para>Information about when to reroute traffic from an original environment to a replacement
            environment in a blue/green deployment.</para><ul><li><para>CONTINUE_DEPLOYMENT: Register new instances with the load balancer immediately after
            the new application revision is installed on the instances in the replacement environment.</para></li><li><para>STOP_DEPLOYMENT: Do not register new instances with a load balancer unless traffic
            rerouting is started using <a>ContinueDeployment</a>. If traffic rerouting is not
            started before the end of the specified wait period, the deployment status is changed
            to Stopped.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.AlarmConfiguration_Alarm">
            <summary>
            <para>
            <para>A list of alarms configured for the deployment group. A maximum of 10 alarms can be
            added to a deployment group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.ApplicationName">
            <summary>
            <para>
            <para>The application name that corresponds to the deployment group to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.AutoScalingGroup">
            <summary>
            <para>
            <para>The replacement list of Auto Scaling groups to be included in the deployment group,
            if you want to change them. To keep the Auto Scaling groups, enter their names. To
            remove Auto Scaling groups, do not enter any Auto Scaling group names.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.CurrentDeploymentGroupName">
            <summary>
            <para>
            <para>The current name of the deployment group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.DeploymentConfigName">
            <summary>
            <para>
            <para>The replacement deployment configuration name to use, if you want to change it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.DeploymentStyleOption">
            <summary>
            <para>
            <para>Indicates whether to route deployment traffic behind a load balancer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.DeploymentStyleType">
            <summary>
            <para>
            <para>Indicates whether to run an in-place deployment or a blue/green deployment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.Ec2TagFilter">
            <summary>
            <para>
            <para>The replacement set of Amazon EC2 tags on which to filter, if you want to change them.
            To keep the existing tags, enter their names. To remove tags, do not enter any tag
            names.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.Ec2TagSetList">
            <summary>
            <para>
            <para>A list that contains other lists of EC2 instance tag groups. For an instance to be
            included in the deployment group, it must be identified by all of the tag groups in
            the list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.EcsService">
            <summary>
            <para>
            <para> The target Amazon ECS services in the deployment group. This applies only to deployment
            groups that use the Amazon ECS compute platform. A target Amazon ECS service is specified
            as an Amazon ECS cluster and service name pair using the format <code>&lt;clustername&gt;:&lt;servicename&gt;</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.LoadBalancerInfoList">
            <summary>
            <para>
            <para>An array that contains information about the load balancer to use for load balancing
            in a deployment. In Elastic Load Balancing, load balancers are used with Classic Load
            Balancers.</para><note><para> Adding more than one load balancer to the array is not supported. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.AlarmConfiguration_Enabled">
            <summary>
            <para>
            <para>Indicates whether the alarm configuration is enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.AutoRollbackConfiguration_Enabled">
            <summary>
            <para>
            <para>Indicates whether a defined automatic rollback configuration is currently enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.AutoRollbackConfiguration_Event">
            <summary>
            <para>
            <para>The event type or types that trigger a rollback.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.AlarmConfiguration_IgnorePollAlarmFailure">
            <summary>
            <para>
            <para>Indicates whether a deployment should continue if information about the current state
            of alarms cannot be retrieved from Amazon CloudWatch. The default value is false.</para><ul><li><para><code>true</code>: The deployment proceeds even if alarm status information can't
            be retrieved from Amazon CloudWatch.</para></li><li><para><code>false</code>: The deployment stops if alarm status information can't be retrieved
            from Amazon CloudWatch.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.NewDeploymentGroupName">
            <summary>
            <para>
            <para>The new name of the deployment group, if you want to change it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.OnPremisesInstanceTagFilter">
            <summary>
            <para>
            <para>The replacement set of on-premises instance tags on which to filter, if you want to
            change them. To keep the existing tags, enter their names. To remove tags, do not
            enter any tag names.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.OnPremisesTagSetList">
            <summary>
            <para>
            <para>A list that contains other lists of on-premises instance tag groups. For an instance
            to be included in the deployment group, it must be identified by all of the tag groups
            in the list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.ServiceRoleArn">
            <summary>
            <para>
            <para>A replacement ARN for the service role, if you want to change it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.LoadBalancerInfo_TargetGroupInfoList">
            <summary>
            <para>
            <para>An array that contains information about the target group to use for load balancing
            in a deployment. In Elastic Load Balancing, target groups are used with Application
            Load Balancers.</para><note><para> Adding more than one target group to the array is not supported. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.LoadBalancerInfo_TargetGroupPairInfoList">
            <summary>
            <para>
            <para> The target group pair information. This is an array of <code>TargeGroupPairInfo</code>
            objects with a maximum size of one. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.OnSuccessBlueInstanceTerminationWaitTime">
            <summary>
            <para>
            <para>For an Amazon EC2 deployment, the number of minutes to wait after a successful blue/green
            deployment before terminating instances from the original environment.</para><para> For an Amazon ECS deployment, the number of minutes before deleting the original
            (blue) task set. During an Amazon ECS deployment, CodeDeploy shifts traffic from the
            original (blue) task set to a replacement (green) task set. </para><para> The maximum setting is 2880 minutes (2 days). </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.TriggerConfiguration">
            <summary>
            <para>
            <para>Information about triggers to change when the deployment group is updated. For examples,
            see <a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-notify-edit.html">Edit
            a Trigger in a CodeDeploy Deployment Group</a> in the <i>AWS CodeDeploy User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.DeploymentReadyOptionWaitTime">
            <summary>
            <para>
            <para>The number of minutes to wait before the status of a blue/green deployment is changed
            to Stopped if rerouting is not started manually. Applies only to the <code>STOP_DEPLOYMENT</code>
            option for <code>actionOnTimeout</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HooksNotCleanedUp'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.UpdateDeploymentGroupResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.UpdateDeploymentGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApplicationName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApplicationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.UpdateCDDeploymentGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CD.WriteCDLifecycleEventHookExecutionStatusCmdlet">
            <summary>
            Sets the result of a Lambda validation function. The function validates lifecycle
            hooks during a deployment that uses the AWS Lambda or Amazon ECS compute platform.
            For AWS Lambda deployments, the available lifecycle hooks are <code>BeforeAllowTraffic</code>
            and <code>AfterAllowTraffic</code>. For Amazon ECS deployments, the available lifecycle
            hooks are <code>BeforeInstall</code>, <code>AfterInstall</code>, <code>AfterAllowTestTraffic</code>,
            <code>BeforeAllowTraffic</code>, and <code>AfterAllowTraffic</code>. Lambda validation
            functions return <code>Succeeded</code> or <code>Failed</code>. For more information,
            see <a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html#appspec-hooks-lambda">AppSpec
            'hooks' Section for an AWS Lambda Deployment </a> and <a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html#appspec-hooks-ecs">AppSpec
            'hooks' Section for an Amazon ECS Deployment</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.WriteCDLifecycleEventHookExecutionStatusCmdlet.DeploymentId">
            <summary>
            <para>
            <para> The unique ID of a deployment. Pass this ID to a Lambda function that validates a
            deployment lifecycle event. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.WriteCDLifecycleEventHookExecutionStatusCmdlet.LifecycleEventHookExecutionId">
            <summary>
            <para>
            <para> The execution ID of a deployment's lifecycle hook. A deployment lifecycle hook is
            specified in the <code>hooks</code> section of the AppSpec file. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.WriteCDLifecycleEventHookExecutionStatusCmdlet.Status">
            <summary>
            <para>
            <para>The result of a Lambda function that validates a deployment lifecycle event (<code>Succeeded</code>
            or <code>Failed</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.WriteCDLifecycleEventHookExecutionStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LifecycleEventHookExecutionId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeDeploy.Model.PutLifecycleEventHookExecutionStatusResponse).
            Specifying the name of a property of type Amazon.CodeDeploy.Model.PutLifecycleEventHookExecutionStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.WriteCDLifecycleEventHookExecutionStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LifecycleEventHookExecutionId parameter.
            The -PassThru parameter is deprecated, use -Select '^LifecycleEventHookExecutionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CD.WriteCDLifecycleEventHookExecutionStatusCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
