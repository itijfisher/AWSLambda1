<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.GameLift</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.AddGMLResourceTagCmdlet">
            <summary>
            Assigns a tag to a GameLift resource. AWS resource tags provide an additional management
            tool set. You can use tags to organize resources, create IAM permissions policies
            to manage access to groups of resources, customize AWS cost breakdowns, etc. This
            action handles the permissions necessary to manage tags for the following GameLift
            resource types:
            
             <ul><li><para>
            Build
            </para></li><li><para>
            Script
            </para></li><li><para>
            Fleet
            </para></li><li><para>
            Alias
            </para></li><li><para>
            GameSessionQueue
            </para></li><li><para>
            MatchmakingConfiguration
            </para></li><li><para>
            MatchmakingRuleSet
            </para></li></ul><para>
            To add a tag to a resource, specify the unique ARN value for the resource and provide
            a tag list containing one or more tags. The operation succeeds even if the list includes
            tags that are already assigned to the specified resource. 
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            AWS Resources</a> in the <i>AWS General Reference</i></para><para><a href="http://aws.amazon.com/answers/account-management/aws-tagging-strategies/">
            AWS Tagging Strategies</a></para><para><b>Related operations</b></para><ul><li><para><a>TagResource</a></para></li><li><para><a>UntagResource</a></para></li><li><para><a>ListTagsForResource</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.AddGMLResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para> The Amazon Resource Name (<a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html">ARN</a>)
            that is assigned to and uniquely identifies the GameLift resource that you want to
            assign tags to. GameLift resource ARNs are included in the data object for the resource,
            which can be retrieved by calling a List or Describe action for the resource type.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.AddGMLResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>A list of one or more tags to assign to the specified GameLift resource. Tags are
            developer-defined and structured as key-value pairs. The maximum tag limit may be
            lower than stated. See <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">
            Tagging AWS Resources</a> for actual tagging limits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.AddGMLResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.AddGMLResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.AddGMLResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.ConfirmGMLMatchCmdlet">
            <summary>
            Registers a player's acceptance or rejection of a proposed FlexMatch match. A matchmaking
            configuration may require player acceptance; if so, then matches built with that configuration
            cannot be completed unless all players accept the proposed match within a specified
            time limit. 
            
             
            <para>
            When FlexMatch builds a match, all the matchmaking tickets involved in the proposed
            match are placed into status <code>REQUIRES_ACCEPTANCE</code>. This is a trigger for
            your game to get acceptance from all players in the ticket. Acceptances are only valid
            for tickets when they are in this status; all other acceptances result in an error.
            </para><para>
            To register acceptance, specify the ticket ID, a response, and one or more players.
            Once all players have registered acceptance, the matchmaking tickets advance to status
            <code>PLACING</code>, where a new game session is created for the match. 
            </para><para>
            If any player rejects the match, or if acceptances are not received before a specified
            timeout, the proposed match is dropped. The matchmaking tickets are then handled in
            one of two ways: For tickets where one or more players rejected the match, the ticket
            status is returned to <code>SEARCHING</code> to find a new match. For tickets where
            one or more players failed to respond, the ticket status is set to <code>CANCELLED</code>,
            and processing is terminated. A new matchmaking request for these players can be submitted
            as needed. 
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-client.html">
            Add FlexMatch to a Game Client</a></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-events.html">
            FlexMatch Events Reference</a></para><para><b>Related operations</b></para><ul><li><para><a>StartMatchmaking</a></para></li><li><para><a>DescribeMatchmaking</a></para></li><li><para><a>StopMatchmaking</a></para></li><li><para><a>AcceptMatch</a></para></li><li><para><a>StartMatchBackfill</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.ConfirmGMLMatchCmdlet.AcceptanceType">
            <summary>
            <para>
            <para>Player response to the proposed match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.ConfirmGMLMatchCmdlet.PlayerId">
            <summary>
            <para>
            <para>A unique identifier for a player delivering the response. This parameter can include
            one or multiple player IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.ConfirmGMLMatchCmdlet.TicketId">
            <summary>
            <para>
            <para>A unique identifier for a matchmaking ticket. The ticket must be in status <code>REQUIRES_ACCEPTANCE</code>;
            otherwise this request will fail.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.ConfirmGMLMatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.AcceptMatchResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.ConfirmGMLMatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TicketId parameter.
            The -PassThru parameter is deprecated, use -Select '^TicketId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.ConfirmGMLMatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.FindGMLGameSessionCmdlet">
            <summary>
            Retrieves all active game sessions that match a set of search criteria and sorts them
            in a specified order. You can search or sort by the following game session attributes:
            
             <ul><li><para><b>gameSessionId</b> -- A unique identifier for the game session. You can use either
            a <code>GameSessionId</code> or <code>GameSessionArn</code> value. 
            </para></li><li><para><b>gameSessionName</b> -- Name assigned to a game session. This value is set when
            requesting a new game session with <a>CreateGameSession</a> or updating with <a>UpdateGameSession</a>.
            Game session names do not need to be unique to a game session.
            </para></li><li><para><b>gameSessionProperties</b> -- Custom data defined in a game session's <code>GameProperty</code>
            parameter. <code>GameProperty</code> values are stored as key:value pairs; the filter
            expression must indicate the key and a string to search the data values for. For example,
            to search for game sessions with custom data containing the key:value pair "gameMode:brawl",
            specify the following: <code>gameSessionProperties.gameMode = "brawl"</code>. All
            custom data values are searched as strings.
            </para></li><li><para><b>maximumSessions</b> -- Maximum number of player sessions allowed for a game session.
            This value is set when requesting a new game session with <a>CreateGameSession</a>
            or updating with <a>UpdateGameSession</a>.
            </para></li><li><para><b>creationTimeMillis</b> -- Value indicating when a game session was created. It
            is expressed in Unix time as milliseconds.
            </para></li><li><para><b>playerSessionCount</b> -- Number of players currently connected to a game session.
            This value changes rapidly as players join the session or drop out.
            </para></li><li><para><b>hasAvailablePlayerSessions</b> -- Boolean value indicating whether a game session
            has reached its maximum number of players. It is highly recommended that all search
            requests include this filter attribute to optimize search performance and return only
            sessions that players can join. 
            </para></li></ul><note><para>
            Returned values for <code>playerSessionCount</code> and <code>hasAvailablePlayerSessions</code>
            change quickly as players join sessions and others drop out. Results should be considered
            a snapshot in time. Be sure to refresh search results often, and handle sessions that
            fill up before a player can join. 
            </para></note><para>
            To search or sort, specify either a fleet ID or an alias ID, and provide a search
            filter expression, a sort expression, or both. If successful, a collection of <a>GameSession</a>
            objects matching the request is returned. Use the pagination parameters to retrieve
            results as a set of sequential pages. 
            </para><para>
            You can search for game sessions one fleet at a time only. To find game sessions across
            multiple fleets, you must search each fleet separately and combine the results. This
            search feature finds only game sessions that are in <code>ACTIVE</code> status. To
            locate games in statuses other than active, use <a>DescribeGameSessionDetails</a>.
            </para><ul><li><para><a>CreateGameSession</a></para></li><li><para><a>DescribeGameSessions</a></para></li><li><para><a>DescribeGameSessionDetails</a></para></li><li><para><a>SearchGameSessions</a></para></li><li><para><a>UpdateGameSession</a></para></li><li><para><a>GetGameSessionLogUrl</a></para></li><li><para>
            Game session placements
            </para><ul><li><para><a>StartGameSessionPlacement</a></para></li><li><para><a>DescribeGameSessionPlacement</a></para></li><li><para><a>StopGameSessionPlacement</a></para></li></ul></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.FindGMLGameSessionCmdlet.AliasId">
            <summary>
            <para>
            <para>A unique identifier for an alias associated with the fleet to search for active game
            sessions. You can use either the alias ID or ARN value. Each request must reference
            either a fleet ID or alias ID, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.FindGMLGameSessionCmdlet.FilterExpression">
            <summary>
            <para>
            <para>String containing the search criteria for the session search. If no filter expression
            is included, the request returns results for all game sessions in the fleet that are
            in <code>ACTIVE</code> status.</para><para>A filter expression can contain one or multiple conditions. Each condition consists
            of the following:</para><ul><li><para><b>Operand</b> -- Name of a game session attribute. Valid values are <code>gameSessionName</code>,
            <code>gameSessionId</code>, <code>gameSessionProperties</code>, <code>maximumSessions</code>,
            <code>creationTimeMillis</code>, <code>playerSessionCount</code>, <code>hasAvailablePlayerSessions</code>.</para></li><li><para><b>Comparator</b> -- Valid comparators are: <code>=</code>, <code>&lt;&gt;</code>,
            <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code>. </para></li><li><para><b>Value</b> -- Value to be searched for. Values may be numbers, boolean values (true/false)
            or strings depending on the operand. String values are case sensitive and must be
            enclosed in single quotes. Special characters must be escaped. Boolean and string
            values can only be used with the comparators <code>=</code> and <code>&lt;&gt;</code>.
            For example, the following filter expression searches on <code>gameSessionName</code>:
            "<code>FilterExpression": "gameSessionName = 'Matt\\'s Awesome Game 1'"</code>. </para></li></ul><para>To chain multiple conditions in a single expression, use the logical keywords <code>AND</code>,
            <code>OR</code>, and <code>NOT</code> and parentheses as needed. For example: <code>x
            AND y AND NOT z</code>, <code>NOT (x OR y)</code>.</para><para>Session search evaluates conditions from left to right using the following precedence
            rules:</para><ol><li><para><code>=</code>, <code>&lt;&gt;</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>,
            <code>&gt;=</code></para></li><li><para>Parentheses</para></li><li><para>NOT</para></li><li><para>AND</para></li><li><para>OR</para></li></ol><para>For example, this filter expression retrieves game sessions hosting at least ten players
            that have an open player slot: <code>"maximumSessions&gt;=10 AND hasAvailablePlayerSessions=true"</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.FindGMLGameSessionCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet to search for active game sessions. You can use either
            the fleet ID or ARN value. Each request must reference either a fleet ID or alias
            ID, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.FindGMLGameSessionCmdlet.SortExpression">
            <summary>
            <para>
            <para>Instructions on how to sort the search results. If no sort expression is included,
            the request returns results in random order. A sort expression consists of the following
            elements:</para><ul><li><para><b>Operand</b> -- Name of a game session attribute. Valid values are <code>gameSessionName</code>,
            <code>gameSessionId</code>, <code>gameSessionProperties</code>, <code>maximumSessions</code>,
            <code>creationTimeMillis</code>, <code>playerSessionCount</code>, <code>hasAvailablePlayerSessions</code>.</para></li><li><para><b>Order</b> -- Valid sort orders are <code>ASC</code> (ascending) and <code>DESC</code>
            (descending).</para></li></ul><para>For example, this sort expression returns the oldest active sessions first: <code>"SortExpression":
            "creationTimeMillis ASC"</code>. Results with a null value for the sort operand are
            returned at the end of the list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.FindGMLGameSessionCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return. Use this parameter with <code>NextToken</code>
            to get results as a set of sequential pages. The maximum number of results returned
            is 20, even if this value is not set or is set higher than 20. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.FindGMLGameSessionCmdlet.NextToken">
            <summary>
            <para>
            <para>Token that indicates the start of the next sequential page of results. Use the token
            that is returned with a previous call to this action. To start at the beginning of
            the result set, do not specify a value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.FindGMLGameSessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameSessions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.SearchGameSessionsResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.SearchGameSessionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.FindGMLGameSessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.FindGMLGameSessionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLAliasCmdlet">
            <summary>
            Retrieves all aliases for this AWS account. You can filter the result set by alias
            name and/or routing strategy type. Use the pagination parameters to retrieve results
            in sequential pages.
            
             <note><para>
            Returned aliases are not listed in any particular order.
            </para></note><ul><li><para><a>CreateAlias</a></para></li><li><para><a>ListAliases</a></para></li><li><para><a>DescribeAlias</a></para></li><li><para><a>UpdateAlias</a></para></li><li><para><a>DeleteAlias</a></para></li><li><para><a>ResolveAlias</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLAliasCmdlet.Name">
            <summary>
            <para>
            <para>A descriptive label that is associated with an alias. Alias names do not need to be
            unique.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLAliasCmdlet.RoutingStrategyType">
            <summary>
            <para>
            <para>The routing type to filter results on. Use this parameter to retrieve only aliases
            with a certain routing type. To retrieve all aliases, leave this parameter empty.</para><para>Possible routing types include the following:</para><ul><li><para><b>SIMPLE</b> -- The alias resolves to one specific fleet. Use this type when routing
            to active fleets.</para></li><li><para><b>TERMINAL</b> -- The alias does not resolve to a fleet but instead can be used
            to display a message to the user. A terminal alias throws a TerminalRoutingStrategyException
            with the <a>RoutingStrategy</a> message embedded.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLAliasCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return. Use this parameter with <code>NextToken</code>
            to get results as a set of sequential pages.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLAliasCmdlet.NextToken">
            <summary>
            <para>
            <para>A token that indicates the start of the next sequential page of results. Use the token
            that is returned with a previous call to this action. To start at the beginning of
            the result set, do not specify a value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Aliases'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.ListAliasesResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.ListAliasesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLAliasCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLAliasDetailCmdlet">
            <summary>
            Retrieves properties for an alias. This operation returns all alias metadata and settings.
            To get an alias's target fleet ID only, use <code>ResolveAlias</code>. 
            
             
            <para>
            To get alias properties, specify the alias ID. If successful, the requested alias
            record is returned.
            </para><ul><li><para><a>CreateAlias</a></para></li><li><para><a>ListAliases</a></para></li><li><para><a>DescribeAlias</a></para></li><li><para><a>UpdateAlias</a></para></li><li><para><a>DeleteAlias</a></para></li><li><para><a>ResolveAlias</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLAliasDetailCmdlet.AliasId">
            <summary>
            <para>
            <para>The unique identifier for the fleet alias that you want to retrieve. You can use either
            the alias ID or ARN value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLAliasDetailCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Alias'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeAliasResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLAliasDetailCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AliasId parameter.
            The -PassThru parameter is deprecated, use -Select '^AliasId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLBuildCmdlet">
            <summary>
            Retrieves build resources for all builds associated with the AWS account in use. You
            can limit results to builds that are in a specific status by using the <code>Status</code>
            parameter. Use the pagination parameters to retrieve results in a set of sequential
            pages. 
            
             <note><para>
            Build resources are not listed in any particular order.
            </para></note><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-build-intro.html">
            Upload a Custom Server Build</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateBuild</a></para></li><li><para><a>ListBuilds</a></para></li><li><para><a>DescribeBuild</a></para></li><li><para><a>UpdateBuild</a></para></li><li><para><a>DeleteBuild</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLBuildCmdlet.Status">
            <summary>
            <para>
            <para>Build status to filter results by. To retrieve all builds, leave this parameter empty.</para><para>Possible build statuses include the following:</para><ul><li><para><b>INITIALIZED</b> -- A new build has been defined, but no files have been uploaded.
            You cannot create fleets for builds that are in this status. When a build is successfully
            created, the build status is set to this value. </para></li><li><para><b>READY</b> -- The game build has been successfully uploaded. You can now create
            new fleets for this build.</para></li><li><para><b>FAILED</b> -- The game build upload failed. You cannot create new fleets for this
            build. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLBuildCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return. Use this parameter with <code>NextToken</code>
            to get results as a set of sequential pages.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLBuildCmdlet.NextToken">
            <summary>
            <para>
            <para>Token that indicates the start of the next sequential page of results. Use the token
            that is returned with a previous call to this action. To start at the beginning of
            the result set, do not specify a value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLBuildCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Builds'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.ListBuildsResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.ListBuildsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLBuildCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Status parameter.
            The -PassThru parameter is deprecated, use -Select '^Status' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLBuildCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLBuildDetailCmdlet">
            <summary>
            Retrieves properties for a custom game build. To request a build resource, specify
            a build ID. If successful, an object containing the build properties is returned.
            
             
            <para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-build-intro.html">
            Upload a Custom Server Build</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateBuild</a></para></li><li><para><a>ListBuilds</a></para></li><li><para><a>DescribeBuild</a></para></li><li><para><a>UpdateBuild</a></para></li><li><para><a>DeleteBuild</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLBuildDetailCmdlet.BuildId">
            <summary>
            <para>
            <para>A unique identifier for a build to retrieve properties for. You can use either the
            build ID or ARN value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLBuildDetailCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Build'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeBuildResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeBuildResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLBuildDetailCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BuildId parameter.
            The -PassThru parameter is deprecated, use -Select '^BuildId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLEC2InstanceLimitCmdlet">
            <summary>
            Retrieves the following information for the specified EC2 instance type:
            
             <ul><li><para>
            Maximum number of instances allowed per AWS account (service limit).
            </para></li><li><para>
            Current usage for the AWS account.
            </para></li></ul><para>
            To learn more about the capabilities of each instance type, see <a href="http://aws.amazon.com/ec2/instance-types/">Amazon
            EC2 Instance Types</a>. Note that the instance types offered may vary depending on
            the region.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">Setting
            up GameLift Fleets</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateFleet</a></para></li><li><para><a>ListFleets</a></para></li><li><para><a>DeleteFleet</a></para></li><li><para><a>DescribeFleetAttributes</a></para></li><li><para><a>UpdateFleetAttributes</a></para></li><li><para><a>StartFleetActions</a> or <a>StopFleetActions</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLEC2InstanceLimitCmdlet.EC2InstanceType">
            <summary>
            <para>
            <para>Name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance
            type determines the computing resources of each instance in the fleet, including CPU,
            memory, storage, and networking capacity. Amazon GameLift supports the following EC2
            instance types. See <a href="http://aws.amazon.com/ec2/instance-types/">Amazon EC2
            Instance Types</a> for detailed descriptions. Leave this parameter blank to retrieve
            limits for all types.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLEC2InstanceLimitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EC2InstanceLimits'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeEC2InstanceLimitsResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeEC2InstanceLimitsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLEC2InstanceLimitCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EC2InstanceType parameter.
            The -PassThru parameter is deprecated, use -Select '^EC2InstanceType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetCmdlet">
            <summary>
            Retrieves a collection of fleet resources for this AWS account. You can filter the
            result set to find only those fleets that are deployed with a specific build or script.
            Use the pagination parameters to retrieve results in sequential pages.
            
             <note><para>
            Fleet resources are not listed in a particular order.
            </para></note><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">Setting
            up GameLift Fleets</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateFleet</a></para></li><li><para><a>ListFleets</a></para></li><li><para><a>DeleteFleet</a></para></li><li><para><a>DescribeFleetAttributes</a></para></li><li><para><a>UpdateFleetAttributes</a></para></li><li><para><a>StartFleetActions</a> or <a>StopFleetActions</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetCmdlet.BuildId">
            <summary>
            <para>
            <para>A unique identifier for a build to return fleets for. Use this parameter to return
            only fleets using a specified build. Use either the build ID or ARN value. To retrieve
            all fleets, do not include either a BuildId and ScriptID parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetCmdlet.ScriptId">
            <summary>
            <para>
            <para>A unique identifier for a Realtime script to return fleets for. Use this parameter
            to return only fleets using a specified script. Use either the script ID or ARN value.
            To retrieve all fleets, leave this parameter empty.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return. Use this parameter with <code>NextToken</code>
            to get results as a set of sequential pages.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetCmdlet.NextToken">
            <summary>
            <para>
            <para>Token that indicates the start of the next sequential page of results. Use the token
            that is returned with a previous call to this action. To start at the beginning of
            the result set, do not specify a value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FleetIds'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.ListFleetsResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.ListFleetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BuildId parameter.
            The -PassThru parameter is deprecated, use -Select '^BuildId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetAttributeCmdlet">
            <summary>
            Retrieves core properties, including configuration, status, and metadata, for a fleet.
            
            
             
            <para>
            To get attributes for one or more fleets, provide a list of fleet IDs or fleet ARNs.
            To get attributes for all fleets, do not specify a fleet identifier. When requesting
            attributes for multiple fleets, use the pagination parameters to retrieve results
            as a set of sequential pages. If successful, a <a>FleetAttributes</a> object is returned
            for each fleet requested, unless the fleet identifier is not found.
            </para><note><para>
            Some API actions may limit the number of fleet IDs allowed in one request. If a request
            exceeds this limit, the request fails and the error message includes the maximum allowed
            number.
            </para></note><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">Setting
            up GameLift Fleets</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateFleet</a></para></li><li><para><a>ListFleets</a></para></li><li><para><a>DeleteFleet</a></para></li><li><para>
            Describe fleets:
            </para><ul><li><para><a>DescribeFleetAttributes</a></para></li><li><para><a>DescribeFleetCapacity</a></para></li><li><para><a>DescribeFleetPortSettings</a></para></li><li><para><a>DescribeFleetUtilization</a></para></li><li><para><a>DescribeRuntimeConfiguration</a></para></li><li><para><a>DescribeEC2InstanceLimits</a></para></li><li><para><a>DescribeFleetEvents</a></para></li></ul></li><li><para><a>UpdateFleetAttributes</a></para></li><li><para><a>StartFleetActions</a> or <a>StopFleetActions</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetAttributeCmdlet.FleetId">
            <summary>
            <para>
            <para>A list of unique fleet identifiers to retrieve attributes for. You can use either
            the fleet ID or ARN value. To retrieve attributes for all current fleets, do not include
            this parameter. If the list of fleet identifiers includes fleets that don't currently
            exist, the request succeeds but no attributes for that fleet are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetAttributeCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return. Use this parameter with <code>NextToken</code>
            to get results as a set of sequential pages. This parameter is ignored when the request
            specifies one or a list of fleet IDs.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetAttributeCmdlet.NextToken">
            <summary>
            <para>
            <para>Token that indicates the start of the next sequential page of results. Use the token
            that is returned with a previous call to this action. To start at the beginning of
            the result set, do not specify a value. This parameter is ignored when the request
            specifies one or a list of fleet IDs.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FleetAttributes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeFleetAttributesResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeFleetAttributesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetAttributeCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetCapacityCmdlet">
            <summary>
            Retrieves the current capacity statistics for one or more fleets. These statistics
            present a snapshot of the fleet's instances and provide insight on current or imminent
            scaling activity. To get statistics on game hosting activity in the fleet, see <a>DescribeFleetUtilization</a>.
            
             
            <para>
            You can request capacity for all fleets or specify a list of one or more fleet identifiers.
            When requesting multiple fleets, use the pagination parameters to retrieve results
            as a set of sequential pages. If successful, a <a>FleetCapacity</a> object is returned
            for each requested fleet ID. When a list of fleet IDs is provided, attribute objects
            are returned only for fleets that currently exist.
            </para><note><para>
            Some API actions may limit the number of fleet IDs allowed in one request. If a request
            exceeds this limit, the request fails and the error message includes the maximum allowed.
            </para></note><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">Setting
            up GameLift Fleets</a></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/monitoring-cloudwatch.html#gamelift-metrics-fleet">GameLift
            Metrics for Fleets</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateFleet</a></para></li><li><para><a>ListFleets</a></para></li><li><para><a>DeleteFleet</a></para></li><li><para>
            Describe fleets:
            </para><ul><li><para><a>DescribeFleetAttributes</a></para></li><li><para><a>DescribeFleetCapacity</a></para></li><li><para><a>DescribeFleetPortSettings</a></para></li><li><para><a>DescribeFleetUtilization</a></para></li><li><para><a>DescribeRuntimeConfiguration</a></para></li><li><para><a>DescribeEC2InstanceLimits</a></para></li><li><para><a>DescribeFleetEvents</a></para></li></ul></li><li><para><a>UpdateFleetAttributes</a></para></li><li><para><a>StartFleetActions</a> or <a>StopFleetActions</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetCapacityCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet(s) to retrieve capacity information for. You can use
            either the fleet ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetCapacityCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return. Use this parameter with <code>NextToken</code>
            to get results as a set of sequential pages. This parameter is ignored when the request
            specifies one or a list of fleet IDs.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetCapacityCmdlet.NextToken">
            <summary>
            <para>
            <para>Token that indicates the start of the next sequential page of results. Use the token
            that is returned with a previous call to this action. To start at the beginning of
            the result set, do not specify a value. This parameter is ignored when the request
            specifies one or a list of fleet IDs.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetCapacityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FleetCapacity'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeFleetCapacityResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeFleetCapacityResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetCapacityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetCapacityCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetEventCmdlet">
            <summary>
            Retrieves entries from the specified fleet's event log. You can specify a time range
            to limit the result set. Use the pagination parameters to retrieve results as a set
            of sequential pages. If successful, a collection of event log entries matching the
            request are returned.
            
             
            <para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">Setting
            up GameLift Fleets</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateFleet</a></para></li><li><para><a>ListFleets</a></para></li><li><para><a>DeleteFleet</a></para></li><li><para>
            Describe fleets:
            </para><ul><li><para><a>DescribeFleetAttributes</a></para></li><li><para><a>DescribeFleetCapacity</a></para></li><li><para><a>DescribeFleetPortSettings</a></para></li><li><para><a>DescribeFleetUtilization</a></para></li><li><para><a>DescribeRuntimeConfiguration</a></para></li><li><para><a>DescribeEC2InstanceLimits</a></para></li><li><para><a>DescribeFleetEvents</a></para></li></ul></li><li><para><a>UpdateFleetAttributes</a></para></li><li><para><a>StartFleetActions</a> or <a>StopFleetActions</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetEventCmdlet.EndTime">
            <summary>
            <para>
            <para>Most recent date to retrieve event logs for. If no end time is specified, this call
            returns entries from the specified start time up to the present. Format is a number
            expressed in Unix time as milliseconds (ex: "1469498468.057").</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetEventCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet to get event logs for. You can use either the fleet
            ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetEventCmdlet.StartTime">
            <summary>
            <para>
            <para>Earliest date to retrieve event logs for. If no start time is specified, this call
            returns entries starting from when the fleet was created to the specified end time.
            Format is a number expressed in Unix time as milliseconds (ex: "1469498468.057").</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetEventCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return. Use this parameter with <code>NextToken</code>
            to get results as a set of sequential pages.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetEventCmdlet.NextToken">
            <summary>
            <para>
            <para>Token that indicates the start of the next sequential page of results. Use the token
            that is returned with a previous call to this action. To start at the beginning of
            the result set, do not specify a value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetEventCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Events'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeFleetEventsResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeFleetEventsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetEventCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetPortSettingCmdlet">
            <summary>
            Retrieves a fleet's inbound connection permissions. Connection permissions specify
            the range of IP addresses and port settings that incoming traffic can use to access
            server processes in the fleet. Game sessions that are running on instances in the
            fleet use connections that fall in this range. 
            
             
            <para>
            To get a fleet's inbound connection permissions, specify the fleet's unique identifier.
            If successful, a collection of <a>IpPermission</a> objects is returned for the requested
            fleet ID. If the requested fleet has been deleted, the result set is empty.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">Setting
            up GameLift Fleets</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateFleet</a></para></li><li><para><a>ListFleets</a></para></li><li><para><a>DeleteFleet</a></para></li><li><para>
            Describe fleets:
            </para><ul><li><para><a>DescribeFleetAttributes</a></para></li><li><para><a>DescribeFleetCapacity</a></para></li><li><para><a>DescribeFleetPortSettings</a></para></li><li><para><a>DescribeFleetUtilization</a></para></li><li><para><a>DescribeRuntimeConfiguration</a></para></li><li><para><a>DescribeEC2InstanceLimits</a></para></li><li><para><a>DescribeFleetEvents</a></para></li></ul></li><li><para><a>UpdateFleetAttributes</a></para></li><li><para><a>StartFleetActions</a> or <a>StopFleetActions</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetPortSettingCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet to retrieve port settings for. You can use either
            the fleet ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetPortSettingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InboundPermissions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeFleetPortSettingsResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeFleetPortSettingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetPortSettingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetUtilizationCmdlet">
            <summary>
            Retrieves utilization statistics for one or more fleets. These statistics provide
            insight into how available hosting resources are currently being used. To get statistics
            on available hosting resources, see <a>DescribeFleetCapacity</a>.
            
             
            <para>
            You can request utilization data for all fleets, or specify a list of one or more
            fleet IDs. When requesting multiple fleets, use the pagination parameters to retrieve
            results as a set of sequential pages. If successful, a <a>FleetUtilization</a> object
            is returned for each requested fleet ID, unless the fleet identifier is not found.
            
            </para><note><para>
            Some API actions may limit the number of fleet IDs allowed in one request. If a request
            exceeds this limit, the request fails and the error message includes the maximum allowed.
            </para></note><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">Setting
            up GameLift Fleets</a></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/monitoring-cloudwatch.html#gamelift-metrics-fleet">GameLift
            Metrics for Fleets</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateFleet</a></para></li><li><para><a>ListFleets</a></para></li><li><para><a>DeleteFleet</a></para></li><li><para>
            Describe fleets:
            </para><ul><li><para><a>DescribeFleetAttributes</a></para></li><li><para><a>DescribeFleetCapacity</a></para></li><li><para><a>DescribeFleetPortSettings</a></para></li><li><para><a>DescribeFleetUtilization</a></para></li><li><para><a>DescribeRuntimeConfiguration</a></para></li><li><para><a>DescribeEC2InstanceLimits</a></para></li><li><para><a>DescribeFleetEvents</a></para></li></ul></li><li><para><a>UpdateFleetAttributes</a></para></li><li><para><a>StartFleetActions</a> or <a>StopFleetActions</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetUtilizationCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet(s) to retrieve utilization data for. You can use either
            the fleet ID or ARN value. To retrieve attributes for all current fleets, do not include
            this parameter. If the list of fleet identifiers includes fleets that don't currently
            exist, the request succeeds but no attributes for that fleet are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetUtilizationCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return. Use this parameter with <code>NextToken</code>
            to get results as a set of sequential pages. This parameter is ignored when the request
            specifies one or a list of fleet IDs.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetUtilizationCmdlet.NextToken">
            <summary>
            <para>
            <para>Token that indicates the start of the next sequential page of results. Use the token
            that is returned with a previous call to this action. To start at the beginning of
            the result set, do not specify a value. This parameter is ignored when the request
            specifies one or a list of fleet IDs.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetUtilizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FleetUtilization'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeFleetUtilizationResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeFleetUtilizationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetUtilizationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLFleetUtilizationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerCmdlet">
            <summary>
            <b>This action is part of Amazon GameLift FleetIQ with game server groups, which
            is in preview release and is subject to change.</b><para>
            Retrieves information for a game server resource. Information includes the game server
            statuses, health check info, and the instance the game server is running on. 
            </para><para>
            To retrieve game server information, specify the game server ID. If successful, the
            requested game server object is returned. 
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gsg-intro.html">GameLift
            FleetIQ Guide</a></para><para><b>Related operations</b></para><ul><li><para><a>RegisterGameServer</a></para></li><li><para><a>ListGameServers</a></para></li><li><para><a>ClaimGameServer</a></para></li><li><para><a>DescribeGameServer</a></para></li><li><para><a>UpdateGameServer</a></para></li><li><para><a>DeregisterGameServer</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerCmdlet.GameServerGroupName">
            <summary>
            <para>
            <para>An identifier for the game server group where the game server is running. Use either
            the <a>GameServerGroup</a> name or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerCmdlet.GameServerId">
            <summary>
            <para>
            <para>The identifier for the game server to be retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameServer'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeGameServerResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeGameServerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^GameServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerGroupCmdlet">
            <summary>
            <b>This action is part of Amazon GameLift FleetIQ with game server groups, which
            is in preview release and is subject to change.</b><para>
            Retrieves information on a game server group. 
            </para><para>
            To get attributes for a game server group, provide a group name or ARN value. If successful,
            a <a>GameServerGroup</a> object is returned.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gsg-intro.html">GameLift
            FleetIQ Guide</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateGameServerGroup</a></para></li><li><para><a>ListGameServerGroups</a></para></li><li><para><a>DescribeGameServerGroup</a></para></li><li><para><a>UpdateGameServerGroup</a></para></li><li><para><a>DeleteGameServerGroup</a></para></li><li><para><a>ResumeGameServerGroup</a></para></li><li><para><a>SuspendGameServerGroup</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerGroupCmdlet.GameServerGroupName">
            <summary>
            <para>
            <para>The unique identifier for the game server group being requested. Use either the <a>GameServerGroup</a>
            name or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameServerGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeGameServerGroupResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeGameServerGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameServerGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GameServerGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerGroupListCmdlet">
            <summary>
            <b>This action is part of Amazon GameLift FleetIQ with game server groups, which
            is in preview release and is subject to change.</b><para>
            Retrieves information on all game servers groups that exist in the current AWS account
            for the selected region. Use the pagination parameters to retrieve results in a set
            of sequential pages. 
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gsg-intro.html">GameLift
            FleetIQ Guide</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateGameServerGroup</a></para></li><li><para><a>ListGameServerGroups</a></para></li><li><para><a>DescribeGameServerGroup</a></para></li><li><para><a>UpdateGameServerGroup</a></para></li><li><para><a>DeleteGameServerGroup</a></para></li><li><para><a>ResumeGameServerGroup</a></para></li><li><para><a>SuspendGameServerGroup</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerGroupListCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return. Use this parameter with <code>NextToken</code>
            to get results as a set of sequential pages.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerGroupListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token that indicates the start of the next sequential page of results. Use the token
            that is returned with a previous call to this action. To start at the beginning of
            the result set, do not specify a value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerGroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameServerGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.ListGameServerGroupsResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.ListGameServerGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerGroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerListCmdlet">
            <summary>
            <b>This action is part of Amazon GameLift FleetIQ with game server groups, which
            is in preview release and is subject to change.</b><para>
            Retrieves information on all game servers that are currently running in a specified
            game server group. If there are custom key sort values for your game servers, you
            can opt to have the returned list sorted based on these values. Use the pagination
            parameters to retrieve results in a set of sequential pages. 
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gsg-intro.html">GameLift
            FleetIQ Guide</a></para><para><b>Related operations</b></para><ul><li><para><a>RegisterGameServer</a></para></li><li><para><a>ListGameServers</a></para></li><li><para><a>ClaimGameServer</a></para></li><li><para><a>DescribeGameServer</a></para></li><li><para><a>UpdateGameServer</a></para></li><li><para><a>DeregisterGameServer</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerListCmdlet.GameServerGroupName">
            <summary>
            <para>
            <para>An identifier for the game server group for the game server you want to list. Use
            either the <a>GameServerGroup</a> name or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerListCmdlet.SortOrder">
            <summary>
            <para>
            <para>Indicates how to sort the returned data based on the game servers' custom key sort
            value. If this parameter is left empty, the list of game servers is returned in no
            particular order.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerListCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return. Use this parameter with <code>NextToken</code>
            to get results as a set of sequential pages.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token that indicates the start of the next sequential page of results. Use the token
            that is returned with a previous call to this action. To start at the beginning of
            the result set, do not specify a value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameServers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.ListGameServersResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.ListGameServersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameServerGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GameServerGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameServerListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionCmdlet">
            <summary>
            Retrieves a set of one or more game sessions. Request a specific game session or request
            all game sessions on a fleet. Alternatively, use <a>SearchGameSessions</a> to request
            a set of active game sessions that are filtered by certain criteria. To retrieve protection
            policy settings for game sessions, use <a>DescribeGameSessionDetails</a>.
            
             
            <para>
            To get game sessions, specify one of the following: game session ID, fleet ID, or
            alias ID. You can filter this request by game session status. Use the pagination parameters
            to retrieve results as a set of sequential pages. If successful, a <a>GameSession</a>
            object is returned for each game session matching the request.
            </para><para><i>Available in Amazon GameLift Local.</i></para><ul><li><para><a>CreateGameSession</a></para></li><li><para><a>DescribeGameSessions</a></para></li><li><para><a>DescribeGameSessionDetails</a></para></li><li><para><a>SearchGameSessions</a></para></li><li><para><a>UpdateGameSession</a></para></li><li><para><a>GetGameSessionLogUrl</a></para></li><li><para>
            Game session placements
            </para><ul><li><para><a>StartGameSessionPlacement</a></para></li><li><para><a>DescribeGameSessionPlacement</a></para></li><li><para><a>StopGameSessionPlacement</a></para></li></ul></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionCmdlet.AliasId">
            <summary>
            <para>
            <para>A unique identifier for an alias associated with the fleet to retrieve all game sessions
            for. You can use either the alias ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet to retrieve all game sessions for. You can use either
            the fleet ID or ARN value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionCmdlet.GameSessionId">
            <summary>
            <para>
            <para>A unique identifier for the game session to retrieve. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionCmdlet.StatusFilter">
            <summary>
            <para>
            <para>Game session status to filter results on. Possible game session statuses include <code>ACTIVE</code>,
            <code>TERMINATED</code>, <code>ACTIVATING</code>, and <code>TERMINATING</code> (the
            last two are transitory). </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return. Use this parameter with <code>NextToken</code>
            to get results as a set of sequential pages.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionCmdlet.NextToken">
            <summary>
            <para>
            <para>Token that indicates the start of the next sequential page of results. Use the token
            that is returned with a previous call to this action. To start at the beginning of
            the result set, do not specify a value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameSessions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeGameSessionsResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeGameSessionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionDetailCmdlet">
            <summary>
            Retrieves properties, including the protection policy in force, for one or more game
            sessions. This action can be used in several ways: (1) provide a <code>GameSessionId</code>
            or <code>GameSessionArn</code> to request details for a specific game session; (2)
            provide either a <code>FleetId</code> or an <code>AliasId</code> to request properties
            for all game sessions running on a fleet. 
            
             
            <para>
            To get game session record(s), specify just one of the following: game session ID,
            fleet ID, or alias ID. You can filter this request by game session status. Use the
            pagination parameters to retrieve results as a set of sequential pages. If successful,
            a <a>GameSessionDetail</a> object is returned for each session matching the request.
            </para><ul><li><para><a>CreateGameSession</a></para></li><li><para><a>DescribeGameSessions</a></para></li><li><para><a>DescribeGameSessionDetails</a></para></li><li><para><a>SearchGameSessions</a></para></li><li><para><a>UpdateGameSession</a></para></li><li><para><a>GetGameSessionLogUrl</a></para></li><li><para>
            Game session placements
            </para><ul><li><para><a>StartGameSessionPlacement</a></para></li><li><para><a>DescribeGameSessionPlacement</a></para></li><li><para><a>StopGameSessionPlacement</a></para></li></ul></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionDetailCmdlet.AliasId">
            <summary>
            <para>
            <para>A unique identifier for an alias associated with the fleet to retrieve all game sessions
            for. You can use either the alias ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionDetailCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet to retrieve all game sessions active on the fleet.
            You can use either the fleet ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionDetailCmdlet.GameSessionId">
            <summary>
            <para>
            <para>A unique identifier for the game session to retrieve. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionDetailCmdlet.StatusFilter">
            <summary>
            <para>
            <para>Game session status to filter results on. Possible game session statuses include <code>ACTIVE</code>,
            <code>TERMINATED</code>, <code>ACTIVATING</code> and <code>TERMINATING</code> (the
            last two are transitory). </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionDetailCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return. Use this parameter with <code>NextToken</code>
            to get results as a set of sequential pages.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionDetailCmdlet.NextToken">
            <summary>
            <para>
            <para>Token that indicates the start of the next sequential page of results. Use the token
            that is returned with a previous call to this action. To start at the beginning of
            the result set, do not specify a value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionDetailCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameSessionDetails'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeGameSessionDetailsResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeGameSessionDetailsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionDetailCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameSessionId parameter.
            The -PassThru parameter is deprecated, use -Select '^GameSessionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionDetailCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionLogUrlCmdlet">
            <summary>
            Retrieves the location of stored game session logs for a specified game session. When
            a game session is terminated, Amazon GameLift automatically stores the logs in Amazon
            S3 and retains them for 14 days. Use this URL to download the logs.
            
             <note><para>
            See the <a href="https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_gamelift">AWS
            Service Limits</a> page for maximum log file sizes. Log files that exceed this limit
            are not saved.
            </para></note><ul><li><para><a>CreateGameSession</a></para></li><li><para><a>DescribeGameSessions</a></para></li><li><para><a>DescribeGameSessionDetails</a></para></li><li><para><a>SearchGameSessions</a></para></li><li><para><a>UpdateGameSession</a></para></li><li><para><a>GetGameSessionLogUrl</a></para></li><li><para>
            Game session placements
            </para><ul><li><para><a>StartGameSessionPlacement</a></para></li><li><para><a>DescribeGameSessionPlacement</a></para></li><li><para><a>StopGameSessionPlacement</a></para></li></ul></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionLogUrlCmdlet.GameSessionId">
            <summary>
            <para>
            <para>A unique identifier for the game session to get logs for. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionLogUrlCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PreSignedUrl'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.GetGameSessionLogUrlResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.GetGameSessionLogUrlResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionLogUrlCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameSessionId parameter.
            The -PassThru parameter is deprecated, use -Select '^GameSessionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionPlacementCmdlet">
            <summary>
            Retrieves properties and current status of a game session placement request. To get
            game session placement details, specify the placement ID. If successful, a <a>GameSessionPlacement</a>
            object is returned.
            
             <ul><li><para><a>CreateGameSession</a></para></li><li><para><a>DescribeGameSessions</a></para></li><li><para><a>DescribeGameSessionDetails</a></para></li><li><para><a>SearchGameSessions</a></para></li><li><para><a>UpdateGameSession</a></para></li><li><para><a>GetGameSessionLogUrl</a></para></li><li><para>
            Game session placements
            </para><ul><li><para><a>StartGameSessionPlacement</a></para></li><li><para><a>DescribeGameSessionPlacement</a></para></li><li><para><a>StopGameSessionPlacement</a></para></li></ul></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionPlacementCmdlet.PlacementId">
            <summary>
            <para>
            <para>A unique identifier for a game session placement to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionPlacementCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameSessionPlacement'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeGameSessionPlacementResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeGameSessionPlacementResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionPlacementCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PlacementId parameter.
            The -PassThru parameter is deprecated, use -Select '^PlacementId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionQueueCmdlet">
            <summary>
            Retrieves the properties for one or more game session queues. When requesting multiple
            queues, use the pagination parameters to retrieve results as a set of sequential pages.
            If successful, a <a>GameSessionQueue</a> object is returned for each requested queue.
            When specifying a list of queues, objects are returned only for queues that currently
            exist in the Region.
            
             
            <para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/queues-console.html">
            View Your Queues</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateGameSessionQueue</a></para></li><li><para><a>DescribeGameSessionQueues</a></para></li><li><para><a>UpdateGameSessionQueue</a></para></li><li><para><a>DeleteGameSessionQueue</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionQueueCmdlet.Name">
            <summary>
            <para>
            <para>A list of queue names to retrieve information for. You can use either the queue ID
            or ARN value. To request settings for all queues, leave this parameter empty. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionQueueCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return. Use this parameter with <code>NextToken</code>
            to get results as a set of sequential pages.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionQueueCmdlet.NextToken">
            <summary>
            <para>
            <para>A token that indicates the start of the next sequential page of results. Use the token
            that is returned with a previous call to this action. To start at the beginning of
            the result set, do not specify a value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionQueueCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameSessionQueues'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeGameSessionQueuesResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeGameSessionQueuesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionQueueCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLGameSessionQueueCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLInstanceCmdlet">
            <summary>
            Retrieves information about a fleet's instances, including instance IDs. Use this
            action to get details on all instances in the fleet or get details on one specific
            instance.
            
             
            <para>
            To get a specific instance, specify fleet ID and instance ID. To get all instances
            in a fleet, specify a fleet ID only. Use the pagination parameters to retrieve results
            as a set of sequential pages. If successful, an <a>Instance</a> object is returned
            for each result.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-remote-access.html">Remotely
            Access Fleet Instances</a></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-creating-debug.html">Debug
            Fleet Issues</a></para><para><b>Related operations</b></para><ul><li><para><a>DescribeInstances</a></para></li><li><para><a>GetInstanceAccess</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLInstanceCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet to retrieve instance information for. You can use
            either the fleet ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLInstanceCmdlet.InstanceId">
            <summary>
            <para>
            <para>A unique identifier for an instance to retrieve. Specify an instance ID or leave blank
            to retrieve all instances in the fleet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLInstanceCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return. Use this parameter with <code>NextToken</code>
            to get results as a set of sequential pages.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLInstanceCmdlet.NextToken">
            <summary>
            <para>
            <para>Token that indicates the start of the next sequential page of results. Use the token
            that is returned with a previous call to this action. To start at the beginning of
            the result set, do not specify a value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Instances'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeInstancesResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLInstanceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLInstanceAccessCmdlet">
            <summary>
            Requests remote access to a fleet instance. Remote access is useful for debugging,
            gathering benchmarking data, or observing activity in real time. 
            
             
            <para>
            To remotely access an instance, you need credentials that match the operating system
            of the instance. For a Windows instance, Amazon GameLift returns a user name and password
            as strings for use with a Windows Remote Desktop client. For a Linux instance, Amazon
            GameLift returns a user name and RSA private key, also as strings, for use with an
            SSH client. The private key must be saved in the proper format to a <code>.pem</code>
            file before using. If you're making this request using the AWS CLI, saving the secret
            can be handled as part of the GetInstanceAccess request, as shown in one of the examples
            for this action. 
            </para><para>
            To request access to a specific instance, specify the IDs of both the instance and
            the fleet it belongs to. You can retrieve a fleet's instance IDs by calling <a>DescribeInstances</a>.
            If successful, an <a>InstanceAccess</a> object is returned that contains the instance's
            IP address and a set of credentials.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-remote-access.html">Remotely
            Access Fleet Instances</a></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-creating-debug.html">Debug
            Fleet Issues</a></para><para><b>Related operations</b></para><ul><li><para><a>DescribeInstances</a></para></li><li><para><a>GetInstanceAccess</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLInstanceAccessCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet that contains the instance you want access to. You
            can use either the fleet ID or ARN value. The fleet can be in any of the following
            statuses: <code>ACTIVATING</code>, <code>ACTIVE</code>, or <code>ERROR</code>. Fleets
            with an <code>ERROR</code> status may be accessible for a short time before they are
            deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLInstanceAccessCmdlet.InstanceId">
            <summary>
            <para>
            <para>A unique identifier for an instance you want to get access to. You can access an instance
            in any status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLInstanceAccessCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceAccess'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.GetInstanceAccessResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.GetInstanceAccessResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLInstanceAccessCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLMatchmakingCmdlet">
            <summary>
            Retrieves one or more matchmaking tickets. Use this operation to retrieve ticket information,
            including status and--once a successful match is made--acquire connection information
            for the resulting new game session. 
            
             
            <para>
            You can use this operation to track the progress of matchmaking requests (through
            polling) as an alternative to using event notifications. See more details on tracking
            matchmaking requests through polling or notifications in <a>StartMatchmaking</a>.
            
            </para><para>
            To request matchmaking tickets, provide a list of up to 10 ticket IDs. If the request
            is successful, a ticket object is returned for each requested ID that currently exists.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-client.html">
            Add FlexMatch to a Game Client</a></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-notification.html">
            Set Up FlexMatch Event Notification</a></para><para><b>Related operations</b></para><ul><li><para><a>StartMatchmaking</a></para></li><li><para><a>DescribeMatchmaking</a></para></li><li><para><a>StopMatchmaking</a></para></li><li><para><a>AcceptMatch</a></para></li><li><para><a>StartMatchBackfill</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLMatchmakingCmdlet.TicketId">
            <summary>
            <para>
            <para>A unique identifier for a matchmaking ticket. You can include up to 10 ID values.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLMatchmakingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TicketList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeMatchmakingResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeMatchmakingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLMatchmakingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TicketId parameter.
            The -PassThru parameter is deprecated, use -Select '^TicketId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLMatchmakingConfigurationCmdlet">
            <summary>
            Retrieves the details of FlexMatch matchmaking configurations. With this operation,
            you have the following options: (1) retrieve all existing configurations, (2) provide
            the names of one or more configurations to retrieve, or (3) retrieve all configurations
            that use a specified rule set name. When requesting multiple items, use the pagination
            parameters to retrieve results as a set of sequential pages. If successful, a configuration
            is returned for each requested name. When specifying a list of names, only configurations
            that currently exist are returned. 
            
             
            <para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/matchmaker-build.html">
            Setting Up FlexMatch Matchmakers</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateMatchmakingConfiguration</a></para></li><li><para><a>DescribeMatchmakingConfigurations</a></para></li><li><para><a>UpdateMatchmakingConfiguration</a></para></li><li><para><a>DeleteMatchmakingConfiguration</a></para></li><li><para><a>CreateMatchmakingRuleSet</a></para></li><li><para><a>DescribeMatchmakingRuleSets</a></para></li><li><para><a>ValidateMatchmakingRuleSet</a></para></li><li><para><a>DeleteMatchmakingRuleSet</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLMatchmakingConfigurationCmdlet.Name">
            <summary>
            <para>
            <para>A unique identifier for a matchmaking configuration(s) to retrieve. You can use either
            the configuration name or ARN value. To request all existing configurations, leave
            this parameter empty.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLMatchmakingConfigurationCmdlet.RuleSetName">
            <summary>
            <para>
            <para>A unique identifier for a matchmaking rule set. You can use either the rule set name
            or ARN value. Use this parameter to retrieve all matchmaking configurations that use
            this rule set.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLMatchmakingConfigurationCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return. Use this parameter with <code>NextToken</code>
            to get results as a set of sequential pages. This parameter is limited to 10.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLMatchmakingConfigurationCmdlet.NextToken">
            <summary>
            <para>
            <para>A token that indicates the start of the next sequential page of results. Use the token
            that is returned with a previous call to this action. To start at the beginning of
            the result set, do not specify a value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLMatchmakingConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Configurations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeMatchmakingConfigurationsResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeMatchmakingConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLMatchmakingConfigurationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLMatchmakingRuleSetCmdlet">
            <summary>
            Retrieves the details for FlexMatch matchmaking rule sets. You can request all existing
            rule sets for the Region, or provide a list of one or more rule set names. When requesting
            multiple items, use the pagination parameters to retrieve results as a set of sequential
            pages. If successful, a rule set is returned for each requested name. 
            
             
            <para><b>Learn more</b></para><ul><li><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-rulesets.html">Build
            a Rule Set</a></para></li></ul><para><b>Related operations</b></para><ul><li><para><a>CreateMatchmakingConfiguration</a></para></li><li><para><a>DescribeMatchmakingConfigurations</a></para></li><li><para><a>UpdateMatchmakingConfiguration</a></para></li><li><para><a>DeleteMatchmakingConfiguration</a></para></li><li><para><a>CreateMatchmakingRuleSet</a></para></li><li><para><a>DescribeMatchmakingRuleSets</a></para></li><li><para><a>ValidateMatchmakingRuleSet</a></para></li><li><para><a>DeleteMatchmakingRuleSet</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLMatchmakingRuleSetCmdlet.Name">
            <summary>
            <para>
            <para>A list of one or more matchmaking rule set names to retrieve details for. (Note: The
            rule set name is different from the optional "name" field in the rule set body.) You
            can use either the rule set name or ARN value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLMatchmakingRuleSetCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return. Use this parameter with <code>NextToken</code>
            to get results as a set of sequential pages.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLMatchmakingRuleSetCmdlet.NextToken">
            <summary>
            <para>
            <para>A token that indicates the start of the next sequential page of results. Use the token
            that is returned with a previous call to this action. To start at the beginning of
            the result set, do not specify a value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLMatchmakingRuleSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RuleSets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeMatchmakingRuleSetsResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeMatchmakingRuleSetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLMatchmakingRuleSetCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLPlayerSessionCmdlet">
            <summary>
            Retrieves properties for one or more player sessions. This action can be used in several
            ways: (1) provide a <code>PlayerSessionId</code> to request properties for a specific
            player session; (2) provide a <code>GameSessionId</code> to request properties for
            all player sessions in the specified game session; (3) provide a <code>PlayerId</code>
            to request properties for all player sessions of a specified player. 
            
             
            <para>
            To get game session record(s), specify only one of the following: a player session
            ID, a game session ID, or a player ID. You can filter this request by player session
            status. Use the pagination parameters to retrieve results as a set of sequential pages.
            If successful, a <a>PlayerSession</a> object is returned for each session matching
            the request.
            </para><para><i>Available in Amazon GameLift Local.</i></para><ul><li><para><a>CreatePlayerSession</a></para></li><li><para><a>CreatePlayerSessions</a></para></li><li><para><a>DescribePlayerSessions</a></para></li><li><para>
            Game session placements
            </para><ul><li><para><a>StartGameSessionPlacement</a></para></li><li><para><a>DescribeGameSessionPlacement</a></para></li><li><para><a>StopGameSessionPlacement</a></para></li></ul></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLPlayerSessionCmdlet.GameSessionId">
            <summary>
            <para>
            <para>A unique identifier for the game session to retrieve player sessions for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLPlayerSessionCmdlet.PlayerId">
            <summary>
            <para>
            <para>A unique identifier for a player to retrieve player sessions for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLPlayerSessionCmdlet.PlayerSessionId">
            <summary>
            <para>
            <para>A unique identifier for a player session to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLPlayerSessionCmdlet.PlayerSessionStatusFilter">
            <summary>
            <para>
            <para>Player session status to filter results on.</para><para>Possible player session statuses include the following:</para><ul><li><para><b>RESERVED</b> -- The player session request has been received, but the player has
            not yet connected to the server process and/or been validated. </para></li><li><para><b>ACTIVE</b> -- The player has been validated by the server process and is currently
            connected.</para></li><li><para><b>COMPLETED</b> -- The player connection has been dropped.</para></li><li><para><b>TIMEDOUT</b> -- A player session request was received, but the player did not
            connect and/or was not validated within the timeout limit (60 seconds).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLPlayerSessionCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return. Use this parameter with <code>NextToken</code>
            to get results as a set of sequential pages. If a player session ID is specified,
            this parameter is ignored.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLPlayerSessionCmdlet.NextToken">
            <summary>
            <para>
            <para>Token that indicates the start of the next sequential page of results. Use the token
            that is returned with a previous call to this action. To start at the beginning of
            the result set, do not specify a value. If a player session ID is specified, this
            parameter is ignored.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLPlayerSessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PlayerSessions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribePlayerSessionsResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribePlayerSessionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLPlayerSessionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLResourceTagCmdlet">
            <summary>
            Retrieves all tags that are assigned to a GameLift resource. Resource tags are used
            to organize AWS resources for a range of purposes. This action handles the permissions
            necessary to manage tags for the following GameLift resource types:
            
             <ul><li><para>
            Build
            </para></li><li><para>
            Script
            </para></li><li><para>
            Fleet
            </para></li><li><para>
            Alias
            </para></li><li><para>
            GameSessionQueue
            </para></li><li><para>
            MatchmakingConfiguration
            </para></li><li><para>
            MatchmakingRuleSet
            </para></li></ul><para>
            To list tags for a resource, specify the unique ARN value for the resource.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            AWS Resources</a> in the <i>AWS General Reference</i></para><para><a href="http://aws.amazon.com/answers/account-management/aws-tagging-strategies/">
            AWS Tagging Strategies</a></para><para><b>Related operations</b></para><ul><li><para><a>TagResource</a></para></li><li><para><a>UntagResource</a></para></li><li><para><a>ListTagsForResource</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para> The Amazon Resource Name (<a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html">ARN</a>)
            that is assigned to and uniquely identifies the GameLift resource that you want to
            retrieve tags for. GameLift resource ARNs are included in the data object for the
            resource, which can be retrieved by calling a List or Describe action for the resource
            type. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLRuntimeConfigurationCmdlet">
            <summary>
            Retrieves a fleet's runtime configuration settings. The runtime configuration tells
            Amazon GameLift which server processes to run (and how) on each instance in the fleet.
            
             
            <para>
            To get a runtime configuration, specify the fleet's unique identifier. If successful,
            a <a>RuntimeConfiguration</a> object is returned for the requested fleet. If the requested
            fleet has been deleted, the result set is empty.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">Setting
            up GameLift Fleets</a></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-multiprocess.html">Running
            Multiple Processes on a Fleet</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateFleet</a></para></li><li><para><a>ListFleets</a></para></li><li><para><a>DeleteFleet</a></para></li><li><para>
            Describe fleets:
            </para><ul><li><para><a>DescribeFleetAttributes</a></para></li><li><para><a>DescribeFleetCapacity</a></para></li><li><para><a>DescribeFleetPortSettings</a></para></li><li><para><a>DescribeFleetUtilization</a></para></li><li><para><a>DescribeRuntimeConfiguration</a></para></li><li><para><a>DescribeEC2InstanceLimits</a></para></li><li><para><a>DescribeFleetEvents</a></para></li></ul></li><li><para><a>UpdateFleetAttributes</a></para></li><li><para><a>StartFleetActions</a> or <a>StopFleetActions</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLRuntimeConfigurationCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet to get the runtime configuration for. You can use
            either the fleet ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLRuntimeConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RuntimeConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeRuntimeConfigurationResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeRuntimeConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLRuntimeConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLScalingPolicyCmdlet">
            <summary>
            Retrieves all scaling policies applied to a fleet.
            
             
            <para>
            To get a fleet's scaling policies, specify the fleet ID. You can filter this request
            by policy status, such as to retrieve only active scaling policies. Use the pagination
            parameters to retrieve results as a set of sequential pages. If successful, set of
            <a>ScalingPolicy</a> objects is returned for the fleet.
            </para><para>
            A fleet may have all of its scaling policies suspended (<a>StopFleetActions</a>).
            This action does not affect the status of the scaling policies, which remains ACTIVE.
            To see whether a fleet's scaling policies are in force or suspended, call <a>DescribeFleetAttributes</a>
            and check the stopped actions.
            </para><ul><li><para><a>DescribeFleetCapacity</a></para></li><li><para><a>UpdateFleetCapacity</a></para></li><li><para><a>DescribeEC2InstanceLimits</a></para></li><li><para>
            Manage scaling policies:
            </para><ul><li><para><a>PutScalingPolicy</a> (auto-scaling)
            </para></li><li><para><a>DescribeScalingPolicies</a> (auto-scaling)
            </para></li><li><para><a>DeleteScalingPolicy</a> (auto-scaling)
            </para></li></ul></li><li><para>
            Manage fleet actions:
            </para><ul><li><para><a>StartFleetActions</a></para></li><li><para><a>StopFleetActions</a></para></li></ul></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLScalingPolicyCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet to retrieve scaling policies for. You can use either
            the fleet ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLScalingPolicyCmdlet.StatusFilter">
            <summary>
            <para>
            <para>Scaling policy status to filter results on. A scaling policy is only in force when
            in an <code>ACTIVE</code> status.</para><ul><li><para><b>ACTIVE</b> -- The scaling policy is currently in force.</para></li><li><para><b>UPDATEREQUESTED</b> -- A request to update the scaling policy has been received.</para></li><li><para><b>UPDATING</b> -- A change is being made to the scaling policy.</para></li><li><para><b>DELETEREQUESTED</b> -- A request to delete the scaling policy has been received.</para></li><li><para><b>DELETING</b> -- The scaling policy is being deleted.</para></li><li><para><b>DELETED</b> -- The scaling policy has been deleted.</para></li><li><para><b>ERROR</b> -- An error occurred in creating the policy. It should be removed and
            recreated.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLScalingPolicyCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return. Use this parameter with <code>NextToken</code>
            to get results as a set of sequential pages.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLScalingPolicyCmdlet.NextToken">
            <summary>
            <para>
            <para>Token that indicates the start of the next sequential page of results. Use the token
            that is returned with a previous call to this action. To start at the beginning of
            the result set, do not specify a value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLScalingPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ScalingPolicies'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeScalingPoliciesResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeScalingPoliciesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLScalingPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLScalingPolicyCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLScriptCmdlet">
            <summary>
            Retrieves properties for a Realtime script. 
            
             
            <para>
            To request a script record, specify the script ID. If successful, an object containing
            the script properties is returned.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/realtime-intro.html">Amazon
            GameLift Realtime Servers</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateScript</a></para></li><li><para><a>ListScripts</a></para></li><li><para><a>DescribeScript</a></para></li><li><para><a>UpdateScript</a></para></li><li><para><a>DeleteScript</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLScriptCmdlet.ScriptId">
            <summary>
            <para>
            <para>A unique identifier for a Realtime script to retrieve properties for. You can use
            either the script ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLScriptCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Script'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeScriptResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeScriptResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLScriptCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScriptId parameter.
            The -PassThru parameter is deprecated, use -Select '^ScriptId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLScriptListCmdlet">
            <summary>
            Retrieves script records for all Realtime scripts that are associated with the AWS
            account in use. 
            
             
            <para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/realtime-intro.html">Amazon
            GameLift Realtime Servers</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateScript</a></para></li><li><para><a>ListScripts</a></para></li><li><para><a>DescribeScript</a></para></li><li><para><a>UpdateScript</a></para></li><li><para><a>DeleteScript</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLScriptListCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return. Use this parameter with <code>NextToken</code>
            to get results as a set of sequential pages.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLScriptListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token that indicates the start of the next sequential page of results. Use the token
            that is returned with a previous call to this action. To start at the beginning of
            the result set, do not specify a value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLScriptListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Scripts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.ListScriptsResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.ListScriptsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLScriptListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLVpcPeeringAuthorizationCmdlet">
            <summary>
            Retrieves valid VPC peering authorizations that are pending for the AWS account. This
            operation returns all VPC peering authorizations and requests for peering. This includes
            those initiated and received by this account. 
            
             <ul><li><para><a>CreateVpcPeeringAuthorization</a></para></li><li><para><a>DescribeVpcPeeringAuthorizations</a></para></li><li><para><a>DeleteVpcPeeringAuthorization</a></para></li><li><para><a>CreateVpcPeeringConnection</a></para></li><li><para><a>DescribeVpcPeeringConnections</a></para></li><li><para><a>DeleteVpcPeeringConnection</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLVpcPeeringAuthorizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VpcPeeringAuthorizations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeVpcPeeringAuthorizationsResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeVpcPeeringAuthorizationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.GetGMLVpcPeeringConnectionCmdlet">
            <summary>
            Retrieves information on VPC peering connections. Use this operation to get peering
            information for all fleets or for one specific fleet ID. 
            
             
            <para>
            To retrieve connection information, call this operation from the AWS account that
            is used to manage the Amazon GameLift fleets. Specify a fleet ID or leave the parameter
            empty to retrieve all connection records. If successful, the retrieved information
            includes both active and pending connections. Active connections identify the IpV4
            CIDR block that the VPC uses to connect. 
            </para><ul><li><para><a>CreateVpcPeeringAuthorization</a></para></li><li><para><a>DescribeVpcPeeringAuthorizations</a></para></li><li><para><a>DeleteVpcPeeringAuthorization</a></para></li><li><para><a>CreateVpcPeeringConnection</a></para></li><li><para><a>DescribeVpcPeeringConnections</a></para></li><li><para><a>DeleteVpcPeeringConnection</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLVpcPeeringConnectionCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet. You can use either the fleet ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLVpcPeeringConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VpcPeeringConnections'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DescribeVpcPeeringConnectionsResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DescribeVpcPeeringConnectionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.GetGMLVpcPeeringConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.NewGMLAliasCmdlet">
            <summary>
            Creates an alias for a fleet. In most situations, you can use an alias ID in place
            of a fleet ID. An alias provides a level of abstraction for a fleet that is useful
            when redirecting player traffic from one fleet to another, such as when updating your
            game build. 
            
             
            <para>
            Amazon GameLift supports two types of routing strategies for aliases: simple and terminal.
            A simple alias points to an active fleet. A terminal alias is used to display messaging
            or link to a URL instead of routing players to an active fleet. For example, you might
            use a terminal alias when a game version is no longer supported and you want to direct
            players to an upgrade site. 
            </para><para>
            To create a fleet alias, specify an alias name, routing strategy, and optional description.
            Each simple alias can point to only one fleet, but a fleet can have multiple aliases.
            If successful, a new alias record is returned, including an alias ID and an ARN. You
            can reassign an alias to another fleet by calling <code>UpdateAlias</code>.
            </para><ul><li><para><a>CreateAlias</a></para></li><li><para><a>ListAliases</a></para></li><li><para><a>DescribeAlias</a></para></li><li><para><a>UpdateAlias</a></para></li><li><para><a>DeleteAlias</a></para></li><li><para><a>ResolveAlias</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLAliasCmdlet.Description">
            <summary>
            <para>
            <para>A human-readable description of the alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLAliasCmdlet.RoutingStrategy_FleetId">
            <summary>
            <para>
            <para>The unique identifier for a fleet that the alias points to. This value is the fleet
            ID, not the fleet ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLAliasCmdlet.RoutingStrategy_Message">
            <summary>
            <para>
            <para>The message text to be used with a terminal routing strategy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLAliasCmdlet.Name">
            <summary>
            <para>
            <para>A descriptive label that is associated with an alias. Alias names do not need to be
            unique.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLAliasCmdlet.Tag">
            <summary>
            <para>
            <para>A list of labels to assign to the new alias resource. Tags are developer-defined key-value
            pairs. Tagging AWS resources are useful for resource management, access management
            and cost allocation. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">
            Tagging AWS Resources</a> in the <i>AWS General Reference</i>. Once the resource is
            created, you can use <a>TagResource</a>, <a>UntagResource</a>, and <a>ListTagsForResource</a>
            to add, remove, and view tags. The maximum tag limit may be lower than stated. See
            the AWS General Reference for actual tagging limits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLAliasCmdlet.RoutingStrategy_Type">
            <summary>
            <para>
            <para>The type of routing strategy for the alias.</para><para>Possible routing types include the following:</para><ul><li><para><b>SIMPLE</b> - The alias resolves to one specific fleet. Use this type when routing
            to active fleets.</para></li><li><para><b>TERMINAL</b> - The alias does not resolve to a fleet but instead can be used to
            display a message to the user. A terminal alias throws a TerminalRoutingStrategyException
            with the <a>RoutingStrategy</a> message embedded.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Alias'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.CreateAliasResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.CreateAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.NewGMLBuildCmdlet">
            <summary>
            Creates a new Amazon GameLift build resource for your game server binary files. Game
            server binaries must be combined into a zip file for use with Amazon GameLift. 
            
             <important><para>
            When setting up a new game build for GameLift, we recommend using the AWS CLI command
            <b><a href="https://docs.aws.amazon.com/cli/latest/reference/gamelift/upload-build.html">upload-build</a></b>. This helper command combines two tasks: (1) it uploads your build files from
            a file directory to a GameLift Amazon S3 location, and (2) it creates a new build
            resource. 
            </para></important><para>
            The <code>CreateBuild</code> operation can used in the following scenarios:
            </para><ul><li><para>
            To create a new game build with build files that are in an S3 location under an AWS
            account that you control. To use this option, you must first give Amazon GameLift
            access to the S3 bucket. With permissions in place, call <code>CreateBuild</code>
            and specify a build name, operating system, and the S3 storage location of your game
            build.
            </para></li><li><para>
            To directly upload your build files to a GameLift S3 location. To use this option,
            first call <code>CreateBuild</code> and specify a build name and operating system.
            This action creates a new build resource and also returns an S3 location with temporary
            access credentials. Use the credentials to manually upload your build files to the
            specified S3 location. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UploadingObjects.html">Uploading
            Objects</a> in the <i>Amazon S3 Developer Guide</i>. Build files can be uploaded to
            the GameLift S3 location once only; that can't be updated. 
            </para></li></ul><para>
            If successful, this operation creates a new build resource with a unique build ID
            and places it in <code>INITIALIZED</code> status. A build must be in <code>READY</code>
            status before you can create fleets with it.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-build-intro.html">Uploading
            Your Game</a></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-build-cli-uploading.html#gamelift-build-cli-uploading-create-build">
            Create a Build with Files in Amazon S3</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateBuild</a></para></li><li><para><a>ListBuilds</a></para></li><li><para><a>DescribeBuild</a></para></li><li><para><a>UpdateBuild</a></para></li><li><para><a>DeleteBuild</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLBuildCmdlet.StorageLocation_Bucket">
            <summary>
            <para>
            <para>An S3 bucket identifier. This is the name of the S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLBuildCmdlet.StorageLocation_Key">
            <summary>
            <para>
            <para>The name of the zip file that contains the build files or script files. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLBuildCmdlet.Name">
            <summary>
            <para>
            <para>A descriptive label that is associated with a build. Build names do not need to be
            unique. You can use <a>UpdateBuild</a> to change this value later. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLBuildCmdlet.StorageLocation_ObjectVersion">
            <summary>
            <para>
            <para>The version of the file, if object versioning is turned on for the bucket. Amazon
            GameLift uses this information when retrieving files from an S3 bucket that you own.
            Use this parameter to specify a specific version of the file. If not set, the latest
            version of the file is retrieved. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLBuildCmdlet.OperatingSystem">
            <summary>
            <para>
            <para>The operating system that the game server binaries are built to run on. This value
            determines the type of fleet resources that you can use for this build. If your game
            build contains multiple executables, they all must run on the same operating system.
            If an operating system is not specified when creating a build, Amazon GameLift uses
            the default value (WINDOWS_2012). This value cannot be changed later.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLBuildCmdlet.StorageLocation_RoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (<a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html">ARN</a>)
            for an IAM role that allows Amazon GameLift to access the S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLBuildCmdlet.Tag">
            <summary>
            <para>
            <para>A list of labels to assign to the new build resource. Tags are developer-defined key-value
            pairs. Tagging AWS resources are useful for resource management, access management
            and cost allocation. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">
            Tagging AWS Resources</a> in the <i>AWS General Reference</i>. Once the resource is
            created, you can use <a>TagResource</a>, <a>UntagResource</a>, and <a>ListTagsForResource</a>
            to add, remove, and view tags. The maximum tag limit may be lower than stated. See
            the AWS General Reference for actual tagging limits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLBuildCmdlet.Version">
            <summary>
            <para>
            <para>Version information that is associated with a build or script. Version strings do
            not need to be unique. You can use <a>UpdateBuild</a> to change this value later.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLBuildCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.CreateBuildResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.CreateBuildResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLBuildCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLBuildCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet">
            <summary>
            Creates a new fleet to run your game servers. whether they are custom game builds
            or Realtime Servers with game-specific script. A fleet is a set of Amazon Elastic
            Compute Cloud (Amazon EC2) instances, each of which can host multiple game sessions.
            When creating a fleet, you choose the hardware specifications, set some configuration
            options, and specify the game server to deploy on the new fleet. 
            
             
            <para>
            To create a new fleet, provide the following: (1) a fleet name, (2) an EC2 instance
            type and fleet type (spot or on-demand), (3) the build ID for your game build or script
            ID if using Realtime Servers, and (4) a runtime configuration, which determines how
            game servers will run on each instance in the fleet. 
            </para><para>
            If the <code>CreateFleet</code> call is successful, Amazon GameLift performs the following
            tasks. You can track the process of a fleet by checking the fleet status or by monitoring
            fleet creation events:
            </para><ul><li><para>
            Creates a fleet resource. Status: <code>NEW</code>.
            </para></li><li><para>
            Begins writing events to the fleet event log, which can be accessed in the Amazon
            GameLift console.
            </para></li><li><para>
            Sets the fleet's target capacity to 1 (desired instances), which triggers Amazon GameLift
            to start one new EC2 instance.
            </para></li><li><para>
            Downloads the game build or Realtime script to the new instance and installs it. Statuses:
            <code>DOWNLOADING</code>, <code>VALIDATING</code>, <code>BUILDING</code>. 
            </para></li><li><para>
            Starts launching server processes on the instance. If the fleet is configured to run
            multiple server processes per instance, Amazon GameLift staggers each process launch
            by a few seconds. Status: <code>ACTIVATING</code>.
            </para></li><li><para>
            Sets the fleet's status to <code>ACTIVE</code> as soon as one server process is ready
            to host a game session.
            </para></li></ul><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">Setting
            Up Fleets</a></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-creating-debug.html#fleets-creating-debug-creation">Debug
            Fleet Creation Issues</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateFleet</a></para></li><li><para><a>ListFleets</a></para></li><li><para><a>DeleteFleet</a></para></li><li><para><a>DescribeFleetAttributes</a></para></li><li><para><a>UpdateFleetAttributes</a></para></li><li><para><a>StartFleetActions</a> or <a>StopFleetActions</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.BuildId">
            <summary>
            <para>
            <para>A unique identifier for a build to be deployed on the new fleet. You can use either
            the build ID or ARN value. The custom game server build must have been successfully
            uploaded to Amazon GameLift and be in a <code>READY</code> status. This fleet setting
            cannot be changed once the fleet is created. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.CertificateConfiguration_CertificateType">
            <summary>
            <para>
            <para>Indicates whether a TLS/SSL certificate was generated for a fleet. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.Description">
            <summary>
            <para>
            <para>A human-readable description of a fleet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.EC2InboundPermission">
            <summary>
            <para>
            <para>Range of IP addresses and port settings that permit inbound traffic to access game
            sessions that are running on the fleet. For fleets using a custom game build, this
            parameter is required before game sessions running on the fleet can accept connections.
            For Realtime Servers fleets, Amazon GameLift automatically sets TCP and UDP ranges
            for use by the Realtime servers. You can specify multiple permission settings or add
            more by updating the fleet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.EC2InstanceType">
            <summary>
            <para>
            <para>The name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance
            type determines the computing resources of each instance in the fleet, including CPU,
            memory, storage, and networking capacity. Amazon GameLift supports the following EC2
            instance types. See <a href="http://aws.amazon.com/ec2/instance-types/">Amazon EC2
            Instance Types</a> for detailed descriptions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.FleetType">
            <summary>
            <para>
            <para>Indicates whether to use On-Demand instances or Spot instances for this fleet. If
            empty, the default is <code>ON_DEMAND</code>. Both categories of instances use identical
            hardware and configurations based on the instance type selected for this fleet. Learn
            more about <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-ec2-instances.html#gamelift-ec2-instances-spot">
            On-Demand versus Spot Instances</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.RuntimeConfiguration_GameSessionActivationTimeoutSecond">
            <summary>
            <para>
            <para>The maximum amount of time (in seconds) that a game session can remain in status <code>ACTIVATING</code>.
            If the game session is not active before the timeout, activation is terminated and
            the game session status is changed to <code>TERMINATED</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.InstanceRoleArn">
            <summary>
            <para>
            <para>A unique identifier for an AWS IAM role that manages access to your AWS services.
            With an instance role ARN set, any application that runs on an instance in this fleet
            can assume the role, including install scripts, server processes, and daemons (background
            processes). Create a role or look up a role's ARN from the <a href="https://console.aws.amazon.com/iam/">IAM
            dashboard</a> in the AWS Management Console. Learn more about using on-box credentials
            for your game servers at <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-resources.html">
            Access external resources from a game server</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.LogPath">
            <summary>
            <para>
            <para>This parameter is no longer used. Instead, to specify where Amazon GameLift should
            store log files once a server process shuts down, use the Amazon GameLift server API
            <code>ProcessReady()</code> and specify one or more directory paths in <code>logParameters</code>.
            See more information in the <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api-ref.html#gamelift-sdk-server-api-ref-dataypes-process">Server
            API Reference</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.RuntimeConfiguration_MaxConcurrentGameSessionActivation">
            <summary>
            <para>
            <para>The maximum number of game sessions with status <code>ACTIVATING</code> to allow on
            an instance simultaneously. This setting limits the amount of instance resources that
            can be used for new game activations at any one time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.MetricGroup">
            <summary>
            <para>
            <para>The name of an Amazon CloudWatch metric group to add this fleet to. A metric group
            aggregates the metrics for all fleets in the group. Specify an existing metric group
            name, or provide a new name to create a new metric group. A fleet can only be included
            in one metric group at a time. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.Name">
            <summary>
            <para>
            <para>A descriptive label that is associated with a fleet. Fleet names do not need to be
            unique.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.NewGameSessionProtectionPolicy">
            <summary>
            <para>
            <para>A game session protection policy to apply to all instances in this fleet. If this
            parameter is not set, instances in this fleet default to no protection. You can change
            a fleet's protection policy using <a>UpdateFleetAttributes</a>, but this change will
            only affect sessions created after the policy change. You can also set protection
            for individual instances using <a>UpdateGameSession</a>.</para><ul><li><para><b>NoProtection</b> - The game session can be terminated during a scale-down event.</para></li><li><para><b>FullProtection</b> - If the game session is in an <code>ACTIVE</code> status,
            it cannot be terminated during a scale-down event.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.ResourceCreationLimitPolicy_NewGameSessionsPerCreator">
            <summary>
            <para>
            <para>The maximum number of game sessions that an individual can create during the policy
            period. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.PeerVpcAwsAccountId">
            <summary>
            <para>
            <para>A unique identifier for the AWS account with the VPC that you want to peer your Amazon
            GameLift fleet with. You can find your account ID in the AWS Management Console under
            account settings. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.PeerVpcId">
            <summary>
            <para>
            <para>A unique identifier for a VPC with resources to be accessed by your Amazon GameLift
            fleet. The VPC must be in the same Region as your fleet. To look up a VPC ID, use
            the <a href="https://console.aws.amazon.com/vpc/">VPC Dashboard</a> in the AWS Management
            Console. Learn more about VPC peering in <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/vpc-peering.html">VPC
            Peering with Amazon GameLift Fleets</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.ResourceCreationLimitPolicy_PolicyPeriodInMinute">
            <summary>
            <para>
            <para>The time span used in evaluating the resource creation limit policy. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.ScriptId">
            <summary>
            <para>
            <para>A unique identifier for a Realtime script to be deployed on the new fleet. You can
            use either the script ID or ARN value. The Realtime script must have been successfully
            uploaded to Amazon GameLift. This fleet setting cannot be changed once the fleet is
            created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.ServerLaunchParameter">
            <summary>
            <para>
            <para>This parameter is no longer used. Instead, specify server launch parameters in the
            <code>RuntimeConfiguration</code> parameter. (Requests that specify a server launch
            path and launch parameters instead of a runtime configuration will continue to work.)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.ServerLaunchPath">
            <summary>
            <para>
            <para>This parameter is no longer used. Instead, specify a server launch path using the
            <code>RuntimeConfiguration</code> parameter. Requests that specify a server launch
            path and launch parameters instead of a runtime configuration will continue to work.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.RuntimeConfiguration_ServerProcess">
            <summary>
            <para>
            <para>A collection of server process configurations that describe which server processes
            to run on each instance in a fleet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.Tag">
            <summary>
            <para>
            <para>A list of labels to assign to the new fleet resource. Tags are developer-defined key-value
            pairs. Tagging AWS resources are useful for resource management, access management
            and cost allocation. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">
            Tagging AWS Resources</a> in the <i>AWS General Reference</i>. Once the resource is
            created, you can use <a>TagResource</a>, <a>UntagResource</a>, and <a>ListTagsForResource</a>
            to add, remove, and view tags. The maximum tag limit may be lower than stated. See
            the AWS General Reference for actual tagging limits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FleetAttributes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.CreateFleetResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.CreateFleetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BuildId parameter.
            The -PassThru parameter is deprecated, use -Select '^BuildId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLFleetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.NewGMLGameServerGroupCmdlet">
            <summary>
            <b>This action is part of Amazon GameLift FleetIQ with game server groups, which
            is in preview release and is subject to change.</b><para>
            Creates a GameLift FleetIQ game server group to manage a collection of EC2 instances
            for game hosting. In addition to creating the game server group, this action also
            creates an Auto Scaling group in your AWS account and establishes a link between the
            two groups. You have full control over configuration of the Auto Scaling group, but
            GameLift FleetIQ routinely certain Auto Scaling group properties in order to optimize
            the group's instances for low-cost game hosting. You can view the status of your game
            server groups in the GameLift Console. Game server group metrics and events are emitted
            to Amazon CloudWatch.
            </para><para>
            Prior creating a new game server group, you must set up the following: 
            </para><ul><li><para>
            An EC2 launch template. The template provides configuration settings for a set of
            EC2 instances and includes the game server build that you want to deploy and run on
            each instance. For more information on creating a launch template, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html">
            Launching an Instance from a Launch Template</a> in the <i>Amazon EC2 User Guide</i>.
            
            </para></li><li><para>
            An IAM role. The role sets up limited access to your AWS account, allowing GameLift
            FleetIQ to create and manage the EC2 Auto Scaling group, get instance data, and emit
            metrics and events to CloudWatch. For more information on setting up an IAM permissions
            policy with principal access for GameLift, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-bucket-user-policy-specifying-principal-intro.html">
            Specifying a Principal in a Policy</a> in the <i>Amazon S3 Developer Guide</i>.
            </para></li></ul><para>
            To create a new game server group, provide a name and specify the IAM role and EC2
            launch template. You also need to provide a list of instance types to be used in the
            group and set initial maximum and minimum limits on the group's instance count. You
            can optionally set an autoscaling policy with target tracking based on a GameLift
            FleetIQ metric.
            </para><para>
            Once the game server group and corresponding Auto Scaling group are created, you have
            full access to change the Auto Scaling group's configuration as needed. Keep in mind,
            however, that some properties are periodically updated by GameLift FleetIQ as it balances
            the group's instances based on availability and cost.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gsg-intro.html">GameLift
            FleetIQ Guide</a></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gsg-asgroups.html">Updating
            a GameLift FleetIQ-Linked Auto Scaling Group</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateGameServerGroup</a></para></li><li><para><a>ListGameServerGroups</a></para></li><li><para><a>DescribeGameServerGroup</a></para></li><li><para><a>UpdateGameServerGroup</a></para></li><li><para><a>DeleteGameServerGroup</a></para></li><li><para><a>ResumeGameServerGroup</a></para></li><li><para><a>SuspendGameServerGroup</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameServerGroupCmdlet.BalancingStrategy">
            <summary>
            <para>
            <para>The fallback balancing method to use for the game server group when Spot instances
            in a Region become unavailable or are not viable for game hosting. Once triggered,
            this method remains active until Spot instances can once again be used. Method options
            include:</para><ul><li><para>SPOT_ONLY -- If Spot instances are unavailable, the game server group provides no
            hosting capacity. No new instances are started, and the existing nonviable Spot instances
            are terminated (once current gameplay ends) and not replaced.</para></li><li><para>SPOT_PREFERRED -- If Spot instances are unavailable, the game server group continues
            to provide hosting capacity by using On-Demand instances. Existing nonviable Spot
            instances are terminated (once current gameplay ends) and replaced with new On-Demand
            instances. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameServerGroupCmdlet.AutoScalingPolicy_EstimatedInstanceWarmup">
            <summary>
            <para>
            <para>Length of time, in seconds, it takes for a new instance to start new game server processes
            and register with GameLift FleetIQ. Specifying a warm-up time can be useful, particularly
            with game servers that take a long time to start up, because it avoids prematurely
            starting new instances </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameServerGroupCmdlet.GameServerGroupName">
            <summary>
            <para>
            <para>An identifier for the new game server group. This value is used to generate unique
            ARN identifiers for the EC2 Auto Scaling group and the GameLift FleetIQ game server
            group. The name must be unique per Region per AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameServerGroupCmdlet.GameServerProtectionPolicy">
            <summary>
            <para>
            <para>A flag that indicates whether instances in the game server group are protected from
            early termination. Unprotected instances that have active game servers running may
            by terminated during a scale-down event, causing players to be dropped from the game.
            Protected instances cannot be terminated while there are active game servers running.
            An exception to this is Spot Instances, which may be terminated by AWS regardless
            of protection status. This property is set to NO_PROTECTION by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameServerGroupCmdlet.InstanceDefinition">
            <summary>
            <para>
            <para>A set of EC2 instance types to use when creating instances in the group. The instance
            definitions must specify at least two different instance types that are supported
            by GameLift FleetIQ. For more information on instance types, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">EC2
            Instance Types</a> in the <i>Amazon EC2 User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameServerGroupCmdlet.LaunchTemplate_LaunchTemplateId">
            <summary>
            <para>
            <para>A unique identifier for an existing EC2 launch template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameServerGroupCmdlet.LaunchTemplate_LaunchTemplateName">
            <summary>
            <para>
            <para>A readable identifier for an existing EC2 launch template. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameServerGroupCmdlet.MaxSize">
            <summary>
            <para>
            <para>The maximum number of instances allowed in the EC2 Auto Scaling group. During autoscaling
            events, GameLift FleetIQ and EC2 do not scale up the group above this maximum.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameServerGroupCmdlet.MinSize">
            <summary>
            <para>
            <para>The minimum number of instances allowed in the EC2 Auto Scaling group. During autoscaling
            events, GameLift FleetIQ and EC2 do not scale down the group below this minimum. In
            production, this value should be set to at least 1.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameServerGroupCmdlet.RoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (<a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html">ARN</a>)
            for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.
            The submitted role is validated to ensure that it contains the necessary permissions
            for game server groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameServerGroupCmdlet.Tag">
            <summary>
            <para>
            <para>A list of labels to assign to the new game server group resource. Tags are developer-defined
            key-value pairs. Tagging AWS resources are useful for resource management, access
            management, and cost allocation. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">
            Tagging AWS Resources</a> in the <i>AWS General Reference</i>. Once the resource is
            created, you can use <a>TagResource</a>, <a>UntagResource</a>, and <a>ListTagsForResource</a>
            to add, remove, and view tags. The maximum tag limit may be lower than stated. See
            the AWS General Reference for actual tagging limits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameServerGroupCmdlet.TargetTrackingConfiguration_TargetValue">
            <summary>
            <para>
            <para>Desired value to use with a game server group target-based scaling policy. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameServerGroupCmdlet.LaunchTemplate_Version">
            <summary>
            <para>
            <para>The version of the EC2 launch template to use. If no version is specified, the default
            version will be used. EC2 allows you to specify a default version for a launch template,
            if none is set, the default is the first version created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameServerGroupCmdlet.VpcSubnet">
            <summary>
            <para>
            <para>A list of virtual private cloud (VPC) subnets to use with instances in the game server
            group. By default, all GameLift FleetIQ-supported availability zones are used; this
            parameter allows you to specify VPCs that you've set up. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameServerGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameServerGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.CreateGameServerGroupResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.CreateGameServerGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameServerGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameServerGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GameServerGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameServerGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionCmdlet">
            <summary>
            Creates a multiplayer game session for players. This action creates a game session
            record and assigns an available server process in the specified fleet to host the
            game session. A fleet must have an <code>ACTIVE</code> status before a game session
            can be created in it.
            
             
            <para>
            To create a game session, specify either fleet ID or alias ID and indicate a maximum
            number of players to allow in the game session. You can also provide a name and game-specific
            properties for this game session. If successful, a <a>GameSession</a> object is returned
            containing the game session properties and other settings you specified.
            </para><para><b>Idempotency tokens.</b> You can add a token that uniquely identifies game session
            requests. This is useful for ensuring that game session requests are idempotent. Multiple
            requests with the same idempotency token are processed only once; subsequent requests
            return the original result. All response values are the same with the exception of
            game session status, which may change.
            </para><para><b>Resource creation limits.</b> If you are creating a game session on a fleet with
            a resource creation limit policy in force, then you must specify a creator ID. Without
            this ID, Amazon GameLift has no way to evaluate the policy for this new game session
            request.
            </para><para><b>Player acceptance policy.</b> By default, newly created game sessions are open
            to new players. You can restrict new player access by using <a>UpdateGameSession</a>
            to change the game session's player session creation policy.
            </para><para><b>Game session logs.</b> Logs are retained for all active game sessions for 14 days.
            To access the logs, call <a>GetGameSessionLogUrl</a> to download the log files.
            </para><para><i>Available in Amazon GameLift Local.</i></para><ul><li><para><a>CreateGameSession</a></para></li><li><para><a>DescribeGameSessions</a></para></li><li><para><a>DescribeGameSessionDetails</a></para></li><li><para><a>SearchGameSessions</a></para></li><li><para><a>UpdateGameSession</a></para></li><li><para><a>GetGameSessionLogUrl</a></para></li><li><para>
            Game session placements
            </para><ul><li><para><a>StartGameSessionPlacement</a></para></li><li><para><a>DescribeGameSessionPlacement</a></para></li><li><para><a>StopGameSessionPlacement</a></para></li></ul></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionCmdlet.AliasId">
            <summary>
            <para>
            <para>A unique identifier for an alias associated with the fleet to create a game session
            in. You can use either the alias ID or ARN value. Each request must reference either
            a fleet ID or alias ID, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionCmdlet.CreatorId">
            <summary>
            <para>
            <para>A unique identifier for a player or entity creating the game session. This ID is used
            to enforce a resource protection policy (if one exists) that limits the number of
            concurrent active game sessions one player can have.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet to create a game session in. You can use either the
            fleet ID or ARN value. Each request must reference either a fleet ID or alias ID,
            but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionCmdlet.GameProperty">
            <summary>
            <para>
            <para>Set of custom properties for a game session, formatted as key:value pairs. These properties
            are passed to a game server process in the <a>GameSession</a> object with a request
            to start a new game session (see <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api.html#gamelift-sdk-server-startsession">Start
            a Game Session</a>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionCmdlet.GameSessionData">
            <summary>
            <para>
            <para>Set of custom game session properties, formatted as a single string value. This data
            is passed to a game server process in the <a>GameSession</a> object with a request
            to start a new game session (see <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api.html#gamelift-sdk-server-startsession">Start
            a Game Session</a>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionCmdlet.GameSessionId">
            <summary>
            <para>
            <para><i>This parameter is no longer preferred. Please use <code>IdempotencyToken</code>
            instead.</i> Custom string that uniquely identifies a request for a new game session.
            Maximum token length is 48 characters. If provided, this string is included in the
            new game session's ID. (A game session ARN has the following format: <code>arn:aws:gamelift:&lt;region&gt;::gamesession/&lt;fleet
            ID&gt;/&lt;custom ID string or idempotency token&gt;</code>.) </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionCmdlet.IdempotencyToken">
            <summary>
            <para>
            <para>Custom string that uniquely identifies a request for a new game session. Maximum token
            length is 48 characters. If provided, this string is included in the new game session's
            ID. (A game session ARN has the following format: <code>arn:aws:gamelift:&lt;region&gt;::gamesession/&lt;fleet
            ID&gt;/&lt;custom ID string or idempotency token&gt;</code>.) Idempotency tokens remain
            in use for 30 days after a game session has ended; game session objects are retained
            for this time period and then deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionCmdlet.MaximumPlayerSessionCount">
            <summary>
            <para>
            <para>The maximum number of players that can be connected simultaneously to the game session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionCmdlet.Name">
            <summary>
            <para>
            <para>A descriptive label that is associated with a game session. Session names do not need
            to be unique.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameSession'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.CreateGameSessionResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.CreateGameSessionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionQueueCmdlet">
            <summary>
            Establishes a new queue for processing requests to place new game sessions. A queue
            identifies where new game sessions can be hosted -- by specifying a list of destinations
            (fleets or aliases) -- and how long requests can wait in the queue before timing out.
            You can set up a queue to try to place game sessions on fleets in multiple Regions.
            To add placement requests to a queue, call <a>StartGameSessionPlacement</a> and reference
            the queue name.
            
             
            <para><b>Destination order.</b> When processing a request for a game session, Amazon GameLift
            tries each destination in order until it finds one with available resources to host
            the new game session. A queue's default order is determined by how destinations are
            listed. The default order is overridden when a game session placement request provides
            player latency information. Player latency information enables Amazon GameLift to
            prioritize destinations where players report the lowest average latency, as a result
            placing the new game session where the majority of players will have the best possible
            gameplay experience.
            </para><para><b>Player latency policies.</b> For placement requests containing player latency
            information, use player latency policies to protect individual players from very high
            latencies. With a latency cap, even when a destination can deliver a low latency for
            most players, the game is not placed where any individual player is reporting latency
            higher than a policy's maximum. A queue can have multiple latency policies, which
            are enforced consecutively starting with the policy with the lowest latency cap. Use
            multiple policies to gradually relax latency controls; for example, you might set
            a policy with a low latency cap for the first 60 seconds, a second policy with a higher
            cap for the next 60 seconds, etc. 
            </para><para>
            To create a new queue, provide a name, timeout value, a list of destinations and,
            if desired, a set of latency policies. If successful, a new queue object is returned.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/queues-design.html">
            Design a Game Session Queue</a></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/queues-creating.html">
            Create a Game Session Queue</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateGameSessionQueue</a></para></li><li><para><a>DescribeGameSessionQueues</a></para></li><li><para><a>UpdateGameSessionQueue</a></para></li><li><para><a>DeleteGameSessionQueue</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionQueueCmdlet.Destination">
            <summary>
            <para>
            <para>A list of fleets that can be used to fulfill game session placement requests in the
            queue. Fleets are identified by either a fleet ARN or a fleet alias ARN. Destinations
            are listed in default preference order.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionQueueCmdlet.Name">
            <summary>
            <para>
            <para>A descriptive label that is associated with game session queue. Queue names must be
            unique within each Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionQueueCmdlet.PlayerLatencyPolicy">
            <summary>
            <para>
            <para>A collection of latency policies to apply when processing game sessions placement
            requests with player latency information. Multiple policies are evaluated in order
            of the maximum latency value, starting with the lowest latency values. With just one
            policy, the policy is enforced at the start of the game session placement for the
            duration period. With multiple policies, each policy is enforced consecutively for
            its duration period. For example, a queue might enforce a 60-second policy followed
            by a 120-second policy, and then no policy for the remainder of the placement. A player
            latency policy must set a value for <code>MaximumIndividualPlayerLatencyMilliseconds</code>.
            If none is set, this API request fails.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionQueueCmdlet.Tag">
            <summary>
            <para>
            <para>A list of labels to assign to the new game session queue resource. Tags are developer-defined
            key-value pairs. Tagging AWS resources are useful for resource management, access
            management and cost allocation. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">
            Tagging AWS Resources</a> in the <i>AWS General Reference</i>. Once the resource is
            created, you can use <a>TagResource</a>, <a>UntagResource</a>, and <a>ListTagsForResource</a>
            to add, remove, and view tags. The maximum tag limit may be lower than stated. See
            the AWS General Reference for actual tagging limits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionQueueCmdlet.TimeoutInSecond">
            <summary>
            <para>
            <para>The maximum time, in seconds, that a new game session placement request remains in
            the queue. When a request exceeds this time, the game session placement changes to
            a <code>TIMED_OUT</code> status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionQueueCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameSessionQueue'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.CreateGameSessionQueueResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.CreateGameSessionQueueResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionQueueCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLGameSessionQueueCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingConfigurationCmdlet">
            <summary>
            Defines a new matchmaking configuration for use with FlexMatch. A matchmaking configuration
            sets out guidelines for matching players and getting the matches into games. You can
            set up multiple matchmaking configurations to handle the scenarios needed for your
            game. Each matchmaking ticket (<a>StartMatchmaking</a> or <a>StartMatchBackfill</a>)
            specifies a configuration for the match and provides player attributes to support
            the configuration being used. 
            
             
            <para>
            To create a matchmaking configuration, at a minimum you must specify the following:
            configuration name; a rule set that governs how to evaluate players and find acceptable
            matches; a game session queue to use when placing a new game session for the match;
            and the maximum time allowed for a matchmaking attempt.
            </para><para>
            There are two ways to track the progress of matchmaking tickets: (1) polling ticket
            status with <a>DescribeMatchmaking</a>; or (2) receiving notifications with Amazon
            Simple Notification Service (SNS). To use notifications, you first need to set up
            an SNS topic to receive the notifications, and provide the topic ARN in the matchmaking
            configuration. Since notifications promise only "best effort" delivery, we recommend
            calling <code>DescribeMatchmaking</code> if no notifications are received within 30
            seconds.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-configuration.html">
            Design a FlexMatch Matchmaker</a></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-notification.html">
            Setting up Notifications for Matchmaking</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateMatchmakingConfiguration</a></para></li><li><para><a>DescribeMatchmakingConfigurations</a></para></li><li><para><a>UpdateMatchmakingConfiguration</a></para></li><li><para><a>DeleteMatchmakingConfiguration</a></para></li><li><para><a>CreateMatchmakingRuleSet</a></para></li><li><para><a>DescribeMatchmakingRuleSets</a></para></li><li><para><a>ValidateMatchmakingRuleSet</a></para></li><li><para><a>DeleteMatchmakingRuleSet</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingConfigurationCmdlet.AcceptanceRequired">
            <summary>
            <para>
            <para>A flag that determines whether a match that was created with this configuration must
            be accepted by the matched players. To require acceptance, set to <code>TRUE</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingConfigurationCmdlet.AcceptanceTimeoutSecond">
            <summary>
            <para>
            <para>The length of time (in seconds) to wait for players to accept a proposed match. If
            any player rejects the match or fails to accept before the timeout, the ticket continues
            to look for an acceptable match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingConfigurationCmdlet.AdditionalPlayerCount">
            <summary>
            <para>
            <para>The number of player slots in a match to keep open for future players. For example,
            assume that the configuration's rule set specifies a match for a single 12-person
            team. If the additional player count is set to 2, only 10 players are initially selected
            for the match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingConfigurationCmdlet.BackfillMode">
            <summary>
            <para>
            <para>The method used to backfill game sessions that are created with this matchmaking configuration.
            Specify <code>MANUAL</code> when your game manages backfill requests manually or does
            not use the match backfill feature. Specify <code>AUTOMATIC</code> to have GameLift
            create a <a>StartMatchBackfill</a> request whenever a game session has one or more
            open slots. Learn more about manual and automatic backfill in <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-backfill.html">
            Backfill Existing Games with FlexMatch</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingConfigurationCmdlet.CustomEventData">
            <summary>
            <para>
            <para>Information to be added to all events related to this matchmaking configuration. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingConfigurationCmdlet.Description">
            <summary>
            <para>
            <para>A human-readable description of the matchmaking configuration. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingConfigurationCmdlet.GameProperty">
            <summary>
            <para>
            <para>A set of custom properties for a game session, formatted as key-value pairs. These
            properties are passed to a game server process in the <a>GameSession</a> object with
            a request to start a new game session (see <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api.html#gamelift-sdk-server-startsession">Start
            a Game Session</a>). This information is added to the new <a>GameSession</a> object
            that is created for a successful match. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingConfigurationCmdlet.GameSessionData">
            <summary>
            <para>
            <para>A set of custom game session properties, formatted as a single string value. This
            data is passed to a game server process in the <a>GameSession</a> object with a request
            to start a new game session (see <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api.html#gamelift-sdk-server-startsession">Start
            a Game Session</a>). This information is added to the new <a>GameSession</a> object
            that is created for a successful match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingConfigurationCmdlet.GameSessionQueueArn">
            <summary>
            <para>
            <para>Amazon Resource Name (<a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>)
            that is assigned to a GameLift game session queue resource and uniquely identifies
            it. ARNs are unique across all Regions. These queues are used when placing game sessions
            for matches that are created with this matchmaking configuration. Queues can be located
            in any Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingConfigurationCmdlet.Name">
            <summary>
            <para>
            <para>A unique identifier for a matchmaking configuration. This name is used to identify
            the configuration associated with a matchmaking request or ticket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingConfigurationCmdlet.NotificationTarget">
            <summary>
            <para>
            <para>An SNS topic ARN that is set up to receive matchmaking notifications.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingConfigurationCmdlet.RequestTimeoutSecond">
            <summary>
            <para>
            <para>The maximum duration, in seconds, that a matchmaking ticket can remain in process
            before timing out. Requests that fail due to timing out can be resubmitted as needed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingConfigurationCmdlet.RuleSetName">
            <summary>
            <para>
            <para>A unique identifier for a matchmaking rule set to use with this configuration. You
            can use either the rule set name or ARN value. A matchmaking configuration can only
            use rule sets that are defined in the same Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingConfigurationCmdlet.Tag">
            <summary>
            <para>
            <para>A list of labels to assign to the new matchmaking configuration resource. Tags are
            developer-defined key-value pairs. Tagging AWS resources are useful for resource management,
            access management and cost allocation. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">
            Tagging AWS Resources</a> in the <i>AWS General Reference</i>. Once the resource is
            created, you can use <a>TagResource</a>, <a>UntagResource</a>, and <a>ListTagsForResource</a>
            to add, remove, and view tags. The maximum tag limit may be lower than stated. See
            the AWS General Reference for actual tagging limits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Configuration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.CreateMatchmakingConfigurationResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.CreateMatchmakingConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RuleSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^RuleSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingRuleSetCmdlet">
            <summary>
            Creates a new rule set for FlexMatch matchmaking. A rule set describes the type of
            match to create, such as the number and size of teams. It also sets the parameters
            for acceptable player matches, such as minimum skill level or character type. A rule
            set is used by a <a>MatchmakingConfiguration</a>. 
            
             
            <para>
            To create a matchmaking rule set, provide unique rule set name and the rule set body
            in JSON format. Rule sets must be defined in the same Region as the matchmaking configuration
            they are used with.
            </para><para>
            Since matchmaking rule sets cannot be edited, it is a good idea to check the rule
            set syntax using <a>ValidateMatchmakingRuleSet</a> before creating a new rule set.
            </para><para><b>Learn more</b></para><ul><li><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-rulesets.html">Build
            a Rule Set</a></para></li><li><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-configuration.html">Design
            a Matchmaker</a></para></li><li><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-intro.html">Matchmaking
            with FlexMatch</a></para></li></ul><para><b>Related operations</b></para><ul><li><para><a>CreateMatchmakingConfiguration</a></para></li><li><para><a>DescribeMatchmakingConfigurations</a></para></li><li><para><a>UpdateMatchmakingConfiguration</a></para></li><li><para><a>DeleteMatchmakingConfiguration</a></para></li><li><para><a>CreateMatchmakingRuleSet</a></para></li><li><para><a>DescribeMatchmakingRuleSets</a></para></li><li><para><a>ValidateMatchmakingRuleSet</a></para></li><li><para><a>DeleteMatchmakingRuleSet</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingRuleSetCmdlet.Name">
            <summary>
            <para>
            <para>A unique identifier for a matchmaking rule set. A matchmaking configuration identifies
            the rule set it uses by this name value. Note that the rule set name is different
            from the optional <code>name</code> field in the rule set body.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingRuleSetCmdlet.RuleSetBody">
            <summary>
            <para>
            <para>A collection of matchmaking rules, formatted as a JSON string. Comments are not allowed
            in JSON, but most elements support a description field.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingRuleSetCmdlet.Tag">
            <summary>
            <para>
            <para>A list of labels to assign to the new matchmaking rule set resource. Tags are developer-defined
            key-value pairs. Tagging AWS resources are useful for resource management, access
            management and cost allocation. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">
            Tagging AWS Resources</a> in the <i>AWS General Reference</i>. Once the resource is
            created, you can use <a>TagResource</a>, <a>UntagResource</a>, and <a>ListTagsForResource</a>
            to add, remove, and view tags. The maximum tag limit may be lower than stated. See
            the AWS General Reference for actual tagging limits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingRuleSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RuleSet'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.CreateMatchmakingRuleSetResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.CreateMatchmakingRuleSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingRuleSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLMatchmakingRuleSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.NewGMLPlayerSessionCmdlet">
            <summary>
            Reserves open slots in a game session for a group of players. Before players can be
            added, a game session must have an <code>ACTIVE</code> status, have a creation policy
            of <code>ALLOW_ALL</code>, and have an open player slot. To add a single player to
            a game session, use <a>CreatePlayerSession</a>. When a player connects to the game
            server and references a player session ID, the game server contacts the Amazon GameLift
            service to validate the player reservation and accept the player.
            
             
            <para>
            To create player sessions, specify a game session ID, a list of player IDs, and optionally
            a set of player data strings. If successful, a slot is reserved in the game session
            for each player and a set of new <a>PlayerSession</a> objects is returned. Player
            sessions cannot be updated.
            </para><para><i>Available in Amazon GameLift Local.</i></para><ul><li><para><a>CreatePlayerSession</a></para></li><li><para><a>CreatePlayerSessions</a></para></li><li><para><a>DescribePlayerSessions</a></para></li><li><para>
            Game session placements
            </para><ul><li><para><a>StartGameSessionPlacement</a></para></li><li><para><a>DescribeGameSessionPlacement</a></para></li><li><para><a>StopGameSessionPlacement</a></para></li></ul></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLPlayerSessionCmdlet.GameSessionId">
            <summary>
            <para>
            <para>A unique identifier for the game session to add players to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLPlayerSessionCmdlet.PlayerDataMap">
            <summary>
            <para>
            <para>Map of string pairs, each specifying a player ID and a set of developer-defined information
            related to the player. Amazon GameLift does not use this data, so it can be formatted
            as needed for use in the game. Player data strings for player IDs not included in
            the <code>PlayerIds</code> parameter are ignored. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLPlayerSessionCmdlet.PlayerId">
            <summary>
            <para>
            <para>List of unique identifiers for the players to be added.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLPlayerSessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PlayerSessions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.CreatePlayerSessionsResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.CreatePlayerSessionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLPlayerSessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameSessionId parameter.
            The -PassThru parameter is deprecated, use -Select '^GameSessionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLPlayerSessionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.NewGMLScriptCmdlet">
            <summary>
            Creates a new script record for your Realtime Servers script. Realtime scripts are
            JavaScript that provide configuration settings and optional custom game logic for
            your game. The script is deployed when you create a Realtime Servers fleet to host
            your game sessions. Script logic is executed during an active game session. 
            
             
            <para>
            To create a new script record, specify a script name and provide the script file(s).
            The script files and all dependencies must be zipped into a single file. You can pull
            the zip file from either of these locations: 
            </para><ul><li><para>
            A locally available directory. Use the <i>ZipFile</i> parameter for this option.
            </para></li><li><para>
            An Amazon Simple Storage Service (Amazon S3) bucket under your AWS account. Use the
            <i>StorageLocation</i> parameter for this option. You'll need to have an Identity
            Access Management (IAM) role that allows the Amazon GameLift service to access your
            S3 bucket. 
            </para></li></ul><para>
            If the call is successful, a new script record is created with a unique script ID.
            If the script file is provided as a local file, the file is uploaded to an Amazon
            GameLift-owned S3 bucket and the script record's storage location reflects this location.
            If the script file is provided as an S3 bucket, Amazon GameLift accesses the file
            at this storage location as needed for deployment.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/realtime-intro.html">Amazon
            GameLift Realtime Servers</a></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/setting-up-role.html">Set
            Up a Role for Amazon GameLift Access</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateScript</a></para></li><li><para><a>ListScripts</a></para></li><li><para><a>DescribeScript</a></para></li><li><para><a>UpdateScript</a></para></li><li><para><a>DeleteScript</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLScriptCmdlet.StorageLocation_Bucket">
            <summary>
            <para>
            <para>An S3 bucket identifier. This is the name of the S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLScriptCmdlet.StorageLocation_Key">
            <summary>
            <para>
            <para>The name of the zip file that contains the build files or script files. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLScriptCmdlet.Name">
            <summary>
            <para>
            <para>A descriptive label that is associated with a script. Script names do not need to
            be unique. You can use <a>UpdateScript</a> to change this value later. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLScriptCmdlet.StorageLocation_ObjectVersion">
            <summary>
            <para>
            <para>The version of the file, if object versioning is turned on for the bucket. Amazon
            GameLift uses this information when retrieving files from an S3 bucket that you own.
            Use this parameter to specify a specific version of the file. If not set, the latest
            version of the file is retrieved. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLScriptCmdlet.StorageLocation_RoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (<a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html">ARN</a>)
            for an IAM role that allows Amazon GameLift to access the S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLScriptCmdlet.Tag">
            <summary>
            <para>
            <para>A list of labels to assign to the new script resource. Tags are developer-defined
            key-value pairs. Tagging AWS resources are useful for resource management, access
            management and cost allocation. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">
            Tagging AWS Resources</a> in the <i>AWS General Reference</i>. Once the resource is
            created, you can use <a>TagResource</a>, <a>UntagResource</a>, and <a>ListTagsForResource</a>
            to add, remove, and view tags. The maximum tag limit may be lower than stated. See
            the AWS General Reference for actual tagging limits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLScriptCmdlet.Version">
            <summary>
            <para>
            <para>The version that is associated with a build or script. Version strings do not need
            to be unique. You can use <a>UpdateScript</a> to change this value later. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLScriptCmdlet.ZipFile">
            <summary>
            <para>
            <para>A data object containing your Realtime scripts and dependencies as a zip file. The
            zip file can have one or multiple files. Maximum size of a zip file is 5 MB.</para><para>When using the AWS CLI tool to create a script, this parameter is set to the zip file
            name. It must be prepended with the string "fileb://" to indicate that the file data
            is a binary object. For example: <code>--zip-file fileb://myRealtimeScript.zip</code>.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLScriptCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Script'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.CreateScriptResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.CreateScriptResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLScriptCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLScriptCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.NewGMLVpcPeeringAuthorizationCmdlet">
            <summary>
            Requests authorization to create or delete a peer connection between the VPC for your
            Amazon GameLift fleet and a virtual private cloud (VPC) in your AWS account. VPC peering
            enables the game servers on your fleet to communicate directly with other AWS resources.
            Once you've received authorization, call <a>CreateVpcPeeringConnection</a> to establish
            the peering connection. For more information, see <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/vpc-peering.html">VPC
            Peering with Amazon GameLift Fleets</a>.
            
             
            <para>
            You can peer with VPCs that are owned by any AWS account you have access to, including
            the account that you use to manage your Amazon GameLift fleets. You cannot peer with
            VPCs that are in different Regions.
            </para><para>
            To request authorization to create a connection, call this operation from the AWS
            account with the VPC that you want to peer to your Amazon GameLift fleet. For example,
            to enable your game servers to retrieve data from a DynamoDB table, use the account
            that manages that DynamoDB resource. Identify the following values: (1) The ID of
            the VPC that you want to peer with, and (2) the ID of the AWS account that you use
            to manage Amazon GameLift. If successful, VPC peering is authorized for the specified
            VPC. 
            </para><para>
            To request authorization to delete a connection, call this operation from the AWS
            account with the VPC that is peered with your Amazon GameLift fleet. Identify the
            following values: (1) VPC ID that you want to delete the peering connection for, and
            (2) ID of the AWS account that you use to manage Amazon GameLift. 
            </para><para>
            The authorization remains valid for 24 hours unless it is canceled by a call to <a>DeleteVpcPeeringAuthorization</a>.
            You must create or delete the peering connection while the authorization is valid.
            
            </para><ul><li><para><a>CreateVpcPeeringAuthorization</a></para></li><li><para><a>DescribeVpcPeeringAuthorizations</a></para></li><li><para><a>DeleteVpcPeeringAuthorization</a></para></li><li><para><a>CreateVpcPeeringConnection</a></para></li><li><para><a>DescribeVpcPeeringConnections</a></para></li><li><para><a>DeleteVpcPeeringConnection</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLVpcPeeringAuthorizationCmdlet.GameLiftAwsAccountId">
            <summary>
            <para>
            <para>A unique identifier for the AWS account that you use to manage your Amazon GameLift
            fleet. You can find your Account ID in the AWS Management Console under account settings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLVpcPeeringAuthorizationCmdlet.PeerVpcId">
            <summary>
            <para>
            <para>A unique identifier for a VPC with resources to be accessed by your Amazon GameLift
            fleet. The VPC must be in the same Region where your fleet is deployed. Look up a
            VPC ID using the <a href="https://console.aws.amazon.com/vpc/">VPC Dashboard</a> in
            the AWS Management Console. Learn more about VPC peering in <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/vpc-peering.html">VPC
            Peering with Amazon GameLift Fleets</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLVpcPeeringAuthorizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VpcPeeringAuthorization'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.CreateVpcPeeringAuthorizationResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.CreateVpcPeeringAuthorizationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLVpcPeeringAuthorizationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PeerVpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^PeerVpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLVpcPeeringAuthorizationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.NewGMLVpcPeeringConnectionCmdlet">
            <summary>
            Establishes a VPC peering connection between a virtual private cloud (VPC) in an AWS
            account with the VPC for your Amazon GameLift fleet. VPC peering enables the game
            servers on your fleet to communicate directly with other AWS resources. You can peer
            with VPCs in any AWS account that you have access to, including the account that you
            use to manage your Amazon GameLift fleets. You cannot peer with VPCs that are in different
            Regions. For more information, see <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/vpc-peering.html">VPC
            Peering with Amazon GameLift Fleets</a>.
            
             
            <para>
            Before calling this operation to establish the peering connection, you first need
            to call <a>CreateVpcPeeringAuthorization</a> and identify the VPC you want to peer
            with. Once the authorization for the specified VPC is issued, you have 24 hours to
            establish the connection. These two operations handle all tasks necessary to peer
            the two VPCs, including acceptance, updating routing tables, etc. 
            </para><para>
            To establish the connection, call this operation from the AWS account that is used
            to manage the Amazon GameLift fleets. Identify the following values: (1) The ID of
            the fleet you want to be enable a VPC peering connection for; (2) The AWS account
            with the VPC that you want to peer with; and (3) The ID of the VPC you want to peer
            with. This operation is asynchronous. If successful, a <a>VpcPeeringConnection</a>
            request is created. You can use continuous polling to track the request's status using
            <a>DescribeVpcPeeringConnections</a>, or by monitoring fleet events for success or
            failure using <a>DescribeFleetEvents</a>. 
            </para><ul><li><para><a>CreateVpcPeeringAuthorization</a></para></li><li><para><a>DescribeVpcPeeringAuthorizations</a></para></li><li><para><a>DeleteVpcPeeringAuthorization</a></para></li><li><para><a>CreateVpcPeeringConnection</a></para></li><li><para><a>DescribeVpcPeeringConnections</a></para></li><li><para><a>DeleteVpcPeeringConnection</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLVpcPeeringConnectionCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet. You can use either the fleet ID or ARN value. This
            tells Amazon GameLift which GameLift VPC to peer with. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLVpcPeeringConnectionCmdlet.PeerVpcAwsAccountId">
            <summary>
            <para>
            <para>A unique identifier for the AWS account with the VPC that you want to peer your Amazon
            GameLift fleet with. You can find your Account ID in the AWS Management Console under
            account settings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLVpcPeeringConnectionCmdlet.PeerVpcId">
            <summary>
            <para>
            <para>A unique identifier for a VPC with resources to be accessed by your Amazon GameLift
            fleet. The VPC must be in the same Region where your fleet is deployed. Look up a
            VPC ID using the <a href="https://console.aws.amazon.com/vpc/">VPC Dashboard</a> in
            the AWS Management Console. Learn more about VPC peering in <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/vpc-peering.html">VPC
            Peering with Amazon GameLift Fleets</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLVpcPeeringConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.CreateVpcPeeringConnectionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLVpcPeeringConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.NewGMLVpcPeeringConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.RegisterGMLGameServerCmdlet">
            <summary>
            <b>This action is part of Amazon GameLift FleetIQ with game server groups, which
            is in preview release and is subject to change.</b><para>
            Creates a new game server resource and notifies GameLift FleetIQ that the game server
            is ready to host gameplay and players. This action is called by a game server process
            that is running on an instance in a game server group. Registering game servers enables
            GameLift FleetIQ to track available game servers and enables game clients and services
            to claim a game server for a new game session. 
            </para><para>
            To register a game server, identify the game server group and instance where the game
            server is running, and provide a unique identifier for the game server. You can also
            include connection and game server data; when a game client or service requests a
            game server by calling <a>ClaimGameServer</a>, this information is returned in response.
            </para><para>
            Once a game server is successfully registered, it is put in status AVAILABLE. A request
            to register a game server may fail if the instance it is in the process of shutting
            down as part of instance rebalancing or scale-down activity. 
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gsg-intro.html">GameLift
            FleetIQ Guide</a></para><para><b>Related operations</b></para><ul><li><para><a>RegisterGameServer</a></para></li><li><para><a>ListGameServers</a></para></li><li><para><a>ClaimGameServer</a></para></li><li><para><a>DescribeGameServer</a></para></li><li><para><a>UpdateGameServer</a></para></li><li><para><a>DeregisterGameServer</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RegisterGMLGameServerCmdlet.ConnectionInfo">
            <summary>
            <para>
            <para>Information needed to make inbound client connections to the game server. This might
            include IP address and port, DNS name, etc.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RegisterGMLGameServerCmdlet.CustomSortKey">
            <summary>
            <para>
            <para>A game server tag that can be used to request sorted lists of game servers using <a>ListGameServers</a>.
            Custom sort keys are developer-defined based on how you want to organize the retrieved
            game server information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RegisterGMLGameServerCmdlet.GameServerData">
            <summary>
            <para>
            <para>A set of custom game server properties, formatted as a single string value. This data
            is passed to a game client or service when it requests information on a game servers
            using <a>ListGameServers</a> or <a>ClaimGameServer</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RegisterGMLGameServerCmdlet.GameServerGroupName">
            <summary>
            <para>
            <para>An identifier for the game server group where the game server is running. You can
            use either the <a>GameServerGroup</a> name or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RegisterGMLGameServerCmdlet.GameServerId">
            <summary>
            <para>
            <para>A custom string that uniquely identifies the new game server. Game server IDs are
            developer-defined and must be unique across all game server groups in your AWS account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RegisterGMLGameServerCmdlet.InstanceId">
            <summary>
            <para>
            <para>The unique identifier for the instance where the game server is running. This ID is
            available in the instance metadata.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RegisterGMLGameServerCmdlet.Tag">
            <summary>
            <para>
            <para>A list of labels to assign to the new game server resource. Tags are developer-defined
            key-value pairs. Tagging AWS resources are useful for resource management, access
            management, and cost allocation. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">
            Tagging AWS Resources</a> in the <i>AWS General Reference</i>. Once the resource is
            created, you can use <a>TagResource</a>, <a>UntagResource</a>, and <a>ListTagsForResource</a>
            to add, remove, and view tags. The maximum tag limit may be lower than stated. See
            the AWS General Reference for actual tagging limits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RegisterGMLGameServerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameServer'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.RegisterGameServerResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.RegisterGameServerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RegisterGMLGameServerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^GameServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RegisterGMLGameServerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.RemoveGMLAliasCmdlet">
            <summary>
            Deletes an alias. This action removes all record of the alias. Game clients attempting
            to access a server process using the deleted alias receive an error. To delete an
            alias, specify the alias ID to be deleted.
            
             <ul><li><para><a>CreateAlias</a></para></li><li><para><a>ListAliases</a></para></li><li><para><a>DescribeAlias</a></para></li><li><para><a>UpdateAlias</a></para></li><li><para><a>DeleteAlias</a></para></li><li><para><a>ResolveAlias</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLAliasCmdlet.AliasId">
            <summary>
            <para>
            <para>A unique identifier of the alias that you want to delete. You can use either the alias
            ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DeleteAliasResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AliasId parameter.
            The -PassThru parameter is deprecated, use -Select '^AliasId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.RemoveGMLBuildCmdlet">
            <summary>
            Deletes a build. This action permanently deletes the build resource and any uploaded
            build files. Deleting a build does not affect the status of any active fleets using
            the build, but you can no longer create new fleets with the deleted build.
            
             
            <para>
            To delete a build, specify the build ID. 
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-build-intro.html">
            Upload a Custom Server Build</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateBuild</a></para></li><li><para><a>ListBuilds</a></para></li><li><para><a>DescribeBuild</a></para></li><li><para><a>UpdateBuild</a></para></li><li><para><a>DeleteBuild</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLBuildCmdlet.BuildId">
            <summary>
            <para>
            <para>A unique identifier for a build to delete. You can use either the build ID or ARN
            value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLBuildCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DeleteBuildResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLBuildCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BuildId parameter.
            The -PassThru parameter is deprecated, use -Select '^BuildId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLBuildCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.RemoveGMLFleetCmdlet">
            <summary>
            Deletes everything related to a fleet. Before deleting a fleet, you must set the fleet's
            desired capacity to zero. See <a>UpdateFleetCapacity</a>.
            
             
            <para>
            If the fleet being deleted has a VPC peering connection, you first need to get a valid
            authorization (good for 24 hours) by calling <a>CreateVpcPeeringAuthorization</a>.
            You do not need to explicitly delete the VPC peering connection--this is done as part
            of the delete fleet process.
            </para><para>
            This action removes the fleet and its resources. Once a fleet is deleted, you can
            no longer use any of the resource in that fleet.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">Setting
            up GameLift Fleets</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateFleet</a></para></li><li><para><a>ListFleets</a></para></li><li><para><a>DeleteFleet</a></para></li><li><para><a>DescribeFleetAttributes</a></para></li><li><para><a>UpdateFleetAttributes</a></para></li><li><para><a>StartFleetActions</a> or <a>StopFleetActions</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLFleetCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet to be deleted. You can use either the fleet ID or
            ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLFleetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DeleteFleetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLFleetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLFleetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.RemoveGMLGameServerGroupCmdlet">
            <summary>
            <b>This action is part of Amazon GameLift FleetIQ with game server groups, which
            is in preview release and is subject to change.</b><para>
            Terminates a game server group and permanently deletes the game server group record.
            You have several options for how these resources are impacted when deleting the game
            server group. Depending on the type of delete action selected, this action may affect
            three types of resources: the game server group, the corresponding Auto Scaling group,
            and all game servers currently running in the group. 
            </para><para>
            To delete a game server group, identify the game server group to delete and specify
            the type of delete action to initiate. Game server groups can only be deleted if they
            are in ACTIVE or ERROR status.
            </para><para>
            If the delete request is successful, a series of actions are kicked off. The game
            server group status is changed to DELETE_SCHEDULED, which prevents new game servers
            from being registered and stops autoscaling activity. Once all game servers in the
            game server group are de-registered, GameLift FleetIQ can begin deleting resources.
            If any of the delete actions fail, the game server group is placed in ERROR status.
            </para><para>
            GameLift FleetIQ emits delete events to Amazon CloudWatch.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gsg-intro.html">GameLift
            FleetIQ Guide</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateGameServerGroup</a></para></li><li><para><a>ListGameServerGroups</a></para></li><li><para><a>DescribeGameServerGroup</a></para></li><li><para><a>UpdateGameServerGroup</a></para></li><li><para><a>DeleteGameServerGroup</a></para></li><li><para><a>ResumeGameServerGroup</a></para></li><li><para><a>SuspendGameServerGroup</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLGameServerGroupCmdlet.DeleteOption">
            <summary>
            <para>
            <para>The type of delete to perform. Options include:</para><ul><li><para>SAFE_DELETE – Terminates the game server group and EC2 Auto Scaling group only when
            it has no game servers that are in IN_USE status.</para></li><li><para>FORCE_DELETE – Terminates the game server group, including all active game servers
            regardless of their utilization status, and the EC2 Auto Scaling group. </para></li><li><para>RETAIN – Does a safe delete of the game server group but retains the EC2 Auto Scaling
            group as is.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLGameServerGroupCmdlet.GameServerGroupName">
            <summary>
            <para>
            <para>The unique identifier of the game server group to delete. Use either the <a>GameServerGroup</a>
            name or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLGameServerGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameServerGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DeleteGameServerGroupResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.DeleteGameServerGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLGameServerGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameServerGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GameServerGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLGameServerGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.RemoveGMLGameSessionQueueCmdlet">
            <summary>
            Deletes a game session queue. This action means that any <a>StartGameSessionPlacement</a>
            requests that reference this queue will fail. To delete a queue, specify the queue
            name.
            
             
            <para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/queues-intro.html">
            Using Multi-Region Queues</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateGameSessionQueue</a></para></li><li><para><a>DescribeGameSessionQueues</a></para></li><li><para><a>UpdateGameSessionQueue</a></para></li><li><para><a>DeleteGameSessionQueue</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLGameSessionQueueCmdlet.Name">
            <summary>
            <para>
            <para>A descriptive label that is associated with game session queue. Queue names must be
            unique within each Region. You can use either the queue ID or ARN value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLGameSessionQueueCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DeleteGameSessionQueueResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLGameSessionQueueCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLGameSessionQueueCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.RemoveGMLMatchmakingConfigurationCmdlet">
            <summary>
            Permanently removes a FlexMatch matchmaking configuration. To delete, specify the
            configuration name. A matchmaking configuration cannot be deleted if it is being used
            in any active matchmaking tickets.
            
             
            <para><b>Related operations</b></para><ul><li><para><a>CreateMatchmakingConfiguration</a></para></li><li><para><a>DescribeMatchmakingConfigurations</a></para></li><li><para><a>UpdateMatchmakingConfiguration</a></para></li><li><para><a>DeleteMatchmakingConfiguration</a></para></li><li><para><a>CreateMatchmakingRuleSet</a></para></li><li><para><a>DescribeMatchmakingRuleSets</a></para></li><li><para><a>ValidateMatchmakingRuleSet</a></para></li><li><para><a>DeleteMatchmakingRuleSet</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLMatchmakingConfigurationCmdlet.Name">
            <summary>
            <para>
            <para>A unique identifier for a matchmaking configuration. You can use either the configuration
            name or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLMatchmakingConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DeleteMatchmakingConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLMatchmakingConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLMatchmakingConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.RemoveGMLMatchmakingRuleSetCmdlet">
            <summary>
            Deletes an existing matchmaking rule set. To delete the rule set, provide the rule
            set name. Rule sets cannot be deleted if they are currently being used by a matchmaking
            configuration. 
            
             
            <para><b>Learn more</b></para><ul><li><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-rulesets.html">Build
            a Rule Set</a></para></li></ul><para><b>Related operations</b></para><ul><li><para><a>CreateMatchmakingConfiguration</a></para></li><li><para><a>DescribeMatchmakingConfigurations</a></para></li><li><para><a>UpdateMatchmakingConfiguration</a></para></li><li><para><a>DeleteMatchmakingConfiguration</a></para></li><li><para><a>CreateMatchmakingRuleSet</a></para></li><li><para><a>DescribeMatchmakingRuleSets</a></para></li><li><para><a>ValidateMatchmakingRuleSet</a></para></li><li><para><a>DeleteMatchmakingRuleSet</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLMatchmakingRuleSetCmdlet.Name">
            <summary>
            <para>
            <para>A unique identifier for a matchmaking rule set to be deleted. (Note: The rule set
            name is different from the optional "name" field in the rule set body.) You can use
            either the rule set name or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLMatchmakingRuleSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DeleteMatchmakingRuleSetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLMatchmakingRuleSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLMatchmakingRuleSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.RemoveGMLResourceTagCmdlet">
            <summary>
            Removes a tag that is assigned to a GameLift resource. Resource tags are used to organize
            AWS resources for a range of purposes. This action handles the permissions necessary
            to manage tags for the following GameLift resource types:
            
             <ul><li><para>
            Build
            </para></li><li><para>
            Script
            </para></li><li><para>
            Fleet
            </para></li><li><para>
            Alias
            </para></li><li><para>
            GameSessionQueue
            </para></li><li><para>
            MatchmakingConfiguration
            </para></li><li><para>
            MatchmakingRuleSet
            </para></li></ul><para>
            To remove a tag from a resource, specify the unique ARN value for the resource and
            provide a string list containing one or more tags to be removed. This action succeeds
            even if the list includes tags that are not currently assigned to the specified resource.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            AWS Resources</a> in the <i>AWS General Reference</i></para><para><a href="http://aws.amazon.com/answers/account-management/aws-tagging-strategies/">
            AWS Tagging Strategies</a></para><para><b>Related operations</b></para><ul><li><para><a>TagResource</a></para></li><li><para><a>UntagResource</a></para></li><li><para><a>ListTagsForResource</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (<a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html">ARN</a>)
            that is assigned to and uniquely identifies the GameLift resource that you want to
            remove tags from. GameLift resource ARNs are included in the data object for the resource,
            which can be retrieved by calling a List or Describe action for the resource type.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>A list of one or more tag keys to remove from the specified GameLift resource. An
            AWS resource can have only one tag with a specific tag key, so specifying the tag
            key identifies which tag to remove. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.RemoveGMLScalingPolicyCmdlet">
            <summary>
            Deletes a fleet scaling policy. This action means that the policy is no longer in
            force and removes all record of it. To delete a scaling policy, specify both the scaling
            policy name and the fleet ID it is associated with.
            
             
            <para>
            To temporarily suspend scaling policies, call <a>StopFleetActions</a>. This operation
            suspends all policies for the fleet.
            </para><ul><li><para><a>DescribeFleetCapacity</a></para></li><li><para><a>UpdateFleetCapacity</a></para></li><li><para><a>DescribeEC2InstanceLimits</a></para></li><li><para>
            Manage scaling policies:
            </para><ul><li><para><a>PutScalingPolicy</a> (auto-scaling)
            </para></li><li><para><a>DescribeScalingPolicies</a> (auto-scaling)
            </para></li><li><para><a>DeleteScalingPolicy</a> (auto-scaling)
            </para></li></ul></li><li><para>
            Manage fleet actions:
            </para><ul><li><para><a>StartFleetActions</a></para></li><li><para><a>StopFleetActions</a></para></li></ul></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLScalingPolicyCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet to be deleted. You can use either the fleet ID or
            ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLScalingPolicyCmdlet.Name">
            <summary>
            <para>
            <para>A descriptive label that is associated with a scaling policy. Policy names do not
            need to be unique.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLScalingPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DeleteScalingPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLScalingPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLScalingPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.RemoveGMLScriptCmdlet">
            <summary>
            Deletes a Realtime script. This action permanently deletes the script record. If script
            files were uploaded, they are also deleted (files stored in an S3 bucket are not deleted).
            
            
             
            <para>
            To delete a script, specify the script ID. Before deleting a script, be sure to terminate
            all fleets that are deployed with the script being deleted. Fleet instances periodically
            check for script updates, and if the script record no longer exists, the instance
            will go into an error state and be unable to host game sessions.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/realtime-intro.html">Amazon
            GameLift Realtime Servers</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateScript</a></para></li><li><para><a>ListScripts</a></para></li><li><para><a>DescribeScript</a></para></li><li><para><a>UpdateScript</a></para></li><li><para><a>DeleteScript</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLScriptCmdlet.ScriptId">
            <summary>
            <para>
            <para>A unique identifier for a Realtime script to delete. You can use either the script
            ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLScriptCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DeleteScriptResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLScriptCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScriptId parameter.
            The -PassThru parameter is deprecated, use -Select '^ScriptId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLScriptCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.RemoveGMLVpcPeeringAuthorizationCmdlet">
            <summary>
            Cancels a pending VPC peering authorization for the specified VPC. If you need to
            delete an existing VPC peering connection, call <a>DeleteVpcPeeringConnection</a>.
            
            
             <ul><li><para><a>CreateVpcPeeringAuthorization</a></para></li><li><para><a>DescribeVpcPeeringAuthorizations</a></para></li><li><para><a>DeleteVpcPeeringAuthorization</a></para></li><li><para><a>CreateVpcPeeringConnection</a></para></li><li><para><a>DescribeVpcPeeringConnections</a></para></li><li><para><a>DeleteVpcPeeringConnection</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLVpcPeeringAuthorizationCmdlet.GameLiftAwsAccountId">
            <summary>
            <para>
            <para>A unique identifier for the AWS account that you use to manage your Amazon GameLift
            fleet. You can find your Account ID in the AWS Management Console under account settings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLVpcPeeringAuthorizationCmdlet.PeerVpcId">
            <summary>
            <para>
            <para>A unique identifier for a VPC with resources to be accessed by your Amazon GameLift
            fleet. The VPC must be in the same Region where your fleet is deployed. Look up a
            VPC ID using the <a href="https://console.aws.amazon.com/vpc/">VPC Dashboard</a> in
            the AWS Management Console. Learn more about VPC peering in <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/vpc-peering.html">VPC
            Peering with Amazon GameLift Fleets</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLVpcPeeringAuthorizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DeleteVpcPeeringAuthorizationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLVpcPeeringAuthorizationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PeerVpcId parameter.
            The -PassThru parameter is deprecated, use -Select '^PeerVpcId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLVpcPeeringAuthorizationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.RemoveGMLVpcPeeringConnectionCmdlet">
            <summary>
            Removes a VPC peering connection. To delete the connection, you must have a valid
            authorization for the VPC peering connection that you want to delete. You can check
            for an authorization by calling <a>DescribeVpcPeeringAuthorizations</a> or request
            a new one using <a>CreateVpcPeeringAuthorization</a>. 
            
             
            <para>
            Once a valid authorization exists, call this operation from the AWS account that is
            used to manage the Amazon GameLift fleets. Identify the connection to delete by the
            connection ID and fleet ID. If successful, the connection is removed. 
            </para><ul><li><para><a>CreateVpcPeeringAuthorization</a></para></li><li><para><a>DescribeVpcPeeringAuthorizations</a></para></li><li><para><a>DeleteVpcPeeringAuthorization</a></para></li><li><para><a>CreateVpcPeeringConnection</a></para></li><li><para><a>DescribeVpcPeeringConnections</a></para></li><li><para><a>DeleteVpcPeeringConnection</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLVpcPeeringConnectionCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet. This fleet specified must match the fleet referenced
            in the VPC peering connection record. You can use either the fleet ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLVpcPeeringConnectionCmdlet.VpcPeeringConnectionId">
            <summary>
            <para>
            <para>A unique identifier for a VPC peering connection. This value is included in the <a>VpcPeeringConnection</a>
            object, which can be retrieved by calling <a>DescribeVpcPeeringConnections</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLVpcPeeringConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DeleteVpcPeeringConnectionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLVpcPeeringConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RemoveGMLVpcPeeringConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.RequestGMLGameServerCmdlet">
            <summary>
            <b>This action is part of Amazon GameLift FleetIQ with game server groups, which
            is in preview release and is subject to change.</b><para>
            Locates an available game server and temporarily reserves it to host gameplay and
            players. This action is called by a game client or client service (such as a matchmaker)
            to request hosting resources for a new game session. In response, GameLift FleetIQ
            searches for an available game server in the specified game server group, places the
            game server in "claimed" status for 60 seconds, and returns connection information
            back to the requester so that players can connect to the game server. 
            </para><para>
            There are two ways you can claim a game server. For the first option, you provide
            a game server group ID only, which prompts GameLift FleetIQ to search for an available
            game server in the specified group and claim it. With this option, GameLift FleetIQ
            attempts to consolidate gameplay on as few instances as possible to minimize hosting
            costs. For the second option, you request a specific game server by its ID. This option
            results in a less efficient claiming process because it does not take advantage of
            consolidation and may fail if the requested game server is unavailable. 
            </para><para>
            To claim a game server, identify a game server group and (optionally) a game server
            ID. If your game requires that game data be provided to the game server at the start
            of a game, such as a game map or player information, you can provide it in your claim
            request. 
            </para><para>
            When a game server is successfully claimed, connection information is returned. A
            claimed game server's utilization status remains AVAILABLE, while the claim status
            is set to CLAIMED for up to 60 seconds. This time period allows the game server to
            be prompted to update its status to UTILIZED (using <a>UpdateGameServer</a>). If the
            game server's status is not updated within 60 seconds, the game server reverts to
            unclaimed status and is available to be claimed by another request.
            </para><para>
            If you try to claim a specific game server, this request will fail in the following
            cases: (1) if the game server utilization status is UTILIZED, (2) if the game server
            claim status is CLAIMED, or (3) if the instance that the game server is running on
            is flagged as draining.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gsg-intro.html">GameLift
            FleetIQ Guide</a></para><para><b>Related operations</b></para><ul><li><para><a>RegisterGameServer</a></para></li><li><para><a>ListGameServers</a></para></li><li><para><a>ClaimGameServer</a></para></li><li><para><a>DescribeGameServer</a></para></li><li><para><a>UpdateGameServer</a></para></li><li><para><a>DeregisterGameServer</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RequestGMLGameServerCmdlet.GameServerData">
            <summary>
            <para>
            <para>A set of custom game server properties, formatted as a single string value, to be
            passed to the claimed game server. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RequestGMLGameServerCmdlet.GameServerGroupName">
            <summary>
            <para>
            <para>An identifier for the game server group. When claiming a specific game server, this
            is the game server group whether the game server is located. When requesting that
            GameLift FleetIQ locate an available game server, this is the game server group to
            search on. You can use either the <a>GameServerGroup</a> name or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RequestGMLGameServerCmdlet.GameServerId">
            <summary>
            <para>
            <para>A custom string that uniquely identifies the game server to claim. If this parameter
            is left empty, GameLift FleetIQ searches for an available game server in the specified
            game server group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RequestGMLGameServerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameServer'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.ClaimGameServerResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.ClaimGameServerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RequestGMLGameServerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameServerGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GameServerGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RequestGMLGameServerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.RequestGMLUploadCredentialCmdlet">
            <summary>
            Retrieves a fresh set of credentials for use when uploading a new set of game build
            files to Amazon GameLift's Amazon S3. This is done as part of the build creation process;
            see <a>CreateBuild</a>.
            
             
            <para>
            To request new credentials, specify the build ID as returned with an initial <code>CreateBuild</code>
            request. If successful, a new set of credentials are returned, along with the S3 storage
            location associated with the build ID.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-build-cli-uploading.html#gamelift-build-cli-uploading-create-build">
            Create a Build with Files in S3</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateBuild</a></para></li><li><para><a>ListBuilds</a></para></li><li><para><a>DescribeBuild</a></para></li><li><para><a>UpdateBuild</a></para></li><li><para><a>DeleteBuild</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RequestGMLUploadCredentialCmdlet.BuildId">
            <summary>
            <para>
            <para>A unique identifier for a build to get credentials for. You can use either the build
            ID or ARN value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RequestGMLUploadCredentialCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.RequestUploadCredentialsResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.RequestUploadCredentialsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RequestGMLUploadCredentialCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BuildId parameter.
            The -PassThru parameter is deprecated, use -Select '^BuildId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.RequestGMLUploadCredentialCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.ResolveGMLAliasCmdlet">
            <summary>
            Retrieves the fleet ID that an alias is currently pointing to.
            
             <ul><li><para><a>CreateAlias</a></para></li><li><para><a>ListAliases</a></para></li><li><para><a>DescribeAlias</a></para></li><li><para><a>UpdateAlias</a></para></li><li><para><a>DeleteAlias</a></para></li><li><para><a>ResolveAlias</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.ResolveGMLAliasCmdlet.AliasId">
            <summary>
            <para>
            <para>The unique identifier of the alias that you want to retrieve a fleet ID for. You can
            use either the alias ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.ResolveGMLAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FleetId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.ResolveAliasResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.ResolveAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.ResolveGMLAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AliasId parameter.
            The -PassThru parameter is deprecated, use -Select '^AliasId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.ResolveGMLAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.ResumeGMLGameServerGroupCmdlet">
            <summary>
            <b>This action is part of Amazon GameLift FleetIQ with game server groups, which
            is in preview release and is subject to change.</b><para>
            Reinstates activity on a game server group after it has been suspended. A game server
            group may be suspended by calling <a>SuspendGameServerGroup</a>, or it may have been
            involuntarily suspended due to a configuration problem. You can manually resume activity
            on the group once the configuration problem has been resolved. Refer to the game server
            group status and status reason for more information on why group activity is suspended.
            </para><para>
            To resume activity, specify a game server group ARN and the type of activity to be
            resumed.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gsg-intro.html">GameLift
            FleetIQ Guide</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateGameServerGroup</a></para></li><li><para><a>ListGameServerGroups</a></para></li><li><para><a>DescribeGameServerGroup</a></para></li><li><para><a>UpdateGameServerGroup</a></para></li><li><para><a>DeleteGameServerGroup</a></para></li><li><para><a>ResumeGameServerGroup</a></para></li><li><para><a>SuspendGameServerGroup</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.ResumeGMLGameServerGroupCmdlet.GameServerGroupName">
            <summary>
            <para>
            <para>The unique identifier of the game server group to resume activity on. Use either the
            <a>GameServerGroup</a> name or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.ResumeGMLGameServerGroupCmdlet.ResumeAction">
            <summary>
            <para>
            <para>The action to resume for this game server group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.ResumeGMLGameServerGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameServerGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.ResumeGameServerGroupResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.ResumeGameServerGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.ResumeGMLGameServerGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameServerGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GameServerGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.ResumeGMLGameServerGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.StartGMLFleetActionCmdlet">
            <summary>
            Resumes activity on a fleet that was suspended with <a>StopFleetActions</a>. Currently,
            this operation is used to restart a fleet's auto-scaling activity. 
            
             
            <para>
            To start fleet actions, specify the fleet ID and the type of actions to restart. When
            auto-scaling fleet actions are restarted, Amazon GameLift once again initiates scaling
            events as triggered by the fleet's scaling policies. If actions on the fleet were
            never stopped, this operation will have no effect. You can view a fleet's stopped
            actions using <a>DescribeFleetAttributes</a>.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">Setting
            up GameLift Fleets</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateFleet</a></para></li><li><para><a>ListFleets</a></para></li><li><para><a>DeleteFleet</a></para></li><li><para><a>DescribeFleetAttributes</a></para></li><li><para><a>UpdateFleetAttributes</a></para></li><li><para><a>StartFleetActions</a> or <a>StopFleetActions</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLFleetActionCmdlet.Action">
            <summary>
            <para>
            <para>List of actions to restart on the fleet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLFleetActionCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet to start actions on. You can use either the fleet
            ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLFleetActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.StartFleetActionsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLFleetActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLFleetActionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.StartGMLGameSessionPlacementCmdlet">
            <summary>
            Places a request for a new game session in a queue (see <a>CreateGameSessionQueue</a>).
            When processing a placement request, Amazon GameLift searches for available resources
            on the queue's destinations, scanning each until it finds resources or the placement
            request times out.
            
             
            <para>
            A game session placement request can also request player sessions. When a new game
            session is successfully created, Amazon GameLift creates a player session for each
            player included in the request.
            </para><para>
            When placing a game session, by default Amazon GameLift tries each fleet in the order
            they are listed in the queue configuration. Ideally, a queue's destinations are listed
            in preference order.
            </para><para>
            Alternatively, when requesting a game session with players, you can also provide latency
            data for each player in relevant Regions. Latency data indicates the performance lag
            a player experiences when connected to a fleet in the Region. Amazon GameLift uses
            latency data to reorder the list of destinations to place the game session in a Region
            with minimal lag. If latency data is provided for multiple players, Amazon GameLift
            calculates each Region's average lag for all players and reorders to get the best
            game play across all players. 
            </para><para>
            To place a new game session request, specify the following:
            </para><ul><li><para>
            The queue name and a set of game session properties and settings
            </para></li><li><para>
            A unique ID (such as a UUID) for the placement. You use this ID to track the status
            of the placement request
            </para></li><li><para>
            (Optional) A set of player data and a unique player ID for each player that you are
            joining to the new game session (player data is optional, but if you include it, you
            must also provide a unique ID for each player)
            </para></li><li><para>
            Latency data for all players (if you want to optimize game play for the players)
            </para></li></ul><para>
            If successful, a new game session placement is created.
            </para><para>
            To track the status of a placement request, call <a>DescribeGameSessionPlacement</a>
            and check the request's status. If the status is <code>FULFILLED</code>, a new game
            session has been created and a game session ARN and Region are referenced. If the
            placement request times out, you can resubmit the request or retry it with a different
            queue. 
            </para><ul><li><para><a>CreateGameSession</a></para></li><li><para><a>DescribeGameSessions</a></para></li><li><para><a>DescribeGameSessionDetails</a></para></li><li><para><a>SearchGameSessions</a></para></li><li><para><a>UpdateGameSession</a></para></li><li><para><a>GetGameSessionLogUrl</a></para></li><li><para>
            Game session placements
            </para><ul><li><para><a>StartGameSessionPlacement</a></para></li><li><para><a>DescribeGameSessionPlacement</a></para></li><li><para><a>StopGameSessionPlacement</a></para></li></ul></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLGameSessionPlacementCmdlet.DesiredPlayerSession">
            <summary>
            <para>
            <para>Set of information on each player to create a player session for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLGameSessionPlacementCmdlet.GameProperty">
            <summary>
            <para>
            <para>Set of custom properties for a game session, formatted as key:value pairs. These properties
            are passed to a game server process in the <a>GameSession</a> object with a request
            to start a new game session (see <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api.html#gamelift-sdk-server-startsession">Start
            a Game Session</a>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLGameSessionPlacementCmdlet.GameSessionData">
            <summary>
            <para>
            <para>Set of custom game session properties, formatted as a single string value. This data
            is passed to a game server process in the <a>GameSession</a> object with a request
            to start a new game session (see <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api.html#gamelift-sdk-server-startsession">Start
            a Game Session</a>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLGameSessionPlacementCmdlet.GameSessionName">
            <summary>
            <para>
            <para>A descriptive label that is associated with a game session. Session names do not need
            to be unique.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLGameSessionPlacementCmdlet.GameSessionQueueName">
            <summary>
            <para>
            <para>Name of the queue to use to place the new game session. You can use either the queue
            name or ARN value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLGameSessionPlacementCmdlet.MaximumPlayerSessionCount">
            <summary>
            <para>
            <para>The maximum number of players that can be connected simultaneously to the game session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLGameSessionPlacementCmdlet.PlacementId">
            <summary>
            <para>
            <para>A unique identifier to assign to the new game session placement. This value is developer-defined.
            The value must be unique across all Regions and cannot be reused unless you are resubmitting
            a canceled or timed-out placement request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLGameSessionPlacementCmdlet.PlayerLatency">
            <summary>
            <para>
            <para>Set of values, expressed in milliseconds, indicating the amount of latency that a
            player experiences when connected to AWS Regions. This information is used to try
            to place the new game session where it can offer the best possible gameplay experience
            for the players. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLGameSessionPlacementCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameSessionPlacement'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.StartGameSessionPlacementResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.StartGameSessionPlacementResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLGameSessionPlacementCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameSessionName parameter.
            The -PassThru parameter is deprecated, use -Select '^GameSessionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLGameSessionPlacementCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.StartGMLMatchBackfillCmdlet">
            <summary>
            Finds new players to fill open slots in an existing game session. This operation can
            be used to add players to matched games that start with fewer than the maximum number
            of players or to replace players when they drop out. By backfilling with the same
            matchmaker used to create the original match, you ensure that new players meet the
            match criteria and maintain a consistent experience throughout the game session. You
            can backfill a match anytime after a game session has been created. 
            
             
            <para>
            To request a match backfill, specify a unique ticket ID, the existing game session's
            ARN, a matchmaking configuration, and a set of data that describes all current players
            in the game session. If successful, a match backfill ticket is created and returned
            with status set to QUEUED. The ticket is placed in the matchmaker's ticket pool and
            processed. Track the status of the ticket to respond as needed. 
            </para><para>
            The process of finding backfill matches is essentially identical to the initial matchmaking
            process. The matchmaker searches the pool and groups tickets together to form potential
            matches, allowing only one backfill ticket per potential match. Once the a match is
            formed, the matchmaker creates player sessions for the new players. All tickets in
            the match are updated with the game session's connection information, and the <a>GameSession</a>
            object is updated to include matchmaker data on the new players. For more detail on
            how match backfill requests are processed, see <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-match.html">
            How Amazon GameLift FlexMatch Works</a>. 
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-backfill.html">
            Backfill Existing Games with FlexMatch</a></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-match.html">
            How GameLift FlexMatch Works</a></para><para><b>Related operations</b></para><ul><li><para><a>StartMatchmaking</a></para></li><li><para><a>DescribeMatchmaking</a></para></li><li><para><a>StopMatchmaking</a></para></li><li><para><a>AcceptMatch</a></para></li><li><para><a>StartMatchBackfill</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLMatchBackfillCmdlet.ConfigurationName">
            <summary>
            <para>
            <para>Name of the matchmaker to use for this request. You can use either the configuration
            name or ARN value. The ARN of the matchmaker that was used with the original game
            session is listed in the <a>GameSession</a> object, <code>MatchmakerData</code> property.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLMatchBackfillCmdlet.GameSessionArn">
            <summary>
            <para>
            <para>Amazon Resource Name (<a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>)
            that is assigned to a game session and uniquely identifies it. This is the same as
            the game session ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLMatchBackfillCmdlet.Player">
            <summary>
            <para>
            <para>Match information on all players that are currently assigned to the game session.
            This information is used by the matchmaker to find new players and add them to the
            existing game.</para><ul><li><para>PlayerID, PlayerAttributes, Team -\\- This information is maintained in the <a>GameSession</a>
            object, <code>MatchmakerData</code> property, for all players who are currently assigned
            to the game session. The matchmaker data is in JSON syntax, formatted as a string.
            For more details, see <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-server.html#match-server-data">
            Match Data</a>. </para></li><li><para>LatencyInMs -\\- If the matchmaker uses player latency, include a latency value, in
            milliseconds, for the Region that the game session is currently in. Do not include
            latency values for any other Region.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLMatchBackfillCmdlet.TicketId">
            <summary>
            <para>
            <para>A unique identifier for a matchmaking ticket. If no ticket ID is specified here, Amazon
            GameLift will generate one in the form of a UUID. Use this identifier to track the
            match backfill ticket status and retrieve match results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLMatchBackfillCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MatchmakingTicket'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.StartMatchBackfillResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.StartMatchBackfillResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLMatchBackfillCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameSessionArn parameter.
            The -PassThru parameter is deprecated, use -Select '^GameSessionArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLMatchBackfillCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.StartGMLMatchmakingCmdlet">
            <summary>
            Uses FlexMatch to create a game match for a group of players based on custom matchmaking
            rules, and starts a new game for the matched players. Each matchmaking request specifies
            the type of match to build (team configuration, rules for an acceptable match, etc.).
            The request also specifies the players to find a match for and where to host the new
            game session for optimal performance. A matchmaking request might start with a single
            player or a group of players who want to play together. FlexMatch finds additional
            players as needed to fill the match. Match type, rules, and the queue used to place
            a new game session are defined in a <code>MatchmakingConfiguration</code>. 
            
             
            <para>
            To start matchmaking, provide a unique ticket ID, specify a matchmaking configuration,
            and include the players to be matched. You must also include a set of player attributes
            relevant for the matchmaking configuration. If successful, a matchmaking ticket is
            returned with status set to <code>QUEUED</code>. Track the status of the ticket to
            respond as needed and acquire game session connection information for successfully
            completed matches.
            </para><para><b>Tracking ticket status</b> -- A couple of options are available for tracking the
            status of matchmaking requests: 
            </para><ul><li><para>
            Polling -- Call <code>DescribeMatchmaking</code>. This operation returns the full
            ticket object, including current status and (for completed tickets) game session connection
            info. We recommend polling no more than once every 10 seconds.
            </para></li><li><para>
            Notifications -- Get event notifications for changes in ticket status using Amazon
            Simple Notification Service (SNS). Notifications are easy to set up (see <a>CreateMatchmakingConfiguration</a>)
            and typically deliver match status changes faster and more efficiently than polling.
            We recommend that you use polling to back up to notifications (since delivery is not
            guaranteed) and call <code>DescribeMatchmaking</code> only when notifications are
            not received within 30 seconds.
            </para></li></ul><para><b>Processing a matchmaking request</b> -- FlexMatch handles a matchmaking request
            as follows: 
            </para><ol><li><para>
            Your client code submits a <code>StartMatchmaking</code> request for one or more players
            and tracks the status of the request ticket. 
            </para></li><li><para>
            FlexMatch uses this ticket and others in process to build an acceptable match. When
            a potential match is identified, all tickets in the proposed match are advanced to
            the next status. 
            </para></li><li><para>
            If the match requires player acceptance (set in the matchmaking configuration), the
            tickets move into status <code>REQUIRES_ACCEPTANCE</code>. This status triggers your
            client code to solicit acceptance from all players in every ticket involved in the
            match, and then call <a>AcceptMatch</a> for each player. If any player rejects or
            fails to accept the match before a specified timeout, the proposed match is dropped
            (see <code>AcceptMatch</code> for more details).
            </para></li><li><para>
            Once a match is proposed and accepted, the matchmaking tickets move into status <code>PLACING</code>.
            FlexMatch locates resources for a new game session using the game session queue (set
            in the matchmaking configuration) and creates the game session based on the match
            data. 
            </para></li><li><para>
            When the match is successfully placed, the matchmaking tickets move into <code>COMPLETED</code>
            status. Connection information (including game session endpoint and player session)
            is added to the matchmaking tickets. Matched players can use the connection information
            to join the game. 
            </para></li></ol><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-client.html">
            Add FlexMatch to a Game Client</a></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-notification.html">
            Set Up FlexMatch Event Notification</a></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-tasks.html">
            FlexMatch Integration Roadmap</a></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-match.html">
            How GameLift FlexMatch Works</a></para><para><b>Related operations</b></para><ul><li><para><a>StartMatchmaking</a></para></li><li><para><a>DescribeMatchmaking</a></para></li><li><para><a>StopMatchmaking</a></para></li><li><para><a>AcceptMatch</a></para></li><li><para><a>StartMatchBackfill</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLMatchmakingCmdlet.ConfigurationName">
            <summary>
            <para>
            <para>Name of the matchmaking configuration to use for this request. Matchmaking configurations
            must exist in the same Region as this request. You can use either the configuration
            name or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLMatchmakingCmdlet.Player">
            <summary>
            <para>
            <para>Information on each player to be matched. This information must include a player ID,
            and may contain player attributes and latency data to be used in the matchmaking process.
            After a successful match, <code>Player</code> objects contain the name of the team
            the player is assigned to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLMatchmakingCmdlet.TicketId">
            <summary>
            <para>
            <para>A unique identifier for a matchmaking ticket. If no ticket ID is specified here, Amazon
            GameLift will generate one in the form of a UUID. Use this identifier to track the
            matchmaking ticket status and retrieve match results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLMatchmakingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MatchmakingTicket'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.StartMatchmakingResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.StartMatchmakingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLMatchmakingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConfigurationName parameter.
            The -PassThru parameter is deprecated, use -Select '^ConfigurationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StartGMLMatchmakingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.StopGMLFleetActionCmdlet">
            <summary>
            Suspends activity on a fleet. Currently, this operation is used to stop a fleet's
            auto-scaling activity. It is used to temporarily stop triggering scaling events. The
            policies can be retained and auto-scaling activity can be restarted using <a>StartFleetActions</a>.
            You can view a fleet's stopped actions using <a>DescribeFleetAttributes</a>.
            
             
            <para>
            To stop fleet actions, specify the fleet ID and the type of actions to suspend. When
            auto-scaling fleet actions are stopped, Amazon GameLift no longer initiates scaling
            events except in response to manual changes using <a>UpdateFleetCapacity</a>. 
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">Setting
            up GameLift Fleets</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateFleet</a></para></li><li><para><a>ListFleets</a></para></li><li><para><a>DeleteFleet</a></para></li><li><para><a>DescribeFleetAttributes</a></para></li><li><para><a>UpdateFleetAttributes</a></para></li><li><para><a>StartFleetActions</a> or <a>StopFleetActions</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StopGMLFleetActionCmdlet.Action">
            <summary>
            <para>
            <para>List of actions to suspend on the fleet. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StopGMLFleetActionCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet to stop actions on. You can use either the fleet ID
            or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StopGMLFleetActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.StopFleetActionsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StopGMLFleetActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StopGMLFleetActionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.StopGMLGameSessionPlacementCmdlet">
            <summary>
            Cancels a game session placement that is in <code>PENDING</code> status. To stop a
            placement, provide the placement ID values. If successful, the placement is moved
            to <code>CANCELLED</code> status.
            
             <ul><li><para><a>CreateGameSession</a></para></li><li><para><a>DescribeGameSessions</a></para></li><li><para><a>DescribeGameSessionDetails</a></para></li><li><para><a>SearchGameSessions</a></para></li><li><para><a>UpdateGameSession</a></para></li><li><para><a>GetGameSessionLogUrl</a></para></li><li><para>
            Game session placements
            </para><ul><li><para><a>StartGameSessionPlacement</a></para></li><li><para><a>DescribeGameSessionPlacement</a></para></li><li><para><a>StopGameSessionPlacement</a></para></li></ul></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StopGMLGameSessionPlacementCmdlet.PlacementId">
            <summary>
            <para>
            <para>A unique identifier for a game session placement to cancel.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StopGMLGameSessionPlacementCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameSessionPlacement'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.StopGameSessionPlacementResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.StopGameSessionPlacementResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StopGMLGameSessionPlacementCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PlacementId parameter.
            The -PassThru parameter is deprecated, use -Select '^PlacementId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StopGMLGameSessionPlacementCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.StopGMLMatchmakingCmdlet">
            <summary>
            Cancels a matchmaking ticket or match backfill ticket that is currently being processed.
            To stop the matchmaking operation, specify the ticket ID. If successful, work on the
            ticket is stopped, and the ticket status is changed to <code>CANCELLED</code>.
            
             
            <para>
            This call is also used to turn off automatic backfill for an individual game session.
            This is for game sessions that are created with a matchmaking configuration that has
            automatic backfill enabled. The ticket ID is included in the <code>MatchmakerData</code>
            of an updated game session object, which is provided to the game server.
            </para><note><para>
            If the action is successful, the service sends back an empty JSON struct with the
            HTTP 200 response (not an empty HTTP body).
            </para></note><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-client.html">
            Add FlexMatch to a Game Client</a></para><para><b>Related operations</b></para><ul><li><para><a>StartMatchmaking</a></para></li><li><para><a>DescribeMatchmaking</a></para></li><li><para><a>StopMatchmaking</a></para></li><li><para><a>AcceptMatch</a></para></li><li><para><a>StartMatchBackfill</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StopGMLMatchmakingCmdlet.TicketId">
            <summary>
            <para>
            <para>A unique identifier for a matchmaking ticket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StopGMLMatchmakingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.StopMatchmakingResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StopGMLMatchmakingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TicketId parameter.
            The -PassThru parameter is deprecated, use -Select '^TicketId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.StopGMLMatchmakingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.SuspendGMLGameServerGroupCmdlet">
            <summary>
            <b>This action is part of Amazon GameLift FleetIQ with game server groups, which
            is in preview release and is subject to change.</b><para>
            Temporarily stops activity on a game server group without terminating instances or
            the game server group. Activity can be restarted by calling <a>ResumeGameServerGroup</a>.
            Activities that can suspended are:
            </para><ul><li><para>
            Instance type replacement. This activity evaluates the current Spot viability of all
            instance types that are defined for the game server group. It updates the Auto Scaling
            group to remove nonviable Spot instance types (which have a higher chance of game
            server interruptions) and rebalances capacity across the remaining viable Spot instance
            types. When this activity is suspended, the Auto Scaling group continues with its
            current balance, regardless of viability. Instance protection, utilization metrics,
            and capacity autoscaling activities continue to be active. 
            </para></li></ul><para>
            To suspend activity, specify a game server group ARN and the type of activity to be
            suspended.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gsg-intro.html">GameLift
            FleetIQ Guide</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateGameServerGroup</a></para></li><li><para><a>ListGameServerGroups</a></para></li><li><para><a>DescribeGameServerGroup</a></para></li><li><para><a>UpdateGameServerGroup</a></para></li><li><para><a>DeleteGameServerGroup</a></para></li><li><para><a>ResumeGameServerGroup</a></para></li><li><para><a>SuspendGameServerGroup</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.SuspendGMLGameServerGroupCmdlet.GameServerGroupName">
            <summary>
            <para>
            <para>The unique identifier of the game server group to stop activity on. Use either the
            <a>GameServerGroup</a> name or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.SuspendGMLGameServerGroupCmdlet.SuspendAction">
            <summary>
            <para>
            <para>The action to suspend for this game server group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.SuspendGMLGameServerGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameServerGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.SuspendGameServerGroupResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.SuspendGameServerGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.SuspendGMLGameServerGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameServerGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GameServerGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.SuspendGMLGameServerGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.TestGMLMatchmakingRuleSetValidityCmdlet">
            <summary>
            Validates the syntax of a matchmaking rule or rule set. This operation checks that
            the rule set is using syntactically correct JSON and that it conforms to allowed property
            expressions. To validate syntax, provide a rule set JSON string.
            
             
            <para><b>Learn more</b></para><ul><li><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-rulesets.html">Build
            a Rule Set</a></para></li></ul><para><b>Related operations</b></para><ul><li><para><a>CreateMatchmakingConfiguration</a></para></li><li><para><a>DescribeMatchmakingConfigurations</a></para></li><li><para><a>UpdateMatchmakingConfiguration</a></para></li><li><para><a>DeleteMatchmakingConfiguration</a></para></li><li><para><a>CreateMatchmakingRuleSet</a></para></li><li><para><a>DescribeMatchmakingRuleSets</a></para></li><li><para><a>ValidateMatchmakingRuleSet</a></para></li><li><para><a>DeleteMatchmakingRuleSet</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.TestGMLMatchmakingRuleSetValidityCmdlet.RuleSetBody">
            <summary>
            <para>
            <para>A collection of matchmaking rules to validate, formatted as a JSON string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.TestGMLMatchmakingRuleSetValidityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Valid'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.ValidateMatchmakingRuleSetResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.ValidateMatchmakingRuleSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.TestGMLMatchmakingRuleSetValidityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RuleSetBody parameter.
            The -PassThru parameter is deprecated, use -Select '^RuleSetBody' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.UnregisterGMLGameServerCmdlet">
            <summary>
            <b>This action is part of Amazon GameLift FleetIQ with game server groups, which
            is in preview release and is subject to change.</b><para>
            Removes the game server resource from the game server group. As a result of this action,
            the de-registered game server can no longer be claimed and will not returned in a
            list of active game servers. 
            </para><para>
            To de-register a game server, specify the game server group and game server ID. If
            successful, this action emits a CloudWatch event with termination time stamp and reason.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gsg-intro.html">GameLift
            FleetIQ Guide</a></para><para><b>Related operations</b></para><ul><li><para><a>RegisterGameServer</a></para></li><li><para><a>ListGameServers</a></para></li><li><para><a>ClaimGameServer</a></para></li><li><para><a>DescribeGameServer</a></para></li><li><para><a>UpdateGameServer</a></para></li><li><para><a>DeregisterGameServer</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UnregisterGMLGameServerCmdlet.GameServerGroupName">
            <summary>
            <para>
            <para>An identifier for the game server group where the game server to be de-registered
            is running. Use either the <a>GameServerGroup</a> name or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UnregisterGMLGameServerCmdlet.GameServerId">
            <summary>
            <para>
            <para>The identifier for the game server to be de-registered.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UnregisterGMLGameServerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.DeregisterGameServerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UnregisterGMLGameServerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^GameServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UnregisterGMLGameServerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.UpdateGMLAliasCmdlet">
            <summary>
            Updates properties for an alias. To update properties, specify the alias ID to be
            updated and provide the information to be changed. To reassign an alias to another
            fleet, provide an updated routing strategy. If successful, the updated alias record
            is returned.
            
             <ul><li><para><a>CreateAlias</a></para></li><li><para><a>ListAliases</a></para></li><li><para><a>DescribeAlias</a></para></li><li><para><a>UpdateAlias</a></para></li><li><para><a>DeleteAlias</a></para></li><li><para><a>ResolveAlias</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLAliasCmdlet.AliasId">
            <summary>
            <para>
            <para>A unique identifier for the alias that you want to update. You can use either the
            alias ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLAliasCmdlet.Description">
            <summary>
            <para>
            <para>A human-readable description of the alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLAliasCmdlet.RoutingStrategy_FleetId">
            <summary>
            <para>
            <para>The unique identifier for a fleet that the alias points to. This value is the fleet
            ID, not the fleet ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLAliasCmdlet.RoutingStrategy_Message">
            <summary>
            <para>
            <para>The message text to be used with a terminal routing strategy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLAliasCmdlet.Name">
            <summary>
            <para>
            <para>A descriptive label that is associated with an alias. Alias names do not need to be
            unique.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLAliasCmdlet.RoutingStrategy_Type">
            <summary>
            <para>
            <para>The type of routing strategy for the alias.</para><para>Possible routing types include the following:</para><ul><li><para><b>SIMPLE</b> - The alias resolves to one specific fleet. Use this type when routing
            to active fleets.</para></li><li><para><b>TERMINAL</b> - The alias does not resolve to a fleet but instead can be used to
            display a message to the user. A terminal alias throws a TerminalRoutingStrategyException
            with the <a>RoutingStrategy</a> message embedded.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Alias'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.UpdateAliasResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.UpdateAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AliasId parameter.
            The -PassThru parameter is deprecated, use -Select '^AliasId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.UpdateGMLBuildCmdlet">
            <summary>
            Updates metadata in a build resource, including the build name and version. To update
            the metadata, specify the build ID to update and provide the new values. If successful,
            a build object containing the updated metadata is returned.
            
             
            <para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-build-intro.html">
            Upload a Custom Server Build</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateBuild</a></para></li><li><para><a>ListBuilds</a></para></li><li><para><a>DescribeBuild</a></para></li><li><para><a>UpdateBuild</a></para></li><li><para><a>DeleteBuild</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLBuildCmdlet.BuildId">
            <summary>
            <para>
            <para>A unique identifier for a build to update. You can use either the build ID or ARN
            value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLBuildCmdlet.Name">
            <summary>
            <para>
            <para>A descriptive label that is associated with a build. Build names do not need to be
            unique. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLBuildCmdlet.Version">
            <summary>
            <para>
            <para>Version information that is associated with a build or script. Version strings do
            not need to be unique.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLBuildCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Build'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.UpdateBuildResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.UpdateBuildResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLBuildCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BuildId parameter.
            The -PassThru parameter is deprecated, use -Select '^BuildId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLBuildCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetAttributeCmdlet">
            <summary>
            Updates fleet properties, including name and description, for a fleet. To update metadata,
            specify the fleet ID and the property values that you want to change. If successful,
            the fleet ID for the updated fleet is returned.
            
             
            <para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">Setting
            up GameLift Fleets</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateFleet</a></para></li><li><para><a>ListFleets</a></para></li><li><para><a>DeleteFleet</a></para></li><li><para><a>DescribeFleetAttributes</a></para></li><li><para>
            Update fleets:
            </para><ul><li><para><a>UpdateFleetAttributes</a></para></li><li><para><a>UpdateFleetCapacity</a></para></li><li><para><a>UpdateFleetPortSettings</a></para></li><li><para><a>UpdateRuntimeConfiguration</a></para></li></ul></li><li><para><a>StartFleetActions</a> or <a>StopFleetActions</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetAttributeCmdlet.Description">
            <summary>
            <para>
            <para>Human-readable description of a fleet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetAttributeCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet to update attribute metadata for. You can use either
            the fleet ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetAttributeCmdlet.MetricGroup">
            <summary>
            <para>
            <para>Names of metric groups to include this fleet in. Amazon CloudWatch uses a fleet metric
            group is to aggregate metrics from multiple fleets. Use an existing metric group name
            to add this fleet to the group. Or use a new name to create a new metric group. A
            fleet can only be included in one metric group at a time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetAttributeCmdlet.Name">
            <summary>
            <para>
            <para>A descriptive label that is associated with a fleet. Fleet names do not need to be
            unique.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetAttributeCmdlet.NewGameSessionProtectionPolicy">
            <summary>
            <para>
            <para>Game session protection policy to apply to all new instances created in this fleet.
            Instances that already exist are not affected. You can set protection for individual
            instances using <a>UpdateGameSession</a>.</para><ul><li><para><b>NoProtection</b> -- The game session can be terminated during a scale-down event.</para></li><li><para><b>FullProtection</b> -- If the game session is in an <code>ACTIVE</code> status,
            it cannot be terminated during a scale-down event.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetAttributeCmdlet.ResourceCreationLimitPolicy_NewGameSessionsPerCreator">
            <summary>
            <para>
            <para>The maximum number of game sessions that an individual can create during the policy
            period. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetAttributeCmdlet.ResourceCreationLimitPolicy_PolicyPeriodInMinute">
            <summary>
            <para>
            <para>The time span used in evaluating the resource creation limit policy. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FleetId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.UpdateFleetAttributesResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.UpdateFleetAttributesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetCapacityCmdlet">
            <summary>
            Updates capacity settings for a fleet. Use this action to specify the number of EC2
            instances (hosts) that you want this fleet to contain. Before calling this action,
            you may want to call <a>DescribeEC2InstanceLimits</a> to get the maximum capacity
            based on the fleet's EC2 instance type.
            
             
            <para>
            Specify minimum and maximum number of instances. Amazon GameLift will not change fleet
            capacity to values fall outside of this range. This is particularly important when
            using auto-scaling (see <a>PutScalingPolicy</a>) to allow capacity to adjust based
            on player demand while imposing limits on automatic adjustments.
            </para><para>
            To update fleet capacity, specify the fleet ID and the number of instances you want
            the fleet to host. If successful, Amazon GameLift starts or terminates instances so
            that the fleet's active instance count matches the desired instance count. You can
            view a fleet's current capacity information by calling <a>DescribeFleetCapacity</a>.
            If the desired instance count is higher than the instance type's limit, the "Limit
            Exceeded" exception occurs.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">Setting
            up GameLift Fleets</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateFleet</a></para></li><li><para><a>ListFleets</a></para></li><li><para><a>DeleteFleet</a></para></li><li><para><a>DescribeFleetAttributes</a></para></li><li><para>
            Update fleets:
            </para><ul><li><para><a>UpdateFleetAttributes</a></para></li><li><para><a>UpdateFleetCapacity</a></para></li><li><para><a>UpdateFleetPortSettings</a></para></li><li><para><a>UpdateRuntimeConfiguration</a></para></li></ul></li><li><para><a>StartFleetActions</a> or <a>StopFleetActions</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetCapacityCmdlet.DesiredInstance">
            <summary>
            <para>
            <para>Number of EC2 instances you want this fleet to host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetCapacityCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet to update capacity for. You can use either the fleet
            ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetCapacityCmdlet.MaxSize">
            <summary>
            <para>
            <para>The maximum value allowed for the fleet's instance count. Default if not set is 1.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetCapacityCmdlet.MinSize">
            <summary>
            <para>
            <para>The minimum value allowed for the fleet's instance count. Default if not set is 0.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetCapacityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FleetId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.UpdateFleetCapacityResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.UpdateFleetCapacityResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetCapacityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetCapacityCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetPortSettingCmdlet">
            <summary>
            Updates port settings for a fleet. To update settings, specify the fleet ID to be
            updated and list the permissions you want to update. List the permissions you want
            to add in <code>InboundPermissionAuthorizations</code>, and permissions you want to
            remove in <code>InboundPermissionRevocations</code>. Permissions to be removed must
            match existing fleet permissions. If successful, the fleet ID for the updated fleet
            is returned.
            
             
            <para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">Setting
            up GameLift Fleets</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateFleet</a></para></li><li><para><a>ListFleets</a></para></li><li><para><a>DeleteFleet</a></para></li><li><para><a>DescribeFleetAttributes</a></para></li><li><para>
            Update fleets:
            </para><ul><li><para><a>UpdateFleetAttributes</a></para></li><li><para><a>UpdateFleetCapacity</a></para></li><li><para><a>UpdateFleetPortSettings</a></para></li><li><para><a>UpdateRuntimeConfiguration</a></para></li></ul></li><li><para><a>StartFleetActions</a> or <a>StopFleetActions</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetPortSettingCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet to update port settings for. You can use either the
            fleet ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetPortSettingCmdlet.InboundPermissionAuthorization">
            <summary>
            <para>
            <para>A collection of port settings to be added to the fleet resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetPortSettingCmdlet.InboundPermissionRevocation">
            <summary>
            <para>
            <para>A collection of port settings to be removed from the fleet resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetPortSettingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FleetId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.UpdateFleetPortSettingsResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.UpdateFleetPortSettingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetPortSettingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLFleetPortSettingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameServerCmdlet">
            <summary>
            <b>This action is part of Amazon GameLift FleetIQ with game server groups, which
            is in preview release and is subject to change.</b><para>
            Updates information about a registered game server. This action is called by a game
            server process that is running on an instance in a game server group. There are three
            reasons to update game server information: (1) to change the utilization status of
            the game server, (2) to report game server health status, and (3) to change game server
            metadata. A registered game server should regularly report health and should update
            utilization status when it is supporting gameplay so that GameLift FleetIQ can accurately
            track game server availability. You can make all three types of updates in the same
            request.
            </para><ul><li><para>
            To update the game server's utilization status, identify the game server and game
            server group and specify the current utilization status. Use this status to identify
            when game servers are currently hosting games and when they are available to be claimed.
            
            </para></li><li><para>
            To report health status, identify the game server and game server group and set health
            check to HEALTHY. If a game server does not report health status for a certain length
            of time, the game server is no longer considered healthy and will be eventually de-registered
            from the game server group to avoid affecting utilization metrics. The best practice
            is to report health every 60 seconds.
            </para></li><li><para>
            To change game server metadata, provide updated game server data and custom sort key
            values.
            </para></li></ul><para>
            Once a game server is successfully updated, the relevant statuses and timestamps are
            updated.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gsg-intro.html">GameLift
            FleetIQ Guide</a></para><para><b>Related operations</b></para><ul><li><para><a>RegisterGameServer</a></para></li><li><para><a>ListGameServers</a></para></li><li><para><a>ClaimGameServer</a></para></li><li><para><a>DescribeGameServer</a></para></li><li><para><a>UpdateGameServer</a></para></li><li><para><a>DeregisterGameServer</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameServerCmdlet.CustomSortKey">
            <summary>
            <para>
            <para>A game server tag that can be used to request sorted lists of game servers using <a>ListGameServers</a>.
            Custom sort keys are developer-defined based on how you want to organize the retrieved
            game server information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameServerCmdlet.GameServerData">
            <summary>
            <para>
            <para>A set of custom game server properties, formatted as a single string value. This data
            is passed to a game client or service when it requests information on a game servers
            using <a>DescribeGameServer</a> or <a>ClaimGameServer</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameServerCmdlet.GameServerGroupName">
            <summary>
            <para>
            <para>An identifier for the game server group where the game server is running. Use either
            the <a>GameServerGroup</a> name or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameServerCmdlet.GameServerId">
            <summary>
            <para>
            <para>The identifier for the game server to be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameServerCmdlet.HealthCheck">
            <summary>
            <para>
            <para>Indicates health status of the game server. An update that explicitly includes this
            parameter updates the game server's <i>LastHealthCheckTime</i> time stamp. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameServerCmdlet.UtilizationStatus">
            <summary>
            <para>
            <para>Indicates whether the game server is available or is currently hosting gameplay.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameServerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameServer'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.UpdateGameServerResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.UpdateGameServerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameServerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^GameServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameServerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameServerGroupCmdlet">
            <summary>
            <b>This action is part of Amazon GameLift FleetIQ with game server groups, which
            is in preview release and is subject to change.</b><para>
            Updates GameLift FleetIQ-specific properties for a game server group. These properties
            include instance rebalancing and game server protection. Many Auto Scaling group properties
            are updated directly. These include autoscaling policies, minimum/maximum/desired
            instance counts, and launch template. 
            </para><para>
            To update the game server group, specify the game server group ID and provide the
            updated values.
            </para><para>
            Updated properties are validated to ensure that GameLift FleetIQ can continue to perform
            its core instance rebalancing activity. When you change Auto Scaling group properties
            directly and the changes cause errors with GameLift FleetIQ activities, an alert is
            sent.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gsg-intro.html">GameLift
            FleetIQ Guide</a></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gsg-asgroups.html">Updating
            a GameLift FleetIQ-Linked Auto Scaling Group</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateGameServerGroup</a></para></li><li><para><a>ListGameServerGroups</a></para></li><li><para><a>DescribeGameServerGroup</a></para></li><li><para><a>UpdateGameServerGroup</a></para></li><li><para><a>DeleteGameServerGroup</a></para></li><li><para><a>ResumeGameServerGroup</a></para></li><li><para><a>SuspendGameServerGroup</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameServerGroupCmdlet.BalancingStrategy">
            <summary>
            <para>
            <para>The fallback balancing method to use for the game server group when Spot instances
            in a Region become unavailable or are not viable for game hosting. Once triggered,
            this method remains active until Spot instances can once again be used. Method options
            include:</para><ul><li><para>SPOT_ONLY -- If Spot instances are unavailable, the game server group provides no
            hosting capacity. No new instances are started, and the existing nonviable Spot instances
            are terminated (once current gameplay ends) and not replaced.</para></li><li><para>SPOT_PREFERRED -- If Spot instances are unavailable, the game server group continues
            to provide hosting capacity by using On-Demand instances. Existing nonviable Spot
            instances are terminated (once current gameplay ends) and replaced with new On-Demand
            instances. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameServerGroupCmdlet.GameServerGroupName">
            <summary>
            <para>
            <para>The unique identifier of the game server group to update. Use either the <a>GameServerGroup</a>
            name or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameServerGroupCmdlet.GameServerProtectionPolicy">
            <summary>
            <para>
            <para>A flag that indicates whether instances in the game server group are protected from
            early termination. Unprotected instances that have active game servers running may
            by terminated during a scale-down event, causing players to be dropped from the game.
            Protected instances cannot be terminated while there are active game servers running.
            An exception to this is Spot Instances, which may be terminated by AWS regardless
            of protection status. This property is set to NO_PROTECTION by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameServerGroupCmdlet.InstanceDefinition">
            <summary>
            <para>
            <para>An updated list of EC2 instance types to use when creating instances in the group.
            The instance definition must specify instance types that are supported by GameLift
            FleetIQ, and must include at least two instance types. This updated list replaces
            the entire current list of instance definitions for the game server group. For more
            information on instance types, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">EC2
            Instance Types</a> in the <i>Amazon EC2 User Guide</i>..</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameServerGroupCmdlet.RoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (<a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html">ARN</a>)
            for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.
            The submitted role is validated to ensure that it contains the necessary permissions
            for game server groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameServerGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameServerGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.UpdateGameServerGroupResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.UpdateGameServerGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameServerGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameServerGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GameServerGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameServerGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameSessionCmdlet">
            <summary>
            Updates game session properties. This includes the session name, maximum player count,
            protection policy, which controls whether or not an active game session can be terminated
            during a scale-down event, and the player session creation policy, which controls
            whether or not new players can join the session. To update a game session, specify
            the game session ID and the values you want to change. If successful, an updated <a>GameSession</a>
            object is returned. 
            
             <ul><li><para><a>CreateGameSession</a></para></li><li><para><a>DescribeGameSessions</a></para></li><li><para><a>DescribeGameSessionDetails</a></para></li><li><para><a>SearchGameSessions</a></para></li><li><para><a>UpdateGameSession</a></para></li><li><para><a>GetGameSessionLogUrl</a></para></li><li><para>
            Game session placements
            </para><ul><li><para><a>StartGameSessionPlacement</a></para></li><li><para><a>DescribeGameSessionPlacement</a></para></li><li><para><a>StopGameSessionPlacement</a></para></li></ul></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameSessionCmdlet.GameSessionId">
            <summary>
            <para>
            <para>A unique identifier for the game session to update. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameSessionCmdlet.MaximumPlayerSessionCount">
            <summary>
            <para>
            <para>The maximum number of players that can be connected simultaneously to the game session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameSessionCmdlet.Name">
            <summary>
            <para>
            <para>A descriptive label that is associated with a game session. Session names do not need
            to be unique.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameSessionCmdlet.PlayerSessionCreationPolicy">
            <summary>
            <para>
            <para>Policy determining whether or not the game session accepts new players.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameSessionCmdlet.ProtectionPolicy">
            <summary>
            <para>
            <para>Game session protection policy to apply to this game session only.</para><ul><li><para><b>NoProtection</b> -- The game session can be terminated during a scale-down event.</para></li><li><para><b>FullProtection</b> -- If the game session is in an <code>ACTIVE</code> status,
            it cannot be terminated during a scale-down event.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameSessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameSession'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.UpdateGameSessionResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.UpdateGameSessionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameSessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameSessionId parameter.
            The -PassThru parameter is deprecated, use -Select '^GameSessionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameSessionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameSessionQueueCmdlet">
            <summary>
            Updates settings for a game session queue, which determines how new game session requests
            in the queue are processed. To update settings, specify the queue name to be updated
            and provide the new settings. When updating destinations, provide a complete list
            of destinations. 
            
             
            <para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/queues-intro.html">
            Using Multi-Region Queues</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateGameSessionQueue</a></para></li><li><para><a>DescribeGameSessionQueues</a></para></li><li><para><a>UpdateGameSessionQueue</a></para></li><li><para><a>DeleteGameSessionQueue</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameSessionQueueCmdlet.Destination">
            <summary>
            <para>
            <para>A list of fleets that can be used to fulfill game session placement requests in the
            queue. Fleets are identified by either a fleet ARN or a fleet alias ARN. Destinations
            are listed in default preference order. When updating this list, provide a complete
            list of destinations.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameSessionQueueCmdlet.Name">
            <summary>
            <para>
            <para>A descriptive label that is associated with game session queue. Queue names must be
            unique within each Region. You can use either the queue ID or ARN value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameSessionQueueCmdlet.PlayerLatencyPolicy">
            <summary>
            <para>
            <para>A collection of latency policies to apply when processing game sessions placement
            requests with player latency information. Multiple policies are evaluated in order
            of the maximum latency value, starting with the lowest latency values. With just one
            policy, the policy is enforced at the start of the game session placement for the
            duration period. With multiple policies, each policy is enforced consecutively for
            its duration period. For example, a queue might enforce a 60-second policy followed
            by a 120-second policy, and then no policy for the remainder of the placement. When
            updating policies, provide a complete collection of policies.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameSessionQueueCmdlet.TimeoutInSecond">
            <summary>
            <para>
            <para>The maximum time, in seconds, that a new game session placement request remains in
            the queue. When a request exceeds this time, the game session placement changes to
            a <code>TIMED_OUT</code> status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameSessionQueueCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameSessionQueue'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.UpdateGameSessionQueueResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.UpdateGameSessionQueueResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameSessionQueueCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLGameSessionQueueCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.UpdateGMLMatchmakingConfigurationCmdlet">
            <summary>
            Updates settings for a FlexMatch matchmaking configuration. These changes affect all
            matches and game sessions that are created after the update. To update settings, specify
            the configuration name to be updated and provide the new settings. 
            
             
            <para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-configuration.html">
            Design a FlexMatch Matchmaker</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateMatchmakingConfiguration</a></para></li><li><para><a>DescribeMatchmakingConfigurations</a></para></li><li><para><a>UpdateMatchmakingConfiguration</a></para></li><li><para><a>DeleteMatchmakingConfiguration</a></para></li><li><para><a>CreateMatchmakingRuleSet</a></para></li><li><para><a>DescribeMatchmakingRuleSets</a></para></li><li><para><a>ValidateMatchmakingRuleSet</a></para></li><li><para><a>DeleteMatchmakingRuleSet</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLMatchmakingConfigurationCmdlet.AcceptanceRequired">
            <summary>
            <para>
            <para>A flag that indicates whether a match that was created with this configuration must
            be accepted by the matched players. To require acceptance, set to TRUE.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLMatchmakingConfigurationCmdlet.AcceptanceTimeoutSecond">
            <summary>
            <para>
            <para>The length of time (in seconds) to wait for players to accept a proposed match. If
            any player rejects the match or fails to accept before the timeout, the ticket continues
            to look for an acceptable match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLMatchmakingConfigurationCmdlet.AdditionalPlayerCount">
            <summary>
            <para>
            <para>The number of player slots in a match to keep open for future players. For example,
            assume that the configuration's rule set specifies a match for a single 12-person
            team. If the additional player count is set to 2, only 10 players are initially selected
            for the match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLMatchmakingConfigurationCmdlet.BackfillMode">
            <summary>
            <para>
            <para>The method that is used to backfill game sessions created with this matchmaking configuration.
            Specify MANUAL when your game manages backfill requests manually or does not use the
            match backfill feature. Specify AUTOMATIC to have GameLift create a <a>StartMatchBackfill</a>
            request whenever a game session has one or more open slots. Learn more about manual
            and automatic backfill in <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-backfill.html">Backfill
            Existing Games with FlexMatch</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLMatchmakingConfigurationCmdlet.CustomEventData">
            <summary>
            <para>
            <para>Information to add to all events related to the matchmaking configuration. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLMatchmakingConfigurationCmdlet.Description">
            <summary>
            <para>
            <para>A descriptive label that is associated with matchmaking configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLMatchmakingConfigurationCmdlet.GameProperty">
            <summary>
            <para>
            <para>A set of custom properties for a game session, formatted as key-value pairs. These
            properties are passed to a game server process in the <a>GameSession</a> object with
            a request to start a new game session (see <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api.html#gamelift-sdk-server-startsession">Start
            a Game Session</a>). This information is added to the new <a>GameSession</a> object
            that is created for a successful match. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLMatchmakingConfigurationCmdlet.GameSessionData">
            <summary>
            <para>
            <para>A set of custom game session properties, formatted as a single string value. This
            data is passed to a game server process in the <a>GameSession</a> object with a request
            to start a new game session (see <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api.html#gamelift-sdk-server-startsession">Start
            a Game Session</a>). This information is added to the new <a>GameSession</a> object
            that is created for a successful match. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLMatchmakingConfigurationCmdlet.GameSessionQueueArn">
            <summary>
            <para>
            <para>Amazon Resource Name (<a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>)
            that is assigned to a GameLift game session queue resource and uniquely identifies
            it. ARNs are unique across all Regions. These queues are used when placing game sessions
            for matches that are created with this matchmaking configuration. Queues can be located
            in any Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLMatchmakingConfigurationCmdlet.Name">
            <summary>
            <para>
            <para>A unique identifier for a matchmaking configuration to update. You can use either
            the configuration name or ARN value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLMatchmakingConfigurationCmdlet.NotificationTarget">
            <summary>
            <para>
            <para>An SNS topic ARN that is set up to receive matchmaking notifications. See <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-notification.html">
            Setting up Notifications for Matchmaking</a> for more information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLMatchmakingConfigurationCmdlet.RequestTimeoutSecond">
            <summary>
            <para>
            <para>The maximum duration, in seconds, that a matchmaking ticket can remain in process
            before timing out. Requests that fail due to timing out can be resubmitted as needed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLMatchmakingConfigurationCmdlet.RuleSetName">
            <summary>
            <para>
            <para>A unique identifier for a matchmaking rule set to use with this configuration. You
            can use either the rule set name or ARN value. A matchmaking configuration can only
            use rule sets that are defined in the same Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLMatchmakingConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Configuration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.UpdateMatchmakingConfigurationResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.UpdateMatchmakingConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLMatchmakingConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLMatchmakingConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.UpdateGMLRuntimeConfigurationCmdlet">
            <summary>
            Updates the current runtime configuration for the specified fleet, which tells Amazon
            GameLift how to launch server processes on instances in the fleet. You can update
            a fleet's runtime configuration at any time after the fleet is created; it does not
            need to be in an <code>ACTIVE</code> status.
            
             
            <para>
            To update runtime configuration, specify the fleet ID and provide a <code>RuntimeConfiguration</code>
            object with an updated set of server process configurations.
            </para><para>
            Each instance in a Amazon GameLift fleet checks regularly for an updated runtime configuration
            and changes how it launches server processes to comply with the latest version. Existing
            server processes are not affected by the update; runtime configuration changes are
            applied gradually as existing processes shut down and new processes are launched during
            Amazon GameLift's normal process recycling activity.
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">Setting
            up GameLift Fleets</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateFleet</a></para></li><li><para><a>ListFleets</a></para></li><li><para><a>DeleteFleet</a></para></li><li><para><a>DescribeFleetAttributes</a></para></li><li><para>
            Update fleets:
            </para><ul><li><para><a>UpdateFleetAttributes</a></para></li><li><para><a>UpdateFleetCapacity</a></para></li><li><para><a>UpdateFleetPortSettings</a></para></li><li><para><a>UpdateRuntimeConfiguration</a></para></li></ul></li><li><para><a>StartFleetActions</a> or <a>StopFleetActions</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLRuntimeConfigurationCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet to update runtime configuration for. You can use either
            the fleet ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLRuntimeConfigurationCmdlet.RuntimeConfiguration_GameSessionActivationTimeoutSecond">
            <summary>
            <para>
            <para>The maximum amount of time (in seconds) that a game session can remain in status <code>ACTIVATING</code>.
            If the game session is not active before the timeout, activation is terminated and
            the game session status is changed to <code>TERMINATED</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLRuntimeConfigurationCmdlet.RuntimeConfiguration_MaxConcurrentGameSessionActivation">
            <summary>
            <para>
            <para>The maximum number of game sessions with status <code>ACTIVATING</code> to allow on
            an instance simultaneously. This setting limits the amount of instance resources that
            can be used for new game activations at any one time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLRuntimeConfigurationCmdlet.RuntimeConfiguration_ServerProcess">
            <summary>
            <para>
            <para>A collection of server process configurations that describe which server processes
            to run on each instance in a fleet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLRuntimeConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RuntimeConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.UpdateRuntimeConfigurationResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.UpdateRuntimeConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLRuntimeConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLRuntimeConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.UpdateGMLScriptCmdlet">
            <summary>
            Updates Realtime script metadata and content.
            
             
            <para>
            To update script metadata, specify the script ID and provide updated name and/or version
            values. 
            </para><para>
            To update script content, provide an updated zip file by pointing to either a local
            file or an Amazon S3 bucket location. You can use either method regardless of how
            the original script was uploaded. Use the <i>Version</i> parameter to track updates
            to the script.
            </para><para>
            If the call is successful, the updated metadata is stored in the script record and
            a revised script is uploaded to the Amazon GameLift service. Once the script is updated
            and acquired by a fleet instance, the new version is used for all new game sessions.
            
            </para><para><b>Learn more</b></para><para><a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/realtime-intro.html">Amazon
            GameLift Realtime Servers</a></para><para><b>Related operations</b></para><ul><li><para><a>CreateScript</a></para></li><li><para><a>ListScripts</a></para></li><li><para><a>DescribeScript</a></para></li><li><para><a>UpdateScript</a></para></li><li><para><a>DeleteScript</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLScriptCmdlet.StorageLocation_Bucket">
            <summary>
            <para>
            <para>An S3 bucket identifier. This is the name of the S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLScriptCmdlet.StorageLocation_Key">
            <summary>
            <para>
            <para>The name of the zip file that contains the build files or script files. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLScriptCmdlet.Name">
            <summary>
            <para>
            <para>A descriptive label that is associated with a script. Script names do not need to
            be unique.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLScriptCmdlet.StorageLocation_ObjectVersion">
            <summary>
            <para>
            <para>The version of the file, if object versioning is turned on for the bucket. Amazon
            GameLift uses this information when retrieving files from an S3 bucket that you own.
            Use this parameter to specify a specific version of the file. If not set, the latest
            version of the file is retrieved. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLScriptCmdlet.StorageLocation_RoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (<a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html">ARN</a>)
            for an IAM role that allows Amazon GameLift to access the S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLScriptCmdlet.ScriptId">
            <summary>
            <para>
            <para>A unique identifier for a Realtime script to update. You can use either the script
            ID or ARN value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLScriptCmdlet.Version">
            <summary>
            <para>
            <para>The version that is associated with a build or script. Version strings do not need
            to be unique.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLScriptCmdlet.ZipFile">
            <summary>
            <para>
            <para>A data object containing your Realtime scripts and dependencies as a zip file. The
            zip file can have one or multiple files. Maximum size of a zip file is 5 MB.</para><para>When using the AWS CLI tool to create a script, this parameter is set to the zip file
            name. It must be prepended with the string "fileb://" to indicate that the file data
            is a binary object. For example: <code>--zip-file fileb://myRealtimeScript.zip</code>.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLScriptCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Script'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.UpdateScriptResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.UpdateScriptResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLScriptCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScriptId parameter.
            The -PassThru parameter is deprecated, use -Select '^ScriptId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.UpdateGMLScriptCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GML.WriteGMLScalingPolicyCmdlet">
            <summary>
            Creates or updates a scaling policy for a fleet. Scaling policies are used to automatically
            scale a fleet's hosting capacity to meet player demand. An active scaling policy instructs
            Amazon GameLift to track a fleet metric and automatically change the fleet's capacity
            when a certain threshold is reached. There are two types of scaling policies: target-based
            and rule-based. Use a target-based policy to quickly and efficiently manage fleet
            scaling; this option is the most commonly used. Use rule-based policies when you need
            to exert fine-grained control over auto-scaling. 
            
             
            <para>
            Fleets can have multiple scaling policies of each type in force at the same time;
            you can have one target-based policy, one or multiple rule-based scaling policies,
            or both. We recommend caution, however, because multiple auto-scaling policies can
            have unintended consequences.
            </para><para>
            You can temporarily suspend all scaling policies for a fleet by calling <a>StopFleetActions</a>
            with the fleet action AUTO_SCALING. To resume scaling policies, call <a>StartFleetActions</a>
            with the same fleet action. To stop just one scaling policy--or to permanently remove
            it, you must delete the policy with <a>DeleteScalingPolicy</a>.
            </para><para>
            Learn more about how to work with auto-scaling in <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-autoscaling.html">Set
            Up Fleet Automatic Scaling</a>.
            </para><para><b>Target-based policy</b></para><para>
            A target-based policy tracks a single metric: PercentAvailableGameSessions. This metric
            tells us how much of a fleet's hosting capacity is ready to host game sessions but
            is not currently in use. This is the fleet's buffer; it measures the additional player
            demand that the fleet could handle at current capacity. With a target-based policy,
            you set your ideal buffer size and leave it to Amazon GameLift to take whatever action
            is needed to maintain that target. 
            </para><para>
            For example, you might choose to maintain a 10% buffer for a fleet that has the capacity
            to host 100 simultaneous game sessions. This policy tells Amazon GameLift to take
            action whenever the fleet's available capacity falls below or rises above 10 game
            sessions. Amazon GameLift will start new instances or stop unused instances in order
            to return to the 10% buffer. 
            </para><para>
            To create or update a target-based policy, specify a fleet ID and name, and set the
            policy type to "TargetBased". Specify the metric to track (PercentAvailableGameSessions)
            and reference a <a>TargetConfiguration</a> object with your desired buffer value.
            Exclude all other parameters. On a successful request, the policy name is returned.
            The scaling policy is automatically in force as soon as it's successfully created.
            If the fleet's auto-scaling actions are temporarily suspended, the new policy will
            be in force once the fleet actions are restarted.
            </para><para><b>Rule-based policy</b></para><para>
            A rule-based policy tracks specified fleet metric, sets a threshold value, and specifies
            the type of action to initiate when triggered. With a rule-based policy, you can select
            from several available fleet metrics. Each policy specifies whether to scale up or
            scale down (and by how much), so you need one policy for each type of action. 
            </para><para>
            For example, a policy may make the following statement: "If the percentage of idle
            instances is greater than 20% for more than 15 minutes, then reduce the fleet capacity
            by 10%."
            </para><para>
            A policy's rule statement has the following structure:
            </para><para>
            If <code>[MetricName]</code> is <code>[ComparisonOperator]</code><code>[Threshold]</code>
            for <code>[EvaluationPeriods]</code> minutes, then <code>[ScalingAdjustmentType]</code>
            to/by <code>[ScalingAdjustment]</code>.
            </para><para>
            To implement the example, the rule statement would look like this:
            </para><para>
            If <code>[PercentIdleInstances]</code> is <code>[GreaterThanThreshold]</code><code>[20]</code>
            for <code>[15]</code> minutes, then <code>[PercentChangeInCapacity]</code> to/by <code>[10]</code>.
            </para><para>
            To create or update a scaling policy, specify a unique combination of name and fleet
            ID, and set the policy type to "RuleBased". Specify the parameter values for a policy
            rule statement. On a successful request, the policy name is returned. Scaling policies
            are automatically in force as soon as they're successfully created. If the fleet's
            auto-scaling actions are temporarily suspended, the new policy will be in force once
            the fleet actions are restarted.
            </para><ul><li><para><a>DescribeFleetCapacity</a></para></li><li><para><a>UpdateFleetCapacity</a></para></li><li><para><a>DescribeEC2InstanceLimits</a></para></li><li><para>
            Manage scaling policies:
            </para><ul><li><para><a>PutScalingPolicy</a> (auto-scaling)
            </para></li><li><para><a>DescribeScalingPolicies</a> (auto-scaling)
            </para></li><li><para><a>DeleteScalingPolicy</a> (auto-scaling)
            </para></li></ul></li><li><para>
            Manage fleet actions:
            </para><ul><li><para><a>StartFleetActions</a></para></li><li><para><a>StopFleetActions</a></para></li></ul></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.WriteGMLScalingPolicyCmdlet.ComparisonOperator">
            <summary>
            <para>
            <para>Comparison operator to use when measuring the metric against the threshold value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.WriteGMLScalingPolicyCmdlet.EvaluationPeriod">
            <summary>
            <para>
            <para>Length of time (in minutes) the metric must be at or beyond the threshold before a
            scaling event is triggered.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.WriteGMLScalingPolicyCmdlet.FleetId">
            <summary>
            <para>
            <para>A unique identifier for a fleet to apply this policy to. You can use either the fleet
            ID or ARN value. The fleet cannot be in any of the following statuses: ERROR or DELETING.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.WriteGMLScalingPolicyCmdlet.MetricName">
            <summary>
            <para>
            <para>Name of the Amazon GameLift-defined metric that is used to trigger a scaling adjustment.
            For detailed descriptions of fleet metrics, see <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/monitoring-cloudwatch.html">Monitor
            Amazon GameLift with Amazon CloudWatch</a>. </para><ul><li><para><b>ActivatingGameSessions</b> -- Game sessions in the process of being created.</para></li><li><para><b>ActiveGameSessions</b> -- Game sessions that are currently running.</para></li><li><para><b>ActiveInstances</b> -- Fleet instances that are currently running at least one
            game session.</para></li><li><para><b>AvailableGameSessions</b> -- Additional game sessions that fleet could host simultaneously,
            given current capacity.</para></li><li><para><b>AvailablePlayerSessions</b> -- Empty player slots in currently active game sessions.
            This includes game sessions that are not currently accepting players. Reserved player
            slots are not included.</para></li><li><para><b>CurrentPlayerSessions</b> -- Player slots in active game sessions that are being
            used by a player or are reserved for a player. </para></li><li><para><b>IdleInstances</b> -- Active instances that are currently hosting zero game sessions.
            </para></li><li><para><b>PercentAvailableGameSessions</b> -- Unused percentage of the total number of game
            sessions that a fleet could host simultaneously, given current capacity. Use this
            metric for a target-based scaling policy.</para></li><li><para><b>PercentIdleInstances</b> -- Percentage of the total number of active instances
            that are hosting zero game sessions.</para></li><li><para><b>QueueDepth</b> -- Pending game session placement requests, in any queue, where
            the current fleet is the top-priority destination.</para></li><li><para><b>WaitTime</b> -- Current wait time for pending game session placement requests,
            in any queue, where the current fleet is the top-priority destination. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.WriteGMLScalingPolicyCmdlet.Name">
            <summary>
            <para>
            <para>A descriptive label that is associated with a scaling policy. Policy names do not
            need to be unique. A fleet can have only one scaling policy with the same name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.WriteGMLScalingPolicyCmdlet.PolicyType">
            <summary>
            <para>
            <para>The type of scaling policy to create. For a target-based policy, set the parameter
            <i>MetricName</i> to 'PercentAvailableGameSessions' and specify a <i>TargetConfiguration</i>.
            For a rule-based policy set the following parameters: <i>MetricName</i>, <i>ComparisonOperator</i>,
            <i>Threshold</i>, <i>EvaluationPeriods</i>, <i>ScalingAdjustmentType</i>, and <i>ScalingAdjustment</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.WriteGMLScalingPolicyCmdlet.ScalingAdjustment">
            <summary>
            <para>
            <para>Amount of adjustment to make, based on the scaling adjustment type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.WriteGMLScalingPolicyCmdlet.ScalingAdjustmentType">
            <summary>
            <para>
            <para>The type of adjustment to make to a fleet's instance count (see <a>FleetCapacity</a>):</para><ul><li><para><b>ChangeInCapacity</b> -- add (or subtract) the scaling adjustment value from the
            current instance count. Positive values scale up while negative values scale down.</para></li><li><para><b>ExactCapacity</b> -- set the instance count to the scaling adjustment value.</para></li><li><para><b>PercentChangeInCapacity</b> -- increase or reduce the current instance count by
            the scaling adjustment, read as a percentage. Positive values scale up while negative
            values scale down; for example, a value of "-10" scales the fleet down by 10%.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.WriteGMLScalingPolicyCmdlet.TargetConfiguration_TargetValue">
            <summary>
            <para>
            <para>Desired value to use with a target-based scaling policy. The value must be relevant
            for whatever metric the scaling policy is using. For example, in a policy using the
            metric PercentAvailableGameSessions, the target value should be the preferred size
            of the fleet's buffer (the percent of capacity that should be idle and ready for new
            game sessions).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.WriteGMLScalingPolicyCmdlet.Threshold">
            <summary>
            <para>
            <para>Metric value used to trigger a scaling event.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.WriteGMLScalingPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Name'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameLift.Model.PutScalingPolicyResponse).
            Specifying the name of a property of type Amazon.GameLift.Model.PutScalingPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.WriteGMLScalingPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FleetId parameter.
            The -PassThru parameter is deprecated, use -Select '^FleetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GML.WriteGMLScalingPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
