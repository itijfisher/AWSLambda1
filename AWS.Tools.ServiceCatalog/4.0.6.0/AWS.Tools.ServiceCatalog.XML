<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.ServiceCatalog</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.AddSCServiceActionAssociationWithProvisioningArtifactCmdlet">
            <summary>
            Associates a self-service action with a provisioning artifact.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.AddSCServiceActionAssociationWithProvisioningArtifactCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.AddSCServiceActionAssociationWithProvisioningArtifactCmdlet.ProductId">
            <summary>
            <para>
            <para>The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.AddSCServiceActionAssociationWithProvisioningArtifactCmdlet.ProvisioningArtifactId">
            <summary>
            <para>
            <para>The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.AddSCServiceActionAssociationWithProvisioningArtifactCmdlet.ServiceActionId">
            <summary>
            <para>
            <para>The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.AddSCServiceActionAssociationWithProvisioningArtifactCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.AssociateServiceActionWithProvisioningArtifactResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.AddSCServiceActionAssociationWithProvisioningArtifactCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServiceActionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServiceActionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.AddSCServiceActionAssociationWithProvisioningArtifactCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.AddSCServiceActionAssociationWithProvisioningArtifactBatchCmdlet">
            <summary>
            Associates multiple self-service actions with provisioning artifacts.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.AddSCServiceActionAssociationWithProvisioningArtifactBatchCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.AddSCServiceActionAssociationWithProvisioningArtifactBatchCmdlet.ServiceActionAssociation">
            <summary>
            <para>
            <para>One or more associations, each consisting of the Action ID, the Product ID, and the
            Provisioning Artifact ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.AddSCServiceActionAssociationWithProvisioningArtifactBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FailedServiceActionAssociations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.BatchAssociateServiceActionWithProvisioningArtifactResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.BatchAssociateServiceActionWithProvisioningArtifactResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.AddSCServiceActionAssociationWithProvisioningArtifactBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.AddSCTagOptionToResourceCmdlet">
            <summary>
            Associate the specified TagOption with the specified portfolio or product.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.AddSCTagOptionToResourceCmdlet.ResourceId">
            <summary>
            <para>
            <para>The resource identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.AddSCTagOptionToResourceCmdlet.TagOptionId">
            <summary>
            <para>
            <para>The TagOption identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.AddSCTagOptionToResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.AssociateTagOptionWithResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.AddSCTagOptionToResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TagOptionId parameter.
            The -PassThru parameter is deprecated, use -Select '^TagOptionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.AddSCTagOptionToResourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.CopySCProductCmdlet">
            <summary>
            Copies the specified source product to the specified target product or a new product.
            
             
            <para>
            You can copy a product to the same account or another account. You can copy a product
            to the same region or another region.
            </para><para>
            This operation is performed asynchronously. To track the progress of the operation,
            use <a>DescribeCopyProductStatus</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.CopySCProductCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.CopySCProductCmdlet.CopyOption">
            <summary>
            <para>
            <para>The copy options. If the value is <code>CopyTags</code>, the tags from the source
            product are copied to the target product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.CopySCProductCmdlet.IdempotencyToken">
            <summary>
            <para>
            <para> A unique identifier that you provide to ensure idempotency. If multiple requests
            differ only by the idempotency token, the same response is returned for each repeated
            request. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.CopySCProductCmdlet.SourceProductArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the source product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.CopySCProductCmdlet.SourceProvisioningArtifactIdentifier">
            <summary>
            <para>
            <para>The identifiers of the provisioning artifacts (also known as versions) of the product
            to copy. By default, all provisioning artifacts are copied.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.CopySCProductCmdlet.TargetProductId">
            <summary>
            <para>
            <para>The identifier of the target product. By default, a new product is created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.CopySCProductCmdlet.TargetProductName">
            <summary>
            <para>
            <para>A name for the target product. The default is the name of the source product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.CopySCProductCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CopyProductToken'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.CopyProductResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.CopyProductResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.CopySCProductCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IdempotencyToken parameter.
            The -PassThru parameter is deprecated, use -Select '^IdempotencyToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.CopySCProductCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.DenySCPortfolioShareCmdlet">
            <summary>
            Rejects an offer to share the specified portfolio.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.DenySCPortfolioShareCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.DenySCPortfolioShareCmdlet.PortfolioId">
            <summary>
            <para>
            <para>The portfolio identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.DenySCPortfolioShareCmdlet.PortfolioShareType">
            <summary>
            <para>
            <para>The type of shared portfolios to reject. The default is to reject imported portfolios.</para><ul><li><para><code>AWS_ORGANIZATIONS</code> - Reject portfolios shared by the master account of
            your organization.</para></li><li><para><code>IMPORTED</code> - Reject imported portfolios.</para></li><li><para><code>AWS_SERVICECATALOG</code> - Not supported. (Throws ResourceNotFoundException.)</para></li></ul><para>For example, <code>aws servicecatalog reject-portfolio-share --portfolio-id "port-2qwzkwxt3y5fk"
            --portfolio-share-type AWS_ORGANIZATIONS</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.DenySCPortfolioShareCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.RejectPortfolioShareResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.DenySCPortfolioShareCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PortfolioId parameter.
            The -PassThru parameter is deprecated, use -Select '^PortfolioId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.DenySCPortfolioShareCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.DisableSCAWSOrganizationsAccessCmdlet">
            <summary>
            Disable portfolio sharing through AWS Organizations feature. This feature will not
            delete your current shares but it will prevent you from creating new shares throughout
            your organization. Current shares will not be in sync with your organization structure
            if it changes after calling this API. This API can only be called by the master account
            in the organization.
            
             
            <para>
            This API can't be invoked if there are active delegated administrators in the organization.
            </para><para>
            Note that a delegated administrator is not authorized to invoke <code>DisableAWSOrganizationsAccess</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.DisableSCAWSOrganizationsAccessCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DisableAWSOrganizationsAccessResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.DisableSCAWSOrganizationsAccessCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.EnableSCAWSOrganizationsAccessCmdlet">
            <summary>
            Enable portfolio sharing feature through AWS Organizations. This API will allow Service
            Catalog to receive updates on your organization in order to sync your shares with
            the current structure. This API can only be called by the master account in the organization.
            
             
            <para>
            By calling this API Service Catalog will make a call to organizations:EnableAWSServiceAccess
            on your behalf so that your shares can be in sync with any changes in your AWS Organizations
            structure.
            </para><para>
            Note that a delegated administrator is not authorized to invoke <code>EnableAWSOrganizationsAccess</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.EnableSCAWSOrganizationsAccessCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.EnableAWSOrganizationsAccessResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.EnableSCAWSOrganizationsAccessCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.FindSCProductCmdlet">
            <summary>
            Gets information about the products to which the caller has access.<br/><br/>In the AWS.Tools.ServiceCatalog module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProductCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProductCmdlet.Filter">
            <summary>
            <para>
            <para>The search filters. If no search filters are specified, the output includes all products
            to which the caller has access.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProductCmdlet.SortBy">
            <summary>
            <para>
            <para>The sort field. If no value is specified, the results are not sorted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProductCmdlet.SortOrder">
            <summary>
            <para>
            <para>The sort order. If no value is specified, the results are not sorted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProductCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProductCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.ServiceCatalog module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProductCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.SearchProductsResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.SearchProductsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProductCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.FindSCProductsAsAdminCmdlet">
            <summary>
            Gets information about the products for the specified portfolio or all products.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProductsAsAdminCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProductsAsAdminCmdlet.Filter">
            <summary>
            <para>
            <para>The search filters. If no search filters are specified, the output includes all products
            to which the administrator has access.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProductsAsAdminCmdlet.PortfolioId">
            <summary>
            <para>
            <para>The portfolio identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProductsAsAdminCmdlet.ProductSource">
            <summary>
            <para>
            <para>Access level of the source of the product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProductsAsAdminCmdlet.SortBy">
            <summary>
            <para>
            <para>The sort field. If no value is specified, the results are not sorted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProductsAsAdminCmdlet.SortOrder">
            <summary>
            <para>
            <para>The sort order. If no value is specified, the results are not sorted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProductsAsAdminCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProductsAsAdminCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProductsAsAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ProductViewDetails'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.SearchProductsAsAdminResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.SearchProductsAsAdminResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProductsAsAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PortfolioId parameter.
            The -PassThru parameter is deprecated, use -Select '^PortfolioId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProductsAsAdminCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.FindSCProvisionedProductCmdlet">
            <summary>
            Gets information about the provisioned products that meet the specified criteria.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProvisionedProductCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProvisionedProductCmdlet.Filter">
            <summary>
            <para>
            <para>The search filters.</para><para>When the key is <code>SearchQuery</code>, the searchable fields are <code>arn</code>,
            <code>createdTime</code>, <code>id</code>, <code>lastRecordId</code>, <code>idempotencyToken</code>,
            <code>name</code>, <code>physicalId</code>, <code>productId</code>, <code>provisioningArtifact</code>,
            <code>type</code>, <code>status</code>, <code>tags</code>, <code>userArn</code>, and
            <code>userArnSession</code>.</para><para>Example: <code>"SearchQuery":["status:AVAILABLE"]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProvisionedProductCmdlet.AccessLevelFilter_Key">
            <summary>
            <para>
            <para>The access level.</para><ul><li><para><code>Account</code> - Filter results based on the account.</para></li><li><para><code>Role</code> - Filter results based on the federated role of the specified user.</para></li><li><para><code>User</code> - Filter results based on the specified user.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProvisionedProductCmdlet.SortBy">
            <summary>
            <para>
            <para>The sort field. If no value is specified, the results are not sorted. The valid values
            are <code>arn</code>, <code>id</code>, <code>name</code>, and <code>lastRecordId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProvisionedProductCmdlet.SortOrder">
            <summary>
            <para>
            <para>The sort order. If no value is specified, the results are not sorted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProvisionedProductCmdlet.AccessLevelFilter_Value">
            <summary>
            <para>
            <para>The user to which the access level applies. The only supported value is <code>Self</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProvisionedProductCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProvisionedProductCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProvisionedProductCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ProvisionedProducts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.SearchProvisionedProductsResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.SearchProvisionedProductsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.FindSCProvisionedProductCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCAcceptedPortfolioShareListCmdlet">
            <summary>
            Lists all portfolios for which sharing was accepted by this account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCAcceptedPortfolioShareListCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCAcceptedPortfolioShareListCmdlet.PortfolioShareType">
            <summary>
            <para>
            <para>The type of shared portfolios to list. The default is to list imported portfolios.</para><ul><li><para><code>AWS_ORGANIZATIONS</code> - List portfolios shared by the master account of
            your organization</para></li><li><para><code>AWS_SERVICECATALOG</code> - List default portfolios</para></li><li><para><code>IMPORTED</code> - List imported portfolios</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCAcceptedPortfolioShareListCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCAcceptedPortfolioShareListCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCAcceptedPortfolioShareListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PortfolioDetails'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ListAcceptedPortfolioSharesResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ListAcceptedPortfolioSharesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCAcceptedPortfolioShareListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AcceptLanguage parameter.
            The -PassThru parameter is deprecated, use -Select '^AcceptLanguage' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCAcceptedPortfolioShareListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCAWSOrganizationsAccessStatusCmdlet">
            <summary>
            Get the Access Status for AWS Organization portfolio share feature. This API can only
            be called by the master account in the organization or by a delegated admin.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCAWSOrganizationsAccessStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AccessStatus'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.GetAWSOrganizationsAccessStatusResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.GetAWSOrganizationsAccessStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCBudgetsForResourceCmdlet">
            <summary>
            Lists all the budgets associated to the specified resource.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCBudgetsForResourceCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCBudgetsForResourceCmdlet.ResourceId">
            <summary>
            <para>
            <para>The resource identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCBudgetsForResourceCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCBudgetsForResourceCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCBudgetsForResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Budgets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ListBudgetsForResourceResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ListBudgetsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCBudgetsForResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCBudgetsForResourceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCConstrainsForPortfolioListCmdlet">
            <summary>
            Lists the constraints for the specified portfolio and product.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCConstrainsForPortfolioListCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCConstrainsForPortfolioListCmdlet.PortfolioId">
            <summary>
            <para>
            <para>The portfolio identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCConstrainsForPortfolioListCmdlet.ProductId">
            <summary>
            <para>
            <para>The product identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCConstrainsForPortfolioListCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCConstrainsForPortfolioListCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCConstrainsForPortfolioListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ConstraintDetails'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ListConstraintsForPortfolioResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ListConstraintsForPortfolioResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCConstrainsForPortfolioListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PortfolioId parameter.
            The -PassThru parameter is deprecated, use -Select '^PortfolioId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCConstrainsForPortfolioListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCConstraintCmdlet">
            <summary>
            Gets information about the specified constraint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCConstraintCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCConstraintCmdlet.Id">
            <summary>
            <para>
            <para>The identifier of the constraint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCConstraintCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DescribeConstraintResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.DescribeConstraintResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCConstraintCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCCopyProductStatusCmdlet">
            <summary>
            Gets the status of the specified copy product operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCCopyProductStatusCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCCopyProductStatusCmdlet.CopyProductToken">
            <summary>
            <para>
            <para>The token for the copy product operation. This token is returned by <a>CopyProduct</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCCopyProductStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DescribeCopyProductStatusResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.DescribeCopyProductStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCLaunchPathCmdlet">
            <summary>
            Lists the paths to the specified product. A path is how the user has access to a specified
            product, and is necessary when provisioning a product. A path also determines the
            constraints put on the product.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCLaunchPathCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCLaunchPathCmdlet.ProductId">
            <summary>
            <para>
            <para>The product identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCLaunchPathCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCLaunchPathCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCLaunchPathCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LaunchPathSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ListLaunchPathsResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ListLaunchPathsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCLaunchPathCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProductId parameter.
            The -PassThru parameter is deprecated, use -Select '^ProductId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCLaunchPathCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCOrganizationPortfolioAccessListCmdlet">
            <summary>
            Lists the organization nodes that have access to the specified portfolio. This API
            can only be called by the master account in the organization or by a delegated admin.
            
             
            <para>
            If a delegated admin is de-registered, they can no longer perform this operation.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCOrganizationPortfolioAccessListCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCOrganizationPortfolioAccessListCmdlet.OrganizationNodeType">
            <summary>
            <para>
            <para>The organization node type that will be returned in the output.</para><ul><li><para><code>ORGANIZATION</code> - Organization that has access to the portfolio. </para></li><li><para><code>ORGANIZATIONAL_UNIT</code> - Organizational unit that has access to the portfolio
            within your organization.</para></li><li><para><code>ACCOUNT</code> - Account that has access to the portfolio within your organization.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCOrganizationPortfolioAccessListCmdlet.PortfolioId">
            <summary>
            <para>
            <para>The portfolio identifier. For example, <code>port-2abcdext3y5fk</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCOrganizationPortfolioAccessListCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCOrganizationPortfolioAccessListCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCOrganizationPortfolioAccessListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OrganizationNodes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ListOrganizationPortfolioAccessResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ListOrganizationPortfolioAccessResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCOrganizationPortfolioAccessListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioCmdlet">
            <summary>
            Gets information about the specified portfolio.
            
             
            <para>
            A delegated admin is authorized to invoke this command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioCmdlet.Id">
            <summary>
            <para>
            <para>The portfolio identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DescribePortfolioResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.DescribePortfolioResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioAccessListCmdlet">
            <summary>
            Lists the account IDs that have access to the specified portfolio.
            
             
            <para>
            A delegated admin can list the accounts that have access to the shared portfolio.
            Note that if a delegated admin is de-registered, they can no longer perform this operation.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioAccessListCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioAccessListCmdlet.OrganizationParentId">
            <summary>
            <para>
            <para>The ID of an organization node the portfolio is shared with. All children of this
            node with an inherited portfolio share will be returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioAccessListCmdlet.PortfolioId">
            <summary>
            <para>
            <para>The portfolio identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioAccessListCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioAccessListCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioAccessListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AccountIds'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ListPortfolioAccessResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ListPortfolioAccessResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioAccessListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PortfolioId parameter.
            The -PassThru parameter is deprecated, use -Select '^PortfolioId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioAccessListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioListCmdlet">
            <summary>
            Lists all portfolios in the catalog.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioListCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioListCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioListCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PortfolioDetails'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ListPortfoliosResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ListPortfoliosResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioShareStatusCmdlet">
            <summary>
            Gets the status of the specified portfolio share operation. This API can only be called
            by the master account in the organization or by a delegated admin.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioShareStatusCmdlet.PortfolioShareToken">
            <summary>
            <para>
            <para>The token for the portfolio share operation. This token is returned either by CreatePortfolioShare
            or by DeletePortfolioShare.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioShareStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DescribePortfolioShareStatusResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.DescribePortfolioShareStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPortfolioShareStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PortfolioShareToken parameter.
            The -PassThru parameter is deprecated, use -Select '^PortfolioShareToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCPrincipalsForPortfolioCmdlet">
            <summary>
            Lists all principal ARNs associated with the specified portfolio.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPrincipalsForPortfolioCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPrincipalsForPortfolioCmdlet.PortfolioId">
            <summary>
            <para>
            <para>The portfolio identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPrincipalsForPortfolioCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPrincipalsForPortfolioCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPrincipalsForPortfolioCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Principals'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ListPrincipalsForPortfolioResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ListPrincipalsForPortfolioResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPrincipalsForPortfolioCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PortfolioId parameter.
            The -PassThru parameter is deprecated, use -Select '^PortfolioId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCPrincipalsForPortfolioCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCProductCmdlet">
            <summary>
            Gets information about the specified product.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductCmdlet.Id">
            <summary>
            <para>
            <para>The product identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductCmdlet.Name">
            <summary>
            <para>
            <para>The product name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DescribeProductResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.DescribeProductResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCProductAsAdminCmdlet">
            <summary>
            Gets information about the specified product. This operation is run with administrator
            access.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductAsAdminCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductAsAdminCmdlet.Id">
            <summary>
            <para>
            <para>The product identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductAsAdminCmdlet.Name">
            <summary>
            <para>
            <para>The product name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductAsAdminCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DescribeProductAsAdminResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.DescribeProductAsAdminResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductAsAdminCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCProductPortfolioListCmdlet">
            <summary>
            Lists all portfolios that the specified product is associated with.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductPortfolioListCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductPortfolioListCmdlet.ProductId">
            <summary>
            <para>
            <para>The product identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductPortfolioListCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductPortfolioListCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductPortfolioListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PortfolioDetails'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ListPortfoliosForProductResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ListPortfoliosForProductResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductPortfolioListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProductId parameter.
            The -PassThru parameter is deprecated, use -Select '^ProductId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductPortfolioListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCProductViewCmdlet">
            <summary>
            Gets information about the specified product.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductViewCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductViewCmdlet.Id">
            <summary>
            <para>
            <para>The product view identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductViewCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DescribeProductViewResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.DescribeProductViewResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProductViewCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductCmdlet">
            <summary>
            Lists the provisioned products that are available (not terminated).
            
             
            <para>
            To use additional filtering, see <a>SearchProvisionedProducts</a>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductCmdlet.AccessLevelFilter_Key">
            <summary>
            <para>
            <para>The access level.</para><ul><li><para><code>Account</code> - Filter results based on the account.</para></li><li><para><code>Role</code> - Filter results based on the federated role of the specified user.</para></li><li><para><code>User</code> - Filter results based on the specified user.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductCmdlet.AccessLevelFilter_Value">
            <summary>
            <para>
            <para>The user to which the access level applies. The only supported value is <code>Self</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ProvisionedProducts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ScanProvisionedProductsResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ScanProvisionedProductsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductDetailCmdlet">
            <summary>
            Gets information about the specified provisioned product.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductDetailCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductDetailCmdlet.Id">
            <summary>
            <para>
            <para>The provisioned product identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductDetailCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DescribeProvisionedProductResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.DescribeProvisionedProductResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductDetailCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductPlanCmdlet">
            <summary>
            Gets information about the resource changes for the specified plan.<br/><br/>In the AWS.Tools.ServiceCatalog module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductPlanCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductPlanCmdlet.PlanId">
            <summary>
            <para>
            <para>The plan identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductPlanCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductPlanCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.ServiceCatalog module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductPlanCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DescribeProvisionedProductPlanResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.DescribeProvisionedProductPlanResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductPlanCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductPlanListCmdlet">
            <summary>
            Lists the plans for the specified provisioned product or all plans to which the user
            has access.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductPlanListCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductPlanListCmdlet.AccessLevelFilter_Key">
            <summary>
            <para>
            <para>The access level.</para><ul><li><para><code>Account</code> - Filter results based on the account.</para></li><li><para><code>Role</code> - Filter results based on the federated role of the specified user.</para></li><li><para><code>User</code> - Filter results based on the specified user.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductPlanListCmdlet.ProvisionProductId">
            <summary>
            <para>
            <para>The product identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductPlanListCmdlet.AccessLevelFilter_Value">
            <summary>
            <para>
            <para>The user to which the access level applies. The only supported value is <code>Self</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductPlanListCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductPlanListCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductPlanListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ProvisionedProductPlans'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ListProvisionedProductPlansResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ListProvisionedProductPlansResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisionedProductPlanListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactCmdlet">
            <summary>
            Gets information about the specified provisioning artifact (also known as a version)
            for the specified product.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactCmdlet.ProductId">
            <summary>
            <para>
            <para>The product identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactCmdlet.ProductName">
            <summary>
            <para>
            <para>The product name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactCmdlet.ProvisioningArtifactId">
            <summary>
            <para>
            <para>The identifier of the provisioning artifact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactCmdlet.ProvisioningArtifactName">
            <summary>
            <para>
            <para>The provisioning artifact name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactCmdlet.ReturnCloudFormationTemplate">
            <summary>
            <para>
            <para>Indicates whether a verbose level of detail is enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DescribeProvisioningArtifactResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.DescribeProvisioningArtifactResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProvisioningArtifactId parameter.
            The -PassThru parameter is deprecated, use -Select '^ProvisioningArtifactId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactListCmdlet">
            <summary>
            Lists all provisioning artifacts (also known as versions) for the specified product.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactListCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactListCmdlet.ProductId">
            <summary>
            <para>
            <para>The product identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ProvisioningArtifactDetails'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ListProvisioningArtifactsResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ListProvisioningArtifactsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProductId parameter.
            The -PassThru parameter is deprecated, use -Select '^ProductId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactsForServiceActionListCmdlet">
            <summary>
            Lists all provisioning artifacts (also known as versions) for the specified self-service
            action.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactsForServiceActionListCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactsForServiceActionListCmdlet.ServiceActionId">
            <summary>
            <para>
            <para>The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactsForServiceActionListCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactsForServiceActionListCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactsForServiceActionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ProvisioningArtifactViews'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ListProvisioningArtifactsForServiceActionResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ListProvisioningArtifactsForServiceActionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningArtifactsForServiceActionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningParameterCmdlet">
            <summary>
            Gets information about the configuration required to provision the specified product
            using the specified provisioning artifact.
            
             
            <para>
            If the output contains a TagOption key with an empty list of values, there is a TagOption
            conflict for that key. The end user cannot take action to fix the conflict, and launch
            is not blocked. In subsequent calls to <a>ProvisionProduct</a>, do not include conflicted
            TagOption keys as tags, or this causes the error "Parameter validation failed: Missing
            required parameter in Tags[<i>N</i>]:<i>Value</i>". Tag the provisioned product with
            the value <code>sc-tagoption-conflict-portfolioId-productId</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningParameterCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningParameterCmdlet.PathId">
            <summary>
            <para>
            <para>The path identifier of the product. This value is optional if the product has a default
            path, and required if the product has more than one path. To list the paths for a
            product, use <a>ListLaunchPaths</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningParameterCmdlet.ProductId">
            <summary>
            <para>
            <para>The product identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningParameterCmdlet.ProvisioningArtifactId">
            <summary>
            <para>
            <para>The identifier of the provisioning artifact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DescribeProvisioningParametersResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.DescribeProvisioningParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCProvisioningParameterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProductId parameter.
            The -PassThru parameter is deprecated, use -Select '^ProductId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCRecordCmdlet">
            <summary>
            Gets information about the specified request operation.
            
             
            <para>
            Use this operation after calling a request operation (for example, <a>ProvisionProduct</a>,
            <a>TerminateProvisionedProduct</a>, or <a>UpdateProvisionedProduct</a>). 
            </para><note><para>
            If a provisioned product was transferred to a new owner using <a>UpdateProvisionedProductProperties</a>,
            the new owner will be able to describe all past records for that product. The previous
            owner will no longer be able to describe the records, but will be able to use <a>ListRecordHistory</a>
            to see the product's history from when he was the owner.
            </para></note><br/><br/>In the AWS.Tools.ServiceCatalog module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCRecordCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCRecordCmdlet.Id">
            <summary>
            <para>
            <para>The record identifier of the provisioned product. This identifier is returned by the
            request operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCRecordCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCRecordCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.ServiceCatalog module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCRecordCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DescribeRecordResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.DescribeRecordResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCRecordCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCRecordCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCRecordHistoryCmdlet">
            <summary>
            Lists the specified requests or all performed requests.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCRecordHistoryCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCRecordHistoryCmdlet.AccessLevelFilter_Key">
            <summary>
            <para>
            <para>The access level.</para><ul><li><para><code>Account</code> - Filter results based on the account.</para></li><li><para><code>Role</code> - Filter results based on the federated role of the specified user.</para></li><li><para><code>User</code> - Filter results based on the specified user.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCRecordHistoryCmdlet.SearchFilter_Key">
            <summary>
            <para>
            <para>The filter key.</para><ul><li><para><code>product</code> - Filter results based on the specified product identifier.</para></li><li><para><code>provisionedproduct</code> - Filter results based on the provisioned product
            identifier.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCRecordHistoryCmdlet.AccessLevelFilter_Value">
            <summary>
            <para>
            <para>The user to which the access level applies. The only supported value is <code>Self</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCRecordHistoryCmdlet.SearchFilter_Value">
            <summary>
            <para>
            <para>The filter value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCRecordHistoryCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCRecordHistoryCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCRecordHistoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RecordDetails'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ListRecordHistoryResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ListRecordHistoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCRecordHistoryCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCResourcesForTagOptionCmdlet">
            <summary>
            Lists the resources associated with the specified TagOption.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCResourcesForTagOptionCmdlet.ResourceType">
            <summary>
            <para>
            <para>The resource type.</para><ul><li><para><code>Portfolio</code></para></li><li><para><code>Product</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCResourcesForTagOptionCmdlet.TagOptionId">
            <summary>
            <para>
            <para>The TagOption identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCResourcesForTagOptionCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCResourcesForTagOptionCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.PageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCResourcesForTagOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourceDetails'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ListResourcesForTagOptionResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ListResourcesForTagOptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCResourcesForTagOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TagOptionId parameter.
            The -PassThru parameter is deprecated, use -Select '^TagOptionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCResourcesForTagOptionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionCmdlet">
            <summary>
            Describes a self-service action.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionCmdlet.Id">
            <summary>
            <para>
            <para>The self-service action identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ServiceActionDetail'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DescribeServiceActionResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.DescribeServiceActionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionExecutionParameterCmdlet">
            <summary>
            Finds the default parameters for a specific self-service action on a specific provisioned
            product and returns a map of the results to the user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionExecutionParameterCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionExecutionParameterCmdlet.ProvisionedProductId">
            <summary>
            <para>
            <para>The identifier of the provisioned product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionExecutionParameterCmdlet.ServiceActionId">
            <summary>
            <para>
            <para>The self-service action identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionExecutionParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ServiceActionParameters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DescribeServiceActionExecutionParametersResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.DescribeServiceActionExecutionParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionExecutionParameterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServiceActionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServiceActionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionListCmdlet">
            <summary>
            Lists all self-service actions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionListCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionListCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionListCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ServiceActionSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ListServiceActionsResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ListServiceActionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AcceptLanguage parameter.
            The -PassThru parameter is deprecated, use -Select '^AcceptLanguage' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionsForProvisioningArtifactListCmdlet">
            <summary>
            Returns a paginated list of self-service actions associated with the specified Product
            ID and Provisioning Artifact ID.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionsForProvisioningArtifactListCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionsForProvisioningArtifactListCmdlet.ProductId">
            <summary>
            <para>
            <para>The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionsForProvisioningArtifactListCmdlet.ProvisioningArtifactId">
            <summary>
            <para>
            <para>The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionsForProvisioningArtifactListCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionsForProvisioningArtifactListCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionsForProvisioningArtifactListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ServiceActionSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ListServiceActionsForProvisioningArtifactResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ListServiceActionsForProvisioningArtifactResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCServiceActionsForProvisioningArtifactListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCStackInstancesForProvisionedProductCmdlet">
            <summary>
            Returns summary information about stack instances that are associated with the specified
            <code>CFN_STACKSET</code> type provisioned product. You can filter for stack instances
            that are associated with a specific AWS account name or region.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCStackInstancesForProvisionedProductCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCStackInstancesForProvisionedProductCmdlet.ProvisionedProductId">
            <summary>
            <para>
            <para>The identifier of the provisioned product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCStackInstancesForProvisionedProductCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCStackInstancesForProvisionedProductCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.NextPageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCStackInstancesForProvisionedProductCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StackInstances'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ListStackInstancesForProvisionedProductResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ListStackInstancesForProvisionedProductResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCStackInstancesForProvisionedProductCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProvisionedProductId parameter.
            The -PassThru parameter is deprecated, use -Select '^ProvisionedProductId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCStackInstancesForProvisionedProductCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCTagOptionCmdlet">
            <summary>
            Gets information about the specified TagOption.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCTagOptionCmdlet.Id">
            <summary>
            <para>
            <para>The TagOption identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCTagOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TagOptionDetail'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DescribeTagOptionResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.DescribeTagOptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCTagOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.GetSCTagOptionListCmdlet">
            <summary>
            Lists the specified TagOptions or all TagOptions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCTagOptionListCmdlet.Filters_Active">
            <summary>
            <para>
            <para>The active state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCTagOptionListCmdlet.Filters_Key">
            <summary>
            <para>
            <para>The TagOption key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCTagOptionListCmdlet.Filters_Value">
            <summary>
            <para>
            <para>The TagOption value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCTagOptionListCmdlet.PageSize">
            <summary>
            <para>
            <para>The maximum number of items to return with this call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCTagOptionListCmdlet.PageToken">
            <summary>
            <para>
            <para>The page token for the next set of results. To retrieve the first set of results,
            use null.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-PageToken $null' for the first call and '-PageToken $AWSHistory.LastServiceResponse.PageToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCTagOptionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TagOptionDetails'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ListTagOptionsResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ListTagOptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.GetSCTagOptionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of PageToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.NewSCConstraintCmdlet">
            <summary>
            Creates a constraint.
            
             
            <para>
            A delegated admin is authorized to invoke this command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCConstraintCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCConstraintCmdlet.Description">
            <summary>
            <para>
            <para>The description of the constraint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCConstraintCmdlet.IdempotencyToken">
            <summary>
            <para>
            <para>A unique identifier that you provide to ensure idempotency. If multiple requests differ
            only by the idempotency token, the same response is returned for each repeated request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCConstraintCmdlet.Parameter">
            <summary>
            <para>
            <para>The constraint parameters, in JSON format. The syntax depends on the constraint type
            as follows:</para><dl><dt>LAUNCH</dt><dd><para>You are required to specify either the <code>RoleArn</code> or the <code>LocalRoleName</code>
            but can't use both.</para><para>Specify the <code>RoleArn</code> property as follows:</para><para><code>{"RoleArn" : "arn:aws:iam::123456789012:role/LaunchRole"}</code></para><para>Specify the <code>LocalRoleName</code> property as follows:</para><para><code>{"LocalRoleName": "SCBasicLaunchRole"}</code></para><para>If you specify the <code>LocalRoleName</code> property, when an account uses the launch
            constraint, the IAM role with that name in the account will be used. This allows launch-role
            constraints to be account-agnostic so the administrator can create fewer resources
            per shared account.</para><note><para>The given role name must exist in the account used to create the launch constraint
            and the account of the user who launches a product with this launch constraint.</para></note><para>You cannot have both a <code>LAUNCH</code> and a <code>STACKSET</code> constraint.</para><para>You also cannot have more than one <code>LAUNCH</code> constraint on a product and
            portfolio.</para></dd><dt>NOTIFICATION</dt><dd><para>Specify the <code>NotificationArns</code> property as follows:</para><para><code>{"NotificationArns" : ["arn:aws:sns:us-east-1:123456789012:Topic"]}</code></para></dd><dt>RESOURCE_UPDATE</dt><dd><para>Specify the <code>TagUpdatesOnProvisionedProduct</code> property as follows:</para><para><code>{"Version":"2.0","Properties":{"TagUpdateOnProvisionedProduct":"String"}}</code></para><para>The <code>TagUpdatesOnProvisionedProduct</code> property accepts a string value of
            <code>ALLOWED</code> or <code>NOT_ALLOWED</code>.</para></dd><dt>STACKSET</dt><dd><para>Specify the <code>Parameters</code> property as follows:</para><para><code>{"Version": "String", "Properties": {"AccountList": [ "String" ], "RegionList":
            [ "String" ], "AdminRole": "String", "ExecutionRole": "String"}}</code></para><para>You cannot have both a <code>LAUNCH</code> and a <code>STACKSET</code> constraint.</para><para>You also cannot have more than one <code>STACKSET</code> constraint on a product and
            portfolio.</para><para>Products with a <code>STACKSET</code> constraint will launch an AWS CloudFormation
            stack set.</para></dd><dt>TEMPLATE</dt><dd><para>Specify the <code>Rules</code> property. For more information, see <a href="http://docs.aws.amazon.com/servicecatalog/latest/adminguide/reference-template_constraint_rules.html">Template
            Constraint Rules</a>.</para></dd></dl>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCConstraintCmdlet.PortfolioId">
            <summary>
            <para>
            <para>The portfolio identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCConstraintCmdlet.ProductId">
            <summary>
            <para>
            <para>The product identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCConstraintCmdlet.Type">
            <summary>
            <para>
            <para>The type of constraint.</para><ul><li><para><code>LAUNCH</code></para></li><li><para><code>NOTIFICATION</code></para></li><li><para><code>RESOURCE_UPDATE</code></para></li><li><para><code>STACKSET</code></para></li><li><para><code>TEMPLATE</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCConstraintCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.CreateConstraintResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.CreateConstraintResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCConstraintCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProductId parameter.
            The -PassThru parameter is deprecated, use -Select '^ProductId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCConstraintCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.NewSCPortfolioCmdlet">
            <summary>
            Creates a portfolio.
            
             
            <para>
            A delegated admin is authorized to invoke this command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCPortfolioCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCPortfolioCmdlet.Description">
            <summary>
            <para>
            <para>The description of the portfolio.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCPortfolioCmdlet.DisplayName">
            <summary>
            <para>
            <para>The name to use for display purposes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCPortfolioCmdlet.IdempotencyToken">
            <summary>
            <para>
            <para>A unique identifier that you provide to ensure idempotency. If multiple requests differ
            only by the idempotency token, the same response is returned for each repeated request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCPortfolioCmdlet.ProviderName">
            <summary>
            <para>
            <para>The name of the portfolio provider.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCPortfolioCmdlet.Tag">
            <summary>
            <para>
            <para>One or more tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCPortfolioCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.CreatePortfolioResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.CreatePortfolioResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCPortfolioCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.NewSCPortfolioShareCmdlet">
            <summary>
            Shares the specified portfolio with the specified account or organization node. Shares
            to an organization node can only be created by the master account of an organization
            or by a delegated administrator. You can share portfolios to an organization, an organizational
            unit, or a specific account.
            
             
            <para>
            Note that if a delegated admin is de-registered, they can no longer create portfolio
            shares.
            </para><para><code>AWSOrganizationsAccess</code> must be enabled in order to create a portfolio
            share to an organization node.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCPortfolioShareCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCPortfolioShareCmdlet.AccountId">
            <summary>
            <para>
            <para>The AWS account ID. For example, <code>123456789012</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCPortfolioShareCmdlet.PortfolioId">
            <summary>
            <para>
            <para>The portfolio identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCPortfolioShareCmdlet.OrganizationNode_Type">
            <summary>
            <para>
            <para>The organization node type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCPortfolioShareCmdlet.OrganizationNode_Value">
            <summary>
            <para>
            <para>The identifier of the organization node.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCPortfolioShareCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PortfolioShareToken'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.CreatePortfolioShareResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.CreatePortfolioShareResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCPortfolioShareCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCPortfolioShareCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.NewSCProductCmdlet">
            <summary>
            Creates a product.
            
             
            <para>
            A delegated admin is authorized to invoke this command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProductCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProductCmdlet.Description">
            <summary>
            <para>
            <para>The description of the product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProductCmdlet.ProvisioningArtifactParameters_Description">
            <summary>
            <para>
            <para>The description of the provisioning artifact, including how it differs from the previous
            provisioning artifact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProductCmdlet.ProvisioningArtifactParameters_DisableTemplateValidation">
            <summary>
            <para>
            <para>If set to true, AWS Service Catalog stops validating the specified provisioning artifact
            even if it is invalid.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProductCmdlet.Distributor">
            <summary>
            <para>
            <para>The distributor of the product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProductCmdlet.IdempotencyToken">
            <summary>
            <para>
            <para>A unique identifier that you provide to ensure idempotency. If multiple requests differ
            only by the idempotency token, the same response is returned for each repeated request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProductCmdlet.ProvisioningArtifactParameters_Info">
            <summary>
            <para>
            <para>The URL of the CloudFormation template in Amazon S3. Specify the URL in JSON format
            as follows:</para><para><code>"LoadTemplateFromURL": "https://s3.amazonaws.com/cf-templates-ozkq9d3hgiq2-us-east-1/..."</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProductCmdlet.Name">
            <summary>
            <para>
            <para>The name of the product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProductCmdlet.ProvisioningArtifactParameters_Name">
            <summary>
            <para>
            <para>The name of the provisioning artifact (for example, v1 v2beta). No spaces are allowed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProductCmdlet.ProductType">
            <summary>
            <para>
            <para>The type of product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProductCmdlet.SupportDescription">
            <summary>
            <para>
            <para>The support information about the product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProductCmdlet.SupportEmail">
            <summary>
            <para>
            <para>The contact email for product support.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProductCmdlet.SupportUrl">
            <summary>
            <para>
            <para>The contact URL for product support.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProductCmdlet.Tag">
            <summary>
            <para>
            <para>One or more tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProductCmdlet.ProvisioningArtifactParameters_Type">
            <summary>
            <para>
            <para>The type of provisioning artifact.</para><ul><li><para><code>CLOUD_FORMATION_TEMPLATE</code> - AWS CloudFormation template</para></li><li><para><code>MARKETPLACE_AMI</code> - AWS Marketplace AMI</para></li><li><para><code>MARKETPLACE_CAR</code> - AWS Marketplace Clusters and AWS Resources</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProductCmdlet.Owner">
            <summary>
            <para>
            <para>The owner of the product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProductCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.CreateProductResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.CreateProductResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProductCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductCmdlet">
            <summary>
            Provisions the specified product.
            
             
            <para>
            A provisioned product is a resourced instance of a product. For example, provisioning
            a product based on a CloudFormation template launches a CloudFormation stack and its
            underlying resources. You can check the status of this request using <a>DescribeRecord</a>.
            </para><para>
            If the request contains a tag key with an empty list of values, there is a tag conflict
            for that key. Do not include conflicted keys as tags, or this causes the error "Parameter
            validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductCmdlet.NotificationArn">
            <summary>
            <para>
            <para>Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductCmdlet.PathId">
            <summary>
            <para>
            <para>The path identifier of the product. This value is optional if the product has a default
            path, and required if the product has more than one path. To list the paths for a
            product, use <a>ListLaunchPaths</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductCmdlet.ProductId">
            <summary>
            <para>
            <para>The product identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductCmdlet.ProvisionedProductName">
            <summary>
            <para>
            <para>A user-friendly name for the provisioned product. This value must be unique for the
            AWS account and cannot be updated after the product is provisioned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductCmdlet.ProvisioningArtifactId">
            <summary>
            <para>
            <para>The identifier of the provisioning artifact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductCmdlet.ProvisioningParameter">
            <summary>
            <para>
            <para>Parameters specified by the administrator that are required for provisioning the product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductCmdlet.ProvisionToken">
            <summary>
            <para>
            <para>An idempotency token that uniquely identifies the provisioning request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductCmdlet.ProvisioningPreferences_StackSetAccount">
            <summary>
            <para>
            <para>One or more AWS accounts that will have access to the provisioned product.</para><para>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</para><para>The AWS accounts specified should be within the list of accounts in the <code>STACKSET</code>
            constraint. To get the list of accounts in the <code>STACKSET</code> constraint, use
            the <code>DescribeProvisioningParameters</code> operation.</para><para>If no values are specified, the default value is all accounts from the <code>STACKSET</code>
            constraint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductCmdlet.ProvisioningPreferences_StackSetFailureToleranceCount">
            <summary>
            <para>
            <para>The number of accounts, per region, for which this operation can fail before AWS Service
            Catalog stops the operation in that region. If the operation is stopped in a region,
            AWS Service Catalog doesn't attempt the operation in any subsequent regions.</para><para>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</para><para>Conditional: You must specify either <code>StackSetFailureToleranceCount</code> or
            <code>StackSetFailureTolerancePercentage</code>, but not both.</para><para>The default value is <code>0</code> if no value is specified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductCmdlet.ProvisioningPreferences_StackSetFailureTolerancePercentage">
            <summary>
            <para>
            <para>The percentage of accounts, per region, for which this stack operation can fail before
            AWS Service Catalog stops the operation in that region. If the operation is stopped
            in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions.</para><para>When calculating the number of accounts based on the specified percentage, AWS Service
            Catalog rounds down to the next whole number.</para><para>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</para><para>Conditional: You must specify either <code>StackSetFailureToleranceCount</code> or
            <code>StackSetFailureTolerancePercentage</code>, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductCmdlet.ProvisioningPreferences_StackSetMaxConcurrencyCount">
            <summary>
            <para>
            <para>The maximum number of accounts in which to perform this operation at one time. This
            is dependent on the value of <code>StackSetFailureToleranceCount</code>. <code>StackSetMaxConcurrentCount</code>
            is at most one more than the <code>StackSetFailureToleranceCount</code>.</para><para>Note that this setting lets you specify the maximum for operations. For large deployments,
            under certain circumstances the actual number of accounts acted upon concurrently
            may be lower due to service throttling.</para><para>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</para><para>Conditional: You must specify either <code>StackSetMaxConcurrentCount</code> or <code>StackSetMaxConcurrentPercentage</code>,
            but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductCmdlet.ProvisioningPreferences_StackSetMaxConcurrencyPercentage">
            <summary>
            <para>
            <para>The maximum percentage of accounts in which to perform this operation at one time.</para><para>When calculating the number of accounts based on the specified percentage, AWS Service
            Catalog rounds down to the next whole number. This is true except in cases where rounding
            down would result is zero. In this case, AWS Service Catalog sets the number as <code>1</code>
            instead.</para><para>Note that this setting lets you specify the maximum for operations. For large deployments,
            under certain circumstances the actual number of accounts acted upon concurrently
            may be lower due to service throttling.</para><para>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</para><para>Conditional: You must specify either <code>StackSetMaxConcurrentCount</code> or <code>StackSetMaxConcurrentPercentage</code>,
            but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductCmdlet.ProvisioningPreferences_StackSetRegion">
            <summary>
            <para>
            <para>One or more AWS Regions where the provisioned product will be available.</para><para>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</para><para>The specified regions should be within the list of regions from the <code>STACKSET</code>
            constraint. To get the list of regions in the <code>STACKSET</code> constraint, use
            the <code>DescribeProvisioningParameters</code> operation.</para><para>If no values are specified, the default value is all regions from the <code>STACKSET</code>
            constraint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductCmdlet.Tag">
            <summary>
            <para>
            <para>One or more tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RecordDetail'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ProvisionProductResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ProvisionProductResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProvisionedProductName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProvisionedProductName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductPlanCmdlet">
            <summary>
            Creates a plan. A plan includes the list of resources to be created (when provisioning
            a new product) or modified (when updating a provisioned product) when the plan is
            executed.
            
             
            <para>
            You can create one plan per provisioned product. To create a plan for an existing
            provisioned product, the product status must be AVAILBLE or TAINTED.
            </para><para>
            To view the resource changes in the change set, use <a>DescribeProvisionedProductPlan</a>.
            To create or modify the provisioned product, use <a>ExecuteProvisionedProductPlan</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductPlanCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductPlanCmdlet.IdempotencyToken">
            <summary>
            <para>
            <para>A unique identifier that you provide to ensure idempotency. If multiple requests differ
            only by the idempotency token, the same response is returned for each repeated request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductPlanCmdlet.NotificationArn">
            <summary>
            <para>
            <para>Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductPlanCmdlet.PathId">
            <summary>
            <para>
            <para>The path identifier of the product. This value is optional if the product has a default
            path, and required if the product has more than one path. To list the paths for a
            product, use <a>ListLaunchPaths</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductPlanCmdlet.PlanName">
            <summary>
            <para>
            <para>The name of the plan.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductPlanCmdlet.PlanType">
            <summary>
            <para>
            <para>The plan type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductPlanCmdlet.ProductId">
            <summary>
            <para>
            <para>The product identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductPlanCmdlet.ProvisionedProductName">
            <summary>
            <para>
            <para>A user-friendly name for the provisioned product. This value must be unique for the
            AWS account and cannot be updated after the product is provisioned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductPlanCmdlet.ProvisioningArtifactId">
            <summary>
            <para>
            <para>The identifier of the provisioning artifact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductPlanCmdlet.ProvisioningParameter">
            <summary>
            <para>
            <para>Parameters specified by the administrator that are required for provisioning the product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductPlanCmdlet.Tag">
            <summary>
            <para>
            <para>One or more tags.</para><para>If the plan is for an existing provisioned product, the product must have a <code>RESOURCE_UPDATE</code>
            constraint with <code>TagUpdatesOnProvisionedProduct</code> set to <code>ALLOWED</code>
            to allow tag updates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductPlanCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.CreateProvisionedProductPlanResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.CreateProvisionedProductPlanResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductPlanCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PlanName parameter.
            The -PassThru parameter is deprecated, use -Select '^PlanName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisionedProductPlanCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.NewSCProvisioningArtifactCmdlet">
            <summary>
            Creates a provisioning artifact (also known as a version) for the specified product.
            
             
            <para>
            You cannot create a provisioning artifact for a product that was shared with you.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisioningArtifactCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisioningArtifactCmdlet.Parameters_Description">
            <summary>
            <para>
            <para>The description of the provisioning artifact, including how it differs from the previous
            provisioning artifact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisioningArtifactCmdlet.Parameters_DisableTemplateValidation">
            <summary>
            <para>
            <para>If set to true, AWS Service Catalog stops validating the specified provisioning artifact
            even if it is invalid.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisioningArtifactCmdlet.IdempotencyToken">
            <summary>
            <para>
            <para>A unique identifier that you provide to ensure idempotency. If multiple requests differ
            only by the idempotency token, the same response is returned for each repeated request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisioningArtifactCmdlet.Parameters_Info">
            <summary>
            <para>
            <para>The URL of the CloudFormation template in Amazon S3. Specify the URL in JSON format
            as follows:</para><para><code>"LoadTemplateFromURL": "https://s3.amazonaws.com/cf-templates-ozkq9d3hgiq2-us-east-1/..."</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisioningArtifactCmdlet.Parameters_Name">
            <summary>
            <para>
            <para>The name of the provisioning artifact (for example, v1 v2beta). No spaces are allowed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisioningArtifactCmdlet.ProductId">
            <summary>
            <para>
            <para>The product identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisioningArtifactCmdlet.Parameters_Type">
            <summary>
            <para>
            <para>The type of provisioning artifact.</para><ul><li><para><code>CLOUD_FORMATION_TEMPLATE</code> - AWS CloudFormation template</para></li><li><para><code>MARKETPLACE_AMI</code> - AWS Marketplace AMI</para></li><li><para><code>MARKETPLACE_CAR</code> - AWS Marketplace Clusters and AWS Resources</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisioningArtifactCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.CreateProvisioningArtifactResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.CreateProvisioningArtifactResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisioningArtifactCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProductId parameter.
            The -PassThru parameter is deprecated, use -Select '^ProductId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCProvisioningArtifactCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.NewSCServiceActionCmdlet">
            <summary>
            Creates a self-service action.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCServiceActionCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCServiceActionCmdlet.Definition">
            <summary>
            <para>
            <para>The self-service action definition. Can be one of the following:</para><dl><dt>Name</dt><dd><para>The name of the AWS Systems Manager document (SSM document). For example, <code>AWS-RestartEC2Instance</code>.</para><para>If you are using a shared SSM document, you must provide the ARN instead of the name.</para></dd><dt>Version</dt><dd><para>The AWS Systems Manager automation document version. For example, <code>"Version":
            "1"</code></para></dd><dt>AssumeRole</dt><dd><para>The Amazon Resource Name (ARN) of the role that performs the self-service actions
            on your behalf. For example, <code>"AssumeRole": "arn:aws:iam::12345678910:role/ActionRole"</code>.</para><para>To reuse the provisioned product launch role, set to <code>"AssumeRole": "LAUNCH_ROLE"</code>.</para></dd><dt>Parameters</dt><dd><para>The list of parameters in JSON format.</para><para>For example: <code>[{\"Name\":\"InstanceId\",\"Type\":\"TARGET\"}]</code> or <code>[{\"Name\":\"InstanceId\",\"Type\":\"TEXT_VALUE\"}]</code>.</para></dd></dl>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCServiceActionCmdlet.DefinitionType">
            <summary>
            <para>
            <para>The service action definition type. For example, <code>SSM_AUTOMATION</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCServiceActionCmdlet.Description">
            <summary>
            <para>
            <para>The self-service action description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCServiceActionCmdlet.IdempotencyToken">
            <summary>
            <para>
            <para>A unique identifier that you provide to ensure idempotency. If multiple requests differ
            only by the idempotency token, the same response is returned for each repeated request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCServiceActionCmdlet.Name">
            <summary>
            <para>
            <para>The self-service action name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCServiceActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ServiceActionDetail'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.CreateServiceActionResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.CreateServiceActionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCServiceActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IdempotencyToken parameter.
            The -PassThru parameter is deprecated, use -Select '^IdempotencyToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCServiceActionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.NewSCTagOptionCmdlet">
            <summary>
            Creates a TagOption.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCTagOptionCmdlet.Key">
            <summary>
            <para>
            <para>The TagOption key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCTagOptionCmdlet.Value">
            <summary>
            <para>
            <para>The TagOption value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCTagOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TagOptionDetail'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.CreateTagOptionResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.CreateTagOptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCTagOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Value parameter.
            The -PassThru parameter is deprecated, use -Select '^Value' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.NewSCTagOptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.ReceiveSCPortfolioShareCmdlet">
            <summary>
            Accepts an offer to share the specified portfolio.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.ReceiveSCPortfolioShareCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.ReceiveSCPortfolioShareCmdlet.PortfolioId">
            <summary>
            <para>
            <para>The portfolio identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.ReceiveSCPortfolioShareCmdlet.PortfolioShareType">
            <summary>
            <para>
            <para>The type of shared portfolios to accept. The default is to accept imported portfolios.</para><ul><li><para><code>AWS_ORGANIZATIONS</code> - Accept portfolios shared by the master account of
            your organization.</para></li><li><para><code>IMPORTED</code> - Accept imported portfolios.</para></li><li><para><code>AWS_SERVICECATALOG</code> - Not supported. (Throws ResourceNotFoundException.)</para></li></ul><para>For example, <code>aws servicecatalog accept-portfolio-share --portfolio-id "port-2qwzkwxt3y5fk"
            --portfolio-share-type AWS_ORGANIZATIONS</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.ReceiveSCPortfolioShareCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.AcceptPortfolioShareResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.ReceiveSCPortfolioShareCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PortfolioId parameter.
            The -PassThru parameter is deprecated, use -Select '^PortfolioId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.ReceiveSCPortfolioShareCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.RegisterSCBudgetWithResourceCmdlet">
            <summary>
            Associates the specified budget with the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RegisterSCBudgetWithResourceCmdlet.BudgetName">
            <summary>
            <para>
            <para>The name of the budget you want to associate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RegisterSCBudgetWithResourceCmdlet.ResourceId">
            <summary>
            <para>
            <para> The resource identifier. Either a portfolio-id or a product-id.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RegisterSCBudgetWithResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.AssociateBudgetWithResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RegisterSCBudgetWithResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BudgetName parameter.
            The -PassThru parameter is deprecated, use -Select '^BudgetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RegisterSCBudgetWithResourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.RegisterSCPrincipalWithPortfolioCmdlet">
            <summary>
            Associates the specified principal ARN with the specified portfolio.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RegisterSCPrincipalWithPortfolioCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RegisterSCPrincipalWithPortfolioCmdlet.PortfolioId">
            <summary>
            <para>
            <para>The portfolio identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RegisterSCPrincipalWithPortfolioCmdlet.PrincipalARN">
            <summary>
            <para>
            <para>The ARN of the principal (IAM user, role, or group).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RegisterSCPrincipalWithPortfolioCmdlet.PrincipalType">
            <summary>
            <para>
            <para>The principal type. The supported value is <code>IAM</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RegisterSCPrincipalWithPortfolioCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.AssociatePrincipalWithPortfolioResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RegisterSCPrincipalWithPortfolioCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PrincipalARN parameter.
            The -PassThru parameter is deprecated, use -Select '^PrincipalARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RegisterSCPrincipalWithPortfolioCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.RegisterSCProductWithPortfolioCmdlet">
            <summary>
            Associates the specified product with the specified portfolio.
            
             
            <para>
            A delegated admin is authorized to invoke this command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RegisterSCProductWithPortfolioCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RegisterSCProductWithPortfolioCmdlet.PortfolioId">
            <summary>
            <para>
            <para>The portfolio identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RegisterSCProductWithPortfolioCmdlet.ProductId">
            <summary>
            <para>
            <para>The product identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RegisterSCProductWithPortfolioCmdlet.SourcePortfolioId">
            <summary>
            <para>
            <para>The identifier of the source portfolio.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RegisterSCProductWithPortfolioCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.AssociateProductWithPortfolioResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RegisterSCProductWithPortfolioCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProductId parameter.
            The -PassThru parameter is deprecated, use -Select '^ProductId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RegisterSCProductWithPortfolioCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.RemoveSCConstraintCmdlet">
            <summary>
            Deletes the specified constraint.
            
             
            <para>
            A delegated admin is authorized to invoke this command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCConstraintCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCConstraintCmdlet.Id">
            <summary>
            <para>
            <para>The identifier of the constraint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCConstraintCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DeleteConstraintResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCConstraintCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCConstraintCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.RemoveSCPortfolioCmdlet">
            <summary>
            Deletes the specified portfolio.
            
             
            <para>
            You cannot delete a portfolio if it was shared with you or if it has associated products,
            users, constraints, or shared accounts.
            </para><para>
            A delegated admin is authorized to invoke this command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCPortfolioCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCPortfolioCmdlet.Id">
            <summary>
            <para>
            <para>The portfolio identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCPortfolioCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DeletePortfolioResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCPortfolioCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCPortfolioCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.RemoveSCPortfolioShareCmdlet">
            <summary>
            Stops sharing the specified portfolio with the specified account or organization node.
            Shares to an organization node can only be deleted by the master account of an organization
            or by a delegated administrator.
            
             
            <para>
            Note that if a delegated admin is de-registered, portfolio shares created from that
            account are removed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCPortfolioShareCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCPortfolioShareCmdlet.AccountId">
            <summary>
            <para>
            <para>The AWS account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCPortfolioShareCmdlet.PortfolioId">
            <summary>
            <para>
            <para>The portfolio identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCPortfolioShareCmdlet.OrganizationNode_Type">
            <summary>
            <para>
            <para>The organization node type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCPortfolioShareCmdlet.OrganizationNode_Value">
            <summary>
            <para>
            <para>The identifier of the organization node.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCPortfolioShareCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PortfolioShareToken'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DeletePortfolioShareResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.DeletePortfolioShareResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCPortfolioShareCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCPortfolioShareCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.RemoveSCProductCmdlet">
            <summary>
            Deletes the specified product.
            
             
            <para>
            You cannot delete a product if it was shared with you or is associated with a portfolio.
            </para><para>
            A delegated admin is authorized to invoke this command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProductCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProductCmdlet.Id">
            <summary>
            <para>
            <para>The product identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProductCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DeleteProductResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProductCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProductCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisionedProductCmdlet">
            <summary>
            Terminates the specified provisioned product.
            
             
            <para>
            This operation does not delete any records associated with the provisioned product.
            </para><para>
            You can check the status of this request using <a>DescribeRecord</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisionedProductCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisionedProductCmdlet.IgnoreError">
            <summary>
            <para>
            <para>If set to true, AWS Service Catalog stops managing the specified provisioned product
            even if it cannot delete the underlying resources.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisionedProductCmdlet.ProvisionedProductId">
            <summary>
            <para>
            <para>The identifier of the provisioned product. You cannot specify both <code>ProvisionedProductName</code>
            and <code>ProvisionedProductId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisionedProductCmdlet.ProvisionedProductName">
            <summary>
            <para>
            <para>The name of the provisioned product. You cannot specify both <code>ProvisionedProductName</code>
            and <code>ProvisionedProductId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisionedProductCmdlet.TerminateToken">
            <summary>
            <para>
            <para>An idempotency token that uniquely identifies the termination request. This token
            is only valid during the termination process. After the provisioned product is terminated,
            subsequent requests to terminate the same provisioned product always return <b>ResourceNotFound</b>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisionedProductCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RecordDetail'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.TerminateProvisionedProductResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.TerminateProvisionedProductResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisionedProductCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProvisionedProductId parameter.
            The -PassThru parameter is deprecated, use -Select '^ProvisionedProductId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisionedProductCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisionedProductPlanCmdlet">
            <summary>
            Deletes the specified plan.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisionedProductPlanCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisionedProductPlanCmdlet.IgnoreError">
            <summary>
            <para>
            <para>If set to true, AWS Service Catalog stops managing the specified provisioned product
            even if it cannot delete the underlying resources.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisionedProductPlanCmdlet.PlanId">
            <summary>
            <para>
            <para>The plan identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisionedProductPlanCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DeleteProvisionedProductPlanResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisionedProductPlanCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PlanId parameter.
            The -PassThru parameter is deprecated, use -Select '^PlanId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisionedProductPlanCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisioningArtifactCmdlet">
            <summary>
            Deletes the specified provisioning artifact (also known as a version) for the specified
            product.
            
             
            <para>
            You cannot delete a provisioning artifact associated with a product that was shared
            with you. You cannot delete the last provisioning artifact for a product, because
            a product must have at least one provisioning artifact.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisioningArtifactCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisioningArtifactCmdlet.ProductId">
            <summary>
            <para>
            <para>The product identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisioningArtifactCmdlet.ProvisioningArtifactId">
            <summary>
            <para>
            <para>The identifier of the provisioning artifact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisioningArtifactCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DeleteProvisioningArtifactResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisioningArtifactCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProvisioningArtifactId parameter.
            The -PassThru parameter is deprecated, use -Select '^ProvisioningArtifactId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCProvisioningArtifactCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.RemoveSCServiceActionCmdlet">
            <summary>
            Deletes a self-service action.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCServiceActionCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCServiceActionCmdlet.Id">
            <summary>
            <para>
            <para>The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCServiceActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DeleteServiceActionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCServiceActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCServiceActionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.RemoveSCServiceActionAssociationFromProvisioningArtifactCmdlet">
            <summary>
            Disassociates the specified self-service action association from the specified provisioning
            artifact.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCServiceActionAssociationFromProvisioningArtifactCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCServiceActionAssociationFromProvisioningArtifactCmdlet.ProductId">
            <summary>
            <para>
            <para>The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCServiceActionAssociationFromProvisioningArtifactCmdlet.ProvisioningArtifactId">
            <summary>
            <para>
            <para>The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCServiceActionAssociationFromProvisioningArtifactCmdlet.ServiceActionId">
            <summary>
            <para>
            <para>The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCServiceActionAssociationFromProvisioningArtifactCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DisassociateServiceActionFromProvisioningArtifactResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCServiceActionAssociationFromProvisioningArtifactCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServiceActionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServiceActionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCServiceActionAssociationFromProvisioningArtifactCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.RemoveSCServiceActionAssociationFromProvisioningArtifactBatchCmdlet">
            <summary>
            Disassociates a batch of self-service actions from the specified provisioning artifact.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCServiceActionAssociationFromProvisioningArtifactBatchCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCServiceActionAssociationFromProvisioningArtifactBatchCmdlet.ServiceActionAssociation">
            <summary>
            <para>
            <para>One or more associations, each consisting of the Action ID, the Product ID, and the
            Provisioning Artifact ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCServiceActionAssociationFromProvisioningArtifactBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FailedServiceActionAssociations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.BatchDisassociateServiceActionFromProvisioningArtifactResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.BatchDisassociateServiceActionFromProvisioningArtifactResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCServiceActionAssociationFromProvisioningArtifactBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.RemoveSCTagOptionCmdlet">
            <summary>
            Deletes the specified TagOption.
            
             
            <para>
            You cannot delete a TagOption if it is associated with a product or portfolio.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCTagOptionCmdlet.Id">
            <summary>
            <para>
            <para>The TagOption identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCTagOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DeleteTagOptionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCTagOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCTagOptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.RemoveSCTagOptionFromResourceCmdlet">
            <summary>
            Disassociates the specified TagOption from the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCTagOptionFromResourceCmdlet.ResourceId">
            <summary>
            <para>
            <para>The resource identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCTagOptionFromResourceCmdlet.TagOptionId">
            <summary>
            <para>
            <para>The TagOption identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCTagOptionFromResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DisassociateTagOptionFromResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCTagOptionFromResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TagOptionId parameter.
            The -PassThru parameter is deprecated, use -Select '^TagOptionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.RemoveSCTagOptionFromResourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.StartSCProvisionedProductPlanExecutionCmdlet">
            <summary>
            Provisions or modifies a product based on the resource changes for the specified plan.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.StartSCProvisionedProductPlanExecutionCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.StartSCProvisionedProductPlanExecutionCmdlet.IdempotencyToken">
            <summary>
            <para>
            <para>A unique identifier that you provide to ensure idempotency. If multiple requests differ
            only by the idempotency token, the same response is returned for each repeated request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.StartSCProvisionedProductPlanExecutionCmdlet.PlanId">
            <summary>
            <para>
            <para>The plan identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.StartSCProvisionedProductPlanExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RecordDetail'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ExecuteProvisionedProductPlanResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ExecuteProvisionedProductPlanResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.StartSCProvisionedProductPlanExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IdempotencyToken parameter.
            The -PassThru parameter is deprecated, use -Select '^IdempotencyToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.StartSCProvisionedProductPlanExecutionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.StartSCProvisionedProductServiceActionExecutionCmdlet">
            <summary>
            Executes a self-service action against a provisioned product.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.StartSCProvisionedProductServiceActionExecutionCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.StartSCProvisionedProductServiceActionExecutionCmdlet.ExecuteToken">
            <summary>
            <para>
            <para>An idempotency token that uniquely identifies the execute request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.StartSCProvisionedProductServiceActionExecutionCmdlet.Parameter">
            <summary>
            <para>
            <para>A map of all self-service action parameters and their values. If a provided parameter
            is of a special type, such as <code>TARGET</code>, the provided value will override
            the default value generated by AWS Service Catalog. If the parameters field is not
            provided, no additional parameters are passed and default values will be used for
            any special parameters such as <code>TARGET</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.StartSCProvisionedProductServiceActionExecutionCmdlet.ProvisionedProductId">
            <summary>
            <para>
            <para>The identifier of the provisioned product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.StartSCProvisionedProductServiceActionExecutionCmdlet.ServiceActionId">
            <summary>
            <para>
            <para>The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.StartSCProvisionedProductServiceActionExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RecordDetail'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.ExecuteProvisionedProductServiceActionResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.ExecuteProvisionedProductServiceActionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.StartSCProvisionedProductServiceActionExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServiceActionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServiceActionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.StartSCProvisionedProductServiceActionExecutionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.UnregisterSCBudgetFromResourceCmdlet">
            <summary>
            Disassociates the specified budget from the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UnregisterSCBudgetFromResourceCmdlet.BudgetName">
            <summary>
            <para>
            <para>The name of the budget you want to disassociate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UnregisterSCBudgetFromResourceCmdlet.ResourceId">
            <summary>
            <para>
            <para>The resource identifier you want to disassociate from. Either a portfolio-id or a
            product-id.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UnregisterSCBudgetFromResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DisassociateBudgetFromResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UnregisterSCBudgetFromResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BudgetName parameter.
            The -PassThru parameter is deprecated, use -Select '^BudgetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UnregisterSCBudgetFromResourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.UnregisterSCPrincipalFromPortfolioCmdlet">
            <summary>
            Disassociates a previously associated principal ARN from a specified portfolio.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UnregisterSCPrincipalFromPortfolioCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UnregisterSCPrincipalFromPortfolioCmdlet.PortfolioId">
            <summary>
            <para>
            <para>The portfolio identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UnregisterSCPrincipalFromPortfolioCmdlet.PrincipalARN">
            <summary>
            <para>
            <para>The ARN of the principal (IAM user, role, or group).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UnregisterSCPrincipalFromPortfolioCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DisassociatePrincipalFromPortfolioResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UnregisterSCPrincipalFromPortfolioCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PrincipalARN parameter.
            The -PassThru parameter is deprecated, use -Select '^PrincipalARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UnregisterSCPrincipalFromPortfolioCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.UnregisterSCProductFromPortfolioCmdlet">
            <summary>
            Disassociates the specified product from the specified portfolio. 
            
             
            <para>
            A delegated admin is authorized to invoke this command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UnregisterSCProductFromPortfolioCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UnregisterSCProductFromPortfolioCmdlet.PortfolioId">
            <summary>
            <para>
            <para>The portfolio identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UnregisterSCProductFromPortfolioCmdlet.ProductId">
            <summary>
            <para>
            <para>The product identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UnregisterSCProductFromPortfolioCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.DisassociateProductFromPortfolioResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UnregisterSCProductFromPortfolioCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProductId parameter.
            The -PassThru parameter is deprecated, use -Select '^ProductId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UnregisterSCProductFromPortfolioCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.UpdateSCConstraintCmdlet">
            <summary>
            Updates the specified constraint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCConstraintCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCConstraintCmdlet.Description">
            <summary>
            <para>
            <para>The updated description of the constraint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCConstraintCmdlet.Id">
            <summary>
            <para>
            <para>The identifier of the constraint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCConstraintCmdlet.Parameter">
            <summary>
            <para>
            <para>The constraint parameters, in JSON format. The syntax depends on the constraint type
            as follows:</para><dl><dt>LAUNCH</dt><dd><para>You are required to specify either the <code>RoleArn</code> or the <code>LocalRoleName</code>
            but can't use both.</para><para>Specify the <code>RoleArn</code> property as follows:</para><para><code>{"RoleArn" : "arn:aws:iam::123456789012:role/LaunchRole"}</code></para><para>Specify the <code>LocalRoleName</code> property as follows:</para><para><code>{"LocalRoleName": "SCBasicLaunchRole"}</code></para><para>If you specify the <code>LocalRoleName</code> property, when an account uses the launch
            constraint, the IAM role with that name in the account will be used. This allows launch-role
            constraints to be account-agnostic so the administrator can create fewer resources
            per shared account.</para><note><para>The given role name must exist in the account used to create the launch constraint
            and the account of the user who launches a product with this launch constraint.</para></note><para>You cannot have both a <code>LAUNCH</code> and a <code>STACKSET</code> constraint.</para><para>You also cannot have more than one <code>LAUNCH</code> constraint on a product and
            portfolio.</para></dd><dt>NOTIFICATION</dt><dd><para>Specify the <code>NotificationArns</code> property as follows:</para><para><code>{"NotificationArns" : ["arn:aws:sns:us-east-1:123456789012:Topic"]}</code></para></dd><dt>RESOURCE_UPDATE</dt><dd><para>Specify the <code>TagUpdatesOnProvisionedProduct</code> property as follows:</para><para><code>{"Version":"2.0","Properties":{"TagUpdateOnProvisionedProduct":"String"}}</code></para><para>The <code>TagUpdatesOnProvisionedProduct</code> property accepts a string value of
            <code>ALLOWED</code> or <code>NOT_ALLOWED</code>.</para></dd><dt>STACKSET</dt><dd><para>Specify the <code>Parameters</code> property as follows:</para><para><code>{"Version": "String", "Properties": {"AccountList": [ "String" ], "RegionList":
            [ "String" ], "AdminRole": "String", "ExecutionRole": "String"}}</code></para><para>You cannot have both a <code>LAUNCH</code> and a <code>STACKSET</code> constraint.</para><para>You also cannot have more than one <code>STACKSET</code> constraint on a product and
            portfolio.</para><para>Products with a <code>STACKSET</code> constraint will launch an AWS CloudFormation
            stack set.</para></dd><dt>TEMPLATE</dt><dd><para>Specify the <code>Rules</code> property. For more information, see <a href="http://docs.aws.amazon.com/servicecatalog/latest/adminguide/reference-template_constraint_rules.html">Template
            Constraint Rules</a>.</para></dd></dl>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCConstraintCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.UpdateConstraintResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.UpdateConstraintResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCConstraintCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCConstraintCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.UpdateSCPortfolioCmdlet">
            <summary>
            Updates the specified portfolio.
            
             
            <para>
            You cannot update a product that was shared with you.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCPortfolioCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCPortfolioCmdlet.AddTag">
            <summary>
            <para>
            <para>The tags to add.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCPortfolioCmdlet.Description">
            <summary>
            <para>
            <para>The updated description of the portfolio.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCPortfolioCmdlet.DisplayName">
            <summary>
            <para>
            <para>The name to use for display purposes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCPortfolioCmdlet.Id">
            <summary>
            <para>
            <para>The portfolio identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCPortfolioCmdlet.ProviderName">
            <summary>
            <para>
            <para>The updated name of the portfolio provider.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCPortfolioCmdlet.RemoveTag">
            <summary>
            <para>
            <para>The tags to remove.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCPortfolioCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.UpdatePortfolioResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.UpdatePortfolioResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCPortfolioCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCPortfolioCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.UpdateSCProductCmdlet">
            <summary>
            Updates the specified product.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProductCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProductCmdlet.AddTag">
            <summary>
            <para>
            <para>The tags to add to the product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProductCmdlet.Description">
            <summary>
            <para>
            <para>The updated description of the product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProductCmdlet.Distributor">
            <summary>
            <para>
            <para>The updated distributor of the product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProductCmdlet.Id">
            <summary>
            <para>
            <para>The product identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProductCmdlet.Name">
            <summary>
            <para>
            <para>The updated product name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProductCmdlet.RemoveTag">
            <summary>
            <para>
            <para>The tags to remove from the product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProductCmdlet.SupportDescription">
            <summary>
            <para>
            <para>The updated support description for the product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProductCmdlet.SupportEmail">
            <summary>
            <para>
            <para>The updated support email for the product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProductCmdlet.SupportUrl">
            <summary>
            <para>
            <para>The updated support URL for the product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProductCmdlet.Owner">
            <summary>
            <para>
            <para>The updated owner of the product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProductCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.UpdateProductResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.UpdateProductResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProductCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProductCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductCmdlet">
            <summary>
            Requests updates to the configuration of the specified provisioned product.
            
             
            <para>
            If there are tags associated with the object, they cannot be updated or added. Depending
            on the specific updates requested, this operation can update with no interruption,
            with some interruption, or replace the provisioned product entirely.
            </para><para>
            You can check the status of this request using <a>DescribeRecord</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductCmdlet.PathId">
            <summary>
            <para>
            <para>The new path identifier. This value is optional if the product has a default path,
            and required if the product has more than one path.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductCmdlet.ProductId">
            <summary>
            <para>
            <para>The identifier of the product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductCmdlet.ProvisionedProductId">
            <summary>
            <para>
            <para>The identifier of the provisioned product. You cannot specify both <code>ProvisionedProductName</code>
            and <code>ProvisionedProductId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductCmdlet.ProvisionedProductName">
            <summary>
            <para>
            <para>The name of the provisioned product. You cannot specify both <code>ProvisionedProductName</code>
            and <code>ProvisionedProductId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductCmdlet.ProvisioningArtifactId">
            <summary>
            <para>
            <para>The identifier of the provisioning artifact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductCmdlet.ProvisioningParameter">
            <summary>
            <para>
            <para>The new parameters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductCmdlet.ProvisioningPreferences_StackSetAccount">
            <summary>
            <para>
            <para>One or more AWS accounts that will have access to the provisioned product.</para><para>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</para><para>The AWS accounts specified should be within the list of accounts in the <code>STACKSET</code>
            constraint. To get the list of accounts in the <code>STACKSET</code> constraint, use
            the <code>DescribeProvisioningParameters</code> operation.</para><para>If no values are specified, the default value is all accounts from the <code>STACKSET</code>
            constraint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductCmdlet.ProvisioningPreferences_StackSetFailureToleranceCount">
            <summary>
            <para>
            <para>The number of accounts, per region, for which this operation can fail before AWS Service
            Catalog stops the operation in that region. If the operation is stopped in a region,
            AWS Service Catalog doesn't attempt the operation in any subsequent regions.</para><para>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</para><para>Conditional: You must specify either <code>StackSetFailureToleranceCount</code> or
            <code>StackSetFailureTolerancePercentage</code>, but not both.</para><para>The default value is <code>0</code> if no value is specified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductCmdlet.ProvisioningPreferences_StackSetFailureTolerancePercentage">
            <summary>
            <para>
            <para>The percentage of accounts, per region, for which this stack operation can fail before
            AWS Service Catalog stops the operation in that region. If the operation is stopped
            in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions.</para><para>When calculating the number of accounts based on the specified percentage, AWS Service
            Catalog rounds down to the next whole number.</para><para>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</para><para>Conditional: You must specify either <code>StackSetFailureToleranceCount</code> or
            <code>StackSetFailureTolerancePercentage</code>, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductCmdlet.ProvisioningPreferences_StackSetMaxConcurrencyCount">
            <summary>
            <para>
            <para>The maximum number of accounts in which to perform this operation at one time. This
            is dependent on the value of <code>StackSetFailureToleranceCount</code>. <code>StackSetMaxConcurrentCount</code>
            is at most one more than the <code>StackSetFailureToleranceCount</code>.</para><para>Note that this setting lets you specify the maximum for operations. For large deployments,
            under certain circumstances the actual number of accounts acted upon concurrently
            may be lower due to service throttling.</para><para>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</para><para>Conditional: You must specify either <code>StackSetMaxConcurrentCount</code> or <code>StackSetMaxConcurrentPercentage</code>,
            but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductCmdlet.ProvisioningPreferences_StackSetMaxConcurrencyPercentage">
            <summary>
            <para>
            <para>The maximum percentage of accounts in which to perform this operation at one time.</para><para>When calculating the number of accounts based on the specified percentage, AWS Service
            Catalog rounds down to the next whole number. This is true except in cases where rounding
            down would result is zero. In this case, AWS Service Catalog sets the number as <code>1</code>
            instead.</para><para>Note that this setting lets you specify the maximum for operations. For large deployments,
            under certain circumstances the actual number of accounts acted upon concurrently
            may be lower due to service throttling.</para><para>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</para><para>Conditional: You must specify either <code>StackSetMaxConcurrentCount</code> or <code>StackSetMaxConcurrentPercentage</code>,
            but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductCmdlet.ProvisioningPreferences_StackSetOperationType">
            <summary>
            <para>
            <para>Determines what action AWS Service Catalog performs to a stack set or a stack instance
            represented by the provisioned product. The default value is <code>UPDATE</code> if
            nothing is specified.</para><para>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</para><dl><dt>CREATE</dt><dd><para>Creates a new stack instance in the stack set represented by the provisioned product.
            In this case, only new stack instances are created based on accounts and regions;
            if new ProductId or ProvisioningArtifactID are passed, they will be ignored.</para></dd><dt>UPDATE</dt><dd><para>Updates the stack set represented by the provisioned product and also its stack instances.</para></dd><dt>DELETE</dt><dd><para>Deletes a stack instance in the stack set represented by the provisioned product.</para></dd></dl>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductCmdlet.ProvisioningPreferences_StackSetRegion">
            <summary>
            <para>
            <para>One or more AWS Regions where the provisioned product will be available.</para><para>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</para><para>The specified regions should be within the list of regions from the <code>STACKSET</code>
            constraint. To get the list of regions in the <code>STACKSET</code> constraint, use
            the <code>DescribeProvisioningParameters</code> operation.</para><para>If no values are specified, the default value is all regions from the <code>STACKSET</code>
            constraint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductCmdlet.Tag">
            <summary>
            <para>
            <para>One or more tags. Requires the product to have <code>RESOURCE_UPDATE</code> constraint
            with <code>TagUpdatesOnProvisionedProduct</code> set to <code>ALLOWED</code> to allow
            tag updates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductCmdlet.UpdateToken">
            <summary>
            <para>
            <para>The idempotency token that uniquely identifies the provisioning update request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RecordDetail'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.UpdateProvisionedProductResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.UpdateProvisionedProductResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProvisionedProductId parameter.
            The -PassThru parameter is deprecated, use -Select '^ProvisionedProductId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductPropertyCmdlet">
            <summary>
            Requests updates to the properties of the specified provisioned product.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductPropertyCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductPropertyCmdlet.IdempotencyToken">
            <summary>
            <para>
            <para>The idempotency token that uniquely identifies the provisioning product update request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductPropertyCmdlet.ProvisionedProductId">
            <summary>
            <para>
            <para>The identifier of the provisioned product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductPropertyCmdlet.ProvisionedProductProperty">
            <summary>
            <para>
            <para>A map that contains the provisioned product properties to be updated.</para><para>The <code>OWNER</code> key accepts user ARNs and role ARNs. The owner is the user
            that is allowed to see, update, terminate, and execute service actions in the provisioned
            product.</para><para>The administrator can change the owner of a provisioned product to another IAM user
            within the same account. Both end user owners and administrators can see ownership
            history of the provisioned product using the <code>ListRecordHistory</code> API. The
            new owner can describe all past records for the provisioned product using the <code>DescribeRecord</code>
            API. The previous owner can no longer use <code>DescribeRecord</code>, but can still
            see the product's history from when he was an owner using <code>ListRecordHistory</code>.</para><para>If a provisioned product ownership is assigned to an end user, they can see and perform
            any action through the API or Service Catalog console such as update, terminate, and
            execute service actions. If an end user provisions a product and the owner is updated
            to someone else, they will no longer be able to see or perform any actions through
            API or the Service Catalog console on that provisioned product.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductPropertyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.UpdateProvisionedProductPropertiesResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.UpdateProvisionedProductPropertiesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductPropertyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProvisionedProductId parameter.
            The -PassThru parameter is deprecated, use -Select '^ProvisionedProductId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisionedProductPropertyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisioningArtifactCmdlet">
            <summary>
            Updates the specified provisioning artifact (also known as a version) for the specified
            product.
            
             
            <para>
            You cannot update a provisioning artifact for a product that was shared with you.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisioningArtifactCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisioningArtifactCmdlet.Active">
            <summary>
            <para>
            <para>Indicates whether the product version is active.</para><para>Inactive provisioning artifacts are invisible to end users. End users cannot launch
            or update a provisioned product from an inactive provisioning artifact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisioningArtifactCmdlet.Description">
            <summary>
            <para>
            <para>The updated description of the provisioning artifact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisioningArtifactCmdlet.Guidance">
            <summary>
            <para>
            <para>Information set by the administrator to provide guidance to end users about which
            provisioning artifacts to use.</para><para>The <code>DEFAULT</code> value indicates that the product version is active.</para><para>The administrator can set the guidance to <code>DEPRECATED</code> to inform users
            that the product version is deprecated. Users are able to make updates to a provisioned
            product of a deprecated version but cannot launch new provisioned products using a
            deprecated version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisioningArtifactCmdlet.Name">
            <summary>
            <para>
            <para>The updated name of the provisioning artifact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisioningArtifactCmdlet.ProductId">
            <summary>
            <para>
            <para>The product identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisioningArtifactCmdlet.ProvisioningArtifactId">
            <summary>
            <para>
            <para>The identifier of the provisioning artifact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisioningArtifactCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.UpdateProvisioningArtifactResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.UpdateProvisioningArtifactResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisioningArtifactCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProvisioningArtifactId parameter.
            The -PassThru parameter is deprecated, use -Select '^ProvisioningArtifactId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCProvisioningArtifactCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.UpdateSCServiceActionCmdlet">
            <summary>
            Updates a self-service action.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCServiceActionCmdlet.AcceptLanguage">
            <summary>
            <para>
            <para>The language code.</para><ul><li><para><code>en</code> - English (default)</para></li><li><para><code>jp</code> - Japanese</para></li><li><para><code>zh</code> - Chinese</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCServiceActionCmdlet.Definition">
            <summary>
            <para>
            <para>A map that defines the self-service action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCServiceActionCmdlet.Description">
            <summary>
            <para>
            <para>The self-service action description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCServiceActionCmdlet.Id">
            <summary>
            <para>
            <para>The self-service action identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCServiceActionCmdlet.Name">
            <summary>
            <para>
            <para>The self-service action name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCServiceActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ServiceActionDetail'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.UpdateServiceActionResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.UpdateServiceActionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCServiceActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCServiceActionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SC.UpdateSCTagOptionCmdlet">
            <summary>
            Updates the specified TagOption.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCTagOptionCmdlet.Active">
            <summary>
            <para>
            <para>The updated active state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCTagOptionCmdlet.Id">
            <summary>
            <para>
            <para>The TagOption identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCTagOptionCmdlet.Value">
            <summary>
            <para>
            <para>The updated value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCTagOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TagOptionDetail'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceCatalog.Model.UpdateTagOptionResponse).
            Specifying the name of a property of type Amazon.ServiceCatalog.Model.UpdateTagOptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCTagOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Value parameter.
            The -PassThru parameter is deprecated, use -Select '^Value' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SC.UpdateSCTagOptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
