<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.CognitoIdentity</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.CGI.AddCGIResourceTagCmdlet">
            <summary>
            Assigns a set of tags to an Amazon Cognito identity pool. A tag is a label that you
            can use to categorize and manage identity pools in different ways, such as by purpose,
            owner, environment, or other criteria.
            
             
            <para>
            Each tag consists of a key and value, both of which you define. A key is a general
            category for more specific values. For example, if you have two versions of an identity
            pool, one for testing and another for production, you might assign an <code>Environment</code>
            tag key to both identity pools. The value of this key might be <code>Test</code> for
            one identity pool and <code>Production</code> for the other.
            </para><para>
            Tags are useful for cost tracking and access control. You can activate your tags so
            that they appear on the Billing and Cost Management console, where you can track the
            costs associated with your identity pools. In an IAM policy, you can constrain permissions
            for identity pools based on specific tags or tag values.
            </para><para>
            You can use this action up to 5 times per second, per account. An identity pool can
            have as many as 50 tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.AddCGIResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the identity pool to assign the tags to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.AddCGIResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to assign to the identity pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.AddCGIResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentity.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.AddCGIResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.AddCGIResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGI.GetCGIIdentityPoolCmdlet">
            <summary>
            Gets details about a particular identity pool, including the pool name, ID description,
            creation date, and current number of users.
            
             
            <para>
            You must use AWS Developer credentials to call this API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.GetCGIIdentityPoolCmdlet.IdentityPoolId">
            <summary>
            <para>
            <para>An identity pool ID in the format REGION:GUID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.GetCGIIdentityPoolCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentity.Model.DescribeIdentityPoolResponse).
            Specifying the name of a property of type Amazon.CognitoIdentity.Model.DescribeIdentityPoolResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.GetCGIIdentityPoolCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IdentityPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^IdentityPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGI.GetCGIIdentityPoolListCmdlet">
            <summary>
            Lists all of the Cognito identity pools registered for your account.
            
             
            <para>
            You must use AWS Developer credentials to call this API.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.GetCGIIdentityPoolListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of identities to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>60</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.GetCGIIdentityPoolListCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.GetCGIIdentityPoolListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IdentityPools'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentity.Model.ListIdentityPoolsResponse).
            Specifying the name of a property of type Amazon.CognitoIdentity.Model.ListIdentityPoolsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.GetCGIIdentityPoolListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGI.GetCGIIdentityPoolRoleCmdlet">
            <summary>
            Gets the roles for an identity pool.
            
             
            <para>
            You must use AWS Developer credentials to call this API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.GetCGIIdentityPoolRoleCmdlet.IdentityPoolId">
            <summary>
            <para>
            <para>An identity pool ID in the format REGION:GUID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.GetCGIIdentityPoolRoleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentity.Model.GetIdentityPoolRolesResponse).
            Specifying the name of a property of type Amazon.CognitoIdentity.Model.GetIdentityPoolRolesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.GetCGIIdentityPoolRoleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IdentityPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^IdentityPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGI.GetCGIResourceTagCmdlet">
            <summary>
            Lists the tags that are assigned to an Amazon Cognito identity pool.
            
             
            <para>
            A tag is a label that you can apply to identity pools to categorize and manage them
            in different ways, such as by purpose, owner, environment, or other criteria.
            </para><para>
            You can use this action up to 10 times per second, per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.GetCGIResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the identity pool that the tags are assigned to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.GetCGIResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentity.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.CognitoIdentity.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.GetCGIResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGI.NewCGIIdentityPoolCmdlet">
            <summary>
            Creates a new identity pool. The identity pool is a store of user identity information
            that is specific to your AWS account. The keys for <code>SupportedLoginProviders</code>
            are as follows:
            
             <ul><li><para>
            Facebook: <code>graph.facebook.com</code></para></li><li><para>
            Google: <code>accounts.google.com</code></para></li><li><para>
            Amazon: <code>www.amazon.com</code></para></li><li><para>
            Twitter: <code>api.twitter.com</code></para></li><li><para>
            Digits: <code>www.digits.com</code></para></li></ul><para>
            You must use AWS Developer credentials to call this API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.NewCGIIdentityPoolCmdlet.AllowClassicFlow">
            <summary>
            <para>
            <para>Enables or disables the Basic (Classic) authentication flow. For more information,
            see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html">Identity
            Pools (Federated Identities) Authentication Flow</a> in the <i>Amazon Cognito Developer
            Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.NewCGIIdentityPoolCmdlet.AllowUnauthenticatedIdentity">
            <summary>
            <para>
            <para>TRUE if the identity pool supports unauthenticated logins.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.NewCGIIdentityPoolCmdlet.CognitoIdentityProvider">
            <summary>
            <para>
            <para>An array of Amazon Cognito user pools and their client IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.NewCGIIdentityPoolCmdlet.DeveloperProviderName">
            <summary>
            <para>
            <para>The "domain" by which Cognito will refer to your users. This name acts as a placeholder
            that allows your backend and the Cognito service to communicate about the developer
            provider. For the <code>DeveloperProviderName</code>, you can use letters as well
            as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</para><para>Once you have set a developer provider name, you cannot change it. Please take care
            in setting this parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.NewCGIIdentityPoolCmdlet.IdentityPoolName">
            <summary>
            <para>
            <para>A string that you provide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.NewCGIIdentityPoolCmdlet.IdentityPoolTag">
            <summary>
            <para>
            <para>Tags to assign to the identity pool. A tag is a label that you can apply to identity
            pools to categorize and manage them in different ways, such as by purpose, owner,
            environment, or other criteria.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.NewCGIIdentityPoolCmdlet.OpenIdConnectProviderARNs">
            <summary>
            <para>
            <para>A list of OpendID Connect provider ARNs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.NewCGIIdentityPoolCmdlet.SamlProviderARNs">
            <summary>
            <para>
            <para>An array of Amazon Resource Names (ARNs) of the SAML provider for your identity pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.NewCGIIdentityPoolCmdlet.SupportedLoginProvider">
            <summary>
            <para>
            <para>Optional key:value pairs mapping provider names to provider app IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.NewCGIIdentityPoolCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentity.Model.CreateIdentityPoolResponse).
            Specifying the name of a property of type Amazon.CognitoIdentity.Model.CreateIdentityPoolResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.NewCGIIdentityPoolCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IdentityPoolName parameter.
            The -PassThru parameter is deprecated, use -Select '^IdentityPoolName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.NewCGIIdentityPoolCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGI.RemoveCGIIdentityPoolCmdlet">
            <summary>
            Deletes an identity pool. Once a pool is deleted, users will not be able to authenticate
            with the pool.
            
             
            <para>
            You must use AWS Developer credentials to call this API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.RemoveCGIIdentityPoolCmdlet.IdentityPoolId">
            <summary>
            <para>
            <para>An identity pool ID in the format REGION:GUID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.RemoveCGIIdentityPoolCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentity.Model.DeleteIdentityPoolResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.RemoveCGIIdentityPoolCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IdentityPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^IdentityPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.RemoveCGIIdentityPoolCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGI.RemoveCGIResourceTagCmdlet">
            <summary>
            Removes the specified tags from an Amazon Cognito identity pool. You can use this
            action up to 5 times per second, per account
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.RemoveCGIResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the identity pool that the tags are assigned to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.RemoveCGIResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The keys of the tags to remove from the user pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.RemoveCGIResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentity.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.RemoveCGIResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.RemoveCGIResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGI.SetCGIIdentityPoolRoleCmdlet">
            <summary>
            Sets the roles for an identity pool. These roles are used when making calls to <a>GetCredentialsForIdentity</a>
            action.
            
             
            <para>
            You must use AWS Developer credentials to call this API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.SetCGIIdentityPoolRoleCmdlet.IdentityPoolId">
            <summary>
            <para>
            <para>An identity pool ID in the format REGION:GUID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.SetCGIIdentityPoolRoleCmdlet.RoleMapping">
            <summary>
            <para>
            <para>How users for a specific identity provider are to mapped to roles. This is a string
            to <a>RoleMapping</a> object map. The string identifies the identity provider, for
            example, "graph.facebook.com" or "cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".</para><para>Up to 25 rules can be specified per identity provider.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.SetCGIIdentityPoolRoleCmdlet.Role">
            <summary>
            <para>
            <para>The map of roles associated with this pool. For a given role, the key will be either
            "authenticated" or "unauthenticated" and the value will be the Role ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.SetCGIIdentityPoolRoleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentity.Model.SetIdentityPoolRolesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.SetCGIIdentityPoolRoleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IdentityPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^IdentityPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.SetCGIIdentityPoolRoleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGI.UpdateCGIIdentityPoolCmdlet">
            <summary>
            Updates an identity pool.
            
             
            <para>
            You must use AWS Developer credentials to call this API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.UpdateCGIIdentityPoolCmdlet.AllowClassicFlow">
            <summary>
            <para>
            <para>Enables or disables the Basic (Classic) authentication flow. For more information,
            see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html">Identity
            Pools (Federated Identities) Authentication Flow</a> in the <i>Amazon Cognito Developer
            Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.UpdateCGIIdentityPoolCmdlet.AllowUnauthenticatedIdentity">
            <summary>
            <para>
            <para>TRUE if the identity pool supports unauthenticated logins.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.UpdateCGIIdentityPoolCmdlet.CognitoIdentityProvider">
            <summary>
            <para>
            <para>A list representing an Amazon Cognito user pool and its client ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.UpdateCGIIdentityPoolCmdlet.DeveloperProviderName">
            <summary>
            <para>
            <para>The "domain" by which Cognito will refer to your users.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.UpdateCGIIdentityPoolCmdlet.IdentityPoolId">
            <summary>
            <para>
            <para>An identity pool ID in the format REGION:GUID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.UpdateCGIIdentityPoolCmdlet.IdentityPoolName">
            <summary>
            <para>
            <para>A string that you provide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.UpdateCGIIdentityPoolCmdlet.IdentityPoolTag">
            <summary>
            <para>
            <para>The tags that are assigned to the identity pool. A tag is a label that you can apply
            to identity pools to categorize and manage them in different ways, such as by purpose,
            owner, environment, or other criteria.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.UpdateCGIIdentityPoolCmdlet.OpenIdConnectProviderARNs">
            <summary>
            <para>
            <para>A list of OpendID Connect provider ARNs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.UpdateCGIIdentityPoolCmdlet.SamlProviderARNs">
            <summary>
            <para>
            <para>An array of Amazon Resource Names (ARNs) of the SAML provider for your identity pool.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.UpdateCGIIdentityPoolCmdlet.SupportedLoginProvider">
            <summary>
            <para>
            <para>Optional key:value pairs mapping provider names to provider app IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.UpdateCGIIdentityPoolCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CognitoIdentity.Model.UpdateIdentityPoolResponse).
            Specifying the name of a property of type Amazon.CognitoIdentity.Model.UpdateIdentityPoolResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.UpdateCGIIdentityPoolCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IdentityPoolId parameter.
            The -PassThru parameter is deprecated, use -Select '^IdentityPoolId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGI.UpdateCGIIdentityPoolCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
