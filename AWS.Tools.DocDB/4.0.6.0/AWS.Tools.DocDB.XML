<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.DocDB</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.AddDOCResourceTagCmdlet">
            <summary>
            Adds metadata tags to an Amazon DocumentDB resource. You can use these tags with cost
            allocation reporting to track costs that are associated with Amazon DocumentDB resources.
            or in a <code>Condition</code> statement in an AWS Identity and Access Management
            (IAM) policy for Amazon DocumentDB.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.AddDOCResourceTagCmdlet.ResourceName">
            <summary>
            <para>
            <para>The Amazon DocumentDB resource that the tags are added to. This value is an Amazon
            Resource Name (ARN).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.AddDOCResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the Amazon DocumentDB resource. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.AddDOCResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.AddTagsToResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.AddDOCResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceName parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.AddDOCResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.CompleteDOCPendingMaintenanceActionCmdlet">
            <summary>
            Applies a pending maintenance action to a resource (for example, to a DB instance).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CompleteDOCPendingMaintenanceActionCmdlet.ApplyAction">
            <summary>
            <para>
            <para>The pending maintenance action to apply to this resource.</para><para>Valid values: <code>system-update</code>, <code>db-upgrade</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CompleteDOCPendingMaintenanceActionCmdlet.OptInType">
            <summary>
            <para>
            <para>A value that specifies the type of opt-in request or undoes an opt-in request. An
            opt-in request of type <code>immediate</code> can't be undone.</para><para>Valid values:</para><ul><li><para><code>immediate</code> - Apply the maintenance action immediately.</para></li><li><para><code>next-maintenance</code> - Apply the maintenance action during the next maintenance
            window for the resource.</para></li><li><para><code>undo-opt-in</code> - Cancel any existing <code>next-maintenance</code> opt-in
            requests.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CompleteDOCPendingMaintenanceActionCmdlet.ResourceIdentifier">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource that the pending maintenance action
            applies to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CompleteDOCPendingMaintenanceActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourcePendingMaintenanceActions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.ApplyPendingMaintenanceActionResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.ApplyPendingMaintenanceActionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CompleteDOCPendingMaintenanceActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CompleteDOCPendingMaintenanceActionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.CopyDOCDBClusterParameterGroupCmdlet">
            <summary>
            Copies the specified cluster parameter group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CopyDOCDBClusterParameterGroupCmdlet.SourceDBClusterParameterGroupIdentifier">
            <summary>
            <para>
            <para>The identifier or Amazon Resource Name (ARN) for the source cluster parameter group.</para><para>Constraints:</para><ul><li><para>Must specify a valid cluster parameter group.</para></li><li><para>If the source cluster parameter group is in the same AWS Region as the copy, specify
            a valid parameter group identifier; for example, <code>my-db-cluster-param-group</code>,
            or a valid ARN.</para></li><li><para>If the source parameter group is in a different AWS Region than the copy, specify
            a valid cluster parameter group ARN; for example, <code>arn:aws:rds:us-east-1:123456789012:cluster-pg:custom-cluster-group1</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CopyDOCDBClusterParameterGroupCmdlet.Tag">
            <summary>
            <para>
            <para>The tags that are to be assigned to the parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CopyDOCDBClusterParameterGroupCmdlet.TargetDBClusterParameterGroupDescription">
            <summary>
            <para>
            <para>A description for the copied cluster parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CopyDOCDBClusterParameterGroupCmdlet.TargetDBClusterParameterGroupIdentifier">
            <summary>
            <para>
            <para>The identifier for the copied cluster parameter group.</para><para>Constraints:</para><ul><li><para>Cannot be null, empty, or blank.</para></li><li><para>Must contain from 1 to 255 letters, numbers, or hyphens.</para></li><li><para>The first character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>my-cluster-param-group1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CopyDOCDBClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterParameterGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.CopyDBClusterParameterGroupResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.CopyDBClusterParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CopyDOCDBClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TargetDBClusterParameterGroupIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^TargetDBClusterParameterGroupIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CopyDOCDBClusterParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.CopyDOCDBClusterSnapshotCmdlet">
            <summary>
            Copies a snapshot of a cluster.
            
             
            <para>
            To copy a cluster snapshot from a shared manual cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code>
            must be the Amazon Resource Name (ARN) of the shared cluster snapshot.
            </para><para>
            To cancel the copy operation after it is in progress, delete the target cluster snapshot
            identified by <code>TargetDBClusterSnapshotIdentifier</code> while that DB cluster
            snapshot is in the <i>copying</i> status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CopyDOCDBClusterSnapshotCmdlet.CopyTag">
            <summary>
            <para>
            <para>Set to <code>true</code> to copy all tags from the source cluster snapshot to the
            target cluster snapshot, and otherwise <code>false</code>. The default is <code>false</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CopyDOCDBClusterSnapshotCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS KMS key ID for an encrypted cluster snapshot. The AWS KMS key ID is the Amazon
            Resource Name (ARN), AWS KMS key identifier, or the AWS KMS key alias for the AWS
            KMS encryption key. </para><para>If you copy an encrypted cluster snapshot from your AWS account, you can specify a
            value for <code>KmsKeyId</code> to encrypt the copy with a new AWS KMS encryption
            key. If you don't specify a value for <code>KmsKeyId</code>, then the copy of the
            cluster snapshot is encrypted with the same AWS KMS key as the source cluster snapshot.
            </para><para>If you copy an encrypted cluster snapshot that is shared from another AWS account,
            then you must specify a value for <code>KmsKeyId</code>. </para><para>To copy an encrypted cluster snapshot to another AWS Region, set <code>KmsKeyId</code>
            to the AWS KMS key ID that you want to use to encrypt the copy of the cluster snapshot
            in the destination Region. AWS KMS encryption keys are specific to the AWS Region
            that they are created in, and you can't use encryption keys from one Region in another
            Region.</para><para>If you copy an unencrypted cluster snapshot and specify a value for the <code>KmsKeyId</code>
            parameter, an error is returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CopyDOCDBClusterSnapshotCmdlet.PreSignedUrl">
            <summary>
            <para>
            <para>The URL that contains a Signature Version 4 signed request for the <code>CopyDBClusterSnapshot</code>
            API action in the AWS Region that contains the source cluster snapshot to copy. You
            must use the <code>PreSignedUrl</code> parameter when copying an encrypted cluster
            snapshot from another AWS Region.</para><para>The presigned URL must be a valid request for the <code>CopyDBSClusterSnapshot</code>
            API action that can be executed in the source AWS Region that contains the encrypted
            DB cluster snapshot to be copied. The presigned URL request must contain the following
            parameter values:</para><ul><li><para><code>KmsKeyId</code> - The AWS KMS key identifier for the key to use to encrypt
            the copy of the cluster snapshot in the destination AWS Region. This is the same identifier
            for both the <code>CopyDBClusterSnapshot</code> action that is called in the destination
            AWS Region, and the action contained in the presigned URL.</para></li><li><para><code>DestinationRegion</code> - The name of the AWS Region that the DB cluster snapshot
            will be created in.</para></li><li><para><code>SourceDBClusterSnapshotIdentifier</code> - The cluster snapshot identifier
            for the encrypted cluster snapshot to be copied. This identifier must be in the Amazon
            Resource Name (ARN) format for the source AWS Region. For example, if you are copying
            an encrypted cluster snapshot from the us-west-2 AWS Region, then your <code>SourceDBClusterSnapshotIdentifier</code>
            looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:cluster-snapshot:my-cluster-snapshot-20161115</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CopyDOCDBClusterSnapshotCmdlet.SourceDBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster snapshot to copy. This parameter is not case sensitive.</para><para>You can't copy an encrypted, shared cluster snapshot from one AWS Region to another.</para><para>Constraints:</para><ul><li><para>Must specify a valid system snapshot in the "available" state.</para></li><li><para>If the source snapshot is in the same AWS Region as the copy, specify a valid snapshot
            identifier.</para></li><li><para>If the source snapshot is in a different AWS Region than the copy, specify a valid
            cluster snapshot ARN.</para></li></ul><para>Example: <code>my-cluster-snapshot1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CopyDOCDBClusterSnapshotCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the cluster snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CopyDOCDBClusterSnapshotCmdlet.TargetDBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier of the new cluster snapshot to create from the source cluster snapshot.
            This parameter is not case sensitive.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens.</para></li><li><para>The first character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>my-cluster-snapshot2</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CopyDOCDBClusterSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterSnapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.CopyDBClusterSnapshotResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.CopyDBClusterSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CopyDOCDBClusterSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TargetDBClusterSnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^TargetDBClusterSnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.CopyDOCDBClusterSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterCmdlet">
            <summary>
            Modifies a setting for an Amazon DocumentDB cluster. You can change one or more database
            configuration parameters by specifying these parameters and the new values in the
            request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterCmdlet.ApplyImmediately">
            <summary>
            <para>
            <para>A value that specifies whether the changes in this request and any pending changes
            are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code>
            setting for the cluster. If this parameter is set to <code>false</code>, changes to
            the cluster are applied during the next maintenance window.</para><para>The <code>ApplyImmediately</code> parameter affects only the <code>NewDBClusterIdentifier</code>
            and <code>MasterUserPassword</code> values. If you set this parameter value to <code>false</code>,
            the changes to the <code>NewDBClusterIdentifier</code> and <code>MasterUserPassword</code>
            values are applied during the next maintenance window. All other changes are applied
            immediately, regardless of the value of the <code>ApplyImmediately</code> parameter.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterCmdlet.BackupRetentionPeriod">
            <summary>
            <para>
            <para>The number of days for which automated backups are retained. You must specify a minimum
            value of 1.</para><para>Default: 1</para><para>Constraints:</para><ul><li><para>Must be a value from 1 to 35.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The cluster identifier for the cluster that is being modified. This parameter is not
            case sensitive.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing <code>DBCluster</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the cluster parameter group to use for the cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterCmdlet.DeletionProtection">
            <summary>
            <para>
            <para>Specifies whether this cluster can be deleted. If <code>DeletionProtection</code>
            is enabled, the cluster cannot be deleted unless it is modified and <code>DeletionProtection</code>
            is disabled. <code>DeletionProtection</code> protects clusters from being accidentally
            deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterCmdlet.CloudwatchLogsExportConfiguration_DisableLogType">
            <summary>
            <para>
            <para>The list of log types to disable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterCmdlet.CloudwatchLogsExportConfiguration_EnableLogType">
            <summary>
            <para>
            <para>The list of log types to enable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The version number of the database engine to which you want to upgrade. Changing this
            parameter results in an outage. The change is applied during the next maintenance
            window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterCmdlet.MasterUserPassword">
            <summary>
            <para>
            <para>The password for the master database user. This password can contain any printable
            ASCII character except forward slash (/), double quote ("), or the "at" symbol (@).</para><para>Constraints: Must contain from 8 to 100 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterCmdlet.NewDBClusterIdentifier">
            <summary>
            <para>
            <para>The new cluster identifier for the cluster when renaming a cluster. This value is
            stored as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens.</para></li><li><para>The first character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>my-cluster2</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterCmdlet.Port">
            <summary>
            <para>
            <para>The port number on which the cluster accepts connections.</para><para>Constraints: Must be a value from <code>1150</code> to <code>65535</code>. </para><para>Default: The same port as the original cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterCmdlet.PreferredBackupWindow">
            <summary>
            <para>
            <para>The daily time range during which automated backups are created if automated backups
            are enabled, using the <code>BackupRetentionPeriod</code> parameter. </para><para>The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region. </para><para>Constraints:</para><ul><li><para>Must be in the format <code>hh24:mi-hh24:mi</code>.</para></li><li><para>Must be in Universal Coordinated Time (UTC).</para></li><li><para>Must not conflict with the preferred maintenance window.</para></li><li><para>Must be at least 30 minutes.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>The weekly time range during which system maintenance can occur, in Universal Coordinated
            Time (UTC).</para><para>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code></para><para>The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region, occurring on a random day of the week. </para><para>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</para><para>Constraints: Minimum 30-minute window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of virtual private cloud (VPC) security groups that the cluster will belong
            to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.ModifyDBClusterResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.ModifyDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterParameterGroupCmdlet">
            <summary>
            Modifies the parameters of a cluster parameter group. To modify more than one parameter,
            submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>,
            and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
            request. 
            
             <note><para>
            Changes to dynamic parameters are applied immediately. Changes to static parameters
            require a reboot or maintenance window before the change can take effect.
            </para></note><important><para>
            After you create a cluster parameter group, you should wait at least 5 minutes before
            creating your first cluster that uses that cluster parameter group as the default
            parameter group. This allows Amazon DocumentDB to fully complete the create action
            before the parameter group is used as the default for a new cluster. This step is
            especially important for parameters that are critical when creating the default database
            for a cluster, such as the character set for the default database defined by the <code>character_set_database</code>
            parameter.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterParameterGroupCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the cluster parameter group to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterParameterGroupCmdlet.Parameter">
            <summary>
            <para>
            <para>A list of parameters in the cluster parameter group to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterParameterGroupName'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.ModifyDBClusterParameterGroupResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.ModifyDBClusterParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterSnapshotAttributeCmdlet">
            <summary>
            Adds an attribute and values to, or removes an attribute and values from, a manual
            DB cluster snapshot.
            
             
            <para>
            To share a manual cluster snapshot with other AWS accounts, specify <code>restore</code>
            as the <code>AttributeName</code>, and use the <code>ValuesToAdd</code> parameter
            to add a list of IDs of the AWS accounts that are authorized to restore the manual
            cluster snapshot. Use the value <code>all</code> to make the manual cluster snapshot
            public, which means that it can be copied or restored by all AWS accounts. Do not
            add the <code>all</code> value for any manual DB cluster snapshots that contain private
            information that you don't want available to all AWS accounts. If a manual cluster
            snapshot is encrypted, it can be shared, but only by specifying a list of authorized
            AWS account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code>
            as a value for that parameter in this case.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterSnapshotAttributeCmdlet.AttributeName">
            <summary>
            <para>
            <para>The name of the cluster snapshot attribute to modify.</para><para>To manage authorization for other AWS accounts to copy or restore a manual cluster
            snapshot, set this value to <code>restore</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterSnapshotAttributeCmdlet.DBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier for the cluster snapshot to modify the attributes for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterSnapshotAttributeCmdlet.ValuesToAdd">
            <summary>
            <para>
            <para>A list of cluster snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</para><para>To authorize other AWS accounts to copy or restore a manual cluster snapshot, set
            this list to include one or more AWS account IDs. To make the manual cluster snapshot
            restorable by any AWS account, set it to <code>all</code>. Do not add the <code>all</code>
            value for any manual cluster snapshots that contain private information that you don't
            want to be available to all AWS accounts.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterSnapshotAttributeCmdlet.ValuesToRemove">
            <summary>
            <para>
            <para>A list of cluster snapshot attributes to remove from the attribute specified by <code>AttributeName</code>.</para><para>To remove authorization for other AWS accounts to copy or restore a manual cluster
            snapshot, set this list to include one or more AWS account identifiers. To remove
            authorization for any AWS account to copy or restore the cluster snapshot, set it
            to <code>all</code> . If you specify <code>all</code>, an AWS account whose account
            ID is explicitly added to the <code>restore</code> attribute can still copy or restore
            a manual cluster snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterSnapshotAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterSnapshotAttributesResult'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.ModifyDBClusterSnapshotAttributeResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.ModifyDBClusterSnapshotAttributeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterSnapshotAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AttributeName parameter.
            The -PassThru parameter is deprecated, use -Select '^AttributeName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBClusterSnapshotAttributeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBInstanceCmdlet">
            <summary>
            Modifies settings for an instance. You can change one or more database configuration
            parameters by specifying these parameters and the new values in the request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBInstanceCmdlet.ApplyImmediately">
            <summary>
            <para>
            <para>Specifies whether the modifications in this request and any pending modifications
            are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code>
            setting for the instance. </para><para> If this parameter is set to <code>false</code>, changes to the instance are applied
            during the next maintenance window. Some parameter changes can cause an outage and
            are applied on the next reboot.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBInstanceCmdlet.AutoMinorVersionUpgrade">
            <summary>
            <para>
            <para>Indicates that minor version upgrades are applied automatically to the instance during
            the maintenance window. Changing this parameter doesn't result in an outage except
            in the following case, and the change is asynchronously applied as soon as possible.
            An outage results if this parameter is set to <code>true</code> during the maintenance
            window, and a newer minor version is available, and Amazon DocumentDB has enabled
            automatic patching for that engine version. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBInstanceCmdlet.CACertificateIdentifier">
            <summary>
            <para>
            <para>Indicates the certificate that needs to be associated with the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBInstanceCmdlet.DBInstanceClass">
            <summary>
            <para>
            <para>The new compute and memory capacity of the instance; for example, <code>db.r5.large</code>.
            Not all instance classes are available in all AWS Regions. </para><para>If you modify the instance class, an outage occurs during the change. The change is
            applied during the next maintenance window, unless <code>ApplyImmediately</code> is
            specified as <code>true</code> for this request. </para><para>Default: Uses existing setting.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBInstanceCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The instance identifier. This value is stored as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing <code>DBInstance</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBInstanceCmdlet.NewDBInstanceIdentifier">
            <summary>
            <para>
            <para> The new instance identifier for the instance when renaming an instance. When you
            change the instance identifier, an instance reboot occurs immediately if you set <code>Apply
            Immediately</code> to <code>true</code>. It occurs during the next maintenance window
            if you set <code>Apply Immediately</code> to <code>false</code>. This value is stored
            as a lowercase string. </para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens.</para></li><li><para>The first character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>mydbinstance</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBInstanceCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>The weekly time range (in UTC) during which system maintenance can occur, which might
            result in an outage. Changing this parameter doesn't result in an outage except in
            the following situation, and the change is asynchronously applied as soon as possible.
            If there are pending actions that cause a reboot, and the maintenance window is changed
            to include the current time, changing this parameter causes a reboot of the instance.
            If you are moving this window to the current time, there must be at least 30 minutes
            between the current time and end of the window to ensure that pending changes are
            applied.</para><para>Default: Uses existing setting.</para><para>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code></para><para>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</para><para>Constraints: Must be at least 30 minutes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBInstanceCmdlet.PromotionTier">
            <summary>
            <para>
            <para>A value that specifies the order in which an Amazon DocumentDB replica is promoted
            to the primary instance after a failure of the existing primary instance.</para><para>Default: 1</para><para>Valid values: 0-15</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.ModifyDBInstanceResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.ModifyDBInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBSubnetGroupCmdlet">
            <summary>
            Modifies an existing subnet group. subnet groups must contain at least one subnet
            in at least two Availability Zones in the AWS Region.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBSubnetGroupCmdlet.DBSubnetGroupDescription">
            <summary>
            <para>
            <para>The description for the subnet group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBSubnetGroupCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The name for the subnet group. This value is stored as a lowercase string. You can't
            modify the default subnet group. </para><para>Constraints: Must match the name of an existing <code>DBSubnetGroup</code>. Must not
            be default.</para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBSubnetGroupCmdlet.SubnetId">
            <summary>
            <para>
            <para>The Amazon EC2 subnet IDs for the subnet group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBSubnetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBSubnetGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.ModifyDBSubnetGroupResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.ModifyDBSubnetGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBSubnetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSubnetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSubnetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.EditDOCDBSubnetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.GetDOCCertificateCmdlet">
            <summary>
            Returns a list of certificate authority (CA) certificates provided by Amazon DocumentDB
            for this AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCCertificateCmdlet.CertificateIdentifier">
            <summary>
            <para>
            <para>The user-supplied certificate identifier. If this parameter is specified, information
            for only the specified certificate is returned. If this parameter is omitted, a list
            of up to <code>MaxRecords</code> certificates is returned. This parameter is not case
            sensitive.</para><para>Constraints</para><ul><li><para>Must match an existing <code>CertificateIdentifier</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCCertificateCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCCertificateCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous <code>DescribeCertificates</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCCertificateCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints:</para><ul><li><para>Minimum: 20</para></li><li><para>Maximum: 100</para></li></ul>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Certificates'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.DescribeCertificatesResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.DescribeCertificatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCCertificateCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterCmdlet">
            <summary>
            Returns information about provisioned Amazon DocumentDB clusters. This API operation
            supports pagination. For certain management features such as cluster and instance
            lifecycle management, Amazon DocumentDB leverages operational technology that is shared
            with Amazon RDS and Amazon Neptune. Use the <code>filterName=engine,Values=docdb</code>
            filter parameter to return only Amazon DocumentDB clusters.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The user-provided cluster identifier. If this parameter is specified, information
            from only the specific cluster is returned. This parameter isn't case sensitive.</para><para>Constraints:</para><ul><li><para>If provided, must match an existing <code>DBClusterIdentifier</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterCmdlet.Filter">
            <summary>
            <para>
            <para>A filter that specifies one or more clusters to describe.</para><para>Supported filters:</para><ul><li><para><code>db-cluster-id</code> - Accepts cluster identifiers and cluster Amazon Resource
            Names (ARNs). The results list only includes information about the clusters identified
            by these ARNs.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.DescribeDBClustersResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.DescribeDBClustersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterParameterCmdlet">
            <summary>
            Returns the detailed parameter list for a particular cluster parameter group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterParameterCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of a specific cluster parameter group to return parameter details for.</para><para>Constraints:</para><ul><li><para>If provided, must match the name of an existing <code>DBClusterParameterGroup</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterParameterCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterParameterCmdlet.Source">
            <summary>
            <para>
            <para> A value that indicates to return only parameters for a specific source. Parameter
            sources can be <code>engine</code>, <code>service</code>, or <code>customer</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterParameterCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterParameterCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Parameters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.DescribeDBClusterParametersResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.DescribeDBClusterParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterParameterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterParameterCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterParameterGroupCmdlet">
            <summary>
            Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code>
            parameter is specified, the list contains only the description of the specified cluster
            parameter group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterParameterGroupCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of a specific cluster parameter group to return details for.</para><para>Constraints:</para><ul><li><para>If provided, must match the name of an existing <code>DBClusterParameterGroup</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterParameterGroupCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterParameterGroupCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterParameterGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterParameterGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.DescribeDBClusterParameterGroupsResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.DescribeDBClusterParameterGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterParameterGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterSnapshotCmdlet">
            <summary>
            Returns information about cluster snapshots. This API operation supports pagination.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterSnapshotCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The ID of the cluster to retrieve the list of cluster snapshots for. This parameter
            can't be used with the <code>DBClusterSnapshotIdentifier</code> parameter. This parameter
            is not case sensitive. </para><para>Constraints:</para><ul><li><para>If provided, must match the identifier of an existing <code>DBCluster</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterSnapshotCmdlet.DBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>A specific cluster snapshot identifier to describe. This parameter can't be used with
            the <code>DBClusterIdentifier</code> parameter. This value is stored as a lowercase
            string. </para><para>Constraints:</para><ul><li><para>If provided, must match the identifier of an existing <code>DBClusterSnapshot</code>.</para></li><li><para>If this identifier is for an automated snapshot, the <code>SnapshotType</code> parameter
            must also be specified.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterSnapshotCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterSnapshotCmdlet.IncludePublic">
            <summary>
            <para>
            <para>Set to <code>true</code> to include manual cluster snapshots that are public and can
            be copied or restored by any AWS account, and otherwise <code>false</code>. The default
            is <code>false</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterSnapshotCmdlet.IncludeShared">
            <summary>
            <para>
            <para>Set to <code>true</code> to include shared manual cluster snapshots from other AWS
            accounts that this AWS account has been given permission to copy or restore, and otherwise
            <code>false</code>. The default is <code>false</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterSnapshotCmdlet.SnapshotType">
            <summary>
            <para>
            <para>The type of cluster snapshots to be returned. You can specify one of the following
            values:</para><ul><li><para><code>automated</code> - Return all cluster snapshots that Amazon DocumentDB has
            automatically created for your AWS account.</para></li><li><para><code>manual</code> - Return all cluster snapshots that you have manually created
            for your AWS account.</para></li><li><para><code>shared</code> - Return all manual cluster snapshots that have been shared to
            your AWS account.</para></li><li><para><code>public</code> - Return all cluster snapshots that have been marked as public.</para></li></ul><para>If you don't specify a <code>SnapshotType</code> value, then both automated and manual
            cluster snapshots are returned. You can include shared cluster snapshots with these
            results by setting the <code>IncludeShared</code> parameter to <code>true</code>.
            You can include public cluster snapshots with these results by setting the <code>IncludePublic</code>
            parameter to <code>true</code>.</para><para>The <code>IncludeShared</code> and <code>IncludePublic</code> parameters don't apply
            for <code>SnapshotType</code> values of <code>manual</code> or <code>automated</code>.
            The <code>IncludePublic</code> parameter doesn't apply when <code>SnapshotType</code>
            is set to <code>shared</code>. The <code>IncludeShared</code> parameter doesn't apply
            when <code>SnapshotType</code> is set to <code>public</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterSnapshotCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterSnapshotCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterSnapshots'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.DescribeDBClusterSnapshotsResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.DescribeDBClusterSnapshotsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterSnapshotCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterSnapshotAttributeCmdlet">
            <summary>
            Returns a list of cluster snapshot attribute names and values for a manual DB cluster
            snapshot.
            
             
            <para>
            When you share snapshots with other AWS accounts, <code>DescribeDBClusterSnapshotAttributes</code>
            returns the <code>restore</code> attribute and a list of IDs for the AWS accounts
            that are authorized to copy or restore the manual cluster snapshot. If <code>all</code>
            is included in the list of values for the <code>restore</code> attribute, then the
            manual cluster snapshot is public and can be copied or restored by all AWS accounts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterSnapshotAttributeCmdlet.DBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier for the cluster snapshot to describe the attributes for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterSnapshotAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterSnapshotAttributesResult'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.DescribeDBClusterSnapshotAttributesResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.DescribeDBClusterSnapshotAttributesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBClusterSnapshotAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterSnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterSnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBEngineVersionCmdlet">
            <summary>
            Returns a list of the available engines.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBEngineVersionCmdlet.DBParameterGroupFamily">
            <summary>
            <para>
            <para>The name of a specific parameter group family to return details for.</para><para>Constraints:</para><ul><li><para>If provided, must match an existing <code>DBParameterGroupFamily</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBEngineVersionCmdlet.DefaultOnly">
            <summary>
            <para>
            <para>Indicates that only the default version of the specified engine or engine and major
            version combination is returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBEngineVersionCmdlet.Engine">
            <summary>
            <para>
            <para>The database engine to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBEngineVersionCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The database engine version to return.</para><para>Example: <code>5.1.49</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBEngineVersionCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBEngineVersionCmdlet.ListSupportedCharacterSet">
            <summary>
            <para>
            <para>If this parameter is specified and the requested engine supports the <code>CharacterSetName</code>
            parameter for <code>CreateDBInstance</code>, the response includes a list of supported
            character sets for each engine version. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBEngineVersionCmdlet.ListSupportedTimezone">
            <summary>
            <para>
            <para>If this parameter is specified and the requested engine supports the <code>TimeZone</code>
            parameter for <code>CreateDBInstance</code>, the response includes a list of supported
            time zones for each engine version. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBEngineVersionCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBEngineVersionCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBEngineVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBEngineVersions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.DescribeDBEngineVersionsResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.DescribeDBEngineVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBEngineVersionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBInstanceCmdlet">
            <summary>
            Returns information about provisioned Amazon DocumentDB instances. This API supports
            pagination.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBInstanceCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The user-provided instance identifier. If this parameter is specified, information
            from only the specific instance is returned. This parameter isn't case sensitive.</para><para>Constraints:</para><ul><li><para>If provided, must match the identifier of an existing <code>DBInstance</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBInstanceCmdlet.Filter">
            <summary>
            <para>
            <para>A filter that specifies one or more instances to describe.</para><para>Supported filters:</para><ul><li><para><code>db-cluster-id</code> - Accepts cluster identifiers and cluster Amazon Resource
            Names (ARNs). The results list includes only the information about the instances that
            are associated with the clusters that are identified by these ARNs.</para></li><li><para><code>db-instance-id</code> - Accepts instance identifiers and instance ARNs. The
            results list includes only the information about the instances that are identified
            by these ARNs.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBInstanceCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBInstanceCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstances'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.DescribeDBInstancesResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.DescribeDBInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBInstanceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBSubnetGroupCmdlet">
            <summary>
            Returns a list of <code>DBSubnetGroup</code> descriptions. If a <code>DBSubnetGroupName</code>
            is specified, the list will contain only the descriptions of the specified <code>DBSubnetGroup</code>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBSubnetGroupCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The name of the subnet group to return details for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBSubnetGroupCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBSubnetGroupCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBSubnetGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBSubnetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBSubnetGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.DescribeDBSubnetGroupsResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.DescribeDBSubnetGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBSubnetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSubnetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSubnetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCDBSubnetGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.GetDOCEngineDefaultClusterParameterCmdlet">
            <summary>
            Returns the default engine and system parameter information for the cluster database
            engine.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEngineDefaultClusterParameterCmdlet.DBParameterGroupFamily">
            <summary>
            <para>
            <para>The name of the cluster parameter group family to return the engine parameter information
            for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEngineDefaultClusterParameterCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEngineDefaultClusterParameterCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEngineDefaultClusterParameterCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEngineDefaultClusterParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EngineDefaults'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.DescribeEngineDefaultClusterParametersResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.DescribeEngineDefaultClusterParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEngineDefaultClusterParameterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBParameterGroupFamily parameter.
            The -PassThru parameter is deprecated, use -Select '^DBParameterGroupFamily' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.GetDOCEventCmdlet">
            <summary>
            Returns events related to instances, security groups, snapshots, and DB parameter
            groups for the past 14 days. You can obtain events specific to a particular DB instance,
            security group, snapshot, or parameter group by providing the name as a parameter.
            By default, the events of the past hour are returned.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEventCmdlet.Duration">
            <summary>
            <para>
            <para>The number of minutes to retrieve events for.</para><para>Default: 60</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEventCmdlet.EndTime">
            <summary>
            <para>
            <para> The end of the time interval for which to retrieve events, specified in ISO 8601
            format. </para><para>Example: 2009-07-08T18:00Z</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEventCmdlet.EventCategory">
            <summary>
            <para>
            <para>A list of event categories that trigger notifications for an event notification subscription.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEventCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEventCmdlet.SourceIdentifier">
            <summary>
            <para>
            <para>The identifier of the event source for which events are returned. If not specified,
            then all sources are included in the response.</para><para>Constraints:</para><ul><li><para>If <code>SourceIdentifier</code> is provided, <code>SourceType</code> must also be
            provided.</para></li><li><para>If the source type is <code>DBInstance</code>, a <code>DBInstanceIdentifier</code>
            must be provided.</para></li><li><para>If the source type is <code>DBSecurityGroup</code>, a <code>DBSecurityGroupName</code>
            must be provided.</para></li><li><para>If the source type is <code>DBParameterGroup</code>, a <code>DBParameterGroupName</code>
            must be provided.</para></li><li><para>If the source type is <code>DBSnapshot</code>, a <code>DBSnapshotIdentifier</code>
            must be provided.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEventCmdlet.SourceType">
            <summary>
            <para>
            <para>The event source to retrieve events for. If no value is specified, all events are
            returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEventCmdlet.StartTime">
            <summary>
            <para>
            <para> The beginning of the time interval to retrieve events for, specified in ISO 8601
            format. </para><para>Example: 2009-07-08T18:00Z</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEventCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEventCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEventCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Events'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.DescribeEventsResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.DescribeEventsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEventCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEventCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.GetDOCEventCategoryCmdlet">
            <summary>
            Displays a list of categories for all event source types, or, if specified, for a
            specified source type.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEventCategoryCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEventCategoryCmdlet.SourceType">
            <summary>
            <para>
            <para>The type of source that is generating the events.</para><para>Valid values: <code>db-instance</code>, <code>db-parameter-group</code>, <code>db-security-group</code>,
            <code>db-snapshot</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEventCategoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventCategoriesMapList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.DescribeEventCategoriesResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.DescribeEventCategoriesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCEventCategoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceType parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.GetDOCOrderableDBInstanceOptionCmdlet">
            <summary>
            Returns a list of orderable instance options for the specified engine.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCOrderableDBInstanceOptionCmdlet.DBInstanceClass">
            <summary>
            <para>
            <para>The instance class filter value. Specify this parameter to show only the available
            offerings that match the specified instance class.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCOrderableDBInstanceOptionCmdlet.Engine">
            <summary>
            <para>
            <para>The name of the engine to retrieve instance options for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCOrderableDBInstanceOptionCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The engine version filter value. Specify this parameter to show only the available
            offerings that match the specified engine version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCOrderableDBInstanceOptionCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCOrderableDBInstanceOptionCmdlet.LicenseModel">
            <summary>
            <para>
            <para>The license model filter value. Specify this parameter to show only the available
            offerings that match the specified license model.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCOrderableDBInstanceOptionCmdlet.Vpc">
            <summary>
            <para>
            <para>The virtual private cloud (VPC) filter value. Specify this parameter to show only
            the available VPC or non-VPC offerings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCOrderableDBInstanceOptionCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCOrderableDBInstanceOptionCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCOrderableDBInstanceOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OrderableDBInstanceOptions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCOrderableDBInstanceOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Engine parameter.
            The -PassThru parameter is deprecated, use -Select '^Engine' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCOrderableDBInstanceOptionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.GetDOCPendingMaintenanceActionCmdlet">
            <summary>
            Returns a list of resources (for example, instances) that have at least one pending
            maintenance action.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCPendingMaintenanceActionCmdlet.Filter">
            <summary>
            <para>
            <para>A filter that specifies one or more resources to return pending maintenance actions
            for.</para><para>Supported filters:</para><ul><li><para><code>db-cluster-id</code> - Accepts cluster identifiers and cluster Amazon Resource
            Names (ARNs). The results list includes only pending maintenance actions for the clusters
            identified by these ARNs.</para></li><li><para><code>db-instance-id</code> - Accepts instance identifiers and instance ARNs. The
            results list includes only pending maintenance actions for the DB instances identified
            by these ARNs.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCPendingMaintenanceActionCmdlet.ResourceIdentifier">
            <summary>
            <para>
            <para>The ARN of a resource to return pending maintenance actions for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCPendingMaintenanceActionCmdlet.Marker">
            <summary>
            <para>
            <para>An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCPendingMaintenanceActionCmdlet.MaxRecord">
            <summary>
            <para>
            <para> The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: Minimum 20, maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCPendingMaintenanceActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PendingMaintenanceActions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.DescribePendingMaintenanceActionsResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.DescribePendingMaintenanceActionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCPendingMaintenanceActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCPendingMaintenanceActionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.GetDOCResourceTagCmdlet">
            <summary>
            Lists all tags on an Amazon DocumentDB resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCResourceTagCmdlet.Filter">
            <summary>
            <para>
            <para>This parameter is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCResourceTagCmdlet.ResourceName">
            <summary>
            <para>
            <para>The Amazon DocumentDB resource with tags to be listed. This value is an Amazon Resource
            Name (ARN).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TagList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.GetDOCResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceName parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet">
            <summary>
            Creates a new Amazon DocumentDB cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>A list of Amazon EC2 Availability Zones that instances in the cluster can be created
            in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.BackupRetentionPeriod">
            <summary>
            <para>
            <para>The number of days for which automated backups are retained. You must specify a minimum
            value of 1.</para><para>Default: 1</para><para>Constraints:</para><ul><li><para>Must be a value from 1 to 35.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The cluster identifier. This parameter is stored as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens.</para></li><li><para>The first character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>my-cluster</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para> The name of the cluster parameter group to associate with this cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>A subnet group to associate with this cluster.</para><para>Constraints: Must match the name of an existing <code>DBSubnetGroup</code>. Must not
            be default.</para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.DeletionProtection">
            <summary>
            <para>
            <para>Specifies whether this cluster can be deleted. If <code>DeletionProtection</code>
            is enabled, the cluster cannot be deleted unless it is modified and <code>DeletionProtection</code>
            is disabled. <code>DeletionProtection</code> protects clusters from being accidentally
            deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.EnableCloudwatchLogsExport">
            <summary>
            <para>
            <para>A list of log types that need to be enabled for exporting to Amazon CloudWatch Logs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.Engine">
            <summary>
            <para>
            <para>The name of the database engine to be used for this cluster.</para><para>Valid values: <code>docdb</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The version number of the database engine to use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS KMS key identifier for an encrypted cluster.</para><para>The AWS KMS key identifier is the Amazon Resource Name (ARN) for the AWS KMS encryption
            key. If you are creating a cluster using the same AWS account that owns the AWS KMS
            encryption key that is used to encrypt the new cluster, you can use the AWS KMS key
            alias instead of the ARN for the AWS KMS encryption key.</para><para>If an encryption key is not specified in <code>KmsKeyId</code>:</para><ul><li><para>If <code>ReplicationSourceIdentifier</code> identifies an encrypted source, then Amazon
            DocumentDB uses the encryption key that is used to encrypt the source. Otherwise,
            Amazon DocumentDB uses your default encryption key. </para></li><li><para>If the <code>StorageEncrypted</code> parameter is <code>true</code> and <code>ReplicationSourceIdentifier</code>
            is not specified, Amazon DocumentDB uses your default encryption key.</para></li></ul><para>AWS KMS creates the default encryption key for your AWS account. Your AWS account
            has a different default encryption key for each AWS Region.</para><para>If you create a replica of an encrypted cluster in another AWS Region, you must set
            <code>KmsKeyId</code> to a KMS key ID that is valid in the destination AWS Region.
            This key is used to encrypt the replica in that AWS Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.MasterUsername">
            <summary>
            <para>
            <para>The name of the master user for the cluster.</para><para>Constraints:</para><ul><li><para>Must be from 1 to 63 letters or numbers.</para></li><li><para>The first character must be a letter.</para></li><li><para>Cannot be a reserved word for the chosen database engine.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.MasterUserPassword">
            <summary>
            <para>
            <para>The password for the master database user. This password can contain any printable
            ASCII character except forward slash (/), double quote ("), or the "at" symbol (@).</para><para>Constraints: Must contain from 8 to 100 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.Port">
            <summary>
            <para>
            <para>The port number on which the instances in the cluster accept connections.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.PreferredBackupWindow">
            <summary>
            <para>
            <para>The daily time range during which automated backups are created if automated backups
            are enabled using the <code>BackupRetentionPeriod</code> parameter. </para><para>The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region. </para><para>Constraints:</para><ul><li><para>Must be in the format <code>hh24:mi-hh24:mi</code>.</para></li><li><para>Must be in Universal Coordinated Time (UTC).</para></li><li><para>Must not conflict with the preferred maintenance window.</para></li><li><para>Must be at least 30 minutes.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>The weekly time range during which system maintenance can occur, in Universal Coordinated
            Time (UTC).</para><para>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code></para><para>The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region, occurring on a random day of the week.</para><para>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</para><para>Constraints: Minimum 30-minute window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.StorageEncrypted">
            <summary>
            <para>
            <para>Specifies whether the cluster is encrypted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of EC2 VPC security groups to associate with this cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.CreateDBClusterResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.CreateDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterParameterGroupCmdlet">
            <summary>
            Creates a new cluster parameter group.
            
             
            <para>
            Parameters in a cluster parameter group apply to all of the instances in a DB cluster.
            </para><para>
            A cluster parameter group is initially created with the default parameters for the
            database engine used by instances in the cluster. To provide custom values for any
            of the parameters, you must modify the group after you create it. After you create
            a DB cluster parameter group, you must associate it with your cluster. For the new
            DB cluster parameter group and associated settings to take effect, you must then reboot
            the instances in the cluster without failover.
            </para><important><para>
            After you create a cluster parameter group, you should wait at least 5 minutes before
            creating your first cluster that uses that cluster parameter group as the default
            parameter group. This allows Amazon DocumentDB to fully complete the create action
            before the cluster parameter group is used as the default for a new cluster. This
            step is especially important for parameters that are critical when creating the default
            database for a cluster, such as the character set for the default database defined
            by the <code>character_set_database</code> parameter.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterParameterGroupCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the cluster parameter group.</para><para>Constraints:</para><ul><li><para>Must not match the name of an existing <code>DBClusterParameterGroup</code>.</para></li></ul><note><para>This value is stored as a lowercase string.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterParameterGroupCmdlet.DBParameterGroupFamily">
            <summary>
            <para>
            <para>The cluster parameter group family name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterParameterGroupCmdlet.Description">
            <summary>
            <para>
            <para>The description for the cluster parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterParameterGroupCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the cluster parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterParameterGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.CreateDBClusterParameterGroupResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.CreateDBClusterParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterSnapshotCmdlet">
            <summary>
            Creates a snapshot of a cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterSnapshotCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster to create a snapshot for. This parameter is not case
            sensitive.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing <code>DBCluster</code>.</para></li></ul><para>Example: <code>my-cluster</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterSnapshotCmdlet.DBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster snapshot. This parameter is stored as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens.</para></li><li><para>The first character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>my-cluster-snapshot1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterSnapshotCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the cluster snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterSnapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.CreateDBClusterSnapshotResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.CreateDBClusterSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterSnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterSnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBClusterSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBInstanceCmdlet">
            <summary>
            Creates a new instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBInstanceCmdlet.AutoMinorVersionUpgrade">
            <summary>
            <para>
            <para>Indicates that minor engine upgrades are applied automatically to the instance during
            the maintenance window.</para><para>Default: <code>true</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBInstanceCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para> The Amazon EC2 Availability Zone that the instance is created in.</para><para>Default: A random, system-chosen Availability Zone in the endpoint's AWS Region.</para><para> Example: <code>us-east-1d</code></para><para> Constraint: The <code>AvailabilityZone</code> parameter can't be specified if the
            <code>MultiAZ</code> parameter is set to <code>true</code>. The specified Availability
            Zone must be in the same AWS Region as the current endpoint. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBInstanceCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster that the instance will belong to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBInstanceCmdlet.DBInstanceClass">
            <summary>
            <para>
            <para>The compute and memory capacity of the instance; for example, <code>db.r5.large</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBInstanceCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The instance identifier. This parameter is stored as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens.</para></li><li><para>The first character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>mydbinstance</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBInstanceCmdlet.Engine">
            <summary>
            <para>
            <para>The name of the database engine to be used for this instance.</para><para>Valid value: <code>docdb</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBInstanceCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>The time range each week during which system maintenance can occur, in Universal Coordinated
            Time (UTC).</para><para> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code></para><para>The default is a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region, occurring on a random day of the week. </para><para>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</para><para>Constraints: Minimum 30-minute window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBInstanceCmdlet.PromotionTier">
            <summary>
            <para>
            <para>A value that specifies the order in which an Amazon DocumentDB replica is promoted
            to the primary instance after a failure of the existing primary instance.</para><para>Default: 1</para><para>Valid values: 0-15</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBInstanceCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the instance. You can assign up to 10 tags to an instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.CreateDBInstanceResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.CreateDBInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBSubnetGroupCmdlet">
            <summary>
            Creates a new subnet group. subnet groups must contain at least one subnet in at least
            two Availability Zones in the AWS Region.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBSubnetGroupCmdlet.DBSubnetGroupDescription">
            <summary>
            <para>
            <para>The description for the subnet group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBSubnetGroupCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The name for the subnet group. This value is stored as a lowercase string.</para><para>Constraints: Must contain no more than 255 letters, numbers, periods, underscores,
            spaces, or hyphens. Must not be default.</para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBSubnetGroupCmdlet.SubnetId">
            <summary>
            <para>
            <para>The Amazon EC2 subnet IDs for the subnet group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBSubnetGroupCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the subnet group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBSubnetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBSubnetGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.CreateDBSubnetGroupResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.CreateDBSubnetGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBSubnetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSubnetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSubnetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.NewDOCDBSubnetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBClusterCmdlet">
            <summary>
            Deletes a previously provisioned cluster. When you delete a cluster, all automated
            backups for that cluster are deleted and can't be recovered. Manual DB cluster snapshots
            of the specified cluster are not deleted.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The cluster identifier for the cluster to be deleted. This parameter isn't case sensitive.</para><para>Constraints:</para><ul><li><para>Must match an existing <code>DBClusterIdentifier</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBClusterCmdlet.FinalDBSnapshotIdentifier">
            <summary>
            <para>
            <para> The cluster snapshot identifier of the new cluster snapshot created when <code>SkipFinalSnapshot</code>
            is set to <code>false</code>. </para><note><para> Specifying this parameter and also setting the <code>SkipFinalShapshot</code> parameter
            to <code>true</code> results in an error. </para></note><para>Constraints:</para><ul><li><para>Must be from 1 to 255 letters, numbers, or hyphens.</para></li><li><para>The first character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBClusterCmdlet.SkipFinalSnapshot">
            <summary>
            <para>
            <para> Determines whether a final cluster snapshot is created before the cluster is deleted.
            If <code>true</code> is specified, no cluster snapshot is created. If <code>false</code>
            is specified, a cluster snapshot is created before the DB cluster is deleted. </para><note><para>If <code>SkipFinalSnapshot</code> is <code>false</code>, you must specify a <code>FinalDBSnapshotIdentifier</code>
            parameter.</para></note><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.DeleteDBClusterResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.DeleteDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBClusterParameterGroupCmdlet">
            <summary>
            Deletes a specified cluster parameter group. The cluster parameter group to be deleted
            can't be associated with any clusters.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBClusterParameterGroupCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the cluster parameter group.</para><para>Constraints:</para><ul><li><para>Must be the name of an existing cluster parameter group.</para></li><li><para>You can't delete a default cluster parameter group.</para></li><li><para>Cannot be associated with any clusters.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.DeleteDBClusterParameterGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBClusterParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBClusterSnapshotCmdlet">
            <summary>
            Deletes a cluster snapshot. If the snapshot is being copied, the copy operation is
            terminated.
            
             <note><para>
            The cluster snapshot must be in the <code>available</code> state to be deleted.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBClusterSnapshotCmdlet.DBClusterSnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster snapshot to delete.</para><para>Constraints: Must be the name of an existing cluster snapshot in the <code>available</code>
            state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBClusterSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterSnapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.DeleteDBClusterSnapshotResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.DeleteDBClusterSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBClusterSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterSnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterSnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBClusterSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBInstanceCmdlet">
            <summary>
            Deletes a previously provisioned instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBInstanceCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The instance identifier for the instance to be deleted. This parameter isn't case
            sensitive.</para><para>Constraints:</para><ul><li><para>Must match the name of an existing instance.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.DeleteDBInstanceResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.DeleteDBInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBSubnetGroupCmdlet">
            <summary>
            Deletes a subnet group.
            
             <note><para>
            The specified database subnet group must not be associated with any DB instances.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBSubnetGroupCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The name of the database subnet group to delete.</para><note><para>You can't delete the default subnet group.</para></note><para>Constraints:</para><para>Must match the name of an existing <code>DBSubnetGroup</code>. Must not be default.</para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBSubnetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.DeleteDBSubnetGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBSubnetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBSubnetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBSubnetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCDBSubnetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCResourceTagCmdlet">
            <summary>
            Removes metadata tags from an Amazon DocumentDB resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCResourceTagCmdlet.ResourceName">
            <summary>
            <para>
            <para>The Amazon DocumentDB resource that the tags are removed from. This value is an Amazon
            Resource Name (ARN).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The tag key (name) of the tag to be removed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.RemoveTagsFromResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceName parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RemoveDOCResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.ResetDOCDBClusterParameterGroupCmdlet">
            <summary>
            Modifies the parameters of a cluster parameter group to the default value. To reset
            specific parameters, submit a list of the following: <code>ParameterName</code> and
            <code>ApplyMethod</code>. To reset the entire cluster parameter group, specify the
            <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters.
            
            
             
            <para>
             When you reset the entire group, dynamic parameters are updated immediately and static
            parameters are set to <code>pending-reboot</code> to take effect on the next DB instance
            reboot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.ResetDOCDBClusterParameterGroupCmdlet.DBClusterParameterGroupName">
            <summary>
            <para>
            <para>The name of the cluster parameter group to reset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.ResetDOCDBClusterParameterGroupCmdlet.Parameter">
            <summary>
            <para>
            <para>A list of parameter names in the cluster parameter group to reset to the default values.
            You can't use this parameter if the <code>ResetAllParameters</code> parameter is set
            to <code>true</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.ResetDOCDBClusterParameterGroupCmdlet.ResetAllParameter">
            <summary>
            <para>
            <para>A value that is set to <code>true</code> to reset all parameters in the cluster parameter
            group to their default values, and <code>false</code> otherwise. You can't use this
            parameter if there is a list of parameter names specified for the <code>Parameters</code>
            parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.ResetDOCDBClusterParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBClusterParameterGroupName'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.ResetDBClusterParameterGroupResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.ResetDBClusterParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.ResetDOCDBClusterParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.ResetDOCDBClusterParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.RestartDOCDBInstanceCmdlet">
            <summary>
            You might need to reboot your instance, usually for maintenance reasons. For example,
            if you make certain changes, or if you change the cluster parameter group that is
            associated with the instance, you must reboot the instance for the changes to take
            effect. 
            
             
            <para>
            Rebooting an instance restarts the database engine service. Rebooting an instance
            results in a momentary outage, during which the instance status is set to <i>rebooting</i>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestartDOCDBInstanceCmdlet.DBInstanceIdentifier">
            <summary>
            <para>
            <para>The instance identifier. This parameter is stored as a lowercase string.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing <code>DBInstance</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestartDOCDBInstanceCmdlet.ForceFailover">
            <summary>
            <para>
            <para> When <code>true</code>, the reboot is conducted through a Multi-AZ failover. </para><para>Constraint: You can't specify <code>true</code> if the instance is not configured
            for Multi-AZ.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestartDOCDBInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBInstance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.RebootDBInstanceResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.RebootDBInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestartDOCDBInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBInstanceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBInstanceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestartDOCDBInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterFromSnapshotCmdlet">
            <summary>
            Creates a new cluster from a snapshot or cluster snapshot.
            
             
            <para>
            If a snapshot is specified, the target cluster is created from the source DB snapshot
            with a default configuration and default security group.
            </para><para>
            If a cluster snapshot is specified, the target cluster is created from the source
            cluster restore point with the same configuration as the original source DB cluster,
            except that the new cluster is created with the default security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterFromSnapshotCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>Provides the list of Amazon EC2 Availability Zones that instances in the restored
            DB cluster can be created in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterFromSnapshotCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The name of the cluster to create from the snapshot or cluster snapshot. This parameter
            isn't case sensitive.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens.</para></li><li><para>The first character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul><para>Example: <code>my-snapshot-id</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterFromSnapshotCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The name of the subnet group to use for the new cluster.</para><para>Constraints: If provided, must match the name of an existing <code>DBSubnetGroup</code>.</para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterFromSnapshotCmdlet.DeletionProtection">
            <summary>
            <para>
            <para>Specifies whether this cluster can be deleted. If <code>DeletionProtection</code>
            is enabled, the cluster cannot be deleted unless it is modified and <code>DeletionProtection</code>
            is disabled. <code>DeletionProtection</code> protects clusters from being accidentally
            deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterFromSnapshotCmdlet.EnableCloudwatchLogsExport">
            <summary>
            <para>
            <para>A list of log types that must be enabled for exporting to Amazon CloudWatch Logs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterFromSnapshotCmdlet.Engine">
            <summary>
            <para>
            <para>The database engine to use for the new cluster.</para><para>Default: The same as source.</para><para>Constraint: Must be compatible with the engine of the source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterFromSnapshotCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The version of the database engine to use for the new cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterFromSnapshotCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS KMS key identifier to use when restoring an encrypted cluster from a DB snapshot
            or cluster snapshot.</para><para>The AWS KMS key identifier is the Amazon Resource Name (ARN) for the AWS KMS encryption
            key. If you are restoring a cluster with the same AWS account that owns the AWS KMS
            encryption key used to encrypt the new cluster, then you can use the AWS KMS key alias
            instead of the ARN for the AWS KMS encryption key.</para><para>If you do not specify a value for the <code>KmsKeyId</code> parameter, then the following
            occurs:</para><ul><li><para>If the snapshot or cluster snapshot in <code>SnapshotIdentifier</code> is encrypted,
            then the restored cluster is encrypted using the AWS KMS key that was used to encrypt
            the snapshot or the cluster snapshot.</para></li><li><para>If the snapshot or the cluster snapshot in <code>SnapshotIdentifier</code> is not
            encrypted, then the restored DB cluster is not encrypted.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterFromSnapshotCmdlet.Port">
            <summary>
            <para>
            <para>The port number on which the new cluster accepts connections.</para><para>Constraints: Must be a value from <code>1150</code> to <code>65535</code>.</para><para>Default: The same port as the original cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterFromSnapshotCmdlet.SnapshotIdentifier">
            <summary>
            <para>
            <para>The identifier for the snapshot or cluster snapshot to restore from.</para><para>You can use either the name or the Amazon Resource Name (ARN) to specify a cluster
            snapshot. However, you can use only the ARN to specify a snapshot.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing snapshot.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterFromSnapshotCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the restored cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterFromSnapshotCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of virtual private cloud (VPC) security groups that the new cluster will belong
            to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterFromSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.RestoreDBClusterFromSnapshotResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.RestoreDBClusterFromSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterFromSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterFromSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterToPointInTimeCmdlet">
            <summary>
            Restores a cluster to an arbitrary point in time. Users can restore to any point in
            time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code>
            days. The target cluster is created from the source cluster with the same configuration
            as the original cluster, except that the new cluster is created with the default security
            group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterToPointInTimeCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The name of the new cluster to be created.</para><para>Constraints:</para><ul><li><para>Must contain from 1 to 63 letters, numbers, or hyphens.</para></li><li><para>The first character must be a letter.</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterToPointInTimeCmdlet.DBSubnetGroupName">
            <summary>
            <para>
            <para>The subnet group name to use for the new cluster.</para><para>Constraints: If provided, must match the name of an existing <code>DBSubnetGroup</code>.</para><para>Example: <code>mySubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterToPointInTimeCmdlet.DeletionProtection">
            <summary>
            <para>
            <para>Specifies whether this cluster can be deleted. If <code>DeletionProtection</code>
            is enabled, the cluster cannot be deleted unless it is modified and <code>DeletionProtection</code>
            is disabled. <code>DeletionProtection</code> protects clusters from being accidentally
            deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterToPointInTimeCmdlet.EnableCloudwatchLogsExport">
            <summary>
            <para>
            <para>A list of log types that must be enabled for exporting to Amazon CloudWatch Logs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterToPointInTimeCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The AWS KMS key identifier to use when restoring an encrypted cluster from an encrypted
            cluster.</para><para>The AWS KMS key identifier is the Amazon Resource Name (ARN) for the AWS KMS encryption
            key. If you are restoring a cluster with the same AWS account that owns the AWS KMS
            encryption key used to encrypt the new cluster, then you can use the AWS KMS key alias
            instead of the ARN for the AWS KMS encryption key.</para><para>You can restore to a new cluster and encrypt the new cluster with an AWS KMS key that
            is different from the AWS KMS key used to encrypt the source cluster. The new DB cluster
            is encrypted with the AWS KMS key identified by the <code>KmsKeyId</code> parameter.</para><para>If you do not specify a value for the <code>KmsKeyId</code> parameter, then the following
            occurs:</para><ul><li><para>If the cluster is encrypted, then the restored cluster is encrypted using the AWS
            KMS key that was used to encrypt the source cluster.</para></li><li><para>If the cluster is not encrypted, then the restored cluster is not encrypted.</para></li></ul><para>If <code>DBClusterIdentifier</code> refers to a cluster that is not encrypted, then
            the restore request is rejected.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterToPointInTimeCmdlet.Port">
            <summary>
            <para>
            <para>The port number on which the new cluster accepts connections.</para><para>Constraints: Must be a value from <code>1150</code> to <code>65535</code>. </para><para>Default: The default port for the engine.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterToPointInTimeCmdlet.RestoreToTime">
            <summary>
            <para>
            <para>The date and time to restore the cluster to.</para><para>Valid values: A time in Universal Coordinated Time (UTC) format.</para><para>Constraints:</para><ul><li><para>Must be before the latest restorable time for the instance.</para></li><li><para>Must be specified if the <code>UseLatestRestorableTime</code> parameter is not provided.</para></li><li><para>Cannot be specified if the <code>UseLatestRestorableTime</code> parameter is <code>true</code>.</para></li><li><para>Cannot be specified if the <code>RestoreType</code> parameter is <code>copy-on-write</code>.</para></li></ul><para>Example: <code>2015-03-07T23:45:00Z</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterToPointInTimeCmdlet.SourceDBClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the source cluster from which to restore.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing <code>DBCluster</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterToPointInTimeCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be assigned to the restored cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterToPointInTimeCmdlet.UseLatestRestorableTime">
            <summary>
            <para>
            <para>A value that is set to <code>true</code> to restore the cluster to the latest restorable
            backup time, and <code>false</code> otherwise. </para><para>Default: <code>false</code></para><para>Constraints: Cannot be specified if the <code>RestoreToTime</code> parameter is provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterToPointInTimeCmdlet.VpcSecurityGroupId">
            <summary>
            <para>
            <para>A list of VPC security groups that the new cluster belongs to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterToPointInTimeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.RestoreDBClusterToPointInTimeResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.RestoreDBClusterToPointInTimeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterToPointInTimeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.RestoreDOCDBClusterToPointInTimeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.StartDOCDBClusterCmdlet">
            <summary>
            Restarts the stopped cluster that is specified by <code>DBClusterIdentifier</code>.
            For more information, see <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html">Stopping
            and Starting an Amazon DocumentDB Cluster</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.StartDOCDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster to restart. Example: <code>docdb-2019-05-28-15-24-52</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.StartDOCDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.StartDBClusterResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.StartDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.StartDOCDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.StartDOCDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.StartDOCDBClusterFailoverCmdlet">
            <summary>
            Forces a failover for a cluster.
            
             
            <para>
            A failover for a cluster promotes one of the Amazon DocumentDB replicas (read-only
            instances) in the cluster to be the primary instance (the cluster writer).
            </para><para>
            If the primary instance fails, Amazon DocumentDB automatically fails over to an Amazon
            DocumentDB replica, if one exists. You can force a failover when you want to simulate
            a failure of a primary instance for testing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.StartDOCDBClusterFailoverCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>A cluster identifier to force a failover for. This parameter is not case sensitive.</para><para>Constraints:</para><ul><li><para>Must match the identifier of an existing <code>DBCluster</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.StartDOCDBClusterFailoverCmdlet.TargetDBInstanceIdentifier">
            <summary>
            <para>
            <para>The name of the instance to promote to the primary instance.</para><para>You must specify the instance identifier for an Amazon DocumentDB replica in the cluster.
            For example, <code>mydbcluster-replica1</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.StartDOCDBClusterFailoverCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.FailoverDBClusterResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.FailoverDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.StartDOCDBClusterFailoverCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.StartDOCDBClusterFailoverCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.DOC.StopDOCDBClusterCmdlet">
            <summary>
            Stops the running cluster that is specified by <code>DBClusterIdentifier</code>. The
            cluster must be in the <i>available</i> state. For more information, see <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html">Stopping
            and Starting an Amazon DocumentDB Cluster</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.StopDOCDBClusterCmdlet.DBClusterIdentifier">
            <summary>
            <para>
            <para>The identifier of the cluster to stop. Example: <code>docdb-2019-05-28-15-24-52</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.StopDOCDBClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DBCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.DocDB.Model.StopDBClusterResponse).
            Specifying the name of a property of type Amazon.DocDB.Model.StopDBClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.StopDOCDBClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DBClusterIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^DBClusterIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.DOC.StopDOCDBClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
