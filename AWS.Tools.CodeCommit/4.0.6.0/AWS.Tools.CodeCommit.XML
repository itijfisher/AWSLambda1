<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.CodeCommit</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.AddCCApprovalRuleTemplateToRepositoryCmdlet">
            <summary>
            Creates an association between an approval rule template and a specified repository.
            Then, the next time a pull request is created in the repository where the destination
            reference (if specified) matches the destination reference (branch) for the pull request,
            an approval rule that matches the template conditions is automatically created for
            that pull request. If no destination references are specified in the template, an
            approval rule that matches the template contents is created for all pull requests
            in that repository.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.AddCCApprovalRuleTemplateToRepositoryCmdlet.ApprovalRuleTemplateName">
            <summary>
            <para>
            <para>The name for the approval rule template. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.AddCCApprovalRuleTemplateToRepositoryCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository that you want to associate with the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.AddCCApprovalRuleTemplateToRepositoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.AssociateApprovalRuleTemplateWithRepositoryResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.AddCCApprovalRuleTemplateToRepositoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.AddCCApprovalRuleTemplateToRepositoryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.AddCCApprovalRuleTemplateToRepositoryBatchCmdlet">
            <summary>
            Creates an association between an approval rule template and one or more specified
            repositories.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.AddCCApprovalRuleTemplateToRepositoryBatchCmdlet.ApprovalRuleTemplateName">
            <summary>
            <para>
            <para>The name of the template you want to associate with one or more repositories.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.AddCCApprovalRuleTemplateToRepositoryBatchCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The names of the repositories you want to associate with the template.</para><note><para>The length constraint limit is for each string in the array. The array itself can
            be empty.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.AddCCApprovalRuleTemplateToRepositoryBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.BatchAssociateApprovalRuleTemplateWithRepositoriesResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.BatchAssociateApprovalRuleTemplateWithRepositoriesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.AddCCApprovalRuleTemplateToRepositoryBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApprovalRuleTemplateName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApprovalRuleTemplateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.AddCCApprovalRuleTemplateToRepositoryBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.AddCCResourceTagCmdlet">
            <summary>
            Adds or updates tags for a resource in AWS CodeCommit. For a list of valid resources
            in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the <i>AWS CodeCommit User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.AddCCResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource to which you want to add or update
            tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.AddCCResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The key-value pair to use when tagging this repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.AddCCResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.AddCCResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.AddCCResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCApprovalRuleTemplateCmdlet">
            <summary>
            Returns information about a specified approval rule template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCApprovalRuleTemplateCmdlet.ApprovalRuleTemplateName">
            <summary>
            <para>
            <para>The name of the approval rule template for which you want to get information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCApprovalRuleTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApprovalRuleTemplate'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.GetApprovalRuleTemplateResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.GetApprovalRuleTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCApprovalRuleTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApprovalRuleTemplateName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApprovalRuleTemplateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCApprovalRuleTemplateListCmdlet">
            <summary>
            Lists all approval rule templates in the specified AWS Region in your AWS account.
            If an AWS Region is not specified, the AWS Region where you are signed in is used.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCApprovalRuleTemplateListCmdlet.MaxResult">
            <summary>
            <para>
            <para>A non-zero, non-negative integer used to limit the number of returned results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCApprovalRuleTemplateListCmdlet.NextToken">
            <summary>
            <para>
            <para>An enumeration token that, when provided in a request, returns the next batch of the
            results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCApprovalRuleTemplateListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApprovalRuleTemplateNames'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.ListApprovalRuleTemplatesResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.ListApprovalRuleTemplatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCApprovalRuleTemplateListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCAssociatedApprovalRuleTemplatesForRepositoryListCmdlet">
            <summary>
            Lists all approval rule templates that are associated with a specified repository.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCAssociatedApprovalRuleTemplatesForRepositoryListCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository for which you want to list all associated approval rule
            templates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCAssociatedApprovalRuleTemplatesForRepositoryListCmdlet.MaxResult">
            <summary>
            <para>
            <para>A non-zero, non-negative integer used to limit the number of returned results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCAssociatedApprovalRuleTemplatesForRepositoryListCmdlet.NextToken">
            <summary>
            <para>
            <para>An enumeration token that, when provided in a request, returns the next batch of the
            results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCAssociatedApprovalRuleTemplatesForRepositoryListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApprovalRuleTemplateNames'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.ListAssociatedApprovalRuleTemplatesForRepositoryResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.ListAssociatedApprovalRuleTemplatesForRepositoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCAssociatedApprovalRuleTemplatesForRepositoryListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCAssociatedApprovalRuleTemplatesForRepositoryListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCBlobCmdlet">
            <summary>
            Returns the base-64 encoded content of an individual blob in a repository.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCBlobCmdlet.BlobId">
            <summary>
            <para>
            <para>The ID of the blob, which is its SHA-1 pointer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCBlobCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository that contains the blob.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCBlobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Content'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.GetBlobResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.GetBlobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCBlobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCBranchCmdlet">
            <summary>
            Returns information about a repository branch, including its name and the last commit
            ID.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCBranchCmdlet.BranchName">
            <summary>
            <para>
            <para>The name of the branch for which you want to retrieve information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCBranchCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository that contains the branch for which you want to retrieve
            information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCBranchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Branch'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.GetBranchResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.GetBranchResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCBranchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCBranchListCmdlet">
            <summary>
            Gets information about one or more branches in a repository.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCBranchListCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository that contains the branches.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCBranchListCmdlet.NextToken">
            <summary>
            <para>
            <para>An enumeration token that allows the operation to batch the results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCBranchListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Branches'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.ListBranchesResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.ListBranchesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCBranchListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCBranchListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCCommentCmdlet">
            <summary>
            Returns the content of a comment made on a change, file, or commit in a repository.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommentCmdlet.CommentId">
            <summary>
            <para>
            <para>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a>
            or <a>GetCommentsForPullRequest</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Comment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.GetCommentResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.GetCommentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CommentId parameter.
            The -PassThru parameter is deprecated, use -Select '^CommentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCCommentsForComparedCommitCmdlet">
            <summary>
            Returns information about comments made on the comparison between two commits.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommentsForComparedCommitCmdlet.AfterCommitId">
            <summary>
            <para>
            <para>To establish the directionality of the comparison, the full commit ID of the after
            commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommentsForComparedCommitCmdlet.BeforeCommitId">
            <summary>
            <para>
            <para>To establish the directionality of the comparison, the full commit ID of the before
            commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommentsForComparedCommitCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository where you want to compare commits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommentsForComparedCommitCmdlet.MaxResult">
            <summary>
            <para>
            <para>A non-zero, non-negative integer used to limit the number of returned results. The
            default is 100 comments, but you can configure up to 500.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommentsForComparedCommitCmdlet.NextToken">
            <summary>
            <para>
            <para>An enumeration token that when provided in a request, returns the next batch of the
            results. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommentsForComparedCommitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CommentsForComparedCommitData'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.GetCommentsForComparedCommitResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.GetCommentsForComparedCommitResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommentsForComparedCommitCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AfterCommitId parameter.
            The -PassThru parameter is deprecated, use -Select '^AfterCommitId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommentsForComparedCommitCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCCommentsForPullRequestCmdlet">
            <summary>
            Returns comments made on a pull request.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommentsForPullRequestCmdlet.AfterCommitId">
            <summary>
            <para>
            <para>The full commit ID of the commit in the source branch that was the tip of the branch
            at the time the comment was made.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommentsForPullRequestCmdlet.BeforeCommitId">
            <summary>
            <para>
            <para>The full commit ID of the commit in the destination branch that was the tip of the
            branch at the time the pull request was created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommentsForPullRequestCmdlet.PullRequestId">
            <summary>
            <para>
            <para>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommentsForPullRequestCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository that contains the pull request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommentsForPullRequestCmdlet.MaxResult">
            <summary>
            <para>
            <para>A non-zero, non-negative integer used to limit the number of returned results. The
            default is 100 comments. You can return up to 500 comments with a single request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommentsForPullRequestCmdlet.NextToken">
            <summary>
            <para>
            <para>An enumeration token that, when provided in a request, returns the next batch of the
            results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommentsForPullRequestCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CommentsForPullRequestData'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.GetCommentsForPullRequestResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.GetCommentsForPullRequestResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommentsForPullRequestCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PullRequestId parameter.
            The -PassThru parameter is deprecated, use -Select '^PullRequestId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommentsForPullRequestCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCCommitCmdlet">
            <summary>
            Returns information about a commit, including commit message and committer information.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommitCmdlet.CommitId">
            <summary>
            <para>
            <para>The commit ID. Commit IDs are the full SHA ID of the commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommitCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository to which the commit was made.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Commit'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.GetCommitResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.GetCommitResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommitCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CommitId parameter.
            The -PassThru parameter is deprecated, use -Select '^CommitId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCCommitBatchCmdlet">
            <summary>
            Returns information about the contents of one or more commits in a repository.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommitBatchCmdlet.CommitId">
            <summary>
            <para>
            <para>The full commit IDs of the commits to get information about.</para><note><para>You must supply the full SHA IDs of each commit. You cannot use shortened SHA IDs.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommitBatchCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository that contains the commits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommitBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.BatchGetCommitsResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.BatchGetCommitsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCCommitBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCDifferenceListCmdlet">
            <summary>
            Returns information about the differences in a valid commit specifier (such as a branch,
            tag, HEAD, commit ID, or other fully qualified reference). Results can be limited
            to a specified path.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCDifferenceListCmdlet.AfterCommitSpecifier">
            <summary>
            <para>
            <para>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCDifferenceListCmdlet.AfterPath">
            <summary>
            <para>
            <para>The file path in which to check differences. Limits the results to this path. Can
            also be used to specify the changed name of a directory or folder, if it has changed.
            If not specified, differences are shown for all paths.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCDifferenceListCmdlet.BeforeCommitSpecifier">
            <summary>
            <para>
            <para>The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, the full commit ID). Optional. If not specified, all changes before
            the <code>afterCommitSpecifier</code> value are shown. If you do not use <code>beforeCommitSpecifier</code>
            in your request, consider limiting the results with <code>maxResults</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCDifferenceListCmdlet.BeforePath">
            <summary>
            <para>
            <para>The file path in which to check for differences. Limits the results to this path.
            Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code>
            and <code>afterPath</code> are not specified, differences are shown for all paths.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCDifferenceListCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository where you want to get differences.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCDifferenceListCmdlet.MaxResult">
            <summary>
            <para>
            <para>A non-zero, non-negative integer used to limit the number of returned results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCDifferenceListCmdlet.NextToken">
            <summary>
            <para>
            <para>An enumeration token that, when provided in a request, returns the next batch of the
            results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCDifferenceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Differences'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.GetDifferencesResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.GetDifferencesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCDifferenceListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCDifferenceListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCFileCmdlet">
            <summary>
            Returns the base-64 encoded contents of a specified file and its metadata.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileCmdlet.CommitSpecifier">
            <summary>
            <para>
            <para>The fully quaified reference that identifies the commit that contains the file. For
            example, you can specify a full commit ID, a tag, a branch name, or a reference such
            as refs/heads/master. If none is provided, the head commit is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileCmdlet.FilePath">
            <summary>
            <para>
            <para>The fully qualified path to the file, including the full name and extension of the
            file. For example, /examples/file.md is the fully qualified path to a file named file.md
            in a folder named examples.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository that contains the file.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.GetFileResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.GetFileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictCmdlet">
            <summary>
            Returns information about one or more merge conflicts in the attempted merge of two
            commit specifiers using the squash or three-way merge strategy. If the merge option
            for the attempted merge is specified as FAST_FORWARD_MERGE, an exception is thrown.<br/><br/>In the AWS.Tools.CodeCommit module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictCmdlet.ConflictDetailLevel">
            <summary>
            <para>
            <para>The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used,
            which returns a not-mergeable result if the same file has differences in both branches.
            If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file
            in both branches has differences on the same line.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictCmdlet.ConflictResolutionStrategy">
            <summary>
            <para>
            <para>Specifies which branch to use when resolving conflicts, or whether to attempt automatically
            merging two versions of a file. The default is NONE, which requires any conflicts
            to be resolved manually before the merge operation is successful.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictCmdlet.DestinationCommitSpecifier">
            <summary>
            <para>
            <para>The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictCmdlet.FilePath">
            <summary>
            <para>
            <para>The path of the target files used to describe the conflicts. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictCmdlet.MaxMergeHunk">
            <summary>
            <para>
            <para>The maximum number of merge hunks to include in the output.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictCmdlet.MergeOption">
            <summary>
            <para>
            <para>The merge option or strategy you want to use to merge the code.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository where you want to get information about a merge conflict.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictCmdlet.SourceCommitSpecifier">
            <summary>
            <para>
            <para>The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictCmdlet.NextToken">
            <summary>
            <para>
            <para>An enumeration token that, when provided in a request, returns the next batch of the
            results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.CodeCommit module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.DescribeMergeConflictsResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.DescribeMergeConflictsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictBatchCmdlet">
            <summary>
            Returns information about one or more merge conflicts in the attempted merge of two
            commit specifiers using the squash or three-way merge strategy.<br/><br/>In the AWS.Tools.CodeCommit module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictBatchCmdlet.ConflictDetailLevel">
            <summary>
            <para>
            <para>The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used,
            which returns a not-mergeable result if the same file has differences in both branches.
            If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file
            in both branches has differences on the same line.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictBatchCmdlet.ConflictResolutionStrategy">
            <summary>
            <para>
            <para>Specifies which branch to use when resolving conflicts, or whether to attempt automatically
            merging two versions of a file. The default is NONE, which requires any conflicts
            to be resolved manually before the merge operation is successful.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictBatchCmdlet.DestinationCommitSpecifier">
            <summary>
            <para>
            <para>The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictBatchCmdlet.FilePath">
            <summary>
            <para>
            <para>The path of the target files used to describe the conflicts. If not specified, the
            default is all conflict files.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictBatchCmdlet.MaxConflictFile">
            <summary>
            <para>
            <para>The maximum number of files to include in the output.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictBatchCmdlet.MaxMergeHunk">
            <summary>
            <para>
            <para>The maximum number of merge hunks to include in the output.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictBatchCmdlet.MergeOption">
            <summary>
            <para>
            <para>The merge option or strategy you want to use to merge the code.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictBatchCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository that contains the merge conflicts you want to review.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictBatchCmdlet.SourceCommitSpecifier">
            <summary>
            <para>
            <para>The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictBatchCmdlet.NextToken">
            <summary>
            <para>
            <para>An enumeration token that, when provided in a request, returns the next batch of the
            results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.CodeCommit module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.BatchDescribeMergeConflictsResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.BatchDescribeMergeConflictsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFileMergeConflictBatchCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCFolderCmdlet">
            <summary>
            Returns the contents of a specified folder in a repository.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFolderCmdlet.CommitSpecifier">
            <summary>
            <para>
            <para>A fully qualified reference used to identify a commit that contains the version of
            the folder's content to return. A fully qualified reference can be a commit ID, branch
            name, tag, or reference such as HEAD. If no specifier is provided, the folder content
            is returned as it exists in the HEAD commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFolderCmdlet.FolderPath">
            <summary>
            <para>
            <para>The fully qualified path to the folder whose contents are returned, including the
            folder name. For example, /examples is a fully-qualified path to a folder named examples
            that was created off of the root directory (/) of a repository. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFolderCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFolderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.GetFolderResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.GetFolderResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCFolderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCMergeCommitCmdlet">
            <summary>
            Returns information about a specified merge commit.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeCommitCmdlet.ConflictDetailLevel">
            <summary>
            <para>
            <para>The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used,
            which returns a not-mergeable result if the same file has differences in both branches.
            If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file
            in both branches has differences on the same line.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeCommitCmdlet.ConflictResolutionStrategy">
            <summary>
            <para>
            <para>Specifies which branch to use when resolving conflicts, or whether to attempt automatically
            merging two versions of a file. The default is NONE, which requires any conflicts
            to be resolved manually before the merge operation is successful.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeCommitCmdlet.DestinationCommitSpecifier">
            <summary>
            <para>
            <para>The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeCommitCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository that contains the merge commit about which you want to
            get information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeCommitCmdlet.SourceCommitSpecifier">
            <summary>
            <para>
            <para>The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeCommitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.GetMergeCommitResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.GetMergeCommitResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeCommitCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCMergeConflictCmdlet">
            <summary>
            Returns information about merge conflicts between the before and after commit IDs
            for a pull request in a repository.<br/><br/>In the AWS.Tools.CodeCommit module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeConflictCmdlet.ConflictDetailLevel">
            <summary>
            <para>
            <para>The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used,
            which returns a not-mergeable result if the same file has differences in both branches.
            If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file
            in both branches has differences on the same line.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeConflictCmdlet.ConflictResolutionStrategy">
            <summary>
            <para>
            <para>Specifies which branch to use when resolving conflicts, or whether to attempt automatically
            merging two versions of a file. The default is NONE, which requires any conflicts
            to be resolved manually before the merge operation is successful.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeConflictCmdlet.DestinationCommitSpecifier">
            <summary>
            <para>
            <para>The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeConflictCmdlet.MaxConflictFile">
            <summary>
            <para>
            <para>The maximum number of files to include in the output.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeConflictCmdlet.MergeOption">
            <summary>
            <para>
            <para>The merge option or strategy you want to use to merge the code. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeConflictCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository where the pull request was created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeConflictCmdlet.SourceCommitSpecifier">
            <summary>
            <para>
            <para>The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeConflictCmdlet.NextToken">
            <summary>
            <para>
            <para>An enumeration token that, when provided in a request, returns the next batch of the
            results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.CodeCommit module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeConflictCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.GetMergeConflictsResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.GetMergeConflictsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeConflictCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeConflictCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCMergeOptionCmdlet">
            <summary>
            Returns information about the merge options available for merging two specified branches.
            For details about why a merge option is not available, use GetMergeConflicts or DescribeMergeConflicts.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeOptionCmdlet.ConflictDetailLevel">
            <summary>
            <para>
            <para>The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used,
            which returns a not-mergeable result if the same file has differences in both branches.
            If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file
            in both branches has differences on the same line.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeOptionCmdlet.ConflictResolutionStrategy">
            <summary>
            <para>
            <para>Specifies which branch to use when resolving conflicts, or whether to attempt automatically
            merging two versions of a file. The default is NONE, which requires any conflicts
            to be resolved manually before the merge operation is successful.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeOptionCmdlet.DestinationCommitSpecifier">
            <summary>
            <para>
            <para>The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeOptionCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository that contains the commits about which you want to get merge
            options.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeOptionCmdlet.SourceCommitSpecifier">
            <summary>
            <para>
            <para>The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.GetMergeOptionsResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.GetMergeOptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCMergeOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestCmdlet">
            <summary>
            Gets information about a pull request in a specified repository.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestCmdlet.PullRequestId">
            <summary>
            <para>
            <para>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PullRequest'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.GetPullRequestResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.GetPullRequestResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PullRequestId parameter.
            The -PassThru parameter is deprecated, use -Select '^PullRequestId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestApprovalStateCmdlet">
            <summary>
            Gets information about the approval states for a specified pull request. Approval
            states only apply to pull requests that have one or more approval rules applied to
            them.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestApprovalStateCmdlet.PullRequestId">
            <summary>
            <para>
            <para>The system-generated ID for the pull request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestApprovalStateCmdlet.RevisionId">
            <summary>
            <para>
            <para>The system-generated ID for the pull request revision.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestApprovalStateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Approvals'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.GetPullRequestApprovalStatesResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.GetPullRequestApprovalStatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestApprovalStateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PullRequestId parameter.
            The -PassThru parameter is deprecated, use -Select '^PullRequestId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestEventCmdlet">
            <summary>
            Returns information about one or more pull request events.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestEventCmdlet.ActorArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples
            include updating the pull request with more commits or changing the status of a pull
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestEventCmdlet.PullRequestEventType">
            <summary>
            <para>
            <para>Optional. The pull request event type about which you want to return information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestEventCmdlet.PullRequestId">
            <summary>
            <para>
            <para>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestEventCmdlet.MaxResult">
            <summary>
            <para>
            <para>A non-zero, non-negative integer used to limit the number of returned results. The
            default is 100 events, which is also the maximum number of events that can be returned
            in a result.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestEventCmdlet.NextToken">
            <summary>
            <para>
            <para>An enumeration token that, when provided in a request, returns the next batch of the
            results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestEventCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PullRequestEvents'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.DescribePullRequestEventsResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.DescribePullRequestEventsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestEventCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PullRequestId parameter.
            The -PassThru parameter is deprecated, use -Select '^PullRequestId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestEventCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestListCmdlet">
            <summary>
            Returns a list of pull requests for a specified repository. The return list can be
            refined by pull request status or pull request author ARN.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestListCmdlet.AuthorArn">
            <summary>
            <para>
            <para>Optional. The Amazon Resource Name (ARN) of the user who created the pull request.
            If used, this filters the results to pull requests created by that user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestListCmdlet.PullRequestStatus">
            <summary>
            <para>
            <para>Optional. The status of the pull request. If used, this refines the results to the
            pull requests that match the specified status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestListCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository for which you want to list pull requests.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestListCmdlet.MaxResult">
            <summary>
            <para>
            <para>A non-zero, non-negative integer used to limit the number of returned results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestListCmdlet.NextToken">
            <summary>
            <para>
            <para>An enumeration token that, when provided in a request, returns the next batch of the
            results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PullRequestIds'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.ListPullRequestsResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.ListPullRequestsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestOverrideStateCmdlet">
            <summary>
            Returns information about whether approval rules have been set aside (overridden)
            for a pull request, and if so, the Amazon Resource Name (ARN) of the user or identity
            that overrode the rules and their requirements for the pull request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestOverrideStateCmdlet.PullRequestId">
            <summary>
            <para>
            <para>The ID of the pull request for which you want to get information about whether approval
            rules have been set aside (overridden).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestOverrideStateCmdlet.RevisionId">
            <summary>
            <para>
            <para>The system-generated ID of the revision for the pull request. To retrieve the most
            recent revision ID, use <a>GetPullRequest</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestOverrideStateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.GetPullRequestOverrideStateResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.GetPullRequestOverrideStateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCPullRequestOverrideStateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PullRequestId parameter.
            The -PassThru parameter is deprecated, use -Select '^PullRequestId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoriesForApprovalRuleTemplateListCmdlet">
            <summary>
            Lists all repositories associated with the specified approval rule template.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoriesForApprovalRuleTemplateListCmdlet.ApprovalRuleTemplateName">
            <summary>
            <para>
            <para>The name of the approval rule template for which you want to list repositories that
            are associated with that template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoriesForApprovalRuleTemplateListCmdlet.MaxResult">
            <summary>
            <para>
            <para>A non-zero, non-negative integer used to limit the number of returned results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoriesForApprovalRuleTemplateListCmdlet.NextToken">
            <summary>
            <para>
            <para>An enumeration token that, when provided in a request, returns the next batch of the
            results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoriesForApprovalRuleTemplateListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RepositoryNames'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.ListRepositoriesForApprovalRuleTemplateResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.ListRepositoriesForApprovalRuleTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoriesForApprovalRuleTemplateListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApprovalRuleTemplateName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApprovalRuleTemplateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoriesForApprovalRuleTemplateListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoryCmdlet">
            <summary>
            Returns information about a repository.
            
             <note><para>
            The description field for a repository accepts all HTML characters and all valid Unicode
            characters. Applications that do not HTML-encode the description and display it in
            a webpage can expose users to potentially malicious code. Make sure that you HTML-encode
            the description field in any application that uses this API to display the repository
            description on a webpage.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoryCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository to get information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RepositoryMetadata'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.GetRepositoryResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.GetRepositoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoryBatchCmdlet">
            <summary>
            Returns information about one or more repositories.
            
             <note><para>
            The description field for a repository accepts all HTML characters and all valid Unicode
            characters. Applications that do not HTML-encode the description and display it in
            a webpage can expose users to potentially malicious code. Make sure that you HTML-encode
            the description field in any application that uses this API to display the repository
            description on a webpage.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoryBatchCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The names of the repositories to get information about.</para><note><para>The length constraint limit is for each string in the array. The array itself can
            be empty.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoryBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.BatchGetRepositoriesResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.BatchGetRepositoriesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoryBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoryListCmdlet">
            <summary>
            Gets information about one or more repositories.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoryListCmdlet.Order">
            <summary>
            <para>
            <para>The order in which to sort the results of a list repositories operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoryListCmdlet.SortBy">
            <summary>
            <para>
            <para>The criteria used to sort the results of a list repositories operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoryListCmdlet.NextToken">
            <summary>
            <para>
            <para>An enumeration token that allows the operation to batch the results of the operation.
            Batch sizes are 1,000 for list repository operations. When the client sends the token
            back to AWS CodeCommit, another page of 1,000 records is retrieved.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoryListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Repositories'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.ListRepositoriesResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.ListRepositoriesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoryListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoryTriggerCmdlet">
            <summary>
            Gets information about triggers configured for a repository.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoryTriggerCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository for which the trigger is configured.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoryTriggerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.GetRepositoryTriggersResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.GetRepositoryTriggersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCRepositoryTriggerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.GetCCResourceTagCmdlet">
            <summary>
            Gets information about AWS tags for a specified Amazon Resource Name (ARN) in AWS
            CodeCommit. For a list of valid resources in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the<i> AWS CodeCommit User Guide</i>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource for which you want to get information
            about tags, if any.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCResourceTagCmdlet.NextToken">
            <summary>
            <para>
            <para>An enumeration token that, when provided in a request, returns the next batch of the
            results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.GetCCResourceTagCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.InvokeCCPullRequestApprovalRuleCmdlet">
            <summary>
            Evaluates whether a pull request has met all the conditions specified in its associated
            approval rules.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.InvokeCCPullRequestApprovalRuleCmdlet.PullRequestId">
            <summary>
            <para>
            <para>The system-generated ID of the pull request you want to evaluate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.InvokeCCPullRequestApprovalRuleCmdlet.RevisionId">
            <summary>
            <para>
            <para>The system-generated ID for the pull request revision. To retrieve the most recent
            revision ID for a pull request, use <a>GetPullRequest</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.InvokeCCPullRequestApprovalRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Evaluation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.EvaluatePullRequestApprovalRulesResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.EvaluatePullRequestApprovalRulesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.InvokeCCPullRequestApprovalRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PullRequestId parameter.
            The -PassThru parameter is deprecated, use -Select '^PullRequestId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.InvokeCCPullRequestApprovalRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByFastForwardCmdlet">
            <summary>
            Merges two branches using the fast-forward merge strategy.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByFastForwardCmdlet.DestinationCommitSpecifier">
            <summary>
            <para>
            <para>The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByFastForwardCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository where you want to merge two branches.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByFastForwardCmdlet.SourceCommitSpecifier">
            <summary>
            <para>
            <para>The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByFastForwardCmdlet.TargetBranch">
            <summary>
            <para>
            <para>The branch where the merge is applied.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByFastForwardCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.MergeBranchesByFastForwardResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.MergeBranchesByFastForwardResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByFastForwardCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByFastForwardCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesBySquashCmdlet">
            <summary>
            Merges two branches using the squash merge strategy.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesBySquashCmdlet.AuthorName">
            <summary>
            <para>
            <para>The name of the author who created the commit. This information is used as both the
            author and committer for the commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesBySquashCmdlet.CommitMessage">
            <summary>
            <para>
            <para>The commit message for the merge.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesBySquashCmdlet.ConflictDetailLevel">
            <summary>
            <para>
            <para>The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used,
            which returns a not-mergeable result if the same file has differences in both branches.
            If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file
            in both branches has differences on the same line.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesBySquashCmdlet.ConflictResolutionStrategy">
            <summary>
            <para>
            <para>Specifies which branch to use when resolving conflicts, or whether to attempt automatically
            merging two versions of a file. The default is NONE, which requires any conflicts
            to be resolved manually before the merge operation is successful.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesBySquashCmdlet.ConflictResolution_DeleteFile">
            <summary>
            <para>
            <para>Files to be deleted as part of the merge conflict resolution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesBySquashCmdlet.DestinationCommitSpecifier">
            <summary>
            <para>
            <para>The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesBySquashCmdlet.Email">
            <summary>
            <para>
            <para>The email address of the person merging the branches. This information is used in
            the commit information for the merge.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesBySquashCmdlet.KeepEmptyFolder">
            <summary>
            <para>
            <para>If the commit contains deletions, whether to keep a folder or folder structure if
            the changes leave the folders empty. If this is specified as true, a .gitkeep file
            is created for empty folders. The default is false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesBySquashCmdlet.ConflictResolution_ReplaceContent">
            <summary>
            <para>
            <para>Files to have content replaced as part of the merge conflict resolution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesBySquashCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository where you want to merge two branches.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesBySquashCmdlet.ConflictResolution_SetFileMode">
            <summary>
            <para>
            <para>File modes that are set as part of the merge conflict resolution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesBySquashCmdlet.SourceCommitSpecifier">
            <summary>
            <para>
            <para>The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesBySquashCmdlet.TargetBranch">
            <summary>
            <para>
            <para>The branch where the merge is applied. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesBySquashCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.MergeBranchesBySquashResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.MergeBranchesBySquashResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesBySquashCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesBySquashCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByThreeWayCmdlet">
            <summary>
            Merges two specified branches using the three-way merge strategy.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByThreeWayCmdlet.AuthorName">
            <summary>
            <para>
            <para>The name of the author who created the commit. This information is used as both the
            author and committer for the commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByThreeWayCmdlet.CommitMessage">
            <summary>
            <para>
            <para>The commit message to include in the commit information for the merge.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByThreeWayCmdlet.ConflictDetailLevel">
            <summary>
            <para>
            <para>The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used,
            which returns a not-mergeable result if the same file has differences in both branches.
            If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file
            in both branches has differences on the same line.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByThreeWayCmdlet.ConflictResolutionStrategy">
            <summary>
            <para>
            <para>Specifies which branch to use when resolving conflicts, or whether to attempt automatically
            merging two versions of a file. The default is NONE, which requires any conflicts
            to be resolved manually before the merge operation is successful.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByThreeWayCmdlet.ConflictResolution_DeleteFile">
            <summary>
            <para>
            <para>Files to be deleted as part of the merge conflict resolution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByThreeWayCmdlet.DestinationCommitSpecifier">
            <summary>
            <para>
            <para>The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByThreeWayCmdlet.Email">
            <summary>
            <para>
            <para>The email address of the person merging the branches. This information is used in
            the commit information for the merge.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByThreeWayCmdlet.KeepEmptyFolder">
            <summary>
            <para>
            <para>If the commit contains deletions, whether to keep a folder or folder structure if
            the changes leave the folders empty. If true, a .gitkeep file is created for empty
            folders. The default is false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByThreeWayCmdlet.ConflictResolution_ReplaceContent">
            <summary>
            <para>
            <para>Files to have content replaced as part of the merge conflict resolution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByThreeWayCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository where you want to merge two branches.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByThreeWayCmdlet.ConflictResolution_SetFileMode">
            <summary>
            <para>
            <para>File modes that are set as part of the merge conflict resolution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByThreeWayCmdlet.SourceCommitSpecifier">
            <summary>
            <para>
            <para>The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByThreeWayCmdlet.TargetBranch">
            <summary>
            <para>
            <para>The branch where the merge is applied. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByThreeWayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.MergeBranchesByThreeWayResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.MergeBranchesByThreeWayResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByThreeWayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCBranchesByThreeWayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByFastForwardCmdlet">
            <summary>
            Attempts to merge the source commit of a pull request into the specified destination
            branch for that pull request at the specified commit using the fast-forward merge
            strategy. If the merge is successful, it closes the pull request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByFastForwardCmdlet.PullRequestId">
            <summary>
            <para>
            <para>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByFastForwardCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository where the pull request was created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByFastForwardCmdlet.SourceCommitId">
            <summary>
            <para>
            <para>The full commit ID of the original or updated commit in the pull request source branch.
            Pass this value if you want an exception thrown if the current commit ID of the tip
            of the source branch does not match this commit ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByFastForwardCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PullRequest'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.MergePullRequestByFastForwardResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.MergePullRequestByFastForwardResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByFastForwardCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PullRequestId parameter.
            The -PassThru parameter is deprecated, use -Select '^PullRequestId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByFastForwardCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestBySquashCmdlet">
            <summary>
            Attempts to merge the source commit of a pull request into the specified destination
            branch for that pull request at the specified commit using the squash merge strategy.
            If the merge is successful, it closes the pull request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestBySquashCmdlet.AuthorName">
            <summary>
            <para>
            <para>The name of the author who created the commit. This information is used as both the
            author and committer for the commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestBySquashCmdlet.CommitMessage">
            <summary>
            <para>
            <para>The commit message to include in the commit information for the merge.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestBySquashCmdlet.ConflictDetailLevel">
            <summary>
            <para>
            <para>The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used,
            which returns a not-mergeable result if the same file has differences in both branches.
            If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file
            in both branches has differences on the same line.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestBySquashCmdlet.ConflictResolutionStrategy">
            <summary>
            <para>
            <para>Specifies which branch to use when resolving conflicts, or whether to attempt automatically
            merging two versions of a file. The default is NONE, which requires any conflicts
            to be resolved manually before the merge operation is successful.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestBySquashCmdlet.ConflictResolution_DeleteFile">
            <summary>
            <para>
            <para>Files to be deleted as part of the merge conflict resolution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestBySquashCmdlet.Email">
            <summary>
            <para>
            <para>The email address of the person merging the branches. This information is used in
            the commit information for the merge.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestBySquashCmdlet.KeepEmptyFolder">
            <summary>
            <para>
            <para>If the commit contains deletions, whether to keep a folder or folder structure if
            the changes leave the folders empty. If true, a .gitkeep file is created for empty
            folders. The default is false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestBySquashCmdlet.PullRequestId">
            <summary>
            <para>
            <para>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestBySquashCmdlet.ConflictResolution_ReplaceContent">
            <summary>
            <para>
            <para>Files to have content replaced as part of the merge conflict resolution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestBySquashCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository where the pull request was created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestBySquashCmdlet.ConflictResolution_SetFileMode">
            <summary>
            <para>
            <para>File modes that are set as part of the merge conflict resolution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestBySquashCmdlet.SourceCommitId">
            <summary>
            <para>
            <para>The full commit ID of the original or updated commit in the pull request source branch.
            Pass this value if you want an exception thrown if the current commit ID of the tip
            of the source branch does not match this commit ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestBySquashCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PullRequest'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.MergePullRequestBySquashResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.MergePullRequestBySquashResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestBySquashCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestBySquashCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByThreeWayCmdlet">
            <summary>
            Attempts to merge the source commit of a pull request into the specified destination
            branch for that pull request at the specified commit using the three-way merge strategy.
            If the merge is successful, it closes the pull request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByThreeWayCmdlet.AuthorName">
            <summary>
            <para>
            <para>The name of the author who created the commit. This information is used as both the
            author and committer for the commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByThreeWayCmdlet.CommitMessage">
            <summary>
            <para>
            <para>The commit message to include in the commit information for the merge.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByThreeWayCmdlet.ConflictDetailLevel">
            <summary>
            <para>
            <para>The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used,
            which returns a not-mergeable result if the same file has differences in both branches.
            If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file
            in both branches has differences on the same line.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByThreeWayCmdlet.ConflictResolutionStrategy">
            <summary>
            <para>
            <para>Specifies which branch to use when resolving conflicts, or whether to attempt automatically
            merging two versions of a file. The default is NONE, which requires any conflicts
            to be resolved manually before the merge operation is successful.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByThreeWayCmdlet.ConflictResolution_DeleteFile">
            <summary>
            <para>
            <para>Files to be deleted as part of the merge conflict resolution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByThreeWayCmdlet.Email">
            <summary>
            <para>
            <para>The email address of the person merging the branches. This information is used in
            the commit information for the merge.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByThreeWayCmdlet.KeepEmptyFolder">
            <summary>
            <para>
            <para>If the commit contains deletions, whether to keep a folder or folder structure if
            the changes leave the folders empty. If true, a .gitkeep file is created for empty
            folders. The default is false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByThreeWayCmdlet.PullRequestId">
            <summary>
            <para>
            <para>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByThreeWayCmdlet.ConflictResolution_ReplaceContent">
            <summary>
            <para>
            <para>Files to have content replaced as part of the merge conflict resolution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByThreeWayCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository where the pull request was created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByThreeWayCmdlet.ConflictResolution_SetFileMode">
            <summary>
            <para>
            <para>File modes that are set as part of the merge conflict resolution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByThreeWayCmdlet.SourceCommitId">
            <summary>
            <para>
            <para>The full commit ID of the original or updated commit in the pull request source branch.
            Pass this value if you want an exception thrown if the current commit ID of the tip
            of the source branch does not match this commit ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByThreeWayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PullRequest'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.MergePullRequestByThreeWayResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.MergePullRequestByThreeWayResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByThreeWayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.MergeCCPullRequestByThreeWayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.NewCCApprovalRuleTemplateCmdlet">
            <summary>
            Creates a template for approval rules that can then be associated with one or more
            repositories in your AWS account. When you associate a template with a repository,
            AWS CodeCommit creates an approval rule that matches the conditions of the template
            for all pull requests that meet the conditions of the template. For more information,
            see <a>AssociateApprovalRuleTemplateWithRepository</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCApprovalRuleTemplateCmdlet.ApprovalRuleTemplateContent">
            <summary>
            <para>
            <para>The content of the approval rule that is created on pull requests in associated repositories.
            If you specify one or more destination references (branches), approval rules are created
            in an associated repository only if their destination references (branches) match
            those specified in the template.</para><note><para>When you create the content of the approval rule template, you can specify approvers
            in an approval pool in one of two ways:</para><ul><li><para><b>CodeCommitApprovers</b>: This option only requires an AWS account and a resource.
            It can be used for both IAM users and federated access users whose name matches the
            provided resource name. This is a very powerful option that offers a great deal of
            flexibility. For example, if you specify the AWS account <i>123456789012</i> and <i>Mary_Major</i>,
            all of the following are counted as approvals coming from that user:</para><ul><li><para>An IAM user in the account (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)</para></li><li><para>A federated user identified in IAM as Mary_Major (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)</para></li></ul><para>This option does not recognize an active session of someone assuming the role of CodeCommitReview
            with a role session name of <i>Mary_Major</i> (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
            unless you include a wildcard (*Mary_Major).</para></li><li><para><b>Fully qualified ARN</b>: This option allows you to specify the fully qualified
            Amazon Resource Name (ARN) of the IAM user or role. </para></li></ul><para>For more information about IAM ARNs, wildcards, and formats, see <a href="https://docs.aws.amazon.com/iam/latest/UserGuide/reference_identifiers.html">IAM
            Identifiers</a> in the <i>IAM User Guide</i>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCApprovalRuleTemplateCmdlet.ApprovalRuleTemplateDescription">
            <summary>
            <para>
            <para>The description of the approval rule template. Consider providing a description that
            explains what this template does and when it might be appropriate to associate it
            with repositories.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCApprovalRuleTemplateCmdlet.ApprovalRuleTemplateName">
            <summary>
            <para>
            <para>The name of the approval rule template. Provide descriptive names, because this name
            is applied to the approval rules created automatically in associated repositories.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCApprovalRuleTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApprovalRuleTemplate'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.CreateApprovalRuleTemplateResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.CreateApprovalRuleTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCApprovalRuleTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApprovalRuleTemplateContent parameter.
            The -PassThru parameter is deprecated, use -Select '^ApprovalRuleTemplateContent' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCApprovalRuleTemplateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.NewCCBranchCmdlet">
            <summary>
            Creates a branch in a repository and points the branch to a commit.
            
             <note><para>
            Calling the create branch operation does not set a repository's default branch. To
            do this, call the update default branch operation.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCBranchCmdlet.BranchName">
            <summary>
            <para>
            <para>The name of the new branch to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCBranchCmdlet.CommitId">
            <summary>
            <para>
            <para>The ID of the commit to point the new branch to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCBranchCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository in which you want to create the new branch.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCBranchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.CreateBranchResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCBranchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCBranchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.NewCCCommitCmdlet">
            <summary>
            Creates a commit for a repository on the tip of a specified branch.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCCommitCmdlet.AuthorName">
            <summary>
            <para>
            <para>The name of the author who created the commit. This information is used as both the
            author and committer for the commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCCommitCmdlet.BranchName">
            <summary>
            <para>
            <para>The name of the branch where you create the commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCCommitCmdlet.CommitMessage">
            <summary>
            <para>
            <para>The commit message you want to include in the commit. Commit messages are limited
            to 256 KB. If no message is specified, a default message is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCCommitCmdlet.DeleteFile">
            <summary>
            <para>
            <para>The files to delete in this commit. These files still exist in earlier commits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCCommitCmdlet.Email">
            <summary>
            <para>
            <para>The email address of the person who created the commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCCommitCmdlet.KeepEmptyFolder">
            <summary>
            <para>
            <para>If the commit contains deletions, whether to keep a folder or folder structure if
            the changes leave the folders empty. If true, a ..gitkeep file is created for empty
            folders. The default is false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCCommitCmdlet.ParentCommitId">
            <summary>
            <para>
            <para>The ID of the commit that is the parent of the commit you create. Not required if
            this is an empty repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCCommitCmdlet.PutFile">
            <summary>
            <para>
            <para>The files to add or update in this commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCCommitCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository where you create the commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCCommitCmdlet.SetFileMode">
            <summary>
            <para>
            <para>The file modes to update for files in this commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCCommitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.CreateCommitResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.CreateCommitResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCCommitCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCCommitCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.NewCCPullRequestCmdlet">
            <summary>
            Creates a pull request in the specified repository.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCPullRequestCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique, client-generated idempotency token that, when provided in a request, ensures
            the request cannot be repeated with a changed parameter. If a request is received
            with the same parameters and a token is included, the request returns information
            about the initial request that used that token.</para><note><para>The AWS SDKs prepopulate client request tokens. If you are using an AWS SDK, an idempotency
            token is created for you.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCPullRequestCmdlet.Description">
            <summary>
            <para>
            <para>A description of the pull request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCPullRequestCmdlet.Target">
            <summary>
            <para>
            <para>The targets for the pull request, including the source of the code to be reviewed
            (the source branch) and the destination where the creator of the pull request intends
            the code to be merged after the pull request is closed (the destination branch).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCPullRequestCmdlet.Title">
            <summary>
            <para>
            <para>The title of the pull request. This title is used to identify the pull request to
            other users in the repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCPullRequestCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PullRequest'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.CreatePullRequestResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.CreatePullRequestResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCPullRequestCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.NewCCPullRequestApprovalRuleCmdlet">
            <summary>
            Creates an approval rule for a pull request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCPullRequestApprovalRuleCmdlet.ApprovalRuleContent">
            <summary>
            <para>
            <para>The content of the approval rule, including the number of approvals needed and the
            structure of an approval pool defined for approvals, if any. For more information
            about approval pools, see the AWS CodeCommit User Guide.</para><note><para>When you create the content of the approval rule, you can specify approvers in an
            approval pool in one of two ways:</para><ul><li><para><b>CodeCommitApprovers</b>: This option only requires an AWS account and a resource.
            It can be used for both IAM users and federated access users whose name matches the
            provided resource name. This is a very powerful option that offers a great deal of
            flexibility. For example, if you specify the AWS account <i>123456789012</i> and <i>Mary_Major</i>,
            all of the following would be counted as approvals coming from that user:</para><ul><li><para>An IAM user in the account (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)</para></li><li><para>A federated user identified in IAM as Mary_Major (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)</para></li></ul><para>This option does not recognize an active session of someone assuming the role of CodeCommitReview
            with a role session name of <i>Mary_Major</i> (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
            unless you include a wildcard (*Mary_Major).</para></li><li><para><b>Fully qualified ARN</b>: This option allows you to specify the fully qualified
            Amazon Resource Name (ARN) of the IAM user or role. </para></li></ul><para>For more information about IAM ARNs, wildcards, and formats, see <a href="https://docs.aws.amazon.com/iam/latest/UserGuide/reference_identifiers.html">IAM
            Identifiers</a> in the <i>IAM User Guide</i>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCPullRequestApprovalRuleCmdlet.ApprovalRuleName">
            <summary>
            <para>
            <para>The name for the approval rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCPullRequestApprovalRuleCmdlet.PullRequestId">
            <summary>
            <para>
            <para>The system-generated ID of the pull request for which you want to create the approval
            rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCPullRequestApprovalRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApprovalRule'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.CreatePullRequestApprovalRuleResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.CreatePullRequestApprovalRuleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCPullRequestApprovalRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApprovalRuleContent parameter.
            The -PassThru parameter is deprecated, use -Select '^ApprovalRuleContent' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCPullRequestApprovalRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.NewCCRepositoryCmdlet">
            <summary>
            Creates a new, empty repository.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCRepositoryCmdlet.RepositoryDescription">
            <summary>
            <para>
            <para>A comment or description about the new repository.</para><note><para>The description field for a repository accepts all HTML characters and all valid Unicode
            characters. Applications that do not HTML-encode the description and display it in
            a webpage can expose users to potentially malicious code. Make sure that you HTML-encode
            the description field in any application that uses this API to display the repository
            description on a webpage.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCRepositoryCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the new repository to be created.</para><note><para>The repository name must be unique across the calling AWS account. Repository names
            are limited to 100 alphanumeric, dash, and underscore characters, and cannot include
            certain characters. For more information about the limits on repository names, see
            <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">Limits</a>
            in the <i>AWS CodeCommit User Guide</i>. The suffix .git is prohibited.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCRepositoryCmdlet.Tag">
            <summary>
            <para>
            <para>One or more tag key-value pairs to use when tagging this repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCRepositoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RepositoryMetadata'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.CreateRepositoryResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.CreateRepositoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCRepositoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCRepositoryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.NewCCUnreferencedMergeCommitCmdlet">
            <summary>
            Creates an unreferenced commit that represents the result of merging two branches
            using a specified merge strategy. This can help you determine the outcome of a potential
            merge. This API cannot be used with the fast-forward merge strategy because that strategy
            does not create a merge commit.
            
             <note><para>
            This unreferenced merge commit can only be accessed using the GetCommit API or through
            git commands such as git fetch. To retrieve this commit, you must specify its commit
            ID or otherwise reference it.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCUnreferencedMergeCommitCmdlet.AuthorName">
            <summary>
            <para>
            <para>The name of the author who created the unreferenced commit. This information is used
            as both the author and committer for the commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCUnreferencedMergeCommitCmdlet.CommitMessage">
            <summary>
            <para>
            <para>The commit message for the unreferenced commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCUnreferencedMergeCommitCmdlet.ConflictDetailLevel">
            <summary>
            <para>
            <para>The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used,
            which returns a not-mergeable result if the same file has differences in both branches.
            If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file
            in both branches has differences on the same line.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCUnreferencedMergeCommitCmdlet.ConflictResolutionStrategy">
            <summary>
            <para>
            <para>Specifies which branch to use when resolving conflicts, or whether to attempt automatically
            merging two versions of a file. The default is NONE, which requires any conflicts
            to be resolved manually before the merge operation is successful.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCUnreferencedMergeCommitCmdlet.ConflictResolution_DeleteFile">
            <summary>
            <para>
            <para>Files to be deleted as part of the merge conflict resolution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCUnreferencedMergeCommitCmdlet.DestinationCommitSpecifier">
            <summary>
            <para>
            <para>The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCUnreferencedMergeCommitCmdlet.Email">
            <summary>
            <para>
            <para>The email address for the person who created the unreferenced commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCUnreferencedMergeCommitCmdlet.KeepEmptyFolder">
            <summary>
            <para>
            <para>If the commit contains deletions, whether to keep a folder or folder structure if
            the changes leave the folders empty. If this is specified as true, a .gitkeep file
            is created for empty folders. The default is false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCUnreferencedMergeCommitCmdlet.MergeOption">
            <summary>
            <para>
            <para>The merge option or strategy you want to use to merge the code.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCUnreferencedMergeCommitCmdlet.ConflictResolution_ReplaceContent">
            <summary>
            <para>
            <para>Files to have content replaced as part of the merge conflict resolution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCUnreferencedMergeCommitCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository where you want to create the unreferenced merge commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCUnreferencedMergeCommitCmdlet.ConflictResolution_SetFileMode">
            <summary>
            <para>
            <para>File modes that are set as part of the merge conflict resolution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCUnreferencedMergeCommitCmdlet.SourceCommitSpecifier">
            <summary>
            <para>
            <para>The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCUnreferencedMergeCommitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCUnreferencedMergeCommitCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.NewCCUnreferencedMergeCommitCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.RemoveCCApprovalRuleTemplateCmdlet">
            <summary>
            Deletes a specified approval rule template. Deleting a template does not remove approval
            rules on pull requests already created with the template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCApprovalRuleTemplateCmdlet.ApprovalRuleTemplateName">
            <summary>
            <para>
            <para>The name of the approval rule template to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCApprovalRuleTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApprovalRuleTemplateId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.DeleteApprovalRuleTemplateResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.DeleteApprovalRuleTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCApprovalRuleTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApprovalRuleTemplateName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApprovalRuleTemplateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCApprovalRuleTemplateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.RemoveCCApprovalRuleTemplateFromRepositoryCmdlet">
            <summary>
            Removes the association between a template and a repository so that approval rules
            based on the template are not automatically created when pull requests are created
            in the specified repository. This does not delete any approval rules previously created
            for pull requests through the template association.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCApprovalRuleTemplateFromRepositoryCmdlet.ApprovalRuleTemplateName">
            <summary>
            <para>
            <para>The name of the approval rule template to disassociate from a specified repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCApprovalRuleTemplateFromRepositoryCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository you want to disassociate from the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCApprovalRuleTemplateFromRepositoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.DisassociateApprovalRuleTemplateFromRepositoryResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCApprovalRuleTemplateFromRepositoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCApprovalRuleTemplateFromRepositoryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.RemoveCCApprovalRuleTemplateFromRepositoryBatchCmdlet">
            <summary>
            Removes the association between an approval rule template and one or more specified
            repositories.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCApprovalRuleTemplateFromRepositoryBatchCmdlet.ApprovalRuleTemplateName">
            <summary>
            <para>
            <para>The name of the template that you want to disassociate from one or more repositories.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCApprovalRuleTemplateFromRepositoryBatchCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The repository names that you want to disassociate from the approval rule template.</para><note><para>The length constraint limit is for each string in the array. The array itself can
            be empty.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCApprovalRuleTemplateFromRepositoryBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCApprovalRuleTemplateFromRepositoryBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApprovalRuleTemplateName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApprovalRuleTemplateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCApprovalRuleTemplateFromRepositoryBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.RemoveCCBranchCmdlet">
            <summary>
            Deletes a branch from a repository, unless that branch is the default branch for the
            repository.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCBranchCmdlet.BranchName">
            <summary>
            <para>
            <para>The name of the branch to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCBranchCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository that contains the branch to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCBranchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DeletedBranch'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.DeleteBranchResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.DeleteBranchResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCBranchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BranchName parameter.
            The -PassThru parameter is deprecated, use -Select '^BranchName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCBranchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.RemoveCCCommentContentCmdlet">
            <summary>
            Deletes the content of a comment made on a change, file, or commit in a repository.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCCommentContentCmdlet.CommentId">
            <summary>
            <para>
            <para>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a>
            or <a>GetCommentsForPullRequest</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCCommentContentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Comment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.DeleteCommentContentResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.DeleteCommentContentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCCommentContentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CommentId parameter.
            The -PassThru parameter is deprecated, use -Select '^CommentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCCommentContentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.RemoveCCFileCmdlet">
            <summary>
            Deletes a specified file from a specified branch. A commit is created on the branch
            that contains the revision. The file still exists in the commits earlier to the commit
            that contains the deletion.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCFileCmdlet.BranchName">
            <summary>
            <para>
            <para>The name of the branch where the commit that deletes the file is made.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCFileCmdlet.CommitMessage">
            <summary>
            <para>
            <para>The commit message you want to include as part of deleting the file. Commit messages
            are limited to 256 KB. If no message is specified, a default message is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCFileCmdlet.Email">
            <summary>
            <para>
            <para>The email address for the commit that deletes the file. If no email address is specified,
            the email address is left blank.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCFileCmdlet.FilePath">
            <summary>
            <para>
            <para>The fully qualified path to the file that to be deleted, including the full name and
            extension of that file. For example, /examples/file.md is a fully qualified path to
            a file named file.md in a folder named examples.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCFileCmdlet.KeepEmptyFolder">
            <summary>
            <para>
            <para>If a file is the only object in the folder or directory, specifies whether to delete
            the folder or directory that contains the file. By default, empty folders are deleted.
            This includes empty folders that are part of the directory structure. For example,
            if the path to a file is dir1/dir2/dir3/dir4, and dir2 and dir3 are empty, deleting
            the last file in dir4 also deletes the empty folders dir4, dir3, and dir2.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCFileCmdlet.Name">
            <summary>
            <para>
            <para>The name of the author of the commit that deletes the file. If no name is specified,
            the user's ARN is used as the author name and committer name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCFileCmdlet.ParentCommitId">
            <summary>
            <para>
            <para>The ID of the commit that is the tip of the branch where you want to create the commit
            that deletes the file. This must be the HEAD commit for the branch. The commit that
            deletes the file is created from this commit ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCFileCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository that contains the file to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCFileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.DeleteFileResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.DeleteFileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCFileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCFileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.RemoveCCPullRequestApprovalRuleCmdlet">
            <summary>
            Deletes an approval rule from a specified pull request. Approval rules can be deleted
            from a pull request only if the pull request is open, and if the approval rule was
            created specifically for a pull request and not generated from an approval rule template
            associated with the repository where the pull request was created. You cannot delete
            an approval rule from a merged or closed pull request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCPullRequestApprovalRuleCmdlet.ApprovalRuleName">
            <summary>
            <para>
            <para>The name of the approval rule you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCPullRequestApprovalRuleCmdlet.PullRequestId">
            <summary>
            <para>
            <para>The system-generated ID of the pull request that contains the approval rule you want
            to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCPullRequestApprovalRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApprovalRuleId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.DeletePullRequestApprovalRuleResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.DeletePullRequestApprovalRuleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCPullRequestApprovalRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApprovalRuleName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApprovalRuleName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCPullRequestApprovalRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.RemoveCCRepositoryCmdlet">
            <summary>
            Deletes a repository. If a specified repository was already deleted, a null repository
            ID is returned.
            
             <important><para>
            Deleting a repository also deletes all associated objects and metadata. After a repository
            is deleted, all future push calls to the deleted repository fail.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCRepositoryCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCRepositoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RepositoryId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.DeleteRepositoryResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.DeleteRepositoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCRepositoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCRepositoryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.RemoveCCResourceTagCmdlet">
            <summary>
            Removes tags for a resource in AWS CodeCommit. For a list of valid resources in AWS
            CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the <i>AWS CodeCommit User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource to which you want to remove tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The tag key for each tag that you want to remove from the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.RemoveCCResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForComparedCommitCmdlet">
            <summary>
            Posts a comment on the comparison between two commits.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForComparedCommitCmdlet.AfterCommitId">
            <summary>
            <para>
            <para>To establish the directionality of the comparison, the full commit ID of the after
            commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForComparedCommitCmdlet.BeforeCommitId">
            <summary>
            <para>
            <para>To establish the directionality of the comparison, the full commit ID of the before
            commit. Required for commenting on any commit unless that commit is the initial commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForComparedCommitCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique, client-generated idempotency token that, when provided in a request, ensures
            the request cannot be repeated with a changed parameter. If a request is received
            with the same parameters and a token is included, the request returns information
            about the initial request that used that token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForComparedCommitCmdlet.Content">
            <summary>
            <para>
            <para>The content of the comment you want to make.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForComparedCommitCmdlet.Location_FilePath">
            <summary>
            <para>
            <para>The name of the file being compared, including its extension and subdirectory, if
            any.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForComparedCommitCmdlet.Location_FilePosition">
            <summary>
            <para>
            <para>The position of a change in a compared file, in line number format.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForComparedCommitCmdlet.Location_RelativeFileVersion">
            <summary>
            <para>
            <para>In a comparison of commits or a pull request, whether the change is in the before
            or after of that comparison.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForComparedCommitCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository where you want to post a comment on the comparison between
            commits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForComparedCommitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.PostCommentForComparedCommitResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.PostCommentForComparedCommitResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForComparedCommitCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Content parameter.
            The -PassThru parameter is deprecated, use -Select '^Content' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForComparedCommitCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForPullRequestCmdlet">
            <summary>
            Posts a comment on a pull request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForPullRequestCmdlet.AfterCommitId">
            <summary>
            <para>
            <para>The full commit ID of the commit in the source branch that is the current tip of the
            branch for the pull request when you post the comment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForPullRequestCmdlet.BeforeCommitId">
            <summary>
            <para>
            <para>The full commit ID of the commit in the destination branch that was the tip of the
            branch at the time the pull request was created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForPullRequestCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique, client-generated idempotency token that, when provided in a request, ensures
            the request cannot be repeated with a changed parameter. If a request is received
            with the same parameters and a token is included, the request returns information
            about the initial request that used that token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForPullRequestCmdlet.Content">
            <summary>
            <para>
            <para>The content of your comment on the change.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForPullRequestCmdlet.Location_FilePath">
            <summary>
            <para>
            <para>The name of the file being compared, including its extension and subdirectory, if
            any.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForPullRequestCmdlet.Location_FilePosition">
            <summary>
            <para>
            <para>The position of a change in a compared file, in line number format.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForPullRequestCmdlet.PullRequestId">
            <summary>
            <para>
            <para>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForPullRequestCmdlet.Location_RelativeFileVersion">
            <summary>
            <para>
            <para>In a comparison of commits or a pull request, whether the change is in the before
            or after of that comparison.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForPullRequestCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository where you want to post a comment on a pull request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForPullRequestCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.PostCommentForPullRequestResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.PostCommentForPullRequestResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForPullRequestCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Content parameter.
            The -PassThru parameter is deprecated, use -Select '^Content' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentForPullRequestCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.SendCCCommentReplyCmdlet">
            <summary>
            Posts a comment in reply to an existing comment on a comparison between commits or
            a pull request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentReplyCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique, client-generated idempotency token that, when provided in a request, ensures
            the request cannot be repeated with a changed parameter. If a request is received
            with the same parameters and a token is included, the request returns information
            about the initial request that used that token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentReplyCmdlet.Content">
            <summary>
            <para>
            <para>The contents of your reply to a comment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentReplyCmdlet.InReplyTo">
            <summary>
            <para>
            <para>The system-generated ID of the comment to which you want to reply. To get this ID,
            use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentReplyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Comment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.PostCommentReplyResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.PostCommentReplyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentReplyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Content parameter.
            The -PassThru parameter is deprecated, use -Select '^Content' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SendCCCommentReplyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.SetCCRepositoryTriggerCmdlet">
            <summary>
            Replaces all triggers for a repository. Used to create or delete triggers.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SetCCRepositoryTriggerCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository where you want to create or update the trigger.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SetCCRepositoryTriggerCmdlet.Trigger">
            <summary>
            <para>
            <para>The JSON block of configuration information for each trigger.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SetCCRepositoryTriggerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ConfigurationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.PutRepositoryTriggersResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.PutRepositoryTriggersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SetCCRepositoryTriggerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Trigger parameter.
            The -PassThru parameter is deprecated, use -Select '^Trigger' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SetCCRepositoryTriggerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.SkipCCPullRequestApprovalRuleCmdlet">
            <summary>
            Sets aside (overrides) all approval rule requirements for a specified pull request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SkipCCPullRequestApprovalRuleCmdlet.OverrideStatus">
            <summary>
            <para>
            <para>Whether you want to set aside approval rule requirements for the pull request (OVERRIDE)
            or revoke a previous override and apply approval rule requirements (REVOKE). REVOKE
            status is not stored.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SkipCCPullRequestApprovalRuleCmdlet.PullRequestId">
            <summary>
            <para>
            <para>The system-generated ID of the pull request for which you want to override all approval
            rule requirements. To get this information, use <a>GetPullRequest</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SkipCCPullRequestApprovalRuleCmdlet.RevisionId">
            <summary>
            <para>
            <para>The system-generated ID of the most recent revision of the pull request. You cannot
            override approval rules for anything but the most recent revision of a pull request.
            To get the revision ID, use GetPullRequest.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SkipCCPullRequestApprovalRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.OverridePullRequestApprovalRulesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SkipCCPullRequestApprovalRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PullRequestId parameter.
            The -PassThru parameter is deprecated, use -Select '^PullRequestId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.SkipCCPullRequestApprovalRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.TestCCRepositoryTriggerCmdlet">
            <summary>
            Tests the functionality of repository triggers by sending information to the trigger
            target. If real data is available in the repository, the test sends data from the
            last commit. If no data is available, sample data is generated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.TestCCRepositoryTriggerCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository in which to test the triggers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.TestCCRepositoryTriggerCmdlet.Trigger">
            <summary>
            <para>
            <para>The list of triggers to test.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.TestCCRepositoryTriggerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.TestRepositoryTriggersResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.TestRepositoryTriggersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.TestCCRepositoryTriggerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Trigger parameter.
            The -PassThru parameter is deprecated, use -Select '^Trigger' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.UpdateCCApprovalRuleTemplateContentCmdlet">
            <summary>
            Updates the content of an approval rule template. You can change the number of required
            approvals, the membership of the approval rule, and whether an approval pool is defined.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCApprovalRuleTemplateContentCmdlet.ApprovalRuleTemplateName">
            <summary>
            <para>
            <para>The name of the approval rule template where you want to update the content of the
            rule. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCApprovalRuleTemplateContentCmdlet.ExistingRuleContentSha256">
            <summary>
            <para>
            <para>The SHA-256 hash signature for the content of the approval rule. You can retrieve
            this information by using <a>GetPullRequest</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCApprovalRuleTemplateContentCmdlet.NewRuleContent">
            <summary>
            <para>
            <para>The content that replaces the existing content of the rule. Content statements must
            be complete. You cannot provide only the changes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCApprovalRuleTemplateContentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApprovalRuleTemplate'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateContentResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateContentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCApprovalRuleTemplateContentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NewRuleContent parameter.
            The -PassThru parameter is deprecated, use -Select '^NewRuleContent' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCApprovalRuleTemplateContentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.UpdateCCApprovalRuleTemplateDescriptionCmdlet">
            <summary>
            Updates the description for a specified approval rule template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCApprovalRuleTemplateDescriptionCmdlet.ApprovalRuleTemplateDescription">
            <summary>
            <para>
            <para>The updated description of the approval rule template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCApprovalRuleTemplateDescriptionCmdlet.ApprovalRuleTemplateName">
            <summary>
            <para>
            <para>The name of the template for which you want to update the description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCApprovalRuleTemplateDescriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApprovalRuleTemplate'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateDescriptionResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateDescriptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCApprovalRuleTemplateDescriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApprovalRuleTemplateName parameter.
            The -PassThru parameter is deprecated, use -Select '^ApprovalRuleTemplateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCApprovalRuleTemplateDescriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.UpdateCCApprovalRuleTemplateNameCmdlet">
            <summary>
            Updates the name of a specified approval rule template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCApprovalRuleTemplateNameCmdlet.NewApprovalRuleTemplateName">
            <summary>
            <para>
            <para>The new name you want to apply to the approval rule template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCApprovalRuleTemplateNameCmdlet.OldApprovalRuleTemplateName">
            <summary>
            <para>
            <para>The current name of the approval rule template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCApprovalRuleTemplateNameCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApprovalRuleTemplate'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateNameResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateNameResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCApprovalRuleTemplateNameCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OldApprovalRuleTemplateName parameter.
            The -PassThru parameter is deprecated, use -Select '^OldApprovalRuleTemplateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCApprovalRuleTemplateNameCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.UpdateCCCommentCmdlet">
            <summary>
            Replaces the contents of a comment.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCCommentCmdlet.CommentId">
            <summary>
            <para>
            <para>The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a>
            or <a>GetCommentsForPullRequest</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCCommentCmdlet.Content">
            <summary>
            <para>
            <para>The updated content to replace the existing content of the comment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCCommentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Comment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.UpdateCommentResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.UpdateCommentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCCommentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Content parameter.
            The -PassThru parameter is deprecated, use -Select '^Content' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCCommentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.UpdateCCDefaultBranchCmdlet">
            <summary>
            Sets or changes the default branch name for the specified repository.
            
             <note><para>
            If you use this operation to change the default branch name to the current default
            branch name, a success message is returned even though the default branch did not
            change.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCDefaultBranchCmdlet.DefaultBranchName">
            <summary>
            <para>
            <para>The name of the branch to set as the default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCDefaultBranchCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository to set or change the default branch for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCDefaultBranchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.UpdateDefaultBranchResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCDefaultBranchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCDefaultBranchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestApprovalRuleContentCmdlet">
            <summary>
            Updates the structure of an approval rule created specifically for a pull request.
            For example, you can change the number of required approvers and the approval pool
            for approvers.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestApprovalRuleContentCmdlet.ApprovalRuleName">
            <summary>
            <para>
            <para>The name of the approval rule you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestApprovalRuleContentCmdlet.ExistingRuleContentSha256">
            <summary>
            <para>
            <para>The SHA-256 hash signature for the content of the approval rule. You can retrieve
            this information by using <a>GetPullRequest</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestApprovalRuleContentCmdlet.NewRuleContent">
            <summary>
            <para>
            <para>The updated content for the approval rule.</para><note><para>When you update the content of the approval rule, you can specify approvers in an
            approval pool in one of two ways:</para><ul><li><para><b>CodeCommitApprovers</b>: This option only requires an AWS account and a resource.
            It can be used for both IAM users and federated access users whose name matches the
            provided resource name. This is a very powerful option that offers a great deal of
            flexibility. For example, if you specify the AWS account <i>123456789012</i> and <i>Mary_Major</i>,
            all of the following are counted as approvals coming from that user:</para><ul><li><para>An IAM user in the account (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)</para></li><li><para>A federated user identified in IAM as Mary_Major (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)</para></li></ul><para>This option does not recognize an active session of someone assuming the role of CodeCommitReview
            with a role session name of <i>Mary_Major</i> (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
            unless you include a wildcard (*Mary_Major).</para></li><li><para><b>Fully qualified ARN</b>: This option allows you to specify the fully qualified
            Amazon Resource Name (ARN) of the IAM user or role. </para></li></ul><para>For more information about IAM ARNs, wildcards, and formats, see <a href="https://docs.aws.amazon.com/iam/latest/UserGuide/reference_identifiers.html">IAM
            Identifiers</a> in the <i>IAM User Guide</i>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestApprovalRuleContentCmdlet.PullRequestId">
            <summary>
            <para>
            <para>The system-generated ID of the pull request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestApprovalRuleContentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApprovalRule'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.UpdatePullRequestApprovalRuleContentResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.UpdatePullRequestApprovalRuleContentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestApprovalRuleContentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NewRuleContent parameter.
            The -PassThru parameter is deprecated, use -Select '^NewRuleContent' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestApprovalRuleContentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestApprovalStateCmdlet">
            <summary>
            Updates the state of a user's approval on a pull request. The user is derived from
            the signed-in account when the request is made.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestApprovalStateCmdlet.ApprovalState">
            <summary>
            <para>
            <para>The approval state to associate with the user on the pull request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestApprovalStateCmdlet.PullRequestId">
            <summary>
            <para>
            <para>The system-generated ID of the pull request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestApprovalStateCmdlet.RevisionId">
            <summary>
            <para>
            <para>The system-generated ID of the revision.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestApprovalStateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.UpdatePullRequestApprovalStateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestApprovalStateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PullRequestId parameter.
            The -PassThru parameter is deprecated, use -Select '^PullRequestId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestApprovalStateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestDescriptionCmdlet">
            <summary>
            Replaces the contents of the description of a pull request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestDescriptionCmdlet.Description">
            <summary>
            <para>
            <para>The updated content of the description for the pull request. This content replaces
            the existing description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestDescriptionCmdlet.PullRequestId">
            <summary>
            <para>
            <para>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestDescriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PullRequest'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.UpdatePullRequestDescriptionResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.UpdatePullRequestDescriptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestDescriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Description parameter.
            The -PassThru parameter is deprecated, use -Select '^Description' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestDescriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestStatusCmdlet">
            <summary>
            Updates the status of a pull request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestStatusCmdlet.PullRequestId">
            <summary>
            <para>
            <para>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestStatusCmdlet.PullRequestStatus">
            <summary>
            <para>
            <para>The status of the pull request. The only valid operations are to update the status
            from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code>
            or from <code>CLOSED</code> to <code>CLOSED</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PullRequest'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.UpdatePullRequestStatusResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.UpdatePullRequestStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PullRequestStatus parameter.
            The -PassThru parameter is deprecated, use -Select '^PullRequestStatus' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestStatusCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestTitleCmdlet">
            <summary>
            Replaces the title of a pull request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestTitleCmdlet.PullRequestId">
            <summary>
            <para>
            <para>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestTitleCmdlet.Title">
            <summary>
            <para>
            <para>The updated title of the pull request. This replaces the existing title.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestTitleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PullRequest'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.UpdatePullRequestTitleResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.UpdatePullRequestTitleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestTitleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Title parameter.
            The -PassThru parameter is deprecated, use -Select '^Title' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCPullRequestTitleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.UpdateCCRepositoryDescriptionCmdlet">
            <summary>
            Sets or changes the comment or description for a repository.
            
             <note><para>
            The description field for a repository accepts all HTML characters and all valid Unicode
            characters. Applications that do not HTML-encode the description and display it in
            a webpage can expose users to potentially malicious code. Make sure that you HTML-encode
            the description field in any application that uses this API to display the repository
            description on a webpage.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCRepositoryDescriptionCmdlet.RepositoryDescription">
            <summary>
            <para>
            <para>The new comment or description for the specified repository. Repository descriptions
            are limited to 1,000 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCRepositoryDescriptionCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository to set or change the comment or description for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCRepositoryDescriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.UpdateRepositoryDescriptionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCRepositoryDescriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCRepositoryDescriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.UpdateCCRepositoryNameCmdlet">
            <summary>
            Renames a repository. The repository name must be unique across the calling AWS account.
            Repository names are limited to 100 alphanumeric, dash, and underscore characters,
            and cannot include certain characters. The suffix .git is prohibited. For more information
            about the limits on repository names, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">Limits</a>
            in the AWS CodeCommit User Guide.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCRepositoryNameCmdlet.NewName">
            <summary>
            <para>
            <para>The new name for the repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCRepositoryNameCmdlet.OldName">
            <summary>
            <para>
            <para>The current name of the repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCRepositoryNameCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.UpdateRepositoryNameResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCRepositoryNameCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OldName parameter.
            The -PassThru parameter is deprecated, use -Select '^OldName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.UpdateCCRepositoryNameCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CC.WriteCCFileCmdlet">
            <summary>
            Adds or updates a file in a branch in an AWS CodeCommit repository, and generates
            a commit for the addition in the specified branch.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.WriteCCFileCmdlet.BranchName">
            <summary>
            <para>
            <para>The name of the branch where you want to add or update the file. If this is an empty
            repository, this branch is created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.WriteCCFileCmdlet.CommitMessage">
            <summary>
            <para>
            <para>A message about why this file was added or updated. Although it is optional, a message
            makes the commit history for your repository more useful.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.WriteCCFileCmdlet.Email">
            <summary>
            <para>
            <para>An email address for the person adding or updating the file.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.WriteCCFileCmdlet.FileContent">
            <summary>
            <para>
            <para>The content of the file, in binary object format. </para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.WriteCCFileCmdlet.FileMode">
            <summary>
            <para>
            <para>The file mode permissions of the blob. Valid file mode permissions are listed here.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.WriteCCFileCmdlet.FilePath">
            <summary>
            <para>
            <para>The name of the file you want to add or update, including the relative path to the
            file in the repository.</para><note><para>If the path does not currently exist in the repository, the path is created as part
            of adding the file.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.WriteCCFileCmdlet.Name">
            <summary>
            <para>
            <para>The name of the person adding or updating the file. Although it is optional, a name
            makes the commit history for your repository more useful.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.WriteCCFileCmdlet.ParentCommitId">
            <summary>
            <para>
            <para>The full commit ID of the head commit in the branch where you want to add or update
            the file. If this is an empty repository, no commit ID is required. If this is not
            an empty repository, a commit ID is required. </para><para>The commit ID must match the ID of the head commit at the time of the operation. Otherwise,
            an error occurs, and the file is not added or updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.WriteCCFileCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the repository where you want to add or update the file.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.WriteCCFileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeCommit.Model.PutFileResponse).
            Specifying the name of a property of type Amazon.CodeCommit.Model.PutFileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.WriteCCFileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RepositoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RepositoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CC.WriteCCFileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
