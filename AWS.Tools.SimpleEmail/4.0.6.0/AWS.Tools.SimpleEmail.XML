<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.SimpleEmail</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.ConfirmSESDomainDkimCmdlet">
            <summary>
            Returns a set of DKIM tokens for a domain identity.
            
             <important><para>
            When you execute the <code>VerifyDomainDkim</code> operation, the domain that you
            specify is added to the list of identities that are associated with your account.
            This is true even if you haven't already associated the domain with your account by
            using the <code>VerifyDomainIdentity</code> operation. However, you can't send email
            from the domain until you either successfully <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-domains.html">verify
            it</a> or you successfully <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">set
            up DKIM for it</a>.
            </para></important><para>
            You use the tokens that are generated by this operation to create CNAME records. When
            Amazon SES detects that you've added these records to the DNS configuration for a
            domain, you can start sending email from that domain. You can start sending email
            even if you haven't added the TXT record provided by the VerifyDomainIdentity operation
            to the DNS configuration for your domain. All email that you send from the domain
            is authenticated using DKIM.
            </para><para>
            To create the CNAME records for DKIM authentication, use the following values:
            </para><ul><li><para><b>Name</b>: <i>token</i>._domainkey.<i>example.com</i></para></li><li><para><b>Type</b>: CNAME
            </para></li><li><para><b>Value</b>: <i>token</i>.dkim.amazonses.com
            </para></li></ul><para>
            In the preceding example, replace <i>token</i> with one of the tokens that are generated
            when you execute this operation. Replace <i>example.com</i> with your domain. Repeat
            this process for each token that's generated by this operation.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.ConfirmSESDomainDkimCmdlet.Domain">
            <summary>
            <para>
            <para>The name of the domain to be verified for Easy DKIM signing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.ConfirmSESDomainDkimCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DkimTokens'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.VerifyDomainDkimResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.VerifyDomainDkimResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.ConfirmSESDomainDkimCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Domain parameter.
            The -PassThru parameter is deprecated, use -Select '^Domain' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.ConfirmSESDomainDkimCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.ConfirmSESDomainIdentityCmdlet">
            <summary>
            Adds a domain to the list of identities for your Amazon SES account in the current
            AWS Region and attempts to verify it. For more information about verifying domains,
            see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html">Verifying
            Email Addresses and Domains</a> in the <i>Amazon SES Developer Guide.</i><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.ConfirmSESDomainIdentityCmdlet.Domain">
            <summary>
            <para>
            <para>The domain to be verified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.ConfirmSESDomainIdentityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VerificationToken'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.VerifyDomainIdentityResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.VerifyDomainIdentityResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.ConfirmSESDomainIdentityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Domain parameter.
            The -PassThru parameter is deprecated, use -Select '^Domain' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.ConfirmSESDomainIdentityCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.ConfirmSESEmailAddressCmdlet">
            <summary>
            Deprecated. Use the <code>VerifyEmailIdentity</code> operation to verify a new email
            address.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.ConfirmSESEmailAddressCmdlet.EmailAddress">
            <summary>
            <para>
            <para>The email address to be verified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.ConfirmSESEmailAddressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.VerifyEmailAddressResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.ConfirmSESEmailAddressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EmailAddress parameter.
            The -PassThru parameter is deprecated, use -Select '^EmailAddress' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.ConfirmSESEmailAddressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.ConfirmSESEmailIdentityCmdlet">
            <summary>
            Adds an email address to the list of identities for your Amazon SES account in the
            current AWS region and attempts to verify it. As a result of executing this operation,
            a verification email is sent to the specified address.
            
             
            <para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.ConfirmSESEmailIdentityCmdlet.EmailAddress">
            <summary>
            <para>
            <para>The email address to be verified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.ConfirmSESEmailIdentityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.VerifyEmailIdentityResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.ConfirmSESEmailIdentityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EmailAddress parameter.
            The -PassThru parameter is deprecated, use -Select '^EmailAddress' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.ConfirmSESEmailIdentityCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.CopySESReceiptRuleSetCmdlet">
            <summary>
            Creates a receipt rule set by cloning an existing one. All receipt rules and configurations
            are copied to the new receipt rule set and are completely independent of the source
            rule set.
            
             
            <para>
            For information about setting up rule sets, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rule-set.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.CopySESReceiptRuleSetCmdlet.OriginalRuleSetName">
            <summary>
            <para>
            <para>The name of the rule set to clone.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.CopySESReceiptRuleSetCmdlet.RuleSetName">
            <summary>
            <para>
            <para>The name of the rule set to create. The name must:</para><ul><li><para>This value can only contain ASCII letters (a-z, A-Z), numbers (0-9), underscores (_),
            or dashes (-).</para></li><li><para>Start and end with a letter or number.</para></li><li><para>Contain less than 64 characters.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.CopySESReceiptRuleSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.CloneReceiptRuleSetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.CopySESReceiptRuleSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OriginalRuleSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^OriginalRuleSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.CopySESReceiptRuleSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESAccountSendingEnabledCmdlet">
            <summary>
            Returns the email sending status of the Amazon SES account for the current region.
            
             
            <para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESAccountSendingEnabledCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Enabled'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.GetAccountSendingEnabledResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.GetAccountSendingEnabledResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESActiveReceiptRuleSetCmdlet">
            <summary>
            Returns the metadata and receipt rules for the receipt rule set that is currently
            active.
            
             
            <para>
            For information about setting up receipt rule sets, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rule-set.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESActiveReceiptRuleSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.DescribeActiveReceiptRuleSetResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.DescribeActiveReceiptRuleSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESConfigurationSetCmdlet">
            <summary>
            Returns the details of the specified configuration set. For information about using
            configuration sets, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html">Amazon
            SES Developer Guide</a>.
            
             
            <para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESConfigurationSetCmdlet.ConfigurationSetAttributeName">
            <summary>
            <para>
            <para>A list of configuration set attributes to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESConfigurationSetCmdlet.ConfigurationSetName">
            <summary>
            <para>
            <para>The name of the configuration set to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESConfigurationSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.DescribeConfigurationSetResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.DescribeConfigurationSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESConfigurationSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConfigurationSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^ConfigurationSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESConfigurationSetListCmdlet">
            <summary>
            Provides a list of the configuration sets associated with your Amazon SES account
            in the current AWS Region. For information about using configuration sets, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html">Monitoring
            Your Amazon SES Sending Activity</a> in the <i>Amazon SES Developer Guide.</i><para>
            You can execute this operation no more than once per second. This operation will return
            up to 1,000 configuration sets each time it is run. If your Amazon SES account has
            more than 1,000 configuration sets, this operation will also return a NextToken element.
            You can then execute the <code>ListConfigurationSets</code> operation again, passing
            the <code>NextToken</code> parameter and the value of the NextToken element to retrieve
            additional results.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESConfigurationSetListCmdlet.MaxItem">
            <summary>
            <para>
            <para>The number of configuration sets to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESConfigurationSetListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token returned from a previous call to <code>ListConfigurationSets</code> to indicate
            the position of the configuration set in the configuration set list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESConfigurationSetListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ConfigurationSets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.ListConfigurationSetsResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.ListConfigurationSetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESConfigurationSetListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESCustomVerificationEmailTemplateCmdlet">
            <summary>
            Returns the custom email verification template for the template name you specify.
            
             
            <para>
            For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html">Using
            Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESCustomVerificationEmailTemplateCmdlet.TemplateName">
            <summary>
            <para>
            <para>The name of the custom verification email template that you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESCustomVerificationEmailTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.GetCustomVerificationEmailTemplateResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.GetCustomVerificationEmailTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESCustomVerificationEmailTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateName parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESCustomVerificationEmailTemplateListCmdlet">
            <summary>
            Lists the existing custom verification email templates for your account in the current
            AWS Region.
            
             
            <para>
            For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html">Using
            Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.
            </para><para>
            You can execute this operation no more than once per second.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESCustomVerificationEmailTemplateListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of custom verification email templates to return. This value must
            be at least 1 and less than or equal to 50. If you do not specify a value, or if you
            specify a value less than 1 or greater than 50, the operation will return up to 50
            results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESCustomVerificationEmailTemplateListCmdlet.NextToken">
            <summary>
            <para>
            <para>An array the contains the name and creation time stamp for each template in your Amazon
            SES account.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESCustomVerificationEmailTemplateListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CustomVerificationEmailTemplates'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.ListCustomVerificationEmailTemplatesResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.ListCustomVerificationEmailTemplatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESCustomVerificationEmailTemplateListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MaxResult parameter.
            The -PassThru parameter is deprecated, use -Select '^MaxResult' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESCustomVerificationEmailTemplateListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityCmdlet">
            <summary>
            Returns a list containing all of the identities (email addresses and domains) for
            your AWS account in the current AWS Region, regardless of verification status.
            
             
            <para>
            You can execute this operation no more than once per second.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityCmdlet.IdentityType">
            <summary>
            <para>
            <para>The type of the identities to list. Possible values are "EmailAddress" and "Domain".
            If this parameter is omitted, then all identities will be listed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityCmdlet.MaxItem">
            <summary>
            <para>
            <para>The maximum number of identities per page. Possible values are 1-1000 inclusive.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to use for pagination.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Identities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.ListIdentitiesResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.ListIdentitiesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IdentityType parameter.
            The -PassThru parameter is deprecated, use -Select '^IdentityType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityDkimAttributeCmdlet">
            <summary>
            Returns the current status of Easy DKIM signing for an entity. For domain name identities,
            this operation also returns the DKIM tokens that are required for Easy DKIM signing,
            and whether Amazon SES has successfully verified that these tokens have been published.
            
             
            <para>
            This operation takes a list of identities as input and returns the following information
            for each:
            </para><ul><li><para>
            Whether Easy DKIM signing is enabled or disabled.
            </para></li><li><para>
            A set of DKIM tokens that represent the identity. If the identity is an email address,
            the tokens represent the domain of that address.
            </para></li><li><para>
            Whether Amazon SES has successfully verified the DKIM tokens published in the domain's
            DNS. This information is only returned for domain name identities, not for email addresses.
            </para></li></ul><para>
            This operation is throttled at one request per second and can only get DKIM attributes
            for up to 100 identities at a time.
            </para><para>
            For more information about creating DNS records using DKIM tokens, go to the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityDkimAttributeCmdlet.Identity">
            <summary>
            <para>
            <para>A list of one or more verified identities - email addresses, domains, or both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityDkimAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DkimAttributes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.GetIdentityDkimAttributesResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.GetIdentityDkimAttributesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityDkimAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Identity parameter.
            The -PassThru parameter is deprecated, use -Select '^Identity' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityMailFromDomainAttributeCmdlet">
            <summary>
            Returns the custom MAIL FROM attributes for a list of identities (email addresses
            : domains).
            
             
            <para>
            This operation is throttled at one request per second and can only get custom MAIL
            FROM attributes for up to 100 identities at a time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityMailFromDomainAttributeCmdlet.Identity">
            <summary>
            <para>
            <para>A list of one or more identities.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityMailFromDomainAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MailFromDomainAttributes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.GetIdentityMailFromDomainAttributesResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.GetIdentityMailFromDomainAttributesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityMailFromDomainAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Identity parameter.
            The -PassThru parameter is deprecated, use -Select '^Identity' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityNotificationAttributeCmdlet">
            <summary>
            Given a list of verified identities (email addresses and/or domains), returns a structure
            describing identity notification attributes.
            
             
            <para>
            This operation is throttled at one request per second and can only get notification
            attributes for up to 100 identities at a time.
            </para><para>
            For more information about using notifications with Amazon SES, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityNotificationAttributeCmdlet.Identity">
            <summary>
            <para>
            <para>A list of one or more identities. You can specify an identity by using its name or
            by using its Amazon Resource Name (ARN). Examples: <code>user@example.com</code>,
            <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityNotificationAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NotificationAttributes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityNotificationAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Identity parameter.
            The -PassThru parameter is deprecated, use -Select '^Identity' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityPolicyCmdlet">
            <summary>
            Returns the requested sending authorization policies for the given identity (an email
            address or a domain). The policies are returned as a map of policy names to policy
            contents. You can retrieve a maximum of 20 policies at a time.
            
             <note><para>
            This API is for the identity owner only. If you have not verified the identity, this
            API will return an error.
            </para></note><para>
            Sending authorization is a feature that enables an identity owner to authorize other
            senders to use its identities. For information about using sending authorization,
            see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityPolicyCmdlet.Identity">
            <summary>
            <para>
            <para>The identity for which the policies will be retrieved. You can specify an identity
            by using its name or by using its Amazon Resource Name (ARN). Examples: <code>user@example.com</code>,
            <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</para><para>To successfully call this API, you must own the identity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>A list of the names of policies to be retrieved. You can retrieve a maximum of 20
            policies at a time. If you do not know the names of the policies that are attached
            to the identity, you can use <code>ListIdentityPolicies</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Policies'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.GetIdentityPoliciesResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.GetIdentityPoliciesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyName parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityPolicyListCmdlet">
            <summary>
            Returns a list of sending authorization policies that are attached to the given identity
            (an email address or a domain). This API returns only a list. If you want the actual
            policy content, you can use <code>GetIdentityPolicies</code>.
            
             <note><para>
            This API is for the identity owner only. If you have not verified the identity, this
            API will return an error.
            </para></note><para>
            Sending authorization is a feature that enables an identity owner to authorize other
            senders to use its identities. For information about using sending authorization,
            see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityPolicyListCmdlet.Identity">
            <summary>
            <para>
            <para>The identity that is associated with the policy for which the policies will be listed.
            You can specify an identity by using its name or by using its Amazon Resource Name
            (ARN). Examples: <code>user@example.com</code>, <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</para><para>To successfully call this API, you must own the identity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityPolicyListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PolicyNames'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.ListIdentityPoliciesResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.ListIdentityPoliciesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityPolicyListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Identity parameter.
            The -PassThru parameter is deprecated, use -Select '^Identity' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityVerificationAttributeCmdlet">
            <summary>
            Given a list of identities (email addresses and/or domains), returns the verification
            status and (for domain identities) the verification token for each identity.
            
             
            <para>
            The verification status of an email address is "Pending" until the email address owner
            clicks the link within the verification email that Amazon SES sent to that address.
            If the email address owner clicks the link within 24 hours, the verification status
            of the email address changes to "Success". If the link is not clicked within 24 hours,
            the verification status changes to "Failed." In that case, if you still want to verify
            the email address, you must restart the verification process from the beginning.
            </para><para>
            For domain identities, the domain's verification status is "Pending" as Amazon SES
            searches for the required TXT record in the DNS settings of the domain. When Amazon
            SES detects the record, the domain's verification status changes to "Success". If
            Amazon SES is unable to detect the record within 72 hours, the domain's verification
            status changes to "Failed." In that case, if you still want to verify the domain,
            you must restart the verification process from the beginning.
            </para><para>
            This operation is throttled at one request per second and can only get verification
            attributes for up to 100 identities at a time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityVerificationAttributeCmdlet.Identity">
            <summary>
            <para>
            <para>A list of identities.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityVerificationAttributeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VerificationAttributes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESIdentityVerificationAttributeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Identity parameter.
            The -PassThru parameter is deprecated, use -Select '^Identity' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESReceiptFilterListCmdlet">
            <summary>
            Lists the IP address filters associated with your AWS account in the current AWS Region.
            
             
            <para>
            For information about managing IP address filters, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-ip-filters.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESReceiptFilterListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Filters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.ListReceiptFiltersResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.ListReceiptFiltersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESReceiptRuleCmdlet">
            <summary>
            Returns the details of the specified receipt rule.
            
             
            <para>
            For information about setting up receipt rules, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESReceiptRuleCmdlet.RuleName">
            <summary>
            <para>
            <para>The name of the receipt rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESReceiptRuleCmdlet.RuleSetName">
            <summary>
            <para>
            <para>The name of the receipt rule set that the receipt rule belongs to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESReceiptRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Rule'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.DescribeReceiptRuleResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.DescribeReceiptRuleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESReceiptRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RuleName parameter.
            The -PassThru parameter is deprecated, use -Select '^RuleName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESReceiptRuleSetCmdlet">
            <summary>
            Returns the details of the specified receipt rule set.
            
             
            <para>
            For information about managing receipt rule sets, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESReceiptRuleSetCmdlet.RuleSetName">
            <summary>
            <para>
            <para>The name of the receipt rule set to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESReceiptRuleSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.DescribeReceiptRuleSetResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.DescribeReceiptRuleSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESReceiptRuleSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RuleSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^RuleSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESReceiptRuleSetListCmdlet">
            <summary>
            Lists the receipt rule sets that exist under your AWS account in the current AWS Region.
            If there are additional receipt rule sets to be retrieved, you will receive a <code>NextToken</code>
            that you can provide to the next call to <code>ListReceiptRuleSets</code> to retrieve
            the additional entries.
            
             
            <para>
            For information about managing receipt rule sets, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESReceiptRuleSetListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token returned from a previous call to <code>ListReceiptRuleSets</code> to indicate
            the position in the receipt rule set list.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESReceiptRuleSetListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RuleSets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.ListReceiptRuleSetsResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.ListReceiptRuleSetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESReceiptRuleSetListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESSendQuotaCmdlet">
            <summary>
            Provides the sending limits for the Amazon SES account. 
            
             
            <para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESSendQuotaCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.GetSendQuotaResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.GetSendQuotaResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESSendStatisticCmdlet">
            <summary>
            Provides sending statistics for the current AWS Region. The result is a list of data
            points, representing the last two weeks of sending activity. Each data point in the
            list contains statistics for a 15-minute period of time.
            
             
            <para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESSendStatisticCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SendDataPoints'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.GetSendStatisticsResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.GetSendStatisticsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESTemplateCmdlet">
            <summary>
            Displays the template object (which includes the Subject line, HTML part and text
            part) for the template you specify.
            
             
            <para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESTemplateCmdlet.TemplateName">
            <summary>
            <para>
            <para>The name of the template you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Template'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.GetTemplateResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.GetTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateName parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESTemplateListCmdlet">
            <summary>
            Lists the email templates present in your Amazon SES account in the current AWS Region.
            
             
            <para>
            You can execute this operation no more than once per second.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESTemplateListCmdlet.MaxItem">
            <summary>
            <para>
            <para>The maximum number of templates to return. This value must be at least 1 and less
            than or equal to 10. If you do not specify a value, or if you specify a value less
            than 1 or greater than 10, the operation will return up to 10 results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESTemplateListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token returned from a previous call to <code>ListTemplates</code> to indicate the
            position in the list of email templates.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESTemplateListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TemplatesMetadata'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.ListTemplatesResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.ListTemplatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESTemplateListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.GetSESVerifiedEmailAddressCmdlet">
            <summary>
            Deprecated. Use the <code>ListIdentities</code> operation to list the email addresses
            and domains associated with your account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.GetSESVerifiedEmailAddressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VerifiedEmailAddresses'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetCmdlet">
            <summary>
            Creates a configuration set.
            
             
            <para>
            Configuration sets enable you to publish email sending events. For information about
            using configuration sets, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetCmdlet.ConfigurationSet_Name">
            <summary>
            <para>
            <para>The name of the configuration set. The name must meet the following requirements:</para><ul><li><para>Contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or dashes (-).</para></li><li><para>Contain 64 characters or fewer.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.CreateConfigurationSetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConfigurationSet_Name parameter.
            The -PassThru parameter is deprecated, use -Select '^ConfigurationSet_Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetEventDestinationCmdlet">
            <summary>
            Creates a configuration set event destination.
            
             <note><para>
            When you create or update an event destination, you must provide one, and only one,
            destination. The destination can be CloudWatch, Amazon Kinesis Firehose, or Amazon
            Simple Notification Service (Amazon SNS).
            </para></note><para>
            An event destination is the AWS service to which Amazon SES publishes the email sending
            events associated with a configuration set. For information about using configuration
            sets, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetEventDestinationCmdlet.ConfigurationSetName">
            <summary>
            <para>
            <para>The name of the configuration set that the event destination should be associated
            with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetEventDestinationCmdlet.KinesisFirehoseDestination_DeliveryStreamARN">
            <summary>
            <para>
            <para>The ARN of the Amazon Kinesis Firehose stream that email sending events should be
            published to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetEventDestinationCmdlet.CloudWatchDestination_DimensionConfiguration">
            <summary>
            <para>
            <para>A list of dimensions upon which to categorize your emails when you publish email sending
            events to Amazon CloudWatch.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetEventDestinationCmdlet.EventDestination_Enabled">
            <summary>
            <para>
            <para>Sets whether Amazon SES publishes events to this destination when you send an email
            with the associated configuration set. Set to <code>true</code> to enable publishing
            to this destination; set to <code>false</code> to prevent publishing to this destination.
            The default value is <code>false</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetEventDestinationCmdlet.KinesisFirehoseDestination_IAMRoleARN">
            <summary>
            <para>
            <para>The ARN of the IAM role under which Amazon SES publishes email sending events to the
            Amazon Kinesis Firehose stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetEventDestinationCmdlet.EventDestination_MatchingEventType">
            <summary>
            <para>
            <para>The type of email sending events to publish to the event destination.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetEventDestinationCmdlet.EventDestination_Name">
            <summary>
            <para>
            <para>The name of the event destination. The name must:</para><ul><li><para>This value can only contain ASCII letters (a-z, A-Z), numbers (0-9), underscores (_),
            or dashes (-).</para></li><li><para>Contain less than 64 characters.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetEventDestinationCmdlet.SNSDestination_TopicARN">
            <summary>
            <para>
            <para>The ARN of the Amazon SNS topic that email sending events will be published to. An
            example of an Amazon SNS topic ARN is <code>arn:aws:sns:us-west-2:123456789012:MyTopic</code>.
            For more information about Amazon SNS topics, see the <a href="https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html">Amazon
            SNS Developer Guide</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetEventDestinationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.CreateConfigurationSetEventDestinationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetEventDestinationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConfigurationSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^ConfigurationSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetEventDestinationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetTrackingOptionCmdlet">
            <summary>
            Creates an association between a configuration set and a custom domain for open and
            click event tracking. 
            
             
            <para>
            By default, images and links used for tracking open and click events are hosted on
            domains operated by Amazon SES. You can configure a subdomain of your own to handle
            these events. For information about using custom domains, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/configure-custom-open-click-domains.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetTrackingOptionCmdlet.ConfigurationSetName">
            <summary>
            <para>
            <para>The name of the configuration set that the tracking options should be associated with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetTrackingOptionCmdlet.TrackingOption">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetTrackingOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.CreateConfigurationSetTrackingOptionsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetTrackingOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrackingOption parameter.
            The -PassThru parameter is deprecated, use -Select '^TrackingOption' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESConfigurationSetTrackingOptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.NewSESCustomVerificationEmailTemplateCmdlet">
            <summary>
            Creates a new custom verification email template.
            
             
            <para>
            For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html">Using
            Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESCustomVerificationEmailTemplateCmdlet.FailureRedirectionURL">
            <summary>
            <para>
            <para>The URL that the recipient of the verification email is sent to if his or her address
            is not successfully verified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESCustomVerificationEmailTemplateCmdlet.FromEmailAddress">
            <summary>
            <para>
            <para>The email address that the custom verification email is sent from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESCustomVerificationEmailTemplateCmdlet.SuccessRedirectionURL">
            <summary>
            <para>
            <para>The URL that the recipient of the verification email is sent to if his or her address
            is successfully verified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESCustomVerificationEmailTemplateCmdlet.TemplateContent">
            <summary>
            <para>
            <para>The content of the custom verification email. The total size of the email must be
            less than 10 MB. The message body may contain HTML, with some limitations. For more
            information, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html#custom-verification-emails-faq">Custom
            Verification Email Frequently Asked Questions</a> in the <i>Amazon SES Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESCustomVerificationEmailTemplateCmdlet.TemplateName">
            <summary>
            <para>
            <para>The name of the custom verification email template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESCustomVerificationEmailTemplateCmdlet.TemplateSubject">
            <summary>
            <para>
            <para>The subject line of the custom verification email.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESCustomVerificationEmailTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.CreateCustomVerificationEmailTemplateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESCustomVerificationEmailTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateContent parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateContent' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESCustomVerificationEmailTemplateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptFilterCmdlet">
            <summary>
            Creates a new IP address filter.
            
             
            <para>
            For information about setting up IP address filters, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-ip-filters.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptFilterCmdlet.IpFilter_Cidr">
            <summary>
            <para>
            <para>A single IP address or a range of IP addresses that you want to block or allow, specified
            in Classless Inter-Domain Routing (CIDR) notation. An example of a single email address
            is 10.0.0.1. An example of a range of IP addresses is 10.0.0.1/24. For more information
            about CIDR notation, see <a href="https://tools.ietf.org/html/rfc2317">RFC 2317</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptFilterCmdlet.Filter_Name">
            <summary>
            <para>
            <para>The name of the IP address filter. The name must:</para><ul><li><para>This value can only contain ASCII letters (a-z, A-Z), numbers (0-9), underscores (_),
            or dashes (-).</para></li><li><para>Start and end with a letter or number.</para></li><li><para>Contain less than 64 characters.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptFilterCmdlet.IpFilter_Policy">
            <summary>
            <para>
            <para>Indicates whether to block or allow incoming mail from the specified IP addresses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptFilterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.CreateReceiptFilterResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptFilterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptRuleCmdlet">
            <summary>
            Creates a receipt rule.
            
             
            <para>
            For information about setting up receipt rules, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptRuleCmdlet.Rule_Action">
            <summary>
            <para>
            <para>An ordered list of actions to perform on messages that match at least one of the recipient
            email addresses or domains specified in the receipt rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptRuleCmdlet.After">
            <summary>
            <para>
            <para>The name of an existing rule after which the new rule will be placed. If this parameter
            is null, the new rule will be inserted at the beginning of the rule list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptRuleCmdlet.Rule_Enabled">
            <summary>
            <para>
            <para>If <code>true</code>, the receipt rule is active. The default value is <code>false</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptRuleCmdlet.Rule_Name">
            <summary>
            <para>
            <para>The name of the receipt rule. The name must:</para><ul><li><para>This value can only contain ASCII letters (a-z, A-Z), numbers (0-9), underscores (_),
            or dashes (-).</para></li><li><para>Start and end with a letter or number.</para></li><li><para>Contain less than 64 characters.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptRuleCmdlet.Rule_Recipient">
            <summary>
            <para>
            <para>The recipient domains and email addresses that the receipt rule applies to. If this
            field is not specified, this rule will match all recipients under all verified domains.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptRuleCmdlet.RuleSetName">
            <summary>
            <para>
            <para>The name of the rule set that the receipt rule will be added to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptRuleCmdlet.Rule_ScanEnabled">
            <summary>
            <para>
            <para>If <code>true</code>, then messages that this receipt rule applies to are scanned
            for spam and viruses. The default value is <code>false</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptRuleCmdlet.Rule_TlsPolicy">
            <summary>
            <para>
            <para>Specifies whether Amazon SES should require that incoming email is delivered over
            a connection encrypted with Transport Layer Security (TLS). If this parameter is set
            to <code>Require</code>, Amazon SES will bounce emails that are not received over
            TLS. The default is <code>Optional</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.CreateReceiptRuleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptRuleSetCmdlet">
            <summary>
            Creates an empty receipt rule set.
            
             
            <para>
            For information about setting up receipt rule sets, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rule-set.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptRuleSetCmdlet.RuleSetName">
            <summary>
            <para>
            <para>The name of the rule set to create. The name must:</para><ul><li><para>This value can only contain ASCII letters (a-z, A-Z), numbers (0-9), underscores (_),
            or dashes (-).</para></li><li><para>Start and end with a letter or number.</para></li><li><para>Contain less than 64 characters.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptRuleSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.CreateReceiptRuleSetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptRuleSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RuleSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^RuleSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESReceiptRuleSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.NewSESTemplateCmdlet">
            <summary>
            Creates an email template. Email templates enable you to send personalized email to
            one or more destinations in a single API operation. For more information, see the
            <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon
            SES Developer Guide</a>.
            
             
            <para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESTemplateCmdlet.Template">
            <summary>
            <para>
            <para>The content of the email, composed of a subject line, an HTML part, and a text-only
            part.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.CreateTemplateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Template parameter.
            The -PassThru parameter is deprecated, use -Select '^Template' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.NewSESTemplateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.RemoveSESConfigurationSetCmdlet">
            <summary>
            Deletes a configuration set. Configuration sets enable you to publish email sending
            events. For information about using configuration sets, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html">Amazon
            SES Developer Guide</a>.
            
             
            <para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESConfigurationSetCmdlet.ConfigurationSetName">
            <summary>
            <para>
            <para>The name of the configuration set to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESConfigurationSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.DeleteConfigurationSetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESConfigurationSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConfigurationSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^ConfigurationSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESConfigurationSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.RemoveSESConfigurationSetEventDestinationCmdlet">
            <summary>
            Deletes a configuration set event destination. Configuration set event destinations
            are associated with configuration sets, which enable you to publish email sending
            events. For information about using configuration sets, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html">Amazon
            SES Developer Guide</a>.
            
             
            <para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESConfigurationSetEventDestinationCmdlet.ConfigurationSetName">
            <summary>
            <para>
            <para>The name of the configuration set from which to delete the event destination.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESConfigurationSetEventDestinationCmdlet.EventDestinationName">
            <summary>
            <para>
            <para>The name of the event destination to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESConfigurationSetEventDestinationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.DeleteConfigurationSetEventDestinationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESConfigurationSetEventDestinationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EventDestinationName parameter.
            The -PassThru parameter is deprecated, use -Select '^EventDestinationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESConfigurationSetEventDestinationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.RemoveSESConfigurationSetTrackingOptionCmdlet">
            <summary>
            Deletes an association between a configuration set and a custom domain for open and
            click event tracking.
            
             
            <para>
            By default, images and links used for tracking open and click events are hosted on
            domains operated by Amazon SES. You can configure a subdomain of your own to handle
            these events. For information about using custom domains, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/configure-custom-open-click-domains.html">Amazon
            SES Developer Guide</a>.
            </para><note><para>
            Deleting this kind of association will result in emails sent using the specified configuration
            set to capture open and click events using the standard, Amazon SES-operated domains.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESConfigurationSetTrackingOptionCmdlet.ConfigurationSetName">
            <summary>
            <para>
            <para>The name of the configuration set from which you want to delete the tracking options.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESConfigurationSetTrackingOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.DeleteConfigurationSetTrackingOptionsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESConfigurationSetTrackingOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConfigurationSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^ConfigurationSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESConfigurationSetTrackingOptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.RemoveSESCustomVerificationEmailTemplateCmdlet">
            <summary>
            Deletes an existing custom verification email template. 
            
             
            <para>
            For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html">Using
            Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESCustomVerificationEmailTemplateCmdlet.TemplateName">
            <summary>
            <para>
            <para>The name of the custom verification email template that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESCustomVerificationEmailTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.DeleteCustomVerificationEmailTemplateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESCustomVerificationEmailTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateName parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESCustomVerificationEmailTemplateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.RemoveSESIdentityCmdlet">
            <summary>
            Deletes the specified identity (an email address or a domain) from the list of verified
            identities.
            
             
            <para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESIdentityCmdlet.Identity">
            <summary>
            <para>
            <para>The identity to be removed from the list of identities for the AWS Account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESIdentityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.DeleteIdentityResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESIdentityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Identity parameter.
            The -PassThru parameter is deprecated, use -Select '^Identity' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESIdentityCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.RemoveSESIdentityPolicyCmdlet">
            <summary>
            Deletes the specified sending authorization policy for the given identity (an email
            address or a domain). This API returns successfully even if a policy with the specified
            name does not exist.
            
             <note><para>
            This API is for the identity owner only. If you have not verified the identity, this
            API will return an error.
            </para></note><para>
            Sending authorization is a feature that enables an identity owner to authorize other
            senders to use its identities. For information about using sending authorization,
            see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESIdentityPolicyCmdlet.Identity">
            <summary>
            <para>
            <para>The identity that is associated with the policy that you want to delete. You can specify
            the identity by using its name or by using its Amazon Resource Name (ARN). Examples:
            <code>user@example.com</code>, <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</para><para>To successfully call this API, you must own the identity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESIdentityPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The name of the policy to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESIdentityPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.DeleteIdentityPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESIdentityPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyName parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESIdentityPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.RemoveSESReceiptFilterCmdlet">
            <summary>
            Deletes the specified IP address filter.
            
             
            <para>
            For information about managing IP address filters, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-ip-filters.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESReceiptFilterCmdlet.FilterName">
            <summary>
            <para>
            <para>The name of the IP address filter to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESReceiptFilterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.DeleteReceiptFilterResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESReceiptFilterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FilterName parameter.
            The -PassThru parameter is deprecated, use -Select '^FilterName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESReceiptFilterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.RemoveSESReceiptRuleCmdlet">
            <summary>
            Deletes the specified receipt rule.
            
             
            <para>
            For information about managing receipt rules, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESReceiptRuleCmdlet.RuleName">
            <summary>
            <para>
            <para>The name of the receipt rule to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESReceiptRuleCmdlet.RuleSetName">
            <summary>
            <para>
            <para>The name of the receipt rule set that contains the receipt rule to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESReceiptRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.DeleteReceiptRuleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESReceiptRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.RemoveSESReceiptRuleSetCmdlet">
            <summary>
            Deletes the specified receipt rule set and all of the receipt rules it contains.
            
             <note><para>
            The currently active rule set cannot be deleted.
            </para></note><para>
            For information about managing receipt rule sets, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESReceiptRuleSetCmdlet.RuleSetName">
            <summary>
            <para>
            <para>The name of the receipt rule set to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESReceiptRuleSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.DeleteReceiptRuleSetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESReceiptRuleSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RuleSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^RuleSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESReceiptRuleSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.RemoveSESTemplateCmdlet">
            <summary>
            Deletes an email template.
            
             
            <para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESTemplateCmdlet.TemplateName">
            <summary>
            <para>
            <para>The name of the template to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.DeleteTemplateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateName parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESTemplateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.RemoveSESVerifiedEmailAddressCmdlet">
            <summary>
            Deprecated. Use the <code>DeleteIdentity</code> operation to delete email addresses
            and domains.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESVerifiedEmailAddressCmdlet.EmailAddress">
            <summary>
            <para>
            <para>An email address to be removed from the list of verified addresses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESVerifiedEmailAddressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.DeleteVerifiedEmailAddressResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESVerifiedEmailAddressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EmailAddress parameter.
            The -PassThru parameter is deprecated, use -Select '^EmailAddress' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.RemoveSESVerifiedEmailAddressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.SendSESBounceCmdlet">
            <summary>
            Generates and sends a bounce message to the sender of an email you received through
            Amazon SES. You can only use this API on an email up to 24 hours after you receive
            it.
            
             <note><para>
            You cannot use this API to send generic bounces for mail that was not received by
            Amazon SES.
            </para></note><para>
            For information about receiving email through Amazon SES, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBounceCmdlet.MessageDsn_UtcArrivalDate">
            <summary>
            <para>
            <para>When the message was received by the reporting mail transfer agent (MTA), in <a href="https://www.ietf.org/rfc/rfc0822.txt">RFC
            822</a> date-time format.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBounceCmdlet.BouncedRecipientInfoList">
            <summary>
            <para>
            <para>A list of recipients of the bounced message, including the information required to
            create the Delivery Status Notifications (DSNs) for the recipients. You must specify
            at least one <code>BouncedRecipientInfo</code> in the list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBounceCmdlet.BounceSender">
            <summary>
            <para>
            <para>The address to use in the "From" header of the bounce message. This must be an identity
            that you have verified with Amazon SES.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBounceCmdlet.BounceSenderArn">
            <summary>
            <para>
            <para>This parameter is used only for sending authorization. It is the ARN of the identity
            that is associated with the sending authorization policy that permits you to use the
            address in the "From" header of the bounce. For more information about sending authorization,
            see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBounceCmdlet.Explanation">
            <summary>
            <para>
            <para>Human-readable text for the bounce message to explain the failure. If not specified,
            the text will be auto-generated based on the bounced recipient information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBounceCmdlet.MessageDsn_ExtensionField">
            <summary>
            <para>
            <para>Additional X-headers to include in the DSN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBounceCmdlet.OriginalMessageId">
            <summary>
            <para>
            <para>The message ID of the message to be bounced.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBounceCmdlet.MessageDsn_ReportingMta">
            <summary>
            <para>
            <para>The reporting MTA that attempted to deliver the message, formatted as specified in
            <a href="https://tools.ietf.org/html/rfc3464">RFC 3464</a> (<code>mta-name-type; mta-name</code>).
            The default value is <code>dns; inbound-smtp.[region].amazonaws.com</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBounceCmdlet.MessageDsn_ArrivalDate">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use ArrivalDateUtc instead. Setting either ArrivalDate
            or ArrivalDateUtc results in both ArrivalDate and ArrivalDateUtc being assigned, the
            latest assignment to either one of the two property is reflected in the value of both.
            ArrivalDate is provided for backwards compatibility only and assigning a non-Utc DateTime
            to it results in the wrong timestamp being passed to the service.</para><para>When the message was received by the reporting mail transfer agent (MTA), in <a href="https://www.ietf.org/rfc/rfc0822.txt">RFC
            822</a> date-time format.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBounceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MessageId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.SendBounceResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.SendBounceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBounceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BouncedRecipientInfoList parameter.
            The -PassThru parameter is deprecated, use -Select '^BouncedRecipientInfoList' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBounceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.SendSESBulkTemplatedEmailCmdlet">
            <summary>
            Composes an email message to multiple destinations. The message body is created using
            an email template.
            
             
            <para>
            In order to send email using the <code>SendBulkTemplatedEmail</code> operation, your
            call to the API must meet the following requirements:
            </para><ul><li><para>
            The call must refer to an existing email template. You can create email templates
            using the <a>CreateTemplate</a> operation.
            </para></li><li><para>
            The message must be sent from a verified email address or domain.
            </para></li><li><para>
            If your account is still in the Amazon SES sandbox, you may only send to verified
            addresses or domains, or to email addresses associated with the Amazon SES Mailbox
            Simulator. For more information, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html">Verifying
            Email Addresses and Domains</a> in the <i>Amazon SES Developer Guide.</i></para></li><li><para>
            The maximum message size is 10 MB.
            </para></li><li><para>
            Each <code>Destination</code> parameter must include at least one recipient email
            address. The recipient address can be a To: address, a CC: address, or a BCC: address.
            If a recipient email address is invalid (that is, it is not in the format <i>UserName@[SubDomain.]Domain.TopLevelDomain</i>),
            the entire message will be rejected, even if the message contains other recipients
            that are valid.
            </para></li><li><para>
            The message may not include more than 50 recipients, across the To:, CC: and BCC:
            fields. If you need to send an email message to a larger audience, you can divide
            your recipient list into groups of 50 or fewer, and then call the <code>SendBulkTemplatedEmail</code>
            operation several times to send the message to each group.
            </para></li><li><para>
            The number of destinations you can contact in a single call to the API may be limited
            by your account's maximum sending rate.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBulkTemplatedEmailCmdlet.ConfigurationSetName">
            <summary>
            <para>
            <para>The name of the configuration set to use when you send an email using <code>SendBulkTemplatedEmail</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBulkTemplatedEmailCmdlet.DefaultTag">
            <summary>
            <para>
            <para>A list of tags, in the form of name/value pairs, to apply to an email that you send
            to a destination using <code>SendBulkTemplatedEmail</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBulkTemplatedEmailCmdlet.DefaultTemplateData">
            <summary>
            <para>
            <para>A list of replacement values to apply to the template when replacement data is not
            specified in a Destination object. These values act as a default or fallback option
            when no other data is available.</para><para>The template data is a JSON object, typically consisting of key-value pairs in which
            the keys correspond to replacement tags in the email template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBulkTemplatedEmailCmdlet.Destination">
            <summary>
            <para>
            <para>One or more <code>Destination</code> objects. All of the recipients in a <code>Destination</code>
            will receive the same version of the email. You can specify up to 50 <code>Destination</code>
            objects within a <code>Destinations</code> array.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBulkTemplatedEmailCmdlet.ReplyToAddress">
            <summary>
            <para>
            <para>The reply-to email address(es) for the message. If the recipient replies to the message,
            each reply-to address will receive the reply.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBulkTemplatedEmailCmdlet.ReturnPath">
            <summary>
            <para>
            <para>The email address that bounces and complaints will be forwarded to when feedback forwarding
            is enabled. If the message cannot be delivered to the recipient, then an error message
            will be returned from the recipient's ISP; this message will then be forwarded to
            the email address specified by the <code>ReturnPath</code> parameter. The <code>ReturnPath</code>
            parameter is never overwritten. This email address must be either individually verified
            with Amazon SES, or from a domain that has been verified with Amazon SES. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBulkTemplatedEmailCmdlet.ReturnPathArn">
            <summary>
            <para>
            <para>This parameter is used only for sending authorization. It is the ARN of the identity
            that is associated with the sending authorization policy that permits you to use the
            email address specified in the <code>ReturnPath</code> parameter.</para><para>For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>)
            attaches a policy to it that authorizes you to use <code>feedback@example.com</code>,
            then you would specify the <code>ReturnPathArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>,
            and the <code>ReturnPath</code> to be <code>feedback@example.com</code>.</para><para>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBulkTemplatedEmailCmdlet.Source">
            <summary>
            <para>
            <para>The email address that is sending the email. This email address must be either individually
            verified with Amazon SES, or from a domain that has been verified with Amazon SES.
            For information about verifying identities, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html">Amazon
            SES Developer Guide</a>.</para><para>If you are sending on behalf of another user and have been permitted to do so by a
            sending authorization policy, then you must also specify the <code>SourceArn</code>
            parameter. For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.</para><note><para>Amazon SES does not support the SMTPUTF8 extension, as described in <a href="https://tools.ietf.org/html/rfc6531">RFC6531</a>.
            For this reason, the <i>local part</i> of a source email address (the part of the
            email address that precedes the @ sign) may only contain <a href="https://en.wikipedia.org/wiki/Email_address#Local-part">7-bit
            ASCII characters</a>. If the <i>domain part</i> of an address (the part after the
            @ sign) contains non-ASCII characters, they must be encoded using Punycode, as described
            in <a href="https://tools.ietf.org/html/rfc3492.html">RFC3492</a>. The sender name
            (also known as the <i>friendly name</i>) may contain non-ASCII characters. These characters
            must be encoded using MIME encoded-word syntax, as described in <a href="https://tools.ietf.org/html/rfc2047">RFC
            2047</a>. MIME encoded-word syntax uses the following form: <code>=?charset?encoding?encoded-text?=</code>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBulkTemplatedEmailCmdlet.SourceArn">
            <summary>
            <para>
            <para>This parameter is used only for sending authorization. It is the ARN of the identity
            that is associated with the sending authorization policy that permits you to send
            for the email address specified in the <code>Source</code> parameter.</para><para>For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>)
            attaches a policy to it that authorizes you to send from <code>user@example.com</code>,
            then you would specify the <code>SourceArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>,
            and the <code>Source</code> to be <code>user@example.com</code>.</para><para>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBulkTemplatedEmailCmdlet.Template">
            <summary>
            <para>
            <para>The template to use when sending this email.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBulkTemplatedEmailCmdlet.TemplateArn">
            <summary>
            <para>
            <para>The ARN of the template to use when sending this email.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBulkTemplatedEmailCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Status'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.SendBulkTemplatedEmailResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.SendBulkTemplatedEmailResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBulkTemplatedEmailCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Source parameter.
            The -PassThru parameter is deprecated, use -Select '^Source' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESBulkTemplatedEmailCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.SendSESCustomVerificationEmailCmdlet">
            <summary>
            Adds an email address to the list of identities for your Amazon SES account in the
            current AWS Region and attempts to verify it. As a result of executing this operation,
            a customized verification email is sent to the specified address.
            
             
            <para>
            To use this operation, you must first create a custom verification email template.
            For more information about creating and using custom verification email templates,
            see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html">Using
            Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESCustomVerificationEmailCmdlet.ConfigurationSetName">
            <summary>
            <para>
            <para>Name of a configuration set to use when sending the verification email.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESCustomVerificationEmailCmdlet.EmailAddress">
            <summary>
            <para>
            <para>The email address to verify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESCustomVerificationEmailCmdlet.TemplateName">
            <summary>
            <para>
            <para>The name of the custom verification email template to use when sending the verification
            email.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESCustomVerificationEmailCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MessageId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.SendCustomVerificationEmailResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.SendCustomVerificationEmailResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESCustomVerificationEmailCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EmailAddress parameter.
            The -PassThru parameter is deprecated, use -Select '^EmailAddress' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESCustomVerificationEmailCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.SendSESEmailCmdlet">
            <summary>
            Composes an email message and immediately queues it for sending. In order to send
            email using the <code>SendEmail</code> operation, your message must meet the following
            requirements:
            
             <ul><li><para>
            The message must be sent from a verified email address or domain. If you attempt to
            send email using a non-verified address or domain, the operation will result in an
            "Email address not verified" error. 
            </para></li><li><para>
            If your account is still in the Amazon SES sandbox, you may only send to verified
            addresses or domains, or to email addresses associated with the Amazon SES Mailbox
            Simulator. For more information, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html">Verifying
            Email Addresses and Domains</a> in the <i>Amazon SES Developer Guide.</i></para></li><li><para>
            The maximum message size is 10 MB.
            </para></li><li><para>
            The message must include at least one recipient email address. The recipient address
            can be a To: address, a CC: address, or a BCC: address. If a recipient email address
            is invalid (that is, it is not in the format <i>UserName@[SubDomain.]Domain.TopLevelDomain</i>),
            the entire message will be rejected, even if the message contains other recipients
            that are valid.
            </para></li><li><para>
            The message may not include more than 50 recipients, across the To:, CC: and BCC:
            fields. If you need to send an email message to a larger audience, you can divide
            your recipient list into groups of 50 or fewer, and then call the <code>SendEmail</code>
            operation several times to send the message to each group.
            </para></li></ul><important><para>
            For every message that you send, the total number of recipients (including each recipient
            in the To:, CC: and BCC: fields) is counted against the maximum number of emails you
            can send in a 24-hour period (your <i>sending quota</i>). For more information about
            sending quotas in Amazon SES, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/manage-sending-limits.html">Managing
            Your Amazon SES Sending Limits</a> in the <i>Amazon SES Developer Guide.</i></para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESEmailCmdlet.Destination_BccAddress">
            <summary>
            <para>
            <para>The recipients to place on the BCC: line of the message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESEmailCmdlet.Destination_CcAddress">
            <summary>
            <para>
            <para>The recipients to place on the CC: line of the message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESEmailCmdlet.Html_Charset">
            <summary>
            <para>
            <para>The character set of the content.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESEmailCmdlet.Text_Charset">
            <summary>
            <para>
            <para>The character set of the content.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESEmailCmdlet.Subject_Charset">
            <summary>
            <para>
            <para>The character set of the content.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESEmailCmdlet.ConfigurationSetName">
            <summary>
            <para>
            <para>The name of the configuration set to use when you send an email using <code>SendEmail</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESEmailCmdlet.Html_Data">
            <summary>
            <para>
            <para>The textual data of the content.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESEmailCmdlet.Text_Data">
            <summary>
            <para>
            <para>The textual data of the content.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESEmailCmdlet.Subject_Data">
            <summary>
            <para>
            <para>The textual data of the content.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESEmailCmdlet.ReplyToAddress">
            <summary>
            <para>
            <para>The reply-to email address(es) for the message. If the recipient replies to the message,
            each reply-to address will receive the reply.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESEmailCmdlet.ReturnPath">
            <summary>
            <para>
            <para>The email address that bounces and complaints will be forwarded to when feedback forwarding
            is enabled. If the message cannot be delivered to the recipient, then an error message
            will be returned from the recipient's ISP; this message will then be forwarded to
            the email address specified by the <code>ReturnPath</code> parameter. The <code>ReturnPath</code>
            parameter is never overwritten. This email address must be either individually verified
            with Amazon SES, or from a domain that has been verified with Amazon SES. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESEmailCmdlet.ReturnPathArn">
            <summary>
            <para>
            <para>This parameter is used only for sending authorization. It is the ARN of the identity
            that is associated with the sending authorization policy that permits you to use the
            email address specified in the <code>ReturnPath</code> parameter.</para><para>For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>)
            attaches a policy to it that authorizes you to use <code>feedback@example.com</code>,
            then you would specify the <code>ReturnPathArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>,
            and the <code>ReturnPath</code> to be <code>feedback@example.com</code>.</para><para>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESEmailCmdlet.Source">
            <summary>
            <para>
            <para>The email address that is sending the email. This email address must be either individually
            verified with Amazon SES, or from a domain that has been verified with Amazon SES.
            For information about verifying identities, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html">Amazon
            SES Developer Guide</a>.</para><para>If you are sending on behalf of another user and have been permitted to do so by a
            sending authorization policy, then you must also specify the <code>SourceArn</code>
            parameter. For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.</para><note><para>Amazon SES does not support the SMTPUTF8 extension, as described in <a href="https://tools.ietf.org/html/rfc6531">RFC6531</a>.
            For this reason, the <i>local part</i> of a source email address (the part of the
            email address that precedes the @ sign) may only contain <a href="https://en.wikipedia.org/wiki/Email_address#Local-part">7-bit
            ASCII characters</a>. If the <i>domain part</i> of an address (the part after the
            @ sign) contains non-ASCII characters, they must be encoded using Punycode, as described
            in <a href="https://tools.ietf.org/html/rfc3492.html">RFC3492</a>. The sender name
            (also known as the <i>friendly name</i>) may contain non-ASCII characters. These characters
            must be encoded using MIME encoded-word syntax, as described in <a href="https://tools.ietf.org/html/rfc2047">RFC
            2047</a>. MIME encoded-word syntax uses the following form: <code>=?charset?encoding?encoded-text?=</code>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESEmailCmdlet.SourceArn">
            <summary>
            <para>
            <para>This parameter is used only for sending authorization. It is the ARN of the identity
            that is associated with the sending authorization policy that permits you to send
            for the email address specified in the <code>Source</code> parameter.</para><para>For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>)
            attaches a policy to it that authorizes you to send from <code>user@example.com</code>,
            then you would specify the <code>SourceArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>,
            and the <code>Source</code> to be <code>user@example.com</code>.</para><para>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESEmailCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tags, in the form of name/value pairs, to apply to an email that you send
            using <code>SendEmail</code>. Tags correspond to characteristics of the email that
            you define, so that you can publish email sending events.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESEmailCmdlet.Destination_ToAddress">
            <summary>
            <para>
            <para>The recipients to place on the To: line of the message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESEmailCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MessageId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.SendEmailResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.SendEmailResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESEmailCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Source parameter.
            The -PassThru parameter is deprecated, use -Select '^Source' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESEmailCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.SendSESRawEmailCmdlet">
            <summary>
            Composes an email message and immediately queues it for sending.
            
             
            <para>
            This operation is more flexible than the <code>SendEmail</code> API operation. When
            you use the <code>SendRawEmail</code> operation, you can specify the headers of the
            message as well as its content. This flexibility is useful, for example, when you
            want to send a multipart MIME email (such a message that contains both a text and
            an HTML version). You can also use this operation to send messages that include attachments.
            </para><para>
            The <code>SendRawEmail</code> operation has the following requirements:
            </para><ul><li><para>
            You can only send email from <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html">verified
            email addresses or domains</a>. If you try to send email from an address that isn't
            verified, the operation results in an "Email address not verified" error.
            </para></li><li><para>
            If your account is still in the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/request-production-access.html">Amazon
            SES sandbox</a>, you can only send email to other verified addresses in your account,
            or to addresses that are associated with the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/mailbox-simulator.html">Amazon
            SES mailbox simulator</a>.
            </para></li><li><para>
            The maximum message size, including attachments, is 10 MB.
            </para></li><li><para>
            Each message has to include at least one recipient address. A recipient address includes
            any address on the To:, CC:, or BCC: lines.
            </para></li><li><para>
            If you send a single message to more than one recipient address, and one of the recipient
            addresses isn't in a valid format (that is, it's not in the format <i>UserName@[SubDomain.]Domain.TopLevelDomain</i>),
            Amazon SES rejects the entire message, even if the other addresses are valid.
            </para></li><li><para>
            Each message can include up to 50 recipient addresses across the To:, CC:, or BCC:
            lines. If you need to send a single message to more than 50 recipients, you have to
            split the list of recipient addresses into groups of less than 50 recipients, and
            send separate messages to each group.
            </para></li><li><para>
            Amazon SES allows you to specify 8-bit Content-Transfer-Encoding for MIME message
            parts. However, if Amazon SES has to modify the contents of your message (for example,
            if you use open and click tracking), 8-bit content isn't preserved. For this reason,
            we highly recommend that you encode all content that isn't 7-bit ASCII. For more information,
            see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-raw.html#send-email-mime-encoding">MIME
            Encoding</a> in the <i>Amazon SES Developer Guide</i>.
            </para></li></ul><para>
            Additionally, keep the following considerations in mind when using the <code>SendRawEmail</code>
            operation:
            </para><ul><li><para>
            Although you can customize the message headers when using the <code>SendRawEmail</code>
            operation, Amazon SES will automatically apply its own <code>Message-ID</code> and
            <code>Date</code> headers; if you passed these headers when creating the message,
            they will be overwritten by the values that Amazon SES provides.
            </para></li><li><para>
            If you are using sending authorization to send on behalf of another user, <code>SendRawEmail</code>
            enables you to specify the cross-account identity for the email's Source, From, and
            Return-Path parameters in one of two ways: you can pass optional parameters <code>SourceArn</code>,
            <code>FromArn</code>, and/or <code>ReturnPathArn</code> to the API, or you can include
            the following X-headers in the header of your raw email:
            </para><ul><li><para><code>X-SES-SOURCE-ARN</code></para></li><li><para><code>X-SES-FROM-ARN</code></para></li><li><para><code>X-SES-RETURN-PATH-ARN</code></para></li></ul><important><para>
            Don't include these X-headers in the DKIM signature. Amazon SES removes these before
            it sends the email.
            </para></important><para>
            If you only specify the <code>SourceIdentityArn</code> parameter, Amazon SES sets
            the From and Return-Path addresses to the same identity that you specified.
            </para><para>
            For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Using
            Sending Authorization with Amazon SES</a> in the <i>Amazon SES Developer Guide.</i></para></li><li><para>
            For every message that you send, the total number of recipients (including each recipient
            in the To:, CC: and BCC: fields) is counted against the maximum number of emails you
            can send in a 24-hour period (your <i>sending quota</i>). For more information about
            sending quotas in Amazon SES, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/manage-sending-limits.html">Managing
            Your Amazon SES Sending Limits</a> in the <i>Amazon SES Developer Guide.</i></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESRawEmailCmdlet.ConfigurationSetName">
            <summary>
            <para>
            <para>The name of the configuration set to use when you send an email using <code>SendRawEmail</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESRawEmailCmdlet.RawMessage_Data">
            <summary>
            <para>
            <para>The raw data of the message. This data needs to base64-encoded if you are accessing
            Amazon SES directly through the HTTPS interface. If you are accessing Amazon SES using
            an AWS SDK, the SDK takes care of the base 64-encoding for you. In all cases, the
            client must ensure that the message format complies with Internet email standards
            regarding email header fields, MIME types, and MIME encoding.</para><para>The To:, CC:, and BCC: headers in the raw message can contain a group list.</para><para>If you are using <code>SendRawEmail</code> with sending authorization, you can include
            X-headers in the raw message to specify the "Source," "From," and "Return-Path" addresses.
            For more information, see the documentation for <code>SendRawEmail</code>. </para><important><para>Do not include these X-headers in the DKIM signature, because they are removed by
            Amazon SES before sending the email.</para></important><para>For more information, go to the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-raw.html">Amazon
            SES Developer Guide</a>.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESRawEmailCmdlet.Destination">
            <summary>
            <para>
            <para>A list of destinations for the message, consisting of To:, CC:, and BCC: addresses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESRawEmailCmdlet.FromArn">
            <summary>
            <para>
            <para>This parameter is used only for sending authorization. It is the ARN of the identity
            that is associated with the sending authorization policy that permits you to specify
            a particular "From" address in the header of the raw email.</para><para>Instead of using this parameter, you can use the X-header <code>X-SES-FROM-ARN</code>
            in the raw message of the email. If you use both the <code>FromArn</code> parameter
            and the corresponding X-header, Amazon SES uses the value of the <code>FromArn</code>
            parameter.</para><note><para>For information about when to use this parameter, see the description of <code>SendRawEmail</code>
            in this guide, or see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-delegate-sender-tasks-email.html">Amazon
            SES Developer Guide</a>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESRawEmailCmdlet.ReturnPathArn">
            <summary>
            <para>
            <para>This parameter is used only for sending authorization. It is the ARN of the identity
            that is associated with the sending authorization policy that permits you to use the
            email address specified in the <code>ReturnPath</code> parameter.</para><para>For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>)
            attaches a policy to it that authorizes you to use <code>feedback@example.com</code>,
            then you would specify the <code>ReturnPathArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>,
            and the <code>ReturnPath</code> to be <code>feedback@example.com</code>.</para><para>Instead of using this parameter, you can use the X-header <code>X-SES-RETURN-PATH-ARN</code>
            in the raw message of the email. If you use both the <code>ReturnPathArn</code> parameter
            and the corresponding X-header, Amazon SES uses the value of the <code>ReturnPathArn</code>
            parameter.</para><note><para>For information about when to use this parameter, see the description of <code>SendRawEmail</code>
            in this guide, or see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-delegate-sender-tasks-email.html">Amazon
            SES Developer Guide</a>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESRawEmailCmdlet.Source">
            <summary>
            <para>
            <para>The identity's email address. If you do not provide a value for this parameter, you
            must specify a "From" address in the raw text of the message. (You can also specify
            both.)</para><note><para>Amazon SES does not support the SMTPUTF8 extension, as described in<a href="https://tools.ietf.org/html/rfc6531">RFC6531</a>.
            For this reason, the <i>local part</i> of a source email address (the part of the
            email address that precedes the @ sign) may only contain <a href="https://en.wikipedia.org/wiki/Email_address#Local-part">7-bit
            ASCII characters</a>. If the <i>domain part</i> of an address (the part after the
            @ sign) contains non-ASCII characters, they must be encoded using Punycode, as described
            in <a href="https://tools.ietf.org/html/rfc3492.html">RFC3492</a>. The sender name
            (also known as the <i>friendly name</i>) may contain non-ASCII characters. These characters
            must be encoded using MIME encoded-word syntax, as described in <a href="https://tools.ietf.org/html/rfc2047">RFC
            2047</a>. MIME encoded-word syntax uses the following form: <code>=?charset?encoding?encoded-text?=</code>.</para></note><para>If you specify the <code>Source</code> parameter and have feedback forwarding enabled,
            then bounces and complaints will be sent to this email address. This takes precedence
            over any Return-Path header that you might include in the raw text of the message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESRawEmailCmdlet.SourceArn">
            <summary>
            <para>
            <para>This parameter is used only for sending authorization. It is the ARN of the identity
            that is associated with the sending authorization policy that permits you to send
            for the email address specified in the <code>Source</code> parameter.</para><para>For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>)
            attaches a policy to it that authorizes you to send from <code>user@example.com</code>,
            then you would specify the <code>SourceArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>,
            and the <code>Source</code> to be <code>user@example.com</code>.</para><para>Instead of using this parameter, you can use the X-header <code>X-SES-SOURCE-ARN</code>
            in the raw message of the email. If you use both the <code>SourceArn</code> parameter
            and the corresponding X-header, Amazon SES uses the value of the <code>SourceArn</code>
            parameter.</para><note><para>For information about when to use this parameter, see the description of <code>SendRawEmail</code>
            in this guide, or see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-delegate-sender-tasks-email.html">Amazon
            SES Developer Guide</a>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESRawEmailCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tags, in the form of name/value pairs, to apply to an email that you send
            using <code>SendRawEmail</code>. Tags correspond to characteristics of the email that
            you define, so that you can publish email sending events.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESRawEmailCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MessageId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.SendRawEmailResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.SendRawEmailResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESRawEmailCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Source parameter.
            The -PassThru parameter is deprecated, use -Select '^Source' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESRawEmailCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.SendSESTemplatedEmailCmdlet">
            <summary>
            Composes an email message using an email template and immediately queues it for sending.
            
             
            <para>
            In order to send email using the <code>SendTemplatedEmail</code> operation, your call
            to the API must meet the following requirements:
            </para><ul><li><para>
            The call must refer to an existing email template. You can create email templates
            using the <a>CreateTemplate</a> operation.
            </para></li><li><para>
            The message must be sent from a verified email address or domain.
            </para></li><li><para>
            If your account is still in the Amazon SES sandbox, you may only send to verified
            addresses or domains, or to email addresses associated with the Amazon SES Mailbox
            Simulator. For more information, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html">Verifying
            Email Addresses and Domains</a> in the <i>Amazon SES Developer Guide.</i></para></li><li><para>
            The maximum message size is 10 MB.
            </para></li><li><para>
            Calls to the <code>SendTemplatedEmail</code> operation may only include one <code>Destination</code>
            parameter. A destination is a set of recipients who will receive the same version
            of the email. The <code>Destination</code> parameter can include up to 50 recipients,
            across the To:, CC: and BCC: fields.
            </para></li><li><para>
            The <code>Destination</code> parameter must include at least one recipient email address.
            The recipient address can be a To: address, a CC: address, or a BCC: address. If a
            recipient email address is invalid (that is, it is not in the format <i>UserName@[SubDomain.]Domain.TopLevelDomain</i>),
            the entire message will be rejected, even if the message contains other recipients
            that are valid.
            </para></li></ul><important><para>
            If your call to the <code>SendTemplatedEmail</code> operation includes all of the
            required parameters, Amazon SES accepts it and returns a Message ID. However, if Amazon
            SES can't render the email because the template contains errors, it doesn't send the
            email. Additionally, because it already accepted the message, Amazon SES doesn't return
            a message stating that it was unable to send the email.
            </para><para>
            For these reasons, we highly recommend that you set up Amazon SES to send you notifications
            when Rendering Failure events occur. For more information, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Sending
            Personalized Email Using the Amazon SES API</a> in the <i>Amazon Simple Email Service
            Developer Guide</i>.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESTemplatedEmailCmdlet.Destination_BccAddress">
            <summary>
            <para>
            <para>The recipients to place on the BCC: line of the message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESTemplatedEmailCmdlet.Destination_CcAddress">
            <summary>
            <para>
            <para>The recipients to place on the CC: line of the message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESTemplatedEmailCmdlet.ConfigurationSetName">
            <summary>
            <para>
            <para>The name of the configuration set to use when you send an email using <code>SendTemplatedEmail</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESTemplatedEmailCmdlet.ReplyToAddress">
            <summary>
            <para>
            <para>The reply-to email address(es) for the message. If the recipient replies to the message,
            each reply-to address will receive the reply.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESTemplatedEmailCmdlet.ReturnPath">
            <summary>
            <para>
            <para>The email address that bounces and complaints will be forwarded to when feedback forwarding
            is enabled. If the message cannot be delivered to the recipient, then an error message
            will be returned from the recipient's ISP; this message will then be forwarded to
            the email address specified by the <code>ReturnPath</code> parameter. The <code>ReturnPath</code>
            parameter is never overwritten. This email address must be either individually verified
            with Amazon SES, or from a domain that has been verified with Amazon SES. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESTemplatedEmailCmdlet.ReturnPathArn">
            <summary>
            <para>
            <para>This parameter is used only for sending authorization. It is the ARN of the identity
            that is associated with the sending authorization policy that permits you to use the
            email address specified in the <code>ReturnPath</code> parameter.</para><para>For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>)
            attaches a policy to it that authorizes you to use <code>feedback@example.com</code>,
            then you would specify the <code>ReturnPathArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>,
            and the <code>ReturnPath</code> to be <code>feedback@example.com</code>.</para><para>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESTemplatedEmailCmdlet.Source">
            <summary>
            <para>
            <para>The email address that is sending the email. This email address must be either individually
            verified with Amazon SES, or from a domain that has been verified with Amazon SES.
            For information about verifying identities, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html">Amazon
            SES Developer Guide</a>.</para><para>If you are sending on behalf of another user and have been permitted to do so by a
            sending authorization policy, then you must also specify the <code>SourceArn</code>
            parameter. For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.</para><note><para>Amazon SES does not support the SMTPUTF8 extension, as described in <a href="https://tools.ietf.org/html/rfc6531">RFC6531</a>.
            For this reason, the <i>local part</i> of a source email address (the part of the
            email address that precedes the @ sign) may only contain <a href="https://en.wikipedia.org/wiki/Email_address#Local-part">7-bit
            ASCII characters</a>. If the <i>domain part</i> of an address (the part after the
            @ sign) contains non-ASCII characters, they must be encoded using Punycode, as described
            in <a href="https://tools.ietf.org/html/rfc3492.html">RFC3492</a>. The sender name
            (also known as the <i>friendly name</i>) may contain non-ASCII characters. These characters
            must be encoded using MIME encoded-word syntax, as described in<a href="https://tools.ietf.org/html/rfc2047">RFC
            2047</a>. MIME encoded-word syntax uses the following form: <code>=?charset?encoding?encoded-text?=</code>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESTemplatedEmailCmdlet.SourceArn">
            <summary>
            <para>
            <para>This parameter is used only for sending authorization. It is the ARN of the identity
            that is associated with the sending authorization policy that permits you to send
            for the email address specified in the <code>Source</code> parameter.</para><para>For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>)
            attaches a policy to it that authorizes you to send from <code>user@example.com</code>,
            then you would specify the <code>SourceArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>,
            and the <code>Source</code> to be <code>user@example.com</code>.</para><para>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESTemplatedEmailCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tags, in the form of name/value pairs, to apply to an email that you send
            using <code>SendTemplatedEmail</code>. Tags correspond to characteristics of the email
            that you define, so that you can publish email sending events.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESTemplatedEmailCmdlet.Template">
            <summary>
            <para>
            <para>The template to use when sending this email.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESTemplatedEmailCmdlet.TemplateArn">
            <summary>
            <para>
            <para>The ARN of the template to use when sending this email.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESTemplatedEmailCmdlet.TemplateData">
            <summary>
            <para>
            <para>A list of replacement values to apply to the template. This parameter is a JSON object,
            typically consisting of key-value pairs in which the keys correspond to replacement
            tags in the email template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESTemplatedEmailCmdlet.Destination_ToAddress">
            <summary>
            <para>
            <para>The recipients to place on the To: line of the message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESTemplatedEmailCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MessageId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.SendTemplatedEmailResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.SendTemplatedEmailResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESTemplatedEmailCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateData parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateData' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SendSESTemplatedEmailCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.SetSESActiveReceiptRuleSetCmdlet">
            <summary>
            Sets the specified receipt rule set as the active receipt rule set.
            
             <note><para>
            To disable your email-receiving through Amazon SES completely, you can call this API
            with RuleSetName set to null.
            </para></note><para>
            For information about managing receipt rule sets, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESActiveReceiptRuleSetCmdlet.RuleSetName">
            <summary>
            <para>
            <para>The name of the receipt rule set to make active. Setting this value to null disables
            all email receiving.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESActiveReceiptRuleSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.SetActiveReceiptRuleSetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESActiveReceiptRuleSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RuleSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^RuleSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESActiveReceiptRuleSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityDkimEnabledCmdlet">
            <summary>
            Enables or disables Easy DKIM signing of email sent from an identity. If Easy DKIM
            signing is enabled for a domain, then Amazon SES uses DKIM to sign all email that
            it sends from addresses on that domain. If Easy DKIM signing is enabled for an email
            address, then Amazon SES uses DKIM to sign all email it sends from that address.
            
             <note><para>
            For email addresses (for example, <code>user@example.com</code>), you can only enable
            DKIM signing if the corresponding domain (in this case, <code>example.com</code>)
            has been set up to use Easy DKIM.
            </para></note><para>
            You can enable DKIM signing for an identity at any time after you start the verification
            process for the identity, even if the verification process isn't complete. 
            </para><para>
            You can execute this operation no more than once per second.
            </para><para>
            For more information about Easy DKIM signing, go to the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityDkimEnabledCmdlet.DkimEnabled">
            <summary>
            <para>
            <para>Sets whether DKIM signing is enabled for an identity. Set to <code>true</code> to
            enable DKIM signing for this identity; <code>false</code> to disable it. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityDkimEnabledCmdlet.Identity">
            <summary>
            <para>
            <para>The identity for which DKIM signing should be enabled or disabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityDkimEnabledCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.SetIdentityDkimEnabledResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityDkimEnabledCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Identity parameter.
            The -PassThru parameter is deprecated, use -Select '^Identity' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityDkimEnabledCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityFeedbackForwardingEnabledCmdlet">
            <summary>
            Given an identity (an email address or a domain), enables or disables whether Amazon
            SES forwards bounce and complaint notifications as email. Feedback forwarding can
            only be disabled when Amazon Simple Notification Service (Amazon SNS) topics are specified
            for both bounces and complaints.
            
             <note><para>
            Feedback forwarding does not apply to delivery notifications. Delivery notifications
            are only available through Amazon SNS.
            </para></note><para>
            You can execute this operation no more than once per second.
            </para><para>
            For more information about using notifications with Amazon SES, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityFeedbackForwardingEnabledCmdlet.ForwardingEnabled">
            <summary>
            <para>
            <para>Sets whether Amazon SES will forward bounce and complaint notifications as email.
            <code>true</code> specifies that Amazon SES will forward bounce and complaint notifications
            as email, in addition to any Amazon SNS topic publishing otherwise specified. <code>false</code>
            specifies that Amazon SES will publish bounce and complaint notifications only through
            Amazon SNS. This value can only be set to <code>false</code> when Amazon SNS topics
            are set for both <code>Bounce</code> and <code>Complaint</code> notification types.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityFeedbackForwardingEnabledCmdlet.Identity">
            <summary>
            <para>
            <para>The identity for which to set bounce and complaint notification forwarding. Examples:
            <code>user@example.com</code>, <code>example.com</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityFeedbackForwardingEnabledCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityFeedbackForwardingEnabledCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Identity parameter.
            The -PassThru parameter is deprecated, use -Select '^Identity' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityFeedbackForwardingEnabledCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityHeadersInNotificationsEnabledCmdlet">
            <summary>
            Given an identity (an email address or a domain), sets whether Amazon SES includes
            the original email headers in the Amazon Simple Notification Service (Amazon SNS)
            notifications of a specified type.
            
             
            <para>
            You can execute this operation no more than once per second.
            </para><para>
            For more information about using notifications with Amazon SES, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityHeadersInNotificationsEnabledCmdlet.Enabled">
            <summary>
            <para>
            <para>Sets whether Amazon SES includes the original email headers in Amazon SNS notifications
            of the specified notification type. A value of <code>true</code> specifies that Amazon
            SES will include headers in notifications, and a value of <code>false</code> specifies
            that Amazon SES will not include headers in notifications.</para><para>This value can only be set when <code>NotificationType</code> is already set to use
            a particular Amazon SNS topic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityHeadersInNotificationsEnabledCmdlet.Identity">
            <summary>
            <para>
            <para>The identity for which to enable or disable headers in notifications. Examples: <code>user@example.com</code>,
            <code>example.com</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityHeadersInNotificationsEnabledCmdlet.NotificationType">
            <summary>
            <para>
            <para>The notification type for which to enable or disable headers in notifications. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityHeadersInNotificationsEnabledCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.SetIdentityHeadersInNotificationsEnabledResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityHeadersInNotificationsEnabledCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Identity parameter.
            The -PassThru parameter is deprecated, use -Select '^Identity' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityHeadersInNotificationsEnabledCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityMailFromDomainCmdlet">
            <summary>
            Enables or disables the custom MAIL FROM domain setup for a verified identity (an
            email address or a domain).
            
             <important><para>
            To send emails using the specified MAIL FROM domain, you must add an MX record to
            your MAIL FROM domain's DNS settings. If you want your emails to pass Sender Policy
            Framework (SPF) checks, you must also add or update an SPF record. For more information,
            see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/mail-from-set.html">Amazon
            SES Developer Guide</a>.
            </para></important><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityMailFromDomainCmdlet.BehaviorOnMXFailure">
            <summary>
            <para>
            <para>The action that you want Amazon SES to take if it cannot successfully read the required
            MX record when you send an email. If you choose <code>UseDefaultValue</code>, Amazon
            SES will use amazonses.com (or a subdomain of that) as the MAIL FROM domain. If you
            choose <code>RejectMessage</code>, Amazon SES will return a <code>MailFromDomainNotVerified</code>
            error and not send the email.</para><para>The action specified in <code>BehaviorOnMXFailure</code> is taken when the custom
            MAIL FROM domain setup is in the <code>Pending</code>, <code>Failed</code>, and <code>TemporaryFailure</code>
            states.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityMailFromDomainCmdlet.Identity">
            <summary>
            <para>
            <para>The verified identity for which you want to enable or disable the specified custom
            MAIL FROM domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityMailFromDomainCmdlet.MailFromDomain">
            <summary>
            <para>
            <para>The custom MAIL FROM domain that you want the verified identity to use. The MAIL FROM
            domain must 1) be a subdomain of the verified identity, 2) not be used in a "From"
            address if the MAIL FROM domain is the destination of email feedback forwarding (for
            more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/mail-from.html">Amazon
            SES Developer Guide</a>), and 3) not be used to receive emails. A value of <code>null</code>
            disables the custom MAIL FROM setting for the identity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityMailFromDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.SetIdentityMailFromDomainResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityMailFromDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Identity parameter.
            The -PassThru parameter is deprecated, use -Select '^Identity' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityMailFromDomainCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityNotificationTopicCmdlet">
            <summary>
            Sets an Amazon Simple Notification Service (Amazon SNS) topic to use when delivering
            notifications. When you use this operation, you specify a verified identity, such
            as an email address or domain. When you send an email that uses the chosen identity
            in the Source field, Amazon SES sends notifications to the topic you specified. You
            can send bounce, complaint, or delivery notifications (or any combination of the three)
            to the Amazon SNS topic that you specify.
            
             
            <para>
            You can execute this operation no more than once per second.
            </para><para>
            For more information about feedback notification, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityNotificationTopicCmdlet.Identity">
            <summary>
            <para>
            <para>The identity (email address or domain) that you want to set the Amazon SNS topic for.</para><important><para>You can only specify a verified identity for this parameter.</para></important><para>You can specify an identity by using its name or by using its Amazon Resource Name
            (ARN). The following examples are all valid identities: <code>sender@example.com</code>,
            <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityNotificationTopicCmdlet.NotificationType">
            <summary>
            <para>
            <para>The type of notifications that will be published to the specified Amazon SNS topic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityNotificationTopicCmdlet.SnsTopic">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Amazon SNS topic. If the parameter is omitted
            from the request or a null value is passed, <code>SnsTopic</code> is cleared and publishing
            is disabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityNotificationTopicCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.SetIdentityNotificationTopicResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityNotificationTopicCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Identity parameter.
            The -PassThru parameter is deprecated, use -Select '^Identity' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESIdentityNotificationTopicCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.SetSESReceiptRulePositionCmdlet">
            <summary>
            Sets the position of the specified receipt rule in the receipt rule set.
            
             
            <para>
            For information about managing receipt rules, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESReceiptRulePositionCmdlet.After">
            <summary>
            <para>
            <para>The name of the receipt rule after which to place the specified receipt rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESReceiptRulePositionCmdlet.RuleName">
            <summary>
            <para>
            <para>The name of the receipt rule to reposition.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESReceiptRulePositionCmdlet.RuleSetName">
            <summary>
            <para>
            <para>The name of the receipt rule set that contains the receipt rule to reposition.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESReceiptRulePositionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.SetReceiptRulePositionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESReceiptRulePositionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.SetSESReceiptRuleSetOrderCmdlet">
            <summary>
            Reorders the receipt rules within a receipt rule set.
            
             <note><para>
            All of the rules in the rule set must be represented in this request. That is, this
            API will return an error if the reorder request doesn't explicitly position all of
            the rules.
            </para></note><para>
            For information about managing receipt rule sets, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESReceiptRuleSetOrderCmdlet.RuleName">
            <summary>
            <para>
            <para>A list of the specified receipt rule set's receipt rules in the order that you want
            to put them.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESReceiptRuleSetOrderCmdlet.RuleSetName">
            <summary>
            <para>
            <para>The name of the receipt rule set to reorder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESReceiptRuleSetOrderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.ReorderReceiptRuleSetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESReceiptRuleSetOrderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RuleName parameter.
            The -PassThru parameter is deprecated, use -Select '^RuleName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.SetSESReceiptRuleSetOrderCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.TestSESRenderTemplateCmdlet">
            <summary>
            Creates a preview of the MIME content of an email when provided with a template and
            a set of replacement data.
            
             
            <para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.TestSESRenderTemplateCmdlet.TemplateData">
            <summary>
            <para>
            <para>A list of replacement values to apply to the template. This parameter is a JSON object,
            typically consisting of key-value pairs in which the keys correspond to replacement
            tags in the email template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.TestSESRenderTemplateCmdlet.TemplateName">
            <summary>
            <para>
            <para>The name of the template that you want to render.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.TestSESRenderTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RenderedTemplate'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.TestRenderTemplateResponse).
            Specifying the name of a property of type Amazon.SimpleEmail.Model.TestRenderTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.TestSESRenderTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateData parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateData' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.UpdateSESAccountSendingEnabledCmdlet">
            <summary>
            Enables or disables email sending across your entire Amazon SES account in the current
            AWS Region. You can use this operation in conjunction with Amazon CloudWatch alarms
            to temporarily pause email sending across your Amazon SES account in a given AWS Region
            when reputation metrics (such as your bounce or complaint rates) reach certain thresholds.
            
             
            <para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESAccountSendingEnabledCmdlet.Enabled">
            <summary>
            <para>
            <para>Describes whether email sending is enabled or disabled for your Amazon SES account
            in the current AWS Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESAccountSendingEnabledCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.UpdateAccountSendingEnabledResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESAccountSendingEnabledCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Enabled parameter.
            The -PassThru parameter is deprecated, use -Select '^Enabled' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESAccountSendingEnabledCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetEventDestinationCmdlet">
            <summary>
            Updates the event destination of a configuration set. Event destinations are associated
            with configuration sets, which enable you to publish email sending events to Amazon
            CloudWatch, Amazon Kinesis Firehose, or Amazon Simple Notification Service (Amazon
            SNS). For information about using configuration sets, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html">Monitoring
            Your Amazon SES Sending Activity</a> in the <i>Amazon SES Developer Guide.</i><note><para>
            When you create or update an event destination, you must provide one, and only one,
            destination. The destination can be Amazon CloudWatch, Amazon Kinesis Firehose, or
            Amazon Simple Notification Service (Amazon SNS).
            </para></note><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetEventDestinationCmdlet.ConfigurationSetName">
            <summary>
            <para>
            <para>The name of the configuration set that contains the event destination that you want
            to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetEventDestinationCmdlet.KinesisFirehoseDestination_DeliveryStreamARN">
            <summary>
            <para>
            <para>The ARN of the Amazon Kinesis Firehose stream that email sending events should be
            published to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetEventDestinationCmdlet.CloudWatchDestination_DimensionConfiguration">
            <summary>
            <para>
            <para>A list of dimensions upon which to categorize your emails when you publish email sending
            events to Amazon CloudWatch.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetEventDestinationCmdlet.EventDestination_Enabled">
            <summary>
            <para>
            <para>Sets whether Amazon SES publishes events to this destination when you send an email
            with the associated configuration set. Set to <code>true</code> to enable publishing
            to this destination; set to <code>false</code> to prevent publishing to this destination.
            The default value is <code>false</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetEventDestinationCmdlet.KinesisFirehoseDestination_IAMRoleARN">
            <summary>
            <para>
            <para>The ARN of the IAM role under which Amazon SES publishes email sending events to the
            Amazon Kinesis Firehose stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetEventDestinationCmdlet.EventDestination_MatchingEventType">
            <summary>
            <para>
            <para>The type of email sending events to publish to the event destination.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetEventDestinationCmdlet.EventDestination_Name">
            <summary>
            <para>
            <para>The name of the event destination. The name must:</para><ul><li><para>This value can only contain ASCII letters (a-z, A-Z), numbers (0-9), underscores (_),
            or dashes (-).</para></li><li><para>Contain less than 64 characters.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetEventDestinationCmdlet.SNSDestination_TopicARN">
            <summary>
            <para>
            <para>The ARN of the Amazon SNS topic that email sending events will be published to. An
            example of an Amazon SNS topic ARN is <code>arn:aws:sns:us-west-2:123456789012:MyTopic</code>.
            For more information about Amazon SNS topics, see the <a href="https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html">Amazon
            SNS Developer Guide</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetEventDestinationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.UpdateConfigurationSetEventDestinationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetEventDestinationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConfigurationSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^ConfigurationSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetEventDestinationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetReputationMetricsEnabledCmdlet">
            <summary>
            Enables or disables the publishing of reputation metrics for emails sent using a specific
            configuration set in a given AWS Region. Reputation metrics include bounce and complaint
            rates. These metrics are published to Amazon CloudWatch. By using CloudWatch, you
            can create alarms when bounce or complaint rates exceed certain thresholds.
            
             
            <para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetReputationMetricsEnabledCmdlet.ConfigurationSetName">
            <summary>
            <para>
            <para>The name of the configuration set that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetReputationMetricsEnabledCmdlet.Enabled">
            <summary>
            <para>
            <para>Describes whether or not Amazon SES will publish reputation metrics for the configuration
            set, such as bounce and complaint rates, to Amazon CloudWatch.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetReputationMetricsEnabledCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.UpdateConfigurationSetReputationMetricsEnabledResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetReputationMetricsEnabledCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Enabled parameter.
            The -PassThru parameter is deprecated, use -Select '^Enabled' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetReputationMetricsEnabledCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetSendingEnabledCmdlet">
            <summary>
            Enables or disables email sending for messages sent using a specific configuration
            set in a given AWS Region. You can use this operation in conjunction with Amazon CloudWatch
            alarms to temporarily pause email sending for a configuration set when the reputation
            metrics for that configuration set (such as your bounce on complaint rate) exceed
            certain thresholds.
            
             
            <para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetSendingEnabledCmdlet.ConfigurationSetName">
            <summary>
            <para>
            <para>The name of the configuration set that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetSendingEnabledCmdlet.Enabled">
            <summary>
            <para>
            <para>Describes whether email sending is enabled or disabled for the configuration set.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetSendingEnabledCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.UpdateConfigurationSetSendingEnabledResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetSendingEnabledCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Enabled parameter.
            The -PassThru parameter is deprecated, use -Select '^Enabled' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetSendingEnabledCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetTrackingOptionCmdlet">
            <summary>
            Modifies an association between a configuration set and a custom domain for open and
            click event tracking. 
            
             
            <para>
            By default, images and links used for tracking open and click events are hosted on
            domains operated by Amazon SES. You can configure a subdomain of your own to handle
            these events. For information about using custom domains, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/configure-custom-open-click-domains.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetTrackingOptionCmdlet.ConfigurationSetName">
            <summary>
            <para>
            <para>The name of the configuration set for which you want to update the custom tracking
            domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetTrackingOptionCmdlet.TrackingOption">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetTrackingOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.UpdateConfigurationSetTrackingOptionsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetTrackingOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrackingOption parameter.
            The -PassThru parameter is deprecated, use -Select '^TrackingOption' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESConfigurationSetTrackingOptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.UpdateSESCustomVerificationEmailTemplateCmdlet">
            <summary>
            Updates an existing custom verification email template.
            
             
            <para>
            For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html">Using
            Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESCustomVerificationEmailTemplateCmdlet.FailureRedirectionURL">
            <summary>
            <para>
            <para>The URL that the recipient of the verification email is sent to if his or her address
            is not successfully verified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESCustomVerificationEmailTemplateCmdlet.FromEmailAddress">
            <summary>
            <para>
            <para>The email address that the custom verification email is sent from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESCustomVerificationEmailTemplateCmdlet.SuccessRedirectionURL">
            <summary>
            <para>
            <para>The URL that the recipient of the verification email is sent to if his or her address
            is successfully verified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESCustomVerificationEmailTemplateCmdlet.TemplateContent">
            <summary>
            <para>
            <para>The content of the custom verification email. The total size of the email must be
            less than 10 MB. The message body may contain HTML, with some limitations. For more
            information, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html#custom-verification-emails-faq">Custom
            Verification Email Frequently Asked Questions</a> in the <i>Amazon SES Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESCustomVerificationEmailTemplateCmdlet.TemplateName">
            <summary>
            <para>
            <para>The name of the custom verification email template that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESCustomVerificationEmailTemplateCmdlet.TemplateSubject">
            <summary>
            <para>
            <para>The subject line of the custom verification email.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESCustomVerificationEmailTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.UpdateCustomVerificationEmailTemplateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESCustomVerificationEmailTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateContent parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateContent' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESCustomVerificationEmailTemplateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.UpdateSESReceiptRuleCmdlet">
            <summary>
            Updates a receipt rule.
            
             
            <para>
            For information about managing receipt rules, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESReceiptRuleCmdlet.Rule_Action">
            <summary>
            <para>
            <para>An ordered list of actions to perform on messages that match at least one of the recipient
            email addresses or domains specified in the receipt rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESReceiptRuleCmdlet.Rule_Enabled">
            <summary>
            <para>
            <para>If <code>true</code>, the receipt rule is active. The default value is <code>false</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESReceiptRuleCmdlet.Rule_Name">
            <summary>
            <para>
            <para>The name of the receipt rule. The name must:</para><ul><li><para>This value can only contain ASCII letters (a-z, A-Z), numbers (0-9), underscores (_),
            or dashes (-).</para></li><li><para>Start and end with a letter or number.</para></li><li><para>Contain less than 64 characters.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESReceiptRuleCmdlet.Rule_Recipient">
            <summary>
            <para>
            <para>The recipient domains and email addresses that the receipt rule applies to. If this
            field is not specified, this rule will match all recipients under all verified domains.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESReceiptRuleCmdlet.RuleSetName">
            <summary>
            <para>
            <para>The name of the receipt rule set that the receipt rule belongs to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESReceiptRuleCmdlet.Rule_ScanEnabled">
            <summary>
            <para>
            <para>If <code>true</code>, then messages that this receipt rule applies to are scanned
            for spam and viruses. The default value is <code>false</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESReceiptRuleCmdlet.Rule_TlsPolicy">
            <summary>
            <para>
            <para>Specifies whether Amazon SES should require that incoming email is delivered over
            a connection encrypted with Transport Layer Security (TLS). If this parameter is set
            to <code>Require</code>, Amazon SES will bounce emails that are not received over
            TLS. The default is <code>Optional</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESReceiptRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.UpdateReceiptRuleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESReceiptRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.UpdateSESTemplateCmdlet">
            <summary>
            Updates an email template. Email templates enable you to send personalized email to
            one or more destinations in a single API operation. For more information, see the
            <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon
            SES Developer Guide</a>.
            
             
            <para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESTemplateCmdlet.Template">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.UpdateTemplateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Template parameter.
            The -PassThru parameter is deprecated, use -Select '^Template' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.UpdateSESTemplateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.WriteSESConfigurationSetDeliveryOptionCmdlet">
            <summary>
            Adds or updates the delivery options for a configuration set.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.WriteSESConfigurationSetDeliveryOptionCmdlet.ConfigurationSetName">
            <summary>
            <para>
            <para>The name of the configuration set that you want to specify the delivery options for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.WriteSESConfigurationSetDeliveryOptionCmdlet.DeliveryOptions_TlsPolicy">
            <summary>
            <para>
            <para>Specifies whether messages that use the configuration set are required to use Transport
            Layer Security (TLS). If the value is <code>Require</code>, messages are only delivered
            if a TLS connection can be established. If the value is <code>Optional</code>, messages
            can be delivered in plain text if a TLS connection can't be established.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.WriteSESConfigurationSetDeliveryOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.PutConfigurationSetDeliveryOptionsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.WriteSESConfigurationSetDeliveryOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConfigurationSetName parameter.
            The -PassThru parameter is deprecated, use -Select '^ConfigurationSetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.WriteSESConfigurationSetDeliveryOptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SES.WriteSESIdentityPolicyCmdlet">
            <summary>
            Adds or updates a sending authorization policy for the specified identity (an email
            address or a domain).
            
             <note><para>
            This API is for the identity owner only. If you have not verified the identity, this
            API will return an error.
            </para></note><para>
            Sending authorization is a feature that enables an identity owner to authorize other
            senders to use its identities. For information about using sending authorization,
            see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para><para>
            You can execute this operation no more than once per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.WriteSESIdentityPolicyCmdlet.Identity">
            <summary>
            <para>
            <para>The identity that the policy will apply to. You can specify an identity by using its
            name or by using its Amazon Resource Name (ARN). Examples: <code>user@example.com</code>,
            <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</para><para>To successfully call this API, you must own the identity.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.WriteSESIdentityPolicyCmdlet.Policy">
            <summary>
            <para>
            <para>The text of the policy in JSON format. The policy cannot exceed 4 KB.</para><para>For information about the syntax of sending authorization policies, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-policies.html">Amazon
            SES Developer Guide</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.WriteSESIdentityPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The name of the policy.</para><para>The policy name cannot exceed 64 characters and can only include alphanumeric characters,
            dashes, and underscores.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.WriteSESIdentityPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SimpleEmail.Model.PutIdentityPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.WriteSESIdentityPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Policy parameter.
            The -PassThru parameter is deprecated, use -Select '^Policy' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SES.WriteSESIdentityPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
