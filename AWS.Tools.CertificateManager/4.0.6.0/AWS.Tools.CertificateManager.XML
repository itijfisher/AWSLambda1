<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.CertificateManager</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.ACM.AddACMCertificateTagCmdlet">
            <summary>
            Adds one or more tags to an ACM certificate. Tags are labels that you can use to identify
            and organize your AWS resources. Each tag consists of a <code>key</code> and an optional
            <code>value</code>. You specify the certificate on input by its Amazon Resource Name
            (ARN). You specify the tag by using a key-value pair. 
            
             
            <para>
            You can apply a tag to just one certificate if you want to identify a specific characteristic
            of that certificate, or you can apply the same tag to multiple certificates if you
            want to filter for a common relationship among those certificates. Similarly, you
            can apply the same tag to multiple resources if you want to specify a relationship
            among those resources. For example, you can add the same tag to an ACM certificate
            and an Elastic Load Balancing load balancer to indicate that they are both used by
            the same website. For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/tags.html">Tagging
            ACM certificates</a>. 
            </para><para>
            To remove one or more tags, use the <a>RemoveTagsFromCertificate</a> action. To view
            all of the tags that have been applied to the certificate, use the <a>ListTagsForCertificate</a>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.AddACMCertificateTagCmdlet.CertificateArn">
            <summary>
            <para>
            <para>String that contains the ARN of the ACM certificate to which the tag is to be applied.
            This must be of the form:</para><para><code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code></para><para>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.AddACMCertificateTagCmdlet.Tag">
            <summary>
            <para>
            <para>The key-value pair that defines the tag. The tag value is optional.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.AddACMCertificateTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CertificateManager.Model.AddTagsToCertificateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.AddACMCertificateTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.AddACMCertificateTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ACM.ExportACMCertificateCmdlet">
            <summary>
            Exports a private certificate issued by a private certificate authority (CA) for use
            anywhere. The exported file contains the certificate, the certificate chain, and the
            encrypted private 2048-bit RSA key associated with the public key that is embedded
            in the certificate. For security, you must assign a passphrase for the private key
            when exporting it. 
            
             
            <para>
            For information about exporting and formatting a certificate using the ACM console
            or CLI, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-export-private.html">Export
            a Private Certificate</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.ExportACMCertificateCmdlet.CertificateArn">
            <summary>
            <para>
            <para>An Amazon Resource Name (ARN) of the issued certificate. This must be of the form:</para><para><code>arn:aws:acm:region:account:certificate/12345678-1234-1234-1234-123456789012</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.ExportACMCertificateCmdlet.Passphrase">
            <summary>
            <para>
            <para>Passphrase to associate with the encrypted exported private key. If you want to later
            decrypt the private key, you must have the passphrase. You can use the following OpenSSL
            command to decrypt a private key: </para><para><code>openssl rsa -in encrypted_key.pem -out decrypted_key.pem</code></para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.ExportACMCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CertificateManager.Model.ExportCertificateResponse).
            Specifying the name of a property of type Amazon.CertificateManager.Model.ExportCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.ExportACMCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.ExportACMCertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateCmdlet">
            <summary>
            Retrieves an Amazon-issued certificate and its certificate chain. The chain consists
            of the certificate of the issuing CA and the intermediate certificates of any other
            subordinate CAs. All of the certificates are base64 encoded. You can use <a href="https://wiki.openssl.org/index.php/Command_Line_Utilities">OpenSSL</a>
            to decode the certificates and inspect individual fields.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateCmdlet.CertificateArn">
            <summary>
            <para>
            <para>String that contains a certificate ARN in the following format:</para><para><code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code></para><para>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CertificateManager.Model.GetCertificateResponse).
            Specifying the name of a property of type Amazon.CertificateManager.Model.GetCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateDetailCmdlet">
            <summary>
            Returns detailed metadata about the specified ACM certificate.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateDetailCmdlet.CertificateArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the ACM certificate. The ARN must have the following
            form:</para><para><code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code></para><para>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateDetailCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Certificate'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CertificateManager.Model.DescribeCertificateResponse).
            Specifying the name of a property of type Amazon.CertificateManager.Model.DescribeCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateDetailCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateListCmdlet">
            <summary>
            Retrieves a list of certificate ARNs and domain names. You can request that only certificates
            that match a specific status be listed. You can also filter by specific attributes
            of the certificate. Default filtering returns only <code>RSA_2048</code> certificates.
            For more information, see <a>Filters</a>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateListCmdlet.CertificateStatus">
            <summary>
            <para>
            <para>Filter the certificate list by status value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateListCmdlet.Includes_ExtendedKeyUsage">
            <summary>
            <para>
            <para>Specify one or more <a>ExtendedKeyUsage</a> extension values.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateListCmdlet.Includes_KeyType">
            <summary>
            <para>
            <para>Specify one or more algorithms that can be used to generate key pairs.</para><para>Default filtering returns only <code>RSA_2048</code> certificates. To return other
            certificate types, provide the desired type signatures in a comma-separated list.
            For example, <code>"keyTypes": ["RSA_2048,RSA_4096"]</code> returns both <code>RSA_2048</code>
            and <code>RSA_4096</code> certificates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateListCmdlet.Includes_KeyUsage">
            <summary>
            <para>
            <para>Specify one or more <a>KeyUsage</a> extension values.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateListCmdlet.MaxItem">
            <summary>
            <para>
            <para>Use this parameter when paginating results to specify the maximum number of items
            to return in the response. If additional items exist beyond the number you specify,
            the <code>NextToken</code> element is sent in the response. Use this <code>NextToken</code>
            value in a subsequent request to retrieve additional items.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateListCmdlet.NextToken">
            <summary>
            <para>
            <para>Use this parameter only when paginating results and only in a subsequent request after
            you receive a response with truncated results. Set it to the value of <code>NextToken</code>
            from the response you just received.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CertificateSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CertificateManager.Model.ListCertificatesResponse).
            Specifying the name of a property of type Amazon.CertificateManager.Model.ListCertificatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateTagListCmdlet">
            <summary>
            Lists the tags that have been applied to the ACM certificate. Use the certificate's
            Amazon Resource Name (ARN) to specify the certificate. To add a tag to an ACM certificate,
            use the <a>AddTagsToCertificate</a> action. To delete a tag, use the <a>RemoveTagsFromCertificate</a>
            action.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateTagListCmdlet.CertificateArn">
            <summary>
            <para>
            <para>String that contains the ARN of the ACM certificate for which you want to list the
            tags. This must have the following form:</para><para><code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code></para><para>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateTagListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CertificateManager.Model.ListTagsForCertificateResponse).
            Specifying the name of a property of type Amazon.CertificateManager.Model.ListTagsForCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.GetACMCertificateTagListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ACM.ImportACMCertificateCmdlet">
            <summary>
            Imports a certificate into AWS Certificate Manager (ACM) to use with services that
            are integrated with ACM. Note that <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-services.html">integrated
            services</a> allow only certificate types and keys they support to be associated with
            their resources. Further, their support differs depending on whether the certificate
            is imported into IAM or into ACM. For more information, see the documentation for
            each service. For more information about importing certificates into ACM, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html">Importing
            Certificates</a> in the <i>AWS Certificate Manager User Guide</i>. 
            
             <note><para>
            ACM does not provide <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed
            renewal</a> for certificates that you import.
            </para></note><para>
            Note the following guidelines when importing third party certificates:
            </para><ul><li><para>
            You must enter the private key that matches the certificate you are importing.
            </para></li><li><para>
            The private key must be unencrypted. You cannot import a private key that is protected
            by a password or a passphrase.
            </para></li><li><para>
            If the certificate you are importing is not self-signed, you must enter its certificate
            chain.
            </para></li><li><para>
            If a certificate chain is included, the issuer must be the subject of one of the certificates
            in the chain.
            </para></li><li><para>
            The certificate, private key, and certificate chain must be PEM-encoded.
            </para></li><li><para>
            The current time must be between the <code>Not Before</code> and <code>Not After</code>
            certificate fields.
            </para></li><li><para>
            The <code>Issuer</code> field must not be empty.
            </para></li><li><para>
            The OCSP authority URL, if present, must not exceed 1000 characters.
            </para></li><li><para>
            To import a new certificate, omit the <code>CertificateArn</code> argument. Include
            this argument only when you want to replace a previously imported certifica
            </para></li><li><para>
            When you import a certificate by using the CLI, you must specify the certificate,
            the certificate chain, and the private key by their file names preceded by <code>file://</code>.
            For example, you can specify a certificate saved in the <code>C:\temp</code> folder
            as <code>file://C:\temp\certificate_to_import.pem</code>. If you are making an HTTP
            or HTTPS Query request, include these arguments as BLOBs. 
            </para></li><li><para>
            When you import a certificate by using an SDK, you must specify the certificate, the
            certificate chain, and the private key files in the manner required by the programming
            language you're using. 
            </para></li><li><para>
            The cryptographic algorithm of an imported certificate must match the algorithm of
            the signing CA. For example, if the signing CA key type is RSA, then the certificate
            key type must also be RSA.
            </para></li></ul><para>
            This operation returns the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of the imported certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.ImportACMCertificateCmdlet.Certificate">
            <summary>
            <para>
            <para>The certificate to import.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.ImportACMCertificateCmdlet.CertificateArn">
            <summary>
            <para>
            <para>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of an imported certificate to replace. To import a new certificate,
            omit this field. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.ImportACMCertificateCmdlet.CertificateChain">
            <summary>
            <para>
            <para>The PEM encoded certificate chain.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.ImportACMCertificateCmdlet.PrivateKey">
            <summary>
            <para>
            <para>The private key that matches the public key in the certificate.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.ImportACMCertificateCmdlet.Tag">
            <summary>
            <para>
            <para>One or more resource tags to associate with the imported certificate. </para><para>Note: You cannot apply tags when reimporting a certificate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.ImportACMCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CertificateArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CertificateManager.Model.ImportCertificateResponse).
            Specifying the name of a property of type Amazon.CertificateManager.Model.ImportCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.ImportACMCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.ImportACMCertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ACM.InvokeACMCertificateRenewalCmdlet">
            <summary>
            Renews an eligable ACM certificate. At this time, only exported private certificates
            can be renewed with this operation. In order to renew your ACM PCA certificates with
            ACM, you must first <a href="https://docs.aws.amazon.com/acm-pca/latest/userguide/PcaPermissions.html">grant
            the ACM service principal permission to do so</a>. For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/manual-renewal.html">Testing
            Managed Renewal</a> in the ACM User Guide.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.InvokeACMCertificateRenewalCmdlet.CertificateArn">
            <summary>
            <para>
            <para>String that contains the ARN of the ACM certificate to be renewed. This must be of
            the form:</para><para><code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code></para><para>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.InvokeACMCertificateRenewalCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CertificateManager.Model.RenewCertificateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.InvokeACMCertificateRenewalCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.InvokeACMCertificateRenewalCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ACM.NewACMCertificateCmdlet">
            <summary>
            Requests an ACM certificate for use with other AWS services. To request an ACM certificate,
            you must specify a fully qualified domain name (FQDN) in the <code>DomainName</code>
            parameter. You can also specify additional FQDNs in the <code>SubjectAlternativeNames</code>
            parameter. 
            
             
            <para>
            If you are requesting a private certificate, domain validation is not required. If
            you are requesting a public certificate, each domain name that you specify must be
            validated to verify that you own or control the domain. You can use <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html">DNS
            validation</a> or <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-email.html">email
            validation</a>. We recommend that you use DNS validation. ACM issues public certificates
            after receiving approval from the domain owner. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.NewACMCertificateCmdlet.CertificateAuthorityArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the private certificate authority (CA) that will
            be used to issue the certificate. If you do not provide an ARN and you are trying
            to request a private certificate, ACM will attempt to issue a public certificate.
            For more information about private CAs, see the <a href="https://docs.aws.amazon.com/acm-pca/latest/userguide/PcaWelcome.html">AWS
            Certificate Manager Private Certificate Authority (PCA)</a> user guide. The ARN must
            have the following form: </para><para><code>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.NewACMCertificateCmdlet.Options_CertificateTransparencyLoggingPreference">
            <summary>
            <para>
            <para>You can opt out of certificate transparency logging by specifying the <code>DISABLED</code>
            option. Opt in by specifying <code>ENABLED</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.NewACMCertificateCmdlet.DomainName">
            <summary>
            <para>
            <para> Fully qualified domain name (FQDN), such as www.example.com, that you want to secure
            with an ACM certificate. Use an asterisk (*) to create a wildcard certificate that
            protects several sites in the same domain. For example, *.example.com protects www.example.com,
            site.example.com, and images.example.com. </para><para> The first domain name you enter cannot exceed 64 octets, including periods. Each
            subsequent Subject Alternative Name (SAN), however, can be up to 253 octets in length.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.NewACMCertificateCmdlet.DomainValidationOption">
            <summary>
            <para>
            <para>The domain name that you want ACM to use to send you emails so that you can validate
            domain ownership.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.NewACMCertificateCmdlet.IdempotencyToken">
            <summary>
            <para>
            <para>Customer chosen string that can be used to distinguish between calls to <code>RequestCertificate</code>.
            Idempotency tokens time out after one hour. Therefore, if you call <code>RequestCertificate</code>
            multiple times with the same idempotency token within one hour, ACM recognizes that
            you are requesting only one certificate and will issue only one. If you change the
            idempotency token for each call, ACM recognizes that you are requesting multiple certificates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.NewACMCertificateCmdlet.SubjectAlternativeName">
            <summary>
            <para>
            <para>Additional FQDNs to be included in the Subject Alternative Name extension of the ACM
            certificate. For example, add the name www.example.net to a certificate for which
            the <code>DomainName</code> field is www.example.com if users can reach your site
            by using either name. The maximum number of domain names that you can add to an ACM
            certificate is 100. However, the initial quota is 10 domain names. If you need more
            than 10 names, you must request a quota increase. For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html">Quotas</a>.</para><para> The maximum length of a SAN DNS name is 253 octets. The name is made up of multiple
            labels separated by periods. No label can be longer than 63 octets. Consider the following
            examples: </para><ul><li><para><code>(63 octets).(63 octets).(63 octets).(61 octets)</code> is legal because the
            total length is 253 octets (63+1+63+1+63+1+61) and no label exceeds 63 octets.</para></li><li><para><code>(64 octets).(63 octets).(63 octets).(61 octets)</code> is not legal because
            the total length exceeds 253 octets (64+1+63+1+63+1+61) and the first label exceeds
            63 octets.</para></li><li><para><code>(63 octets).(63 octets).(63 octets).(62 octets)</code> is not legal because
            the total length of the DNS name (63+1+63+1+63+1+62) exceeds 253 octets.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.NewACMCertificateCmdlet.Tag">
            <summary>
            <para>
            <para>One or more resource tags to associate with the certificate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.NewACMCertificateCmdlet.ValidationMethod">
            <summary>
            <para>
            <para>The method you want to use if you are requesting a public certificate to validate
            that you own or control domain. You can <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html">validate
            with DNS</a> or <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-email.html">validate
            with email</a>. We recommend that you use DNS validation. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.NewACMCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CertificateArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CertificateManager.Model.RequestCertificateResponse).
            Specifying the name of a property of type Amazon.CertificateManager.Model.RequestCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.NewACMCertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ACM.RemoveACMCertificateCmdlet">
            <summary>
            Deletes a certificate and its associated private key. If this action succeeds, the
            certificate no longer appears in the list that can be displayed by calling the <a>ListCertificates</a>
            action or be retrieved by calling the <a>GetCertificate</a> action. The certificate
            will not be available for use by AWS services integrated with ACM. 
            
             <note><para>
            You cannot delete an ACM certificate that is being used by another AWS service. To
            delete a certificate that is in use, the certificate association must first be removed.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.RemoveACMCertificateCmdlet.CertificateArn">
            <summary>
            <para>
            <para>String that contains the ARN of the ACM certificate to be deleted. This must be of
            the form:</para><para><code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code></para><para>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.RemoveACMCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CertificateManager.Model.DeleteCertificateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.RemoveACMCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.RemoveACMCertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ACM.RemoveACMCertificateTagCmdlet">
            <summary>
            Remove one or more tags from an ACM certificate. A tag consists of a key-value pair.
            If you do not specify the value portion of the tag when calling this function, the
            tag will be removed regardless of value. If you specify a value, the tag is removed
            only if it is associated with the specified value. 
            
             
            <para>
            To add tags to a certificate, use the <a>AddTagsToCertificate</a> action. To view
            all of the tags that have been applied to a specific ACM certificate, use the <a>ListTagsForCertificate</a>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.RemoveACMCertificateTagCmdlet.CertificateArn">
            <summary>
            <para>
            <para>String that contains the ARN of the ACM Certificate with one or more tags that you
            want to remove. This must be of the form:</para><para><code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code></para><para>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.RemoveACMCertificateTagCmdlet.Tag">
            <summary>
            <para>
            <para>The key-value pair that defines the tag to remove.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.RemoveACMCertificateTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CertificateManager.Model.RemoveTagsFromCertificateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.RemoveACMCertificateTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.RemoveACMCertificateTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ACM.SendACMValidationEmailCmdlet">
            <summary>
            Resends the email that requests domain ownership validation. The domain owner or an
            authorized representative must approve the ACM certificate before it can be issued.
            The certificate can be approved by clicking a link in the mail to navigate to the
            Amazon certificate approval website and then clicking <b>I Approve</b>. However, the
            validation email can be blocked by spam filters. Therefore, if you do not receive
            the original mail, you can request that the mail be resent within 72 hours of requesting
            the ACM certificate. If more than 72 hours have elapsed since your original request
            or since your last attempt to resend validation mail, you must request a new certificate.
            For more information about setting up your contact email addresses, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/setup-email.html">Configure
            Email for your Domain</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.SendACMValidationEmailCmdlet.CertificateArn">
            <summary>
            <para>
            <para>String that contains the ARN of the requested certificate. The certificate ARN is
            generated and returned by the <a>RequestCertificate</a> action as soon as the request
            is made. By default, using this parameter causes email to be sent to all top-level
            domains you specified in the certificate request. The ARN must be of the form: </para><para><code>arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.SendACMValidationEmailCmdlet.Domain">
            <summary>
            <para>
            <para>The fully qualified domain name (FQDN) of the certificate that needs to be validated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.SendACMValidationEmailCmdlet.ValidationDomain">
            <summary>
            <para>
            <para>The base validation domain that will act as the suffix of the email addresses that
            are used to send the emails. This must be the same as the <code>Domain</code> value
            or a superdomain of the <code>Domain</code> value. For example, if you requested a
            certificate for <code>site.subdomain.example.com</code> and specify a <b>ValidationDomain</b>
            of <code>subdomain.example.com</code>, ACM sends email to the domain registrant, technical
            contact, and administrative contact in WHOIS and the following five addresses:</para><ul><li><para>admin@subdomain.example.com</para></li><li><para>administrator@subdomain.example.com</para></li><li><para>hostmaster@subdomain.example.com</para></li><li><para>postmaster@subdomain.example.com</para></li><li><para>webmaster@subdomain.example.com</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.SendACMValidationEmailCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CertificateManager.Model.ResendValidationEmailResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.SendACMValidationEmailCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.SendACMValidationEmailCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ACM.UpdateACMCertificateOptionCmdlet">
            <summary>
            Updates a certificate. Currently, you can use this function to specify whether to
            opt in to or out of recording your certificate in a certificate transparency log.
            For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-bestpractices.html#best-practices-transparency">
            Opting Out of Certificate Transparency Logging</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.UpdateACMCertificateOptionCmdlet.CertificateArn">
            <summary>
            <para>
            <para>ARN of the requested certificate to update. This must be of the form:</para><para><code>arn:aws:acm:us-east-1:<i>account</i>:certificate/<i>12345678-1234-1234-1234-123456789012</i></code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.UpdateACMCertificateOptionCmdlet.Options_CertificateTransparencyLoggingPreference">
            <summary>
            <para>
            <para>You can opt out of certificate transparency logging by specifying the <code>DISABLED</code>
            option. Opt in by specifying <code>ENABLED</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.UpdateACMCertificateOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CertificateManager.Model.UpdateCertificateOptionsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.UpdateACMCertificateOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ACM.UpdateACMCertificateOptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
