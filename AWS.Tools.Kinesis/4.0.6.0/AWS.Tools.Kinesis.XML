<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.Kinesis</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.WriteKINRecordCmdlet">
            <summary>
            Writes a single data record into an Amazon Kinesis data stream. Call <code>PutRecord</code>
            to send data into the stream for real-time ingestion and subsequent processing, one
            record at a time. Each shard can support writes up to 1,000 records per second, up
            to a maximum data write total of 1 MB per second.
            
             
            <para>
            You must specify the name of the stream that captures, stores, and transports the
            data; a partition key; and the data blob itself.
            </para><para>
            The data blob can be any type of data; for example, a segment from a log file, geographic/location
            data, website clickstream data, and so on.
            </para><para>
            The partition key is used by Kinesis Data Streams to distribute data across shards.
            Kinesis Data Streams segregates the data records that belong to a stream into multiple
            shards, using the partition key associated with each data record to determine the
            shard to which a given data record belongs.
            </para><para>
            Partition keys are Unicode strings, with a maximum length limit of 256 characters
            for each key. An MD5 hash function is used to map partition keys to 128-bit integer
            values and to map associated data records to shards using the hash key ranges of the
            shards. You can override hashing the partition key to determine the shard by explicitly
            specifying a hash value using the <code>ExplicitHashKey</code> parameter. For more
            information, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream">Adding
            Data to a Stream</a> in the <i>Amazon Kinesis Data Streams Developer Guide</i>.
            </para><para><code>PutRecord</code> returns the shard ID of where the data record was placed and
            the sequence number that was assigned to the data record.
            </para><para>
            Sequence numbers increase over time and are specific to a shard within a stream, not
            across all shards within a stream. To guarantee strictly increasing ordering, write
            serially to a shard and use the <code>SequenceNumberForOrdering</code> parameter.
            For more information, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream">Adding
            Data to a Stream</a> in the <i>Amazon Kinesis Data Streams Developer Guide</i>.
            </para><para>
            If a <code>PutRecord</code> request cannot be processed because of insufficient provisioned
            throughput on the shard involved in the request, <code>PutRecord</code> throws <code>ProvisionedThroughputExceededException</code>.
            
            </para><para>
            By default, data records are accessible for 24 hours from the time that they are added
            to a stream. You can use <a>IncreaseStreamRetentionPeriod</a> or <a>DecreaseStreamRetentionPeriod</a>
            to modify this retention period.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.WriteKINRecordCmdlet.Text">
            <summary>
            This parameter is obsolete and will be removed in a future version. Use 'Record_Data' instead.
            Text string containing the data to send, which is base64-encoded when the 
            blob is serialized. When the data blob (the payload before base64-encoding) is added to 
            the partition key size, the total size must not exceed the maximum record size (1 MB).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.WriteKINRecordCmdlet.FilePath">
            <summary>
            This parameter is obsolete and will be removed in a future version. Use 'Record_Data' instead.
            The fully qualified name to a file containing the data to send, which is base64-encoded 
            when the blob is serialized. When the data blob (the payload before base64-encoding) is 
            added to the partition key size, the total size must not exceed the maximum record size (1 MB).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.WriteKINRecordCmdlet.Data">
            <summary>
            <para>
            <para>The data blob to put into the record, which is base64-encoded when the blob is serialized.
            When the data blob (the payload before base64-encoding) is added to the partition
            key size, the total size must not exceed the maximum record size (1 MB).</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.WriteKINRecordCmdlet.ExplicitHashKey">
            <summary>
            <para>
            <para>The hash value used to explicitly determine the shard the data record is assigned
            to by overriding the partition key hash.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.WriteKINRecordCmdlet.PartitionKey">
            <summary>
            <para>
            <para>Determines which shard in the stream the data record is assigned to. Partition keys
            are Unicode strings with a maximum length limit of 256 characters for each key. Amazon
            Kinesis Data Streams uses the partition key as input to a hash function that maps
            the partition key and associated data to a specific shard. Specifically, an MD5 hash
            function is used to map partition keys to 128-bit integer values and to map associated
            data records to shards. As a result of this hashing mechanism, all data records with
            the same partition key map to the same shard within the stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.WriteKINRecordCmdlet.SequenceNumberForOrdering">
            <summary>
            <para>
            <para>Guarantees strictly increasing sequence numbers, for puts from the same client and
            to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of
            record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result
            when putting record <i>n-1</i>). If this parameter is not set, records are coarsely
            ordered based on arrival time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.WriteKINRecordCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream to put the data record into.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.WriteKINRecordCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.PutRecordResponse).
            Specifying the name of a property of type Amazon.Kinesis.Model.PutRecordResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.WriteKINRecordCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.WriteKINRecordCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.AddKINTagsToStreamCmdlet">
            <summary>
            Adds or updates tags for the specified Kinesis data stream. Each time you invoke this
            operation, you can specify up to 10 tags. If you want to add more than 10 tags to
            your stream, you can invoke this operation multiple times. In total, each stream can
            have up to 50 tags.
            
             
            <para>
            If tags have already been assigned to the stream, <code>AddTagsToStream</code> overwrites
            any existing tags that correspond to the specified tag keys.
            </para><para><a>AddTagsToStream</a> has a limit of five transactions per second per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.AddKINTagsToStreamCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.AddKINTagsToStreamCmdlet.Tag">
            <summary>
            <para>
            <para>A set of up to 10 key-value pairs to use to create the tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.AddKINTagsToStreamCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.AddTagsToStreamResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.AddKINTagsToStreamCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.AddKINTagsToStreamCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.DisableKINEnhancedMonitoringCmdlet">
            <summary>
            Disables enhanced monitoring.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.DisableKINEnhancedMonitoringCmdlet.ShardLevelMetric">
            <summary>
            <para>
            <para>List of shard-level metrics to disable.</para><para>The following are the valid shard-level metrics. The value "<code>ALL</code>" disables
            every metric.</para><ul><li><para><code>IncomingBytes</code></para></li><li><para><code>IncomingRecords</code></para></li><li><para><code>OutgoingBytes</code></para></li><li><para><code>OutgoingRecords</code></para></li><li><para><code>WriteProvisionedThroughputExceeded</code></para></li><li><para><code>ReadProvisionedThroughputExceeded</code></para></li><li><para><code>IteratorAgeMilliseconds</code></para></li><li><para><code>ALL</code></para></li></ul><para>For more information, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/monitoring-with-cloudwatch.html">Monitoring
            the Amazon Kinesis Data Streams Service with Amazon CloudWatch</a> in the <i>Amazon
            Kinesis Data Streams Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.DisableKINEnhancedMonitoringCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the Kinesis data stream for which to disable enhanced monitoring.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.DisableKINEnhancedMonitoringCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.DisableEnhancedMonitoringResponse).
            Specifying the name of a property of type Amazon.Kinesis.Model.DisableEnhancedMonitoringResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.DisableKINEnhancedMonitoringCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.DisableKINEnhancedMonitoringCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.EnableKINEnhancedMonitoringCmdlet">
            <summary>
            Enables enhanced Kinesis data stream monitoring for shard-level metrics.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.EnableKINEnhancedMonitoringCmdlet.ShardLevelMetric">
            <summary>
            <para>
            <para>List of shard-level metrics to enable.</para><para>The following are the valid shard-level metrics. The value "<code>ALL</code>" enables
            every metric.</para><ul><li><para><code>IncomingBytes</code></para></li><li><para><code>IncomingRecords</code></para></li><li><para><code>OutgoingBytes</code></para></li><li><para><code>OutgoingRecords</code></para></li><li><para><code>WriteProvisionedThroughputExceeded</code></para></li><li><para><code>ReadProvisionedThroughputExceeded</code></para></li><li><para><code>IteratorAgeMilliseconds</code></para></li><li><para><code>ALL</code></para></li></ul><para>For more information, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/monitoring-with-cloudwatch.html">Monitoring
            the Amazon Kinesis Data Streams Service with Amazon CloudWatch</a> in the <i>Amazon
            Kinesis Data Streams Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.EnableKINEnhancedMonitoringCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream for which to enable enhanced monitoring.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.EnableKINEnhancedMonitoringCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.EnableEnhancedMonitoringResponse).
            Specifying the name of a property of type Amazon.Kinesis.Model.EnableEnhancedMonitoringResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.EnableKINEnhancedMonitoringCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.EnableKINEnhancedMonitoringCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.GetKINLimitCmdlet">
            <summary>
            Describes the shard limits and usage for the account.
            
             
            <para>
            If you update your account limits, the old limits might be returned for a few minutes.
            </para><para>
            This operation has a limit of one transaction per second per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINLimitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.DescribeLimitsResponse).
            Specifying the name of a property of type Amazon.Kinesis.Model.DescribeLimitsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.GetKINRecordCmdlet">
            <summary>
            Gets data records from a Kinesis data stream's shard.
            
             
            <para>
            Specify a shard iterator using the <code>ShardIterator</code> parameter. The shard
            iterator specifies the position in the shard from which you want to start reading
            data records sequentially. If there are no records available in the portion of the
            shard that the iterator points to, <a>GetRecords</a> returns an empty list. It might
            take multiple calls to get to a portion of the shard that contains records.
            </para><para>
            You can scale by provisioning multiple shards per stream while considering service
            limits (for more information, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html">Amazon
            Kinesis Data Streams Limits</a> in the <i>Amazon Kinesis Data Streams Developer Guide</i>).
            Your application should have one thread per shard, each reading continuously from
            its stream. To read from a stream continually, call <a>GetRecords</a> in a loop. Use
            <a>GetShardIterator</a> to get the shard iterator to specify in the first <a>GetRecords</a>
            call. <a>GetRecords</a> returns a new shard iterator in <code>NextShardIterator</code>.
            Specify the shard iterator returned in <code>NextShardIterator</code> in subsequent
            calls to <a>GetRecords</a>. If the shard has been closed, the shard iterator can't
            return more data and <a>GetRecords</a> returns <code>null</code> in <code>NextShardIterator</code>.
            You can terminate the loop when the shard is closed, or when the shard iterator reaches
            the record with the sequence number or other attribute that marks it as the last record
            to process.
            </para><para>
            Each data record can be up to 1 MiB in size, and each shard can read up to 2 MiB per
            second. You can ensure that your calls don't exceed the maximum supported size or
            throughput by using the <code>Limit</code> parameter to specify the maximum number
            of records that <a>GetRecords</a> can return. Consider your average record size when
            determining this limit. The maximum number of records that can be returned per call
            is 10,000.
            </para><para>
            The size of the data returned by <a>GetRecords</a> varies depending on the utilization
            of the shard. The maximum size of data that <a>GetRecords</a> can return is 10 MiB.
            If a call returns this amount of data, subsequent calls made within the next 5 seconds
            throw <code>ProvisionedThroughputExceededException</code>. If there is insufficient
            provisioned throughput on the stream, subsequent calls made within the next 1 second
            throw <code>ProvisionedThroughputExceededException</code>. <a>GetRecords</a> doesn't
            return any data when it throws an exception. For this reason, we recommend that you
            wait 1 second between calls to <a>GetRecords</a>. However, it's possible that the
            application will get exceptions for longer than 1 second.
            </para><para>
            To detect whether the application is falling behind in processing, you can use the
            <code>MillisBehindLatest</code> response attribute. You can also monitor the stream
            using CloudWatch metrics and other mechanisms (see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/monitoring.html">Monitoring</a>
            in the <i>Amazon Kinesis Data Streams Developer Guide</i>).
            </para><para>
            Each Amazon Kinesis record includes a value, <code>ApproximateArrivalTimestamp</code>,
            that is set when a stream successfully receives and stores a record. This is commonly
            referred to as a server-side time stamp, whereas a client-side time stamp is set when
            a data producer creates or sends the record to a stream (a data producer is any data
            source putting data records into a stream, for example with <a>PutRecords</a>). The
            time stamp has millisecond precision. There are no guarantees about the time stamp
            accuracy, or that the time stamp is always increasing. For example, records in a shard
            or across a stream might have time stamps that are out of order.
            </para><para>
            This operation has a limit of five transactions per second per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINRecordCmdlet.ShardIterator">
            <summary>
            <para>
            <para>The position in the shard from which you want to start sequentially reading data records.
            A shard iterator specifies this position using the sequence number of a data record
            in the shard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINRecordCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of records to return. Specify a value of up to 10,000. If you specify
            a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINRecordCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.GetRecordsResponse).
            Specifying the name of a property of type Amazon.Kinesis.Model.GetRecordsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINRecordCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ShardIterator parameter.
            The -PassThru parameter is deprecated, use -Select '^ShardIterator' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.GetKINShardIteratorCmdlet">
            <summary>
            Gets an Amazon Kinesis shard iterator. A shard iterator expires 5 minutes after it
            is returned to the requester.
            
             
            <para>
            A shard iterator specifies the shard position from which to start reading data records
            sequentially. The position is specified using the sequence number of a data record
            in a shard. A sequence number is the identifier associated with every record ingested
            in the stream, and is assigned when a record is put into the stream. Each stream has
            one or more shards.
            </para><para>
            You must specify the shard iterator type. For example, you can set the <code>ShardIteratorType</code>
            parameter to read exactly from the position denoted by a specific sequence number
            by using the <code>AT_SEQUENCE_NUMBER</code> shard iterator type. Alternatively, the
            parameter can read right after the sequence number by using the <code>AFTER_SEQUENCE_NUMBER</code>
            shard iterator type, using sequence numbers returned by earlier calls to <a>PutRecord</a>,
            <a>PutRecords</a>, <a>GetRecords</a>, or <a>DescribeStream</a>. In the request, you
            can specify the shard iterator type <code>AT_TIMESTAMP</code> to read records from
            an arbitrary point in time, <code>TRIM_HORIZON</code> to cause <code>ShardIterator</code>
            to point to the last untrimmed record in the shard in the system (the oldest data
            record in the shard), or <code>LATEST</code> so that you always read the most recent
            data in the shard. 
            </para><para>
            When you read repeatedly from a stream, use a <a>GetShardIterator</a> request to get
            the first shard iterator for use in your first <a>GetRecords</a> request and for subsequent
            reads use the shard iterator returned by the <a>GetRecords</a> request in <code>NextShardIterator</code>.
            A new shard iterator is returned by every <a>GetRecords</a> request in <code>NextShardIterator</code>,
            which you use in the <code>ShardIterator</code> parameter of the next <a>GetRecords</a>
            request. 
            </para><para>
            If a <a>GetShardIterator</a> request is made too often, you receive a <code>ProvisionedThroughputExceededException</code>.
            For more information about throughput limits, see <a>GetRecords</a>, and <a href="http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html">Streams
            Limits</a> in the <i>Amazon Kinesis Data Streams Developer Guide</i>.
            </para><para>
            If the shard is closed, <a>GetShardIterator</a> returns a valid iterator for the last
            sequence number of the shard. A shard can be closed as a result of using <a>SplitShard</a>
            or <a>MergeShards</a>.
            </para><para><a>GetShardIterator</a> has a limit of five transactions per second per account per
            open shard.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINShardIteratorCmdlet.ShardId">
            <summary>
            <para>
            <para>The shard ID of the Kinesis Data Streams shard to get the iterator for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINShardIteratorCmdlet.ShardIteratorType">
            <summary>
            <para>
            <para>Determines how the shard iterator is used to start reading data records from the shard.</para><para>The following are the valid Amazon Kinesis shard iterator types:</para><ul><li><para>AT_SEQUENCE_NUMBER - Start reading from the position denoted by a specific sequence
            number, provided in the value <code>StartingSequenceNumber</code>.</para></li><li><para>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific
            sequence number, provided in the value <code>StartingSequenceNumber</code>.</para></li><li><para>AT_TIMESTAMP - Start reading from the position denoted by a specific time stamp, provided
            in the value <code>Timestamp</code>.</para></li><li><para>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system,
            which is the oldest data record in the shard.</para></li><li><para>LATEST - Start reading just after the most recent record in the shard, so that you
            always read the most recent data in the shard.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINShardIteratorCmdlet.StartingSequenceNumber">
            <summary>
            <para>
            <para>The sequence number of the data record in the shard from which to start reading. Used
            with shard iterator type AT_SEQUENCE_NUMBER and AFTER_SEQUENCE_NUMBER.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINShardIteratorCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the Amazon Kinesis data stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINShardIteratorCmdlet.Timestamp">
            <summary>
            <para>
            <para>The time stamp of the data record from which to start reading. Used with shard iterator
            type AT_TIMESTAMP. A time stamp is the Unix epoch date with precision in milliseconds.
            For example, <code>2016-04-04T19:58:46.480-00:00</code> or <code>1459799926.480</code>.
            If a record with this exact time stamp does not exist, the iterator returned is for
            the next (later) record. If the time stamp is older than the current trim horizon,
            the iterator returned is for the oldest untrimmed data record (TRIM_HORIZON).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINShardIteratorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ShardIterator'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.GetShardIteratorResponse).
            Specifying the name of a property of type Amazon.Kinesis.Model.GetShardIteratorResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINShardIteratorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ShardId parameter.
            The -PassThru parameter is deprecated, use -Select '^ShardId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.GetKINShardListCmdlet">
            <summary>
            Lists the shards in a stream and provides information about each shard. This operation
            has a limit of 100 transactions per second per data stream.
            
             <important><para>
            This API is a new operation that is used by the Amazon Kinesis Client Library (KCL).
            If you have a fine-grained IAM policy that only allows specific operations, you must
            update your policy to allow calls to this API. For more information, see <a href="https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html">Controlling
            Access to Amazon Kinesis Data Streams Resources Using IAM</a>.
            </para></important><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINShardListCmdlet.ExclusiveStartShardId">
            <summary>
            <para>
            <para>Specify this parameter to indicate that you want to list the shards starting with
            the shard whose ID immediately follows <code>ExclusiveStartShardId</code>.</para><para>If you don't specify this parameter, the default behavior is for <code>ListShards</code>
            to list the shards starting with the first one in the stream.</para><para>You cannot specify this parameter if you specify <code>NextToken</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINShardListCmdlet.StreamCreationTimestamp">
            <summary>
            <para>
            <para>Specify this input parameter to distinguish data streams that have the same name.
            For example, if you create a data stream and then delete it, and you later create
            another data stream with the same name, you can use this input parameter to specify
            which of the two streams you want to list the shards for.</para><para>You cannot specify this parameter if you specify the <code>NextToken</code> parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINShardListCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the data stream whose shards you want to list. </para><para>You cannot specify this parameter if you specify the <code>NextToken</code> parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINShardListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of shards to return in a single call to <code>ListShards</code>.
            The minimum value you can specify for this parameter is 1, and the maximum is 1,000,
            which is also the default.</para><para>When the number of shards to be listed is greater than the value of <code>MaxResults</code>,
            the response contains a <code>NextToken</code> value that you can use in a subsequent
            call to <code>ListShards</code> to list the next set of shards.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINShardListCmdlet.NextToken">
            <summary>
            <para>
            <para>When the number of shards in the data stream is greater than the default value for
            the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code>
            that is less than the number of shards in the data stream, the response includes a
            pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code>
            value in a subsequent call to <code>ListShards</code> to list the next set of shards.</para><para>Don't specify <code>StreamName</code> or <code>StreamCreationTimestamp</code> if you
            specify <code>NextToken</code> because the latter unambiguously identifies the stream.</para><para>You can optionally specify a value for the <code>MaxResults</code> parameter when
            you specify <code>NextToken</code>. If you specify a <code>MaxResults</code> value
            that is less than the number of shards that the operation returns if you don't specify
            <code>MaxResults</code>, the response will contain a new <code>NextToken</code> value.
            You can use the new <code>NextToken</code> value in a subsequent call to the <code>ListShards</code>
            operation.</para><important><para>Tokens expire after 300 seconds. When you obtain a value for <code>NextToken</code>
            in the response to a call to <code>ListShards</code>, you have 300 seconds to use
            that value. If you specify an expired token in a call to <code>ListShards</code>,
            you get <code>ExpiredNextTokenException</code>.</para></important>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINShardListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Shards'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.ListShardsResponse).
            Specifying the name of a property of type Amazon.Kinesis.Model.ListShardsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINShardListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINShardListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamCmdlet">
            <summary>
            Describes the specified Kinesis data stream.
            
             
            <para>
            The information returned includes the stream name, Amazon Resource Name (ARN), creation
            time, enhanced metric configuration, and shard map. The shard map is an array of shard
            objects. For each shard object, there is the hash key and sequence number ranges that
            the shard spans, and the IDs of any earlier shards that played in a role in creating
            the shard. Every record ingested in the stream is identified by a sequence number,
            which is assigned when the record is put into the stream.
            </para><para>
            You can limit the number of shards returned by each call. For more information, see
            <a href="http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-retrieve-shards.html">Retrieving
            Shards from a Stream</a> in the <i>Amazon Kinesis Data Streams Developer Guide</i>.
            </para><para>
            There are no guarantees about the chronological order shards returned. To process
            shards in chronological order, use the ID of the parent shard to track the lineage
            to the oldest shard.
            </para><para>
            This operation has a limit of 10 transactions per second per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamCmdlet.ExclusiveStartShardId">
            <summary>
            <para>
            <para>The shard ID of the shard to start with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of shards to return in a single call. The default value is 100.
            If you specify a value greater than 100, at most 100 shards are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StreamDescription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.DescribeStreamResponse).
            Specifying the name of a property of type Amazon.Kinesis.Model.DescribeStreamResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamConsumerCmdlet">
            <summary>
            To get the description of a registered consumer, provide the ARN of the consumer.
            Alternatively, you can provide the ARN of the data stream and the name you gave the
            consumer when you registered it. You may also provide all three parameters, as long
            as they don't conflict with each other. If you don't know the name or ARN of the consumer
            that you want to describe, you can use the <a>ListStreamConsumers</a> operation to
            get a list of the descriptions of all the consumers that are currently registered
            with a given data stream.
            
             
            <para>
            This operation has a limit of 20 transactions per second per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamConsumerCmdlet.ConsumerARN">
            <summary>
            <para>
            <para>The ARN returned by Kinesis Data Streams when you registered the consumer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamConsumerCmdlet.ConsumerName">
            <summary>
            <para>
            <para>The name that you gave to the consumer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamConsumerCmdlet.StreamARN">
            <summary>
            <para>
            <para>The ARN of the Kinesis data stream that the consumer is registered with. For more
            information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kinesis-streams">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamConsumerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ConsumerDescription'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.DescribeStreamConsumerResponse).
            Specifying the name of a property of type Amazon.Kinesis.Model.DescribeStreamConsumerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamConsumerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConsumerARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ConsumerARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamConsumerListCmdlet">
            <summary>
            Lists the consumers registered to receive data from a stream using enhanced fan-out,
            and provides information about each consumer.
            
             
            <para>
            This operation has a limit of 10 transactions per second per account.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamConsumerListCmdlet.StreamARN">
            <summary>
            <para>
            <para>The ARN of the Kinesis data stream for which you want to list the registered consumers.
            For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kinesis-streams">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamConsumerListCmdlet.StreamCreationTimestamp">
            <summary>
            <para>
            <para>Specify this input parameter to distinguish data streams that have the same name.
            For example, if you create a data stream and then delete it, and you later create
            another data stream with the same name, you can use this input parameter to specify
            which of the two streams you want to list the consumers for. </para><para>You can't specify this parameter if you specify the NextToken parameter. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamConsumerListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of consumers that you want a single call of <code>ListStreamConsumers</code>
            to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamConsumerListCmdlet.NextToken">
            <summary>
            <para>
            <para>When the number of consumers that are registered with the data stream is greater than
            the default value for the <code>MaxResults</code> parameter, or if you explicitly
            specify a value for <code>MaxResults</code> that is less than the number of consumers
            that are registered with the data stream, the response includes a pagination token
            named <code>NextToken</code>. You can specify this <code>NextToken</code> value in
            a subsequent call to <code>ListStreamConsumers</code> to list the next set of registered
            consumers.</para><para>Don't specify <code>StreamName</code> or <code>StreamCreationTimestamp</code> if you
            specify <code>NextToken</code> because the latter unambiguously identifies the stream.</para><para>You can optionally specify a value for the <code>MaxResults</code> parameter when
            you specify <code>NextToken</code>. If you specify a <code>MaxResults</code> value
            that is less than the number of consumers that the operation returns if you don't
            specify <code>MaxResults</code>, the response will contain a new <code>NextToken</code>
            value. You can use the new <code>NextToken</code> value in a subsequent call to the
            <code>ListStreamConsumers</code> operation to list the next set of consumers.</para><important><para>Tokens expire after 300 seconds. When you obtain a value for <code>NextToken</code>
            in the response to a call to <code>ListStreamConsumers</code>, you have 300 seconds
            to use that value. If you specify an expired token in a call to <code>ListStreamConsumers</code>,
            you get <code>ExpiredNextTokenException</code>.</para></important>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamConsumerListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Consumers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.ListStreamConsumersResponse).
            Specifying the name of a property of type Amazon.Kinesis.Model.ListStreamConsumersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamConsumerListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamARN parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamConsumerListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamListCmdlet">
            <summary>
            Lists your Kinesis data streams.
            
             
            <para>
            The number of streams may be too large to return from a single call to <code>ListStreams</code>.
            You can limit the number of returned streams using the <code>Limit</code> parameter.
            If you do not specify a value for the <code>Limit</code> parameter, Kinesis Data Streams
            uses the default limit, which is currently 10.
            </para><para>
            You can detect if there are more streams available to list by using the <code>HasMoreStreams</code>
            flag from the returned output. If there are more streams available, you can request
            more streams by using the name of the last stream returned by the <code>ListStreams</code>
            request in the <code>ExclusiveStartStreamName</code> parameter in a subsequent request
            to <code>ListStreams</code>. The group of stream names returned by the subsequent
            request is then added to the list. You can continue this process until all the stream
            names have been collected in the list. 
            </para><para><a>ListStreams</a> has a limit of five transactions per second per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamListCmdlet.ExclusiveStartStreamName">
            <summary>
            <para>
            <para>The name of the stream to start the list with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamListCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of streams to list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.ListStreamsResponse).
            Specifying the name of a property of type Amazon.Kinesis.Model.ListStreamsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExclusiveStartStreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^ExclusiveStartStreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamSummaryCmdlet">
            <summary>
            Provides a summarized description of the specified Kinesis data stream without the
            shard list.
            
             
            <para>
            The information returned includes the stream name, Amazon Resource Name (ARN), status,
            record retention period, approximate creation time, monitoring, encryption details,
            and open shard count. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamSummaryCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamSummaryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StreamDescriptionSummary'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.DescribeStreamSummaryResponse).
            Specifying the name of a property of type Amazon.Kinesis.Model.DescribeStreamSummaryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINStreamSummaryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.GetKINTagsForStreamCmdlet">
            <summary>
            Lists the tags for the specified Kinesis data stream. This operation has a limit of
            five transactions per second per account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINTagsForStreamCmdlet.ExclusiveStartTagKey">
            <summary>
            <para>
            <para>The key to use as the starting point for the list of tags. If this parameter is set,
            <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINTagsForStreamCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINTagsForStreamCmdlet.Limit">
            <summary>
            <para>
            <para>The number of tags to return. If this number is less than the total number of tags
            associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>.
            To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in
            the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINTagsForStreamCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.ListTagsForStreamResponse).
            Specifying the name of a property of type Amazon.Kinesis.Model.ListTagsForStreamResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.GetKINTagsForStreamCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.MergeKINShardCmdlet">
            <summary>
            Merges two adjacent shards in a Kinesis data stream and combines them into a single
            shard to reduce the stream's capacity to ingest and transport data. Two shards are
            considered adjacent if the union of the hash key ranges for the two shards form a
            contiguous set with no gaps. For example, if you have two shards, one with a hash
            key range of 276...381 and the other with a hash key range of 382...454, then you
            could merge these two shards into a single shard that would have a hash key range
            of 276...454. After the merge, the single child shard receives data for all hash key
            values covered by the two parent shards.
            
             
            <para><code>MergeShards</code> is called when there is a need to reduce the overall capacity
            of a stream because of excess capacity that is not being used. You must specify the
            shard to be merged and the adjacent shard for a stream. For more information about
            merging shards, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-resharding-merge.html">Merge
            Two Shards</a> in the <i>Amazon Kinesis Data Streams Developer Guide</i>.
            </para><para>
            If the stream is in the <code>ACTIVE</code> state, you can call <code>MergeShards</code>.
            If a stream is in the <code>CREATING</code>, <code>UPDATING</code>, or <code>DELETING</code>
            state, <code>MergeShards</code> returns a <code>ResourceInUseException</code>. If
            the specified stream does not exist, <code>MergeShards</code> returns a <code>ResourceNotFoundException</code>.
            
            </para><para>
            You can use <a>DescribeStream</a> to check the state of the stream, which is returned
            in <code>StreamStatus</code>.
            </para><para><code>MergeShards</code> is an asynchronous operation. Upon receiving a <code>MergeShards</code>
            request, Amazon Kinesis Data Streams immediately returns a response and sets the <code>StreamStatus</code>
            to <code>UPDATING</code>. After the operation is completed, Kinesis Data Streams sets
            the <code>StreamStatus</code> to <code>ACTIVE</code>. Read and write operations continue
            to work while the stream is in the <code>UPDATING</code> state. 
            </para><para>
            You use <a>DescribeStream</a> to determine the shard IDs that are specified in the
            <code>MergeShards</code> request. 
            </para><para>
            If you try to operate on too many streams in parallel using <a>CreateStream</a>, <a>DeleteStream</a>,
            <code>MergeShards</code>, or <a>SplitShard</a>, you receive a <code>LimitExceededException</code>.
            
            </para><para><code>MergeShards</code> has a limit of five transactions per second per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.MergeKINShardCmdlet.AdjacentShardToMerge">
            <summary>
            <para>
            <para>The shard ID of the adjacent shard for the merge.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.MergeKINShardCmdlet.ShardToMerge">
            <summary>
            <para>
            <para>The shard ID of the shard to combine with the adjacent shard for the merge.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.MergeKINShardCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream for the merge.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.MergeKINShardCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.MergeShardsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.MergeKINShardCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.MergeKINShardCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.NewKINStreamCmdlet">
            <summary>
            Creates a Kinesis data stream. A stream captures and transports data records that
            are continuously emitted from different data sources or <i>producers</i>. Scale-out
            within a stream is explicitly supported by means of shards, which are uniquely identified
            groups of data records in a stream.
            
             
            <para>
            You specify and control the number of shards that a stream is composed of. Each shard
            can support reads up to five transactions per second, up to a maximum data read total
            of 2 MB per second. Each shard can support writes up to 1,000 records per second,
            up to a maximum data write total of 1 MB per second. If the amount of data input increases
            or decreases, you can add or remove shards.
            </para><para>
            The stream name identifies the stream. The name is scoped to the AWS account used
            by the application. It is also scoped by AWS Region. That is, two streams in two different
            accounts can have the same name, and two streams in the same account, but in two different
            Regions, can have the same name.
            </para><para><code>CreateStream</code> is an asynchronous operation. Upon receiving a <code>CreateStream</code>
            request, Kinesis Data Streams immediately returns and sets the stream status to <code>CREATING</code>.
            After the stream is created, Kinesis Data Streams sets the stream status to <code>ACTIVE</code>.
            You should perform read and write operations only on an <code>ACTIVE</code> stream.
            
            </para><para>
            You receive a <code>LimitExceededException</code> when making a <code>CreateStream</code>
            request when you try to do one of the following:
            </para><ul><li><para>
            Have more than five streams in the <code>CREATING</code> state at any point in time.
            </para></li><li><para>
            Create more shards than are authorized for your account.
            </para></li></ul><para>
            For the default shard limit for an AWS account, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html">Amazon
            Kinesis Data Streams Limits</a> in the <i>Amazon Kinesis Data Streams Developer Guide</i>.
            To increase this limit, <a href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html">contact
            AWS Support</a>.
            </para><para>
            You can use <code>DescribeStream</code> to check the stream status, which is returned
            in <code>StreamStatus</code>.
            </para><para><a>CreateStream</a> has a limit of five transactions per second per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.NewKINStreamCmdlet.ShardCount">
            <summary>
            <para>
            <para>The number of shards that the stream will use. The throughput of the stream is a function
            of the number of shards; more shards are required for greater provisioned throughput.</para><para>DefaultShardLimit;</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.NewKINStreamCmdlet.StreamName">
            <summary>
            <para>
            <para>A name to identify the stream. The stream name is scoped to the AWS account used by
            the application that creates the stream. It is also scoped by AWS Region. That is,
            two streams in two different AWS accounts can have the same name. Two streams in the
            same AWS account but in two different Regions can also have the same name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.NewKINStreamCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.CreateStreamResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.NewKINStreamCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.NewKINStreamCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.RegisterKINStreamConsumerCmdlet">
            <summary>
            Registers a consumer with a Kinesis data stream. When you use this operation, the
            consumer you register can read data from the stream at a rate of up to 2 MiB per second.
            This rate is unaffected by the total number of consumers that read from the same stream.
            
             
            <para>
            You can register up to 5 consumers per stream. A given consumer can only be registered
            with one stream.
            </para><para>
            This operation has a limit of five transactions per second per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RegisterKINStreamConsumerCmdlet.ConsumerName">
            <summary>
            <para>
            <para>For a given Kinesis data stream, each consumer must have a unique name. However, consumer
            names don't have to be unique across data streams.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RegisterKINStreamConsumerCmdlet.StreamARN">
            <summary>
            <para>
            <para>The ARN of the Kinesis data stream that you want to register the consumer with. For
            more info, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kinesis-streams">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RegisterKINStreamConsumerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Consumer'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.RegisterStreamConsumerResponse).
            Specifying the name of a property of type Amazon.Kinesis.Model.RegisterStreamConsumerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RegisterKINStreamConsumerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConsumerName parameter.
            The -PassThru parameter is deprecated, use -Select '^ConsumerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RegisterKINStreamConsumerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.RemoveKINStreamCmdlet">
            <summary>
            Deletes a Kinesis data stream and all its shards and data. You must shut down any
            applications that are operating on the stream before you delete the stream. If an
            application attempts to operate on a deleted stream, it receives the exception <code>ResourceNotFoundException</code>.
            
             
            <para>
            If the stream is in the <code>ACTIVE</code> state, you can delete it. After a <code>DeleteStream</code>
            request, the specified stream is in the <code>DELETING</code> state until Kinesis
            Data Streams completes the deletion.
            </para><para><b>Note:</b> Kinesis Data Streams might continue to accept data read and write operations,
            such as <a>PutRecord</a>, <a>PutRecords</a>, and <a>GetRecords</a>, on a stream in
            the <code>DELETING</code> state until the stream deletion is complete.
            </para><para>
            When you delete a stream, any shards in that stream are also deleted, and any tags
            are dissociated from the stream.
            </para><para>
            You can use the <a>DescribeStream</a> operation to check the state of the stream,
            which is returned in <code>StreamStatus</code>.
            </para><para><a>DeleteStream</a> has a limit of five transactions per second per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RemoveKINStreamCmdlet.EnforceConsumerDeletion">
            <summary>
            <para>
            <para>If this parameter is unset (<code>null</code>) or if you set it to <code>false</code>,
            and the stream has registered consumers, the call to <code>DeleteStream</code> fails
            with a <code>ResourceInUseException</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RemoveKINStreamCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RemoveKINStreamCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.DeleteStreamResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RemoveKINStreamCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RemoveKINStreamCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.RemoveKINTagsFromStreamCmdlet">
            <summary>
            Removes tags from the specified Kinesis data stream. Removed tags are deleted and
            cannot be recovered after this operation successfully completes.
            
             
            <para>
            If you specify a tag that does not exist, it is ignored.
            </para><para><a>RemoveTagsFromStream</a> has a limit of five transactions per second per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RemoveKINTagsFromStreamCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RemoveKINTagsFromStreamCmdlet.TagKey">
            <summary>
            <para>
            <para>A list of tag keys. Each corresponding tag is removed from the stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RemoveKINTagsFromStreamCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.RemoveTagsFromStreamResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RemoveKINTagsFromStreamCmdlet.PassThru">
            <summary>
            Returns the collection of tag keys that were removed
            The -PassThru parameter is deprecated, use -Select instead. This parameter will be removed in future
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RemoveKINTagsFromStreamCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.RequestKINStreamRetentionPeriodDecreaseCmdlet">
            <summary>
            Decreases the Kinesis data stream's retention period, which is the length of time
            data records are accessible after they are added to the stream. The minimum value
            of a stream's retention period is 24 hours.
            
             
            <para>
            This operation may result in lost data. For example, if the stream's retention period
            is 48 hours and is decreased to 24 hours, any data already in the stream that is older
            than 24 hours is inaccessible.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RequestKINStreamRetentionPeriodDecreaseCmdlet.RetentionPeriodHour">
            <summary>
            <para>
            <para>The new retention period of the stream, in hours. Must be less than the current retention
            period.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RequestKINStreamRetentionPeriodDecreaseCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RequestKINStreamRetentionPeriodDecreaseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.DecreaseStreamRetentionPeriodResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RequestKINStreamRetentionPeriodDecreaseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RequestKINStreamRetentionPeriodDecreaseCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.RequestKINStreamRetentionPeriodIncreaseCmdlet">
            <summary>
            Increases the Kinesis data stream's retention period, which is the length of time
            data records are accessible after they are added to the stream. The maximum value
            of a stream's retention period is 168 hours (7 days).
            
             
            <para>
            If you choose a longer stream retention period, this operation increases the time
            period during which records that have not yet expired are accessible. However, it
            does not make previous, expired data (older than the stream's previous retention period)
            accessible after the operation has been called. For example, if a stream's retention
            period is set to 24 hours and is increased to 168 hours, any data that is older than
            24 hours remains inaccessible to consumer applications.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RequestKINStreamRetentionPeriodIncreaseCmdlet.RetentionPeriodHour">
            <summary>
            <para>
            <para>The new retention period of the stream, in hours. Must be more than the current retention
            period.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RequestKINStreamRetentionPeriodIncreaseCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RequestKINStreamRetentionPeriodIncreaseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.IncreaseStreamRetentionPeriodResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RequestKINStreamRetentionPeriodIncreaseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.RequestKINStreamRetentionPeriodIncreaseCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.SplitKINShardCmdlet">
            <summary>
            Splits a shard into two new shards in the Kinesis data stream, to increase the stream's
            capacity to ingest and transport data. <code>SplitShard</code> is called when there
            is a need to increase the overall capacity of a stream because of an expected increase
            in the volume of data records being ingested. 
            
             
            <para>
            You can also use <code>SplitShard</code> when a shard appears to be approaching its
            maximum utilization; for example, the producers sending data into the specific shard
            are suddenly sending more than previously anticipated. You can also call <code>SplitShard</code>
            to increase stream capacity, so that more Kinesis Data Streams applications can simultaneously
            read data from the stream for real-time processing. 
            </para><para>
            You must specify the shard to be split and the new hash key, which is the position
            in the shard where the shard gets split in two. In many cases, the new hash key might
            be the average of the beginning and ending hash key, but it can be any hash key value
            in the range being mapped into the shard. For more information, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-resharding-split.html">Split
            a Shard</a> in the <i>Amazon Kinesis Data Streams Developer Guide</i>.
            </para><para>
            You can use <a>DescribeStream</a> to determine the shard ID and hash key values for
            the <code>ShardToSplit</code> and <code>NewStartingHashKey</code> parameters that
            are specified in the <code>SplitShard</code> request.
            </para><para><code>SplitShard</code> is an asynchronous operation. Upon receiving a <code>SplitShard</code>
            request, Kinesis Data Streams immediately returns a response and sets the stream status
            to <code>UPDATING</code>. After the operation is completed, Kinesis Data Streams sets
            the stream status to <code>ACTIVE</code>. Read and write operations continue to work
            while the stream is in the <code>UPDATING</code> state. 
            </para><para>
            You can use <code>DescribeStream</code> to check the status of the stream, which is
            returned in <code>StreamStatus</code>. If the stream is in the <code>ACTIVE</code>
            state, you can call <code>SplitShard</code>. If a stream is in <code>CREATING</code>
            or <code>UPDATING</code> or <code>DELETING</code> states, <code>DescribeStream</code>
            returns a <code>ResourceInUseException</code>.
            </para><para>
            If the specified stream does not exist, <code>DescribeStream</code> returns a <code>ResourceNotFoundException</code>.
            If you try to create more shards than are authorized for your account, you receive
            a <code>LimitExceededException</code>. 
            </para><para>
            For the default shard limit for an AWS account, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html">Kinesis
            Data Streams Limits</a> in the <i>Amazon Kinesis Data Streams Developer Guide</i>.
            To increase this limit, <a href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html">contact
            AWS Support</a>.
            </para><para>
            If you try to operate on too many streams simultaneously using <a>CreateStream</a>,
            <a>DeleteStream</a>, <a>MergeShards</a>, and/or <a>SplitShard</a>, you receive a <code>LimitExceededException</code>.
            
            </para><para><code>SplitShard</code> has a limit of five transactions per second per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.SplitKINShardCmdlet.NewStartingHashKey">
            <summary>
            <para>
            <para>A hash key value for the starting hash key of one of the child shards created by the
            split. The hash key range for a given shard constitutes a set of ordered contiguous
            positive integers. The value for <code>NewStartingHashKey</code> must be in the range
            of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash
            key value and all higher hash key values in hash key range are distributed to one
            of the child shards. All the lower hash key values in the range are distributed to
            the other child shard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.SplitKINShardCmdlet.ShardToSplit">
            <summary>
            <para>
            <para>The shard ID of the shard to split.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.SplitKINShardCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream for the shard split.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.SplitKINShardCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.SplitShardResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.SplitKINShardCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.SplitKINShardCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.StartKINStreamEncryptionCmdlet">
            <summary>
            Enables or updates server-side encryption using an AWS KMS key for a specified stream.
            
            
             
            <para>
            Starting encryption is an asynchronous operation. Upon receiving the request, Kinesis
            Data Streams returns immediately and sets the status of the stream to <code>UPDATING</code>.
            After the update is complete, Kinesis Data Streams sets the status of the stream back
            to <code>ACTIVE</code>. Updating or applying encryption normally takes a few seconds
            to complete, but it can take minutes. You can continue to read and write data to your
            stream while its status is <code>UPDATING</code>. Once the status of the stream is
            <code>ACTIVE</code>, encryption begins for records written to the stream. 
            </para><para>
            API Limits: You can successfully apply a new AWS KMS key for server-side encryption
            25 times in a rolling 24-hour period.
            </para><para>
            Note: It can take up to 5 seconds after the stream is in an <code>ACTIVE</code> status
            before all records written to the stream are encrypted. After you enable encryption,
            you can verify that encryption is applied by inspecting the API response from <code>PutRecord</code>
            or <code>PutRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.StartKINStreamEncryptionCmdlet.EncryptionType">
            <summary>
            <para>
            <para>The encryption type to use. The only valid value is <code>KMS</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.StartKINStreamEncryptionCmdlet.KeyId">
            <summary>
            <para>
            <para>The GUID for the customer-managed AWS KMS key to use for encryption. This value can
            be a globally unique identifier, a fully specified Amazon Resource Name (ARN) to either
            an alias or a key, or an alias name prefixed by "alias/".You can also use a master
            key owned by Kinesis Data Streams by specifying the alias <code>aws/kinesis</code>.</para><ul><li><para>Key ARN example: <code>arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</code></para></li><li><para>Alias ARN example: <code>arn:aws:kms:us-east-1:123456789012:alias/MyAliasName</code></para></li><li><para>Globally unique key ID example: <code>12345678-1234-1234-1234-123456789012</code></para></li><li><para>Alias name example: <code>alias/MyAliasName</code></para></li><li><para>Master key owned by Kinesis Data Streams: <code>alias/aws/kinesis</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.StartKINStreamEncryptionCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream for which to start encrypting records.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.StartKINStreamEncryptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.StartStreamEncryptionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.StartKINStreamEncryptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.StartKINStreamEncryptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.StopKINStreamEncryptionCmdlet">
            <summary>
            Disables server-side encryption for a specified stream. 
            
             
            <para>
            Stopping encryption is an asynchronous operation. Upon receiving the request, Kinesis
            Data Streams returns immediately and sets the status of the stream to <code>UPDATING</code>.
            After the update is complete, Kinesis Data Streams sets the status of the stream back
            to <code>ACTIVE</code>. Stopping encryption normally takes a few seconds to complete,
            but it can take minutes. You can continue to read and write data to your stream while
            its status is <code>UPDATING</code>. Once the status of the stream is <code>ACTIVE</code>,
            records written to the stream are no longer encrypted by Kinesis Data Streams. 
            </para><para>
            API Limits: You can successfully disable server-side encryption 25 times in a rolling
            24-hour period. 
            </para><para>
            Note: It can take up to 5 seconds after the stream is in an <code>ACTIVE</code> status
            before all records written to the stream are no longer subject to encryption. After
            you disabled encryption, you can verify that encryption is not applied by inspecting
            the API response from <code>PutRecord</code> or <code>PutRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.StopKINStreamEncryptionCmdlet.EncryptionType">
            <summary>
            <para>
            <para>The encryption type. The only valid value is <code>KMS</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.StopKINStreamEncryptionCmdlet.KeyId">
            <summary>
            <para>
            <para>The GUID for the customer-managed AWS KMS key to use for encryption. This value can
            be a globally unique identifier, a fully specified Amazon Resource Name (ARN) to either
            an alias or a key, or an alias name prefixed by "alias/".You can also use a master
            key owned by Kinesis Data Streams by specifying the alias <code>aws/kinesis</code>.</para><ul><li><para>Key ARN example: <code>arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</code></para></li><li><para>Alias ARN example: <code>arn:aws:kms:us-east-1:123456789012:alias/MyAliasName</code></para></li><li><para>Globally unique key ID example: <code>12345678-1234-1234-1234-123456789012</code></para></li><li><para>Alias name example: <code>alias/MyAliasName</code></para></li><li><para>Master key owned by Kinesis Data Streams: <code>alias/aws/kinesis</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.StopKINStreamEncryptionCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream on which to stop encrypting records.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.StopKINStreamEncryptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.StopStreamEncryptionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.StopKINStreamEncryptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.StopKINStreamEncryptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.UnregisterKINStreamConsumerCmdlet">
            <summary>
            To deregister a consumer, provide its ARN. Alternatively, you can provide the ARN
            of the data stream and the name you gave the consumer when you registered it. You
            may also provide all three parameters, as long as they don't conflict with each other.
            If you don't know the name or ARN of the consumer that you want to deregister, you
            can use the <a>ListStreamConsumers</a> operation to get a list of the descriptions
            of all the consumers that are currently registered with a given data stream. The description
            of a consumer contains its name and ARN.
            
             
            <para>
            This operation has a limit of five transactions per second per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.UnregisterKINStreamConsumerCmdlet.ConsumerARN">
            <summary>
            <para>
            <para>The ARN returned by Kinesis Data Streams when you registered the consumer. If you
            don't know the ARN of the consumer that you want to deregister, you can use the ListStreamConsumers
            operation to get a list of the descriptions of all the consumers that are currently
            registered with a given data stream. The description of a consumer contains its ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.UnregisterKINStreamConsumerCmdlet.ConsumerName">
            <summary>
            <para>
            <para>The name that you gave to the consumer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.UnregisterKINStreamConsumerCmdlet.StreamARN">
            <summary>
            <para>
            <para>The ARN of the Kinesis data stream that the consumer is registered with. For more
            information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kinesis-streams">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.UnregisterKINStreamConsumerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.DeregisterStreamConsumerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.UnregisterKINStreamConsumerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConsumerARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ConsumerARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.UnregisterKINStreamConsumerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.UpdateKINShardCountCmdlet">
            <summary>
            Updates the shard count of the specified stream to the specified number of shards.
            
             
            <para>
            Updating the shard count is an asynchronous operation. Upon receiving the request,
            Kinesis Data Streams returns immediately and sets the status of the stream to <code>UPDATING</code>.
            After the update is complete, Kinesis Data Streams sets the status of the stream back
            to <code>ACTIVE</code>. Depending on the size of the stream, the scaling action could
            take a few minutes to complete. You can continue to read and write data to your stream
            while its status is <code>UPDATING</code>.
            </para><para>
            To update the shard count, Kinesis Data Streams performs splits or merges on individual
            shards. This can cause short-lived shards to be created, in addition to the final
            shards. We recommend that you double or halve the shard count, as this results in
            the fewest number of splits or merges.
            </para><para>
            This operation has the following default limits. By default, you cannot do the following:
            </para><ul><li><para>
            Scale more than twice per rolling 24-hour period per stream
            </para></li><li><para>
            Scale up to more than double your current shard count for a stream
            </para></li><li><para>
            Scale down below half your current shard count for a stream
            </para></li><li><para>
            Scale up to more than 500 shards in a stream
            </para></li><li><para>
            Scale a stream with more than 500 shards down unless the result is less than 500 shards
            </para></li><li><para>
            Scale up to more than the shard limit for your account
            </para></li></ul><para>
            For the default limits for an AWS account, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html">Streams
            Limits</a> in the <i>Amazon Kinesis Data Streams Developer Guide</i>. To request an
            increase in the call rate limit, the shard limit for this API, or your overall shard
            limit, use the <a href="https://console.aws.amazon.com/support/v1#/case/create?issueType=service-limit-increase&amp;limitType=service-code-kinesis">limits
            form</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.UpdateKINShardCountCmdlet.ScalingType">
            <summary>
            <para>
            <para>The scaling type. Uniform scaling creates shards of equal size.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.UpdateKINShardCountCmdlet.StreamName">
            <summary>
            <para>
            <para>The name of the stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.UpdateKINShardCountCmdlet.TargetShardCount">
            <summary>
            <para>
            <para>The new number of shards.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.UpdateKINShardCountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.UpdateShardCountResponse).
            Specifying the name of a property of type Amazon.Kinesis.Model.UpdateShardCountResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.UpdateKINShardCountCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^StreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.UpdateKINShardCountCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KIN.WriteKINMultipleRecordCmdlet">
            <summary>
            Writes multiple data records into a Kinesis data stream in a single call (also referred
            to as a <code>PutRecords</code> request). Use this operation to send data into the
            stream for data ingestion and processing. 
            
             
            <para>
            Each <code>PutRecords</code> request can support up to 500 records. Each record in
            the request can be as large as 1 MB, up to a limit of 5 MB for the entire request,
            including partition keys. Each shard can support writes up to 1,000 records per second,
            up to a maximum data write total of 1 MB per second.
            </para><para>
            You must specify the name of the stream that captures, stores, and transports the
            data; and an array of request <code>Records</code>, with each record in the array
            requiring a partition key and data blob. The record size limit applies to the total
            size of the partition key and data blob.
            </para><para>
            The data blob can be any type of data; for example, a segment from a log file, geographic/location
            data, website clickstream data, and so on.
            </para><para>
            The partition key is used by Kinesis Data Streams as input to a hash function that
            maps the partition key and associated data to a specific shard. An MD5 hash function
            is used to map partition keys to 128-bit integer values and to map associated data
            records to shards. As a result of this hashing mechanism, all data records with the
            same partition key map to the same shard within the stream. For more information,
            see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream">Adding
            Data to a Stream</a> in the <i>Amazon Kinesis Data Streams Developer Guide</i>.
            </para><para>
            Each record in the <code>Records</code> array may include an optional parameter, <code>ExplicitHashKey</code>,
            which overrides the partition key to shard mapping. This parameter allows a data producer
            to determine explicitly the shard where the record is stored. For more information,
            see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords">Adding
            Multiple Records with PutRecords</a> in the <i>Amazon Kinesis Data Streams Developer
            Guide</i>.
            </para><para>
            The <code>PutRecords</code> response includes an array of response <code>Records</code>.
            Each record in the response array directly correlates with a record in the request
            array using natural ordering, from the top to the bottom of the request and response.
            The response <code>Records</code> array always includes the same number of records
            as the request array.
            </para><para>
            The response <code>Records</code> array includes both successfully and unsuccessfully
            processed records. Kinesis Data Streams attempts to process all records in each <code>PutRecords</code>
            request. A single record failure does not stop the processing of subsequent records.
            </para><para>
            A successfully processed record includes <code>ShardId</code> and <code>SequenceNumber</code>
            values. The <code>ShardId</code> parameter identifies the shard in the stream where
            the record is stored. The <code>SequenceNumber</code> parameter is an identifier assigned
            to the put record, unique to all records in the stream.
            </para><para>
            An unsuccessfully processed record includes <code>ErrorCode</code> and <code>ErrorMessage</code>
            values. <code>ErrorCode</code> reflects the type of error and can be one of the following
            values: <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.
            <code>ErrorMessage</code> provides more detailed information about the <code>ProvisionedThroughputExceededException</code>
            exception including the account ID, stream name, and shard ID of the record that was
            throttled. For more information about partially successful responses, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-add-data-to-stream.html#kinesis-using-sdk-java-putrecords">Adding
            Multiple Records with PutRecords</a> in the <i>Amazon Kinesis Data Streams Developer
            Guide</i>.
            </para><para>
            By default, data records are accessible for 24 hours from the time that they are added
            to a stream. You can use <a>IncreaseStreamRetentionPeriod</a> or <a>DecreaseStreamRetentionPeriod</a>
            to modify this retention period.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.WriteKINMultipleRecordCmdlet.Record">
            <summary>
            <para>
            <para>The records associated with the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.WriteKINMultipleRecordCmdlet.StreamName">
            <summary>
            <para>
            <para>The stream name associated with the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.WriteKINMultipleRecordCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Kinesis.Model.PutRecordsResponse).
            Specifying the name of a property of type Amazon.Kinesis.Model.PutRecordsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.WriteKINMultipleRecordCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Record parameter.
            The -PassThru parameter is deprecated, use -Select '^Record' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KIN.WriteKINMultipleRecordCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
