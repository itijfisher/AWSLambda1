<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.ServiceDiscovery</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.AddSDResourceTagCmdlet">
            <summary>
            Adds one or more tags to the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.AddSDResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource that you want to retrieve tags for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.AddSDResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to add to the specified resource. Specifying the tag key is required. You
            can set the value of a tag to an empty string, but you can't set the value of a tag
            to null.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.AddSDResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.AddSDResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.AddSDResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.FindSDInstanceCmdlet">
            <summary>
            Discovers registered instances for a specified namespace and service. You can use
            <code>DiscoverInstances</code> to discover instances for any type of namespace. For
            public and private DNS namespaces, you can also use DNS queries to discover instances.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.FindSDInstanceCmdlet.HealthStatus">
            <summary>
            <para>
            <para>The health status of the instances that you want to discover.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.FindSDInstanceCmdlet.NamespaceName">
            <summary>
            <para>
            <para>The name of the namespace that you specified when you registered the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.FindSDInstanceCmdlet.QueryParameter">
            <summary>
            <para>
            <para>A string map that contains attributes with values that you can use to filter instances
            by any custom attribute that you specified when you registered the instance. Only
            instances that match all the specified key/value pairs will be returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.FindSDInstanceCmdlet.ServiceName">
            <summary>
            <para>
            <para>The name of the service that you specified when you registered the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.FindSDInstanceCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of instances that you want AWS Cloud Map to return in the response
            to a <code>DiscoverInstances</code> request. If you don't specify a value for <code>MaxResults</code>,
            AWS Cloud Map returns up to 100 instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.FindSDInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Instances'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.DiscoverInstancesResponse).
            Specifying the name of a property of type Amazon.ServiceDiscovery.Model.DiscoverInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.FindSDInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServiceName parameter.
            The -PassThru parameter is deprecated, use -Select '^ServiceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.GetSDInstanceCmdlet">
            <summary>
            Gets information about a specified instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDInstanceCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance that you want to get information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDInstanceCmdlet.ServiceId">
            <summary>
            <para>
            <para>The ID of the service that the instance is associated with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Instance'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.GetInstanceResponse).
            Specifying the name of a property of type Amazon.ServiceDiscovery.Model.GetInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.GetSDInstanceListCmdlet">
            <summary>
            Lists summary information about the instances that you registered by using a specified
            service.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDInstanceListCmdlet.ServiceId">
            <summary>
            <para>
            <para>The ID of the service that you want to list instances for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDInstanceListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of instances that you want AWS Cloud Map to return in the response
            to a <code>ListInstances</code> request. If you don't specify a value for <code>MaxResults</code>,
            AWS Cloud Map returns up to 100 instances.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDInstanceListCmdlet.NextToken">
            <summary>
            <para>
            <para>For the first <code>ListInstances</code> request, omit this value.</para><para>If more than <code>MaxResults</code> instances match the specified criteria, you can
            submit another <code>ListInstances</code> request to get the next group of results.
            Specify the value of <code>NextToken</code> from the previous response in the next
            request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDInstanceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Instances'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.ListInstancesResponse).
            Specifying the name of a property of type Amazon.ServiceDiscovery.Model.ListInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDInstanceListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServiceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServiceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDInstanceListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.GetSDInstancesHealthStatusCmdlet">
            <summary>
            Gets the current health status (<code>Healthy</code>, <code>Unhealthy</code>, or <code>Unknown</code>)
            of one or more instances that are associated with a specified service.
            
             <note><para>
            There is a brief delay between when you register an instance and when the health status
            for the instance is available. 
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDInstancesHealthStatusCmdlet.Instance">
            <summary>
            <para>
            <para>An array that contains the IDs of all the instances that you want to get the health
            status for.</para><para>If you omit <code>Instances</code>, AWS Cloud Map returns the health status for all
            the instances that are associated with the specified service.</para><note><para>To get the IDs for the instances that you've registered by using a specified service,
            submit a <a href="https://docs.aws.amazon.com/cloud-map/latest/api/API_ListInstances.html">ListInstances</a>
            request.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDInstancesHealthStatusCmdlet.ServiceId">
            <summary>
            <para>
            <para>The ID of the service that the instance is associated with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDInstancesHealthStatusCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of instances that you want AWS Cloud Map to return in the response
            to a <code>GetInstancesHealthStatus</code> request. If you don't specify a value for
            <code>MaxResults</code>, AWS Cloud Map returns up to 100 instances.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDInstancesHealthStatusCmdlet.NextToken">
            <summary>
            <para>
            <para>For the first <code>GetInstancesHealthStatus</code> request, omit this value.</para><para>If more than <code>MaxResults</code> instances match the specified criteria, you can
            submit another <code>GetInstancesHealthStatus</code> request to get the next group
            of results. Specify the value of <code>NextToken</code> from the previous response
            in the next request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDInstancesHealthStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Status'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.GetInstancesHealthStatusResponse).
            Specifying the name of a property of type Amazon.ServiceDiscovery.Model.GetInstancesHealthStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDInstancesHealthStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServiceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServiceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDInstancesHealthStatusCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.GetSDNamespaceCmdlet">
            <summary>
            Gets information about a namespace.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDNamespaceCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the namespace that you want to get information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDNamespaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Namespace'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.GetNamespaceResponse).
            Specifying the name of a property of type Amazon.ServiceDiscovery.Model.GetNamespaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDNamespaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.GetSDNamespaceListCmdlet">
            <summary>
            Lists summary information about the namespaces that were created by the current AWS
            account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDNamespaceListCmdlet.Filter">
            <summary>
            <para>
            <para>A complex type that contains specifications for the namespaces that you want to list.</para><para>If you specify more than one filter, a namespace must match all filters to be returned
            by <code>ListNamespaces</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDNamespaceListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of namespaces that you want AWS Cloud Map to return in the response
            to a <code>ListNamespaces</code> request. If you don't specify a value for <code>MaxResults</code>,
            AWS Cloud Map returns up to 100 namespaces.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDNamespaceListCmdlet.NextToken">
            <summary>
            <para>
            <para>For the first <code>ListNamespaces</code> request, omit this value.</para><para>If the response contains <code>NextToken</code>, submit another <code>ListNamespaces</code>
            request to get the next group of results. Specify the value of <code>NextToken</code>
            from the previous response in the next request.</para><note><para>AWS Cloud Map gets <code>MaxResults</code> namespaces and then filters them based
            on the specified criteria. It's possible that no namespaces in the first <code>MaxResults</code>
            namespaces matched the specified criteria but that subsequent groups of <code>MaxResults</code>
            namespaces do contain namespaces that match the criteria.</para></note>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDNamespaceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Namespaces'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.ListNamespacesResponse).
            Specifying the name of a property of type Amazon.ServiceDiscovery.Model.ListNamespacesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDNamespaceListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.GetSDOperationCmdlet">
            <summary>
            Gets information about any operation that returns an operation ID in the response,
            such as a <code>CreateService</code> request.
            
             <note><para>
            To get a list of operations that match specified criteria, see <a href="https://docs.aws.amazon.com/cloud-map/latest/api/API_ListOperations.html">ListOperations</a>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDOperationCmdlet.OperationId">
            <summary>
            <para>
            <para>The ID of the operation that you want to get more information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDOperationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.GetOperationResponse).
            Specifying the name of a property of type Amazon.ServiceDiscovery.Model.GetOperationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDOperationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OperationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OperationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.GetSDOperationListCmdlet">
            <summary>
            Lists operations that match the criteria that you specify.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDOperationListCmdlet.Filter">
            <summary>
            <para>
            <para>A complex type that contains specifications for the operations that you want to list,
            for example, operations that you started between a specified start date and end date.</para><para>If you specify more than one filter, an operation must match all filters to be returned
            by <code>ListOperations</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDOperationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items that you want AWS Cloud Map to return in the response
            to a <code>ListOperations</code> request. If you don't specify a value for <code>MaxResults</code>,
            AWS Cloud Map returns up to 100 operations.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDOperationListCmdlet.NextToken">
            <summary>
            <para>
            <para>For the first <code>ListOperations</code> request, omit this value.</para><para>If the response contains <code>NextToken</code>, submit another <code>ListOperations</code>
            request to get the next group of results. Specify the value of <code>NextToken</code>
            from the previous response in the next request.</para><note><para>AWS Cloud Map gets <code>MaxResults</code> operations and then filters them based
            on the specified criteria. It's possible that no operations in the first <code>MaxResults</code>
            operations matched the specified criteria but that subsequent groups of <code>MaxResults</code>
            operations do contain operations that match the criteria.</para></note>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDOperationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Operations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.ListOperationsResponse).
            Specifying the name of a property of type Amazon.ServiceDiscovery.Model.ListOperationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDOperationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.GetSDResourceTagCmdlet">
            <summary>
            Lists tags for the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource that you want to retrieve tags for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.ServiceDiscovery.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.GetSDServiceCmdlet">
            <summary>
            Gets the settings for a specified service.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDServiceCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the service that you want to get settings for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDServiceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Service'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.GetServiceResponse).
            Specifying the name of a property of type Amazon.ServiceDiscovery.Model.GetServiceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDServiceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.GetSDServiceListCmdlet">
            <summary>
            Lists summary information for all the services that are associated with one or more
            specified namespaces.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDServiceListCmdlet.Filter">
            <summary>
            <para>
            <para>A complex type that contains specifications for the namespaces that you want to list
            services for. </para><para>If you specify more than one filter, an operation must match all filters to be returned
            by <code>ListServices</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDServiceListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of services that you want AWS Cloud Map to return in the response
            to a <code>ListServices</code> request. If you don't specify a value for <code>MaxResults</code>,
            AWS Cloud Map returns up to 100 services.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDServiceListCmdlet.NextToken">
            <summary>
            <para>
            <para>For the first <code>ListServices</code> request, omit this value.</para><para>If the response contains <code>NextToken</code>, submit another <code>ListServices</code>
            request to get the next group of results. Specify the value of <code>NextToken</code>
            from the previous response in the next request.</para><note><para>AWS Cloud Map gets <code>MaxResults</code> services and then filters them based on
            the specified criteria. It's possible that no services in the first <code>MaxResults</code>
            services matched the specified criteria but that subsequent groups of <code>MaxResults</code>
            services do contain services that match the criteria.</para></note>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDServiceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Services'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.ListServicesResponse).
            Specifying the name of a property of type Amazon.ServiceDiscovery.Model.ListServicesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.GetSDServiceListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.NewSDHttpNamespaceCmdlet">
            <summary>
            Creates an HTTP namespace. Service instances that you register using an HTTP namespace
            can be discovered using a <code>DiscoverInstances</code> request but can't be discovered
            using DNS. 
            
             
            <para>
            For the current limit on the number of namespaces that you can create using the same
            AWS account, see <a href="https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html">AWS
            Cloud Map Limits</a> in the <i>AWS Cloud Map Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDHttpNamespaceCmdlet.CreatorRequestId">
            <summary>
            <para>
            <para>A unique string that identifies the request and that allows failed <code>CreateHttpNamespace</code>
            requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code>
            can be any unique string, for example, a date/time stamp.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDHttpNamespaceCmdlet.Description">
            <summary>
            <para>
            <para>A description for the namespace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDHttpNamespaceCmdlet.Name">
            <summary>
            <para>
            <para>The name that you want to assign to this namespace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDHttpNamespaceCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to add to the namespace. Each tag consists of a key and an optional value,
            both of which you define. Tag keys can have a maximum character length of 128 characters,
            and tag values can have a maximum length of 256 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDHttpNamespaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OperationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.CreateHttpNamespaceResponse).
            Specifying the name of a property of type Amazon.ServiceDiscovery.Model.CreateHttpNamespaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDHttpNamespaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDHttpNamespaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.NewSDInstanceRegistrationCmdlet">
            <summary>
            Creates or updates one or more records and, optionally, creates a health check based
            on the settings in a specified service. When you submit a <code>RegisterInstance</code>
            request, the following occurs:
            
             <ul><li><para>
            For each DNS record that you define in the service that is specified by <code>ServiceId</code>,
            a record is created or updated in the hosted zone that is associated with the corresponding
            namespace.
            </para></li><li><para>
            If the service includes <code>HealthCheckConfig</code>, a health check is created
            based on the settings in the health check configuration.
            </para></li><li><para>
            The health check, if any, is associated with each of the new or updated records.
            </para></li></ul><important><para>
            One <code>RegisterInstance</code> request must complete before you can submit another
            request and specify the same service ID and instance ID.
            </para></important><para>
            For more information, see <a href="https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html">CreateService</a>.
            </para><para>
            When AWS Cloud Map receives a DNS query for the specified DNS name, it returns the
            applicable value:
            </para><ul><li><para><b>If the health check is healthy</b>: returns all the records
            </para></li><li><para><b>If the health check is unhealthy</b>: returns the applicable value for the last
            healthy instance
            </para></li><li><para><b>If you didn't specify a health check configuration</b>: returns all the records
            </para></li></ul><para>
            For the current limit on the number of instances that you can register using the same
            namespace and using the same service, see <a href="https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html">AWS
            Cloud Map Limits</a> in the <i>AWS Cloud Map Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDInstanceRegistrationCmdlet.Attribute">
            <summary>
            <para>
            <para>A string map that contains the following information for the service that you specify
            in <code>ServiceId</code>:</para><ul><li><para>The attributes that apply to the records that are defined in the service. </para></li><li><para>For each attribute, the applicable value.</para></li></ul><para>Supported attribute keys include the following:</para><para><b>AWS_ALIAS_DNS_NAME</b></para><para><b /></para><para>If you want AWS Cloud Map to create an Amazon Route 53 alias record that routes traffic
            to an Elastic Load Balancing load balancer, specify the DNS name that is associated
            with the load balancer. For information about how to get the DNS name, see "DNSName"
            in the topic <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_AliasTarget.html">AliasTarget</a>
            in the <i>Route 53 API Reference</i>.</para><para>Note the following:</para><ul><li><para>The configuration for the service that is specified by <code>ServiceId</code> must
            include settings for an A record, an AAAA record, or both.</para></li><li><para>In the service that is specified by <code>ServiceId</code>, the value of <code>RoutingPolicy</code>
            must be <code>WEIGHTED</code>.</para></li><li><para>If the service that is specified by <code>ServiceId</code> includes <code>HealthCheckConfig</code>
            settings, AWS Cloud Map will create the Route 53 health check, but it won't associate
            the health check with the alias record.</para></li><li><para>Auto naming currently doesn't support creating alias records that route traffic to
            AWS resources other than ELB load balancers.</para></li><li><para>If you specify a value for <code>AWS_ALIAS_DNS_NAME</code>, don't specify values for
            any of the <code>AWS_INSTANCE</code> attributes.</para></li></ul><para><b>AWS_INIT_HEALTH_STATUS</b></para><para>If the service configuration includes <code>HealthCheckCustomConfig</code>, you can
            optionally use <code>AWS_INIT_HEALTH_STATUS</code> to specify the initial status of
            the custom health check, <code>HEALTHY</code> or <code>UNHEALTHY</code>. If you don't
            specify a value for <code>AWS_INIT_HEALTH_STATUS</code>, the initial status is <code>HEALTHY</code>.</para><para><b>AWS_INSTANCE_CNAME</b></para><para>If the service configuration includes a CNAME record, the domain name that you want
            Route 53 to return in response to DNS queries, for example, <code>example.com</code>.</para><para>This value is required if the service specified by <code>ServiceId</code> includes
            settings for an CNAME record.</para><para><b>AWS_INSTANCE_IPV4</b></para><para>If the service configuration includes an A record, the IPv4 address that you want
            Route 53 to return in response to DNS queries, for example, <code>192.0.2.44</code>.</para><para>This value is required if the service specified by <code>ServiceId</code> includes
            settings for an A record. If the service includes settings for an SRV record, you
            must specify a value for <code>AWS_INSTANCE_IPV4</code>, <code>AWS_INSTANCE_IPV6</code>,
            or both.</para><para><b>AWS_INSTANCE_IPV6</b></para><para>If the service configuration includes an AAAA record, the IPv6 address that you want
            Route 53 to return in response to DNS queries, for example, <code>2001:0db8:85a3:0000:0000:abcd:0001:2345</code>.</para><para>This value is required if the service specified by <code>ServiceId</code> includes
            settings for an AAAA record. If the service includes settings for an SRV record, you
            must specify a value for <code>AWS_INSTANCE_IPV4</code>, <code>AWS_INSTANCE_IPV6</code>,
            or both.</para><para><b>AWS_INSTANCE_PORT</b></para><para>If the service includes an SRV record, the value that you want Route 53 to return
            for the port.</para><para>If the service includes <code>HealthCheckConfig</code>, the port on the endpoint that
            you want Route 53 to send requests to. </para><para>This value is required if you specified settings for an SRV record or a Route 53 health
            check when you created the service.</para><para><b>Custom attributes</b></para><para>You can add up to 30 custom attributes. For each key-value pair, the maximum length
            of the attribute name is 255 characters, and the maximum length of the attribute value
            is 1,024 characters. Total size of all provided attributes (sum of all keys and values)
            must not exceed 5,000 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDInstanceRegistrationCmdlet.CreatorRequestId">
            <summary>
            <para>
            <para>A unique string that identifies the request and that allows failed <code>RegisterInstance</code>
            requests to be retried without the risk of executing the operation twice. You must
            use a unique <code>CreatorRequestId</code> string every time you submit a <code>RegisterInstance</code>
            request if you're registering additional instances for the same namespace and service.
            <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDInstanceRegistrationCmdlet.InstanceId">
            <summary>
            <para>
            <para>An identifier that you want to associate with the instance. Note the following:</para><ul><li><para>If the service that is specified by <code>ServiceId</code> includes settings for an
            SRV record, the value of <code>InstanceId</code> is automatically included as part
            of the value for the SRV record. For more information, see <a href="https://docs.aws.amazon.com/cloud-map/latest/api/API_DnsRecord.html#cloudmap-Type-DnsRecord-Type">DnsRecord
            &gt; Type</a>.</para></li><li><para>You can use this value to update an existing instance.</para></li><li><para>To register a new instance, you must specify a value that is unique among instances
            that you register by using the same service. </para></li><li><para>If you specify an existing <code>InstanceId</code> and <code>ServiceId</code>, AWS
            Cloud Map updates the existing DNS records, if any. If there's also an existing health
            check, AWS Cloud Map deletes the old health check and creates a new one. </para><note><para>The health check isn't deleted immediately, so it will still appear for a while if
            you submit a <code>ListHealthChecks</code> request, for example.</para></note></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDInstanceRegistrationCmdlet.ServiceId">
            <summary>
            <para>
            <para>The ID of the service that you want to use for settings for the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDInstanceRegistrationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OperationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.RegisterInstanceResponse).
            Specifying the name of a property of type Amazon.ServiceDiscovery.Model.RegisterInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDInstanceRegistrationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDInstanceRegistrationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.NewSDPrivateDnsNamespaceCmdlet">
            <summary>
            Creates a private namespace based on DNS, which will be visible only inside a specified
            Amazon VPC. The namespace defines your service naming scheme. For example, if you
            name your namespace <code>example.com</code> and name your service <code>backend</code>,
            the resulting DNS name for the service will be <code>backend.example.com</code>. For
            the current limit on the number of namespaces that you can create using the same AWS
            account, see <a href="https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html">AWS
            Cloud Map Limits</a> in the <i>AWS Cloud Map Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDPrivateDnsNamespaceCmdlet.CreatorRequestId">
            <summary>
            <para>
            <para>A unique string that identifies the request and that allows failed <code>CreatePrivateDnsNamespace</code>
            requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code>
            can be any unique string, for example, a date/time stamp.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDPrivateDnsNamespaceCmdlet.Description">
            <summary>
            <para>
            <para>A description for the namespace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDPrivateDnsNamespaceCmdlet.Name">
            <summary>
            <para>
            <para>The name that you want to assign to this namespace. When you create a private DNS
            namespace, AWS Cloud Map automatically creates an Amazon Route 53 private hosted zone
            that has the same name as the namespace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDPrivateDnsNamespaceCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to add to the namespace. Each tag consists of a key and an optional value,
            both of which you define. Tag keys can have a maximum character length of 128 characters,
            and tag values can have a maximum length of 256 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDPrivateDnsNamespaceCmdlet.Vpc">
            <summary>
            <para>
            <para>The ID of the Amazon VPC that you want to associate the namespace with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDPrivateDnsNamespaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OperationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.CreatePrivateDnsNamespaceResponse).
            Specifying the name of a property of type Amazon.ServiceDiscovery.Model.CreatePrivateDnsNamespaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDPrivateDnsNamespaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDPrivateDnsNamespaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.NewSDPublicDnsNamespaceCmdlet">
            <summary>
            Creates a public namespace based on DNS, which will be visible on the internet. The
            namespace defines your service naming scheme. For example, if you name your namespace
            <code>example.com</code> and name your service <code>backend</code>, the resulting
            DNS name for the service will be <code>backend.example.com</code>. For the current
            limit on the number of namespaces that you can create using the same AWS account,
            see <a href="https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html">AWS
            Cloud Map Limits</a> in the <i>AWS Cloud Map Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDPublicDnsNamespaceCmdlet.CreatorRequestId">
            <summary>
            <para>
            <para>A unique string that identifies the request and that allows failed <code>CreatePublicDnsNamespace</code>
            requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code>
            can be any unique string, for example, a date/time stamp.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDPublicDnsNamespaceCmdlet.Description">
            <summary>
            <para>
            <para>A description for the namespace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDPublicDnsNamespaceCmdlet.Name">
            <summary>
            <para>
            <para>The name that you want to assign to this namespace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDPublicDnsNamespaceCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to add to the namespace. Each tag consists of a key and an optional value,
            both of which you define. Tag keys can have a maximum character length of 128 characters,
            and tag values can have a maximum length of 256 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDPublicDnsNamespaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OperationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.CreatePublicDnsNamespaceResponse).
            Specifying the name of a property of type Amazon.ServiceDiscovery.Model.CreatePublicDnsNamespaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDPublicDnsNamespaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDPublicDnsNamespaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.NewSDServiceCmdlet">
            <summary>
            Creates a service, which defines the configuration for the following entities:
            
             <ul><li><para>
            For public and private DNS namespaces, one of the following combinations of DNS records
            in Amazon Route 53:
            </para><ul><li><para>
            A
            </para></li><li><para>
            AAAA
            </para></li><li><para>
            A and AAAA
            </para></li><li><para>
            SRV
            </para></li><li><para>
            CNAME
            </para></li></ul></li><li><para>
            Optionally, a health check
            </para></li></ul><para>
            After you create the service, you can submit a <a href="https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html">RegisterInstance</a>
            request, and AWS Cloud Map uses the values in the configuration to create the specified
            entities.
            </para><para>
            For the current limit on the number of instances that you can register using the same
            namespace and using the same service, see <a href="https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html">AWS
            Cloud Map Limits</a> in the <i>AWS Cloud Map Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDServiceCmdlet.CreatorRequestId">
            <summary>
            <para>
            <para>A unique string that identifies the request and that allows failed <code>CreateService</code>
            requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code>
            can be any unique string, for example, a date/time stamp.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDServiceCmdlet.Description">
            <summary>
            <para>
            <para>A description for the service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDServiceCmdlet.DnsConfig">
            <summary>
            <para>
            <para>A complex type that contains information about the Amazon Route 53 records that you
            want AWS Cloud Map to create when you register an instance. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDServiceCmdlet.HealthCheckConfig_FailureThreshold">
            <summary>
            <para>
            <para>The number of consecutive health checks that an endpoint must pass or fail for Route
            53 to change the current status of the endpoint from unhealthy to healthy or vice
            versa. For more information, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html">How
            Route 53 Determines Whether an Endpoint Is Healthy</a> in the <i>Route 53 Developer
            Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDServiceCmdlet.HealthCheckCustomConfig">
            <summary>
            <para>
            <para>A complex type that contains information about an optional custom health check.</para><important><para>If you specify a health check configuration, you can specify either <code>HealthCheckCustomConfig</code>
            or <code>HealthCheckConfig</code> but not both.</para></important><para>You can't add, update, or delete a <code>HealthCheckCustomConfig</code> configuration
            from an existing service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDServiceCmdlet.Name">
            <summary>
            <para>
            <para>The name that you want to assign to the service.</para><para>If you want AWS Cloud Map to create an SRV record when you register an instance, and
            if you're using a system that requires a specific SRV format, such as <a href="http://www.haproxy.org/">HAProxy</a>,
            specify the following for <code>Name</code>:</para><ul><li><para>Start the name with an underscore (_), such as <code>_exampleservice</code></para></li><li><para>End the name with <i>._protocol</i>, such as <code>._tcp</code></para></li></ul><para>When you register an instance, AWS Cloud Map creates an SRV record and assigns a name
            to the record by concatenating the service name and the namespace name, for example:</para><para><code>_exampleservice._tcp.example.com</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDServiceCmdlet.NamespaceId">
            <summary>
            <para>
            <para>The ID of the namespace that you want to use to create the service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDServiceCmdlet.HealthCheckConfig_ResourcePath">
            <summary>
            <para>
            <para>The path that you want Route 53 to request when performing health checks. The path
            can be any value for which your endpoint will return an HTTP status code of 2xx or
            3xx when the endpoint is healthy, such as the file <code>/docs/route53-health-check.html</code>.
            Route 53 automatically adds the DNS name for the service. If you don't specify a value
            for <code>ResourcePath</code>, the default value is <code>/</code>.</para><para>If you specify <code>TCP</code> for <code>Type</code>, you must <i>not</i> specify
            a value for <code>ResourcePath</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDServiceCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to add to the service. Each tag consists of a key and an optional value,
            both of which you define. Tag keys can have a maximum character length of 128 characters,
            and tag values can have a maximum length of 256 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDServiceCmdlet.HealthCheckConfig_Type">
            <summary>
            <para>
            <para>The type of health check that you want to create, which indicates how Route 53 determines
            whether an endpoint is healthy.</para><important><para>You can't change the value of <code>Type</code> after you create a health check.</para></important><para>You can create the following types of health checks:</para><ul><li><para><b>HTTP</b>: Route 53 tries to establish a TCP connection. If successful, Route 53
            submits an HTTP request and waits for an HTTP status code of 200 or greater and less
            than 400.</para></li><li><para><b>HTTPS</b>: Route 53 tries to establish a TCP connection. If successful, Route
            53 submits an HTTPS request and waits for an HTTP status code of 200 or greater and
            less than 400.</para><important><para>If you specify HTTPS for the value of <code>Type</code>, the endpoint must support
            TLS v1.0 or later.</para></important></li><li><para><b>TCP</b>: Route 53 tries to establish a TCP connection.</para><para>If you specify <code>TCP</code> for <code>Type</code>, don't specify a value for <code>ResourcePath</code>.</para></li></ul><para>For more information, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html">How
            Route 53 Determines Whether an Endpoint Is Healthy</a> in the <i>Route 53 Developer
            Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDServiceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Service'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.CreateServiceResponse).
            Specifying the name of a property of type Amazon.ServiceDiscovery.Model.CreateServiceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDServiceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.NewSDServiceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.RemoveSDInstanceRegistrationCmdlet">
            <summary>
            Deletes the Amazon Route 53 DNS records and health check, if any, that AWS Cloud Map
            created for the specified instance.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.RemoveSDInstanceRegistrationCmdlet.InstanceId">
            <summary>
            <para>
            <para>The value that you specified for <code>Id</code> in the <a href="https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html">RegisterInstance</a>
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.RemoveSDInstanceRegistrationCmdlet.ServiceId">
            <summary>
            <para>
            <para>The ID of the service that the instance is associated with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.RemoveSDInstanceRegistrationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OperationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.DeregisterInstanceResponse).
            Specifying the name of a property of type Amazon.ServiceDiscovery.Model.DeregisterInstanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.RemoveSDInstanceRegistrationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.RemoveSDInstanceRegistrationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.RemoveSDNamespaceCmdlet">
            <summary>
            Deletes a namespace from the current account. If the namespace still contains one
            or more services, the request fails.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.RemoveSDNamespaceCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the namespace that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.RemoveSDNamespaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OperationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.DeleteNamespaceResponse).
            Specifying the name of a property of type Amazon.ServiceDiscovery.Model.DeleteNamespaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.RemoveSDNamespaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.RemoveSDNamespaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.RemoveSDResourceTagCmdlet">
            <summary>
            Removes one or more tags from the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.RemoveSDResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource that you want to retrieve tags for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.RemoveSDResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The tag keys to remove from the specified resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.RemoveSDResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.RemoveSDResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.RemoveSDResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.RemoveSDServiceCmdlet">
            <summary>
            Deletes a specified service. If the service still contains one or more registered
            instances, the request fails.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.RemoveSDServiceCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the service that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.RemoveSDServiceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.DeleteServiceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.RemoveSDServiceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.RemoveSDServiceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.UpdateSDInstanceCustomHealthStatusCmdlet">
            <summary>
            Submits a request to change the health status of a custom health check to healthy
            or unhealthy.
            
             
            <para>
            You can use <code>UpdateInstanceCustomHealthStatus</code> to change the status only
            for custom health checks, which you define using <code>HealthCheckCustomConfig</code>
            when you create a service. You can't use it to change the status for Route 53 health
            checks, which you define using <code>HealthCheckConfig</code>.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/cloud-map/latest/api/API_HealthCheckCustomConfig.html">HealthCheckCustomConfig</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.UpdateSDInstanceCustomHealthStatusCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance that you want to change the health status for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.UpdateSDInstanceCustomHealthStatusCmdlet.ServiceId">
            <summary>
            <para>
            <para>The ID of the service that includes the configuration for the custom health check
            that you want to change the status for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.UpdateSDInstanceCustomHealthStatusCmdlet.Status">
            <summary>
            <para>
            <para>The new status of the instance, <code>HEALTHY</code> or <code>UNHEALTHY</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.UpdateSDInstanceCustomHealthStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.UpdateInstanceCustomHealthStatusResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.UpdateSDInstanceCustomHealthStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.UpdateSDInstanceCustomHealthStatusCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SD.UpdateSDServiceCmdlet">
            <summary>
            Submits a request to perform the following operations:
            
             <ul><li><para>
            Update the TTL setting for existing <code>DnsRecords</code> configurations
            </para></li><li><para>
            Add, update, or delete <code>HealthCheckConfig</code> for a specified service
            </para><note><para>
            You can't add, update, or delete a <code>HealthCheckCustomConfig</code> configuration.
            </para></note></li></ul><para>
            For public and private DNS namespaces, note the following:
            </para><ul><li><para>
            If you omit any existing <code>DnsRecords</code> or <code>HealthCheckConfig</code>
            configurations from an <code>UpdateService</code> request, the configurations are
            deleted from the service.
            </para></li><li><para>
            If you omit an existing <code>HealthCheckCustomConfig</code> configuration from an
            <code>UpdateService</code> request, the configuration is not deleted from the service.
            </para></li></ul><para>
            When you update settings for a service, AWS Cloud Map also updates the corresponding
            settings in all the records and health checks that were created by using the specified
            service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.UpdateSDServiceCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the service that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.UpdateSDServiceCmdlet.Service">
            <summary>
            <para>
            <para>A complex type that contains the new settings for the service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.UpdateSDServiceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OperationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ServiceDiscovery.Model.UpdateServiceResponse).
            Specifying the name of a property of type Amazon.ServiceDiscovery.Model.UpdateServiceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.UpdateSDServiceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SD.UpdateSDServiceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
