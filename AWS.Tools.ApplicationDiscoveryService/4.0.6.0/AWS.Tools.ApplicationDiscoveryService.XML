<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.ApplicationDiscoveryService</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.AddADSConfigurationItemsToApplicationCmdlet">
            <summary>
            Associates one or more configuration items with an application.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.AddADSConfigurationItemsToApplicationCmdlet.ApplicationConfigurationId">
            <summary>
            <para>
            <para>The configuration ID of an application with which items are to be associated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.AddADSConfigurationItemsToApplicationCmdlet.ConfigurationId">
            <summary>
            <para>
            <para>The ID of each configuration item to be associated with an application.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.AddADSConfigurationItemsToApplicationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.AssociateConfigurationItemsToApplicationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.AddADSConfigurationItemsToApplicationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApplicationConfigurationId parameter.
            The -PassThru parameter is deprecated, use -Select '^ApplicationConfigurationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.AddADSConfigurationItemsToApplicationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.GetADSAgentCmdlet">
            <summary>
            Lists agents or connectors as specified by ID or other filters. All agents/connectors
            associated with your user account can be listed if you call <code>DescribeAgents</code>
            as is without passing any parameters.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSAgentCmdlet.AgentId">
            <summary>
            <para>
            <para>The agent or the Connector IDs for which you want information. If you specify no IDs,
            the system returns information about all agents/Connectors associated with your AWS
            user account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSAgentCmdlet.Filter">
            <summary>
            <para>
            <para>You can filter the request using various logical operators and a <i>key</i>-<i>value</i>
            format. For example: </para><para><code>{"key": "collectionStatus", "value": "STARTED"}</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSAgentCmdlet.MaxResult">
            <summary>
            <para>
            <para>The total number of agents/Connectors to return in a single page of output. The maximum
            value is 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSAgentCmdlet.NextToken">
            <summary>
            <para>
            <para>Token to retrieve the next set of results. For example, if you previously specified
            100 IDs for <code>DescribeAgentsRequest$agentIds</code> but set <code>DescribeAgentsRequest$maxResults</code>
            to 10, you received a set of 10 results along with a token. Use that token in this
            query to get the next set of 10.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSAgentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AgentsInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.DescribeAgentsResponse).
            Specifying the name of a property of type Amazon.ApplicationDiscoveryService.Model.DescribeAgentsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSAgentCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.GetADSConfigurationCmdlet">
            <summary>
            Retrieves attributes for a list of configuration item IDs.
            
             <note><para>
            All of the supplied IDs must be for the same asset type from one of the following:
            </para><ul><li><para>
            server
            </para></li><li><para>
            application
            </para></li><li><para>
            process
            </para></li><li><para>
            connection
            </para></li></ul><para>
            Output fields are specific to the asset type specified. For example, the output for
            a <i>server</i> configuration item includes a list of attributes about the server,
            such as host name, operating system, number of network cards, etc.
            </para><para>
            For a complete list of outputs for each asset type, see <a href="https://docs.aws.amazon.com/application-discovery/latest/userguide/discovery-api-queries.html#DescribeConfigurations">Using
            the DescribeConfigurations Action</a> in the <i>AWS Application Discovery Service
            User Guide</i>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSConfigurationCmdlet.ConfigurationId">
            <summary>
            <para>
            <para>One or more configuration IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Configurations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.DescribeConfigurationsResponse).
            Specifying the name of a property of type Amazon.ApplicationDiscoveryService.Model.DescribeConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConfigurationId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConfigurationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.GetADSConfigurationListCmdlet">
            <summary>
            Retrieves a list of configuration items as specified by the value passed to the required
            parameter <code>configurationType</code>. Optional filtering may be applied to refine
            search results.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSConfigurationListCmdlet.ConfigurationType">
            <summary>
            <para>
            <para>A valid configuration identified by Application Discovery Service. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSConfigurationListCmdlet.Filter">
            <summary>
            <para>
            <para>You can filter the request using various logical operators and a <i>key</i>-<i>value</i>
            format. For example: </para><para><code>{"key": "serverType", "value": "webServer"}</code></para><para>For a complete list of filter options and guidance about using them with this action,
            see <a href="https://docs.aws.amazon.com/application-discovery/latest/userguide/discovery-api-queries.html#ListConfigurations">Using
            the ListConfigurations Action</a> in the <i>AWS Application Discovery Service User
            Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSConfigurationListCmdlet.OrderBy">
            <summary>
            <para>
            <para>Certain filter criteria return output that can be sorted in ascending or descending
            order. For a list of output characteristics for each filter, see <a href="https://docs.aws.amazon.com/application-discovery/latest/userguide/discovery-api-queries.html#ListConfigurations">Using
            the ListConfigurations Action</a> in the <i>AWS Application Discovery Service User
            Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSConfigurationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The total number of items to return. The maximum value is 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSConfigurationListCmdlet.NextToken">
            <summary>
            <para>
            <para>Token to retrieve the next set of results. For example, if a previous call to ListConfigurations
            returned 100 items, but you set <code>ListConfigurationsRequest$maxResults</code>
            to 10, you received a set of 10 results along with a token. Use that token in this
            query to get the next set of 10.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSConfigurationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Configurations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.ListConfigurationsResponse).
            Specifying the name of a property of type Amazon.ApplicationDiscoveryService.Model.ListConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSConfigurationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.GetADSContinuousExportCmdlet">
            <summary>
            Lists exports as specified by ID. All continuous exports associated with your user
            account can be listed if you call <code>DescribeContinuousExports</code> as is without
            passing any parameters.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSContinuousExportCmdlet.ExportId">
            <summary>
            <para>
            <para>The unique IDs assigned to the exports.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSContinuousExportCmdlet.MaxResult">
            <summary>
            <para>
            <para>A number between 1 and 100 specifying the maximum number of continuous export descriptions
            returned.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSContinuousExportCmdlet.NextToken">
            <summary>
            <para>
            <para>The token from the previous call to <code>DescribeExportTasks</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSContinuousExportCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Descriptions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.DescribeContinuousExportsResponse).
            Specifying the name of a property of type Amazon.ApplicationDiscoveryService.Model.DescribeContinuousExportsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSContinuousExportCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExportId parameter.
            The -PassThru parameter is deprecated, use -Select '^ExportId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSContinuousExportCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.GetADSDiscoverySummaryCmdlet">
            <summary>
            Retrieves a short summary of discovered assets.
            
             
            <para>
            This API operation takes no request parameters and is called as is at the command
            prompt as shown in the example.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSDiscoverySummaryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.GetDiscoverySummaryResponse).
            Specifying the name of a property of type Amazon.ApplicationDiscoveryService.Model.GetDiscoverySummaryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.GetADSExportConfigurationCmdlet">
            <summary>
            <code>DescribeExportConfigurations</code> is deprecated. Use <a href="https://docs.aws.amazon.com/application-discovery/latest/APIReference/API_DescribeExportTasks.html">DescribeImportTasks</a>,
            instead.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.<br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSExportConfigurationCmdlet.ExportId">
            <summary>
            <para>
            <para>A list of continuous export IDs to search for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSExportConfigurationCmdlet.MaxResult">
            <summary>
            <para>
            <para>A number between 1 and 100 specifying the maximum number of continuous export descriptions
            returned.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSExportConfigurationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token from the previous call to describe-export-tasks.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSExportConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ExportsInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.DescribeExportConfigurationsResponse).
            Specifying the name of a property of type Amazon.ApplicationDiscoveryService.Model.DescribeExportConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSExportConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExportId parameter.
            The -PassThru parameter is deprecated, use -Select '^ExportId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSExportConfigurationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.GetADSExportConfigurationsIdCmdlet">
            <summary>
            Deprecated. Use <code>StartExportTask</code> instead.
            
             
            <para>
            Exports all discovered configuration data to an Amazon S3 bucket or an application
            that enables you to view and evaluate the data. Data includes tags and tag associations,
            processes, connections, servers, and system performance. This API returns an export
            ID that you can query using the <i>DescribeExportConfigurations</i> API. The system
            imposes a limit of two configuration exports in six hours.
            </para><br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSExportConfigurationsIdCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ExportId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.ExportConfigurationsResponse).
            Specifying the name of a property of type Amazon.ApplicationDiscoveryService.Model.ExportConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.GetADSExportTaskCmdlet">
            <summary>
            Retrieve status of one or more export tasks. You can retrieve the status of up to
            100 export tasks.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSExportTaskCmdlet.ExportId">
            <summary>
            <para>
            <para>One or more unique identifiers used to query the status of an export request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSExportTaskCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters.</para><ul><li><para><code>AgentId</code> - ID of the agent whose collected data will be exported</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSExportTaskCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of volume results returned by <code>DescribeExportTasks</code>
            in paginated output. When this parameter is used, <code>DescribeExportTasks</code>
            only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSExportTaskCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>nextToken</code> value returned from a previous paginated <code>DescribeExportTasks</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. This value is null when there are no more
            results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSExportTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ExportsInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.DescribeExportTasksResponse).
            Specifying the name of a property of type Amazon.ApplicationDiscoveryService.Model.DescribeExportTasksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSExportTaskCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.GetADSImportTaskCmdlet">
            <summary>
            Returns an array of import tasks for your account, including status information, times,
            IDs, the Amazon S3 Object URL for the import file, and more.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSImportTaskCmdlet.Filter">
            <summary>
            <para>
            <para>An array of name-value pairs that you provide to filter the results for the <code>DescribeImportTask</code>
            request to a specific subset of results. Currently, wildcard values aren't supported
            for filters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSImportTaskCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results that you want this request to return, up to 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSImportTaskCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to request a specific page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSImportTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tasks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.DescribeImportTasksResponse).
            Specifying the name of a property of type Amazon.ApplicationDiscoveryService.Model.DescribeImportTasksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSImportTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Filter parameter.
            The -PassThru parameter is deprecated, use -Select '^Filter' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSImportTaskCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.GetADSServerNeighborListCmdlet">
            <summary>
            Retrieves a list of servers that are one network hop away from a specified server.<br/><br/>In the AWS.Tools.ApplicationDiscoveryService module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSServerNeighborListCmdlet.ConfigurationId">
            <summary>
            <para>
            <para>Configuration ID of the server for which neighbors are being listed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSServerNeighborListCmdlet.NeighborConfigurationId">
            <summary>
            <para>
            <para>List of configuration IDs to test for one-hop-away.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSServerNeighborListCmdlet.PortInformationNeeded">
            <summary>
            <para>
            <para>Flag to indicate if port and protocol information is needed as part of the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSServerNeighborListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of results to return in a single page of output.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSServerNeighborListCmdlet.NextToken">
            <summary>
            <para>
            <para>Token to retrieve the next set of results. For example, if you previously specified
            100 IDs for <code>ListServerNeighborsRequest$neighborConfigurationIds</code> but set
            <code>ListServerNeighborsRequest$maxResults</code> to 10, you received a set of 10
            results along with a token. Use that token in this query to get the next set of 10.</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.ApplicationDiscoveryService module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSServerNeighborListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.ListServerNeighborsResponse).
            Specifying the name of a property of type Amazon.ApplicationDiscoveryService.Model.ListServerNeighborsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSServerNeighborListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.GetADSTagCmdlet">
            <summary>
            Retrieves a list of configuration items that have tags as specified by the key-value
            pairs, name and value, passed to the optional parameter <code>filters</code>.
            
             
            <para>
            There are three valid tag filter names:
            </para><ul><li><para>
            tagKey
            </para></li><li><para>
            tagValue
            </para></li><li><para>
            configurationId
            </para></li></ul><para>
            Also, all configuration items associated with your user account that have tags can
            be listed if you call <code>DescribeTags</code> as is without passing any parameters.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSTagCmdlet.Filter">
            <summary>
            <para>
            <para>You can filter the list using a <i>key</i>-<i>value</i> format. You can separate these
            items by using logical operators. Allowed filters include <code>tagKey</code>, <code>tagValue</code>,
            and <code>configurationId</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSTagCmdlet.MaxResult">
            <summary>
            <para>
            <para>The total number of items to return in a single page of output. The maximum value
            is 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSTagCmdlet.NextToken">
            <summary>
            <para>
            <para>A token to start the list. Use this token to get the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.DescribeTagsResponse).
            Specifying the name of a property of type Amazon.ApplicationDiscoveryService.Model.DescribeTagsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.GetADSTagCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.NewADSApplicationCmdlet">
            <summary>
            Creates an application with the given name and description.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.NewADSApplicationCmdlet.Description">
            <summary>
            <para>
            <para>Description of the application to be created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.NewADSApplicationCmdlet.Name">
            <summary>
            <para>
            <para>Name of the application to be created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.NewADSApplicationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ConfigurationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.CreateApplicationResponse).
            Specifying the name of a property of type Amazon.ApplicationDiscoveryService.Model.CreateApplicationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.NewADSApplicationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.NewADSApplicationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.NewADSTagCmdlet">
            <summary>
            Creates one or more tags for configuration items. Tags are metadata that help you
            categorize IT assets. This API accepts a list of multiple configuration items.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.NewADSTagCmdlet.ConfigurationId">
            <summary>
            <para>
            <para>A list of configuration items that you want to tag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.NewADSTagCmdlet.Tag">
            <summary>
            <para>
            <para>Tags that you want to associate with one or more configuration items. Specify the
            tags that you want to create in a <i>key</i>-<i>value</i> format. For example:</para><para><code>{"key": "serverType", "value": "webServer"}</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.NewADSTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.CreateTagsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.NewADSTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConfigurationId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConfigurationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.NewADSTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.RemoveADSApplicationCmdlet">
            <summary>
            Deletes a list of applications and their associations with configuration items.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.RemoveADSApplicationCmdlet.ConfigurationId">
            <summary>
            <para>
            <para>Configuration ID of an application to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.RemoveADSApplicationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.DeleteApplicationsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.RemoveADSApplicationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConfigurationId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConfigurationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.RemoveADSApplicationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.RemoveADSConfigurationItemsFromApplicationCmdlet">
            <summary>
            Disassociates one or more configuration items from an application.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.RemoveADSConfigurationItemsFromApplicationCmdlet.ApplicationConfigurationId">
            <summary>
            <para>
            <para>Configuration ID of an application from which each item is disassociated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.RemoveADSConfigurationItemsFromApplicationCmdlet.ConfigurationId">
            <summary>
            <para>
            <para>Configuration ID of each item to be disassociated from an application.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.RemoveADSConfigurationItemsFromApplicationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.DisassociateConfigurationItemsFromApplicationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.RemoveADSConfigurationItemsFromApplicationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ApplicationConfigurationId parameter.
            The -PassThru parameter is deprecated, use -Select '^ApplicationConfigurationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.RemoveADSConfigurationItemsFromApplicationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.RemoveADSImportDataBatchCmdlet">
            <summary>
            Deletes one or more import tasks, each identified by their import ID. Each import
            task has a number of records that can identify servers or applications. 
            
             
            <para>
            AWS Application Discovery Service has built-in matching logic that will identify when
            discovered servers match existing entries that you've previously discovered, the information
            for the already-existing discovered server is updated. When you delete an import task
            that contains records that were used to match, the information in those matched records
            that comes from the deleted records will also be deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.RemoveADSImportDataBatchCmdlet.ImportTaskId">
            <summary>
            <para>
            <para>The IDs for the import tasks that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.RemoveADSImportDataBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Errors'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.BatchDeleteImportDataResponse).
            Specifying the name of a property of type Amazon.ApplicationDiscoveryService.Model.BatchDeleteImportDataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.RemoveADSImportDataBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImportTaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImportTaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.RemoveADSImportDataBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.RemoveADSTagCmdlet">
            <summary>
            Deletes the association between configuration items and one or more tags. This API
            accepts a list of multiple configuration items.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.RemoveADSTagCmdlet.ConfigurationId">
            <summary>
            <para>
            <para>A list of configuration items with tags that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.RemoveADSTagCmdlet.Tag">
            <summary>
            <para>
            <para>Tags that you want to delete from one or more configuration items. Specify the tags
            that you want to delete in a <i>key</i>-<i>value</i> format. For example:</para><para><code>{"key": "serverType", "value": "webServer"}</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.RemoveADSTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.DeleteTagsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.RemoveADSTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConfigurationId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConfigurationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.RemoveADSTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.StartADSContinuousExportCmdlet">
            <summary>
            Start the continuous flow of agent's discovered data into Amazon Athena.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StartADSContinuousExportCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.StartContinuousExportResponse).
            Specifying the name of a property of type Amazon.ApplicationDiscoveryService.Model.StartContinuousExportResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StartADSContinuousExportCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.StartADSDataCollectionByAgentIdCmdlet">
            <summary>
            Instructs the specified agents or connectors to start collecting data.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StartADSDataCollectionByAgentIdCmdlet.AgentId">
            <summary>
            <para>
            <para>The IDs of the agents or connectors from which to start collecting data. If you send
            a request to an agent/connector ID that you do not have permission to contact, according
            to your AWS account, the service does not throw an exception. Instead, it returns
            the error in the <i>Description</i> field. If you send a request to multiple agents/connectors
            and you do not have permission to contact some of those agents/connectors, the system
            does not throw an exception. Instead, the system shows <code>Failed</code> in the
            <i>Description</i> field.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StartADSDataCollectionByAgentIdCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AgentsConfigurationStatus'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.StartDataCollectionByAgentIdsResponse).
            Specifying the name of a property of type Amazon.ApplicationDiscoveryService.Model.StartDataCollectionByAgentIdsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StartADSDataCollectionByAgentIdCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AgentId parameter.
            The -PassThru parameter is deprecated, use -Select '^AgentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StartADSDataCollectionByAgentIdCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.StartADSExportTaskCmdlet">
            <summary>
            Begins the export of discovered data to an S3 bucket.
            
             
            <para>
             If you specify <code>agentIds</code> in a filter, the task exports up to 72 hours
            of detailed data collected by the identified Application Discovery Agent, including
            network, process, and performance details. A time range for exported agent data may
            be set by using <code>startTime</code> and <code>endTime</code>. Export of detailed
            agent data is limited to five concurrently running exports. 
            </para><para>
             If you do not include an <code>agentIds</code> filter, summary data is exported that
            includes both AWS Agentless Discovery Connector data and summary data from AWS Discovery
            Agents. Export of summary data is limited to two exports per day. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StartADSExportTaskCmdlet.EndTime">
            <summary>
            <para>
            <para>The end timestamp for exported data from the single Application Discovery Agent selected
            in the filters. If no value is specified, exported data includes the most recent data
            collected by the agent.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StartADSExportTaskCmdlet.ExportDataFormat">
            <summary>
            <para>
            <para>The file format for the returned export data. Default value is <code>CSV</code>. <b>Note:</b><i>The</i><code>GRAPHML</code><i>option has been deprecated.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StartADSExportTaskCmdlet.Filter">
            <summary>
            <para>
            <para>If a filter is present, it selects the single <code>agentId</code> of the Application
            Discovery Agent for which data is exported. The <code>agentId</code> can be found
            in the results of the <code>DescribeAgents</code> API or CLI. If no filter is present,
            <code>startTime</code> and <code>endTime</code> are ignored and exported data includes
            both Agentless Discovery Connector data and summary data from Application Discovery
            agents. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StartADSExportTaskCmdlet.StartTime">
            <summary>
            <para>
            <para>The start timestamp for exported data from the single Application Discovery Agent
            selected in the filters. If no value is specified, data is exported starting from
            the first data collected by the agent.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StartADSExportTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ExportId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.StartExportTaskResponse).
            Specifying the name of a property of type Amazon.ApplicationDiscoveryService.Model.StartExportTaskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StartADSExportTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExportDataFormat parameter.
            The -PassThru parameter is deprecated, use -Select '^ExportDataFormat' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StartADSExportTaskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.StartADSImportTaskCmdlet">
            <summary>
            Starts an import task, which allows you to import details of your on-premises environment
            directly into AWS Migration Hub without having to use the Application Discovery Service
            (ADS) tools such as the Discovery Connector or Discovery Agent. This gives you the
            option to perform migration assessment and planning directly from your imported data,
            including the ability to group your devices as applications and track their migration
            status.
            
             
            <para>
            To start an import request, do this:
            </para><ol><li><para>
            Download the specially formatted comma separated value (CSV) import template, which
            you can find here: <a href="https://s3-us-west-2.amazonaws.com/templates-7cffcf56-bd96-4b1c-b45b-a5b42f282e46/import_template.csv">https://s3-us-west-2.amazonaws.com/templates-7cffcf56-bd96-4b1c-b45b-a5b42f282e46/import_template.csv</a>.
            </para></li><li><para>
            Fill out the template with your server and application data.
            </para></li><li><para>
            Upload your import file to an Amazon S3 bucket, and make a note of it's Object URL.
            Your import file must be in the CSV format.
            </para></li><li><para>
            Use the console or the <code>StartImportTask</code> command with the AWS CLI or one
            of the AWS SDKs to import the records from your file.
            </para></li></ol><para>
            For more information, including step-by-step procedures, see <a href="https://docs.aws.amazon.com/application-discovery/latest/userguide/discovery-import.html">Migration
            Hub Import</a> in the <i>AWS Application Discovery Service User Guide</i>.
            </para><note><para>
            There are limits to the number of import tasks you can create (and delete) in an AWS
            account. For more information, see <a href="https://docs.aws.amazon.com/application-discovery/latest/userguide/ads_service_limits.html">AWS
            Application Discovery Service Limits</a> in the <i>AWS Application Discovery Service
            User Guide</i>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StartADSImportTaskCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Optional. A unique token that you can provide to prevent the same import request from
            occurring more than once. If you don't provide a token, a token is automatically generated.</para><para>Sending more than one <code>StartImportTask</code> request with the same client request
            token will return information about the original import task with that client request
            token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StartADSImportTaskCmdlet.ImportUrl">
            <summary>
            <para>
            <para>The URL for your import file that you've uploaded to Amazon S3.</para><note><para>If you're using the AWS CLI, this URL is structured as follows: <code>s3://BucketName/ImportFileName.CSV</code></para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StartADSImportTaskCmdlet.Name">
            <summary>
            <para>
            <para>A descriptive name for this request. You can use this name to filter future requests
            related to this import task, such as identifying applications and servers that were
            included in this import task. We recommend that you use a meaningful name for each
            import task.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StartADSImportTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Task'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.StartImportTaskResponse).
            Specifying the name of a property of type Amazon.ApplicationDiscoveryService.Model.StartImportTaskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StartADSImportTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StartADSImportTaskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.StopADSContinuousExportCmdlet">
            <summary>
            Stop the continuous flow of agent's discovered data into Amazon Athena.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StopADSContinuousExportCmdlet.ExportId">
            <summary>
            <para>
            <para>The unique ID assigned to this export.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StopADSContinuousExportCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.StopContinuousExportResponse).
            Specifying the name of a property of type Amazon.ApplicationDiscoveryService.Model.StopContinuousExportResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StopADSContinuousExportCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExportId parameter.
            The -PassThru parameter is deprecated, use -Select '^ExportId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StopADSContinuousExportCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.StopADSDataCollectionByAgentIdCmdlet">
            <summary>
            Instructs the specified agents or connectors to stop collecting data.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StopADSDataCollectionByAgentIdCmdlet.AgentId">
            <summary>
            <para>
            <para>The IDs of the agents or connectors from which to stop collecting data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StopADSDataCollectionByAgentIdCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AgentsConfigurationStatus'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.StopDataCollectionByAgentIdsResponse).
            Specifying the name of a property of type Amazon.ApplicationDiscoveryService.Model.StopDataCollectionByAgentIdsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StopADSDataCollectionByAgentIdCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AgentId parameter.
            The -PassThru parameter is deprecated, use -Select '^AgentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.StopADSDataCollectionByAgentIdCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ADS.UpdateADSApplicationCmdlet">
            <summary>
            Updates metadata about an application.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.UpdateADSApplicationCmdlet.ConfigurationId">
            <summary>
            <para>
            <para>Configuration ID of the application to be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.UpdateADSApplicationCmdlet.Description">
            <summary>
            <para>
            <para>New description of the application to be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.UpdateADSApplicationCmdlet.Name">
            <summary>
            <para>
            <para>New name of the application to be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.UpdateADSApplicationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ApplicationDiscoveryService.Model.UpdateApplicationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.UpdateADSApplicationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConfigurationId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConfigurationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ADS.UpdateADSApplicationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
