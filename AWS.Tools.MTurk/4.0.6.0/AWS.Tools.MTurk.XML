<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.MTurk</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.AddMTRQualificationToWorkerCmdlet">
            <summary>
            The <code>AssociateQualificationWithWorker</code> operation gives a Worker a Qualification.
            <code>AssociateQualificationWithWorker</code> does not require that the Worker submit
            a Qualification request. It gives the Qualification directly to the Worker. 
            
             
            <para>
             You can only assign a Qualification of a Qualification type that you created (using
            the <code>CreateQualificationType</code> operation). 
            </para><note><para>
             Note: <code>AssociateQualificationWithWorker</code> does not affect any pending Qualification
            requests for the Qualification by the Worker. If you assign a Qualification to a Worker,
            then later grant a Qualification request made by the Worker, the granting of the request
            may modify the Qualification score. To resolve a pending Qualification request without
            affecting the Qualification the Worker already has, reject the request with the <code>RejectQualificationRequest</code>
            operation. 
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.AddMTRQualificationToWorkerCmdlet.IntegerValue">
            <summary>
            <para>
            <para>The value of the Qualification to assign.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.AddMTRQualificationToWorkerCmdlet.QualificationTypeId">
            <summary>
            <para>
            <para>The ID of the Qualification type to use for the assigned Qualification.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.AddMTRQualificationToWorkerCmdlet.SendNotification">
            <summary>
            <para>
            <para> Specifies whether to send a notification email message to the Worker saying that
            the qualification was assigned to the Worker. Note: this is true by default. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.AddMTRQualificationToWorkerCmdlet.WorkerId">
            <summary>
            <para>
            <para> The ID of the Worker to whom the Qualification is being assigned. Worker IDs are
            included with submitted HIT assignments and Qualification requests. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.AddMTRQualificationToWorkerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.AssociateQualificationWithWorkerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.AddMTRQualificationToWorkerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkerId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.AddMTRQualificationToWorkerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.ApproveMTRAssignmentCmdlet">
            <summary>
            The <code>ApproveAssignment</code> operation approves the results of a completed
            assignment. 
            
             
            <para>
             Approving an assignment initiates two payments from the Requester's Amazon.com account
            
            </para><ul><li><para>
             The Worker who submitted the results is paid the reward specified in the HIT. 
            </para></li><li><para>
             Amazon Mechanical Turk fees are debited. 
            </para></li></ul><para>
             If the Requester's account does not have adequate funds for these payments, the call
            to ApproveAssignment returns an exception, and the approval is not processed. You
            can include an optional feedback message with the approval, which the Worker can see
            in the Status section of the web site. 
            </para><para>
             You can also call this operation for assignments that were previous rejected and
            approve them by explicitly overriding the previous rejection. This only works on rejected
            assignments that were submitted within the previous 30 days and only if the assignment's
            related HIT has not been deleted. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.ApproveMTRAssignmentCmdlet.AssignmentId">
            <summary>
            <para>
            <para> The ID of the assignment. The assignment must correspond to a HIT created by the
            Requester. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.ApproveMTRAssignmentCmdlet.OverrideRejection">
            <summary>
            <para>
            <para> A flag indicating that an assignment should be approved even if it was previously
            rejected. Defaults to <code>False</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.ApproveMTRAssignmentCmdlet.RequesterFeedback">
            <summary>
            <para>
            <para> A message for the Worker, which the Worker can see in the Status section of the web
            site. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.ApproveMTRAssignmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.ApproveAssignmentResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.ApproveMTRAssignmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssignmentId parameter.
            The -PassThru parameter is deprecated, use -Select '^AssignmentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.ApproveMTRAssignmentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.DenyMTRAssignmentCmdlet">
            <summary>
            The <code>RejectAssignment</code> operation rejects the results of a completed assignment.
            
            
             
            <para>
             You can include an optional feedback message with the rejection, which the Worker
            can see in the Status section of the web site. When you include a feedback message
            with the rejection, it helps the Worker understand why the assignment was rejected,
            and can improve the quality of the results the Worker submits in the future. 
            </para><para>
             Only the Requester who created the HIT can reject an assignment for the HIT. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.DenyMTRAssignmentCmdlet.AssignmentId">
            <summary>
            <para>
            <para> The ID of the assignment. The assignment must correspond to a HIT created by the
            Requester. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.DenyMTRAssignmentCmdlet.RequesterFeedback">
            <summary>
            <para>
            <para> A message for the Worker, which the Worker can see in the Status section of the web
            site. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.DenyMTRAssignmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.RejectAssignmentResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.DenyMTRAssignmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssignmentId parameter.
            The -PassThru parameter is deprecated, use -Select '^AssignmentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.DenyMTRAssignmentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.DenyMTRQualificationRequestCmdlet">
            <summary>
            The <code>RejectQualificationRequest</code> operation rejects a user's request for
            a Qualification. 
            
             
            <para>
             You can provide a text message explaining why the request was rejected. The Worker
            who made the request can see this message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.DenyMTRQualificationRequestCmdlet.QualificationRequestId">
            <summary>
            <para>
            <para> The ID of the Qualification request, as returned by the <code>ListQualificationRequests</code>
            operation. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.DenyMTRQualificationRequestCmdlet.Reason">
            <summary>
            <para>
            <para>A text message explaining why the request was rejected, to be shown to the Worker
            who made the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.DenyMTRQualificationRequestCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.RejectQualificationRequestResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.DenyMTRQualificationRequestCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QualificationRequestId parameter.
            The -PassThru parameter is deprecated, use -Select '^QualificationRequestId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.DenyMTRQualificationRequestCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.GetMTRAccountBalanceCmdlet">
            <summary>
            The <code>GetAccountBalance</code> operation retrieves the amount of money in your
            Amazon Mechanical Turk account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRAccountBalanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.GetAccountBalanceResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.GetAccountBalanceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.GetMTRAssignmentCmdlet">
            <summary>
            The <code>GetAssignment</code> operation retrieves the details of the specified Assignment.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRAssignmentCmdlet.AssignmentId">
            <summary>
            <para>
            <para>The ID of the Assignment to be retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRAssignmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.GetAssignmentResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.GetAssignmentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRAssignmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssignmentId parameter.
            The -PassThru parameter is deprecated, use -Select '^AssignmentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.GetMTRBonusPaymentListCmdlet">
            <summary>
            The <code>ListBonusPayments</code> operation retrieves the amounts of bonuses you
            have paid to Workers for a given HIT or assignment.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRBonusPaymentListCmdlet.AssignmentId">
            <summary>
            <para>
            <para>The ID of the assignment associated with the bonus payments to retrieve. If specified,
            only bonus payments for the given assignment are returned. Either the HITId parameter
            or the AssignmentId parameter must be specified</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRBonusPaymentListCmdlet.HITId">
            <summary>
            <para>
            <para>The ID of the HIT associated with the bonus payments to retrieve. If not specified,
            all bonus payments for all assignments for the given HIT are returned. Either the
            HITId parameter or the AssignmentId parameter must be specified</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRBonusPaymentListCmdlet.MaxResult">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRBonusPaymentListCmdlet.NextToken">
            <summary>
            <para>
            <para>Pagination token</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRBonusPaymentListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BonusPayments'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.ListBonusPaymentsResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.ListBonusPaymentsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRBonusPaymentListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HITId parameter.
            The -PassThru parameter is deprecated, use -Select '^HITId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRBonusPaymentListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.GetMTRFileUploadURLCmdlet">
            <summary>
            The <code>GetFileUploadURL</code> operation generates and returns a temporary URL.
            You use the temporary URL to retrieve a file uploaded by a Worker as an answer to
            a FileUploadAnswer question for a HIT. The temporary URL is generated the instant
            the GetFileUploadURL operation is called, and is valid for 60 seconds. You can get
            a temporary file upload URL any time until the HIT is disposed. After the HIT is disposed,
            any uploaded files are deleted, and cannot be retrieved. Pending Deprecation on December
            12, 2017. The Answer Specification structure will no longer support the <code>FileUploadAnswer</code>
            element to be used for the QuestionForm data structure. Instead, we recommend that
            Requesters who want to create HITs asking Workers to upload files to use Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRFileUploadURLCmdlet.AssignmentId">
            <summary>
            <para>
            <para>The ID of the assignment that contains the question with a FileUploadAnswer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRFileUploadURLCmdlet.QuestionIdentifier">
            <summary>
            <para>
            <para>The identifier of the question with a FileUploadAnswer, as specified in the QuestionForm
            of the HIT.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRFileUploadURLCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FileUploadURL'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.GetFileUploadURLResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.GetFileUploadURLResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITCmdlet">
            <summary>
            The <code>GetHIT</code> operation retrieves the details of the specified HIT.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITCmdlet.HITId">
            <summary>
            <para>
            <para>The ID of the HIT to be retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HIT'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.GetHITResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.GetHITResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HITId parameter.
            The -PassThru parameter is deprecated, use -Select '^HITId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITAssignmentListCmdlet">
            <summary>
            The <code>ListAssignmentsForHIT</code> operation retrieves completed assignments
            for a HIT. You can use this operation to retrieve the results for a HIT. 
            
             
            <para>
             You can get assignments for a HIT at any time, even if the HIT is not yet Reviewable.
            If a HIT requested multiple assignments, and has received some results but has not
            yet become Reviewable, you can still retrieve the partial results with this operation.
            
            </para><para>
             Use the AssignmentStatus parameter to control which set of assignments for a HIT
            are returned. The ListAssignmentsForHIT operation can return submitted assignments
            awaiting approval, or it can return assignments that have already been approved or
            rejected. You can set AssignmentStatus=Approved,Rejected to get assignments that have
            already been approved and rejected together in one result set. 
            </para><para>
             Only the Requester who created the HIT can retrieve the assignments for that HIT.
            
            </para><para>
             Results are sorted and divided into numbered pages and the operation returns a single
            page of results. You can use the parameters of the operation to control sorting and
            pagination. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITAssignmentListCmdlet.AssignmentStatus">
            <summary>
            <para>
            <para>The status of the assignments to return: Submitted | Approved | Rejected</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITAssignmentListCmdlet.HITId">
            <summary>
            <para>
            <para>The ID of the HIT.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITAssignmentListCmdlet.MaxResult">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITAssignmentListCmdlet.NextToken">
            <summary>
            <para>
            <para>Pagination token</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITAssignmentListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Assignments'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.ListAssignmentsForHITResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.ListAssignmentsForHITResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITAssignmentListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITListCmdlet">
            <summary>
            The <code>ListHITs</code> operation returns all of a Requester's HITs. The operation
            returns HITs of any status, except for HITs that have been deleted of with the DeleteHIT
            operation or that have been auto-deleted.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITListCmdlet.MaxResult">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITListCmdlet.NextToken">
            <summary>
            <para>
            <para>Pagination token</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HITs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.ListHITsResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.ListHITsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITListForQualificationTypeCmdlet">
            <summary>
            The <code>ListHITsForQualificationType</code> operation returns the HITs that use
            the given Qualification type for a Qualification requirement. The operation returns
            HITs of any status, except for HITs that have been deleted with the <code>DeleteHIT</code>
            operation or that have been auto-deleted.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITListForQualificationTypeCmdlet.QualificationTypeId">
            <summary>
            <para>
            <para> The ID of the Qualification type to use when querying HITs. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITListForQualificationTypeCmdlet.MaxResult">
            <summary>
            <para>
            <para> Limit the number of results returned. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITListForQualificationTypeCmdlet.NextToken">
            <summary>
            <para>
            <para>Pagination Token</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITListForQualificationTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HITs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.ListHITsForQualificationTypeResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.ListHITsForQualificationTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITListForQualificationTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QualificationTypeId parameter.
            The -PassThru parameter is deprecated, use -Select '^QualificationTypeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRHITListForQualificationTypeCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationRequestListCmdlet">
            <summary>
            The <code>ListQualificationRequests</code> operation retrieves requests for Qualifications
            of a particular Qualification type. The owner of the Qualification type calls this
            operation to poll for pending requests, and accepts them using the AcceptQualification
            operation.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationRequestListCmdlet.QualificationTypeId">
            <summary>
            <para>
            <para>The ID of the QualificationType.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationRequestListCmdlet.MaxResult">
            <summary>
            <para>
            <para> The maximum number of results to return in a single call. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationRequestListCmdlet.NextToken">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationRequestListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'QualificationRequests'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.ListQualificationRequestsResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.ListQualificationRequestsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationRequestListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QualificationTypeId parameter.
            The -PassThru parameter is deprecated, use -Select '^QualificationTypeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationRequestListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationScoreCmdlet">
            <summary>
            The <code>GetQualificationScore</code> operation returns the value of a Worker's
            Qualification for a given Qualification type. 
            
             
            <para>
             To get a Worker's Qualification, you must know the Worker's ID. The Worker's ID is
            included in the assignment data returned by the <code>ListAssignmentsForHIT</code>
            operation. 
            </para><para>
            Only the owner of a Qualification type can query the value of a Worker's Qualification
            of that type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationScoreCmdlet.QualificationTypeId">
            <summary>
            <para>
            <para>The ID of the QualificationType.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationScoreCmdlet.WorkerId">
            <summary>
            <para>
            <para>The ID of the Worker whose Qualification is being updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationScoreCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Qualification'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.GetQualificationScoreResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.GetQualificationScoreResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationScoreCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkerId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationTypeCmdlet">
            <summary>
            The <code>GetQualificationType</code>operation retrieves information about a Qualification
            type using its ID.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationTypeCmdlet.QualificationTypeId">
            <summary>
            <para>
            <para>The ID of the QualificationType.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'QualificationType'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.GetQualificationTypeResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.GetQualificationTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QualificationTypeId parameter.
            The -PassThru parameter is deprecated, use -Select '^QualificationTypeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationTypeListCmdlet">
            <summary>
            The <code>ListQualificationTypes</code> operation returns a list of Qualification
            types, filtered by an optional search term.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationTypeListCmdlet.MustBeOwnedByCaller">
            <summary>
            <para>
            <para> Specifies that only Qualification types that the Requester created are returned.
            If false, the operation returns all Qualification types. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationTypeListCmdlet.MustBeRequestable">
            <summary>
            <para>
            <para>Specifies that only Qualification types that a user can request through the Amazon
            Mechanical Turk web site, such as by taking a Qualification test, are returned as
            results of the search. Some Qualification types, such as those assigned automatically
            by the system, cannot be requested directly by users. If false, all Qualification
            types, including those managed by the system, are considered. Valid values are True
            | False. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationTypeListCmdlet.Query">
            <summary>
            <para>
            <para> A text query against all of the searchable attributes of Qualification types. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationTypeListCmdlet.MaxResult">
            <summary>
            <para>
            <para> The maximum number of results to return in a single call. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationTypeListCmdlet.NextToken">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationTypeListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'QualificationTypes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.ListQualificationTypesResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.ListQualificationTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRQualificationTypeListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.GetMTRReviewableHITListCmdlet">
            <summary>
            The <code>ListReviewableHITs</code> operation retrieves the HITs with Status equal
            to Reviewable or Status equal to Reviewing that belong to the Requester calling the
            operation.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRReviewableHITListCmdlet.HITTypeId">
            <summary>
            <para>
            <para> The ID of the HIT type of the HITs to consider for the query. If not specified, all
            HITs for the Reviewer are considered </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRReviewableHITListCmdlet.Status">
            <summary>
            <para>
            <para> Can be either <code>Reviewable</code> or <code>Reviewing</code>. Reviewable is the
            default value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRReviewableHITListCmdlet.MaxResult">
            <summary>
            <para>
            <para> Limit the number of results returned. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRReviewableHITListCmdlet.NextToken">
            <summary>
            <para>
            <para>Pagination Token</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRReviewableHITListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HITs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.ListReviewableHITsResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.ListReviewableHITsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRReviewableHITListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.GetMTRReviewPolicyResultListCmdlet">
            <summary>
            The <code>ListReviewPolicyResultsForHIT</code> operation retrieves the computed results
            and the actions taken in the course of executing your Review Policies for a given
            HIT. For information about how to specify Review Policies when you call CreateHIT,
            see Review Policies. The ListReviewPolicyResultsForHIT operation can return results
            for both Assignment-level and HIT-level review results.<br/><br/>In the AWS.Tools.MTurk module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRReviewPolicyResultListCmdlet.HITId">
            <summary>
            <para>
            <para>The unique identifier of the HIT to retrieve review results for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRReviewPolicyResultListCmdlet.PolicyLevel">
            <summary>
            <para>
            <para> The Policy Level(s) to retrieve review results for - HIT or Assignment. If omitted,
            the default behavior is to retrieve all data for both policy levels. For a list of
            all the described policies, see Review Policies. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRReviewPolicyResultListCmdlet.RetrieveAction">
            <summary>
            <para>
            <para> Specify if the operation should retrieve a list of the actions taken executing the
            Review Policies and their outcomes. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRReviewPolicyResultListCmdlet.RetrieveResult">
            <summary>
            <para>
            <para> Specify if the operation should retrieve a list of the results computed by the Review
            Policies. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRReviewPolicyResultListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Limit the number of results returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRReviewPolicyResultListCmdlet.NextToken">
            <summary>
            <para>
            <para>Pagination token</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.MTurk module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRReviewPolicyResultListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.ListReviewPolicyResultsForHITResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.ListReviewPolicyResultsForHITResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRReviewPolicyResultListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.GetMTRWorkerBlockListCmdlet">
            <summary>
            The <code>ListWorkersBlocks</code> operation retrieves a list of Workers who are blocked
            from working on your HITs.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRWorkerBlockListCmdlet.MaxResult">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRWorkerBlockListCmdlet.NextToken">
            <summary>
            <para>
            <para>Pagination token</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRWorkerBlockListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WorkerBlocks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.ListWorkerBlocksResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.ListWorkerBlocksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRWorkerBlockListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.GetMTRWorkersWithQualificationTypeCmdlet">
            <summary>
            The <code>ListWorkersWithQualificationType</code> operation returns all of the Workers
            that have been associated with a given Qualification type.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRWorkersWithQualificationTypeCmdlet.QualificationTypeId">
            <summary>
            <para>
            <para>The ID of the Qualification type of the Qualifications to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRWorkersWithQualificationTypeCmdlet.Status">
            <summary>
            <para>
            <para> The status of the Qualifications to return. Can be <code>Granted | Revoked</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRWorkersWithQualificationTypeCmdlet.MaxResult">
            <summary>
            <para>
            <para> Limit the number of results returned. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRWorkersWithQualificationTypeCmdlet.NextToken">
            <summary>
            <para>
            <para>Pagination Token</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRWorkersWithQualificationTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Qualifications'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.ListWorkersWithQualificationTypeResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.ListWorkersWithQualificationTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GetMTRWorkersWithQualificationTypeCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.GrantMTRQualificationRequestCmdlet">
            <summary>
            The <code>AcceptQualificationRequest</code> operation approves a Worker's request
            for a Qualification. 
            
             
            <para>
             Only the owner of the Qualification type can grant a Qualification request for that
            type. 
            </para><para>
             A successful request for the <code>AcceptQualificationRequest</code> operation returns
            with no errors and an empty body. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GrantMTRQualificationRequestCmdlet.IntegerValue">
            <summary>
            <para>
            <para> The value of the Qualification. You can omit this value if you are using the presence
            or absence of the Qualification as the basis for a HIT requirement. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GrantMTRQualificationRequestCmdlet.QualificationRequestId">
            <summary>
            <para>
            <para>The ID of the Qualification request, as returned by the <code>GetQualificationRequests</code>
            operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GrantMTRQualificationRequestCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.AcceptQualificationRequestResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GrantMTRQualificationRequestCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QualificationRequestId parameter.
            The -PassThru parameter is deprecated, use -Select '^QualificationRequestId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.GrantMTRQualificationRequestCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.NewMTRAdditionalAssignmentsForHITCmdlet">
            <summary>
            The <code>CreateAdditionalAssignmentsForHIT</code> operation increases the maximum
            number of assignments of an existing HIT. 
            
             
            <para>
             To extend the maximum number of assignments, specify the number of additional assignments.
            </para><note><ul><li><para>
            HITs created with fewer than 10 assignments cannot be extended to have 10 or more
            assignments. Attempting to add assignments in a way that brings the total number of
            assignments for a HIT from fewer than 10 assignments to 10 or more assignments will
            result in an <code>AWS.MechanicalTurk.InvalidMaximumAssignmentsIncrease</code> exception.
            </para></li><li><para>
            HITs that were created before July 22, 2015 cannot be extended. Attempting to extend
            HITs that were created before July 22, 2015 will result in an <code>AWS.MechanicalTurk.HITTooOldForExtension</code>
            exception. 
            </para></li></ul></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRAdditionalAssignmentsForHITCmdlet.HITId">
            <summary>
            <para>
            <para>The ID of the HIT to extend.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRAdditionalAssignmentsForHITCmdlet.NumberOfAdditionalAssignment">
            <summary>
            <para>
            <para>The number of additional assignments to request for this HIT.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRAdditionalAssignmentsForHITCmdlet.UniqueRequestToken">
            <summary>
            <para>
            <para> A unique identifier for this request, which allows you to retry the call on error
            without extending the HIT multiple times. This is useful in cases such as network
            timeouts where it is unclear whether or not the call succeeded on the server. If the
            extend HIT already exists in the system from a previous call using the same <code>UniqueRequestToken</code>,
            subsequent calls will return an error with a message containing the request ID. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRAdditionalAssignmentsForHITCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.CreateAdditionalAssignmentsForHITResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRAdditionalAssignmentsForHITCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HITId parameter.
            The -PassThru parameter is deprecated, use -Select '^HITId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRAdditionalAssignmentsForHITCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet">
            <summary>
            The <code>CreateHIT</code> operation creates a new Human Intelligence Task (HIT).
            The new HIT is made available for Workers to find and accept on the Amazon Mechanical
            Turk website. 
            
             
            <para>
             This operation allows you to specify a new HIT by passing in values for the properties
            of the HIT, such as its title, reward amount and number of assignments. When you pass
            these values to <code>CreateHIT</code>, a new HIT is created for you, with a new <code>HITTypeID</code>.
            The HITTypeID can be used to create additional HITs in the future without needing
            to specify common parameters such as the title, description and reward amount each
            time.
            </para><para>
             An alternative way to create HITs is to first generate a HITTypeID using the <code>CreateHITType</code>
            operation and then call the <code>CreateHITWithHITType</code> operation. This is the
            recommended best practice for Requesters who are creating large numbers of HITs. 
            </para><para>
            CreateHIT also supports several ways to provide question data: by providing a value
            for the <code>Question</code> parameter that fully specifies the contents of the HIT,
            or by providing a <code>HitLayoutId</code> and associated <code>HitLayoutParameters</code>.
            
            </para><note><para>
             If a HIT is created with 10 or more maximum assignments, there is an additional fee.
            For more information, see <a href="https://requester.mturk.com/pricing">Amazon Mechanical
            Turk Pricing</a>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.AssignmentDurationInSecond">
            <summary>
            <para>
            <para> The amount of time, in seconds, that a Worker has to complete the HIT after accepting
            it. If a Worker does not complete the assignment within the specified duration, the
            assignment is considered abandoned. If the HIT is still active (that is, its lifetime
            has not elapsed), the assignment becomes available for other users to find and accept.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.AutoApprovalDelayInSecond">
            <summary>
            <para>
            <para> The number of seconds after an assignment for the HIT has been submitted, after which
            the assignment is considered Approved automatically unless the Requester explicitly
            rejects it. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.Description">
            <summary>
            <para>
            <para> A general description of the HIT. A description includes detailed information about
            the kind of task the HIT contains. On the Amazon Mechanical Turk web site, the HIT
            description appears in the expanded view of search results, and in the HIT and assignment
            screens. A good description gives the user enough information to evaluate the HIT
            before accepting it. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.HITLayoutId">
            <summary>
            <para>
            <para> The HITLayoutId allows you to use a pre-existing HIT design with placeholder values
            and create an additional HIT by providing those values as HITLayoutParameters. </para><para> Constraints: Either a Question parameter or a HITLayoutId parameter must be provided.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.HITLayoutParameter">
            <summary>
            <para>
            <para> If the HITLayoutId is provided, any placeholder values must be filled in with values
            using the HITLayoutParameter structure. For more information, see HITLayout. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.Keyword">
            <summary>
            <para>
            <para> One or more words or phrases that describe the HIT, separated by commas. These words
            are used in searches to find HITs. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.LifetimeInSecond">
            <summary>
            <para>
            <para> An amount of time, in seconds, after which the HIT is no longer available for users
            to accept. After the lifetime of the HIT elapses, the HIT no longer appears in HIT
            searches, even if not all of the assignments for the HIT have been accepted. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.MaxAssignment">
            <summary>
            <para>
            <para> The number of times the HIT can be accepted and completed before the HIT becomes
            unavailable. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.AssignmentReviewPolicy_Parameter">
            <summary>
            <para>
            <para>Name of the parameter from the Review policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.HITReviewPolicy_Parameter">
            <summary>
            <para>
            <para>Name of the parameter from the Review policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.AssignmentReviewPolicy_PolicyName">
            <summary>
            <para>
            <para> Name of a Review Policy: SimplePlurality/2011-09-01 or ScoreMyKnownAnswers/2011-09-01
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.HITReviewPolicy_PolicyName">
            <summary>
            <para>
            <para> Name of a Review Policy: SimplePlurality/2011-09-01 or ScoreMyKnownAnswers/2011-09-01
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.QualificationRequirement">
            <summary>
            <para>
            <para> Conditions that a Worker's Qualifications must meet in order to accept the HIT. A
            HIT can have between zero and ten Qualification requirements. All requirements must
            be met in order for a Worker to accept the HIT. Additionally, other actions can be
            restricted using the <code>ActionsGuarded</code> field on each <code>QualificationRequirement</code>
            structure. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.Question">
            <summary>
            <para>
            <para> The data the person completing the HIT uses to produce the results. </para><para> Constraints: Must be a QuestionForm data structure, an ExternalQuestion data structure,
            or an HTMLQuestion data structure. The XML question data must not be larger than 64
            kilobytes (65,535 bytes) in size, including whitespace. </para><para>Either a Question parameter or a HITLayoutId parameter must be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.RequesterAnnotation">
            <summary>
            <para>
            <para> An arbitrary data field. The RequesterAnnotation parameter lets your application
            attach arbitrary data to the HIT for tracking purposes. For example, this parameter
            could be an identifier internal to the Requester's application that corresponds with
            the HIT. </para><para> The RequesterAnnotation parameter for a HIT is only visible to the Requester who
            created the HIT. It is not shown to the Worker, or any other Requester. </para><para> The RequesterAnnotation parameter may be different for each HIT you submit. It does
            not affect how your HITs are grouped. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.Reward">
            <summary>
            <para>
            <para> The amount of money the Requester will pay a Worker for successfully completing the
            HIT. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.Title">
            <summary>
            <para>
            <para> The title of the HIT. A title should be short and descriptive about the kind of task
            the HIT contains. On the Amazon Mechanical Turk web site, the HIT title appears in
            search results, and everywhere the HIT is mentioned. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.UniqueRequestToken">
            <summary>
            <para>
            <para> A unique identifier for this request which allows you to retry the call on error
            without creating duplicate HITs. This is useful in cases such as network timeouts
            where it is unclear whether or not the call succeeded on the server. If the HIT already
            exists in the system from a previous call using the same UniqueRequestToken, subsequent
            calls will return a AWS.MechanicalTurk.HitAlreadyExists error with a message containing
            the HITId. </para><note><para> Note: It is your responsibility to ensure uniqueness of the token. The unique token
            expires after 24 hours. Subsequent calls using the same UniqueRequestToken made after
            the 24 hour limit could create duplicate HITs. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HIT'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.CreateHITResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.CreateHITResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Title parameter.
            The -PassThru parameter is deprecated, use -Select '^Title' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITTypeCmdlet">
            <summary>
            The <code>CreateHITType</code> operation creates a new HIT type. This operation allows
            you to define a standard set of HIT properties to use when creating HITs. If you register
            a HIT type with values that match an existing HIT type, the HIT type ID of the existing
            type will be returned.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITTypeCmdlet.AssignmentDurationInSecond">
            <summary>
            <para>
            <para> The amount of time, in seconds, that a Worker has to complete the HIT after accepting
            it. If a Worker does not complete the assignment within the specified duration, the
            assignment is considered abandoned. If the HIT is still active (that is, its lifetime
            has not elapsed), the assignment becomes available for other users to find and accept.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITTypeCmdlet.AutoApprovalDelayInSecond">
            <summary>
            <para>
            <para> The number of seconds after an assignment for the HIT has been submitted, after which
            the assignment is considered Approved automatically unless the Requester explicitly
            rejects it. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITTypeCmdlet.Description">
            <summary>
            <para>
            <para> A general description of the HIT. A description includes detailed information about
            the kind of task the HIT contains. On the Amazon Mechanical Turk web site, the HIT
            description appears in the expanded view of search results, and in the HIT and assignment
            screens. A good description gives the user enough information to evaluate the HIT
            before accepting it. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITTypeCmdlet.Keyword">
            <summary>
            <para>
            <para> One or more words or phrases that describe the HIT, separated by commas. These words
            are used in searches to find HITs. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITTypeCmdlet.QualificationRequirement">
            <summary>
            <para>
            <para> Conditions that a Worker's Qualifications must meet in order to accept the HIT. A
            HIT can have between zero and ten Qualification requirements. All requirements must
            be met in order for a Worker to accept the HIT. Additionally, other actions can be
            restricted using the <code>ActionsGuarded</code> field on each <code>QualificationRequirement</code>
            structure. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITTypeCmdlet.Reward">
            <summary>
            <para>
            <para> The amount of money the Requester will pay a Worker for successfully completing the
            HIT. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITTypeCmdlet.Title">
            <summary>
            <para>
            <para> The title of the HIT. A title should be short and descriptive about the kind of task
            the HIT contains. On the Amazon Mechanical Turk web site, the HIT title appears in
            search results, and everywhere the HIT is mentioned. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HITTypeId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.CreateHITTypeResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.CreateHITTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Title parameter.
            The -PassThru parameter is deprecated, use -Select '^Title' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITWithHITTypeCmdlet">
            <summary>
            The <code>CreateHITWithHITType</code> operation creates a new Human Intelligence
            Task (HIT) using an existing HITTypeID generated by the <code>CreateHITType</code>
            operation. 
            
             
            <para>
             This is an alternative way to create HITs from the <code>CreateHIT</code> operation.
            This is the recommended best practice for Requesters who are creating large numbers
            of HITs. 
            </para><para>
            CreateHITWithHITType also supports several ways to provide question data: by providing
            a value for the <code>Question</code> parameter that fully specifies the contents
            of the HIT, or by providing a <code>HitLayoutId</code> and associated <code>HitLayoutParameters</code>.
            
            </para><note><para>
             If a HIT is created with 10 or more maximum assignments, there is an additional fee.
            For more information, see <a href="https://requester.mturk.com/pricing">Amazon Mechanical
            Turk Pricing</a>. 
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITWithHITTypeCmdlet.HITLayoutId">
            <summary>
            <para>
            <para> The HITLayoutId allows you to use a pre-existing HIT design with placeholder values
            and create an additional HIT by providing those values as HITLayoutParameters. </para><para> Constraints: Either a Question parameter or a HITLayoutId parameter must be provided.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITWithHITTypeCmdlet.HITLayoutParameter">
            <summary>
            <para>
            <para> If the HITLayoutId is provided, any placeholder values must be filled in with values
            using the HITLayoutParameter structure. For more information, see HITLayout. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITWithHITTypeCmdlet.HITTypeId">
            <summary>
            <para>
            <para>The HIT type ID you want to create this HIT with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITWithHITTypeCmdlet.LifetimeInSecond">
            <summary>
            <para>
            <para> An amount of time, in seconds, after which the HIT is no longer available for users
            to accept. After the lifetime of the HIT elapses, the HIT no longer appears in HIT
            searches, even if not all of the assignments for the HIT have been accepted. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITWithHITTypeCmdlet.MaxAssignment">
            <summary>
            <para>
            <para> The number of times the HIT can be accepted and completed before the HIT becomes
            unavailable. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITWithHITTypeCmdlet.AssignmentReviewPolicy_Parameter">
            <summary>
            <para>
            <para>Name of the parameter from the Review policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITWithHITTypeCmdlet.HITReviewPolicy_Parameter">
            <summary>
            <para>
            <para>Name of the parameter from the Review policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITWithHITTypeCmdlet.AssignmentReviewPolicy_PolicyName">
            <summary>
            <para>
            <para> Name of a Review Policy: SimplePlurality/2011-09-01 or ScoreMyKnownAnswers/2011-09-01
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITWithHITTypeCmdlet.HITReviewPolicy_PolicyName">
            <summary>
            <para>
            <para> Name of a Review Policy: SimplePlurality/2011-09-01 or ScoreMyKnownAnswers/2011-09-01
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITWithHITTypeCmdlet.Question">
            <summary>
            <para>
            <para> The data the person completing the HIT uses to produce the results. </para><para> Constraints: Must be a QuestionForm data structure, an ExternalQuestion data structure,
            or an HTMLQuestion data structure. The XML question data must not be larger than 64
            kilobytes (65,535 bytes) in size, including whitespace. </para><para>Either a Question parameter or a HITLayoutId parameter must be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITWithHITTypeCmdlet.RequesterAnnotation">
            <summary>
            <para>
            <para> An arbitrary data field. The RequesterAnnotation parameter lets your application
            attach arbitrary data to the HIT for tracking purposes. For example, this parameter
            could be an identifier internal to the Requester's application that corresponds with
            the HIT. </para><para> The RequesterAnnotation parameter for a HIT is only visible to the Requester who
            created the HIT. It is not shown to the Worker, or any other Requester. </para><para> The RequesterAnnotation parameter may be different for each HIT you submit. It does
            not affect how your HITs are grouped. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITWithHITTypeCmdlet.UniqueRequestToken">
            <summary>
            <para>
            <para> A unique identifier for this request which allows you to retry the call on error
            without creating duplicate HITs. This is useful in cases such as network timeouts
            where it is unclear whether or not the call succeeded on the server. If the HIT already
            exists in the system from a previous call using the same UniqueRequestToken, subsequent
            calls will return a AWS.MechanicalTurk.HitAlreadyExists error with a message containing
            the HITId. </para><note><para> Note: It is your responsibility to ensure uniqueness of the token. The unique token
            expires after 24 hours. Subsequent calls using the same UniqueRequestToken made after
            the 24 hour limit could create duplicate HITs. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITWithHITTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HIT'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.CreateHITWithHITTypeResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.CreateHITWithHITTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITWithHITTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HITTypeId parameter.
            The -PassThru parameter is deprecated, use -Select '^HITTypeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRHITWithHITTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.NewMTRQualificationTypeCmdlet">
            <summary>
            The <code>CreateQualificationType</code> operation creates a new Qualification type,
            which is represented by a <code>QualificationType</code> data structure.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRQualificationTypeCmdlet.AnswerKey">
            <summary>
            <para>
            <para>The answers to the Qualification test specified in the Test parameter, in the form
            of an AnswerKey data structure.</para><para>Constraints: Must not be longer than 65535 bytes.</para><para>Constraints: None. If not specified, you must process Qualification requests manually.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRQualificationTypeCmdlet.AutoGranted">
            <summary>
            <para>
            <para>Specifies whether requests for the Qualification type are granted immediately, without
            prompting the Worker with a Qualification test.</para><para>Constraints: If the Test parameter is specified, this parameter cannot be true.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRQualificationTypeCmdlet.AutoGrantedValue">
            <summary>
            <para>
            <para>The Qualification value to use for automatically granted Qualifications. This parameter
            is used only if the AutoGranted parameter is true.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRQualificationTypeCmdlet.Description">
            <summary>
            <para>
            <para>A long description for the Qualification type. On the Amazon Mechanical Turk website,
            the long description is displayed when a Worker examines a Qualification type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRQualificationTypeCmdlet.Keyword">
            <summary>
            <para>
            <para>One or more words or phrases that describe the Qualification type, separated by commas.
            The keywords of a type make the type easier to find during a search.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRQualificationTypeCmdlet.Name">
            <summary>
            <para>
            <para> The name you give to the Qualification type. The type name is used to represent the
            Qualification to Workers, and to find the type using a Qualification type search.
            It must be unique across all of your Qualification types.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRQualificationTypeCmdlet.QualificationTypeStatus">
            <summary>
            <para>
            <para>The initial status of the Qualification type.</para><para>Constraints: Valid values are: Active | Inactive</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRQualificationTypeCmdlet.RetryDelayInSecond">
            <summary>
            <para>
            <para>The number of seconds that a Worker must wait after requesting a Qualification of
            the Qualification type before the worker can retry the Qualification request.</para><para>Constraints: None. If not specified, retries are disabled and Workers can request
            a Qualification of this type only once, even if the Worker has not been granted the
            Qualification. It is not possible to disable retries for a Qualification type after
            it has been created with retries enabled. If you want to disable retries, you must
            delete existing retry-enabled Qualification type and then create a new Qualification
            type with retries disabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRQualificationTypeCmdlet.Test">
            <summary>
            <para>
            <para> The questions for the Qualification test a Worker must answer correctly to obtain
            a Qualification of this type. If this parameter is specified, <code>TestDurationInSeconds</code>
            must also be specified. </para><para>Constraints: Must not be longer than 65535 bytes. Must be a QuestionForm data structure.
            This parameter cannot be specified if AutoGranted is true.</para><para>Constraints: None. If not specified, the Worker may request the Qualification without
            answering any questions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRQualificationTypeCmdlet.TestDurationInSecond">
            <summary>
            <para>
            <para>The number of seconds the Worker has to complete the Qualification test, starting
            from the time the Worker requests the Qualification.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRQualificationTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'QualificationType'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.CreateQualificationTypeResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.CreateQualificationTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRQualificationTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRQualificationTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.NewMTRWorkerBlockCmdlet">
            <summary>
            The <code>CreateWorkerBlock</code> operation allows you to prevent a Worker from working
            on your HITs. For example, you can block a Worker who is producing poor quality work.
            You can block up to 100,000 Workers.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRWorkerBlockCmdlet.Reason">
            <summary>
            <para>
            <para>A message explaining the reason for blocking the Worker. This parameter enables you
            to keep track of your Workers. The Worker does not see this message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRWorkerBlockCmdlet.WorkerId">
            <summary>
            <para>
            <para>The ID of the Worker to block.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRWorkerBlockCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.CreateWorkerBlockResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRWorkerBlockCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkerId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.NewMTRWorkerBlockCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRHITCmdlet">
            <summary>
            The <code>DeleteHIT</code> operation is used to delete HIT that is no longer needed.
            Only the Requester who created the HIT can delete it. 
            
             
            <para>
             You can only dispose of HITs that are in the <code>Reviewable</code> state, with
            all of their submitted assignments already either approved or rejected. If you call
            the DeleteHIT operation on a HIT that is not in the <code>Reviewable</code> state
            (for example, that has not expired, or still has active assignments), or on a HIT
            that is Reviewable but without all of its submitted assignments already approved or
            rejected, the service will return an error. 
            </para><note><ul><li><para>
             HITs are automatically disposed of after 120 days. 
            </para></li><li><para>
             After you dispose of a HIT, you can no longer approve the HIT's rejected assignments.
            
            </para></li><li><para>
             Disposed HITs are not returned in results for the ListHITs operation. 
            </para></li><li><para>
             Disposing HITs can improve the performance of operations such as ListReviewableHITs
            and ListHITs. 
            </para></li></ul></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRHITCmdlet.HITId">
            <summary>
            <para>
            <para>The ID of the HIT to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRHITCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.DeleteHITResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRHITCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HITId parameter.
            The -PassThru parameter is deprecated, use -Select '^HITId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRHITCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRQualificationFromWorkerCmdlet">
            <summary>
            The <code>DisassociateQualificationFromWorker</code> revokes a previously granted
            Qualification from a user. 
            
             
            <para>
             You can provide a text message explaining why the Qualification was revoked. The
            user who had the Qualification can see this message. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRQualificationFromWorkerCmdlet.QualificationTypeId">
            <summary>
            <para>
            <para>The ID of the Qualification type of the Qualification to be revoked.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRQualificationFromWorkerCmdlet.Reason">
            <summary>
            <para>
            <para>A text message that explains why the Qualification was revoked. The user who had the
            Qualification sees this message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRQualificationFromWorkerCmdlet.WorkerId">
            <summary>
            <para>
            <para>The ID of the Worker who possesses the Qualification to be revoked.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRQualificationFromWorkerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.DisassociateQualificationFromWorkerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRQualificationFromWorkerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkerId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRQualificationFromWorkerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRQualificationTypeCmdlet">
            <summary>
            The <code>DeleteQualificationType</code> deletes a Qualification type and deletes
            any HIT types that are associated with the Qualification type. 
            
             
            <para>
            This operation does not revoke Qualifications already assigned to Workers because
            the Qualifications might be needed for active HITs. If there are any pending requests
            for the Qualification type, Amazon Mechanical Turk rejects those requests. After you
            delete a Qualification type, you can no longer use it to create HITs or HIT types.
            </para><note><para>
            DeleteQualificationType must wait for all the HITs that use the deleted Qualification
            type to be deleted before completing. It may take up to 48 hours before DeleteQualificationType
            completes and the unique name of the Qualification type is available for reuse with
            CreateQualificationType.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRQualificationTypeCmdlet.QualificationTypeId">
            <summary>
            <para>
            <para>The ID of the QualificationType to dispose.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRQualificationTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.DeleteQualificationTypeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRQualificationTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QualificationTypeId parameter.
            The -PassThru parameter is deprecated, use -Select '^QualificationTypeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRQualificationTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRWorkerBlockCmdlet">
            <summary>
            The <code>DeleteWorkerBlock</code> operation allows you to reinstate a blocked Worker
            to work on your HITs. This operation reverses the effects of the CreateWorkerBlock
            operation. You need the Worker ID to use this operation. If the Worker ID is missing
            or invalid, this operation fails and returns the message “WorkerId is invalid.” If
            the specified Worker is not blocked, this operation returns successfully.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRWorkerBlockCmdlet.Reason">
            <summary>
            <para>
            <para>A message that explains the reason for unblocking the Worker. The Worker does not
            see this message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRWorkerBlockCmdlet.WorkerId">
            <summary>
            <para>
            <para>The ID of the Worker to unblock.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRWorkerBlockCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.DeleteWorkerBlockResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRWorkerBlockCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkerId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.RemoveMTRWorkerBlockCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.SendMTRBonusCmdlet">
            <summary>
            The <code>SendBonus</code> operation issues a payment of money from your account
            to a Worker. This payment happens separately from the reward you pay to the Worker
            when you approve the Worker's assignment. The SendBonus operation requires the Worker's
            ID and the assignment ID as parameters to initiate payment of the bonus. You must
            include a message that explains the reason for the bonus payment, as the Worker may
            not be expecting the payment. Amazon Mechanical Turk collects a fee for bonus payments,
            similar to the HIT listing fee. This operation fails if your account does not have
            enough funds to pay for both the bonus and the fees.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.SendMTRBonusCmdlet.AssignmentId">
            <summary>
            <para>
            <para>The ID of the assignment for which this bonus is paid.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.SendMTRBonusCmdlet.BonusAmount">
            <summary>
            <para>
            <para> The Bonus amount is a US Dollar amount specified using a string (for example, "5"
            represents $5.00 USD and "101.42" represents $101.42 USD). Do not include currency
            symbols or currency codes. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.SendMTRBonusCmdlet.Reason">
            <summary>
            <para>
            <para>A message that explains the reason for the bonus payment. The Worker receiving the
            bonus can see this message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.SendMTRBonusCmdlet.UniqueRequestToken">
            <summary>
            <para>
            <para>A unique identifier for this request, which allows you to retry the call on error
            without granting multiple bonuses. This is useful in cases such as network timeouts
            where it is unclear whether or not the call succeeded on the server. If the bonus
            already exists in the system from a previous call using the same UniqueRequestToken,
            subsequent calls will return an error with a message containing the request ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.SendMTRBonusCmdlet.WorkerId">
            <summary>
            <para>
            <para>The ID of the Worker being paid the bonus.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.SendMTRBonusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.SendBonusResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.SendMTRBonusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkerId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.SendMTRBonusCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.SendMTRTestEventNotificationCmdlet">
            <summary>
            The <code>SendTestEventNotification</code> operation causes Amazon Mechanical Turk
            to send a notification message as if a HIT event occurred, according to the provided
            notification specification. This allows you to test notifications without setting
            up notifications for a real HIT type and trying to trigger them using the website.
            When you call this operation, the service attempts to send the test notification immediately.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.SendMTRTestEventNotificationCmdlet.Notification_Destination">
            <summary>
            <para>
            <para> The target for notification messages. The Destination’s format is determined by the
            specified Transport: </para><ul><li><para>When Transport is Email, the Destination is your email address.</para></li><li><para>When Transport is SQS, the Destination is your queue URL.</para></li><li><para>When Transport is SNS, the Destination is the ARN of your topic.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.SendMTRTestEventNotificationCmdlet.Notification_EventType">
            <summary>
            <para>
            <para> The list of events that should cause notifications to be sent. Valid Values: AssignmentAccepted
            | AssignmentAbandoned | AssignmentReturned | AssignmentSubmitted | AssignmentRejected
            | AssignmentApproved | HITCreated | HITExtended | HITDisposed | HITReviewable | HITExpired
            | Ping. The Ping event is only valid for the SendTestEventNotification operation.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.SendMTRTestEventNotificationCmdlet.TestEventType">
            <summary>
            <para>
            <para> The event to simulate to test the notification specification. This event is included
            in the test message even if the notification specification does not include the event
            type. The notification specification does not filter out the test event. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.SendMTRTestEventNotificationCmdlet.Notification_Transport">
            <summary>
            <para>
            <para> The method Amazon Mechanical Turk uses to send the notification. Valid Values: Email
            | SQS | SNS. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.SendMTRTestEventNotificationCmdlet.Notification_Version">
            <summary>
            <para>
            <para>The version of the Notification API to use. Valid value is 2006-05-05.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.SendMTRTestEventNotificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.SendTestEventNotificationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.SendMTRWorkerNotificationCmdlet">
            <summary>
            The <code>NotifyWorkers</code> operation sends an email to one or more Workers that
            you specify with the Worker ID. You can specify up to 100 Worker IDs to send the same
            message with a single call to the NotifyWorkers operation. The NotifyWorkers operation
            will send a notification email to a Worker only if you have previously approved or
            rejected work from the Worker.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.SendMTRWorkerNotificationCmdlet.MessageText">
            <summary>
            <para>
            <para>The text of the email message to send. Can include up to 4,096 characters</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.SendMTRWorkerNotificationCmdlet.Subject">
            <summary>
            <para>
            <para>The subject line of the email message to send. Can include up to 200 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.SendMTRWorkerNotificationCmdlet.WorkerId">
            <summary>
            <para>
            <para>A list of Worker IDs you wish to notify. You can notify upto 100 Workers at a time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.SendMTRWorkerNotificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NotifyWorkersFailureStatuses'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.NotifyWorkersResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.NotifyWorkersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.SendMTRWorkerNotificationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkerId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.SendMTRWorkerNotificationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRExpirationForHITCmdlet">
            <summary>
            The <code>UpdateExpirationForHIT</code> operation allows you update the expiration
            time of a HIT. If you update it to a time in the past, the HIT will be immediately
            expired.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRExpirationForHITCmdlet.ExpireAt">
            <summary>
            <para>
            <para> The date and time at which you want the HIT to expire </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRExpirationForHITCmdlet.HITId">
            <summary>
            <para>
            <para> The HIT to update. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRExpirationForHITCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.UpdateExpirationForHITResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRExpirationForHITCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HITId parameter.
            The -PassThru parameter is deprecated, use -Select '^HITId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRExpirationForHITCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRHITReviewStatusCmdlet">
            <summary>
            The <code>UpdateHITReviewStatus</code> operation updates the status of a HIT. If
            the status is Reviewable, this operation can update the status to Reviewing, or it
            can revert a Reviewing HIT back to the Reviewable status.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRHITReviewStatusCmdlet.HITId">
            <summary>
            <para>
            <para> The ID of the HIT to update. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRHITReviewStatusCmdlet.Revert">
            <summary>
            <para>
            <para> Specifies how to update the HIT status. Default is <code>False</code>. </para><ul><li><para> Setting this to false will only transition a HIT from <code>Reviewable</code> to
            <code>Reviewing</code></para></li><li><para> Setting this to true will only transition a HIT from <code>Reviewing</code> to <code>Reviewable</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRHITReviewStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.UpdateHITReviewStatusResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRHITReviewStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HITId parameter.
            The -PassThru parameter is deprecated, use -Select '^HITId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRHITReviewStatusCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRHITTypeOfHITCmdlet">
            <summary>
            The <code>UpdateHITTypeOfHIT</code> operation allows you to change the HITType properties
            of a HIT. This operation disassociates the HIT from its old HITType properties and
            associates it with the new HITType properties. The HIT takes on the properties of
            the new HITType in place of the old ones.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRHITTypeOfHITCmdlet.HITId">
            <summary>
            <para>
            <para>The HIT to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRHITTypeOfHITCmdlet.HITTypeId">
            <summary>
            <para>
            <para>The ID of the new HIT type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRHITTypeOfHITCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.UpdateHITTypeOfHITResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRHITTypeOfHITCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HITId parameter.
            The -PassThru parameter is deprecated, use -Select '^HITId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRHITTypeOfHITCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRNotificationSettingCmdlet">
            <summary>
            The <code>UpdateNotificationSettings</code> operation creates, updates, disables
            or re-enables notifications for a HIT type. If you call the UpdateNotificationSettings
            operation for a HIT type that already has a notification specification, the operation
            replaces the old specification with a new one. You can call the UpdateNotificationSettings
            operation to enable or disable notifications for the HIT type, without having to modify
            the notification specification itself by providing updates to the Active status without
            specifying a new notification specification. To change the Active status of a HIT
            type's notifications, the HIT type must already have a notification specification,
            or one must be provided in the same call to <code>UpdateNotificationSettings</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRNotificationSettingCmdlet.Active">
            <summary>
            <para>
            <para> Specifies whether notifications are sent for HITs of this HIT type, according to
            the notification specification. You must specify either the Notification parameter
            or the Active parameter for the call to UpdateNotificationSettings to succeed. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRNotificationSettingCmdlet.Notification_Destination">
            <summary>
            <para>
            <para> The target for notification messages. The Destination’s format is determined by the
            specified Transport: </para><ul><li><para>When Transport is Email, the Destination is your email address.</para></li><li><para>When Transport is SQS, the Destination is your queue URL.</para></li><li><para>When Transport is SNS, the Destination is the ARN of your topic.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRNotificationSettingCmdlet.Notification_EventType">
            <summary>
            <para>
            <para> The list of events that should cause notifications to be sent. Valid Values: AssignmentAccepted
            | AssignmentAbandoned | AssignmentReturned | AssignmentSubmitted | AssignmentRejected
            | AssignmentApproved | HITCreated | HITExtended | HITDisposed | HITReviewable | HITExpired
            | Ping. The Ping event is only valid for the SendTestEventNotification operation.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRNotificationSettingCmdlet.HITTypeId">
            <summary>
            <para>
            <para> The ID of the HIT type whose notification specification is being updated. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRNotificationSettingCmdlet.Notification_Transport">
            <summary>
            <para>
            <para> The method Amazon Mechanical Turk uses to send the notification. Valid Values: Email
            | SQS | SNS. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRNotificationSettingCmdlet.Notification_Version">
            <summary>
            <para>
            <para>The version of the Notification API to use. Valid value is 2006-05-05.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRNotificationSettingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.UpdateNotificationSettingsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRNotificationSettingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HITTypeId parameter.
            The -PassThru parameter is deprecated, use -Select '^HITTypeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRNotificationSettingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRQualificationTypeCmdlet">
            <summary>
            The <code>UpdateQualificationType</code> operation modifies the attributes of an
            existing Qualification type, which is represented by a QualificationType data structure.
            Only the owner of a Qualification type can modify its attributes. 
            
             
            <para>
             Most attributes of a Qualification type can be changed after the type has been created.
            However, the Name and Keywords fields cannot be modified. The RetryDelayInSeconds
            parameter can be modified or added to change the delay or to enable retries, but RetryDelayInSeconds
            cannot be used to disable retries. 
            </para><para>
             You can use this operation to update the test for a Qualification type. The test
            is updated based on the values specified for the Test, TestDurationInSeconds and AnswerKey
            parameters. All three parameters specify the updated test. If you are updating the
            test for a type, you must specify the Test and TestDurationInSeconds parameters. The
            AnswerKey parameter is optional; omitting it specifies that the updated test does
            not have an answer key. 
            </para><para>
             If you omit the Test parameter, the test for the Qualification type is unchanged.
            There is no way to remove a test from a Qualification type that has one. If the type
            already has a test, you cannot update it to be AutoGranted. If the Qualification type
            does not have a test and one is provided by an update, the type will henceforth have
            a test. 
            </para><para>
             If you want to update the test duration or answer key for an existing test without
            changing the questions, you must specify a Test parameter with the original questions,
            along with the updated values. 
            </para><para>
             If you provide an updated Test but no AnswerKey, the new test will not have an answer
            key. Requests for such Qualifications must be granted manually. 
            </para><para>
             You can also update the AutoGranted and AutoGrantedValue attributes of the Qualification
            type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRQualificationTypeCmdlet.AnswerKey">
            <summary>
            <para>
            <para>The answers to the Qualification test specified in the Test parameter, in the form
            of an AnswerKey data structure.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRQualificationTypeCmdlet.AutoGranted">
            <summary>
            <para>
            <para>Specifies whether requests for the Qualification type are granted immediately, without
            prompting the Worker with a Qualification test.</para><para>Constraints: If the Test parameter is specified, this parameter cannot be true.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRQualificationTypeCmdlet.AutoGrantedValue">
            <summary>
            <para>
            <para>The Qualification value to use for automatically granted Qualifications. This parameter
            is used only if the AutoGranted parameter is true.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRQualificationTypeCmdlet.Description">
            <summary>
            <para>
            <para>The new description of the Qualification type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRQualificationTypeCmdlet.QualificationTypeId">
            <summary>
            <para>
            <para>The ID of the Qualification type to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRQualificationTypeCmdlet.QualificationTypeStatus">
            <summary>
            <para>
            <para>The new status of the Qualification type - Active | Inactive</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRQualificationTypeCmdlet.RetryDelayInSecond">
            <summary>
            <para>
            <para>The amount of time, in seconds, that Workers must wait after requesting a Qualification
            of the specified Qualification type before they can retry the Qualification request.
            It is not possible to disable retries for a Qualification type after it has been created
            with retries enabled. If you want to disable retries, you must dispose of the existing
            retry-enabled Qualification type using DisposeQualificationType and then create a
            new Qualification type with retries disabled using CreateQualificationType.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRQualificationTypeCmdlet.Test">
            <summary>
            <para>
            <para>The questions for the Qualification test a Worker must answer correctly to obtain
            a Qualification of this type. If this parameter is specified, <code>TestDurationInSeconds</code>
            must also be specified.</para><para>Constraints: Must not be longer than 65535 bytes. Must be a QuestionForm data structure.
            This parameter cannot be specified if AutoGranted is true.</para><para>Constraints: None. If not specified, the Worker may request the Qualification without
            answering any questions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRQualificationTypeCmdlet.TestDurationInSecond">
            <summary>
            <para>
            <para>The number of seconds the Worker has to complete the Qualification test, starting
            from the time the Worker requests the Qualification.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRQualificationTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'QualificationType'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MTurk.Model.UpdateQualificationTypeResponse).
            Specifying the name of a property of type Amazon.MTurk.Model.UpdateQualificationTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRQualificationTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QualificationTypeId parameter.
            The -PassThru parameter is deprecated, use -Select '^QualificationTypeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MTR.UpdateMTRQualificationTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
