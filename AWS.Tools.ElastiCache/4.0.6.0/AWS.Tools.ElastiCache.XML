<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.ElastiCache</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.AddECTagCmdlet">
            <summary>
            Adds up to 50 cost allocation tags to the named resource. A cost allocation tag is
            a key-value pair where the key and value are case-sensitive. You can use cost allocation
            tags to categorize and track your AWS costs.
            
             
            <para>
             When you apply tags to your ElastiCache resources, AWS generates a cost allocation
            report as a comma-separated value (CSV) file with your usage and costs aggregated
            by your tags. You can apply tags that represent business categories (such as cost
            centers, application names, or owners) to organize your costs across multiple services.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Tagging.html">Using
            Cost Allocation Tags in Amazon ElastiCache</a> in the <i>ElastiCache User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.AddECTagCmdlet.ResourceName">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource to which the tags are to be added,
            for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code>
            or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>. ElastiCache
            resources are <i>cluster</i> and <i>snapshot</i>.</para><para>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.AddECTagCmdlet.Tag">
            <summary>
            <para>
            <para>A list of cost allocation tags to be added to this resource. A tag is a key-value
            pair. A tag key must be accompanied by a tag value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.AddECTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TagList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.AddTagsToResourceResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.AddTagsToResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.AddECTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceName parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.AddECTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.ApproveECCacheSecurityGroupIngressCmdlet">
            <summary>
            Allows network ingress to a cache security group. Applications using ElastiCache must
            be running on Amazon EC2, and Amazon EC2 security groups are used as the authorization
            mechanism.
            
             <note><para>
            You cannot authorize ingress from an Amazon EC2 security group in one region to an
            ElastiCache cluster in another region.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.ApproveECCacheSecurityGroupIngressCmdlet.CacheSecurityGroupName">
            <summary>
            <para>
            <para>The cache security group that allows network ingress.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.ApproveECCacheSecurityGroupIngressCmdlet.EC2SecurityGroupName">
            <summary>
            <para>
            <para>The Amazon EC2 security group to be authorized for ingress to the cache security group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.ApproveECCacheSecurityGroupIngressCmdlet.EC2SecurityGroupOwnerId">
            <summary>
            <para>
            <para>The AWS account number of the Amazon EC2 security group owner. Note that this is not
            the same thing as an AWS access key ID - you must provide a valid AWS account number
            for this parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.ApproveECCacheSecurityGroupIngressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CacheSecurityGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.AuthorizeCacheSecurityGroupIngressResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.AuthorizeCacheSecurityGroupIngressResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.ApproveECCacheSecurityGroupIngressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheSecurityGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheSecurityGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.ApproveECCacheSecurityGroupIngressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.CompleteECMigrationCmdlet">
            <summary>
            Complete the migration of data.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.CompleteECMigrationCmdlet.Enforce">
            <summary>
            <para>
            <para>Forces the migration to stop without ensuring that data is in sync. It is recommended
            to use this option only to abort the migration and not recommended when application
            wants to continue migration to ElastiCache.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.CompleteECMigrationCmdlet.ReplicationGroupId">
            <summary>
            <para>
            <para>The ID of the replication group to which data is being migrated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.CompleteECMigrationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReplicationGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.CompleteMigrationResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.CompleteMigrationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.CompleteECMigrationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReplicationGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReplicationGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.CompleteECMigrationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.CopyECSnapshotCmdlet">
            <summary>
            Amazon.ElastiCache.IAmazonElastiCache.CopySnapshot
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.CopyECSnapshotCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The ID of the KMS key used to encrypt the target snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.CopyECSnapshotCmdlet.SourceSnapshotName">
            <summary>
            <para>
            <para>The name of an existing snapshot from which to make a copy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.CopyECSnapshotCmdlet.TargetBucket">
            <summary>
            <para>
            <para>The Amazon S3 bucket to which the snapshot is exported. This parameter is used only
            when exporting a snapshot for external access.</para><para>When using this parameter to export a snapshot, be sure Amazon ElastiCache has the
            needed permissions to this S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access">Step
            2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the <i>Amazon ElastiCache
            User Guide</i>.</para><para>For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Snapshots.Exporting.html">Exporting
            a Snapshot</a> in the <i>Amazon ElastiCache User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.CopyECSnapshotCmdlet.TargetSnapshotName">
            <summary>
            <para>
            <para>A name for the snapshot copy. ElastiCache does not permit overwriting a snapshot,
            therefore this name must be unique within its context - ElastiCache or an Amazon S3
            bucket if exporting.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.CopyECSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Snapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.CopySnapshotResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.CopySnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.CopyECSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceSnapshotName parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceSnapshotName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.CopyECSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet">
            <summary>
            Modifies the settings for a cluster. You can use this operation to change one or more
            cluster configuration parameters by specifying the parameters and the new values.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.ApplyImmediately">
            <summary>
            <para>
            <para>If <code>true</code>, this parameter causes the modifications in this request and
            any pending modifications to be applied, asynchronously and as soon as possible, regardless
            of the <code>PreferredMaintenanceWindow</code> setting for the cluster.</para><para>If <code>false</code>, changes to the cluster are applied on the next maintenance
            reboot, or the next failure reboot, whichever occurs first.</para><important><para>If you perform a <code>ModifyCacheCluster</code> before a pending modification is
            applied, the pending modification is replaced by the newer modification.</para></important><para>Valid values: <code>true</code> | <code>false</code></para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.AuthToken">
            <summary>
            <para>
            <para>Reserved parameter. The password used to access a password protected server. This
            parameter must be specified with the <code>auth-token-update</code> parameter. Password
            constraints:</para><ul><li><para>Must be only printable ASCII characters</para></li><li><para>Must be at least 16 characters and no more than 128 characters in length</para></li><li><para>Cannot contain any of the following characters: '/', '"', or '@', '%'</para></li></ul><para> For more information, see AUTH password at <a href="http://redis.io/commands/AUTH">AUTH</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.AuthTokenUpdateStrategy">
            <summary>
            <para>
            <para>Specifies the strategy to use to update the AUTH token. This parameter must be specified
            with the <code>auth-token</code> parameter. Possible values:</para><ul><li><para>Rotate</para></li><li><para>Set</para></li></ul><para> For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/auth.html">Authenticating
            Users with Redis AUTH</a></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.AutoMinorVersionUpgrade">
            <summary>
            <para>
            <para>This parameter is currently disabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.AZMode">
            <summary>
            <para>
            <para>Specifies whether the new nodes in this Memcached cluster are all created in a single
            Availability Zone or created across multiple Availability Zones.</para><para>Valid values: <code>single-az</code> | <code>cross-az</code>.</para><para>This option is only supported for Memcached clusters.</para><note><para>You cannot specify <code>single-az</code> if the Memcached cluster already has cache
            nodes in different Availability Zones. If <code>cross-az</code> is specified, existing
            Memcached nodes remain in their current Availability Zone.</para><para>Only newly created nodes are located in different Availability Zones. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.CacheClusterId">
            <summary>
            <para>
            <para>The cluster identifier. This value is stored as a lowercase string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.CacheNodeIdsToRemove">
            <summary>
            <para>
            <para>A list of cache node IDs to be removed. A node ID is a numeric identifier (0001, 0002,
            etc.). This parameter is only valid when <code>NumCacheNodes</code> is less than the
            existing number of cache nodes. The number of cache node IDs supplied in this parameter
            must match the difference between the existing number of cache nodes in the cluster
            or pending cache nodes, whichever is greater, and the value of <code>NumCacheNodes</code>
            in the request.</para><para>For example: If you have 3 active cache nodes, 7 pending cache nodes, and the number
            of cache nodes in this <code>ModifyCacheCluster</code> call is 5, you must list 2
            (7 - 5) cache node IDs to remove.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.CacheNodeType">
            <summary>
            <para>
            <para>A valid cache node type that you want to scale this cluster up to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.CacheParameterGroupName">
            <summary>
            <para>
            <para>The name of the cache parameter group to apply to this cluster. This change is asynchronously
            applied as soon as possible for parameters when the <code>ApplyImmediately</code>
            parameter is specified as <code>true</code> for this request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.CacheSecurityGroupName">
            <summary>
            <para>
            <para>A list of cache security group names to authorize on this cluster. This change is
            asynchronously applied as soon as possible.</para><para>You can use this parameter only with clusters that are created outside of an Amazon
            Virtual Private Cloud (Amazon VPC).</para><para>Constraints: Must contain no more than 255 alphanumeric characters. Must not be "Default".</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The upgraded version of the cache engine to be run on the cache nodes.</para><para><b>Important:</b> You can upgrade to a newer engine version (see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement">Selecting
            a Cache Engine and Version</a>), but you cannot downgrade to an earlier engine version.
            If you want to use an earlier engine version, you must delete the existing cluster
            and create it anew with the earlier engine version. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.NewAvailabilityZone">
            <summary>
            <para>
            <para>The list of Availability Zones where the new Memcached cache nodes are created.</para><para>This parameter is only valid when <code>NumCacheNodes</code> in the request is greater
            than the sum of the number of active cache nodes and the number of cache nodes pending
            creation (which may be zero). The number of Availability Zones supplied in this list
            must match the cache nodes being added in this request.</para><para>This option is only supported on Memcached clusters.</para><para>Scenarios:</para><ul><li><para><b>Scenario 1:</b> You have 3 active nodes and wish to add 2 nodes. Specify <code>NumCacheNodes=5</code>
            (3 + 2) and optionally specify two Availability Zones for the two new nodes.</para></li><li><para><b>Scenario 2:</b> You have 3 active nodes and 2 nodes pending creation (from the
            scenario 1 call) and want to add 1 more node. Specify <code>NumCacheNodes=6</code>
            ((3 + 2) + 1) and optionally specify an Availability Zone for the new node.</para></li><li><para><b>Scenario 3:</b> You want to cancel all pending operations. Specify <code>NumCacheNodes=3</code>
            to cancel all pending operations.</para></li></ul><para>The Availability Zone placement of nodes pending creation cannot be modified. If you
            wish to cancel any nodes pending creation, add 0 nodes by setting <code>NumCacheNodes</code>
            to the number of current nodes.</para><para>If <code>cross-az</code> is specified, existing Memcached nodes remain in their current
            Availability Zone. Only newly created nodes can be located in different Availability
            Zones. For guidance on how to move existing Memcached nodes to different Availability
            Zones, see the <b>Availability Zone Considerations</b> section of <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/CacheNodes.SupportedTypes.html">Cache
            Node Considerations for Memcached</a>.</para><para><b>Impact of new add/remove requests upon pending requests</b></para><ul><li><para>Scenario-1</para><ul><li><para>Pending Action: Delete</para></li><li><para>New Request: Delete</para></li><li><para>Result: The new delete, pending or immediate, replaces the pending delete.</para></li></ul></li><li><para>Scenario-2</para><ul><li><para>Pending Action: Delete</para></li><li><para>New Request: Create</para></li><li><para>Result: The new create, pending or immediate, replaces the pending delete.</para></li></ul></li><li><para>Scenario-3</para><ul><li><para>Pending Action: Create</para></li><li><para>New Request: Delete</para></li><li><para>Result: The new delete, pending or immediate, replaces the pending create.</para></li></ul></li><li><para>Scenario-4</para><ul><li><para>Pending Action: Create</para></li><li><para>New Request: Create</para></li><li><para>Result: The new create is added to the pending create.</para><important><para><b>Important:</b> If the new create request is <b>Apply Immediately - Yes</b>, all
            creates are performed immediately. If the new create request is <b>Apply Immediately
            - No</b>, all creates are pending.</para></important></li></ul></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.NotificationTopicArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications are
            sent.</para><note><para>The Amazon SNS topic owner must be same as the cluster owner.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.NotificationTopicStatus">
            <summary>
            <para>
            <para>The status of the Amazon SNS notification topic. Notifications are sent only if the
            status is <code>active</code>.</para><para>Valid values: <code>active</code> | <code>inactive</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.NumCacheNode">
            <summary>
            <para>
            <para>The number of cache nodes that the cluster should have. If the value for <code>NumCacheNodes</code>
            is greater than the sum of the number of current cache nodes and the number of cache
            nodes pending creation (which may be zero), more nodes are added. If the value is
            less than the number of existing cache nodes, nodes are removed. If the value is equal
            to the number of current cache nodes, any pending add or remove requests are canceled.</para><para>If you are removing cache nodes, you must use the <code>CacheNodeIdsToRemove</code>
            parameter to provide the IDs of the specific cache nodes to remove.</para><para>For clusters running Redis, this value must be 1. For clusters running Memcached,
            this value must be between 1 and 20.</para><note><para>Adding or removing Memcached cache nodes can be applied immediately or as a pending
            operation (see <code>ApplyImmediately</code>).</para><para>A pending operation to modify the number of cache nodes in a cluster during its maintenance
            window, whether by adding or removing nodes in accordance with the scale out architecture,
            is not queued. The customer's latest request to add or remove nodes to the cluster
            overrides any previous pending operations to modify the number of cache nodes in the
            cluster. For example, a request to remove 2 nodes would override a previous pending
            operation to remove 3 nodes. Similarly, a request to add 2 nodes would override a
            previous pending operation to remove 3 nodes and vice versa. As Memcached cache nodes
            may now be provisioned in different Availability Zones with flexible cache node placement,
            a request to add nodes does not automatically override a previous pending operation
            to add nodes. The customer can modify the previous pending operation to add more nodes
            or explicitly cancel the pending request and retry the new request. To cancel pending
            operations to modify the number of cache nodes in a cluster, use the <code>ModifyCacheCluster</code>
            request and set <code>NumCacheNodes</code> equal to the number of cache nodes currently
            in the cluster.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>Specifies the weekly time range during which maintenance on the cluster is performed.
            It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC).
            The minimum maintenance window is a 60 minute period.</para><para>Valid values for <code>ddd</code> are:</para><ul><li><para><code>sun</code></para></li><li><para><code>mon</code></para></li><li><para><code>tue</code></para></li><li><para><code>wed</code></para></li><li><para><code>thu</code></para></li><li><para><code>fri</code></para></li><li><para><code>sat</code></para></li></ul><para>Example: <code>sun:23:00-mon:01:30</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.SecurityGroupId">
            <summary>
            <para>
            <para>Specifies the VPC Security Groups associated with the cluster.</para><para>This parameter can be used only with clusters that are created in an Amazon Virtual
            Private Cloud (Amazon VPC).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.SnapshotRetentionLimit">
            <summary>
            <para>
            <para>The number of days for which ElastiCache retains automatic cluster snapshots before
            deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a
            snapshot that was taken today is retained for 5 days before being deleted.</para><note><para>If the value of <code>SnapshotRetentionLimit</code> is set to zero (0), backups are
            turned off.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.SnapshotWindow">
            <summary>
            <para>
            <para>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot
            of your cluster. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CacheCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.ModifyCacheClusterResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.ModifyCacheClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheClusterId parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheClusterId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.EditECCacheParameterGroupCmdlet">
            <summary>
            Modifies the parameters of a cache parameter group. You can modify up to 20 parameters
            in a single request by submitting a list parameter name and value pairs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheParameterGroupCmdlet.CacheParameterGroupName">
            <summary>
            <para>
            <para>The name of the cache parameter group to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheParameterGroupCmdlet.ParameterNameValue">
            <summary>
            <para>
            <para>An array of parameter names and values for the parameter update. You must supply at
            least one parameter name and value; subsequent arguments are optional. A maximum of
            20 parameters may be modified per request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CacheParameterGroupName'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.ModifyCacheParameterGroupResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.ModifyCacheParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.EditECCacheSubnetGroupCmdlet">
            <summary>
            Modifies an existing cache subnet group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheSubnetGroupCmdlet.CacheSubnetGroupDescription">
            <summary>
            <para>
            <para>A description of the cache subnet group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheSubnetGroupCmdlet.CacheSubnetGroupName">
            <summary>
            <para>
            <para>The name for the cache subnet group. This value is stored as a lowercase string.</para><para>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</para><para>Example: <code>mysubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheSubnetGroupCmdlet.SubnetId">
            <summary>
            <para>
            <para>The EC2 subnet IDs for the cache subnet group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheSubnetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CacheSubnetGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.ModifyCacheSubnetGroupResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.ModifyCacheSubnetGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheSubnetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheSubnetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheSubnetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECCacheSubnetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.EditECGlobalReplicationGroupCmdlet">
            <summary>
            Modifies the settings for a Global Datastore.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECGlobalReplicationGroupCmdlet.ApplyImmediately">
            <summary>
            <para>
            <para>This parameter causes the modifications in this request and any pending modifications
            to be applied, asynchronously and as soon as possible. Modifications to Global Replication
            Groups cannot be requested to be applied in PreferredMaintenceWindow. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECGlobalReplicationGroupCmdlet.AutomaticFailoverEnabled">
            <summary>
            <para>
            <para>Determines whether a read replica is automatically promoted to read/write primary
            if the existing primary encounters a failure. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECGlobalReplicationGroupCmdlet.CacheNodeType">
            <summary>
            <para>
            <para>A valid cache node type that you want to scale this Global Datastore to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECGlobalReplicationGroupCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The upgraded version of the cache engine to be run on the clusters in the Global Datastore.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECGlobalReplicationGroupCmdlet.GlobalReplicationGroupDescription">
            <summary>
            <para>
            <para>A description of the Global Datastore</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECGlobalReplicationGroupCmdlet.GlobalReplicationGroupId">
            <summary>
            <para>
            <para>The name of the Global Datastore</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECGlobalReplicationGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GlobalReplicationGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.ModifyGlobalReplicationGroupResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.ModifyGlobalReplicationGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECGlobalReplicationGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GlobalReplicationGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GlobalReplicationGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECGlobalReplicationGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet">
            <summary>
            Modifies the settings for a replication group.
            
             <ul><li><para><a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/scaling-redis-cluster-mode-enabled.html">Scaling
            for Amazon ElastiCache for Redis (cluster mode enabled)</a> in the ElastiCache User
            Guide
            </para></li><li><para><a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyReplicationGroupShardConfiguration.html">ModifyReplicationGroupShardConfiguration</a>
            in the ElastiCache API Reference
            </para></li></ul><note><para>
            This operation is valid for Redis only.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.ApplyImmediately">
            <summary>
            <para>
            <para>If <code>true</code>, this parameter causes the modifications in this request and
            any pending modifications to be applied, asynchronously and as soon as possible, regardless
            of the <code>PreferredMaintenanceWindow</code> setting for the replication group.</para><para>If <code>false</code>, changes to the nodes in the replication group are applied on
            the next maintenance reboot, or the next failure reboot, whichever occurs first.</para><para>Valid values: <code>true</code> | <code>false</code></para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.AuthToken">
            <summary>
            <para>
            <para>Reserved parameter. The password used to access a password protected server. This
            parameter must be specified with the <code>auth-token-update-strategy </code> parameter.
            Password constraints:</para><ul><li><para>Must be only printable ASCII characters</para></li><li><para>Must be at least 16 characters and no more than 128 characters in length</para></li><li><para>Cannot contain any of the following characters: '/', '"', or '@', '%'</para></li></ul><para> For more information, see AUTH password at <a href="http://redis.io/commands/AUTH">AUTH</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.AuthTokenUpdateStrategy">
            <summary>
            <para>
            <para>Specifies the strategy to use to update the AUTH token. This parameter must be specified
            with the <code>auth-token</code> parameter. Possible values:</para><ul><li><para>Rotate</para></li><li><para>Set</para></li></ul><para> For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/auth.html">Authenticating
            Users with Redis AUTH</a></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.AutomaticFailoverEnabled">
            <summary>
            <para>
            <para>Determines whether a read replica is automatically promoted to read/write primary
            if the existing primary encounters a failure.</para><para>Valid values: <code>true</code> | <code>false</code></para><para>Amazon ElastiCache for Redis does not support Multi-AZ with automatic failover on:</para><ul><li><para>Redis versions earlier than 2.8.6.</para></li><li><para>Redis (cluster mode disabled): T1 node types.</para></li><li><para>Redis (cluster mode enabled): T1 node types.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.AutoMinorVersionUpgrade">
            <summary>
            <para>
            <para>This parameter is currently disabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.CacheNodeType">
            <summary>
            <para>
            <para>A valid cache node type that you want to scale this replication group to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.CacheParameterGroupName">
            <summary>
            <para>
            <para>The name of the cache parameter group to apply to all of the clusters in this replication
            group. This change is asynchronously applied as soon as possible for parameters when
            the <code>ApplyImmediately</code> parameter is specified as <code>true</code> for
            this request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.CacheSecurityGroupName">
            <summary>
            <para>
            <para>A list of cache security group names to authorize for the clusters in this replication
            group. This change is asynchronously applied as soon as possible.</para><para>This parameter can be used only with replication group containing clusters running
            outside of an Amazon Virtual Private Cloud (Amazon VPC).</para><para>Constraints: Must contain no more than 255 alphanumeric characters. Must not be <code>Default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The upgraded version of the cache engine to be run on the clusters in the replication
            group.</para><para><b>Important:</b> You can upgrade to a newer engine version (see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement">Selecting
            a Cache Engine and Version</a>), but you cannot downgrade to an earlier engine version.
            If you want to use an earlier engine version, you must delete the existing replication
            group and create it anew with the earlier engine version. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.MultiAZEnabled">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.NotificationTopicArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications are
            sent.</para><note><para>The Amazon SNS topic owner must be same as the replication group owner. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.NotificationTopicStatus">
            <summary>
            <para>
            <para>The status of the Amazon SNS notification topic for the replication group. Notifications
            are sent only if the status is <code>active</code>.</para><para>Valid values: <code>active</code> | <code>inactive</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>Specifies the weekly time range during which maintenance on the cluster is performed.
            It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC).
            The minimum maintenance window is a 60 minute period.</para><para>Valid values for <code>ddd</code> are:</para><ul><li><para><code>sun</code></para></li><li><para><code>mon</code></para></li><li><para><code>tue</code></para></li><li><para><code>wed</code></para></li><li><para><code>thu</code></para></li><li><para><code>fri</code></para></li><li><para><code>sat</code></para></li></ul><para>Example: <code>sun:23:00-mon:01:30</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.PrimaryClusterId">
            <summary>
            <para>
            <para>For replication groups with a single primary, if this parameter is specified, ElastiCache
            promotes the specified cluster in the specified replication group to the primary role.
            The nodes of all other clusters in the replication group are read replicas.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.ReplicationGroupDescription">
            <summary>
            <para>
            <para>A description for the replication group. Maximum length is 255 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.ReplicationGroupId">
            <summary>
            <para>
            <para>The identifier of the replication group to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.SecurityGroupId">
            <summary>
            <para>
            <para>Specifies the VPC Security Groups associated with the clusters in the replication
            group.</para><para>This parameter can be used only with replication group containing clusters running
            in an Amazon Virtual Private Cloud (Amazon VPC).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.SnapshotRetentionLimit">
            <summary>
            <para>
            <para>The number of days for which ElastiCache retains automatic node group (shard) snapshots
            before deleting them. For example, if you set <code>SnapshotRetentionLimit</code>
            to 5, a snapshot that was taken today is retained for 5 days before being deleted.</para><para><b>Important</b> If the value of SnapshotRetentionLimit is set to zero (0), backups
            are turned off.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.SnapshottingClusterId">
            <summary>
            <para>
            <para>The cluster ID that is used as the daily snapshot source for the replication group.
            This parameter cannot be set for Redis (cluster mode enabled) replication groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.SnapshotWindow">
            <summary>
            <para>
            <para>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot
            of the node group (shard) specified by <code>SnapshottingClusterId</code>.</para><para>Example: <code>05:00-09:00</code></para><para>If you do not specify this parameter, ElastiCache automatically chooses an appropriate
            time range.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.NodeGroupId">
            <summary>
            <para>
            <para>Deprecated. This parameter is not used.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReplicationGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.ModifyReplicationGroupResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.ModifyReplicationGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReplicationGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReplicationGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupShardConfigurationCmdlet">
            <summary>
            Modifies a replication group's shards (node groups) by allowing you to add shards,
            remove shards, or rebalance the keyspaces among exisiting shards.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupShardConfigurationCmdlet.ApplyImmediately">
            <summary>
            <para>
            <para>Indicates that the shard reconfiguration process begins immediately. At present, the
            only permitted value for this parameter is <code>true</code>.</para><para>Value: true</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupShardConfigurationCmdlet.NodeGroupCount">
            <summary>
            <para>
            <para>The number of node groups (shards) that results from the modification of the shard
            configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupShardConfigurationCmdlet.NodeGroupsToRemove">
            <summary>
            <para>
            <para>If the value of <code>NodeGroupCount</code> is less than the current number of node
            groups (shards), then either <code>NodeGroupsToRemove</code> or <code>NodeGroupsToRetain</code>
            is required. <code>NodeGroupsToRemove</code> is a list of <code>NodeGroupId</code>s
            to remove from the cluster.</para><para>ElastiCache for Redis will attempt to remove all node groups listed by <code>NodeGroupsToRemove</code>
            from the cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupShardConfigurationCmdlet.NodeGroupsToRetain">
            <summary>
            <para>
            <para>If the value of <code>NodeGroupCount</code> is less than the current number of node
            groups (shards), then either <code>NodeGroupsToRemove</code> or <code>NodeGroupsToRetain</code>
            is required. <code>NodeGroupsToRetain</code> is a list of <code>NodeGroupId</code>s
            to retain in the cluster.</para><para>ElastiCache for Redis will attempt to remove all node groups except those listed by
            <code>NodeGroupsToRetain</code> from the cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupShardConfigurationCmdlet.ReplicationGroupId">
            <summary>
            <para>
            <para>The name of the Redis (cluster mode enabled) cluster (replication group) on which
            the shards are to be configured.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupShardConfigurationCmdlet.ReshardingConfiguration">
            <summary>
            <para>
            <para>Specifies the preferred availability zones for each node group in the cluster. If
            the value of <code>NodeGroupCount</code> is greater than the current number of node
            groups (shards), you can use this parameter to specify the preferred availability
            zones of the cluster's shards. If you omit this parameter ElastiCache selects availability
            zones for you.</para><para>You can specify this parameter only if the value of <code>NodeGroupCount</code> is
            greater than the current number of node groups (shards).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupShardConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReplicationGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.ModifyReplicationGroupShardConfigurationResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.ModifyReplicationGroupShardConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupShardConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReplicationGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReplicationGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.EditECReplicationGroupShardConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.GetECAllowedNodeTypeModificationCmdlet">
            <summary>
            Lists all available node types that you can scale your Redis cluster's or replication
            group's current node type.
            
             
            <para>
            When you use the <code>ModifyCacheCluster</code> or <code>ModifyReplicationGroup</code>
            operations to scale your cluster or replication group, the value of the <code>CacheNodeType</code>
            parameter must be one of the node types returned by this operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECAllowedNodeTypeModificationCmdlet.CacheClusterId">
            <summary>
            <para>
            <para>The name of the cluster you want to scale up to a larger node instanced type. ElastiCache
            uses the cluster id to identify the current node type of this cluster and from that
            to create a list of node types you can scale up to.</para><important><para>You must provide a value for either the <code>CacheClusterId</code> or the <code>ReplicationGroupId</code>.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECAllowedNodeTypeModificationCmdlet.ReplicationGroupId">
            <summary>
            <para>
            <para>The name of the replication group want to scale up to a larger node type. ElastiCache
            uses the replication group id to identify the current node type being used by this
            replication group, and from that to create a list of node types you can scale up to.</para><important><para>You must provide a value for either the <code>CacheClusterId</code> or the <code>ReplicationGroupId</code>.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECAllowedNodeTypeModificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ScaleUpModifications'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.ListAllowedNodeTypeModificationsResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.ListAllowedNodeTypeModificationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECAllowedNodeTypeModificationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheClusterId parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheClusterId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.GetECCacheClusterCmdlet">
            <summary>
            Returns information about all provisioned clusters if no cluster identifier is specified,
            or about a specific cache cluster if a cluster identifier is supplied.
            
             
            <para>
            By default, abbreviated information about the clusters is returned. You can use the
            optional <i>ShowCacheNodeInfo</i> flag to retrieve detailed information about the
            cache nodes associated with the clusters. These details include the DNS address and
            port for the cache node endpoint.
            </para><para>
            If the cluster is in the <i>creating</i> state, only cluster-level information is
            displayed until all of the nodes are successfully provisioned.
            </para><para>
            If the cluster is in the <i>deleting</i> state, only cluster-level information is
            displayed.
            </para><para>
            If cache nodes are currently being added to the cluster, node endpoint information
            and creation time for the additional nodes are not displayed until they are completely
            provisioned. When the cluster state is <i>available</i>, the cluster is ready for
            use.
            </para><para>
            If cache nodes are currently being removed from the cluster, no endpoint information
            for the removed nodes is displayed.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheClusterCmdlet.CacheClusterId">
            <summary>
            <para>
            <para>The user-supplied cluster identifier. If this parameter is specified, only information
            about that specific cluster is returned. This parameter isn't case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheClusterCmdlet.ShowCacheClustersNotInReplicationGroup">
            <summary>
            <para>
            <para>An optional flag that can be included in the <code>DescribeCacheCluster</code> request
            to show only nodes (API/CLI: clusters) that are not members of a replication group.
            In practice, this mean Memcached and single node Redis clusters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheClusterCmdlet.ShowCacheNodeInfo">
            <summary>
            <para>
            <para>An optional flag that can be included in the <code>DescribeCacheCluster</code> request
            to retrieve information about the individual cache nodes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheClusterCmdlet.Marker">
            <summary>
            <para>
            <para>An optional marker returned from a prior request. Use this marker for pagination of
            results from this operation. If this parameter is specified, the response includes
            only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheClusterCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a marker is included in the response
            so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: minimum 20; maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CacheClusters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DescribeCacheClustersResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DescribeCacheClustersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheClusterId parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheClusterId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheClusterCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.GetECCacheEngineVersionCmdlet">
            <summary>
            Returns a list of the available cache engines and their versions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheEngineVersionCmdlet.CacheParameterGroupFamily">
            <summary>
            <para>
            <para>The name of a specific cache parameter group family to return details for.</para><para>Valid values are: <code>memcached1.4</code> | <code>memcached1.5</code> | <code>redis2.6</code>
            | <code>redis2.8</code> | <code>redis3.2</code> | <code>redis4.0</code> | <code>redis5.0</code>
            | </para><para>Constraints:</para><ul><li><para>Must be 1 to 255 alphanumeric characters</para></li><li><para>First character must be a letter</para></li><li><para>Cannot end with a hyphen or contain two consecutive hyphens</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheEngineVersionCmdlet.DefaultOnly">
            <summary>
            <para>
            <para>If <code>true</code>, specifies that only the default version of the specified engine
            or engine and major version combination is to be returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheEngineVersionCmdlet.Engine">
            <summary>
            <para>
            <para>The cache engine to return. Valid values: <code>memcached</code> | <code>redis</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheEngineVersionCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The cache engine version to return.</para><para>Example: <code>1.4.14</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheEngineVersionCmdlet.Marker">
            <summary>
            <para>
            <para>An optional marker returned from a prior request. Use this marker for pagination of
            results from this operation. If this parameter is specified, the response includes
            only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheEngineVersionCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a marker is included in the response
            so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: minimum 20; maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheEngineVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CacheEngineVersions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DescribeCacheEngineVersionsResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DescribeCacheEngineVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheEngineVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Engine parameter.
            The -PassThru parameter is deprecated, use -Select '^Engine' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheEngineVersionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.GetECCacheParameterCmdlet">
            <summary>
            Returns the detailed parameter list for a particular cache parameter group.<br/><br/>In the AWS.Tools.ElastiCache module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheParameterCmdlet.CacheParameterGroupName">
            <summary>
            <para>
            <para>The name of a specific cache parameter group to return details for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheParameterCmdlet.Source">
            <summary>
            <para>
            <para>The parameter types to return.</para><para>Valid values: <code>user</code> | <code>system</code> | <code>engine-default</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheParameterCmdlet.Marker">
            <summary>
            <para>
            <para>An optional marker returned from a prior request. Use this marker for pagination of
            results from this operation. If this parameter is specified, the response includes
            only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.ElastiCache module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheParameterCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a marker is included in the response
            so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: minimum 20; maximum 100.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DescribeCacheParametersResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DescribeCacheParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheParameterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheParameterCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.GetECCacheParameterGroupCmdlet">
            <summary>
            Returns a list of cache parameter group descriptions. If a cache parameter group name
            is specified, the list contains only the descriptions for that group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheParameterGroupCmdlet.CacheParameterGroupName">
            <summary>
            <para>
            <para>The name of a specific cache parameter group to return details for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheParameterGroupCmdlet.Marker">
            <summary>
            <para>
            <para>An optional marker returned from a prior request. Use this marker for pagination of
            results from this operation. If this parameter is specified, the response includes
            only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheParameterGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a marker is included in the response
            so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: minimum 20; maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CacheParameterGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DescribeCacheParameterGroupsResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DescribeCacheParameterGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheParameterGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.GetECCacheSecurityGroupCmdlet">
            <summary>
            Returns a list of cache security group descriptions. If a cache security group name
            is specified, the list contains only the description of that group. This applicable
            only when you have ElastiCache in Classic setup<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheSecurityGroupCmdlet.CacheSecurityGroupName">
            <summary>
            <para>
            <para>The name of the cache security group to return details for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheSecurityGroupCmdlet.Marker">
            <summary>
            <para>
            <para>An optional marker returned from a prior request. Use this marker for pagination of
            results from this operation. If this parameter is specified, the response includes
            only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheSecurityGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a marker is included in the response
            so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: minimum 20; maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheSecurityGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CacheSecurityGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DescribeCacheSecurityGroupsResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DescribeCacheSecurityGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheSecurityGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheSecurityGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheSecurityGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheSecurityGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.GetECCacheSubnetGroupCmdlet">
            <summary>
            Returns a list of cache subnet group descriptions. If a subnet group name is specified,
            the list contains only the description of that group. This is applicable only when
            you have ElastiCache in VPC setup. All ElastiCache clusters now launch in VPC by default.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheSubnetGroupCmdlet.CacheSubnetGroupName">
            <summary>
            <para>
            <para>The name of the cache subnet group to return details for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheSubnetGroupCmdlet.Marker">
            <summary>
            <para>
            <para>An optional marker returned from a prior request. Use this marker for pagination of
            results from this operation. If this parameter is specified, the response includes
            only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheSubnetGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a marker is included in the response
            so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: minimum 20; maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheSubnetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CacheSubnetGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DescribeCacheSubnetGroupsResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DescribeCacheSubnetGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheSubnetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheSubnetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheSubnetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECCacheSubnetGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.GetECEngineDefaultParameterCmdlet">
            <summary>
            Returns the default engine and system parameter information for the specified cache
            engine.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECEngineDefaultParameterCmdlet.CacheParameterGroupFamily">
            <summary>
            <para>
            <para>The name of the cache parameter group family.</para><para>Valid values are: <code>memcached1.4</code> | <code>memcached1.5</code> | <code>redis2.6</code>
            | <code>redis2.8</code> | <code>redis3.2</code> | <code>redis4.0</code> | <code>redis5.0</code>
            | </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECEngineDefaultParameterCmdlet.Marker">
            <summary>
            <para>
            <para>An optional marker returned from a prior request. Use this marker for pagination of
            results from this operation. If this parameter is specified, the response includes
            only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECEngineDefaultParameterCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a marker is included in the response
            so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: minimum 20; maximum 100.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECEngineDefaultParameterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EngineDefaults'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DescribeEngineDefaultParametersResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DescribeEngineDefaultParametersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECEngineDefaultParameterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheParameterGroupFamily parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheParameterGroupFamily' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.GetECEventCmdlet">
            <summary>
            Returns events related to clusters, cache security groups, and cache parameter groups.
            You can obtain events specific to a particular cluster, cache security group, or cache
            parameter group by providing the name as a parameter.
            
             
            <para>
            By default, only the events occurring within the last hour are returned; however,
            you can retrieve up to 14 days' worth of events if necessary.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECEventCmdlet.Duration">
            <summary>
            <para>
            <para>The number of minutes worth of events to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECEventCmdlet.UtcEndTime">
            <summary>
            <para>
            <para>The end of the time interval for which to retrieve events, specified in ISO 8601 format.</para><para><b>Example:</b> 2017-03-30T07:03:49.555Z</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECEventCmdlet.SourceIdentifier">
            <summary>
            <para>
            <para>The identifier of the event source for which events are returned. If not specified,
            all sources are included in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECEventCmdlet.SourceType">
            <summary>
            <para>
            <para>The event source to retrieve events for. If no value is specified, all events are
            returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECEventCmdlet.UtcStartTime">
            <summary>
            <para>
            <para>The beginning of the time interval to retrieve events for, specified in ISO 8601 format.</para><para><b>Example:</b> 2017-03-30T07:03:49.555Z</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECEventCmdlet.EndTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc
            results in both EndTime and EndTimeUtc being assigned, the latest assignment to either
            one of the two property is reflected in the value of both. EndTime is provided for
            backwards compatibility only and assigning a non-Utc DateTime to it results in the
            wrong timestamp being passed to the service.</para><para>The end of the time interval for which to retrieve events, specified in ISO 8601 format.</para><para><b>Example:</b> 2017-03-30T07:03:49.555Z</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECEventCmdlet.Marker">
            <summary>
            <para>
            <para>An optional marker returned from a prior request. Use this marker for pagination of
            results from this operation. If this parameter is specified, the response includes
            only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECEventCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a marker is included in the response
            so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: minimum 20; maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECEventCmdlet.StartTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or
            StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. StartTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The beginning of the time interval to retrieve events for, specified in ISO 8601 format.</para><para><b>Example:</b> 2017-03-30T07:03:49.555Z</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECEventCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Events'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DescribeEventsResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DescribeEventsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECEventCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECEventCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.GetECGlobalReplicationGroupCmdlet">
            <summary>
            Returns information about a particular global replication group. If no identifier
            is specified, returns information about all Global Datastores.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECGlobalReplicationGroupCmdlet.GlobalReplicationGroupId">
            <summary>
            <para>
            <para>The name of the Global Datastore</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECGlobalReplicationGroupCmdlet.ShowMemberInfo">
            <summary>
            <para>
            <para>Returns the list of members that comprise the Global Datastore.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECGlobalReplicationGroupCmdlet.Marker">
            <summary>
            <para>
            <para>An optional marker returned from a prior request. Use this marker for pagination of
            results from this operation. If this parameter is specified, the response includes
            only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECGlobalReplicationGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified MaxRecords value, a marker is included in the response so that the remaining
            results can be retrieved. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECGlobalReplicationGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GlobalReplicationGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DescribeGlobalReplicationGroupsResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DescribeGlobalReplicationGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECGlobalReplicationGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GlobalReplicationGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GlobalReplicationGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECGlobalReplicationGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.GetECReplicationGroupCmdlet">
            <summary>
            Returns information about a particular replication group. If no identifier is specified,
            <code>DescribeReplicationGroups</code> returns information about all replication groups.
            
             <note><para>
            This operation is valid for Redis only.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReplicationGroupCmdlet.ReplicationGroupId">
            <summary>
            <para>
            <para>The identifier for the replication group to be described. This parameter is not case
            sensitive.</para><para>If you do not specify this parameter, information about all replication groups is
            returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReplicationGroupCmdlet.Marker">
            <summary>
            <para>
            <para>An optional marker returned from a prior request. Use this marker for pagination of
            results from this operation. If this parameter is specified, the response includes
            only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReplicationGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a marker is included in the response
            so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: minimum 20; maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReplicationGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReplicationGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DescribeReplicationGroupsResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DescribeReplicationGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReplicationGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReplicationGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReplicationGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReplicationGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodeCmdlet">
            <summary>
            Returns information about reserved cache nodes for this account, or about a specified
            reserved cache node.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodeCmdlet.CacheNodeType">
            <summary>
            <para>
            <para>The cache node type filter value. Use this parameter to show only those reservations
            matching the specified cache node type.</para><para>The following node types are supported by ElastiCache. Generally speaking, the current
            generation types provide more memory and computational power at lower cost when compared
            to their equivalent previous generation counterparts.</para><ul><li><para>General purpose:</para><ul><li><para>Current generation: </para><para><b>M5 node types:</b><code>cache.m5.large</code>, <code>cache.m5.xlarge</code>,
            <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>,
            <code>cache.m5.24xlarge</code></para><para><b>M4 node types:</b><code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,
            <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code></para><para><b>T3 node types:</b><code>cache.t3.micro</code>, <code>cache.t3.small</code>, <code>cache.t3.medium</code></para><para><b>T2 node types:</b><code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code></para></li><li><para>Previous generation: (not recommended)</para><para><b>T1 node types:</b><code>cache.t1.micro</code></para><para><b>M1 node types:</b><code>cache.m1.small</code>, <code>cache.m1.medium</code>,
            <code>cache.m1.large</code>, <code>cache.m1.xlarge</code></para><para><b>M3 node types:</b><code>cache.m3.medium</code>, <code>cache.m3.large</code>,
            <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code></para></li></ul></li><li><para>Compute optimized:</para><ul><li><para>Previous generation: (not recommended)</para><para><b>C1 node types:</b><code>cache.c1.xlarge</code></para></li></ul></li><li><para>Memory optimized:</para><ul><li><para>Current generation: </para><para><b>R5 node types:</b><code>cache.r5.large</code>, <code>cache.r5.xlarge</code>,
            <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>,
            <code>cache.r5.24xlarge</code></para><para><b>R4 node types:</b><code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,
            <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>,
            <code>cache.r4.16xlarge</code></para></li><li><para>Previous generation: (not recommended)</para><para><b>M2 node types:</b><code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>,
            <code>cache.m2.4xlarge</code></para><para><b>R3 node types:</b><code>cache.r3.large</code>, <code>cache.r3.xlarge</code>,
            <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code></para></li></ul></li></ul><para><b>Additional node type info</b></para><ul><li><para>All current generation instance types are created in Amazon VPC by default.</para></li><li><para>Redis append-only files (AOF) are not supported for T1 or T2 instances.</para></li><li><para>Redis Multi-AZ with automatic failover is not supported on T1 instances.</para></li><li><para>Redis configuration variables <code>appendonly</code> and <code>appendfsync</code>
            are not supported on Redis version 2.8.22 and later.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodeCmdlet.Duration">
            <summary>
            <para>
            <para>The duration filter value, specified in years or seconds. Use this parameter to show
            only reservations for this duration.</para><para>Valid Values: <code>1 | 3 | 31536000 | 94608000</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodeCmdlet.OfferingType">
            <summary>
            <para>
            <para>The offering type filter value. Use this parameter to show only the available offerings
            matching the specified offering type.</para><para>Valid values: <code>"Light Utilization"|"Medium Utilization"|"Heavy Utilization"</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodeCmdlet.ProductDescription">
            <summary>
            <para>
            <para>The product description filter value. Use this parameter to show only those reservations
            matching the specified product description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodeCmdlet.ReservedCacheNodeId">
            <summary>
            <para>
            <para>The reserved cache node identifier filter value. Use this parameter to show only the
            reservation that matches the specified reservation ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodeCmdlet.ReservedCacheNodesOfferingId">
            <summary>
            <para>
            <para>The offering identifier filter value. Use this parameter to show only purchased reservations
            matching the specified offering identifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodeCmdlet.Marker">
            <summary>
            <para>
            <para>An optional marker returned from a prior request. Use this marker for pagination of
            results from this operation. If this parameter is specified, the response includes
            only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodeCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a marker is included in the response
            so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: minimum 20; maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReservedCacheNodes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DescribeReservedCacheNodesResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DescribeReservedCacheNodesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedCacheNodeId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedCacheNodeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodeCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodesOfferingCmdlet">
            <summary>
            Lists available reserved cache node offerings.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodesOfferingCmdlet.CacheNodeType">
            <summary>
            <para>
            <para>The cache node type filter value. Use this parameter to show only the available offerings
            matching the specified cache node type.</para><para>The following node types are supported by ElastiCache. Generally speaking, the current
            generation types provide more memory and computational power at lower cost when compared
            to their equivalent previous generation counterparts.</para><ul><li><para>General purpose:</para><ul><li><para>Current generation: </para><para><b>M5 node types:</b><code>cache.m5.large</code>, <code>cache.m5.xlarge</code>,
            <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>,
            <code>cache.m5.24xlarge</code></para><para><b>M4 node types:</b><code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,
            <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code></para><para><b>T3 node types:</b><code>cache.t3.micro</code>, <code>cache.t3.small</code>, <code>cache.t3.medium</code></para><para><b>T2 node types:</b><code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code></para></li><li><para>Previous generation: (not recommended)</para><para><b>T1 node types:</b><code>cache.t1.micro</code></para><para><b>M1 node types:</b><code>cache.m1.small</code>, <code>cache.m1.medium</code>,
            <code>cache.m1.large</code>, <code>cache.m1.xlarge</code></para><para><b>M3 node types:</b><code>cache.m3.medium</code>, <code>cache.m3.large</code>,
            <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code></para></li></ul></li><li><para>Compute optimized:</para><ul><li><para>Previous generation: (not recommended)</para><para><b>C1 node types:</b><code>cache.c1.xlarge</code></para></li></ul></li><li><para>Memory optimized:</para><ul><li><para>Current generation: </para><para><b>R5 node types:</b><code>cache.r5.large</code>, <code>cache.r5.xlarge</code>,
            <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>,
            <code>cache.r5.24xlarge</code></para><para><b>R4 node types:</b><code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,
            <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>,
            <code>cache.r4.16xlarge</code></para></li><li><para>Previous generation: (not recommended)</para><para><b>M2 node types:</b><code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>,
            <code>cache.m2.4xlarge</code></para><para><b>R3 node types:</b><code>cache.r3.large</code>, <code>cache.r3.xlarge</code>,
            <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code></para></li></ul></li></ul><para><b>Additional node type info</b></para><ul><li><para>All current generation instance types are created in Amazon VPC by default.</para></li><li><para>Redis append-only files (AOF) are not supported for T1 or T2 instances.</para></li><li><para>Redis Multi-AZ with automatic failover is not supported on T1 instances.</para></li><li><para>Redis configuration variables <code>appendonly</code> and <code>appendfsync</code>
            are not supported on Redis version 2.8.22 and later.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodesOfferingCmdlet.Duration">
            <summary>
            <para>
            <para>Duration filter value, specified in years or seconds. Use this parameter to show only
            reservations for a given duration.</para><para>Valid Values: <code>1 | 3 | 31536000 | 94608000</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodesOfferingCmdlet.OfferingType">
            <summary>
            <para>
            <para>The offering type filter value. Use this parameter to show only the available offerings
            matching the specified offering type.</para><para>Valid Values: <code>"Light Utilization"|"Medium Utilization"|"Heavy Utilization"</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodesOfferingCmdlet.ProductDescription">
            <summary>
            <para>
            <para>The product description filter value. Use this parameter to show only the available
            offerings matching the specified product description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodesOfferingCmdlet.ReservedCacheNodesOfferingId">
            <summary>
            <para>
            <para>The offering identifier filter value. Use this parameter to show only the available
            offering that matches the specified reservation identifier.</para><para>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodesOfferingCmdlet.Marker">
            <summary>
            <para>
            <para>An optional marker returned from a prior request. Use this marker for pagination of
            results from this operation. If this parameter is specified, the response includes
            only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodesOfferingCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a marker is included in the response
            so that the remaining results can be retrieved.</para><para>Default: 100</para><para>Constraints: minimum 20; maximum 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodesOfferingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReservedCacheNodesOfferings'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DescribeReservedCacheNodesOfferingsResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DescribeReservedCacheNodesOfferingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodesOfferingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedCacheNodesOfferingId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedCacheNodesOfferingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECReservedCacheNodesOfferingCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.GetECServiceUpdateCmdlet">
            <summary>
            Returns details of the service updates<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECServiceUpdateCmdlet.ServiceUpdateName">
            <summary>
            <para>
            <para>The unique ID of the service update</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECServiceUpdateCmdlet.ServiceUpdateStatus">
            <summary>
            <para>
            <para>The status of the service update</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECServiceUpdateCmdlet.Marker">
            <summary>
            <para>
            <para>An optional marker returned from a prior request. Use this marker for pagination of
            results from this operation. If this parameter is specified, the response includes
            only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECServiceUpdateCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECServiceUpdateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ServiceUpdates'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DescribeServiceUpdatesResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DescribeServiceUpdatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECServiceUpdateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServiceUpdateName parameter.
            The -PassThru parameter is deprecated, use -Select '^ServiceUpdateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECServiceUpdateCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.GetECSnapshotCmdlet">
            <summary>
            Returns information about cluster or replication group snapshots. By default, <code>DescribeSnapshots</code>
            lists all of your snapshots; it can optionally describe a single snapshot, or just
            the snapshots associated with a particular cache cluster.
            
             <note><para>
            This operation is valid for Redis only.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECSnapshotCmdlet.CacheClusterId">
            <summary>
            <para>
            <para>A user-supplied cluster identifier. If this parameter is specified, only snapshots
            associated with that specific cluster are described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECSnapshotCmdlet.ReplicationGroupId">
            <summary>
            <para>
            <para>A user-supplied replication group identifier. If this parameter is specified, only
            snapshots associated with that specific replication group are described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECSnapshotCmdlet.ShowNodeGroupConfig">
            <summary>
            <para>
            <para>A Boolean value which if true, the node group (shard) configuration is included in
            the snapshot description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECSnapshotCmdlet.SnapshotName">
            <summary>
            <para>
            <para>A user-supplied name of the snapshot. If this parameter is specified, only this snapshot
            are described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECSnapshotCmdlet.SnapshotSource">
            <summary>
            <para>
            <para>If set to <code>system</code>, the output shows snapshots that were automatically
            created by ElastiCache. If set to <code>user</code> the output shows snapshots that
            were manually created. If omitted, the output shows both automatically and manually
            created snapshots.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECSnapshotCmdlet.Marker">
            <summary>
            <para>
            <para>An optional marker returned from a prior request. Use this marker for pagination of
            results from this operation. If this parameter is specified, the response includes
            only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECSnapshotCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a marker is included in the response
            so that the remaining results can be retrieved.</para><para>Default: 50</para><para>Constraints: minimum 20; maximum 50.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Snapshots'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DescribeSnapshotsResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DescribeSnapshotsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheClusterId parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheClusterId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECSnapshotCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.GetECTagCmdlet">
            <summary>
            Lists all cost allocation tags currently on the named resource. A <code>cost allocation
            tag</code> is a key-value pair where the key is case-sensitive and the value is optional.
            You can use cost allocation tags to categorize and track your AWS costs.
            
             
            <para>
            If the cluster is not in the <i>available</i> state, <code>ListTagsForResource</code>
            returns an error.
            </para><para>
            You can have a maximum of 50 cost allocation tags on an ElastiCache resource. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Tagging.html">Monitoring
            Costs with Tags</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECTagCmdlet.ResourceName">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource for which you want the list of tags,
            for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code>
            or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.</para><para>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TagList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceName parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.GetECUpdateActionCmdlet">
            <summary>
            Returns details of the update actions<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECUpdateActionCmdlet.CacheClusterId">
            <summary>
            <para>
            <para>The cache cluster IDs</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECUpdateActionCmdlet.ServiceUpdateTimeRange_EndTime">
            <summary>
            <para>
            <para>The end time of the time range filter</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECUpdateActionCmdlet.Engine">
            <summary>
            <para>
            <para>The Elasticache engine to which the update applies. Either Redis or Memcached </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECUpdateActionCmdlet.ReplicationGroupId">
            <summary>
            <para>
            <para>The replication group IDs</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECUpdateActionCmdlet.ServiceUpdateName">
            <summary>
            <para>
            <para>The unique ID of the service update</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECUpdateActionCmdlet.ServiceUpdateStatus">
            <summary>
            <para>
            <para>The status of the service update</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECUpdateActionCmdlet.ShowNodeLevelUpdateStatus">
            <summary>
            <para>
            <para>Dictates whether to include node level update status in the response </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECUpdateActionCmdlet.ServiceUpdateTimeRange_StartTime">
            <summary>
            <para>
            <para>The start time of the time range filter</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECUpdateActionCmdlet.UpdateActionStatus">
            <summary>
            <para>
            <para>The status of the update action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECUpdateActionCmdlet.Marker">
            <summary>
            <para>
            <para>An optional marker returned from a prior request. Use this marker for pagination of
            results from this operation. If this parameter is specified, the response includes
            only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.Marker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECUpdateActionCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of records to include in the response</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECUpdateActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UpdateActions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DescribeUpdateActionsResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DescribeUpdateActionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECUpdateActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServiceUpdateName parameter.
            The -PassThru parameter is deprecated, use -Select '^ServiceUpdateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.GetECUpdateActionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet">
            <summary>
            Creates a cluster. All nodes in the cluster run the same protocol-compliant cache
            engine software, either Memcached or Redis.
            
             
            <para>
            This operation is not supported for Redis (cluster mode enabled) clusters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.AuthToken">
            <summary>
            <para>
            <para><b>Reserved parameter.</b> The password used to access a password protected server.</para><para>Password constraints:</para><ul><li><para>Must be only printable ASCII characters.</para></li><li><para>Must be at least 16 characters and no more than 128 characters in length.</para></li><li><para>The only permitted printable special characters are !, &amp;, #, $, ^, &lt;, &gt;,
            and -. Other printable special characters cannot be used in the AUTH token.</para></li></ul><para>For more information, see <a href="http://redis.io/commands/AUTH">AUTH password</a>
            at http://redis.io/commands/AUTH.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.AutoMinorVersionUpgrade">
            <summary>
            <para>
            <para>This parameter is currently disabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.AZMode">
            <summary>
            <para>
            <para>Specifies whether the nodes in this Memcached cluster are created in a single Availability
            Zone or created across multiple Availability Zones in the cluster's region.</para><para>This parameter is only supported for Memcached clusters.</para><para>If the <code>AZMode</code> and <code>PreferredAvailabilityZones</code> are not specified,
            ElastiCache assumes <code>single-az</code> mode.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.CacheClusterId">
            <summary>
            <para>
            <para>The node group (shard) identifier. This parameter is stored as a lowercase string.</para><para><b>Constraints:</b></para><ul><li><para>A name must contain from 1 to 50 alphanumeric characters or hyphens.</para></li><li><para>The first character must be a letter.</para></li><li><para>A name cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.CacheNodeType">
            <summary>
            <para>
            <para>The compute and memory capacity of the nodes in the node group (shard).</para><para>The following node types are supported by ElastiCache. Generally speaking, the current
            generation types provide more memory and computational power at lower cost when compared
            to their equivalent previous generation counterparts.</para><ul><li><para>General purpose:</para><ul><li><para>Current generation: </para><para><b>M5 node types:</b><code>cache.m5.large</code>, <code>cache.m5.xlarge</code>,
            <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>,
            <code>cache.m5.24xlarge</code></para><para><b>M4 node types:</b><code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,
            <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code></para><para><b>T3 node types:</b><code>cache.t3.micro</code>, <code>cache.t3.small</code>, <code>cache.t3.medium</code></para><para><b>T2 node types:</b><code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code></para></li><li><para>Previous generation: (not recommended)</para><para><b>T1 node types:</b><code>cache.t1.micro</code></para><para><b>M1 node types:</b><code>cache.m1.small</code>, <code>cache.m1.medium</code>,
            <code>cache.m1.large</code>, <code>cache.m1.xlarge</code></para><para><b>M3 node types:</b><code>cache.m3.medium</code>, <code>cache.m3.large</code>,
            <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code></para></li></ul></li><li><para>Compute optimized:</para><ul><li><para>Previous generation: (not recommended)</para><para><b>C1 node types:</b><code>cache.c1.xlarge</code></para></li></ul></li><li><para>Memory optimized:</para><ul><li><para>Current generation: </para><para><b>R5 node types:</b><code>cache.r5.large</code>, <code>cache.r5.xlarge</code>,
            <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>,
            <code>cache.r5.24xlarge</code></para><para><b>R4 node types:</b><code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,
            <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>,
            <code>cache.r4.16xlarge</code></para></li><li><para>Previous generation: (not recommended)</para><para><b>M2 node types:</b><code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>,
            <code>cache.m2.4xlarge</code></para><para><b>R3 node types:</b><code>cache.r3.large</code>, <code>cache.r3.xlarge</code>,
            <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code></para></li></ul></li></ul><para><b>Additional node type info</b></para><ul><li><para>All current generation instance types are created in Amazon VPC by default.</para></li><li><para>Redis append-only files (AOF) are not supported for T1 or T2 instances.</para></li><li><para>Redis Multi-AZ with automatic failover is not supported on T1 instances.</para></li><li><para>Redis configuration variables <code>appendonly</code> and <code>appendfsync</code>
            are not supported on Redis version 2.8.22 and later.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.CacheParameterGroupName">
            <summary>
            <para>
            <para>The name of the parameter group to associate with this cluster. If this argument is
            omitted, the default parameter group for the specified engine is used. You cannot
            use any parameter group which has <code>cluster-enabled='yes'</code> when creating
            a cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.CacheSecurityGroupName">
            <summary>
            <para>
            <para>A list of security group names to associate with this cluster.</para><para>Use this parameter only when you are creating a cluster outside of an Amazon Virtual
            Private Cloud (Amazon VPC).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.CacheSubnetGroupName">
            <summary>
            <para>
            <para>The name of the subnet group to be used for the cluster.</para><para>Use this parameter only when you are creating a cluster in an Amazon Virtual Private
            Cloud (Amazon VPC).</para><important><para>If you're going to launch your cluster in an Amazon VPC, you need to create a subnet
            group before you start creating a cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html">Subnets
            and Subnet Groups</a>.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.Engine">
            <summary>
            <para>
            <para>The name of the cache engine to be used for this cluster.</para><para>Valid values for this parameter are: <code>memcached</code> | <code>redis</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The version number of the cache engine to be used for this cluster. To view the supported
            cache engine versions, use the DescribeCacheEngineVersions operation.</para><para><b>Important:</b> You can upgrade to a newer engine version (see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement">Selecting
            a Cache Engine and Version</a>), but you cannot downgrade to an earlier engine version.
            If you want to use an earlier engine version, you must delete the existing cluster
            or replication group and create it anew with the earlier engine version. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.NotificationTopicArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic
            to which notifications are sent.</para><note><para>The Amazon SNS topic owner must be the same as the cluster owner.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.NumCacheNode">
            <summary>
            <para>
            <para>The initial number of cache nodes that the cluster has.</para><para>For clusters running Redis, this value must be 1. For clusters running Memcached,
            this value must be between 1 and 20.</para><para>If you need more than 20 nodes for your Memcached cluster, please fill out the ElastiCache
            Limit Increase Request form at <a href="http://aws.amazon.com/contact-us/elasticache-node-limit-request/">http://aws.amazon.com/contact-us/elasticache-node-limit-request/</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.Port">
            <summary>
            <para>
            <para>The port number on which each of the cache nodes accepts connections.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.PreferredAvailabilityZone">
            <summary>
            <para>
            <para>The EC2 Availability Zone in which the cluster is created.</para><para>All nodes belonging to this Memcached cluster are placed in the preferred Availability
            Zone. If you want to create your nodes across multiple Availability Zones, use <code>PreferredAvailabilityZones</code>.</para><para>Default: System chosen Availability Zone.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.PreferredAvailabilityZoneSet">
            <summary>
            <para>
            <para>A list of the Availability Zones in which cache nodes are created. The order of the
            zones in the list is not important.</para><para>This option is only supported on Memcached.</para><note><para>If you are creating your cluster in an Amazon VPC (recommended) you can only locate
            nodes in Availability Zones that are associated with the subnets in the selected subnet
            group.</para><para>The number of Availability Zones listed must equal the value of <code>NumCacheNodes</code>.</para></note><para>If you want all the nodes in the same Availability Zone, use <code>PreferredAvailabilityZone</code>
            instead, or repeat the Availability Zone multiple times in the list.</para><para>Default: System chosen Availability Zones.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>Specifies the weekly time range during which maintenance on the cluster is performed.
            It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC).
            The minimum maintenance window is a 60 minute period. Valid values for <code>ddd</code>
            are:</para><para>Specifies the weekly time range during which maintenance on the cluster is performed.
            It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC).
            The minimum maintenance window is a 60 minute period.</para><para>Valid values for <code>ddd</code> are:</para><ul><li><para><code>sun</code></para></li><li><para><code>mon</code></para></li><li><para><code>tue</code></para></li><li><para><code>wed</code></para></li><li><para><code>thu</code></para></li><li><para><code>fri</code></para></li><li><para><code>sat</code></para></li></ul><para>Example: <code>sun:23:00-mon:01:30</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.ReplicationGroupId">
            <summary>
            <para>
            <para>The ID of the replication group to which this cluster should belong. If this parameter
            is specified, the cluster is added to the specified replication group as a read replica;
            otherwise, the cluster is a standalone primary that is not part of any replication
            group.</para><para>If the specified replication group is Multi-AZ enabled and the Availability Zone is
            not specified, the cluster is created in Availability Zones that provide the best
            spread of read replicas across Availability Zones.</para><note><para>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.SecurityGroupId">
            <summary>
            <para>
            <para>One or more VPC security groups associated with the cluster.</para><para>Use this parameter only when you are creating a cluster in an Amazon Virtual Private
            Cloud (Amazon VPC).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.SnapshotArn">
            <summary>
            <para>
            <para>A single-element string list containing an Amazon Resource Name (ARN) that uniquely
            identifies a Redis RDB snapshot file stored in Amazon S3. The snapshot file is used
            to populate the node group (shard). The Amazon S3 object name in the ARN cannot contain
            any commas.</para><note><para>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</para></note><para>Example of an Amazon S3 ARN: <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.SnapshotName">
            <summary>
            <para>
            <para>The name of a Redis snapshot from which to restore data into the new node group (shard).
            The snapshot status changes to <code>restoring</code> while the new node group (shard)
            is being created.</para><note><para>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.SnapshotRetentionLimit">
            <summary>
            <para>
            <para>The number of days for which ElastiCache retains automatic snapshots before deleting
            them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot
            taken today is retained for 5 days before being deleted.</para><note><para>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</para></note><para>Default: 0 (i.e., automatic backups are disabled for this cache cluster).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.SnapshotWindow">
            <summary>
            <para>
            <para>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot
            of your node group (shard).</para><para>Example: <code>05:00-09:00</code></para><para>If you do not specify this parameter, ElastiCache automatically chooses an appropriate
            time range.</para><note><para>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.Tag">
            <summary>
            <para>
            <para>A list of cost allocation tags to be added to this resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CacheCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.CreateCacheClusterResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.CreateCacheClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheClusterId parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheClusterId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.NewECCacheParameterGroupCmdlet">
            <summary>
            Creates a new Amazon ElastiCache cache parameter group. An ElastiCache cache parameter
            group is a collection of parameters and their values that are applied to all of the
            nodes in any cluster or replication group using the CacheParameterGroup.
            
             
            <para>
            A newly created CacheParameterGroup is an exact duplicate of the default parameter
            group for the CacheParameterGroupFamily. To customize the newly created CacheParameterGroup
            you can change the values of specific parameters. For more information, see:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyCacheParameterGroup.html">ModifyCacheParameterGroup</a>
            in the ElastiCache API Reference.
            </para></li><li><para><a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ParameterGroups.html">Parameters
            and Parameter Groups</a> in the ElastiCache User Guide.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheParameterGroupCmdlet.CacheParameterGroupFamily">
            <summary>
            <para>
            <para>The name of the cache parameter group family that the cache parameter group can be
            used with.</para><para>Valid values are: <code>memcached1.4</code> | <code>memcached1.5</code> | <code>redis2.6</code>
            | <code>redis2.8</code> | <code>redis3.2</code> | <code>redis4.0</code> | <code>redis5.0</code>
            | </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheParameterGroupCmdlet.CacheParameterGroupName">
            <summary>
            <para>
            <para>A user-specified name for the cache parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheParameterGroupCmdlet.Description">
            <summary>
            <para>
            <para>A user-specified description for the cache parameter group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CacheParameterGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.CreateCacheParameterGroupResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.CreateCacheParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.NewECCacheSecurityGroupCmdlet">
            <summary>
            Creates a new cache security group. Use a cache security group to control access to
            one or more clusters.
            
             
            <para>
            Cache security groups are only used when you are creating a cluster outside of an
            Amazon Virtual Private Cloud (Amazon VPC). If you are creating a cluster inside of
            a VPC, use a cache subnet group instead. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateCacheSubnetGroup.html">CreateCacheSubnetGroup</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheSecurityGroupCmdlet.CacheSecurityGroupName">
            <summary>
            <para>
            <para>A name for the cache security group. This value is stored as a lowercase string.</para><para>Constraints: Must contain no more than 255 alphanumeric characters. Cannot be the
            word "Default".</para><para>Example: <code>mysecuritygroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheSecurityGroupCmdlet.Description">
            <summary>
            <para>
            <para>A description for the cache security group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheSecurityGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CacheSecurityGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.CreateCacheSecurityGroupResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.CreateCacheSecurityGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheSecurityGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheSecurityGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheSecurityGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheSecurityGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.NewECCacheSubnetGroupCmdlet">
            <summary>
            Creates a new cache subnet group.
            
             
            <para>
            Use this parameter only when you are creating a cluster in an Amazon Virtual Private
            Cloud (Amazon VPC).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheSubnetGroupCmdlet.CacheSubnetGroupDescription">
            <summary>
            <para>
            <para>A description for the cache subnet group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheSubnetGroupCmdlet.CacheSubnetGroupName">
            <summary>
            <para>
            <para>A name for the cache subnet group. This value is stored as a lowercase string.</para><para>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</para><para>Example: <code>mysubnetgroup</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheSubnetGroupCmdlet.SubnetId">
            <summary>
            <para>
            <para>A list of VPC subnet IDs for the cache subnet group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheSubnetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CacheSubnetGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.CreateCacheSubnetGroupResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.CreateCacheSubnetGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheSubnetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheSubnetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheSubnetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECCacheSubnetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.NewECGlobalReplicationGroupCmdlet">
            <summary>
            Global Datastore for Redis offers fully managed, fast, reliable and secure cross-region
            replication. Using Global Datastore for Redis, you can create cross-region read replica
            clusters for ElastiCache for Redis to enable low-latency reads and disaster recovery
            across regions. For more information, see <a href="/AmazonElastiCache/latest/red-ug/Redis-Global-Clusters.html">Replication
            Across Regions Using Global Datastore</a>. 
            
             <ul><li><para>
            The <b>GlobalReplicationGroupIdSuffix</b> is the name of the Global Datastore.
            </para></li><li><para>
            The <b>PrimaryReplicationGroupId</b> represents the name of the primary cluster that
            accepts writes and will replicate updates to the secondary cluster.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECGlobalReplicationGroupCmdlet.GlobalReplicationGroupDescription">
            <summary>
            <para>
            <para>Provides details of the Global Datastore</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECGlobalReplicationGroupCmdlet.GlobalReplicationGroupIdSuffix">
            <summary>
            <para>
            <para>The suffix name of a Global Datastore. The suffix guarantees uniqueness of the Global
            Datastore name across multiple regions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECGlobalReplicationGroupCmdlet.PrimaryReplicationGroupId">
            <summary>
            <para>
            <para>The name of the primary cluster that accepts writes and will replicate updates to
            the secondary cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECGlobalReplicationGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GlobalReplicationGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.CreateGlobalReplicationGroupResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.CreateGlobalReplicationGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECGlobalReplicationGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PrimaryReplicationGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^PrimaryReplicationGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECGlobalReplicationGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet">
            <summary>
            Creates a Redis (cluster mode disabled) or a Redis (cluster mode enabled) replication
            group.
            
             
            <para>
            This API can be used to create a standalone regional replication group or a secondary
            replication group associated with a Global Datastore.
            </para><para>
            A Redis (cluster mode disabled) replication group is a collection of clusters, where
            one of the clusters is a read/write primary and the others are read-only replicas.
            Writes to the primary are asynchronously propagated to the replicas.
            </para><para>
            A Redis (cluster mode enabled) replication group is a collection of 1 to 90 node groups
            (shards). Each node group (shard) has one read/write primary node and up to 5 read-only
            replica nodes. Writes to the primary are asynchronously propagated to the replicas.
            Redis (cluster mode enabled) replication groups partition the data across node groups
            (shards).
            </para><para>
            When a Redis (cluster mode disabled) replication group has been successfully created,
            you can add one or more read replicas to it, up to a total of 5 read replicas. You
            cannot alter a Redis (cluster mode enabled) replication group after it has been created.
            However, if you need to increase or decrease the number of node groups (console: shards),
            you can avail yourself of ElastiCache for Redis' enhanced backup and restore. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-restoring.html">Restoring
            From a Backup with Cluster Resizing</a> in the <i>ElastiCache User Guide</i>.
            </para><note><para>
            This operation is valid for Redis only.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.AtRestEncryptionEnabled">
            <summary>
            <para>
            <para>A flag that enables encryption at rest when set to <code>true</code>.</para><para>You cannot modify the value of <code>AtRestEncryptionEnabled</code> after the replication
            group is created. To enable encryption at rest on a replication group you must set
            <code>AtRestEncryptionEnabled</code> to <code>true</code> when you create the replication
            group. </para><para><b>Required:</b> Only available when creating a replication group in an Amazon VPC
            using redis version <code>3.2.6</code>, <code>4.x</code> or later.</para><para>Default: <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.AuthToken">
            <summary>
            <para>
            <para><b>Reserved parameter.</b> The password used to access a password protected server.</para><para><code>AuthToken</code> can be specified only on replication groups where <code>TransitEncryptionEnabled</code>
            is <code>true</code>.</para><important><para>For HIPAA compliance, you must specify <code>TransitEncryptionEnabled</code> as <code>true</code>,
            an <code>AuthToken</code>, and a <code>CacheSubnetGroup</code>.</para></important><para>Password constraints:</para><ul><li><para>Must be only printable ASCII characters.</para></li><li><para>Must be at least 16 characters and no more than 128 characters in length.</para></li><li><para>The only permitted printable special characters are !, &amp;, #, $, ^, &lt;, &gt;,
            and -. Other printable special characters cannot be used in the AUTH token.</para></li></ul><para>For more information, see <a href="http://redis.io/commands/AUTH">AUTH password</a>
            at http://redis.io/commands/AUTH.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.AutomaticFailoverEnabled">
            <summary>
            <para>
            <para>Specifies whether a read-only replica is automatically promoted to read/write primary
            if the existing primary fails.</para><para>If <code>true</code>, Multi-AZ is enabled for this replication group. If <code>false</code>,
            Multi-AZ is disabled for this replication group.</para><para><code>AutomaticFailoverEnabled</code> must be enabled for Redis (cluster mode enabled)
            replication groups.</para><para>Default: false</para><para>Amazon ElastiCache for Redis does not support Multi-AZ with automatic failover on:</para><ul><li><para>Redis versions earlier than 2.8.6.</para></li><li><para>Redis (cluster mode disabled): T1 node types.</para></li><li><para>Redis (cluster mode enabled): T1 node types.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.AutoMinorVersionUpgrade">
            <summary>
            <para>
            <para>This parameter is currently disabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.CacheNodeType">
            <summary>
            <para>
            <para>The compute and memory capacity of the nodes in the node group (shard).</para><para>The following node types are supported by ElastiCache. Generally speaking, the current
            generation types provide more memory and computational power at lower cost when compared
            to their equivalent previous generation counterparts.</para><ul><li><para>General purpose:</para><ul><li><para>Current generation: </para><para><b>M5 node types:</b><code>cache.m5.large</code>, <code>cache.m5.xlarge</code>,
            <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>,
            <code>cache.m5.24xlarge</code></para><para><b>M4 node types:</b><code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,
            <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code></para><para><b>T3 node types:</b><code>cache.t3.micro</code>, <code>cache.t3.small</code>, <code>cache.t3.medium</code></para><para><b>T2 node types:</b><code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code></para></li><li><para>Previous generation: (not recommended)</para><para><b>T1 node types:</b><code>cache.t1.micro</code></para><para><b>M1 node types:</b><code>cache.m1.small</code>, <code>cache.m1.medium</code>,
            <code>cache.m1.large</code>, <code>cache.m1.xlarge</code></para><para><b>M3 node types:</b><code>cache.m3.medium</code>, <code>cache.m3.large</code>,
            <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code></para></li></ul></li><li><para>Compute optimized:</para><ul><li><para>Previous generation: (not recommended)</para><para><b>C1 node types:</b><code>cache.c1.xlarge</code></para></li></ul></li><li><para>Memory optimized:</para><ul><li><para>Current generation: </para><para><b>R5 node types:</b><code>cache.r5.large</code>, <code>cache.r5.xlarge</code>,
            <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>,
            <code>cache.r5.24xlarge</code></para><para><b>R4 node types:</b><code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,
            <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>,
            <code>cache.r4.16xlarge</code></para></li><li><para>Previous generation: (not recommended)</para><para><b>M2 node types:</b><code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>,
            <code>cache.m2.4xlarge</code></para><para><b>R3 node types:</b><code>cache.r3.large</code>, <code>cache.r3.xlarge</code>,
            <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code></para></li></ul></li></ul><para><b>Additional node type info</b></para><ul><li><para>All current generation instance types are created in Amazon VPC by default.</para></li><li><para>Redis append-only files (AOF) are not supported for T1 or T2 instances.</para></li><li><para>Redis Multi-AZ with automatic failover is not supported on T1 instances.</para></li><li><para>Redis configuration variables <code>appendonly</code> and <code>appendfsync</code>
            are not supported on Redis version 2.8.22 and later.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.CacheParameterGroupName">
            <summary>
            <para>
            <para>The name of the parameter group to associate with this replication group. If this
            argument is omitted, the default cache parameter group for the specified engine is
            used.</para><note><para>If you are restoring to an engine version that is different than the original, you
            must specify the default version of that version. For example, <code>CacheParameterGroupName=default.redis4.0</code>.</para></note><para>If you are running Redis version 3.2.4 or later, only one node group (shard), and
            want to use a default parameter group, we recommend that you specify the parameter
            group by name. </para><ul><li><para>To create a Redis (cluster mode disabled) replication group, use <code>CacheParameterGroupName=default.redis3.2</code>.</para></li><li><para>To create a Redis (cluster mode enabled) replication group, use <code>CacheParameterGroupName=default.redis3.2.cluster.on</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.CacheSecurityGroupName">
            <summary>
            <para>
            <para>A list of cache security group names to associate with this replication group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.CacheSubnetGroupName">
            <summary>
            <para>
            <para>The name of the cache subnet group to be used for the replication group.</para><important><para>If you're going to launch your cluster in an Amazon VPC, you need to create a subnet
            group before you start creating a cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html">Subnets
            and Subnet Groups</a>.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.Engine">
            <summary>
            <para>
            <para>The name of the cache engine to be used for the clusters in this replication group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The version number of the cache engine to be used for the clusters in this replication
            group. To view the supported cache engine versions, use the <code>DescribeCacheEngineVersions</code>
            operation.</para><para><b>Important:</b> You can upgrade to a newer engine version (see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement">Selecting
            a Cache Engine and Version</a>) in the <i>ElastiCache User Guide</i>, but you cannot
            downgrade to an earlier engine version. If you want to use an earlier engine version,
            you must delete the existing cluster or replication group and create it anew with
            the earlier engine version. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.GlobalReplicationGroupId">
            <summary>
            <para>
            <para>The name of the Global Datastore</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The ID of the KMS key used to encrypt the disk in the cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.MultiAZEnabled">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.NodeGroupConfiguration">
            <summary>
            <para>
            <para>A list of node group (shard) configuration options. Each node group (shard) configuration
            has the following members: <code>PrimaryAvailabilityZone</code>, <code>ReplicaAvailabilityZones</code>,
            <code>ReplicaCount</code>, and <code>Slots</code>.</para><para>If you're creating a Redis (cluster mode disabled) or a Redis (cluster mode enabled)
            replication group, you can use this parameter to individually configure each node
            group (shard), or you can omit this parameter. However, it is required when seeding
            a Redis (cluster mode enabled) cluster from a S3 rdb file. You must configure each
            node group (shard) using this parameter because you must specify the slots for each
            node group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.NotificationTopicArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic
            to which notifications are sent.</para><note><para>The Amazon SNS topic owner must be the same as the cluster owner.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.NumCacheCluster">
            <summary>
            <para>
            <para>The number of nodes in the cluster.</para><para>This parameter is not used if there is more than one node group (shard). You should
            use <code>ReplicasPerNodeGroup</code> instead.</para><para>If <code>AutomaticFailoverEnabled</code> is <code>true</code>, the value of this parameter
            must be at least 2. If <code>AutomaticFailoverEnabled</code> is <code>false</code>
            you can omit this parameter (it will default to 1), or you can explicitly set it to
            a value between 2 and 6.</para><para>The maximum permitted value for <code>NumCacheClusters</code> is 6 (1 primary plus
            5 replicas).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.NumNodeGroup">
            <summary>
            <para>
            <para>An optional parameter that specifies the number of node groups (shards) for this Redis
            (cluster mode enabled) replication group. For Redis (cluster mode disabled) either
            omit this parameter or set it to 1.</para><para>Default: 1</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.Port">
            <summary>
            <para>
            <para>The port number on which each member of the replication group accepts connections.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.PreferredCacheClusterAZs">
            <summary>
            <para>
            <para>A list of EC2 Availability Zones in which the replication group's clusters are created.
            The order of the Availability Zones in the list is the order in which clusters are
            allocated. The primary cluster is created in the first AZ in the list.</para><para>This parameter is not used if there is more than one node group (shard). You should
            use <code>NodeGroupConfiguration</code> instead.</para><note><para>If you are creating your replication group in an Amazon VPC (recommended), you can
            only locate clusters in Availability Zones associated with the subnets in the selected
            subnet group.</para><para>The number of Availability Zones listed must equal the value of <code>NumCacheClusters</code>.</para></note><para>Default: system chosen Availability Zones.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.PreferredMaintenanceWindow">
            <summary>
            <para>
            <para>Specifies the weekly time range during which maintenance on the cluster is performed.
            It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC).
            The minimum maintenance window is a 60 minute period. Valid values for <code>ddd</code>
            are:</para><para>Specifies the weekly time range during which maintenance on the cluster is performed.
            It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC).
            The minimum maintenance window is a 60 minute period.</para><para>Valid values for <code>ddd</code> are:</para><ul><li><para><code>sun</code></para></li><li><para><code>mon</code></para></li><li><para><code>tue</code></para></li><li><para><code>wed</code></para></li><li><para><code>thu</code></para></li><li><para><code>fri</code></para></li><li><para><code>sat</code></para></li></ul><para>Example: <code>sun:23:00-mon:01:30</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.PrimaryClusterId">
            <summary>
            <para>
            <para>The identifier of the cluster that serves as the primary for this replication group.
            This cluster must already exist and have a status of <code>available</code>.</para><para>This parameter is not required if <code>NumCacheClusters</code>, <code>NumNodeGroups</code>,
            or <code>ReplicasPerNodeGroup</code> is specified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.ReplicasPerNodeGroup">
            <summary>
            <para>
            <para>An optional parameter that specifies the number of replica nodes in each node group
            (shard). Valid values are 0 to 5.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.ReplicationGroupDescription">
            <summary>
            <para>
            <para>A user-created description for the replication group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.ReplicationGroupId">
            <summary>
            <para>
            <para>The replication group identifier. This parameter is stored as a lowercase string.</para><para>Constraints:</para><ul><li><para>A name must contain from 1 to 40 alphanumeric characters or hyphens.</para></li><li><para>The first character must be a letter.</para></li><li><para>A name cannot end with a hyphen or contain two consecutive hyphens.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.SecurityGroupId">
            <summary>
            <para>
            <para>One or more Amazon VPC security groups associated with this replication group.</para><para>Use this parameter only when you are creating a replication group in an Amazon Virtual
            Private Cloud (Amazon VPC).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.SnapshotArn">
            <summary>
            <para>
            <para>A list of Amazon Resource Names (ARN) that uniquely identify the Redis RDB snapshot
            files stored in Amazon S3. The snapshot files are used to populate the new replication
            group. The Amazon S3 object name in the ARN cannot contain any commas. The new replication
            group will have the number of node groups (console: shards) specified by the parameter
            <i>NumNodeGroups</i> or the number of node groups configured by <i>NodeGroupConfiguration</i>
            regardless of the number of ARNs specified here.</para><para>Example of an Amazon S3 ARN: <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.SnapshotName">
            <summary>
            <para>
            <para>The name of a snapshot from which to restore data into the new replication group.
            The snapshot status changes to <code>restoring</code> while the new replication group
            is being created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.SnapshotRetentionLimit">
            <summary>
            <para>
            <para>The number of days for which ElastiCache retains automatic snapshots before deleting
            them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot
            that was taken today is retained for 5 days before being deleted.</para><para>Default: 0 (i.e., automatic backups are disabled for this cluster).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.SnapshotWindow">
            <summary>
            <para>
            <para>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot
            of your node group (shard).</para><para>Example: <code>05:00-09:00</code></para><para>If you do not specify this parameter, ElastiCache automatically chooses an appropriate
            time range.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.Tag">
            <summary>
            <para>
            <para>A list of cost allocation tags to be added to this resource. Tags are comma-separated
            key,value pairs (e.g. Key=<code>myKey</code>, Value=<code>myKeyValue</code>. You can
            include multiple tags as shown following: Key=<code>myKey</code>, Value=<code>myKeyValue</code>
            Key=<code>mySecondKey</code>, Value=<code>mySecondKeyValue</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.TransitEncryptionEnabled">
            <summary>
            <para>
            <para>A flag that enables in-transit encryption when set to <code>true</code>.</para><para>You cannot modify the value of <code>TransitEncryptionEnabled</code> after the cluster
            is created. To enable in-transit encryption on a cluster you must set <code>TransitEncryptionEnabled</code>
            to <code>true</code> when you create a cluster.</para><para>This parameter is valid only if the <code>Engine</code> parameter is <code>redis</code>,
            the <code>EngineVersion</code> parameter is <code>3.2.6</code>, <code>4.x</code> or
            later, and the cluster is being created in an Amazon VPC.</para><para>If you enable in-transit encryption, you must also specify a value for <code>CacheSubnetGroup</code>.</para><para><b>Required:</b> Only available when creating a replication group in an Amazon VPC
            using redis version <code>3.2.6</code>, <code>4.x</code> or later.</para><para>Default: <code>false</code></para><important><para>For HIPAA compliance, you must specify <code>TransitEncryptionEnabled</code> as <code>true</code>,
            an <code>AuthToken</code>, and a <code>CacheSubnetGroup</code>.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReplicationGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.CreateReplicationGroupResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.CreateReplicationGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PrimaryClusterId parameter.
            The -PassThru parameter is deprecated, use -Select '^PrimaryClusterId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECReplicationGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.NewECSnapshotCmdlet">
            <summary>
            Creates a copy of an entire cluster or replication group at a specific moment in time.
            
             <note><para>
            This operation is valid for Redis only.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECSnapshotCmdlet.CacheClusterId">
            <summary>
            <para>
            <para>The identifier of an existing cluster. The snapshot is created from this cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECSnapshotCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The ID of the KMS key used to encrypt the snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECSnapshotCmdlet.ReplicationGroupId">
            <summary>
            <para>
            <para>The identifier of an existing replication group. The snapshot is created from this
            replication group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECSnapshotCmdlet.SnapshotName">
            <summary>
            <para>
            <para>A name for the snapshot being created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Snapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.CreateSnapshotResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.CreateSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheClusterId parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheClusterId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.NewECSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheClusterCmdlet">
            <summary>
            Deletes a previously provisioned cluster. <code>DeleteCacheCluster</code> deletes
            all associated cache nodes, node endpoints and the cluster itself. When you receive
            a successful response from this operation, Amazon ElastiCache immediately begins deleting
            the cluster; you cannot cancel or revert this operation.
            
             
            <para>
            This operation is not valid for:
            </para><ul><li><para>
            Redis (cluster mode enabled) clusters
            </para></li><li><para>
            A cluster that is the last read replica of a replication group
            </para></li><li><para>
            A node group (shard) that has Multi-AZ mode enabled
            </para></li><li><para>
            A cluster from a Redis (cluster mode enabled) replication group
            </para></li><li><para>
            A cluster that is not in the <code>available</code> state
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheClusterCmdlet.CacheClusterId">
            <summary>
            <para>
            <para>The cluster identifier for the cluster to be deleted. This parameter is not case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheClusterCmdlet.FinalSnapshotIdentifier">
            <summary>
            <para>
            <para>The user-supplied name of a final cluster snapshot. This is the unique name that identifies
            the snapshot. ElastiCache creates the snapshot, and then deletes the cluster immediately
            afterward.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CacheCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DeleteCacheClusterResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DeleteCacheClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheClusterId parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheClusterId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheParameterGroupCmdlet">
            <summary>
            Deletes the specified cache parameter group. You cannot delete a cache parameter group
            if it is associated with any cache clusters.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheParameterGroupCmdlet.CacheParameterGroupName">
            <summary>
            <para>
            <para>The name of the cache parameter group to delete.</para><note><para>The specified cache security group must not be associated with any clusters.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DeleteCacheParameterGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheSecurityGroupCmdlet">
            <summary>
            Deletes a cache security group.
            
             <note><para>
            You cannot delete a cache security group if it is associated with any clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheSecurityGroupCmdlet.CacheSecurityGroupName">
            <summary>
            <para>
            <para>The name of the cache security group to delete.</para><note><para>You cannot delete the default security group.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheSecurityGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DeleteCacheSecurityGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheSecurityGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheSecurityGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheSecurityGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheSecurityGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheSubnetGroupCmdlet">
            <summary>
            Deletes a cache subnet group.
            
             <note><para>
            You cannot delete a cache subnet group if it is associated with any clusters.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheSubnetGroupCmdlet.CacheSubnetGroupName">
            <summary>
            <para>
            <para>The name of the cache subnet group to delete.</para><para>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheSubnetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DeleteCacheSubnetGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheSubnetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheSubnetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheSubnetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECCacheSubnetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.RemoveECGlobalReplicationGroupCmdlet">
            <summary>
            Deleting a Global Datastore is a two-step process: 
            
             <ul><li><para>
            First, you must <a>DisassociateGlobalReplicationGroup</a> to remove the secondary
            clusters in the Global Datastore.
            </para></li><li><para>
            Once the Global Datastore contains only the primary cluster, you can use DeleteGlobalReplicationGroup
            API to delete the Global Datastore while retainining the primary cluster using Retain…=
            true.
            </para></li></ul><para>
            Since the Global Datastore has only a primary cluster, you can delete the Global Datastore
            while retaining the primary by setting <code>RetainPrimaryCluster=true</code>.
            </para><para>
            When you receive a successful response from this operation, Amazon ElastiCache immediately
            begins deleting the selected resources; you cannot cancel or revert this operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECGlobalReplicationGroupCmdlet.GlobalReplicationGroupId">
            <summary>
            <para>
            <para>The name of the Global Datastore</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECGlobalReplicationGroupCmdlet.RetainPrimaryReplicationGroup">
            <summary>
            <para>
            <para>The primary replication group is retained as a standalone replication group. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECGlobalReplicationGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GlobalReplicationGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DeleteGlobalReplicationGroupResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DeleteGlobalReplicationGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECGlobalReplicationGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GlobalReplicationGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GlobalReplicationGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECGlobalReplicationGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.RemoveECReplicationGroupCmdlet">
            <summary>
            Deletes an existing replication group. By default, this operation deletes the entire
            replication group, including the primary/primaries and all of the read replicas. If
            the replication group has only one primary, you can optionally delete only the read
            replicas, while retaining the primary by setting <code>RetainPrimaryCluster=true</code>.
            
             
            <para>
            When you receive a successful response from this operation, Amazon ElastiCache immediately
            begins deleting the selected resources; you cannot cancel or revert this operation.
            </para><note><para>
            This operation is valid for Redis only.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECReplicationGroupCmdlet.FinalSnapshotIdentifier">
            <summary>
            <para>
            <para>The name of a final node group (shard) snapshot. ElastiCache creates the snapshot
            from the primary node in the cluster, rather than one of the replicas; this is to
            ensure that it captures the freshest data. After the final snapshot is taken, the
            replication group is immediately deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECReplicationGroupCmdlet.ReplicationGroupId">
            <summary>
            <para>
            <para>The identifier for the cluster to be deleted. This parameter is not case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECReplicationGroupCmdlet.RetainPrimaryCluster">
            <summary>
            <para>
            <para>If set to <code>true</code>, all of the read replicas are deleted, but the primary
            node is retained.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECReplicationGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReplicationGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DeleteReplicationGroupResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DeleteReplicationGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECReplicationGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReplicationGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReplicationGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECReplicationGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.RemoveECReplicationGroupFromGlobalReplicationGroupCmdlet">
            <summary>
            Remove a secondary cluster from the Global Datastore using the Global Datastore name.
            The secondary cluster will no longer receive updates from the primary cluster, but
            will remain as a standalone cluster in that AWS region.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECReplicationGroupFromGlobalReplicationGroupCmdlet.GlobalReplicationGroupId">
            <summary>
            <para>
            <para>The name of the Global Datastore</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECReplicationGroupFromGlobalReplicationGroupCmdlet.ReplicationGroupId">
            <summary>
            <para>
            <para>The name of the secondary cluster you wish to remove from the Global Datastore</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECReplicationGroupFromGlobalReplicationGroupCmdlet.ReplicationGroupRegion">
            <summary>
            <para>
            <para>The AWS region of secondary cluster you wish to remove from the Global Datastore</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECReplicationGroupFromGlobalReplicationGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GlobalReplicationGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DisassociateGlobalReplicationGroupResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DisassociateGlobalReplicationGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECReplicationGroupFromGlobalReplicationGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReplicationGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReplicationGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECReplicationGroupFromGlobalReplicationGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.RemoveECSnapshotCmdlet">
            <summary>
            Deletes an existing snapshot. When you receive a successful response from this operation,
            ElastiCache immediately begins deleting the snapshot; you cannot cancel or revert
            this operation.
            
             <note><para>
            This operation is valid for Redis only.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECSnapshotCmdlet.SnapshotName">
            <summary>
            <para>
            <para>The name of the snapshot to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Snapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DeleteSnapshotResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DeleteSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotName parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.RemoveECTagCmdlet">
            <summary>
            Removes the tags identified by the <code>TagKeys</code> list from the named resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECTagCmdlet.ResourceName">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource from which you want the tags removed,
            for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code>
            or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.</para><para>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECTagCmdlet.TagKey">
            <summary>
            <para>
            <para>A list of <code>TagKeys</code> identifying the tags you want removed from the named
            resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TagList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.RemoveTagsFromResourceResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.RemoveTagsFromResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceName parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RemoveECTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.RequestECGlobalReplicationGroupFailoverCmdlet">
            <summary>
            Used to failover the primary region to a selected secondary region. The selected secondary
            region will be come primary, and all other clusters will become secondary.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECGlobalReplicationGroupFailoverCmdlet.GlobalReplicationGroupId">
            <summary>
            <para>
            <para>The name of the Global Datastore</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECGlobalReplicationGroupFailoverCmdlet.PrimaryRegion">
            <summary>
            <para>
            <para>The AWS region of the primary cluster of the Global Datastore</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECGlobalReplicationGroupFailoverCmdlet.PrimaryReplicationGroupId">
            <summary>
            <para>
            <para>The name of the primary replication group</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECGlobalReplicationGroupFailoverCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GlobalReplicationGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.FailoverGlobalReplicationGroupResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.FailoverGlobalReplicationGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECGlobalReplicationGroupFailoverCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GlobalReplicationGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GlobalReplicationGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECGlobalReplicationGroupFailoverCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.RequestECNodeGroupDecreaseInGlobalReplicationGroupCmdlet">
            <summary>
            Decreases the number of node groups in a Global Datastore
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECNodeGroupDecreaseInGlobalReplicationGroupCmdlet.ApplyImmediately">
            <summary>
            <para>
            <para>Indicates that the shard reconfiguration process begins immediately. At present, the
            only permitted value for this parameter is true. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECNodeGroupDecreaseInGlobalReplicationGroupCmdlet.GlobalNodeGroupsToRemove">
            <summary>
            <para>
            <para>If the value of NodeGroupCount is less than the current number of node groups (shards),
            then either NodeGroupsToRemove or NodeGroupsToRetain is required. NodeGroupsToRemove
            is a list of NodeGroupIds to remove from the cluster. ElastiCache for Redis will attempt
            to remove all node groups listed by NodeGroupsToRemove from the cluster. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECNodeGroupDecreaseInGlobalReplicationGroupCmdlet.GlobalNodeGroupsToRetain">
            <summary>
            <para>
            <para>If the value of NodeGroupCount is less than the current number of node groups (shards),
            then either NodeGroupsToRemove or NodeGroupsToRetain is required. NodeGroupsToRemove
            is a list of NodeGroupIds to remove from the cluster. ElastiCache for Redis will attempt
            to remove all node groups listed by NodeGroupsToRemove from the cluster. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECNodeGroupDecreaseInGlobalReplicationGroupCmdlet.GlobalReplicationGroupId">
            <summary>
            <para>
            <para>The name of the Global Datastore</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECNodeGroupDecreaseInGlobalReplicationGroupCmdlet.NodeGroupCount">
            <summary>
            <para>
            <para>The number of node groups (shards) that results from the modification of the shard
            configuration</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECNodeGroupDecreaseInGlobalReplicationGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GlobalReplicationGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DecreaseNodeGroupsInGlobalReplicationGroupResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DecreaseNodeGroupsInGlobalReplicationGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECNodeGroupDecreaseInGlobalReplicationGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GlobalReplicationGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GlobalReplicationGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECNodeGroupDecreaseInGlobalReplicationGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.RequestECNodeGroupIncreaseInGlobalReplicationGroupCmdlet">
            <summary>
            Increase the number of node groups in the Global Datastore
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECNodeGroupIncreaseInGlobalReplicationGroupCmdlet.ApplyImmediately">
            <summary>
            <para>
            <para>Indicates that the process begins immediately. At present, the only permitted value
            for this parameter is true.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECNodeGroupIncreaseInGlobalReplicationGroupCmdlet.GlobalReplicationGroupId">
            <summary>
            <para>
            <para>The name of the Global Datastore</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECNodeGroupIncreaseInGlobalReplicationGroupCmdlet.NodeGroupCount">
            <summary>
            <para>
            <para>The number of node groups you wish to add</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECNodeGroupIncreaseInGlobalReplicationGroupCmdlet.RegionalConfiguration">
            <summary>
            <para>
            <para>Describes the replication group IDs, the AWS regions where they are stored and the
            shard configuration for each that comprise the Global Datastore</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECNodeGroupIncreaseInGlobalReplicationGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GlobalReplicationGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.IncreaseNodeGroupsInGlobalReplicationGroupResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.IncreaseNodeGroupsInGlobalReplicationGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECNodeGroupIncreaseInGlobalReplicationGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GlobalReplicationGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GlobalReplicationGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECNodeGroupIncreaseInGlobalReplicationGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.RequestECReplicaCountDecreaseCmdlet">
            <summary>
            Dynamically decreases the number of replicas in a Redis (cluster mode disabled) replication
            group or the number of replica nodes in one or more node groups (shards) of a Redis
            (cluster mode enabled) replication group. This operation is performed with no cluster
            down time.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReplicaCountDecreaseCmdlet.ApplyImmediately">
            <summary>
            <para>
            <para>If <code>True</code>, the number of replica nodes is decreased immediately. <code>ApplyImmediately=False</code>
            is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReplicaCountDecreaseCmdlet.NewReplicaCount">
            <summary>
            <para>
            <para>The number of read replica nodes you want at the completion of this operation. For
            Redis (cluster mode disabled) replication groups, this is the number of replica nodes
            in the replication group. For Redis (cluster mode enabled) replication groups, this
            is the number of replica nodes in each of the replication group's node groups.</para><para>The minimum number of replicas in a shard or replication group is:</para><ul><li><para>Redis (cluster mode disabled)</para><ul><li><para>If Multi-AZ with Automatic Failover is enabled: 1</para></li><li><para>If Multi-AZ with Automatic Failover is not enabled: 0</para></li></ul></li><li><para>Redis (cluster mode enabled): 0 (though you will not be able to failover to a replica
            if your primary node fails)</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReplicaCountDecreaseCmdlet.ReplicaConfiguration">
            <summary>
            <para>
            <para>A list of <code>ConfigureShard</code> objects that can be used to configure each shard
            in a Redis (cluster mode enabled) replication group. The <code>ConfigureShard</code>
            has three members: <code>NewReplicaCount</code>, <code>NodeGroupId</code>, and <code>PreferredAvailabilityZones</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReplicaCountDecreaseCmdlet.ReplicasToRemove">
            <summary>
            <para>
            <para>A list of the node ids to remove from the replication group or node group (shard).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReplicaCountDecreaseCmdlet.ReplicationGroupId">
            <summary>
            <para>
            <para>The id of the replication group from which you want to remove replica nodes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReplicaCountDecreaseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReplicationGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.DecreaseReplicaCountResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.DecreaseReplicaCountResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReplicaCountDecreaseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReplicationGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReplicationGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReplicaCountDecreaseCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.RequestECReplicaCountIncreaseCmdlet">
            <summary>
            Dynamically increases the number of replics in a Redis (cluster mode disabled) replication
            group or the number of replica nodes in one or more node groups (shards) of a Redis
            (cluster mode enabled) replication group. This operation is performed with no cluster
            down time.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReplicaCountIncreaseCmdlet.ApplyImmediately">
            <summary>
            <para>
            <para>If <code>True</code>, the number of replica nodes is increased immediately. <code>ApplyImmediately=False</code>
            is not currently supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReplicaCountIncreaseCmdlet.NewReplicaCount">
            <summary>
            <para>
            <para>The number of read replica nodes you want at the completion of this operation. For
            Redis (cluster mode disabled) replication groups, this is the number of replica nodes
            in the replication group. For Redis (cluster mode enabled) replication groups, this
            is the number of replica nodes in each of the replication group's node groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReplicaCountIncreaseCmdlet.ReplicaConfiguration">
            <summary>
            <para>
            <para>A list of <code>ConfigureShard</code> objects that can be used to configure each shard
            in a Redis (cluster mode enabled) replication group. The <code>ConfigureShard</code>
            has three members: <code>NewReplicaCount</code>, <code>NodeGroupId</code>, and <code>PreferredAvailabilityZones</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReplicaCountIncreaseCmdlet.ReplicationGroupId">
            <summary>
            <para>
            <para>The id of the replication group to which you want to add replica nodes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReplicaCountIncreaseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReplicationGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.IncreaseReplicaCountResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.IncreaseReplicaCountResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReplicaCountIncreaseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReplicationGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReplicationGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReplicaCountIncreaseCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.RequestECReservedCacheNodesOfferingCmdlet">
            <summary>
            Allows you to purchase a reserved cache node offering.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReservedCacheNodesOfferingCmdlet.CacheNodeCount">
            <summary>
            <para>
            <para>The number of cache node instances to reserve.</para><para>Default: <code>1</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReservedCacheNodesOfferingCmdlet.ReservedCacheNodeId">
            <summary>
            <para>
            <para>A customer-specified identifier to track this reservation.</para><note><para>The Reserved Cache Node ID is an unique customer-specified identifier to track this
            reservation. If this parameter is not specified, ElastiCache automatically generates
            an identifier for the reservation.</para></note><para>Example: myreservationID</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReservedCacheNodesOfferingCmdlet.ReservedCacheNodesOfferingId">
            <summary>
            <para>
            <para>The ID of the reserved cache node offering to purchase.</para><para>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReservedCacheNodesOfferingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReservedCacheNode'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.PurchaseReservedCacheNodesOfferingResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.PurchaseReservedCacheNodesOfferingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReservedCacheNodesOfferingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReservedCacheNodesOfferingId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReservedCacheNodesOfferingId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECReservedCacheNodesOfferingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.RequestECSlotRebalanceInGlobalReplicationGroupCmdlet">
            <summary>
            Redistribute slots to ensure uniform distribution across existing shards in the cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECSlotRebalanceInGlobalReplicationGroupCmdlet.ApplyImmediately">
            <summary>
            <para>
            <para>If <code>True</code>, redistribution is applied immediately.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECSlotRebalanceInGlobalReplicationGroupCmdlet.GlobalReplicationGroupId">
            <summary>
            <para>
            <para>The name of the Global Datastore</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECSlotRebalanceInGlobalReplicationGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GlobalReplicationGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.RebalanceSlotsInGlobalReplicationGroupResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.RebalanceSlotsInGlobalReplicationGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECSlotRebalanceInGlobalReplicationGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GlobalReplicationGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GlobalReplicationGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RequestECSlotRebalanceInGlobalReplicationGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.ResetECCacheParameterGroupCmdlet">
            <summary>
            Modifies the parameters of a cache parameter group to the engine or system default
            value. You can reset specific parameters by submitting a list of parameter names.
            To reset the entire cache parameter group, specify the <code>ResetAllParameters</code>
            and <code>CacheParameterGroupName</code> parameters.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.ResetECCacheParameterGroupCmdlet.CacheParameterGroupName">
            <summary>
            <para>
            <para>The name of the cache parameter group to reset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.ResetECCacheParameterGroupCmdlet.ParameterNameValue">
            <summary>
            <para>
            <para>An array of parameter names to reset to their default values. If <code>ResetAllParameters</code>
            is <code>true</code>, do not use <code>ParameterNameValues</code>. If <code>ResetAllParameters</code>
            is <code>false</code>, you must specify the name of at least one parameter to reset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.ResetECCacheParameterGroupCmdlet.ResetAllParameter">
            <summary>
            <para>
            <para>If <code>true</code>, all parameters in the cache parameter group are reset to their
            default values. If <code>false</code>, only the parameters listed by <code>ParameterNameValues</code>
            are reset to their default values.</para><para>Valid values: <code>true</code> | <code>false</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.ResetECCacheParameterGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CacheParameterGroupName'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.ResetCacheParameterGroupResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.ResetCacheParameterGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.ResetECCacheParameterGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheParameterGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheParameterGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.ResetECCacheParameterGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.RestartECCacheClusterCmdlet">
            <summary>
            Reboots some, or all, of the cache nodes within a provisioned cluster. This operation
            applies any modified cache parameter groups to the cluster. The reboot operation takes
            place as soon as possible, and results in a momentary outage to the cluster. During
            the reboot, the cluster status is set to REBOOTING.
            
             
            <para>
            The reboot causes the contents of the cache (for each cache node being rebooted) to
            be lost.
            </para><para>
            When the reboot is complete, a cluster event is created.
            </para><para>
            Rebooting a cluster is currently supported on Memcached and Redis (cluster mode disabled)
            clusters. Rebooting is not supported on Redis (cluster mode enabled) clusters.
            </para><para>
            If you make changes to parameters that require a Redis (cluster mode enabled) cluster
            reboot for the changes to be applied, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.Rebooting.html">Rebooting
            a Cluster</a> for an alternate process.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RestartECCacheClusterCmdlet.CacheClusterId">
            <summary>
            <para>
            <para>The cluster identifier. This parameter is stored as a lowercase string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RestartECCacheClusterCmdlet.CacheNodeIdsToReboot">
            <summary>
            <para>
            <para>A list of cache node IDs to reboot. A node ID is a numeric identifier (0001, 0002,
            etc.). To reboot an entire cluster, specify all of the cache node IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RestartECCacheClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CacheCluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.RebootCacheClusterResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.RebootCacheClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RestartECCacheClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheClusterId parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheClusterId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RestartECCacheClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.RevokeECCacheSecurityGroupIngressCmdlet">
            <summary>
            Revokes ingress from a cache security group. Use this operation to disallow access
            from an Amazon EC2 security group that had been previously authorized.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RevokeECCacheSecurityGroupIngressCmdlet.CacheSecurityGroupName">
            <summary>
            <para>
            <para>The name of the cache security group to revoke ingress from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RevokeECCacheSecurityGroupIngressCmdlet.EC2SecurityGroupName">
            <summary>
            <para>
            <para>The name of the Amazon EC2 security group to revoke access from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RevokeECCacheSecurityGroupIngressCmdlet.EC2SecurityGroupOwnerId">
            <summary>
            <para>
            <para>The AWS account number of the Amazon EC2 security group owner. Note that this is not
            the same thing as an AWS access key ID - you must provide a valid AWS account number
            for this parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RevokeECCacheSecurityGroupIngressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CacheSecurityGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.RevokeCacheSecurityGroupIngressResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.RevokeCacheSecurityGroupIngressResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RevokeECCacheSecurityGroupIngressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CacheSecurityGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^CacheSecurityGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.RevokeECCacheSecurityGroupIngressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.StartECMigrationCmdlet">
            <summary>
            Start the migration of data.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.StartECMigrationCmdlet.CustomerNodeEndpointList">
            <summary>
            <para>
            <para>List of endpoints from which data should be migrated. For Redis (cluster mode disabled),
            list should have only one element.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.StartECMigrationCmdlet.ReplicationGroupId">
            <summary>
            <para>
            <para>The ID of the replication group to which data should be migrated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.StartECMigrationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReplicationGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.StartMigrationResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.StartMigrationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.StartECMigrationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReplicationGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^ReplicationGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.StartECMigrationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.StartECUpdateActionBatchCmdlet">
            <summary>
            Apply the service update. For more information on service updates and applying them,
            see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/applying-updates.html">Applying
            Service Updates</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.StartECUpdateActionBatchCmdlet.CacheClusterId">
            <summary>
            <para>
            <para>The cache cluster IDs</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.StartECUpdateActionBatchCmdlet.ReplicationGroupId">
            <summary>
            <para>
            <para>The replication group IDs</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.StartECUpdateActionBatchCmdlet.ServiceUpdateName">
            <summary>
            <para>
            <para>The unique ID of the service update</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.StartECUpdateActionBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.BatchApplyUpdateActionResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.BatchApplyUpdateActionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.StartECUpdateActionBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServiceUpdateName parameter.
            The -PassThru parameter is deprecated, use -Select '^ServiceUpdateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.StartECUpdateActionBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.StopECUpdateActionBatchCmdlet">
            <summary>
            Stop the service update. For more information on service updates and stopping them,
            see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/stopping-self-service-updates.html">Stopping
            Service Updates</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.StopECUpdateActionBatchCmdlet.CacheClusterId">
            <summary>
            <para>
            <para>The cache cluster IDs</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.StopECUpdateActionBatchCmdlet.ReplicationGroupId">
            <summary>
            <para>
            <para>The replication group IDs</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.StopECUpdateActionBatchCmdlet.ServiceUpdateName">
            <summary>
            <para>
            <para>The unique ID of the service update</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.StopECUpdateActionBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.BatchStopUpdateActionResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.BatchStopUpdateActionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.StopECUpdateActionBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServiceUpdateName parameter.
            The -PassThru parameter is deprecated, use -Select '^ServiceUpdateName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.StopECUpdateActionBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EC.TestECFailoverCmdlet">
            <summary>
            Amazon.ElastiCache.IAmazonElastiCache.TestFailover
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.TestECFailoverCmdlet.NodeGroupId">
            <summary>
            <para>
            <para>The name of the node group (called shard in the console) in this replication group
            on which automatic failover is to be tested. You may test automatic failover on up
            to 5 node groups in any rolling 24-hour period.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.TestECFailoverCmdlet.ReplicationGroupId">
            <summary>
            <para>
            <para>The name of the replication group (console: cluster) whose automatic failover is being
            tested by this operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.TestECFailoverCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReplicationGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElastiCache.Model.TestFailoverResponse).
            Specifying the name of a property of type Amazon.ElastiCache.Model.TestFailoverResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EC.TestECFailoverCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NodeGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^NodeGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
    </members>
</doc>
