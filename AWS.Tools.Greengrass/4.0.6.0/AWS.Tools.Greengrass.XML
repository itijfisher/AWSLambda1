<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.Greengrass</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.AddGGResourceTagCmdlet">
            <summary>
            Adds tags to a Greengrass resource. Valid resources are 'Group', 'ConnectorDefinition',
            'CoreDefinition', 'DeviceDefinition', 'FunctionDefinition', 'LoggerDefinition', 'SubscriptionDefinition',
            'ResourceDefinition', and 'BulkDeployment'.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.AddGGResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            The Amazon Resource Name (ARN) of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.AddGGResourceTagCmdlet.Tag">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.AddGGResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.AddGGResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.AddGGResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.AddGGRoleToGroupCmdlet">
            <summary>
            Associates a role with a group. Your Greengrass core will use the role to access AWS
            cloud services. The role's permissions should allow Greengrass core Lambda functions
            to perform actions against the cloud.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.AddGGRoleToGroupCmdlet.GroupId">
            <summary>
            <para>
            The ID of the Greengrass group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.AddGGRoleToGroupCmdlet.RoleArn">
            <summary>
            <para>
            The ARN of the role you wish to associate with
            this group. The existence of the role is not validated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.AddGGRoleToGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AssociatedAt'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.AssociateRoleToGroupResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.AssociateRoleToGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.AddGGRoleToGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RoleArn parameter.
            The -PassThru parameter is deprecated, use -Select '^RoleArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.AddGGRoleToGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.AddGGServiceRoleToAccountCmdlet">
            <summary>
            Associates a role with your account. AWS IoT Greengrass will use the role to access
            your Lambda functions and AWS IoT resources. This is necessary for deployments to
            succeed. The role must have at least minimum permissions in the policy ''AWSGreengrassResourceAccessRolePolicy''.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.AddGGServiceRoleToAccountCmdlet.RoleArn">
            <summary>
            <para>
            The ARN of the service role you wish to associate
            with your account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.AddGGServiceRoleToAccountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AssociatedAt'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.AssociateServiceRoleToAccountResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.AssociateServiceRoleToAccountResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.AddGGServiceRoleToAccountCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RoleArn parameter.
            The -PassThru parameter is deprecated, use -Select '^RoleArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.AddGGServiceRoleToAccountCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGAssociatedRoleCmdlet">
            <summary>
            Retrieves the role associated with a particular group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGAssociatedRoleCmdlet.GroupId">
            <summary>
            <para>
            The ID of the Greengrass group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGAssociatedRoleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetAssociatedRoleResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetAssociatedRoleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGAssociatedRoleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGBulkDeploymentDetailedReportListCmdlet">
            <summary>
            Gets a paginated list of the deployments that have been started in a bulk deployment
            operation, and their current deployment status.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGBulkDeploymentDetailedReportListCmdlet.BulkDeploymentId">
            <summary>
            <para>
            The ID of the bulk deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGBulkDeploymentDetailedReportListCmdlet.MaxResult">
            <summary>
            <para>
            The maximum number of results to be returned
            per request.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGBulkDeploymentDetailedReportListCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGBulkDeploymentDetailedReportListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Deployments'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListBulkDeploymentDetailedReportsResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListBulkDeploymentDetailedReportsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGBulkDeploymentDetailedReportListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BulkDeploymentId parameter.
            The -PassThru parameter is deprecated, use -Select '^BulkDeploymentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGBulkDeploymentDetailedReportListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGBulkDeploymentListCmdlet">
            <summary>
            Returns a list of bulk deployments.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGBulkDeploymentListCmdlet.MaxResult">
            <summary>
            <para>
            The maximum number of results to be returned
            per request.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGBulkDeploymentListCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGBulkDeploymentListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BulkDeployments'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListBulkDeploymentsResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListBulkDeploymentsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGBulkDeploymentListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGBulkDeploymentStatusCmdlet">
            <summary>
            Returns the status of a bulk deployment.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGBulkDeploymentStatusCmdlet.BulkDeploymentId">
            <summary>
            <para>
            The ID of the bulk deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGBulkDeploymentStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetBulkDeploymentStatusResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetBulkDeploymentStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGBulkDeploymentStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BulkDeploymentId parameter.
            The -PassThru parameter is deprecated, use -Select '^BulkDeploymentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGConnectivityInfoCmdlet">
            <summary>
            Retrieves the connectivity information for a core.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectivityInfoCmdlet.ThingName">
            <summary>
            <para>
            The thing name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectivityInfoCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetConnectivityInfoResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetConnectivityInfoResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectivityInfoCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionCmdlet">
            <summary>
            Retrieves information about a connector definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionCmdlet.ConnectorDefinitionId">
            <summary>
            <para>
            The ID of the connector definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetConnectorDefinitionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetConnectorDefinitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectorDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectorDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionListCmdlet">
            <summary>
            Retrieves a list of connector definitions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionListCmdlet.MaxResult">
            <summary>
            <para>
            The maximum number of results to be returned
            per request.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionListCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Definitions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListConnectorDefinitionsResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListConnectorDefinitionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionVersionCmdlet">
            <summary>
            Retrieves information about a connector definition version, including the connectors
            that the version contains. Connectors are prebuilt modules that interact with local
            infrastructure, device protocols, AWS, and other cloud services.<br/><br/>In the AWS.Tools.Greengrass module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionVersionCmdlet.ConnectorDefinitionId">
            <summary>
            <para>
            The ID of the connector definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionVersionCmdlet.ConnectorDefinitionVersionId">
            <summary>
            <para>
            The ID of the connector definition
            version. This value maps to the ''Version'' property of the corresponding ''VersionInformation''
            object, which is returned by ''ListConnectorDefinitionVersions'' requests. If the
            version is the last one that was associated with a connector definition, the value
            also maps to the ''LatestVersion'' property of the corresponding ''DefinitionInformation''
            object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionVersionCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.Greengrass module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetConnectorDefinitionVersionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetConnectorDefinitionVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectorDefinitionVersionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectorDefinitionVersionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionVersionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionVersionListCmdlet">
            <summary>
            Lists the versions of a connector definition, which are containers for connectors.
            Connectors run on the Greengrass core and contain built-in integration with local
            infrastructure, device protocols, AWS, and other cloud services.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionVersionListCmdlet.ConnectorDefinitionId">
            <summary>
            <para>
            The ID of the connector definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionVersionListCmdlet.MaxResult">
            <summary>
            <para>
            The maximum number of results to be returned
            per request.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionVersionListCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Versions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListConnectorDefinitionVersionsResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListConnectorDefinitionVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectorDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectorDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGConnectorDefinitionVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionCmdlet">
            <summary>
            Retrieves information about a core definition version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionCmdlet.CoreDefinitionId">
            <summary>
            <para>
            The ID of the core definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetCoreDefinitionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetCoreDefinitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CoreDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^CoreDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionListCmdlet">
            <summary>
            Retrieves a list of core definitions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionListCmdlet.MaxResult">
            <summary>
            <para>
            The maximum number of results to be returned
            per request.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionListCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Definitions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListCoreDefinitionsResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListCoreDefinitionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionVersionCmdlet">
            <summary>
            Retrieves information about a core definition version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionVersionCmdlet.CoreDefinitionId">
            <summary>
            <para>
            The ID of the core definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionVersionCmdlet.CoreDefinitionVersionId">
            <summary>
            <para>
            The ID of the core definition
            version. This value maps to the ''Version'' property of the corresponding ''VersionInformation''
            object, which is returned by ''ListCoreDefinitionVersions'' requests. If the version
            is the last one that was associated with a core definition, the value also maps to
            the ''LatestVersion'' property of the corresponding ''DefinitionInformation'' object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetCoreDefinitionVersionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetCoreDefinitionVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CoreDefinitionVersionId parameter.
            The -PassThru parameter is deprecated, use -Select '^CoreDefinitionVersionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionVersionListCmdlet">
            <summary>
            Lists the versions of a core definition.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionVersionListCmdlet.CoreDefinitionId">
            <summary>
            <para>
            The ID of the core definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionVersionListCmdlet.MaxResult">
            <summary>
            <para>
            The maximum number of results to be returned
            per request.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionVersionListCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Versions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListCoreDefinitionVersionsResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListCoreDefinitionVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CoreDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^CoreDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGCoreDefinitionVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGDeploymentListCmdlet">
            <summary>
            Returns a history of deployments for the group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeploymentListCmdlet.GroupId">
            <summary>
            <para>
            The ID of the Greengrass group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeploymentListCmdlet.MaxResult">
            <summary>
            <para>
            The maximum number of results to be returned
            per request.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeploymentListCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeploymentListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Deployments'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListDeploymentsResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListDeploymentsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeploymentListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeploymentListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGDeploymentStatusCmdlet">
            <summary>
            Returns the status of a deployment.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeploymentStatusCmdlet.DeploymentId">
            <summary>
            <para>
            The ID of the deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeploymentStatusCmdlet.GroupId">
            <summary>
            <para>
            The ID of the Greengrass group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeploymentStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetDeploymentStatusResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetDeploymentStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeploymentStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeploymentId parameter.
            The -PassThru parameter is deprecated, use -Select '^DeploymentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionCmdlet">
            <summary>
            Retrieves information about a device definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionCmdlet.DeviceDefinitionId">
            <summary>
            <para>
            The ID of the device definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetDeviceDefinitionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetDeviceDefinitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeviceDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^DeviceDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionListCmdlet">
            <summary>
            Retrieves a list of device definitions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionListCmdlet.MaxResult">
            <summary>
            <para>
            The maximum number of results to be returned
            per request.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionListCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Definitions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListDeviceDefinitionsResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListDeviceDefinitionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionVersionCmdlet">
            <summary>
            Retrieves information about a device definition version.<br/><br/>In the AWS.Tools.Greengrass module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionVersionCmdlet.DeviceDefinitionId">
            <summary>
            <para>
            The ID of the device definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionVersionCmdlet.DeviceDefinitionVersionId">
            <summary>
            <para>
            The ID of the device definition
            version. This value maps to the ''Version'' property of the corresponding ''VersionInformation''
            object, which is returned by ''ListDeviceDefinitionVersions'' requests. If the version
            is the last one that was associated with a device definition, the value also maps
            to the ''LatestVersion'' property of the corresponding ''DefinitionInformation'' object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionVersionCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.Greengrass module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetDeviceDefinitionVersionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetDeviceDefinitionVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeviceDefinitionVersionId parameter.
            The -PassThru parameter is deprecated, use -Select '^DeviceDefinitionVersionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionVersionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionVersionListCmdlet">
            <summary>
            Lists the versions of a device definition.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionVersionListCmdlet.DeviceDefinitionId">
            <summary>
            <para>
            The ID of the device definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionVersionListCmdlet.MaxResult">
            <summary>
            <para>
            The maximum number of results to be returned
            per request.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionVersionListCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Versions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListDeviceDefinitionVersionsResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListDeviceDefinitionVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeviceDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^DeviceDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGDeviceDefinitionVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionCmdlet">
            <summary>
            Retrieves information about a Lambda function definition, including its creation time
            and latest version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionCmdlet.FunctionDefinitionId">
            <summary>
            <para>
            The ID of the Lambda function definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetFunctionDefinitionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetFunctionDefinitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionListCmdlet">
            <summary>
            Retrieves a list of Lambda function definitions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionListCmdlet.MaxResult">
            <summary>
            <para>
            The maximum number of results to be returned
            per request.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionListCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Definitions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListFunctionDefinitionsResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListFunctionDefinitionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionVersionCmdlet">
            <summary>
            Retrieves information about a Lambda function definition version, including which
            Lambda functions are included in the version and their configurations.<br/><br/>In the AWS.Tools.Greengrass module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionVersionCmdlet.FunctionDefinitionId">
            <summary>
            <para>
            The ID of the Lambda function definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionVersionCmdlet.FunctionDefinitionVersionId">
            <summary>
            <para>
            The ID of the function definition
            version. This value maps to the ''Version'' property of the corresponding ''VersionInformation''
            object, which is returned by ''ListFunctionDefinitionVersions'' requests. If the version
            is the last one that was associated with a function definition, the value also maps
            to the ''LatestVersion'' property of the corresponding ''DefinitionInformation'' object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionVersionCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.Greengrass module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetFunctionDefinitionVersionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetFunctionDefinitionVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionDefinitionVersionId parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionDefinitionVersionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionVersionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionVersionListCmdlet">
            <summary>
            Lists the versions of a Lambda function definition.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionVersionListCmdlet.FunctionDefinitionId">
            <summary>
            <para>
            The ID of the Lambda function definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionVersionListCmdlet.MaxResult">
            <summary>
            <para>
            The maximum number of results to be returned
            per request.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionVersionListCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Versions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListFunctionDefinitionVersionsResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListFunctionDefinitionVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGFunctionDefinitionVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGGroupCmdlet">
            <summary>
            Retrieves information about a group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupCmdlet.GroupId">
            <summary>
            <para>
            The ID of the Greengrass group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetGroupResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGGroupCertificateAuthorityCmdlet">
            <summary>
            Retreives the CA associated with a group. Returns the public key of the CA.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupCertificateAuthorityCmdlet.CertificateAuthorityId">
            <summary>
            <para>
            The ID of the certificate authority.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupCertificateAuthorityCmdlet.GroupId">
            <summary>
            <para>
            The ID of the Greengrass group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupCertificateAuthorityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetGroupCertificateAuthorityResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetGroupCertificateAuthorityResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupCertificateAuthorityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateAuthorityId parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateAuthorityId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGGroupCertificateAuthorityListCmdlet">
            <summary>
            Retrieves the current CAs for a group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupCertificateAuthorityListCmdlet.GroupId">
            <summary>
            <para>
            The ID of the Greengrass group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupCertificateAuthorityListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GroupCertificateAuthorities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListGroupCertificateAuthoritiesResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListGroupCertificateAuthoritiesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupCertificateAuthorityListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGGroupCertificateConfigurationCmdlet">
            <summary>
            Retrieves the current configuration for the CA used by the group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupCertificateConfigurationCmdlet.GroupId">
            <summary>
            <para>
            The ID of the Greengrass group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupCertificateConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetGroupCertificateConfigurationResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetGroupCertificateConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupCertificateConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGGroupListCmdlet">
            <summary>
            Retrieves a list of groups.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupListCmdlet.MaxResult">
            <summary>
            <para>
            The maximum number of results to be returned
            per request.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupListCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Groups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListGroupsResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGGroupVersionCmdlet">
            <summary>
            Retrieves information about a group version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupVersionCmdlet.GroupId">
            <summary>
            <para>
            The ID of the Greengrass group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupVersionCmdlet.GroupVersionId">
            <summary>
            <para>
            The ID of the group version. This value
            maps to the ''Version'' property of the corresponding ''VersionInformation'' object,
            which is returned by ''ListGroupVersions'' requests. If the version is the last one
            that was associated with a group, the value also maps to the ''LatestVersion'' property
            of the corresponding ''GroupInformation'' object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetGroupVersionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetGroupVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupVersionId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupVersionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGGroupVersionListCmdlet">
            <summary>
            Lists the versions of a group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupVersionListCmdlet.GroupId">
            <summary>
            <para>
            The ID of the Greengrass group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupVersionListCmdlet.MaxResult">
            <summary>
            <para>
            The maximum number of results to be returned
            per request.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupVersionListCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Versions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListGroupVersionsResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListGroupVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGGroupVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionCmdlet">
            <summary>
            Retrieves information about a logger definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionCmdlet.LoggerDefinitionId">
            <summary>
            <para>
            The ID of the logger definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetLoggerDefinitionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetLoggerDefinitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LoggerDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^LoggerDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionListCmdlet">
            <summary>
            Retrieves a list of logger definitions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionListCmdlet.MaxResult">
            <summary>
            <para>
            The maximum number of results to be returned
            per request.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionListCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Definitions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListLoggerDefinitionsResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListLoggerDefinitionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionVersionCmdlet">
            <summary>
            Retrieves information about a logger definition version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionVersionCmdlet.LoggerDefinitionId">
            <summary>
            <para>
            The ID of the logger definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionVersionCmdlet.LoggerDefinitionVersionId">
            <summary>
            <para>
            The ID of the logger definition
            version. This value maps to the ''Version'' property of the corresponding ''VersionInformation''
            object, which is returned by ''ListLoggerDefinitionVersions'' requests. If the version
            is the last one that was associated with a logger definition, the value also maps
            to the ''LatestVersion'' property of the corresponding ''DefinitionInformation'' object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionVersionCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetLoggerDefinitionVersionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetLoggerDefinitionVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LoggerDefinitionVersionId parameter.
            The -PassThru parameter is deprecated, use -Select '^LoggerDefinitionVersionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionVersionListCmdlet">
            <summary>
            Lists the versions of a logger definition.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionVersionListCmdlet.LoggerDefinitionId">
            <summary>
            <para>
            The ID of the logger definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionVersionListCmdlet.MaxResult">
            <summary>
            <para>
            The maximum number of results to be returned
            per request.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionVersionListCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Versions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListLoggerDefinitionVersionsResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListLoggerDefinitionVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LoggerDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^LoggerDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGLoggerDefinitionVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionCmdlet">
            <summary>
            Retrieves information about a resource definition, including its creation time and
            latest version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionCmdlet.ResourceDefinitionId">
            <summary>
            <para>
            The ID of the resource definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetResourceDefinitionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetResourceDefinitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionListCmdlet">
            <summary>
            Retrieves a list of resource definitions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionListCmdlet.MaxResult">
            <summary>
            <para>
            The maximum number of results to be returned
            per request.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionListCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Definitions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListResourceDefinitionsResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListResourceDefinitionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionVersionCmdlet">
            <summary>
            Retrieves information about a resource definition version, including which resources
            are included in the version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionVersionCmdlet.ResourceDefinitionId">
            <summary>
            <para>
            The ID of the resource definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionVersionCmdlet.ResourceDefinitionVersionId">
            <summary>
            <para>
            The ID of the resource definition
            version. This value maps to the ''Version'' property of the corresponding ''VersionInformation''
            object, which is returned by ''ListResourceDefinitionVersions'' requests. If the version
            is the last one that was associated with a resource definition, the value also maps
            to the ''LatestVersion'' property of the corresponding ''DefinitionInformation'' object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetResourceDefinitionVersionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetResourceDefinitionVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceDefinitionVersionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceDefinitionVersionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionVersionListCmdlet">
            <summary>
            Lists the versions of a resource definition.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionVersionListCmdlet.ResourceDefinitionId">
            <summary>
            <para>
            The ID of the resource definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionVersionListCmdlet.MaxResult">
            <summary>
            <para>
            The maximum number of results to be returned
            per request.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionVersionListCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Versions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListResourceDefinitionVersionsResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListResourceDefinitionVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGResourceDefinitionVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGResourceTagCmdlet">
            <summary>
            Retrieves a list of resource tags for a resource arn.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            The Amazon Resource Name (ARN) of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGServiceRoleForAccountCmdlet">
            <summary>
            Retrieves the service role that is attached to your account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGServiceRoleForAccountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetServiceRoleForAccountResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetServiceRoleForAccountResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionCmdlet">
            <summary>
            Retrieves information about a subscription definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionCmdlet.SubscriptionDefinitionId">
            <summary>
            <para>
            The ID of the subscription definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetSubscriptionDefinitionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetSubscriptionDefinitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubscriptionDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^SubscriptionDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionListCmdlet">
            <summary>
            Retrieves a list of subscription definitions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionListCmdlet.MaxResult">
            <summary>
            <para>
            The maximum number of results to be returned
            per request.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionListCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Definitions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListSubscriptionDefinitionsResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListSubscriptionDefinitionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionVersionCmdlet">
            <summary>
            Retrieves information about a subscription definition version.<br/><br/>In the AWS.Tools.Greengrass module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionVersionCmdlet.SubscriptionDefinitionId">
            <summary>
            <para>
            The ID of the subscription definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionVersionCmdlet.SubscriptionDefinitionVersionId">
            <summary>
            <para>
            The ID of the subscription
            definition version. This value maps to the ''Version'' property of the corresponding
            ''VersionInformation'' object, which is returned by ''ListSubscriptionDefinitionVersions''
            requests. If the version is the last one that was associated with a subscription definition,
            the value also maps to the ''LatestVersion'' property of the corresponding ''DefinitionInformation''
            object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionVersionCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.Greengrass module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.GetSubscriptionDefinitionVersionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.GetSubscriptionDefinitionVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubscriptionDefinitionVersionId parameter.
            The -PassThru parameter is deprecated, use -Select '^SubscriptionDefinitionVersionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionVersionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionVersionListCmdlet">
            <summary>
            Lists the versions of a subscription definition.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionVersionListCmdlet.SubscriptionDefinitionId">
            <summary>
            <para>
            The ID of the subscription definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionVersionListCmdlet.MaxResult">
            <summary>
            <para>
            The maximum number of results to be returned
            per request.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionVersionListCmdlet.NextToken">
            <summary>
            <para>
            The token for the next set of results, or ''null''
            if there are no additional results.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Versions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ListSubscriptionDefinitionVersionsResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ListSubscriptionDefinitionVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubscriptionDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^SubscriptionDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.GetGGSubscriptionDefinitionVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.NewGGConnectorDefinitionCmdlet">
            <summary>
            Creates a connector definition. You may provide the initial version of the connector
            definition now or use ''CreateConnectorDefinitionVersion'' at a later time.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGConnectorDefinitionCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGConnectorDefinitionCmdlet.InitialVersion_Connector">
            <summary>
            <para>
            A list of references to connectors in this
            version, with their corresponding configuration settings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGConnectorDefinitionCmdlet.Name">
            <summary>
            <para>
            The name of the connector definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGConnectorDefinitionCmdlet.Tag">
            <summary>
            <para>
            Tag(s) to add to the new resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGConnectorDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.CreateConnectorDefinitionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.CreateConnectorDefinitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGConnectorDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGConnectorDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.NewGGConnectorDefinitionVersionCmdlet">
            <summary>
            Creates a version of a connector definition which has already been defined.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGConnectorDefinitionVersionCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGConnectorDefinitionVersionCmdlet.ConnectorDefinitionId">
            <summary>
            <para>
            The ID of the connector definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGConnectorDefinitionVersionCmdlet.Connector">
            <summary>
            <para>
            A list of references to connectors in this
            version, with their corresponding configuration settings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGConnectorDefinitionVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.CreateConnectorDefinitionVersionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.CreateConnectorDefinitionVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGConnectorDefinitionVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectorDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectorDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGConnectorDefinitionVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.NewGGCoreDefinitionCmdlet">
            <summary>
            Creates a core definition. You may provide the initial version of the core definition
            now or use ''CreateCoreDefinitionVersion'' at a later time. Greengrass groups must
            each contain exactly one Greengrass core.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGCoreDefinitionCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGCoreDefinitionCmdlet.InitialVersion_Core">
            <summary>
            <para>
            A list of cores in the core definition version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGCoreDefinitionCmdlet.Name">
            <summary>
            <para>
            The name of the core definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGCoreDefinitionCmdlet.Tag">
            <summary>
            <para>
            Tag(s) to add to the new resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGCoreDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.CreateCoreDefinitionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.CreateCoreDefinitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGCoreDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGCoreDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.NewGGCoreDefinitionVersionCmdlet">
            <summary>
            Creates a version of a core definition that has already been defined. Greengrass groups
            must each contain exactly one Greengrass core.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGCoreDefinitionVersionCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGCoreDefinitionVersionCmdlet.CoreDefinitionId">
            <summary>
            <para>
            The ID of the core definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGCoreDefinitionVersionCmdlet.Core">
            <summary>
            <para>
            A list of cores in the core definition version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGCoreDefinitionVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.CreateCoreDefinitionVersionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.CreateCoreDefinitionVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGCoreDefinitionVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CoreDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^CoreDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGCoreDefinitionVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.NewGGDeploymentCmdlet">
            <summary>
            Creates a deployment. ''CreateDeployment'' requests are idempotent with respect to
            the ''X-Amzn-Client-Token'' token and the request parameters.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeploymentCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeploymentCmdlet.DeploymentId">
            <summary>
            <para>
            The ID of the deployment if you wish to redeploy
            a previous deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeploymentCmdlet.DeploymentType">
            <summary>
            <para>
            The type of deployment. When used for ''CreateDeployment'',
            only ''NewDeployment'' and ''Redeployment'' are valid.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeploymentCmdlet.GroupId">
            <summary>
            <para>
            The ID of the Greengrass group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeploymentCmdlet.GroupVersionId">
            <summary>
            <para>
            The ID of the group version to be deployed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeploymentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.CreateDeploymentResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.CreateDeploymentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeploymentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeploymentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.NewGGDeviceDefinitionCmdlet">
            <summary>
            Creates a device definition. You may provide the initial version of the device definition
            now or use ''CreateDeviceDefinitionVersion'' at a later time.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeviceDefinitionCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeviceDefinitionCmdlet.InitialVersion_Device">
            <summary>
            <para>
            A list of devices in the definition version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeviceDefinitionCmdlet.Name">
            <summary>
            <para>
            The name of the device definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeviceDefinitionCmdlet.Tag">
            <summary>
            <para>
            Tag(s) to add to the new resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeviceDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.CreateDeviceDefinitionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.CreateDeviceDefinitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeviceDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeviceDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.NewGGDeviceDefinitionVersionCmdlet">
            <summary>
            Creates a version of a device definition that has already been defined.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeviceDefinitionVersionCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeviceDefinitionVersionCmdlet.DeviceDefinitionId">
            <summary>
            <para>
            The ID of the device definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeviceDefinitionVersionCmdlet.Device">
            <summary>
            <para>
            A list of devices in the definition version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeviceDefinitionVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.CreateDeviceDefinitionVersionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.CreateDeviceDefinitionVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeviceDefinitionVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeviceDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^DeviceDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGDeviceDefinitionVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionCmdlet">
            <summary>
            Creates a Lambda function definition which contains a list of Lambda functions and
            their configurations to be used in a group. You can create an initial version of the
            definition by providing a list of Lambda functions and their configurations now, or
            use ''CreateFunctionDefinitionVersion'' later.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionCmdlet.InitialVersion_Function">
            <summary>
            <para>
            A list of Lambda functions in this function
            definition version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionCmdlet.RunAs_Gid">
            <summary>
            <para>
            The group ID whose permissions are used to run a Lambda
            function.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionCmdlet.Execution_IsolationMode">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionCmdlet.Name">
            <summary>
            <para>
            The name of the function definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionCmdlet.Tag">
            <summary>
            <para>
            Tag(s) to add to the new resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionCmdlet.RunAs_Uid">
            <summary>
            <para>
            The user ID whose permissions are used to run a Lambda
            function.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.CreateFunctionDefinitionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.CreateFunctionDefinitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionVersionCmdlet">
            <summary>
            Creates a version of a Lambda function definition that has already been defined.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionVersionCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionVersionCmdlet.FunctionDefinitionId">
            <summary>
            <para>
            The ID of the Lambda function definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionVersionCmdlet.Function">
            <summary>
            <para>
            A list of Lambda functions in this function
            definition version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionVersionCmdlet.RunAs_Gid">
            <summary>
            <para>
            The group ID whose permissions are used to run a Lambda
            function.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionVersionCmdlet.Execution_IsolationMode">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionVersionCmdlet.RunAs_Uid">
            <summary>
            <para>
            The user ID whose permissions are used to run a Lambda
            function.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.CreateFunctionDefinitionVersionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.CreateFunctionDefinitionVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGFunctionDefinitionVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.NewGGGroupCmdlet">
            <summary>
            Creates a group. You may provide the initial version of the group or use ''CreateGroupVersion''
            at a later time. Tip: You can use the ''gg_group_setup'' package (https://github.com/awslabs/aws-greengrass-group-setup)
            as a library or command-line application to create and deploy Greengrass groups.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupCmdlet.InitialVersion_ConnectorDefinitionVersionArn">
            <summary>
            <para>
            The ARN of the connector
            definition version for this group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupCmdlet.InitialVersion_CoreDefinitionVersionArn">
            <summary>
            <para>
            The ARN of the core definition
            version for this group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupCmdlet.InitialVersion_DeviceDefinitionVersionArn">
            <summary>
            <para>
            The ARN of the device definition
            version for this group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupCmdlet.InitialVersion_FunctionDefinitionVersionArn">
            <summary>
            <para>
            The ARN of the function definition
            version for this group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupCmdlet.InitialVersion_LoggerDefinitionVersionArn">
            <summary>
            <para>
            The ARN of the logger definition
            version for this group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupCmdlet.Name">
            <summary>
            <para>
            The name of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupCmdlet.InitialVersion_ResourceDefinitionVersionArn">
            <summary>
            <para>
            The ARN of the resource definition
            version for this group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupCmdlet.InitialVersion_SubscriptionDefinitionVersionArn">
            <summary>
            <para>
            The ARN of the subscription
            definition version for this group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupCmdlet.Tag">
            <summary>
            <para>
            Tag(s) to add to the new resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.CreateGroupResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.CreateGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.NewGGGroupCertificateAuthorityCmdlet">
            <summary>
            Creates a CA for the group. If a CA already exists, it will rotate the existing CA.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupCertificateAuthorityCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupCertificateAuthorityCmdlet.GroupId">
            <summary>
            <para>
            The ID of the Greengrass group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupCertificateAuthorityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GroupCertificateAuthorityArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.CreateGroupCertificateAuthorityResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.CreateGroupCertificateAuthorityResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupCertificateAuthorityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupCertificateAuthorityCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.NewGGGroupVersionCmdlet">
            <summary>
            Creates a version of a group which has already been defined.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupVersionCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupVersionCmdlet.ConnectorDefinitionVersionArn">
            <summary>
            <para>
            The ARN of the connector
            definition version for this group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupVersionCmdlet.CoreDefinitionVersionArn">
            <summary>
            <para>
            The ARN of the core definition
            version for this group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupVersionCmdlet.DeviceDefinitionVersionArn">
            <summary>
            <para>
            The ARN of the device definition
            version for this group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupVersionCmdlet.FunctionDefinitionVersionArn">
            <summary>
            <para>
            The ARN of the function definition
            version for this group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupVersionCmdlet.GroupId">
            <summary>
            <para>
            The ID of the Greengrass group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupVersionCmdlet.LoggerDefinitionVersionArn">
            <summary>
            <para>
            The ARN of the logger definition
            version for this group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupVersionCmdlet.ResourceDefinitionVersionArn">
            <summary>
            <para>
            The ARN of the resource definition
            version for this group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupVersionCmdlet.SubscriptionDefinitionVersionArn">
            <summary>
            <para>
            The ARN of the subscription
            definition version for this group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.CreateGroupVersionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.CreateGroupVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGGroupVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.NewGGLoggerDefinitionCmdlet">
            <summary>
            Creates a logger definition. You may provide the initial version of the logger definition
            now or use ''CreateLoggerDefinitionVersion'' at a later time.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGLoggerDefinitionCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGLoggerDefinitionCmdlet.InitialVersion_Logger">
            <summary>
            <para>
            A list of loggers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGLoggerDefinitionCmdlet.Name">
            <summary>
            <para>
            The name of the logger definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGLoggerDefinitionCmdlet.Tag">
            <summary>
            <para>
            Tag(s) to add to the new resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGLoggerDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.CreateLoggerDefinitionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.CreateLoggerDefinitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGLoggerDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGLoggerDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.NewGGLoggerDefinitionVersionCmdlet">
            <summary>
            Creates a version of a logger definition that has already been defined.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGLoggerDefinitionVersionCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGLoggerDefinitionVersionCmdlet.LoggerDefinitionId">
            <summary>
            <para>
            The ID of the logger definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGLoggerDefinitionVersionCmdlet.Logger">
            <summary>
            <para>
            A list of loggers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGLoggerDefinitionVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.CreateLoggerDefinitionVersionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.CreateLoggerDefinitionVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGLoggerDefinitionVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LoggerDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^LoggerDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGLoggerDefinitionVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.NewGGResourceDefinitionCmdlet">
            <summary>
            Creates a resource definition which contains a list of resources to be used in a group.
            You can create an initial version of the definition by providing a list of resources
            now, or use ''CreateResourceDefinitionVersion'' later.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGResourceDefinitionCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGResourceDefinitionCmdlet.Name">
            <summary>
            <para>
            The name of the resource definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGResourceDefinitionCmdlet.InitialVersion_Resource">
            <summary>
            <para>
            A list of resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGResourceDefinitionCmdlet.Tag">
            <summary>
            <para>
            Tag(s) to add to the new resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGResourceDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.CreateResourceDefinitionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.CreateResourceDefinitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGResourceDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGResourceDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.NewGGResourceDefinitionVersionCmdlet">
            <summary>
            Creates a version of a resource definition that has already been defined.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGResourceDefinitionVersionCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGResourceDefinitionVersionCmdlet.ResourceDefinitionId">
            <summary>
            <para>
            The ID of the resource definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGResourceDefinitionVersionCmdlet.Resource">
            <summary>
            <para>
            A list of resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGResourceDefinitionVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.CreateResourceDefinitionVersionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.CreateResourceDefinitionVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGResourceDefinitionVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGResourceDefinitionVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.NewGGSoftwareUpdateJobCmdlet">
            <summary>
            Creates a software update for a core or group of cores (specified as an IoT thing
            group.) Use this to update the OTA Agent as well as the Greengrass core software.
            It makes use of the IoT Jobs feature which provides additional commands to manage
            a Greengrass core software update job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSoftwareUpdateJobCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSoftwareUpdateJobCmdlet.S3UrlSignerRole">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSoftwareUpdateJobCmdlet.SoftwareToUpdate">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSoftwareUpdateJobCmdlet.UpdateAgentLogLevel">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSoftwareUpdateJobCmdlet.UpdateTarget">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSoftwareUpdateJobCmdlet.UpdateTargetsArchitecture">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSoftwareUpdateJobCmdlet.UpdateTargetsOperatingSystem">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSoftwareUpdateJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.CreateSoftwareUpdateJobResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.CreateSoftwareUpdateJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSoftwareUpdateJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.NewGGSubscriptionDefinitionCmdlet">
            <summary>
            Creates a subscription definition. You may provide the initial version of the subscription
            definition now or use ''CreateSubscriptionDefinitionVersion'' at a later time.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSubscriptionDefinitionCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSubscriptionDefinitionCmdlet.Name">
            <summary>
            <para>
            The name of the subscription definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSubscriptionDefinitionCmdlet.InitialVersion_Subscription">
            <summary>
            <para>
            A list of subscriptions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSubscriptionDefinitionCmdlet.Tag">
            <summary>
            <para>
            Tag(s) to add to the new resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSubscriptionDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.CreateSubscriptionDefinitionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.CreateSubscriptionDefinitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSubscriptionDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSubscriptionDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.NewGGSubscriptionDefinitionVersionCmdlet">
            <summary>
            Creates a version of a subscription definition which has already been defined.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSubscriptionDefinitionVersionCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSubscriptionDefinitionVersionCmdlet.SubscriptionDefinitionId">
            <summary>
            <para>
            The ID of the subscription definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSubscriptionDefinitionVersionCmdlet.Subscription">
            <summary>
            <para>
            A list of subscriptions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSubscriptionDefinitionVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.CreateSubscriptionDefinitionVersionResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.CreateSubscriptionDefinitionVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSubscriptionDefinitionVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubscriptionDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^SubscriptionDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.NewGGSubscriptionDefinitionVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.RemoveGGConnectorDefinitionCmdlet">
            <summary>
            Deletes a connector definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGConnectorDefinitionCmdlet.ConnectorDefinitionId">
            <summary>
            <para>
            The ID of the connector definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGConnectorDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.DeleteConnectorDefinitionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGConnectorDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectorDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectorDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGConnectorDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.RemoveGGCoreDefinitionCmdlet">
            <summary>
            Deletes a core definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGCoreDefinitionCmdlet.CoreDefinitionId">
            <summary>
            <para>
            The ID of the core definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGCoreDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.DeleteCoreDefinitionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGCoreDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CoreDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^CoreDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGCoreDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.RemoveGGDeviceDefinitionCmdlet">
            <summary>
            Deletes a device definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGDeviceDefinitionCmdlet.DeviceDefinitionId">
            <summary>
            <para>
            The ID of the device definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGDeviceDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.DeleteDeviceDefinitionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGDeviceDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DeviceDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^DeviceDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGDeviceDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.RemoveGGFunctionDefinitionCmdlet">
            <summary>
            Deletes a Lambda function definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGFunctionDefinitionCmdlet.FunctionDefinitionId">
            <summary>
            <para>
            The ID of the Lambda function definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGFunctionDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.DeleteFunctionDefinitionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGFunctionDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGFunctionDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.RemoveGGGroupCmdlet">
            <summary>
            Deletes a group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGGroupCmdlet.GroupId">
            <summary>
            <para>
            The ID of the Greengrass group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.DeleteGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.RemoveGGLoggerDefinitionCmdlet">
            <summary>
            Deletes a logger definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGLoggerDefinitionCmdlet.LoggerDefinitionId">
            <summary>
            <para>
            The ID of the logger definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGLoggerDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.DeleteLoggerDefinitionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGLoggerDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LoggerDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^LoggerDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGLoggerDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.RemoveGGResourceDefinitionCmdlet">
            <summary>
            Deletes a resource definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGResourceDefinitionCmdlet.ResourceDefinitionId">
            <summary>
            <para>
            The ID of the resource definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGResourceDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.DeleteResourceDefinitionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGResourceDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGResourceDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.RemoveGGResourceTagCmdlet">
            <summary>
            Remove resource tags from a Greengrass Resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            The Amazon Resource Name (ARN) of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGResourceTagCmdlet.TagKey">
            <summary>
            <para>
            An array of tag keys to delete
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.RemoveGGRoleFromGroupCmdlet">
            <summary>
            Disassociates the role from a group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGRoleFromGroupCmdlet.GroupId">
            <summary>
            <para>
            The ID of the Greengrass group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGRoleFromGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DisassociatedAt'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.DisassociateRoleFromGroupResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.DisassociateRoleFromGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGRoleFromGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGRoleFromGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.RemoveGGServiceRoleFromAccountCmdlet">
            <summary>
            Disassociates the service role from your account. Without a service role, deployments
            will not work.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGServiceRoleFromAccountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DisassociatedAt'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.DisassociateServiceRoleFromAccountResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.DisassociateServiceRoleFromAccountResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGServiceRoleFromAccountCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.RemoveGGSubscriptionDefinitionCmdlet">
            <summary>
            Deletes a subscription definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGSubscriptionDefinitionCmdlet.SubscriptionDefinitionId">
            <summary>
            <para>
            The ID of the subscription definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGSubscriptionDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.DeleteSubscriptionDefinitionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGSubscriptionDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SubscriptionDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^SubscriptionDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.RemoveGGSubscriptionDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.ResetGGDeploymentCmdlet">
            <summary>
            Resets a group's deployments.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.ResetGGDeploymentCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.ResetGGDeploymentCmdlet.BestEffort">
            <summary>
            <para>
            If true, performs a best-effort only core reset.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.ResetGGDeploymentCmdlet.GroupId">
            <summary>
            <para>
            The ID of the Greengrass group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.ResetGGDeploymentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.ResetDeploymentsResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.ResetDeploymentsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.ResetGGDeploymentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.ResetGGDeploymentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.StartGGBulkDeploymentCmdlet">
            <summary>
            Deploys multiple groups in one operation. This action starts the bulk deployment of
            a specified set of group versions. Each group version deployment will be triggered
            with an adaptive rate that has a fixed upper limit. We recommend that you include
            an ''X-Amzn-Client-Token'' token in every ''StartBulkDeployment'' request. These requests
            are idempotent with respect to the token and the request parameters.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.StartGGBulkDeploymentCmdlet.AmznClientToken">
            <summary>
            <para>
            A client token used to correlate requests
            and responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.StartGGBulkDeploymentCmdlet.ExecutionRoleArn">
            <summary>
            <para>
            The ARN of the execution role to associate
            with the bulk deployment operation. This IAM role must allow the ''greengrass:CreateDeployment''
            action for all group versions that are listed in the input file. This IAM role must
            have access to the S3 bucket containing the input file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.StartGGBulkDeploymentCmdlet.InputFileUri">
            <summary>
            <para>
            The URI of the input file contained in the
            S3 bucket. The execution role must have ''getObject'' permissions on this bucket to
            access the input file. The input file is a JSON-serialized, line delimited file with
            UTF-8 encoding that provides a list of group and version IDs and the deployment type.
            This file must be less than 100 MB. Currently, AWS IoT Greengrass supports only ''NewDeployment''
            deployment types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.StartGGBulkDeploymentCmdlet.Tag">
            <summary>
            <para>
            Tag(s) to add to the new resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.StartGGBulkDeploymentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.StartBulkDeploymentResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.StartBulkDeploymentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.StartGGBulkDeploymentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InputFileUri parameter.
            The -PassThru parameter is deprecated, use -Select '^InputFileUri' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.StartGGBulkDeploymentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.StopGGBulkDeploymentCmdlet">
            <summary>
            Stops the execution of a bulk deployment. This action returns a status of ''Stopping''
            until the deployment is stopped. You cannot start a new bulk deployment while a previous
            deployment is in the ''Stopping'' state. This action doesn't rollback completed deployments
            or cancel pending deployments.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.StopGGBulkDeploymentCmdlet.BulkDeploymentId">
            <summary>
            <para>
            The ID of the bulk deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.StopGGBulkDeploymentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.StopBulkDeploymentResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.StopGGBulkDeploymentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BulkDeploymentId parameter.
            The -PassThru parameter is deprecated, use -Select '^BulkDeploymentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.StopGGBulkDeploymentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.UpdateGGConnectivityInfoCmdlet">
            <summary>
            Updates the connectivity information for the core. Any devices that belong to the
            group which has this core will receive this information in order to find the location
            of the core and connect to it.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGConnectivityInfoCmdlet.ConnectivityInfo">
            <summary>
            <para>
            A list of connectivity info.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGConnectivityInfoCmdlet.ThingName">
            <summary>
            <para>
            The thing name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGConnectivityInfoCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.UpdateConnectivityInfoResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.UpdateConnectivityInfoResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGConnectivityInfoCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThingName parameter.
            The -PassThru parameter is deprecated, use -Select '^ThingName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGConnectivityInfoCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.UpdateGGConnectorDefinitionCmdlet">
            <summary>
            Updates a connector definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGConnectorDefinitionCmdlet.ConnectorDefinitionId">
            <summary>
            <para>
            The ID of the connector definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGConnectorDefinitionCmdlet.Name">
            <summary>
            <para>
            The name of the definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGConnectorDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.UpdateConnectorDefinitionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGConnectorDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectorDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectorDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGConnectorDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.UpdateGGCoreDefinitionCmdlet">
            <summary>
            Updates a core definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGCoreDefinitionCmdlet.CoreDefinitionId">
            <summary>
            <para>
            The ID of the core definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGCoreDefinitionCmdlet.Name">
            <summary>
            <para>
            The name of the definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGCoreDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.UpdateCoreDefinitionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGCoreDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGCoreDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.UpdateGGDeviceDefinitionCmdlet">
            <summary>
            Updates a device definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGDeviceDefinitionCmdlet.DeviceDefinitionId">
            <summary>
            <para>
            The ID of the device definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGDeviceDefinitionCmdlet.Name">
            <summary>
            <para>
            The name of the definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGDeviceDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.UpdateDeviceDefinitionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGDeviceDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGDeviceDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.UpdateGGFunctionDefinitionCmdlet">
            <summary>
            Updates a Lambda function definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGFunctionDefinitionCmdlet.FunctionDefinitionId">
            <summary>
            <para>
            The ID of the Lambda function definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGFunctionDefinitionCmdlet.Name">
            <summary>
            <para>
            The name of the definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGFunctionDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.UpdateFunctionDefinitionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGFunctionDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGFunctionDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.UpdateGGGroupCmdlet">
            <summary>
            Updates a group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGGroupCmdlet.GroupId">
            <summary>
            <para>
            The ID of the Greengrass group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGGroupCmdlet.Name">
            <summary>
            <para>
            The name of the definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.UpdateGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.UpdateGGGroupCertificateConfigurationCmdlet">
            <summary>
            Updates the Certificate expiry time for a group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGGroupCertificateConfigurationCmdlet.CertificateExpiryInMillisecond">
            <summary>
            <para>
            The amount of time remaining
            before the certificate expires, in milliseconds.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGGroupCertificateConfigurationCmdlet.GroupId">
            <summary>
            <para>
            The ID of the Greengrass group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGGroupCertificateConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.UpdateGroupCertificateConfigurationResponse).
            Specifying the name of a property of type Amazon.Greengrass.Model.UpdateGroupCertificateConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGGroupCertificateConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateExpiryInMillisecond parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateExpiryInMillisecond' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGGroupCertificateConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.UpdateGGLoggerDefinitionCmdlet">
            <summary>
            Updates a logger definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGLoggerDefinitionCmdlet.LoggerDefinitionId">
            <summary>
            <para>
            The ID of the logger definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGLoggerDefinitionCmdlet.Name">
            <summary>
            <para>
            The name of the definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGLoggerDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.UpdateLoggerDefinitionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGLoggerDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGLoggerDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.UpdateGGResourceDefinitionCmdlet">
            <summary>
            Updates a resource definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGResourceDefinitionCmdlet.Name">
            <summary>
            <para>
            The name of the definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGResourceDefinitionCmdlet.ResourceDefinitionId">
            <summary>
            <para>
            The ID of the resource definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGResourceDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.UpdateResourceDefinitionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGResourceDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGResourceDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GG.UpdateGGSubscriptionDefinitionCmdlet">
            <summary>
            Updates a subscription definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGSubscriptionDefinitionCmdlet.Name">
            <summary>
            <para>
            The name of the definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGSubscriptionDefinitionCmdlet.SubscriptionDefinitionId">
            <summary>
            <para>
            The ID of the subscription definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGSubscriptionDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Greengrass.Model.UpdateSubscriptionDefinitionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGSubscriptionDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GG.UpdateGGSubscriptionDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
