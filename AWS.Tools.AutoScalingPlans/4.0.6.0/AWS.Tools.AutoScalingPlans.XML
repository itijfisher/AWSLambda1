<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.AutoScalingPlans</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanCmdlet">
            <summary>
            Describes one or more of your scaling plans.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanCmdlet.ApplicationSource">
            <summary>
            <para>
            <para>The sources for the applications (up to 10). If you specify scaling plan names, you
            cannot specify application sources.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanCmdlet.ScalingPlanName">
            <summary>
            <para>
            <para>The names of the scaling plans (up to 10). If you specify application sources, you
            cannot specify scaling plan names.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanCmdlet.ScalingPlanVersion">
            <summary>
            <para>
            <para>The version number of the scaling plan. If you specify a scaling plan version, you
            must also specify a scaling plan name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of scalable resources to return. This value can be between 1 and
            50. The default value is 50.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ScalingPlans'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScalingPlans.Model.DescribeScalingPlansResponse).
            Specifying the name of a property of type Amazon.AutoScalingPlans.Model.DescribeScalingPlansResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScalingPlanName parameter.
            The -PassThru parameter is deprecated, use -Select '^ScalingPlanName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanResourceCmdlet">
            <summary>
            Describes the scalable resources in the specified scaling plan.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanResourceCmdlet.ScalingPlanName">
            <summary>
            <para>
            <para>The name of the scaling plan.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanResourceCmdlet.ScalingPlanVersion">
            <summary>
            <para>
            <para>The version number of the scaling plan.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanResourceCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of scalable resources to return. The value must be between 1 and
            50. The default value is 50.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>50</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanResourceCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ScalingPlanResources'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScalingPlans.Model.DescribeScalingPlanResourcesResponse).
            Specifying the name of a property of type Amazon.AutoScalingPlans.Model.DescribeScalingPlanResourcesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScalingPlanName parameter.
            The -PassThru parameter is deprecated, use -Select '^ScalingPlanName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanResourceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanResourceForecastDataCmdlet">
            <summary>
            Retrieves the forecast data for a scalable resource.
            
             
            <para>
            Capacity forecasts are represented as predicted values, or data points, that are calculated
            using historical data points from a specified CloudWatch load metric. Data points
            are available for up to 56 days. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanResourceForecastDataCmdlet.EndTime">
            <summary>
            <para>
            <para>The exclusive end time of the time range for the forecast data to get. The maximum
            time duration between the start and end time is seven days. </para><para>Although this parameter can accept a date and time that is more than two days in the
            future, the availability of forecast data has limits. AWS Auto Scaling only issues
            forecasts for periods of two days in advance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanResourceForecastDataCmdlet.ForecastDataType">
            <summary>
            <para>
            <para>The type of forecast data to get.</para><ul><li><para><code>LoadForecast</code>: The load metric forecast. </para></li><li><para><code>CapacityForecast</code>: The capacity forecast. </para></li><li><para><code>ScheduledActionMinCapacity</code>: The minimum capacity for each scheduled
            scaling action. This data is calculated as the larger of two values: the capacity
            forecast or the minimum capacity in the scaling instruction.</para></li><li><para><code>ScheduledActionMaxCapacity</code>: The maximum capacity for each scheduled
            scaling action. The calculation used is determined by the predictive scaling maximum
            capacity behavior setting in the scaling instruction.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanResourceForecastDataCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of the resource. This string consists of the resource type and unique identifier.
            </para><ul><li><para>Auto Scaling group - The resource type is <code>autoScalingGroup</code> and the unique
            identifier is the name of the Auto Scaling group. Example: <code>autoScalingGroup/my-asg</code>.</para></li><li><para>ECS service - The resource type is <code>service</code> and the unique identifier
            is the cluster name and service name. Example: <code>service/default/sample-webapp</code>.</para></li><li><para>Spot Fleet request - The resource type is <code>spot-fleet-request</code> and the
            unique identifier is the Spot Fleet request ID. Example: <code>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</code>.</para></li><li><para>DynamoDB table - The resource type is <code>table</code> and the unique identifier
            is the resource ID. Example: <code>table/my-table</code>.</para></li><li><para>DynamoDB global secondary index - The resource type is <code>index</code> and the
            unique identifier is the resource ID. Example: <code>table/my-table/index/my-table-index</code>.</para></li><li><para>Aurora DB cluster - The resource type is <code>cluster</code> and the unique identifier
            is the cluster name. Example: <code>cluster:my-db-cluster</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanResourceForecastDataCmdlet.ScalableDimension">
            <summary>
            <para>
            <para>The scalable dimension for the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanResourceForecastDataCmdlet.ScalingPlanName">
            <summary>
            <para>
            <para>The name of the scaling plan.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanResourceForecastDataCmdlet.ScalingPlanVersion">
            <summary>
            <para>
            <para>The version number of the scaling plan.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanResourceForecastDataCmdlet.ServiceNamespace">
            <summary>
            <para>
            <para>The namespace of the AWS service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanResourceForecastDataCmdlet.StartTime">
            <summary>
            <para>
            <para>The inclusive start time of the time range for the forecast data to get. The date
            and time can be at most 56 days before the current date and time. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanResourceForecastDataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Datapoints'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScalingPlans.Model.GetScalingPlanResourceForecastDataResponse).
            Specifying the name of a property of type Amazon.AutoScalingPlans.Model.GetScalingPlanResourceForecastDataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.GetASPScalingPlanResourceForecastDataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScalingPlanName parameter.
            The -PassThru parameter is deprecated, use -Select '^ScalingPlanName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASP.NewASPScalingPlanCmdlet">
            <summary>
            Creates a scaling plan.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.NewASPScalingPlanCmdlet.ApplicationSource_CloudFormationStackARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of a AWS CloudFormation stack.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.NewASPScalingPlanCmdlet.ScalingInstruction">
            <summary>
            <para>
            <para>The scaling instructions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.NewASPScalingPlanCmdlet.ScalingPlanName">
            <summary>
            <para>
            <para>The name of the scaling plan. Names cannot contain vertical bars, colons, or forward
            slashes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.NewASPScalingPlanCmdlet.ApplicationSource_TagFilter">
            <summary>
            <para>
            <para>A set of tags (up to 50).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.NewASPScalingPlanCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ScalingPlanVersion'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScalingPlans.Model.CreateScalingPlanResponse).
            Specifying the name of a property of type Amazon.AutoScalingPlans.Model.CreateScalingPlanResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.NewASPScalingPlanCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScalingPlanName parameter.
            The -PassThru parameter is deprecated, use -Select '^ScalingPlanName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.NewASPScalingPlanCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASP.RemoveASPScalingPlanCmdlet">
            <summary>
            Deletes the specified scaling plan.
            
             
            <para>
            Deleting a scaling plan deletes the underlying <a>ScalingInstruction</a> for all of
            the scalable resources that are covered by the plan.
            </para><para>
            If the plan has launched resources or has scaling activities in progress, you must
            delete those resources separately.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.RemoveASPScalingPlanCmdlet.ScalingPlanName">
            <summary>
            <para>
            <para>The name of the scaling plan.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.RemoveASPScalingPlanCmdlet.ScalingPlanVersion">
            <summary>
            <para>
            <para>The version number of the scaling plan.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.RemoveASPScalingPlanCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScalingPlans.Model.DeleteScalingPlanResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.RemoveASPScalingPlanCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScalingPlanName parameter.
            The -PassThru parameter is deprecated, use -Select '^ScalingPlanName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.RemoveASPScalingPlanCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ASP.UpdateASPScalingPlanCmdlet">
            <summary>
            Updates the specified scaling plan.
            
             
            <para>
            You cannot update a scaling plan if it is in the process of being created, updated,
            or deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.UpdateASPScalingPlanCmdlet.ApplicationSource_CloudFormationStackARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of a AWS CloudFormation stack.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.UpdateASPScalingPlanCmdlet.ScalingInstruction">
            <summary>
            <para>
            <para>The scaling instructions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.UpdateASPScalingPlanCmdlet.ScalingPlanName">
            <summary>
            <para>
            <para>The name of the scaling plan.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.UpdateASPScalingPlanCmdlet.ScalingPlanVersion">
            <summary>
            <para>
            <para>The version number of the scaling plan.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.UpdateASPScalingPlanCmdlet.ApplicationSource_TagFilter">
            <summary>
            <para>
            <para>A set of tags (up to 50).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.UpdateASPScalingPlanCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScalingPlans.Model.UpdateScalingPlanResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.UpdateASPScalingPlanCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ScalingPlanName parameter.
            The -PassThru parameter is deprecated, use -Select '^ScalingPlanName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ASP.UpdateASPScalingPlanCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
